/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/configurationProfileAssignmentsMappers";
import * as Parameters from "../models/parameters";
import { AutomanageClientContext } from "../automanageClientContext";

/** Class representing a ConfigurationProfileAssignments. */
export class ConfigurationProfileAssignments {
  private readonly client: AutomanageClientContext;

  /**
   * Create a ConfigurationProfileAssignments.
   * @param {AutomanageClientContext} client Reference to the service client.
   */
  constructor(client: AutomanageClientContext) {
    this.client = client;
  }

  /**
   * Creates an association between a VM and Automanage configuration profile
   * @param configurationProfileAssignmentName Name of the configuration profile assignment. Only
   * default is supported.
   * @param parameters Parameters supplied to the create or update configuration profile assignment.
   * @param resourceGroupName The resource group name.
   * @param vmName The name of the virtual machine.
   * @param [options] The optional parameters
   * @returns Promise<Models.ConfigurationProfileAssignmentsCreateOrUpdateResponse>
   */
  createOrUpdate(configurationProfileAssignmentName: string, parameters: Models.ConfigurationProfileAssignment, resourceGroupName: string, vmName: string, options?: msRest.RequestOptionsBase): Promise<Models.ConfigurationProfileAssignmentsCreateOrUpdateResponse> {
    return this.beginCreateOrUpdate(configurationProfileAssignmentName,parameters,resourceGroupName,vmName,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.ConfigurationProfileAssignmentsCreateOrUpdateResponse>;
  }

  /**
   * Get information about a configuration profile assignment
   * @param resourceGroupName The resource group name.
   * @param configurationProfileAssignmentName The configuration profile assignment name.
   * @param vmName The name of the virtual machine.
   * @param [options] The optional parameters
   * @returns Promise<Models.ConfigurationProfileAssignmentsGetResponse>
   */
  get(resourceGroupName: string, configurationProfileAssignmentName: string, vmName: string, options?: msRest.RequestOptionsBase): Promise<Models.ConfigurationProfileAssignmentsGetResponse>;
  /**
   * @param resourceGroupName The resource group name.
   * @param configurationProfileAssignmentName The configuration profile assignment name.
   * @param vmName The name of the virtual machine.
   * @param callback The callback
   */
  get(resourceGroupName: string, configurationProfileAssignmentName: string, vmName: string, callback: msRest.ServiceCallback<Models.ConfigurationProfileAssignment>): void;
  /**
   * @param resourceGroupName The resource group name.
   * @param configurationProfileAssignmentName The configuration profile assignment name.
   * @param vmName The name of the virtual machine.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, configurationProfileAssignmentName: string, vmName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ConfigurationProfileAssignment>): void;
  get(resourceGroupName: string, configurationProfileAssignmentName: string, vmName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ConfigurationProfileAssignment>, callback?: msRest.ServiceCallback<Models.ConfigurationProfileAssignment>): Promise<Models.ConfigurationProfileAssignmentsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        configurationProfileAssignmentName,
        vmName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.ConfigurationProfileAssignmentsGetResponse>;
  }

  /**
   * Delete a configuration profile assignment
   * @param resourceGroupName The resource group name.
   * @param configurationProfileAssignmentName Name of the configuration profile assignment
   * @param vmName The name of the virtual machine.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, configurationProfileAssignmentName: string, vmName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param resourceGroupName The resource group name.
   * @param configurationProfileAssignmentName Name of the configuration profile assignment
   * @param vmName The name of the virtual machine.
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, configurationProfileAssignmentName: string, vmName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceGroupName The resource group name.
   * @param configurationProfileAssignmentName Name of the configuration profile assignment
   * @param vmName The name of the virtual machine.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, configurationProfileAssignmentName: string, vmName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(resourceGroupName: string, configurationProfileAssignmentName: string, vmName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        configurationProfileAssignmentName,
        vmName,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }

  /**
   * Get list of configuration profile assignments
   * @param resourceGroupName The resource group name.
   * @param [options] The optional parameters
   * @returns Promise<Models.ConfigurationProfileAssignmentsListResponse>
   */
  list(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.ConfigurationProfileAssignmentsListResponse>;
  /**
   * @param resourceGroupName The resource group name.
   * @param callback The callback
   */
  list(resourceGroupName: string, callback: msRest.ServiceCallback<Models.ConfigurationProfileAssignmentList>): void;
  /**
   * @param resourceGroupName The resource group name.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ConfigurationProfileAssignmentList>): void;
  list(resourceGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ConfigurationProfileAssignmentList>, callback?: msRest.ServiceCallback<Models.ConfigurationProfileAssignmentList>): Promise<Models.ConfigurationProfileAssignmentsListResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.ConfigurationProfileAssignmentsListResponse>;
  }

  /**
   * Get list of configuration profile assignments under a given subscription
   * @param [options] The optional parameters
   * @returns Promise<Models.ConfigurationProfileAssignmentsListBySubscriptionResponse>
   */
  listBySubscription(options?: msRest.RequestOptionsBase): Promise<Models.ConfigurationProfileAssignmentsListBySubscriptionResponse>;
  /**
   * @param callback The callback
   */
  listBySubscription(callback: msRest.ServiceCallback<Models.ConfigurationProfileAssignmentList>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  listBySubscription(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ConfigurationProfileAssignmentList>): void;
  listBySubscription(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ConfigurationProfileAssignmentList>, callback?: msRest.ServiceCallback<Models.ConfigurationProfileAssignmentList>): Promise<Models.ConfigurationProfileAssignmentsListBySubscriptionResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listBySubscriptionOperationSpec,
      callback) as Promise<Models.ConfigurationProfileAssignmentsListBySubscriptionResponse>;
  }

  /**
   * Creates an association between a VM and Automanage configuration profile
   * @param configurationProfileAssignmentName Name of the configuration profile assignment. Only
   * default is supported.
   * @param parameters Parameters supplied to the create or update configuration profile assignment.
   * @param resourceGroupName The resource group name.
   * @param vmName The name of the virtual machine.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginCreateOrUpdate(configurationProfileAssignmentName: string, parameters: Models.ConfigurationProfileAssignment, resourceGroupName: string, vmName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        configurationProfileAssignmentName,
        parameters,
        resourceGroupName,
        vmName,
        options
      },
      beginCreateOrUpdateOperationSpec,
      options);
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/providers/Microsoft.Automanage/configurationProfileAssignments/{configurationProfileAssignmentName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.configurationProfileAssignmentName,
    Parameters.subscriptionId,
    Parameters.vmName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ConfigurationProfileAssignment
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/providers/Microsoft.Automanage/configurationProfileAssignments/{configurationProfileAssignmentName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.configurationProfileAssignmentName,
    Parameters.subscriptionId,
    Parameters.vmName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automanage/configurationProfileAssignments",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ConfigurationProfileAssignmentList
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listBySubscriptionOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.Automanage/configurationProfileAssignments",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ConfigurationProfileAssignmentList
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const beginCreateOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/providers/Microsoft.Automanage/configurationProfileAssignments/{configurationProfileAssignmentName}",
  urlParameters: [
    Parameters.configurationProfileAssignmentName,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.vmName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.ConfigurationProfileAssignment,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.ConfigurationProfileAssignment
    },
    201: {
      bodyMapper: Mappers.ConfigurationProfileAssignment
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
