/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ConfigurationProfile,
  ConfigurationProfilesListByResourceGroupOptionalParams,
  ConfigurationProfilesListBySubscriptionOptionalParams,
  ConfigurationProfilesCreateOrUpdateOptionalParams,
  ConfigurationProfilesCreateOrUpdateResponse,
  ConfigurationProfilesGetOptionalParams,
  ConfigurationProfilesGetResponse,
  ConfigurationProfilesDeleteOptionalParams,
  ConfigurationProfileUpdate,
  ConfigurationProfilesUpdateOptionalParams,
  ConfigurationProfilesUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ConfigurationProfiles. */
export interface ConfigurationProfiles {
  /**
   * Retrieve a list of configuration profile within a given resource group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: ConfigurationProfilesListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<ConfigurationProfile>;
  /**
   * Retrieve a list of configuration profile within a subscription
   * @param options The options parameters.
   */
  listBySubscription(
    options?: ConfigurationProfilesListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<ConfigurationProfile>;
  /**
   * Creates a configuration profile
   * @param configurationProfileName Name of the configuration profile.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param parameters Parameters supplied to create or update configuration profile.
   * @param options The options parameters.
   */
  createOrUpdate(
    configurationProfileName: string,
    resourceGroupName: string,
    parameters: ConfigurationProfile,
    options?: ConfigurationProfilesCreateOrUpdateOptionalParams
  ): Promise<ConfigurationProfilesCreateOrUpdateResponse>;
  /**
   * Get information about a configuration profile
   * @param configurationProfileName The configuration profile name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  get(
    configurationProfileName: string,
    resourceGroupName: string,
    options?: ConfigurationProfilesGetOptionalParams
  ): Promise<ConfigurationProfilesGetResponse>;
  /**
   * Delete a configuration profile
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param configurationProfileName Name of the configuration profile
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    configurationProfileName: string,
    options?: ConfigurationProfilesDeleteOptionalParams
  ): Promise<void>;
  /**
   * Updates a configuration profile
   * @param configurationProfileName Name of the configuration profile.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param parameters Parameters supplied to update configuration profile.
   * @param options The options parameters.
   */
  update(
    configurationProfileName: string,
    resourceGroupName: string,
    parameters: ConfigurationProfileUpdate,
    options?: ConfigurationProfilesUpdateOptionalParams
  ): Promise<ConfigurationProfilesUpdateResponse>;
}
