/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ConfigurationProfile,
  ConfigurationProfilesVersionsListChildResourcesOptionalParams,
  ConfigurationProfilesVersionsCreateOrUpdateOptionalParams,
  ConfigurationProfilesVersionsCreateOrUpdateResponse,
  ConfigurationProfilesVersionsGetOptionalParams,
  ConfigurationProfilesVersionsGetResponse,
  ConfigurationProfilesVersionsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ConfigurationProfilesVersions. */
export interface ConfigurationProfilesVersions {
  /**
   * Retrieve a list of configuration profile version for a configuration profile
   * @param configurationProfileName Name of the configuration profile.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listChildResources(
    configurationProfileName: string,
    resourceGroupName: string,
    options?: ConfigurationProfilesVersionsListChildResourcesOptionalParams
  ): PagedAsyncIterableIterator<ConfigurationProfile>;
  /**
   * Creates a configuration profile version
   * @param configurationProfileName Name of the configuration profile.
   * @param versionName The configuration profile version name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param parameters Parameters supplied to create or update configuration profile.
   * @param options The options parameters.
   */
  createOrUpdate(
    configurationProfileName: string,
    versionName: string,
    resourceGroupName: string,
    parameters: ConfigurationProfile,
    options?: ConfigurationProfilesVersionsCreateOrUpdateOptionalParams
  ): Promise<ConfigurationProfilesVersionsCreateOrUpdateResponse>;
  /**
   * Get information about a configuration profile version
   * @param configurationProfileName The configuration profile name.
   * @param versionName The configuration profile version name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  get(
    configurationProfileName: string,
    versionName: string,
    resourceGroupName: string,
    options?: ConfigurationProfilesVersionsGetOptionalParams
  ): Promise<ConfigurationProfilesVersionsGetResponse>;
  /**
   * Delete a configuration profile version
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param configurationProfileName Name of the configuration profile
   * @param versionName The configuration profile version name.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    configurationProfileName: string,
    versionName: string,
    options?: ConfigurationProfilesVersionsDeleteOptionalParams
  ): Promise<void>;
}
