{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.29.47.4906",
      "templateHash": "5316885779202138251"
    }
  },
  "parameters": {
    "hsmLocation": {
      "type": "string",
      "defaultValue": "australiaeast"
    },
    "baseName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]"
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47"
    },
    "testApplicationOid": {
      "type": "string"
    },
    "provisionerApplicationOid": {
      "type": "string"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "enableHsm": {
      "type": "bool",
      "defaultValue": false
    },
    "keyVaultSku": {
      "type": "string",
      "defaultValue": "premium"
    },
    "attestationImage": {
      "type": "string",
      "defaultValue": "keyvault-mock-attestation:latest"
    }
  },
  "variables": {
    "attestationFarm": "[format('{0}farm', parameters('baseName'))]",
    "attestationSite": "[format('{0}site', parameters('baseName'))]",
    "attestationImageUri": "[format('DOCKER|azsdkengsys.azurecr.io/{0}', parameters('attestationImage'))]",
    "kvName": "[parameters('baseName')]",
    "hsmName": "[format('{0}hsm', parameters('baseName'))]",
    "blobContainerName": "hsmbackups",
    "primaryAccountName": "[format('{0}prim', replace(parameters('baseName'), '-', ''))]",
    "kvAdminDefinitionId": "00482a5a-887f-4fb3-b363-3b7fe8e74483",
    "kvAdminAssignmentName": "[guid(resourceGroup().id, variables('kvAdminDefinitionId'), parameters('testApplicationOid'))]",
    "encryption": {
      "services": {
        "blob": {
          "enabled": true
        }
      },
      "keySource": "Microsoft.Storage"
    },
    "networkAcls": {
      "bypass": "AzureServices",
      "virtualNetworkRules": [],
      "ipRules": [],
      "defaultAction": "Allow"
    }
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2024-04-01-preview",
      "name": "[variables('kvName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "[parameters('keyVaultSku')]"
        },
        "tenantId": "[parameters('tenantId')]",
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false,
        "enableSoftDelete": true,
        "enableRbacAuthorization": true,
        "softDeleteRetentionInDays": 7
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[variables('kvAdminAssignmentName')]",
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('kvAdminDefinitionId'))]",
        "principalId": "[parameters('testApplicationOid')]"
      }
    },
    {
      "condition": "[parameters('enableHsm')]",
      "type": "Microsoft.KeyVault/managedHSMs",
      "apiVersion": "2024-04-01-preview",
      "name": "[variables('hsmName')]",
      "location": "[parameters('hsmLocation')]",
      "sku": {
        "family": "B",
        "name": "Standard_B1"
      },
      "properties": {
        "publicNetworkAccess": "Enabled",
        "networkAcls": "[variables('networkAcls')]",
        "tenantId": "[parameters('tenantId')]",
        "initialAdminObjectIds": "[union(createArray(parameters('testApplicationOid')), createArray(parameters('provisionerApplicationOid')))]",
        "enablePurgeProtection": false,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 7
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-05-01",
      "name": "[variables('primaryAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_RAGRS"
      },
      "kind": "StorageV2",
      "properties": {
        "networkAcls": "[variables('networkAcls')]",
        "supportsHttpsTrafficOnly": true,
        "encryption": "[variables('encryption')]",
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}', variables('primaryAccountName'), 'default')]",
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('primaryAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}/{2}', variables('primaryAccountName'), 'default', variables('blobContainerName'))]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('primaryAccountName'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2023-12-01",
      "name": "[variables('attestationFarm')]",
      "location": "[parameters('location')]",
      "kind": "linux",
      "sku": {
        "name": "B1"
      },
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-12-01",
      "name": "[variables('attestationSite')]",
      "location": "[parameters('location')]",
      "properties": {
        "httpsOnly": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('attestationFarm'))]",
        "siteConfig": {
          "alwaysOn": true,
          "linuxFxVersion": "[variables('attestationImageUri')]",
          "appSettings": [
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "false"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('attestationFarm'))]"
      ]
    }
  ],
  "outputs": {
    "KEYVAULT_URI": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.KeyVault/vaults', variables('kvName')), '2024-04-01-preview').vaultUri]"
    },
    "AZURE_MANAGEDHSM_URI": {
      "type": "string",
      "value": "[if(parameters('enableHsm'), reference(resourceId('Microsoft.KeyVault/managedHSMs', variables('hsmName')), '2024-04-01-preview').hsmUri, '')]"
    },
    "KEYVAULT_SKU": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.KeyVault/vaults', variables('kvName')), '2024-04-01-preview').sku.name]"
    },
    "CLIENT_OBJECT_ID": {
      "type": "string",
      "value": "[parameters('testApplicationOid')]"
    },
    "BLOB_STORAGE_URI": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('primaryAccountName')), '2023-05-01').primaryEndpoints.blob]"
    },
    "BLOB_CONTAINER_NAME": {
      "type": "string",
      "value": "[variables('blobContainerName')]"
    },
    "AZURE_KEYVAULT_ATTESTATION_URI": {
      "type": "string",
      "value": "[format('https://{0}/', reference(resourceId('Microsoft.Web/sites', variables('attestationSite')), '2023-12-01').defaultHostName)]"
    }
  }
}