{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "The base resource name."
      }
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47",
      "metadata": {
        "description": "The tenant ID to which the application and resources belong."
      }
    },
    "testApplicationOid": {
      "type": "string",
      "defaultValue": "b3653439-8136-4cd5-aac3-2a9460871ca6",
      "metadata": {
        "description": "The client OID to grant access to test resources."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location of the resource. By default, this is the same as the resource group."
      }
    },
    "hsmLocation": {
      "type": "string",
      "defaultValue": "eastus",
      "allowedValues": ["eastus", "eastus2", "southcentralus", "northeurope", "westeurope"],
      "metadata": {
        "description": "The location of the Managed HSM. By default, this is 'eastus'."
      }
    },
    "enableHsm": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Whether to enable deployment of Managed HSM. The default is false."
      }
    },
    "keyVaultSku": {
      "type": "string",
      "defaultValue": "premium",
      "metadata": {
        "description": "Key Vault SKU to deploy. The default is 'premium'"
      }
    },
    "baseTime": {
      "type": "string",
      "defaultValue": "[utcNow('u')]",
      "metadata": {
        "description": "The base time to add 2 hours to for SAS token expiration. The default is the current time."
      }
    },
    "attestationImageName": {
      "type": "string",
      "defaultValue": "keyvault-mock-attestation",
      "metadata": {
        "description": "The name of the secure key release attestation image to deploy. Only deployed when enableHsm is true."
      }
    },
    "attestationImageTag": {
      "type": "string",
      "defaultValue": "latest",
      "metadata": {
        "description": "The tag of the secure key release attestation image to use. The default is 'latest'. Only deployed when enableHsm is true."
      }
    }
  },
  "variables": {
    "kvApiVersion": "2019-09-01",
    "attestationImageId":  "[concat('DOCKER|azsdkengsys.azurecr.io/', parameters('attestationImageName'), ':', parameters('attestationImageTag'))]",
    "attestationAppName": "[concat(parameters('baseName'), '-skr-attestation')]",
    "kvName": "[parameters('baseName')]",
    "hsmApiVersion": "2020-04-01-preview",
    "hsmName": "[concat(parameters('baseName'), 'hsm')]",
    "mgmtApiVersion": "2019-04-01",
    "blobContainerName": "hsmbackups",
    "primaryAccountName": "[concat(replace(parameters('baseName'), '-', ''), 'prim')]",
    "encryption": {
      "services": {
        "blob": {
          "enabled": true
        }
      },
      "keySource": "Microsoft.Storage"
    },
    "networkAcls": {
      "bypass": "AzureServices",
      "virtualNetworkRules": [],
      "ipRules": [],
      "defaultAction": "Allow"
    },
    "accountSasProperties": {
      "signedServices": "b",
      "signedPermission": "rwdlacu",
      "signedProtocol": "https",
      "signedExpiry": "[dateTimeAdd(parameters('baseTime'), 'PT2H')]",
      "signedResourceTypes": "sco",
      "keyToSign": "key1"
    }
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "[variables('kvApiVersion')]",
      "name": "[variables('kvName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "[parameters('keyVaultSku')]"
        },
        "tenantId": "[parameters('tenantId')]",
        "accessPolicies": [
          {
            "tenantId": "[parameters('tenantId')]",
            "objectId": "[parameters('testApplicationOid')]",
            "permissions": {
              "keys": [
                "get",
                "list",
                "update",
                "create",
                "import",
                "delete",
                "recover",
                "backup",
                "restore",
                "decrypt",
                "encrypt",
                "unwrapKey",
                "wrapKey",
                "verify",
                "sign",
                "purge",
                "rotate"
              ],
              "secrets": ["get", "list", "set", "delete", "recover", "backup", "restore", "purge"],
              "certificates": [
                "get",
                "list",
                "update",
                "create",
                "import",
                "delete",
                "recover",
                "backup",
                "restore",
                "managecontacts",
                "manageissuers",
                "getissuers",
                "listissuers",
                "setissuers",
                "deleteissuers",
                "purge"
              ]
            }
          }
        ],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 7
      }
    },
    {
      "type": "Microsoft.KeyVault/managedHSMs",
      "apiVersion": "[variables('hsmApiVersion')]",
      "name": "[variables('hsmName')]",
      "condition": "[parameters('enableHsm')]",
      "location": "[parameters('hsmLocation')]",
      "sku": {
        "family": "B",
        "name": "Standard_B1"
      },
      "properties": {
        "publicNetworkAccess": "Enabled",
        "networkAcls": "[variables('networkAcls')]",
        "tenantId": "[parameters('tenantId')]",
        "initialAdminObjectIds": ["[parameters('testApplicationOid')]"],
        "enablePurgeProtection": false,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 7
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "[variables('mgmtApiVersion')]",
      "name": "[variables('primaryAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "networkAcls": "[variables('networkAcls')]",
        "supportsHttpsTrafficOnly": true,
        "encryption": "[variables('encryption')]",
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('primaryAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('primaryAccountName'))]"
      ],
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('primaryAccountName'), '/default/', variables('blobContainerName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('primaryAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('primaryAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-01-15",
      "name": "[variables('attestationAppName')]",
      "location": "[parameters('location')]",
      "kind": "linux",
      "sku": { "name": "B1" },
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2016-08-01",
      "name": "[variables('attestationAppName')]",
      "condition": "[parameters('enableHsm')]",
      "location": "[parameters('location')]",
      "properties": {
        "httpsOnly": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('attestationAppName'))]",
        "siteConfig": {
          "name": "[variables('attestationAppName')]",
          "alwaysOn": true,
          "linuxFxVersion": "[variables('attestationImageId')]",
          "appSettings": [
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "false"
            }
          ]
        }
      },
      "dependsOn": ["[resourceId('Microsoft.Web/serverfarms', variables('attestationAppName'))]"]
    }
  ],
  "outputs": {
    "KEYVAULT_URI": {
      "type": "string",
      "value": "[reference(variables('kvName')).vaultUri]"
    },
    "AZURE_MANAGEDHSM_URI": {
      "type": "string",
      "condition": "[parameters('enableHsm')]",
      "value": "[reference(variables('hsmName')).hsmUri]"
    },
    "KEYVAULT_SKU": {
      "type": "string",
      "value": "[reference(parameters('baseName')).sku.name]"
    },
    "CLIENT_OBJECT_ID": {
      "type": "string",
      "value": "[parameters('testApplicationOid')]"
    },
    "BLOB_STORAGE_URI": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('primaryAccountName'))).primaryEndpoints.blob]"
    },
    "BLOB_PRIMARY_STORAGE_ACCOUNT_KEY": {
      "type": "string",
      "value": "[listKeys(variables('primaryAccountName'), variables('mgmtApiVersion')).keys[0].value]"
    },
    "BLOB_STORAGE_SAS_TOKEN": {
      "type": "string",
      "value": "[listAccountSas(variables('primaryAccountName'), '2019-06-01', variables('accountSasProperties')).accountSasToken]"
    },
    "BLOB_CONTAINER_NAME": {
      "type": "string",
      "value": "[variables('blobContainerName')]"
    },
    "AZURE_KEYVAULT_ATTESTATION_URI": {
      "type": "string",
      "condition": "[parameters('enableHsm')]",
      "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', variables('attestationAppName')), '2018-02-01').defaultHostName, '/')]"
    }
  }
}
