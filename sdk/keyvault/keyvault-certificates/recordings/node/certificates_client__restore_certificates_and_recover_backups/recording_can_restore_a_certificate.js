let nock = require('nock');

module.exports.testInfo = {"uniqueName":{},"newDate":{}}

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .post('/certificates/recoverCertificateName-canrestoreacertificate-/create')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '3fe88f23-e394-4165-b97a-a06bd186bbd3',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:34:47 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '7202516d-76e4-4221-8b88-efe2ff6b7e00',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHAQAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:34:47 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:34:46 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .post('/certificates/recoverCertificateName-canrestoreacertificate-/create', {"policy":{"key_props":{},"secret_props":{},"x509_props":{"subject":"cn=MyCert","sans":{}},"issuer":{"name":"Self"},"attributes":{}},"attributes":{}})
  .query(true)
  .reply(202, {"id":"https://keyvault_name.vault.azure.net/certificates/recoverCertificateName-canrestoreacertificate-/pending","issuer":{"name":"Self"},"csr":"MIICoTCCAYkCAQAwETEPMA0GA1UEAxMGTXlDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1yanXLxbJULv0ELR/4YVPI8pRC/FwO51OtiHtuqeoAjhhtOaKJrq50raqjxuVmOXE8Vz7oQdE5Oj/o/jWmwTnwRy59MTq0k6Tjs9CBBPfh5jGwna5AMmsAONuy8YZJjK9rxwkSIugM6fJUyqtXwW4x7I2Bt02jWWgmOe8SawkSMkfpog4TbC6lOWuJnYG1C/D6pLQHsiOaoRvTofK2s6KGX7SeUbwh26AmXiPO45o/b5sjepIAwlcCzMtL+tIGjSDaB2ykoC6aJQ1rD19R6o2OZhr670y3vyS4lKYdPTHMRZSiS3NyLARMx5HjrEobA0LkwAL9Y7SdxSHo1bMrCoLQIDAQABoEswSQYJKoZIhvcNAQkOMTwwOjAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAkGA1UdEwQCMAAwDQYJKoZIhvcNAQELBQADggEBAEhhN7xd/Rnp5AlYx4wad03zvcus5AmZI4lc2idwmU2Hl2/QppyGH9rCOySYrbygnpZbxfySQXKjJnYIQa8rdfGlBztwRkgsbKwftfXiKDMXt/8HSSskuOppHIvbugdPEGoaAkhovWEDWbsunZhlRJ6jEuHaiDXElk51GBr0AePv2gcZ4vIMlH/p/4BKIcomWGo2+pT/neABvTwCvFrY/DJM2XW3SXL6hV93u2OLsO+ABnROe4PrZBLjXl/diMNF+tDB2Ec+HIdbjcBPL5Tv4FPl5jeZCAf0GUSKkL42YJ4e/wnCt+yRWK6klxz+VYjBktIgBXcC00zEG04UpEdyKJg=","cancellation_requested":false,"status":"inProgress","status_details":"Pending certificate created. Certificate request is in progress. This may take some time based on the issuer provider. Please check again later.","request_id":"3b796050b4a9408eb7f0fde37039f5d2"}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Location',
  'https://keyvault_name.vault.azure.net/certificates/recoverCertificateName-canrestoreacertificate-/pending?api-version=7.0&request_id=3b796050b4a9408eb7f0fde37039f5d2',
  'Retry-After',
  '10',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'c21a47c8-421d-4355-aaf0-db6a08f64ab1',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:34:48 GMT',
  'Content-Length',
  '1331'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/certificates/recoverCertificateName-canrestoreacertificate-/pending')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '375e030e-7429-47bf-bc26-12d113d13761',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:34:48 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '4c64ab1d-0c83-48e8-9f1c-0ffc2d596600',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHAgAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:34:48 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:34:47 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/certificates/recoverCertificateName-canrestoreacertificate-/pending')
  .query(true)
  .reply(200, {"id":"https://keyvault_name.vault.azure.net/certificates/recoverCertificateName-canrestoreacertificate-/pending","issuer":{"name":"Self"},"csr":"MIICoTCCAYkCAQAwETEPMA0GA1UEAxMGTXlDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1yanXLxbJULv0ELR/4YVPI8pRC/FwO51OtiHtuqeoAjhhtOaKJrq50raqjxuVmOXE8Vz7oQdE5Oj/o/jWmwTnwRy59MTq0k6Tjs9CBBPfh5jGwna5AMmsAONuy8YZJjK9rxwkSIugM6fJUyqtXwW4x7I2Bt02jWWgmOe8SawkSMkfpog4TbC6lOWuJnYG1C/D6pLQHsiOaoRvTofK2s6KGX7SeUbwh26AmXiPO45o/b5sjepIAwlcCzMtL+tIGjSDaB2ykoC6aJQ1rD19R6o2OZhr670y3vyS4lKYdPTHMRZSiS3NyLARMx5HjrEobA0LkwAL9Y7SdxSHo1bMrCoLQIDAQABoEswSQYJKoZIhvcNAQkOMTwwOjAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAkGA1UdEwQCMAAwDQYJKoZIhvcNAQELBQADggEBAEhhN7xd/Rnp5AlYx4wad03zvcus5AmZI4lc2idwmU2Hl2/QppyGH9rCOySYrbygnpZbxfySQXKjJnYIQa8rdfGlBztwRkgsbKwftfXiKDMXt/8HSSskuOppHIvbugdPEGoaAkhovWEDWbsunZhlRJ6jEuHaiDXElk51GBr0AePv2gcZ4vIMlH/p/4BKIcomWGo2+pT/neABvTwCvFrY/DJM2XW3SXL6hV93u2OLsO+ABnROe4PrZBLjXl/diMNF+tDB2Ec+HIdbjcBPL5Tv4FPl5jeZCAf0GUSKkL42YJ4e/wnCt+yRWK6klxz+VYjBktIgBXcC00zEG04UpEdyKJg=","cancellation_requested":false,"status":"inProgress","status_details":"Pending certificate created. Certificate request is in progress. This may take some time based on the issuer provider. Please check again later.","request_id":"3b796050b4a9408eb7f0fde37039f5d2"}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Retry-After',
  '10',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '0308c59b-df5e-4fae-a3b0-09fcd2764c75',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:34:48 GMT',
  'Content-Length',
  '1331'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .post('/certificates/recoverCertificateName-canrestoreacertificate-/backup')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '187d3f65-1f2c-4330-b0e6-811aafed3826',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:34:48 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '22f224b5-e565-40ed-a1ff-a4e7f8e36900',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHAwAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:34:48 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:34:47 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .post('/certificates/recoverCertificateName-canrestoreacertificate-/backup')
  .query(true)
  .reply(200, {"value":"JkF6dXJlS2V5VmF1bHRLZXlCYWNrdXBWMS5taWNyb3NvZnQuY29tZXlKcmFXUWlPaUkwTXpnMVlqQTNZaTFrTlRRM0xUUXlaVFV0WVdVNVpTMDJNVEJrWXpNNVpHWmhaamdpTENKaGJHY2lPaUpTVTBFdFQwRkZVQ0lzSW1WdVl5STZJa0V4TWpoRFFrTXRTRk15TlRZaWZRLnVTLTViR3BOUzJoRk9CT3dWZV9QeHNqd0lqRkRnVGQ4Mmp0Rm5DMms3UTlUQ005U3V6ZFFxa0xDdkZRY01HMzN6aHpud1dqbHUtakxfTjRzNm9pazFJXzJ6Z2drd0h3NldVellWdjczeG44Z2p1Q0RVMko1Y2tNZFJiUDNKV1RQVXB1Z3VBOVp3dTNFWUctdlZOdXZoR2s3c3ZBa1kxQWxKMzVuajgzQWpwTVY0UXdUVnpYSXJSODVXNE5WTDRZN3JsY3VyWGM2eXlNVGpveHN2NkZzZ1VmYl9IRGU1VVlKNlh6cXZNT0tyMC1EYklFZmJzNTA2ZlRRTWt3REtMY1F0ODd2VjdvSnFick14S2VLeUFJU1hfbl82OTRfcUpLbDg5alZocnJuN0EtempsZEI3QWFIb0VhSGQ2RjJKcUR0Q1hBTVM3RzdtNkFLYXBpVnM1QXFaUS5LeThVWUJEQ20zQVE5OTlJaXl5N2FnLjNaZklxT2xyNzVCeEVDM0E0SHQyYWQxeWlkcE9kWlNqT1ZNRVpDc2Z3UXBHeHRTVEpBUWdpTEVvdmlOX2JZZVNwQnhyZTM3My1wTDJQcEFiSmFpdUpDMDMtY1lBZ3g5aVF2SkVoeW40eE42bk0zMFVuVGY0Sm9FWGJKYWFHLUl6VjZXRE9VMVEyNk5famdyd1NfeHByYWpuX2VlcFlUOS1vLWRBSW1acmx3c3c4RUc4dFZITHNkbDZLQTVCXzJmTzBEVS0wSTktSDhiVnM0WGNNRS1JUU9UbTZ6aHdvV09sWUpFVUZWU2lyMWI0U2Y0R2VER1JhMU9JeGZ1QlBrRmtOOTNfNEFnUldtMHVMYWljNk94eE5GQXFWTHYyQmQ4cW1naDVSVUNHeDVRNmNWVEJFM3RiWXdpbloteE9zY1U0WmJ5QkxDXzJMMWNsMEZyOEt5WWpCTWVmSFVNNmtCc1M5TWIyRkVTdVJQc1ljTTlZdk9fbzU4bmhMTnM3N3NaOW1WMElLdmVRR0M5VkRvNEhLay16Z1c1Zm4xQWlTX1ZkUk5IODUxcEZfTTRwbWlSRVVaX0E3U2I3alR0cXFZamVjMUpRTklVOW5NcnV1SnFYazBPV3U0YTdIdkVYTUZwanJaemlQN2JMaGs3YWJoSE9RUnFtdnlEYnZlRUxTTVR6NG9oOWNfeklwU1RTVUx1a2lnODFzaTBWdjF0eDZEVXR3MzdjMHVzeHhZV19oMTFhUi12WXByTTlfWDdxclhnTGd2RTRVaUFBeHozZzBkdUljN0o0ay1aVEJtQUQ1djk5em51YkJNS0I4aURYbUJhSEd0SVZ0MUd5eHRVNzBEUUxua3Y1ZXVDVTF1Sm9tZHl5T1AxcmdtVFdnb2VJekhtUllXdndRNHdkUXpzTURHTXhxd3N3X1dGSXpaMGR1eVZmUUswMU5ZN0ZrWVhOdThhcWpHaUZFS0hTUGhMdU9uVmtOQnYxT2FPTTlocTk0clYzbnJCRzBFNnJDS1FmaExHUjMybFYzRFFKbVgyTHU4cElvUjVySGdzRkszaUpGb1JJM0x3NjRpbTZxdm5YNUc0aVN3OEtLeERxeDQ1Wkt3aTlxS1UteXdMZkFmNldEREJyaVRiWlBDSjBYb0lJX0hCdXNyZWxUOGJnVFpLWlpnckFCSVhCS05kbzRKR3dqeXRTVlVnZm9mcnNwdHlGOW5kTEo4RFp3WlVuUy1UVEhCTXZmekxIOE4tYnZ5dlR0Y1NPbHd1WjAzX3JMZ0JLelZheHBLaUpaNXVxM0xhNTNuRzQ2Y0k4SG5oOGtJVFpnMDBjNVJWdkQwMGY1VXhqUDZrX3dUR3JPYlpDREVPMVZ2N3hsYzRPbml3QkpKREx1REczbDZTOU1GbXNQbDBNRnI5aHpTS3Q5ZlpIVFVBY3lWcURSRFpYbDNPemJwamZOM0lTUGJncUNXN0xGTVA5NlpDY29OSDBTUXZfdnRmbEZzLXdCU1RFN0FmSGtDWUd1QThmQ2hSWHMzalVhcFZyQWljMWNfdkNKZ05jRjNBOW9kQUQzay1ZUUR5WlhXOGpZc1pQbVQwdjVJczNmYUFLal9KckNITzBJNHJtQUJLYVVrMnBiVzRYaWxIWEVTUVZlTHhQRzE0WWlhRDBLbG4xUUtWQUN5NTRiaC12THV0WWVtbkR3QWdoRmhHamMtUGNmUWRkSHh2ejFTVTVxRXZkZjdTcW43NEp4R056MHNpSXNxWVNZOGREVl9YTG5NMVBfZ3dOdkhuOG9xbDBrbjlFdVZydFFnV2g1Tmk2NXRkTkwxdDlGd0xoUWdWTXp2Q3ZQbkYzYk9nemp6Y0hoQ2FiZ2x6WmF2OC1nRDZkampPbi1hZEVEU1dOT0MtaGdJRU5Dazg5WFpyX0VQRTRPV1pMMnJJTy1KU3djRHZuX1J3OVgtaVFCWWtjMGxNUElVSmxObVJ2R0FKSDdUWTFVVFZvY2pDSXhaSC1OVW45RHZXM2NfSHRSOVVVNWlxaFJ0cDdlWjgxZWpKUVVIOUFybVNBN2JqWXhOa3JHbVQtZWIyOWtPcUYyNk1pYV9JRXl1U3hvbTFEYU95MTRaNWxtazVrWVdPZmFGemtSNExVR3U1WHg3ZEd1c2p2UTdpTC1zendQTi1zU0hjcUp2SzZ4Wl9CaWhjbXliMW9OQURhU25Ja2pXa3QwZjh1QkNmQkI2bTVaNUVSU1lPdklXZ095UnZYajBhMkJwQVVuUnYxWDBLMjg1QWRseEpmN3pRY1g0NUIwaTFOSC1PNG8zQ2pDOXR1TU03STNfRWtSdms3NEprR0ZfSlZ2cElSZWt0NTIyTWlwWUs0VmFRT1Jtb2Q3T1RjNzFoMDd0SmpvZTRMeDlSNzF1SFZJMGJlaGlwN2thTkxOX0U4YUR3X3lSRjB0dVBKQWRVbnBEVTcxTkdkc05lVHRDdnZ4TVJvbDZGSGJlQmNVQWRXTkt2SzBQa1AyV1RYcVpGRzZxVXlJQjg4VEk1dG9MaWpvMG80MW1HeEtkbkdxVWRWUlVZb1ZsQXBkaEVsNWdPOW9lM0J3dFhTeGdzN1JzYW9yN283TVRvNHNhQWUzLWp4VWtNbVI4WWthRHdqODdFbFlsWGs1UTFvZVp5WUx3Vno3dTNGQThxQlpJVVRCQldWYXVMNkFzUlRTaWRRalFVYnF6S18ta3JyanlwbllTOVRkMFoyekFQZm91YTd0WmZ4RXNGc3dpZjJzTkMwUmUyWHBXY016RERBSk5IUmRGXzBocm1NSVZPRE4wOG9oYWpPeWNiUHpvZE11c056VEtTb2I1T3VFODl0TjBYRGR1emdfLXhxOHM5ckVZSjhlS243ZW5rNjNZZS04dXdXMXJpYnRqMlRqTjNaRS02QjhMa0FpaTRoR1RtVFJnZWZsUnhSbi1IckF6LVhJaU43blhNX09CbDJwWlBfNmlBTDRoQURnREM3N3hpeV94WV85WTVRa09XaGI4eFEzTXlNQXhscTM2ZWVSbU5yQWxDUzhFWndWdFpZRS00ekk1NXZBT2pmNFo3YjAwNDRFeGNVMmFYNnNnMEVEVlExRHdmd3FXVlA2clpXaUlCSlVrdlo1YUZJeE1SV2hGSFEyVGpMWW5JdWt5Vldua2lGaExtY1dFMURMTFF3U3ZmSTJjRnlzUmFKSnJjb0NNMHNtRkVoTUZxNG9oZkt1WDB1NGwxYnRhbW5vUHV5YmkwV25ZWnZNOHc2QXRMOHRKUDN5R2VNUjB1aHBJNEI1T3JJUkpoLUpHMW92SjJheXVtcVBVUXNhWXlMVlN5RG1fWEE4akZGd0lwSkxkUjVEREFqbnd4dk1jWldMeHFUSkxmRG5UbjFVY25YQmRxRlkwTHdNVXROTnc0UnYzbHk1aF83NGlxN3V3UGZ6LXBoM0xZSkJYdnlSbHRISlVhNU9SbEdiS2NyNV9UeGdxLWRZWTIxNUt3YXNKUHFCVEh0YVg2ZGM0S2tnSHEwNlJ3b1VLVjhqWi1YUkd1N2tqdndSR1g0QlJVUXIwX0g1WUtWdG5COHdBZWFveGRQNE8zNXZvYmJXUnZvRER5NzRLTkxaWE5DQnJQWHI2ZlNFUTh1aUw1Ny0yMXJCMU1VS21RSDBRdzk0STFXMXBYMVk5LU5fZC1NZ2ZubjhBTW1sT2FWVl8wT0lSWlNvaWxUdXc0OTF5M3ZUVUJITXZKampCcjJ6RFN0V09lS0NLSDFGb1pHZ2hBU1NuQXdidXlqQWJfU0Zyd1g0RFF2TjdmTHFELWt2STFxcndFZzJZTzdfOEJfR0hXTFM4dWROeWNDeEw3WGlBQVJRemJFeTF3eklsZHIyMmNPZm9MbEp4NGE0RUlFODhWWVVmS0gzcjE4ekxZY042eDF2SjluQUNtMUdqXzBJaXJjb0RmNEVGUXlkWWRIRy0wcDZYSFpoUThuREVvSWtpclAxdGgzMzc5RjVHNmdlcDhpRHlRYk45RTdTUEVCV1ZsYmxNYUpWdUJoY3NTTHBtNWRwMUl0Q3BXdzQ4N2Q0UnZkYTRQZndBbGRxclVYU19XaGEwRFd3cVJfeUtaZWJseWxYbUFvNk8tZC1PenZmX3FMelNOZ2labUtfNEROLWFqRTc4WEhad0tYWjZSMG9BcXA1b0F6bmxtcGotN201SmphQUdZVXpqUWZObGxpYVc3VzZpeE1BeW5Bc2Q2Y0QyUGcyYWRWYjNQUnd3ckNlc09mQlF3b2pTV2NKa09CYlp0OWRDYVRFQ3pDcUlpZjA3OUI0MFl1WkVqZE05ZmJfbGsxOUJwMUZPNlpPcVpxSjJldjVHb3k5NVdfTVRXYmRFWHg3bkRDemhXdy1idlcwb3UtN193X3NWM0YtOXFzdUxjUTNxTlZGUnNneThRUVNMQmVwdEVBY1MyZk15bDZoNUh2NkF4Z0VqdDRpZjhxQzlxbVdCRnZZSHNRZVdCWkZKU25jLXBsOHpoalFEUFVKY0ttSG1KNU5zT1NfZ3pUbnZWV2ItWFRuQlk2UVhBd1ljMGZMU0dMUHlZWjhodjg2RV9ZYmRDanJUM3VrUXhESlhtLXJnWkFObW1uQ1poaHM2UUdieURSWnJtbGZBcVNiQjVyd2gtTkVOcUpHY0ZOZkRmTWVUSG5aZ1Y2dDZHUW1jNmlPVG1iNkt0SjFyeHlkVEtIWER6MEFDQ1pEWmpJbUtGQjVGTkQwOTJ4SmppYlUtWWFqcjJqZ2lDRlNUOFRZMnpGb210NkhBWFRGbVEyTVdFb0g0WE1QMGxLQUlWUFBnX0syLXhMXy13cWJacloycHAwdFBJU3NnQTV5WEV5ZXU1aEoyUzZ5OFZjVzd4VVZvUGsyWS1GRnA1ZVJoYnRtNm9IdVVYWXQwTVdvSmhEdXhWMXhsN2xwWmZfeWFnckFoZF8tTDVtNlR4S1RhcXo3V3g4S2NKUjljWl9tSGo0UDdRQU5VT2JfVTFBN1ZUR3ZMby1JVHh3QkFjdURLVUVSMk9GS2lfZWgzN09SMVJHZWFUTGdpakpsbldkcG11c0pkbHh0LU1DanJIMG5SXzBKSXZYQXZsTFhBbk1ZLWRkNENRbjE3SHpsOXRPbDRpRndTaDB4dzFxRVMxQ1ZCMWlYTEoxQVpWWF94dEhIUjRwb0ZFSWJaT3l6RHJTMmM0TlJpNFdRZDQ3UUE0RUp2cHpSOFF5ZjBpd0wwWkZ2S3lTaWJTUHpTM3daYlpybGNPUUxFdDc5c3dzUWs0bm02NG8ySUlST0tMQmJ3enZOQkpyeTl6bjd0TUxoQzZMV1luSGRuZ0ltbDVCY2hLT3g3UV9nQjA3OS1aS1FsV09lSHptZzU2MDJhN0dMZXpPYjR6NTZ0bF9uenMtOEJjeWJ6MS1fU0N6RFpZYnp2RktxYVBaaWVLWHBhQnctclc0cFJkdVdDZ2hGbnRUU043N0NST1Nud2hlNHJSME9NalpseXRkOHBWNjRGUmczWm9IWjdTRFZ6UTRJUWNRQzVsMkZVU1pTNWZFczN5cXNmcWZLWl9SVDJfcV9YVDZFbDdFRFZlckZYNF9ZdUVvOVZHNlJfY0FYOWwzc29pa1NHdFN2N0Mycm1tc0wtcm9fQ2dxMmFkTTBtRnBSNHRpN2R2RV92Tk1oWHhjMEdVT0k3OWRkYzdwMVgzd0VUZThzM3ZnTEdaQVMydEE0TTdrdzRVOEdYRml5aFFnNWZRWFk5MEpqeGpvd3Z5aGltejNLU0M3MHhORkQ1RkhHMTd1bTFvUzRQWmVqUVFoQnYyUjYwVGl3dTlDV2tObmNkYmJEYzVfd1hlV3F4ajhJcW5UQ1hLNVBUUUp2ZGFyOVVhUlZFWUtzOXdnMndzVTFVUG9IN19qd2hNVDV4SDVEczJicjQ2Sm9oQ0lFZWRydUJyYWJqRk1TY25jWXBUdWVoaEFOdjdZQmsxRHI3OUlaZUlGZkx5UGE4ZHpFQ01XaFFhaW8xQVFZbjVfTU5Gdno0UmxpLXdjOTZXMFpVRkhqMjcwaTBORnctMzI5cndnWXNDTnNweFg3aWJEem90bDlJV21JUzR1cVg3VFN5SnFpVDhkRzV6ZnNwXzJVVHJfRXJXbDAweVJsU04xcFQ1U2g4RUdGZnJ4ZjlNNmpIc0xuSU5KMUNhVm95XzFsVHBEWk5jOVQ5RXhXY1Zndno5X2pvOHBNZVJuZVExU016RVpCcFM3Y0ZabVdmUV82dFRXU2ZON0RNLWp6OGlxZmp2U0RhUUZFR0thOEc0dENCMlB0b3NSTUJuTjUxSXRhY2dHeFptSUtHa1p6UkFWeG5INjVuZ1V0d3Nnc2txWWRiNDc1UHFJVjFfOGtEMFlZajlRT1RXdkdCWHlMM0R6Z1ZCX1p2SzNpcTlONTVBNXliUkpuUUpGRnFqMHVJWGJJYjZub0JVT1dxdU1kblVyMXJxWVB5UXVaRzU2YjJ0NGJhVVF5VzNWZkFyQzg2NUhpZGl3OC1Gc0daTXV4RTVZWUh0M3l2QW1uNXU3T1JNR3FrYkpmbF9zbVlaWWpzUmNHaEZqa0NuLXExSW9PQmt0cmczTFNEU1RvZy1rZGRpZEVFYm13Y3hCZnBGdjZMS0tScnBvM0dpNl9kUVhxdXhHeEhUVGQ0bUVJVDZEbE0yeXRmQ0xNZkhfd05nX0l4NGxUdzc2d0p2XzN1OUphenlaMlN5UUpULU81UHpFVlEtcTZTTDlnZElUT1ptYTNlWEdMeFBEVFdDcFU3T0UzWGJISHJfUkdhUVExb3VXTHVQTU9ndFMzTW5VYS1NUU1CZHBJbmRfY3VmcC1rWVJiOGhWaXZ5dG9yOXdyam1LZzJPQ2JCVUQzbWxvS3FON2hmQUVlcUJMVUlYTWcyX3pLN1NzeFZaRzBNUUZPZWc3dExXT3pQZVVmeU9helR5bU9CbXpITWl1M2VsV3pqQ0NQRWdnVEpDOU53MEt1dGpBZnlJRXZXTVRJMEZrdDludzUzNlBXNUMxWEpiMUtwb3J6ZVFVM0VRUTVNQUVuQWtRcllKNV9wcl9Jb2JQcTJQVFg4a3ZNU3V0LWNuNzNBZlNVTm9NTjVia3lQNGRhQ2dsOFlwNUtvTzNxdU0xaEtRdkhaT2Fxc0tBN2QyMjJueE9JbnlEeGYtbzhTYl9OT1JXLXp3R05MQjRPUV81cnN2RzZKSW11c3dkRXltQlBSWUdFSEhxaU80WUhSX2RQRXBuam5Ibk0wamFubGhvdXJqN3UyS1dObG5GR0FpTUZjanhlUGlfZTdyaWl0SUpDdnhYLWdfV2RyVWU3MlRlSHFqaXdOXzg2STdsTVFNTGdyZWlURExnQ045TllpV1A4amZaa3RaVTB2eE90OXN3YmdTa3JnQl80VTU0dmEzRWt2ZVd1dkRqZFV3VnRhRUExWnB6MUxocjRzbk10WWpIX25FcHJmMno2cVRJa2hQbVhQZUUtWmY5QmFENjlESE02Q0psUEZocWgwWnRURWMzNV9GWW9lWk51RjY4eUp1QVh5LUpCX0p0OEdwMURtWGJvTTcwTnZjVkM4eF81dVNBUW5DVTRrWlFIcXd6dC1jY1NQTFVfRzAwaWtnVTRVejdwQi1KNlFNT2tVS1pzMVJxOUJnc2JLYmZtNFk3dmFsVjNjMkRVMG52TWRzSnZCSGtGSjBVbDluWnJBX3VRNGVrckdEQXphbkZsWWh6eVB0eUsyX1BPcGpnSHFERXNxZEpqalpOdzJ3blV2MzlSblEtcHhVVU5NUGhMWjcyOTNOVFUwSWU5OXU5TUowMGVYSkszWEZVSzJqeVNFQ0luM013T09ybWU4aUlqRXRub2pBUmItSllxNGZzSXBPbFNzdjBhWnRKeVF3ZXZDbE52TGJZT0VoSWN2WjhWTHVRNmlkaGtUb0x0T283OVpLOWh6cVVoMnZneDE5d0tfdzVjaFpyaWVlcTdsaW5MekZuRkpIanJFTUR6aDlZR2dYellTQnNYd2Z1aTdKSVFFdTFtMnFXa2ExdFE1cjlUZUM1amxzUUhGcWV3Ujh1ZDVaU0JtNlpEWVZJLXNTREFQWlJXSmJrUlEtMFY2cU16SWxxNHZRR1pNMHZ2RHlOal9yLXdvRmFVMldxMXlZc2Faa2ZESEVQdlVlVlRuMldsb09rb0ExREpHX0FiQjctQjVEWmdCZmVFZUhick1GNTdUbHdhRDJXZWNHZmFXQngtMUdiMFBxYzRWdHZjanF0Z3huSUJpaFZwVHktalNNX2hrN1ltc2NfWDRoYlNkVjV0NWFpMFFWSFZCZ3ROOHZjM3hOQ0g0MDJDUzBKcmJ4cGRZOGFmRi00bVRRX1RpVU5SZFZGZWpJMmFTVGcxV3NvdF9TQ1NvTW9PUWcyVi12cGVWTE8tdGhzZVpBSDVXeWhQQzM4eGs3S0VEZ0ZPT2ZNR3FNb2FWbHF2bTBTaU9fclhDVTdkTFdUZE5EQW84QXZhQTlGU0FfbTNBUG9ULUF4NVJMUXozbWJxbm1wNWpyRFkxSkJubWJzR0czWW9tOFV3aUtqTjZQWWVvSzdSOFRjTTZsSk53SmliNGlvaHlmQnkzWXhLX1NuSk96MWxiS2x3WHNTNF9uUGI2TlpsRHozUUphemQyNWhEZVRBU2haOFFPcW5YYURkaGJNTENRcWk0aUpzUkpKWmtNR1MyXzR0R0MyYU9HNzhxcTZ2bWk5c1o2clVvNFFqRW12WEt2c0cyN29nTm9NZ0NELWlpWU5zRnZuaERKS2h6WTBXdEF1Q2M2WTFxWmpXaFktaFpvQzBubUQ0b2ljXzliVEtzakNJb0JxQWhXLW1BX1lFZ05vUmlQcjdKcEpuSF83N1ctV0w4UmVrXzEyZjFWZ0l5dVB5NVBES2FZb2ZsRi0zMjNkamdjMUpJX1RkSDk0bks4SVo3WXBwcTM1UkVGYS16a3hPUTZ4N2ZxaXBNQUZKTkk0MVpweW1XZE5JZUE3LUdwanh3YWcxZFRkMEVlR3BYcTFpdkljY09Yd3Bxc29zS0dnVGhZamFJQ0ZzcW9iWldZMGdOc0V4SmFSMVp2ZW43M0owMFZrMmlsVHRtaTZGTHZleUxkWkg3UnVEUzJsdGZaTGxuTElGb3M1OVlDcXVzcjFFYnFyQjRFOWpGSUhkaFhwUTE0MGNydlpOWkVSVlExNkdoeUhhUFVSVnlLS0hxdWZubkNDdzFSbGU0QVBvd2FUbWw3bk5IXzgxU3Y5QWtxNVgwWFVFLUl4NnVDWnVKMF9jX0lrak13M1JJMkRpanQ5b044a0hRSnNkM1pkNE90RHhfWUVEVUxUQXVpWkJtZ01WaGN3Ym1YYkVvTnd6YWpIU2M0NDFYRDR4WkxRVjdfZkwzQldlYUNwYmtqRjYzRFRVS01jaURGNDI3MFNtTzFmNVJ3REMxaHp5TEFvTnItZU1TMEF3LVNBV3FCdnlydkRhbnFoYk9kZHlMNHE3a2UyMmNDNWRuUG5lbEtQS0lMUVY3QXg3RG41MmhqUzR6WC1zb0l2S0lwY0tKSW5UVHdITkZIQjdBTllKelladmNkcWJzUnozMEJENVVHV3Njb240cW5pcTU1Ni1CUzU5QVVmdmVWcjZsZ2xlMVhScW9MQ0pOcGZQazNMVmJNN2Y2aXRJRUZoNVh2UG1SLUxhTmpOWTYxUURrSjB6LWNqZWQtNjd3aEJiRDZSV1JmTHdxYS1GYkhPTnVjS05KaEV0QTFxSFVmaHo1SVM1ZFNKLVNyUmNHOE1DNTRRcUtuSVZLSjJmU1d5d2tqaXBxam9wRkRxVUJ3dDRsaHk2cnpqQXJBMm9Sdk15dE5KS2NFLUlGYTl4UDdGTlZBZ1Q4WDhubmo0YXFJUUVBRkJya3p3UE5UaWJGUzVxOFFzWDZ3V1lsVnp6MkFNbG5lYlVsUkxHR1g1bVVsX096MWZXQnRGUFAzbnlHSWF5MDR2RkNPLVg4YVByMGF6OVVfRkUzdmZpRDNmRkFqQTBpbDhjc0wwVzJmeVUxZEJoQWp4cGg1RWUxS2VnYnNEWnQ2WldmOWJtRllPVS1lemEydUROWGJUa2JGeVFIcE11b1B3UWpoaW52b053TVk4ZHVhaGNWSGJVLTBXdkNkSS1WYmh6U0phTXZnYUtBMl9CMUNLYUVrWUxfc25ZNzhGQzF4YV9GVlBTNTRBZnpOckZUTFItQi13QlkxVTNKdHhsX2tHVTktVGZZUTlkaHZNZFhGX3piaGU5VWZYdUtOdnRiR1JLUXlrVjEzd2NiMW1TTnlKSkNxdml2dUhIUlVNcmRDSnhIVmdHS1hYRnh0UzZ6eDZDRlVNR29OM3RYa1JJMmJFM29uSDdpVnkyUDlkNFIxUWtYRW9JY1NwUUt2MzB5T3M5UU9MTGJjMXVxTXpka0VWN2ZWRjZjWDE2SWhval9ZLWZJTy1WRm5KdnZjZ2MxVjhabkprNk9ZZUNSYTRWRnZoam0zb0x5Wm5idmdUbzVnWEtESlE4VTJrbVE2Qi13TU44OUd1ejlKM2V6SWUtdnpUSm9XTUxMQVRnZzdVbVc3Mk54Y3Y5VTczUW5LU0s5Szh3NWo3YnJGZ0k2eGZHOThHcm1hMXhHNE9YYmp1dHRZT1NhVlBJZTl2ZENQZ013YTdIMXhNaGVZamk0dXhkRHFWV0lCb19UdkJHLU56WWVTRmhNei1SMFdCTjh5eFFYUG9sSVlwb1ZFMHBMa241ZmM2N3RBM3lGTEx2X2VsY2lvdnpMLVdRX2xGRnpuZ2sweWJkS0RNN2ZNaGpYNTYyOHFuVFhQSkRGRGNmcWl6NUt6RG5ELXNuMFlnWEo3V21wNWFsVElmR2NXWEF1TmlwUVYtQTNOLVFCQWJQZDlXWEY1alZneVVLOUxfdHVVR2huakZlUlBiSjhGaHZyRzVFYkN4UU1YeFczenRHd05iZUVRbGhzankweHZ1RHZSZnZyTFhNdmtGRXJYMUNPVGU5MGVrdkp3LTdnNTh4QkVYN1otZlRtb2xfNVEzcEk3VUdXSEg5MTNhTXRpVXNPZTZIWFFDU3lma1JMSXlSaGNnVUgwWTVUcUFLaGhrYklIVTlnd20yd1NPX0tKVTVVZTRfWjVLLUZ5bUMyUFl4OFZVVkY2ZkFwTFQ5RTRzUldGTVhVa2g4ZzdrR011dE9BU3NYYkRKQ0NzTElZRnFWOHIzNW12Q1ppQ3B4YmNNcEVyc1J2dVY1R2tVVzJMY1hWR0pfRFp5MkZoNnI3aDVWbENYN2xCTzAyalE0RWM2VXlDQVVaYndPOHNnMzhKWWcyanNWNFFCRTY3SG1jSmoyQnN1aFh4YllxS0J3U01nZG5VZ0hhQmVYRjhFNW83NE5VWW02TjUtajdLalV5MjBOTHNXakljdVROSzZxZVdMWnpZVkZwWVhSUkVkOUF1N3g1dWRiOHFqalF2aE1sSDMyTlNzS0RnaUNQN0I4ZnYyNExiaEtNanJHQVU0eFZtdnpSS1g0czM1aWVWazV3aVA5X1lYVi0zeGVRRkNkUUlwZHNmMnU5cF84T1VVSHloaWdSNkVaOU80Ymk0ckhwV0syRERKUWdDMVlvejl2TlAxanowb0FvU3RpajZBaXp5cTJwT05femVzYWRaa3BJTVZDc3d5T2V4Y3FpRl83RTBYYXNGTGhvSlk0c05tcHlxNkhpYkVraVRvOFVsemxTVVdKMTlFejhUTmZhVGZVOFhlMUs0ZV9iUEhfS2E3MDJnMDRLVjhCQnFuVHVWX1QxbjVDLV9BWEltczhxZEk2aFdQREp0Z05ZVTdPS1ZleXNuc2ZtYVdkVW14akZLcE5hMms5aGU2TTRNYmNWWGNhRlhybElBRTJ1dkY0elJjbWZ1NXhJZG9qeDZZbjMzdjFVNGRGQ1p1aV9vYzYxU3lxWldHeTF0Q3Rkb1NhbzdGYW9GUGJJSGZnWjJ0NDVpT0FUYkNjb1RVNFc0WE1LRXpoWmFXNjNNMzB6ZTRUczZfT3pkbU1JRFdCdGVlRDJ6NEt1WmtZeExiMngtb18wVjRHZWtLcnR0RXRySW9xLTF1UW41OVR6VWd1dElEWjM4RFl6SzBtNFliUU8wTmg5X3VoVHhFV2NuTVpLa2RMZzRZdjNoSlRVQVFtMTVfbHRmdUg3VVRla1VrdlJtVDVvaVQ0X1EtV3A5WFROdnBuSXFCeHFnQTVuTGdLYm45XzFwd3gwcHhMTjhMbFFNM2lGWW9MVVFQQzJ1dVNlRVVQblAyOEpzMlY5TS1LeFhzRmJsbnJmbm5CcjhVNjBUSmVYYXQ3U3JsSWRyMm1QdGVqRHppcVZIUHRJb1R6RFJ3MlIzbmpxYW5XdkRMYTltSExoaHFTZlh4VDNST0hsc1ZaaGFvUFF6R1ZENXVKdUd3TjlmdEplblZQbUxfTlpUaHlQZkZMRkRzVXMzbXR5bkpOQnN0UV9jTjFVRmF2Tjg3andwakhtUFVfWER6NHQweExYZ3VFbDJseHFqc3JnVm9teGJiMG9Tb2pQV2dFSks5VkZCZ2tPTmphLTkyUnhJWkN5SVNwVU9lajFLNzE1UjRCSld3UXFmT3VSbEJsazRHNVpLZlc4WWVBbV90U3h3THo5MEN4dEFON2M0NjRSdHFaRl82a3V5TEprUXRMQjZRaEcxYnd5SU15QXRjNm9Fc2FLZm9LOUM4NWpxazQ5cVF0OFpJV0lfZHE3dXFkWFJMUGpsc0ktTzVjeEUwWl9ZOFRoY2NOVW9Dd1NvWmRkd25hU3dqVERJZUU1VERzNEtXTXJmRks4RFIwMHVqeUFqTHFkbHFkc1lTOHFOMGRIU3VSS1V4NExWV09xeWpXc2xHRVJxYmhFY0Z1SlM4Tld0OXEyaEhtUXhwVFFiQzVOOXJFdFlkaUhkdXNiVlpGR3hCUnV6Q2FXcXF2QkRleUdVZHFsWWtDMGhNNExmbnFRbVkxVHc5NUF0Z1FUdk9CWDh1U1JmRUlKSDBzeDBGSWNMNmMzSUdkcVNXY2FJdGdGeDQwcmpjS1hsenlObWNhZHNjN00xM2JiU0c0dnBNdUI2ZzJtU05XY2d2QlpKTGtrY05DRWJ2ZkRUTWxXSWZ6Nm9tcjF2UUxablFFcG9CRGJocl9VXzh3cTRBS1RoMXZWems4djNKYXRZMUk1U18xQXJWYWt6cGs1LUNHVXNFUlpsdzRDRV92XzVKZXF1djJzajdIc3oyQy1sTHRSTmFKVDZxOUxTRjkxY3BaUFVCel9INlZNbTF2dnVjbDJkaTJZam15RDhmd182UDA3eU5hYnU0dmFhd1RxV0tHVmp4SUY0T0FfNkdLWHRTQldXaXAyakZGa1htR0dCa0w1Rkt1cV9aWkFPbUhOWTFReWtRN2oyYVA0c0hpd1Bkd1NURmhyTzU3TFphaEZ5UlVYLXBkX1FVRmxmTFJKNUZSUG5uUXdnMk82NGhLLWFKcEpMeUlaTURlWU9nbEp6VTAyN3NNTTZTZFlaVzY4Rk9iM3YtSTIydkJmdThsaDZqTkV5bWo3am5FenRObWlEbHNyTkVGNGR2cGp6VDBIYnJDQlpORWJyMjBybHBXS3RnSXFRMV9YYlZwNU12c0YxZVYwem5JVjlUZXFueFNMSlFHdld6N1J6S0V0TlBpT1d6d3VMa3pQLUxQMHRHN1RLU0NwdnZRZ3JLek9QZWk0cDhGcklJOGtKRWdYVmdKc2FCUEVNUlViMFFrS3BVa0RQRWZZTE9rYkhQd3RGY2NJejVteG4weTBmVTZfLTFJaUxnVl9WSF9sd3JieHdxNUhDS2N1Q0wwaHkzdEdySS1USUNfd0Zrd1hUNGdsamxzU1hkZ0RGODA2Q0t1MXlkM1VOSExaQnE5a2ZqejFNVHlaOC1BemR5eklIYTl4SWtIc0ViRkJrdGt4aFk4QldjSk5hdVRJYUdRLXlyelZHVXFBX3JVQm9laEo1X1dpSjE4c2dZal9TSTJXbS1ES0ZwcERtM0h3MDVIQjQxQ0lMRENmVWR3dTFFREYxWnNNUXVEUUp1UDZyc0dVa1NzWld2TmZRSXVZa01UZHFkZjNvSjZNSEVrVnUxT0FCdjFpNHh6MlcwZkxTc2o2R3ZNblotQmt1M3ZqSWxNVm5qVmVnTnRWY0FZTmc5Y1ZvZkdFNHpuQTk5SDRQOFB3M1JsOGNaejY2ZWs4RjJ6bkhEaWdqTTJhRV9qUHhUaGExYjRnTS1ZaUJvem9QdXcyVnNzMlNxV2lnN3A2MmZqOWJ4eWloZGY1WWZ1UTV2bU5za0huNUE4MEZSb1F3U1BYZ05QMGtBWFJrVFlRWEYzNlNTRXNxMDdhcGFtSGZsTTBfNEdBenR1bkVES3VaQTJxOFhUZjR3akJpWUlrQ1MzM3lJc08tOVpsWmgzMF9RMDBVTzcyZnc5endTaHQtUHFIS0xNZFpmcEM0N0pOWnVTT1dhUmJkT3gzNlctN1BVMkVETmlvYnNnT0N1bHhvNC02dW5wZklyZVBsRmxpVkx4MFREalhiWUhTT1RWT2x3M1VVX0xNc3hGSXRKQ3hOVlBBM2ZzLWdiZUdvMlBMZU9LTXZwZXR6SGMzcTVDd0Q4MGd4LWY3SkNNYTkzOWo5MmJyaFdURGxhLWoxVGN3NVVadWZtcTZNNkJrNkFVTXpCQ1hKZ0gtSVpUSThNVUJLR21JLVFMOWExQlhWTmR0UzRieURsdXo2ei1ZQnR6NVktYVRvdnhyZXgwR2trZ01YaUoyb0NiOHNJQlRTblJpaXhrLU15TmJKZmlfVi1SNnJ1YXZlcnRlWGNadGo3TWs2bEpXUTh2YmdCcXprRU4zMWdHVmJwd05ScS0wU1dKSTRCMTg3ejNYX195a2p0cGVPbVRncXZGcEZOQXd3Y2N5WUgtVmtOUGRLSEJQWHRaWUJXaVdWcXRrY0dDbjI2MjZ0LTQtbmlmVkpUTFhXeHJ3YWV5UUY4eWU1MU13X3JjbTRRV2xxMHhObHpCWG5JZWZma3J5eURvbnNMYnVFeS0yYzBBWmtJRFJpTDVLTWRfOW5LeGJZVVVxUGszTTZfV0h4N1BabEhXaTEzMjNHbTNWcS1XQUxya1FZdjR3bzJtbUU2M2dRb0hFZEhnR0YwN0E0UW9RcUx4aGVJcFBFMzZmc0pBdXR4cFZBak1QQWp0YWFkVjhkSmo4X3FUaFRuRXVVai1RT09ZdzBXdmdCcE1pY0NyV0t5bzJIQkoySFJUUENzYk5pb2owTElaeV9TbS1JSjJKcDY3WnVJd2hUR1ZrWi1iczRaYlFHZkljWEcxbURyODNETUxJQW5TMC1hc2tJdEhvVFJmS0h2TWtfVGdSOFhKMFZyRVJRUEFqcjU4MVBtYnFHWXBmemZhS1ZCbHpIMUoydTZxS3VTWFhvZTducmJJdnM0V0FfYmpteEFZVkhwTmFRSXd4V1BCTnlxQk16V2Vwc0padWFrblpvdUhXa28zMDV1YW03QVdFWnBhOHdsWVAxZi1aZ2RqTkhacXJqMUlFYW1TTGcwRkJWRl82M2RVTkNCcEF5c252SExheVRONWJpX2JObkNQOC1mc2w5dmRLb2E3akJFUERCXzFHWGx3YjRDaVptNDRlQlRkT252LWV2OW4weGNxX1NlX284SEt5VV9rOVA5M3ZDRDZ4NXZ3WDJXbkd6endlaWdQTjdzZUIzSktWeXpxamR2X3FSS1NtZWQ1X1hvQkNaNTdjSFRoM3ZOY19wVjdXVjdvQV95Z1o2UkVGbS1MQXZUSjFVdTNHMlk4MHBMQUdLUFhVOVBWUTFiWVpqaGhITFlNSW10MGJhSEtVWUFsSEZvclFPcS01c2NoNW5oS2dhUktwMlJsMkFhbVpsLTI1UHpmS2N1OGZfaktmUWFlTzhYa0NHOE5KNHdMU2RwNnlxMXJ6cnhCSjl1M0VoVFl0WWxzZmdRQXFDVjdBWXlLbzA2ZHBNeVFGQ08zUkZQal9aUTJPbGNaczktY3p2bVFrWE9raWhxQkdwa2Y4cW5xb1lKNWxTTlhNRllYSTZ3VENiQmItcmdwWHNrajVSUGVRTVFReHhOckZYbFJHalA1VjJEd19Jb1pCbzNJNjZPSWpDYWlHUnRGV3J5eHFlTm9kWEhuamd0NFNob1pLVDlhdE5IdF84bUNJaVJ0N0hwejJNMG1uTF9sdGhCN3FDVnRUelowX1h0N0s3bVJhd2pVV1lIdWs3RUhYbVlMU2FGelB3WGhfaWg0bTZJcDZIVjk0SW1FTU5RYXhsY2RMNU9PRE5OVHNpVWM3WXg1WEFRQWpqLUd6R1I1R01mdjNhTlc3b2w0X1pHaEN0TlNGVmg2YWpiQlhlSHFHTm9mYkFwemZadFpmcmNLQm5xYXpsY3lmM1MxZjZpTVRjaF9PVkV6WlFaM3V2NXBob3dhTWxWNG9aUS11cWwtTXp2bzRtX25vNGVRRWdMTkN2NVJEamw5d2hPUU5BenhGU2dzNk81REc5YmFWUHpqWFNscDg0a21aQmNudmVzSjNnZ0VpSkJpRHRtd09mN2hLSk95RFhzV2ZtZXlVNEp1VjMyQmkxdDEyWDJPT2sxSVIyU2g5bHBVSldHQjR2amdmR1IxWnNZVUtFZENtTTF3Yl9yYk5FQWVhTjhJeHItNmFad3ZleWtIQXVWV2tna29sSGM4eWtWSGpmWVhMeU9XUkY1QjhFa0d4eElrN01oYWZ1aTdqSklHN3VyNExOZUE3ZHQtTjUtYlljTEgwVUVneFZGWjZyWllBdkVRTkEtOEJjWW4wc1ZETGRRd1Q5S0dia3FNLUtYU2ZsSlU2OGtZZkgyc3BjZGNkUG1BMVEzUF85YU12M1dmQWhmVnZDTlRPSmhsMXJRTWV6ZFhfSmZSd056bEtYazZWMlpNeE5Rd2gtQXBJbzRsTGtTOVo1ZkR6aUREcWxHWEtaQ2I5Y3BodVU1TGNWVGpzMkF3STZIa2ZvODhyV21WdDRNUThULVppbnVZdWE1NmFWeEhrMFFoc0Q1Y2dUN0dhT01hQS0wRnZJajF0M1ZfSEZYUGNOWWl2OFhJU2FhVDBPQkVVM1VlZl9SOUxQckpBSlU2LVRibWhvWXRDSXlieGl5TjZiMzRvdzlOTGtrbWY5SGRMSExjOHMwd3VGUllEekxmaVF4ZC1yTDNpM0pzU2hZaGVGQTAtOXVOR2o2TUNtWmt1YmFNcHAyV2RSRm5mZHBiWDR5SlA4SEw0WWs4YnViUHNpdHFxM192T2wydUJKU25LVHpFT3NSYmRNcTBYanBqcmxDZERLaml5MFRDVThqSnVDTURUb29rSHAzZTZCSmxTc2dDaC1NUXlLSnh0QWxMVnFrWElXcVdMRnFNVVItMDE2LXNwUHRWS1BDTU1pZ1M4eVdIdC13ZmZxSDVrNlluUnBNTzdGU05BQmJXVmNSQ0g3UlQzLTh2Wnc0T1kxLWNLM3A0eDJCQ1FoczduUDFpZnVtTTNkeXdoUXRIY0dFdEV4NlBDaE01YjBtTGRfY2RscmRvUjRGMjJNV2VXOUQxX2Via0dWRWxQN3RlY0NVa2tCOVRuUmZTMDhrQU13LUVqQ1p0Wk0za0F1Y2NGaEN2NlhCaFZUTzhtMXE1dnkzM09hMmptcVZwa3JBUzRBSkNhVVVKT2hnZFNBbDVYZWw4UGVNTml1RG9wVWtmY0dLcEpDaklnZFlhZURtdUcycDh4ZFJycmJLbTc1N2pQb0pNNW05SjRWRlJ5TC1LOWlCck5uY2FaUjRVSDMyREt3ZDNUam05V1gxcGxKdGZKSkVWMFJ6RzNQS2VKRDF1S0drN3ZGY1pTTjRTc3ExZVA3MFNhaUlwdnVLNjRuTjF6N2lBcVQ1RUljbHR3SENOM193R0FwZEFvVGlCNTdGQ1ZzUTU2am56TXBRZUowcWV0cG1SbG9FMXFoZHdCMk1zeVBhSUNrS2VBMGtvdnVJVWlEVWQyQl92cFRqbTJ0VmRJNjdoLVBId1FiYTNpbWdudW1UR3hNdHJleUtDUERmdWJ2QlFpR3EzN2tCaGNuS0x5SjJTbmJlbUhucmtZcWZwemZielk4Qnc1UkxkNGxYVnM0Qm55ODBndkFTT0NxcGJqWU1FdFVCdE9OZ2o3ZEV4QTBzbWs5UndoMzY4R1JfX2ZnYXl0ckhPaXFDZDlDMEo1NmNLUHd1Yk1hNGdvaDhJOEM1TWpMVVQyVW1XdVM3YXoweGNlSUVFZjRzbS1HSlRtMm5SR0s2RTlMZXRkRGlrVDlpY01MclVwVTlaVFB3VTNwSmVCMkgtQlZhSHRZSi00cHBCQzRlZDRpUUxNSkFTdjg4ZmZVV3h1T2U1b0hlVkVTR1ZFeWtjWGJDNnVnNnE2cDlqLXR6QU5JZTd0N1Z3N1otX1dUOGNtQklqWHZ3LURrN2E2eWpoNXdZb3ByajZYZkJIcFFRa3ZpeHVQUTQ2cVc0OTBBNlNvQ1hEWGotNk9iVGxJbndFaUFqZGlBTXhQaFBSc1VCQ25oM0xWTnhRNTN5WjBhd1NONmlfcmpPd3NmSDdMZDRLV1BkOFRKbkRUZlVyUFJVclFib3dDaTRWNmtwamxSZm1aNlR4eEhvR2tsYTVoZy1Zalc3RmswcTFOc3lTemNLSFljbUdQeE9BSkJhVzgxUGhIR3ZIVlF3ZkFvTFgzZjNZV1pUa2JTdFNVUl8zV1Z3LUpQUERNeklVbVBPSF9tdzd2aEhidHJFeXpHMWdUY25GOFRnSkNJeGhoSW5oTmxORk5lOGNscFFpUlI0WlpaN2JvSTVWdW5KTzNqWTRRdHZlSzNlRjU4UG80UDJrVlpUU1BFVjhQSVBRTUt5R3FldzNsZXktcWJCXy1qRlFVcEJtSHpqUlFpVGJWSk91TmRpdTRYR0hWbUpPUXJtM3FldDJtUXJ1TEVaUmFZSWdYVkdwU2ludEYwUmZjWUVQNjV6V1FjUHo4UVlsRm90WWFfV1N0ZFJLYkE4MWhsZmcyVjFYVkgzQk1rUzBvLWoyLUxKZ2tZcFM3VFZRVHd0ZVRrV0hORzRJVUNoR1ZvaTE5MG1vcmprQzNBbG94aHl4QVRiUmk0QV91TnpVMVhnZ1hlVlJlTi1aU0R2c3VsdWFYc0l3M2JXM0F1NFl3TlQtU2NwRGtIOWJHSXktLXBNOUprdzF0RjNjcm1VWVljV25FQ1E2dU1neWRscXlHd0tRZldkaHRMbWJGYU96cVEwVTdKQlZ5VHNRMHMwYndRT1FIV25ZZllkOEczQmg1M2tkaklpdnRFZVlsbkNsVHR2cnZVVm15UkZCNjFXZ0oyRjlFcUZXVS12RGdYZ0JYQ3k4QXgtMUV5cFdKVlpEX3FFdmpfUEZRcFZXck96SlBnUFZVRFdNaWJNN2trb2E1dG5RQWN4WHZRUTh2bWxLenh1b19Rd09BWVdCNWhuOTBrMWx3UWJzajJ3SG1tNUhvV1NrWGxhTUNCenllQkZpTjl3ek5TV3luNUs2ajh6ZGw2UVktc0NFWk56YmRDUHA3XzYzTjFxTm5OSzZDTlVraWVCWWhRQzBtNFh4TExTQTFsbDZQMDVjc3BLTmZ3QUV6WXZkdGlueU16b3IwQV9kdUdraVJkUHAxNnRSWHQ3SjVicUVNUFpRWVNDVnh0OVI3TVFKQUNZVFlnQ1N4QnRaZlJ3bzFtVlUwZkUweFR0OTZmQ1dnU21lX3FGS09yeVc2SkxFa2hpUmp4VnBJRzRKeWt2S1lZb0tpX0tuV2JVb3hGUzl0YTJGV0MyTnp1eFhwQ0VlQjRjRUtkUUM4ZXZzS1NhWVg0elF5LXlsUVhmTGIxZVUxOGxLSklkYnMxMzNCQXBNeUxrS212QVZFVDVxWDdmVUJEeUZGTVlZRUsyVTBmZnhWVVk0WmNiZGxVVEt2WWdsaDA4TUNCc0VPY2FFQ3pydHRlYUFBNVFoQUVucnVRSkl3N3lRc0lNWDNPOThLQXJDU2JuS3ZSQndSRVpzM0h4bE9FelZhb0VGWG5IQ1lnMXRGcGVXMWZIV242WkFFWGczbWtJb1BGeU1VT0pQeUl4cHJFYnZwNnl0ak1LQWtvMTByUGdlNHhYU1FzcmZzZDlVTE40OUdfeWhIQ3lzY2pKVF9nYmpJTGNRTlI2dDZrUDhyZnRYZnhuNUN6WkVlYlZfUHRTRmFCSHp2VWlLZDFfRWJ5MFhLb1czV3l1ZThJTUp2dWdpYlRUckk5c0tMazVGSHBPemdINUlvTHhFTEQybkZNV3pxNUQyZXNmUnBSNzVXcF9DU3hObndHcEY2UjNfa2ZmanFfZnA0MVVockppbkxpaGY2Qi1LU3M0R3ltTXh1aTQtMHBrakNNa2hSUW1yaUcwSDJzVHpGYWljbEhDNlM4S3I5NmY1Wm42MmlYZEd5NTh3WXdrYzN6OFY5dUhyZlNaaWYwMUt3RDVXQVBLWEtXOXJzVzFjMkFMTTJ0amZXR182ZXNrUjgyUVpFOU5rVzVwS05ycm5UUVBUYVBGa0xUUGtWMW42VVo5S1p3XzRNQjkzRFA3SThnUkotTGZqVXZKeU1hdjdiMUhsTFFlcXhNZzVqc3cxbHlSMXpXakw3ZDl3bmkxbUN3RVBRZkhGMk0zWWd2QUZJZnlVa2JmZFE2TGt0cmxWZTBfcFF5Yi1qdUJLM0JKM28wY3Y4NjlCaGxwNWVxQUdEdzh2bkVxQ3BkVWNZTlZVcXFrYnF3TnpYZU9ZcFEwOE45a21paXdHb1I4enBHSFdUcTBPNXZ6S2tVR1FOUndDc1hXMGgzSEkxaEpST05DSVEzb3Y0YWhDZ3NCQmVxd1NYQ2pxdjR6LWhldU1CY0JyUHBvaE9jVWktTjc2aWNuWFE4eEtxdXpnMC01cVdzYnlsY2RRRmJVRURlZGhYSjRtdlB2eG41ci1BTV9PYUFWLUUwYi1TRXZLMWR3aHljZ292NDRwdDdTWW1VODZyYlh2V3FocWZIM3JMV1pyTVAzQXRUZk50R1lVbjdDRXZoTF9ObmZZVlpjVkRidUdfRUgydTVYLVVtQnNOeDM0OXEyclFtOEx3X3lNbXd6bkhYSTFodENIWVFpVDRZM3dTVzBya3JRdDlCbHdxYXJIaWNZclFhNVRQWG55MGNQRVQwTWx0eTZCNjFrajVrMndGR3RDUGpqNWFsalZoZHozN3ZKcUo3MnliV1lQdHNmdy1BQmczZ2NEWmpVdjNyV00xeTY1RnZXTERnbkZGZmUwdUUweVlIUno2aW05QzVOVzJQXzhSTmRoLURRaF9VdHZJSVRKNG1FcFoxMl9KVW54NllScWZWWklFMC1Sckw2TmpReG9zUm1jb1R5VVJsWFF5Mm43TG85dTB0dzk0eG95ejQ4SGlLU002RXBzZHoydkJpTGU5VFUwWi1fVl9nNndic2ZGY2JwcnNhaXdYQXEtVi1aQkRHRG50SEZsQlgyXzlJZVl2RERKbXZmbFBaQ1pRUFk4NEtIcmlfUFVUbklyVGhtd3JKZk1ZQ2JaZG5mT1pWd0NTWnlhMFppc3FvV1ZqWEg5cThVT0FvSHNoZWpXY1lGSDBGcDREYTR4a3JCeWlqR3h6X2F3S1ppVWJPT2dvckFEVFVHSGN0elZ3T29zZU12QzhqczFHV0g5Uk1PbHVHWmNBMkdYSEZ2OVk5QlJkcGplQVRiMHM4T1R2WF94S3BSaXQyMlVyN2h2N1h0UTB6ODlpeVlPdzlYMHJrcFlWdnJ5cHg2MU9rNmRTeXJ0Y19CV0ZfM3k1NkN4Z1FsV2QyYlFRUnUzSmQzbVVnTXdIeVNaRl9uYTljeWxZN3hvZDZsUFlCTG1KcVpzVXc5NjZCbWg0a25MeXhSVlZ0bkZUc1hUcWNFSlhmdEhsXzJ1cWN0elRNNy1DS0p1VXlPYU5sWW5KTWNiYzBfYlZHTFZPRHBhdGJsdXJsLUNvZHZjWHkwd2oxcGN2UlZRcXU1LWg2cjhnV1hLd1F3c3hrZlF0OHdMU0haRTl5YTR5NDVrMldFaXp2eTNieUMwZ1doMFpVM0hGVW9qQ01nVGxaTW5Kc09ZZExnTzJTOVgyNkJWdGxyMGpvRl9tMF9YZXZvbUNEVDhZRS1fc3owV0tzTXd5S1pXT2V3d0tNUWZKWXVPTFk0QkQ3cHktcDZFVnd3cG0tZlRFV1NlWjZYYzZ6OHRXeFNsN1djUUlQR19yS0dSTlRvTGNBaVhXOExyVk90YmFpUTZjMGJ1cWp6NjBPNlJWdElWRnk3SS1aNUxHMmpXbjdhVHdKcEw3OHVDc3J0MVdoTHBaNVQ4ZHZlNHpneXcyWm5iZE1fUGZfMmVqWW9wVDlqNndEVXB1WG9nd3RlYk0wa3NEVElFRkN1R0JGVzVWSU9ldEFpNzZnWXJBR2gyVTM1ZlZUUDhodmNoUVVhR21yaFJvV3o5dkFHN2ZMNFFzQ0xkUGRBSE10aVB4U1pzOFpxZFhRYTdVY0ZSUngyMlItVWdoU3hWaFlCOVVqQnloOFdJUXR0TEdjeHg5WGFJTVlkVTJBUk1vT0YxTEp2UG9fdURKTEVFMGdMdGo4TjRXZnVDRVFoMHgtNXQzNXFmZmxNOE54TDJ0RTlqdzAxODFmRUFNRWhvLWw1M2lMMWZUX1ljYmRONEZZbzNoOTZjRDVZVENDSnRULUlLU0ZfS283U193bnlIQmN2bGxWLU56bnJCTGZMNFhud3h3MWNpVWxVZTJrV1RldzNfWlJoc0hud1R3aUVjTVNXWE4zQ0tUbTNSNUhEOXBZR1JFdlF3cGo2OGZVOHp1VFQzbEtiazhyVmVJemk0WW1zRDN5ajFReVhXRGo0WjZDNzN4WGFuSVRWckUtM29PY05RZEprNzJ4X3gwaFp1d1EzeHF2N0dJUmUtenRDXzdib1pUT2tQR2dod0U1cjQ3NTlEaTU2bHhVWkdTcC1wX2JmZmgzQWdWZEt0aEppT0d2YnB6TFJYU2wxMWI2TVg4d3VCWFpwdkNQWnU3R1ZHQVpqTGwzYnh4YWxhQ1VYUkdFSkVqZlZGcnQxZFZtLTdRaEM1WC1fak9XalRBWWtXcm5MWkphLV94cUozeEkzSXBHUGJDZmZ5ckdYbTctZVN3THotS3VUdWhGa1pxdkVpdWl3bzd4Vk4xOUpIemhKMjRiOEFUbXRDZHlpZWZrNmtnbWFGT096akFMaFNoZE56YkE3WnEzR0FGT0ZXSmc2d0NsQ2N4UEhHekVWTzdDblBad3c3b0JkdjVTclVkMnpxZkZ4UldZd3B5cExtVWdna1pQaHUwWEd0aVJhRDEyc1RuQ294Wk5CVm40Tno1SW5PY1FDZ3ZSU2c1alZLWXhBelI3ajIxU0hRanhVNTFUM3J5cjN4SmNPX2lDRkJabnVVbFdpUUVXRzZ6Vy01OTJoRzJWS3RYbTlDLWxKdXhnUXFYeHVDV1E1M3FnczE3STctUnNKT0t6cHRCNGZaWDV6eGEtYXFwVjRLT1FIOWR1Z1gzNWpRcUUtbk1LNXdwN2xaZzJPQ0FBdndUZWRYUWtNV3VTLWE0VDdsQmViV0NnOVNFZWFYdVVlTnZaUW5HQnNvS1JRUk9Ma1VZSTBiYnFVNDFtalBvSWdzbzh4YUZ2aWxjT1c2VTVFaHd4bnZ2ZmpwclZ4WGY4cFAyRm5vM3p0SlpkYjZ1TDZLRDJGRWd1NlMzSzBKUGlkdmRLWkFObmVONG02eGx5bFpfYzJ5ZF9tdFYwUDRWTFVjZG9Db2hVUG9TakNvbU83VTRfNlREV0JfMWVXWHliai1TcVAxSEdsaVAxVVJrNEtVMllwRFNkWUd6UVJnYlRrcF95RlFaeTF1R2lJdjV4TDdOcF8zU1NadFJqQXZ4WWlsUm9FcFREVC1EQzZzWEVrYmVuUk1YdjNEeWdzbUxLbUw3TFQ1blkxRTZlT2pBbFZOMTFmd1NvZUNxUzZfMkc4ZTFSYzFwbkRKOW5jQ3BOSDU3WW9GZ1ZyRnprX0lRQy0xVGxja2IxdlFyQ2xQUVo1TEp4YnZnUDB4Y2w5M1ZvSllfaUY1eFZURlpKOVRETE1yRzNhZzdQbzVhNUhOVnlwLWlUVWw1cWxHWTY4bUxWblM5SFVhV01FTUEtVjNfX000TWQwWTVxMkI0S293aXFTT2RsMHg2S0JOQkJEVmRtZXdvQ3hpWFpvLTNGSzVnSVlEaExnY2VDQlJJaFpKd3ZNMTZGcHRCX0xVdnRwc00td2tPdU92U2gtQkNqTHJjZjI4Zi10VklzNW4ycWV3WWdaOVF1NjVrN2FzYndnM196QkdWTm01S2JQdUxqeWJuVjQ5WGRGaHh4T2N3QUY1SzRaOE1VRDVqT0NmOGJQVS1ra3FQbFItaFAxSkxNNjRESFcyckdJZGVXbE1ZV1NDOERxWVVLR1BicVdWbTFrMmtqMy02b0RzaE43a3FPSnZPcHdxem15SzhaNkZiZFEtSUpTeHpxblNFamdPV1BwM3ZFTHkweFpReURGZTFOWDM2WTE5dUZGamx0UmZrZ19nU2JBTTVTUzg1Q2tFcWFMbkRCa3M4SEdLOTBkMFh3clhfYzhSaXRHVDFnaTZGS19RZ3ZsNGpwUG5DQnplRXBTOGc0ekNjQTJTRV82dFZxYjVzeFMxNTlIZFBNa0VmR2Y3bVZjQjVNNVk4STg0WEZOUlRtaTdEdzBlaTJwdms1MXY2eDk2RldOYXNYR1F0cDAzcEdlMXUyN29UbW5RN0lGaWJjM3hnc0l6VmhqdGlJbWg4czhkSkIxenZfOURqX3lDSjdYN2Y1NEhuQVpYOFcwQkNmeUJiR19aQmZJb3g5cndTZXdaS2JVUWRuaHF5YS1aeUlpejBTWHlGa19LMzllQmw0Z2MzbVRVeXlZeW5vT0tkMGViMG9NbW1OLV8xUlFOQ3RPdlUyNVp3RUZndU5wc1ltR0ZRQVFfbTZPd1d6Qm9WQXJNcF9VTVdEaWp2R1otS29vQ2tCNkgyZW1xNXZaanVXbjl5eG9UTUtZWm1RSlctV19ESDRaNURWb3lsN2ZTaTBTandqbGc5SWhLVFVRa25sSVZXelFJbnFLWjRZbUNOeWFIdU54N2JJV3JJaHF5OFN4MWhEcUlPN00yT01IeEN6N0VyLU5DaXo1c3dVV0ZTeUxwOW1oaS1NTUJ1Nno1MUdXTmlyOTVaYVk4M1U1d0VUek1sTnJrZWk4ZEVJMERZQUtYMTA5Q3k4MGpVSDlEVklud21uaU5yZm1sVDJmNUtMRmlvQVFsMFFiRWFMNFAxZXY1SEQ4V3Z6cC1Xei0zRUY5MkhBY19WeTJsQXpXSXJBcFhOYk93LU1fSVlla2FkZTlNYmFUZkwxcHc0TG9QMFViTGtRY1VmWmdRRmhaTkRieklyNHNVWWNHbzVLR3YzcWxsc252OThtVHRSQ2xEdjhWcURpVVNXZVMwMk1tUXJmVVkzeDJyY2Q5RUhVUzZ1U3hiM2I2dFNPQ0dLY3ZKVTVjV1lhWXo1bktGLUhCRUtwOWtld2lKT1ZlRFRucDUtNnUwN2JEeDlqdzJCTGk1anNwZUtuYWJRLU9rSXNWQ0Fnb3lweTdWTDBBWXBQNkRhLUM4T1hWTEU1WG1XMjB5SkNBZ2NaN19nSEpGRE1vM1BSU3A2bXF3Qm83T3NxLVlUVlNabkhfNVZzbW9xZ1l0UmlRSFhGTHFFU2VFTnJ6R3F6Y1BkeVgtcFd3ZnQyVHhCRTFpaFBJZE9PRUFVNDhNeHRQUHFHcENLSGc3bk1OQzkzWFRiaXpIVTZteS04aEdXa08xdWRYaktaVFU0SWU3ZmU4TUVKdy1PYW1xQ3pNQ2pyeTVfWmNfNVMyeDNmZm1Fcm1pTUNGMUR0cVVxRDBaa0lRVlJpSmRneEZ5dGwwMGVCbV80elNHTVdDVFJMV25odTA1N210YTh2OGVidWpzTk9KRGp1WlRocm5pNmFadUxLYnBTSEJJVWpRdk5CaFFKb1lhbE02ZHA5RDdlTk5LQkRhUXkxZkxVV3RaRzdNV3J0VlFhUXVyUGlfeDlwb1FwZjJxYXdxZkRGeTRpZURfdlZzaDdBWTk3eUYzOEZsaGJoMWtpU2Z4YnlKdGZsTUdnZTRjSHJHOFBQZ3FuMVZBNUNYU29ZVHZBMnhmZmVSaUltOE9OV2Vnd09Jc2Q4b0JwREVZZWdYc0NhaXVNOW00cjhYWXhBUk5Ta0lCeE1pbUtqeGhnTGlzUktOMTUxSXdKTmVuYVdVWEVCNWtHc0YtQkJ0M1NmeVZ3MDhkUFFCNXFPbTJOTl9ZS2NheFducWJ2R25JZXIzSlU2Q2VyZGRjcnNGQURYaURNSUZoUnFuSUVid1BxU1dDTjBEdndMelBIYXV1em5PWFJzX3J2Q244MVkweTc0Z3dGdHZna1hlRzdiNHNRWlphaFBxT2l1UnJTLWNLbXpRTjFOTHQ5NkFReXZEcDBjVmtLYlJIX2hHQWlBM0oxdEJCU2kxcWluUm9raXUwRlEwOXF0ejFEbzhha1daanZacU9VSGV4dnRsdFFVNTZnVFBOenRVOTN1LWFxVmJYNHcxLUd2TTlzanhCMEE4Q3FwRGp0V3U4Y1QzdUlMX1MxODlyd2VzeUQzUy1jSjV6TnRjaUZJODhqaXE1anhSaWk1UWVUbVlVNlV5aVlMRmgtYkVJWmVSelRmOFFVT1ZEcWV0UHptMU8ySEVucW1zTXZzZnl2VnZscXo1RGlDYk9ULWMydjFtTTl0ZWJBckNkUHZJbnFDazMyWTBqckRNU3dfUk41ZUZ2YjhmYnpSMjhkT2JRLWRzZU9iaDI1UF9MSzk3SUthcm5JZHZzcjk5M2pYVkhDRDJsckp0OExLaFEyVGxoeFpqb0hQSE5maDJyUlRXRkZyQ1pZcDN4eF9nVGEycG5iZmpzVmJBdGR1U0lzWUh3dzAyY1dQTm5IR3ZKMm9nQThfZXpxLXJDYjBDbllBLXFvY3czSFBSZGFLYzhLLU1fYVNHS3NEQWY4RTBPbVRnSzdQSGdtTlF3bksyeU9POWhpbXQzY3p1TmJqNHU5RFNjR3pQazZ4UEVCQTNwSkpMNDdaVl9CNXROU3gxV1hTN0hfbWw5YWdOVzBTWk9QREdqMHdVa01VQTduNE9ZWHNJUWRnc3RSY2RZbTJkclQ1M3Vra0h5ZFQ0RTQyZUN2RWhXME14YlhuMWNMNTZVbWY5VFBsd0lpQ0F1U1IzdFFoVnlHOXFIMmhGSnNWSFpnSHNoRDlnU0V3SlBLbTdyVklTOTluV0xIQTZwZlBOWFNzYV9WU3JUaHgyMGZfRFNoUmsyTTV4cnlubnhVQXhVWEVSam8zZk02TzNfWFZLNFlwZjlsVWRROTFCRmIzMnNEN2hNY2wxeEE4andvdVdVVUxfTlNSOWpGdVViYkpKMkRrVGRpRFVqUmc2VW5mODVaSkRGeVB1cEtOT0VWcjFpTDV3Zm9ZWmgxeF9KTWpJQnl6T2l3LTV1NUp3Umg2OEc1Q2ZsOGZ3R01kY3FNcDVROF9vYndWVFVEUzRsQ0ZrejNaU2VaU3gyTTVwbXoxSjZ4VXU1ME9kZWE4Z0pWSDRWZnNva3FTV19pR1BmamhHUVZYa1JCVkZyNlVuS0FJZEcxdGczYzhqVllrNUd5TmNSWS12eWxoWVdSaHBnYlhMaU1yQWVSX18wRXNoMERkRHAxYWdMSXFwZGNKTG1RY2kxa2dfT0JLS2w5ckp5bUs2X2FXX3FzRXRrVU1SUXRTVE5oMnNtYmdHREtjUXVpcDhmcEl3SDZXMnQ5dUVsTEJkMmUtcU56b3hNS1p3dkhleHB5aUdSZ0owYWt5YkZzaVhId05Ic0xEcTZBY016VlY3aWlMOGI2bWozR0JGb3FBYXZHcEVScU5ZSmtJeHRseXRMOTZsN1RnV1Rud3NCR2ItcHZDT0VuWm10YkFyVW1nbmd0Qy1fZ1lidzZ2Sm9KdHV4SDVLVFItTlBHS1FUS0ZnUFk3MEx1TDB6MFVnZmFfSTgzQjRQSlNMR1Vla21KZlZIanRPUnBOVUw5TWZLbEdmMjh5VllMWnNOYmxTdGF5WmxFUlpua2gzeUdLMklxZ3lNYWhBTXpWTEtfNTRXTlp5ZEtJMGh4dkp4V0hWdDdkTUhzTUR6RDVkUnFRLWhmSXpzTmtEUlZkLUUxYU82SjFqcUdkMlFESk9NcUFsYmRES1JrMjNoSmRpeHNZbEZEWFZhX1BXWGZXc1F1VDNlUHhiZ3FDVjZ6YlEzOUFCR2pBcHNnYXBIR083RjJIVXp2alNMNXJNRUhaakw1ZVZDMklkbXl4N1JXbzF5THBfNTFvODVSZzJOV0xDVGdLanlyZ09mNlpLRVY4ejNZYnB3YVRGQVh2cnhQbWhSNFdpbU1mZmZaSVVaaFdjYjVoUHBKclBZSURHZjRJZzcxeGxPRFBzeHljOXZvSDFpYnhjMXBBNGlWUjAwOFpXcVZKWUlwOGcxX0dGbmJpUXpjSXBkZVB3RGlzVjNRa2FaZktOLXVBUHVkb0FUQ2FmSVBua3NWU25GVXhjYnJ3MEQ3ZWMyMHRxZUxneDhRc1VWYTBFVDdsdVRfWkR5QTZjY1BWTWxlRHNqd3JlZXZfTkRnZWxVdEY1M05GNTdaQkpPWEtxR20zUHN3aGJiendyNWp1WUxlWEg5Q2NnTEFDbTdiSk5raU04UEFxOXF3NUlkVUVuS0NZd3M3ZndidGN6aUg0bWpGSHRFUVlodDlGc2t2VFhfbmlBVVN3ZFp6c3NWbUF1MlhVUGp5b281eFZnU001YWZBc29uVHYxdFJra29TOTRva2xNTmJNOGFkVEZqOFdMbld3VlpwWGpCTEVITDkyZ01pSHlwbGloZFA4QjhyUDZQTkJXRDM1OHhNRnVTd05hWFUwdmtrTm55amhLUUxFampycXQ4MmNmMVlPN3hUdWFlNXRuOUR6eEsyYllITkRSUFpySUNlUlRPMk1PVkRsejYyNnpMdUhPdTcxMEZza0JJQjgtdkhVVWt2TWdPSTFIOWlsRk4ybWRRdHBLLXU2aWFJVXJzN1NQMnlzOUVUU3RaRk9SX2hHZ25DRG9NMm40a2JEVEJjNnpkMTdBWlQ1S0gtWHJOUTktZm5DRERzdEp4bk1nQXU5VndRY3ozSV8wb3YzbDVHYUtTSUpOU2RLOEFDX0ZqN1BabDNkQnhsZ3RqclNhNms0cmMxTUNlZGlnSVJyTW1URDJSVVZnMFplSC0weFBzMzl6SVJTeGh4ZUlHSFM2QUtwVGF3enFsOE1ya1h3ZXNWRWgtLW1vODYxbktzaXNNdDdYaXd2WS1TODduVVMxR0xJTnc5SjczWFVqRFZLMW5EcnozNU5kcVFBeFN2ZWVQNTRTSDh4UmZOR0pfbnFzcVFxNWlCSmt2TnNocEMyNlpQX1Y4Rk05cHJEcVhDUk5BelRHZkJSUENCcTVRVjVZTHJLLVpzRVVIc2hnWndockpTdUVpbDdoUDlxV1QwVW9qYTJ5ejBDSHp3ZTBjcVZCM1RkZDdvcUdmNlJ0QTIzRVlNR21VX2hrQi1xZE9YTmZCNXhPQXFrVlNzN2k4WGNZZmdKOElPU2Z0Zm4tU0dIM1cyWU54RGh5bGtSamFoQlJrNDJBeVFBQ2V0RmZkS3FvTFRteEZrQklqWS0yMHJacXlNaU9MbjQzQnJIR1VqSWpFNW9qNHo4SUg5UjdEcERFYWw4V2huM1R4VUttSkxCd01BQVRlZ0NkRTM5RG54TENzY3RNSlFOWjlIZVMtdGNWWkIxbXU1RHlCVlFvdVR3LWxsM0ZDT0NEbUVYZEFlMXhpbUlBRWlCUHVPNjU4YUhRSDQ5SEV1R0VuVkxNSEFhcjl1RU03YVZ5akVIUC1WVzFiQXBqR1JieUMwNkw3WFlqb19xMV8tXzBOZVdpNHNOcy04RUhJTHFhY19DUEg4eHg4ZXFTdlQ3djBsd2ZQMlJPM2kxdGNVYWpXRWtsUW5tNWNLWlRCeEtPbE44d0g1Y2lDdXRrYkZrbFhpZnpyY0VYR2JuQU9QREx5N29DY3p5STFWV21NSkpJenpueHgwVWl1c053cDF3MWZRZGVfdFptcUN4TWJIRU5ROE4xcjVybk5IbVJFUmlyRWxELXhWWnZmVmdyT2xaNm9KVkRYR1JqTG42S2hTVjVwdjJyQXpja3EtWGxVU1g3NDM3Y1o4QmJaVktlWVJTb0YxTUMyeEY5RjVfTFR5Nmo0ZndGV1lCdFlvRnJqZF9WZGd3OGl2MDFKZjFJWGk3TnNRVXlQOW9MczBCRDRITVl5bFdkX1QwVEJHRUZfWEp5dzg0V3A1NjFQYXg3WU40eWJfT2cyZEEtVndzaXppN0QwQ0RPQ05UaXhON2FMdUlvMjVyS19hYlhIclpoclFELUwxQ3BJTHdZNVF5R0hldDE5U0FwcmlFVDNDNmtmQW9KaUVBYlRWYVNUa2tqUmE0LUdpVDFwQy14Q19RR3lUVEN4NjRWNWhkMmp0VkZNSmxMYUY0NzRLVUJpOVhnQjZadmVkU3M4Z09ZSVF1RUZQQjIzUVA4S1JVNGgzVE0tdGtCTk1CeG9OQlFWOXltLXVCY014YmlMcEdHcWY0RU9kaW9xWUQ1WExSSHk0bnZNdjE2dkJnYU9Xa2E0OHVSSEx4dE82TFUyXzlmTmxkU2U5YWl4SENvVVkxUUFWd3FaRy0xTXllY1pndXN1MnJMTXFXMGUxdzF0Qlk1QkhSdG80YTNhR2JqUExtNHlxeXg3UTRiVGw0WUhEenNFVXlTQU9kWERWY2JDOC1SdnlZZHIxWFhoWVBWREhTYXhmQ0l4bTVqaE1uamJuOEh2V0lGbjRGOUh0TGxXU3BOUGw2VjhYSTN4Qk00Xzc1a0hhOTVING95dEJUNkxZZXlUT0hZV0dER09RR0cyeG5OUDhYU2YzX1NFZzhnUnhiaHRzeUFta2VmTjhnNTBRM1BCT0pxbm5FS0U3ekpxMmVacFpBRDhIbnpWTm5yeEdSWG5QN0lUUWtEby1aWVVPN0NCb285UC1ycEJfVEVVVC1BTnp3ajJvdGdoQ0xjV01TNHUtX2xMMEVKV2p0OG5UTDFJZjFHZFN4bXNHc3NDTXd2M3dpVHRtMExMSDhaN2JiQ0tJY3F0SGxERVhfZXo2RDg1OUE3OUtkR3VHZHoxS1dIZGYyaWs1eldacW9fVjRvUzNVT3psQTRMOTRiY05jbjJ2djMwQWExNFJQUEFyNzFXM3FVb0dwY3hobkxYZHZ2emdVQXJUTzFwbGpGZEhiWnBxVGZFZ2owZWlhR3cySjc3d213QkdqZmJjZUdfbHZMR3V2cGpCQzhOSmJfUzVjRGJDdU1aQmlXU0s3NExzM1diazNtaElYN0FfRkdXT0dhX0FuWnJOVjI3Q0owRElDaTRMQmxYWGVLYW1QRFYwV3VGZ1BXc2RfaUdiY0VXUkpkaEUwVGJfa1VBNEJRenhWdGF0RkZobmxBdnlnVi16cEg0cFl4a1hfaE5zWHozdG5ZRlMzV1BYMXZyY0U4akR2R0dHbmJYTHVZVWhYY0dSSGJoY0VveUprTHljM0RwTGtlamFkZGV0NTVjZkVpRHN2SG11X3h0dEs1bXNVT09LWHVKZGIzM3ZGanA5NkYwelhiay1EV2ZUbVZQXzF6eGNaSXNucjdwVmJMREx3QVNOcjNqck8tc204VTFBZVNnNUpPeVBncW94NjlseGRsZ1ZlamNBR1VWRWJacTZyVlM2Tkh4T0drN0czdlcyOWlmaEZiZjQtUWZDUk52eVhSZHhxei1UYTJZSzltUmJmX2paUU5SUy0zdVNqdnZPQ0ljaDlJaHJPUVVFTVRvekN6RThoZmc3RGN4MTg1QmJHVlo2ck5wSXF2TDdMb0kyVUZidEZuLUZFakl2YllJS1JRRkZXcVlNMXY3UFJXdzlSMXYzbXpOMF9yd1JlMGpvRHZtcjhYdVZ5SkctT0ZYU2EwNDdNekpjb0VVQXZkQ2VlcUF2NTRUNV91dnEyaWxkeXNPUWI0bnVUSm5zMFI5bnRnRDN4cjJGaHpoX295TkdsZjFNQ01nT0pMU0d4Y0R5LWZxUXVfWlhRdUM3MHBsRmRCaEd2NmRKS1pjVERWT1RkWDFsSWJDWFdTalJDMkRCaEotU0t2b01wbzJkYkdhejhpM2FiNEFfd3JwODJYallQQm5LelNIRHlOM1pSeXBNWjZ3dlJFejN2czBFRmprR1NuQm9McjlDZmU0cmxEVk00SjlkYXpOVGpoVHVVZm1WQ284a1lySEZGdnFfUER1LTRhLVVDcUpVeFhFbkZLVEg2eXI0X1BldG9kX0RoWFJraHZRS2ZpM0gxZjFIUmFycmwtNjRIaGZTd1ZtSzVvVkoxQXNSNEdkSjNDX2dMUGpEVEJ2RmstWkRPRmxia0Npd2ZMZVY0WnJ1cDVPUTNuQ1NZWGdaUTk4Q2FKNkJ3azBnRGN6U212VlNtOFZyblE4S215OE5jcm5RaEh2eTk2eFhRQ0pLbEhwSk5UTS40Rm9hOUNVX0phZUtRSEF3X0UtVURR"}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '638f5601-2233-4d81-9c5d-b1afa8ab09f3',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:34:48 GMT',
  'Content-Length',
  '33220'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .delete('/certificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '6d063cea-d5f5-4dbb-96d9-910121759560',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:34:48 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '3c23bde1-96d5-444e-a5e9-dbb7e3e06000',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHBAAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:34:49 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:34:48 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .delete('/certificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(200, {"recoveryId":"https://keyvault_name.vault.azure.net/deletedcertificates/recoverCertificateName-canrestoreacertificate-","deletedDate":1578602089,"scheduledPurgeDate":1586378089,"id":"https://keyvault_name.vault.azure.net/certificates/recoverCertificateName-canrestoreacertificate-/721c11482149480f93ba5a6dd18f8de5","attributes":{"enabled":false,"nbf":1578601487,"exp":1610224487,"created":1578602088,"updated":1578602088,"recoveryLevel":"Recoverable+Purgeable"},"policy":{"id":"https://keyvault_name.vault.azure.net/certificates/recoverCertificateName-canrestoreacertificate-/policy","key_props":{"exportable":true,"kty":"RSA","key_size":2048,"reuse_key":false},"secret_props":{"contentType":"application/x-pkcs12"},"x509_props":{"subject":"cn=MyCert","sans":{},"ekus":["1.3.6.1.5.5.7.3.1","1.3.6.1.5.5.7.3.2"],"key_usage":["digitalSignature","keyEncipherment"],"validity_months":12,"basic_constraints":{"ca":false}},"lifetime_actions":[{"trigger":{"lifetime_percentage":80},"action":{"action_type":"AutoRenew"}}],"issuer":{"name":"Self"},"attributes":{"enabled":true,"created":1578602088,"updated":1578602088}},"pending":{"id":"https://keyvault_name.vault.azure.net/certificates/recoverCertificateName-canrestoreacertificate-/pending"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '2ff5954e-e2d5-40d1-bf08-74f09eb14562',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:34:48 GMT',
  'Content-Length',
  '1294'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '552e9e7b-ff28-4857-b5b1-33862b65b6a5',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:34:48 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '9d0ab8db-33a7-40b5-a09c-ddd0ff206200',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHBQAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:34:49 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:34:48 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(404, {"error":{"code":"CertificateNotFound","message":"Deleted Certificate not found: recoverCertificateName-canrestoreacertificate-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '146',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'd69fdac8-f1c5-4b05-8a15-3dca28890131',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:34:48 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '129cc46c-1e22-4f1c-b78c-5bea577e8332',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:34:49 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '8e2b1825-9ffd-466f-bd9a-67530cae6200',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHBgAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:34:49 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:34:48 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(404, {"error":{"code":"CertificateNotFound","message":"Deleted Certificate not found: recoverCertificateName-canrestoreacertificate-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '146',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '9566b80b-135f-4d92-950c-dbe5dab35b2f',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:34:49 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'd38cd2b8-88fc-4e9a-832f-1183aca7c2d6',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:34:51 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '5d462256-abce-42a1-a373-8f1965896600',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHBwAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:34:51 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:34:51 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(404, {"error":{"code":"CertificateNotFound","message":"Deleted Certificate not found: recoverCertificateName-canrestoreacertificate-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '146',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '41545ea2-3097-4b4f-9d6b-12c5e88fcd48',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:34:51 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '79b37bd2-cf45-4484-abcd-bda2dd00e100',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:34:53 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '508e7e59-e423-421a-b081-5dd82df66800',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHCAAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:34:53 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:34:53 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(404, {"error":{"code":"CertificateNotFound","message":"Deleted Certificate not found: recoverCertificateName-canrestoreacertificate-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '146',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'e7419867-e004-4d23-a9a1-772d572ae06d',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:34:53 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '47bcec0d-633e-41b2-864a-61eb2aa98822',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:34:55 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  'fd323336-0bea-4cbc-88f0-2bd6e5327e00',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHCQAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:34:56 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:34:56 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(404, {"error":{"code":"CertificateNotFound","message":"Deleted Certificate not found: recoverCertificateName-canrestoreacertificate-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '146',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '77ce02fa-16d5-4dc2-9a73-28158586f9c4',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:34:55 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '24639b9a-af7d-4bdb-a6db-95334ed5321f',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:34:57 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  'c3670e04-b0b6-4465-ac2e-0f1f69a06400',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHCgAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:34:58 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:34:58 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(404, {"error":{"code":"CertificateNotFound","message":"Deleted Certificate not found: recoverCertificateName-canrestoreacertificate-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '146',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '3faca04e-e431-4a07-a232-47692e27e37b',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:34:57 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '4a74f47a-c7cd-41cf-9a92-3f536ac857fd',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:34:59 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '2c7267c8-f792-430c-9987-e63290b26800',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHCwAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:35:00 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:35:00 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(404, {"error":{"code":"CertificateNotFound","message":"Deleted Certificate not found: recoverCertificateName-canrestoreacertificate-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '146',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '0af2084c-e7b2-423f-83de-427e06e3f1bb',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:34:59 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'e47e32b8-bf6d-4a39-bc87-420cb53385be',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:01 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '26766efa-96e1-4dfa-bcd7-446ad86c6500',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHDAAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:35:02 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:35:02 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(404, {"error":{"code":"CertificateNotFound","message":"Deleted Certificate not found: recoverCertificateName-canrestoreacertificate-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '146',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '89a10132-fc61-462f-b20d-073a3c212c9d',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:02 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'e3ea66d7-939b-466c-b1b9-728a282e97b8',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:04 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  'fd323336-0bea-4cbc-88f0-2bd69b347e00',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHDQAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:35:04 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:35:04 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(200, {"recoveryId":"https://keyvault_name.vault.azure.net/deletedcertificates/recoverCertificateName-canrestoreacertificate-","deletedDate":1578602089,"scheduledPurgeDate":1586378089,"id":"https://keyvault_name.vault.azure.net/certificates/recoverCertificateName-canrestoreacertificate-/721c11482149480f93ba5a6dd18f8de5","attributes":{"enabled":false,"nbf":1578601487,"exp":1610224487,"created":1578602088,"updated":1578602088,"recoveryLevel":"Recoverable+Purgeable"},"policy":{"id":"https://keyvault_name.vault.azure.net/certificates/recoverCertificateName-canrestoreacertificate-/policy","key_props":{"exportable":true,"kty":"RSA","key_size":2048,"reuse_key":false},"secret_props":{"contentType":"application/x-pkcs12"},"x509_props":{"subject":"cn=MyCert","sans":{},"ekus":["1.3.6.1.5.5.7.3.1","1.3.6.1.5.5.7.3.2"],"key_usage":["digitalSignature","keyEncipherment"],"validity_months":12,"basic_constraints":{"ca":false}},"lifetime_actions":[{"trigger":{"lifetime_percentage":80},"action":{"action_type":"AutoRenew"}}],"issuer":{"name":"Self"},"attributes":{"enabled":true,"created":1578602088,"updated":1578602088}},"pending":{"id":"https://keyvault_name.vault.azure.net/certificates/recoverCertificateName-canrestoreacertificate-/pending"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '0d6b3b6e-0a1a-42d9-8372-fa8d14999463',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:04 GMT',
  'Content-Length',
  '1294'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .delete('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'adac833a-0023-489d-aa63-33929d7b072a',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:04 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  'bb8573db-3a9b-416d-87ec-e9af8d966500',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHDgAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:35:05 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:35:05 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .delete('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(204, "", [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'a85e84b0-d31c-44fd-91f3-c00a853c818b',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:04 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .post('/certificates/restore')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'd774c497-807c-4a8e-aa30-2cb29a96ecfd',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:04 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '5e4b12fe-19e4-4be7-8ce2-bc292b456800',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHDwAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:35:05 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:35:05 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .post('/certificates/restore', {"value":"JkF6dXJlS2V5VmF1bHRLZXlCYWNrdXBWMS5taWNyb3NvZnQuY29tZXlKcmFXUWlPaUkwTXpnMVlqQTNZaTFrTlRRM0xUUXlaVFV0WVdVNVpTMDJNVEJrWXpNNVpHWmhaamdpTENKaGJHY2lPaUpTVTBFdFQwRkZVQ0lzSW1WdVl5STZJa0V4TWpoRFFrTXRTRk15TlRZaWZRLnVTLTViR3BOUzJoRk9CT3dWZV9QeHNqd0lqRkRnVGQ4Mmp0Rm5DMms3UTlUQ005U3V6ZFFxa0xDdkZRY01HMzN6aHpud1dqbHUtakxfTjRzNm9pazFJXzJ6Z2drd0h3NldVellWdjczeG44Z2p1Q0RVMko1Y2tNZFJiUDNKV1RQVXB1Z3VBOVp3dTNFWUctdlZOdXZoR2s3c3ZBa1kxQWxKMzVuajgzQWpwTVY0UXdUVnpYSXJSODVXNE5WTDRZN3JsY3VyWGM2eXlNVGpveHN2NkZzZ1VmYl9IRGU1VVlKNlh6cXZNT0tyMC1EYklFZmJzNTA2ZlRRTWt3REtMY1F0ODd2VjdvSnFick14S2VLeUFJU1hfbl82OTRfcUpLbDg5alZocnJuN0EtempsZEI3QWFIb0VhSGQ2RjJKcUR0Q1hBTVM3RzdtNkFLYXBpVnM1QXFaUS5LeThVWUJEQ20zQVE5OTlJaXl5N2FnLjNaZklxT2xyNzVCeEVDM0E0SHQyYWQxeWlkcE9kWlNqT1ZNRVpDc2Z3UXBHeHRTVEpBUWdpTEVvdmlOX2JZZVNwQnhyZTM3My1wTDJQcEFiSmFpdUpDMDMtY1lBZ3g5aVF2SkVoeW40eE42bk0zMFVuVGY0Sm9FWGJKYWFHLUl6VjZXRE9VMVEyNk5famdyd1NfeHByYWpuX2VlcFlUOS1vLWRBSW1acmx3c3c4RUc4dFZITHNkbDZLQTVCXzJmTzBEVS0wSTktSDhiVnM0WGNNRS1JUU9UbTZ6aHdvV09sWUpFVUZWU2lyMWI0U2Y0R2VER1JhMU9JeGZ1QlBrRmtOOTNfNEFnUldtMHVMYWljNk94eE5GQXFWTHYyQmQ4cW1naDVSVUNHeDVRNmNWVEJFM3RiWXdpbloteE9zY1U0WmJ5QkxDXzJMMWNsMEZyOEt5WWpCTWVmSFVNNmtCc1M5TWIyRkVTdVJQc1ljTTlZdk9fbzU4bmhMTnM3N3NaOW1WMElLdmVRR0M5VkRvNEhLay16Z1c1Zm4xQWlTX1ZkUk5IODUxcEZfTTRwbWlSRVVaX0E3U2I3alR0cXFZamVjMUpRTklVOW5NcnV1SnFYazBPV3U0YTdIdkVYTUZwanJaemlQN2JMaGs3YWJoSE9RUnFtdnlEYnZlRUxTTVR6NG9oOWNfeklwU1RTVUx1a2lnODFzaTBWdjF0eDZEVXR3MzdjMHVzeHhZV19oMTFhUi12WXByTTlfWDdxclhnTGd2RTRVaUFBeHozZzBkdUljN0o0ay1aVEJtQUQ1djk5em51YkJNS0I4aURYbUJhSEd0SVZ0MUd5eHRVNzBEUUxua3Y1ZXVDVTF1Sm9tZHl5T1AxcmdtVFdnb2VJekhtUllXdndRNHdkUXpzTURHTXhxd3N3X1dGSXpaMGR1eVZmUUswMU5ZN0ZrWVhOdThhcWpHaUZFS0hTUGhMdU9uVmtOQnYxT2FPTTlocTk0clYzbnJCRzBFNnJDS1FmaExHUjMybFYzRFFKbVgyTHU4cElvUjVySGdzRkszaUpGb1JJM0x3NjRpbTZxdm5YNUc0aVN3OEtLeERxeDQ1Wkt3aTlxS1UteXdMZkFmNldEREJyaVRiWlBDSjBYb0lJX0hCdXNyZWxUOGJnVFpLWlpnckFCSVhCS05kbzRKR3dqeXRTVlVnZm9mcnNwdHlGOW5kTEo4RFp3WlVuUy1UVEhCTXZmekxIOE4tYnZ5dlR0Y1NPbHd1WjAzX3JMZ0JLelZheHBLaUpaNXVxM0xhNTNuRzQ2Y0k4SG5oOGtJVFpnMDBjNVJWdkQwMGY1VXhqUDZrX3dUR3JPYlpDREVPMVZ2N3hsYzRPbml3QkpKREx1REczbDZTOU1GbXNQbDBNRnI5aHpTS3Q5ZlpIVFVBY3lWcURSRFpYbDNPemJwamZOM0lTUGJncUNXN0xGTVA5NlpDY29OSDBTUXZfdnRmbEZzLXdCU1RFN0FmSGtDWUd1QThmQ2hSWHMzalVhcFZyQWljMWNfdkNKZ05jRjNBOW9kQUQzay1ZUUR5WlhXOGpZc1pQbVQwdjVJczNmYUFLal9KckNITzBJNHJtQUJLYVVrMnBiVzRYaWxIWEVTUVZlTHhQRzE0WWlhRDBLbG4xUUtWQUN5NTRiaC12THV0WWVtbkR3QWdoRmhHamMtUGNmUWRkSHh2ejFTVTVxRXZkZjdTcW43NEp4R056MHNpSXNxWVNZOGREVl9YTG5NMVBfZ3dOdkhuOG9xbDBrbjlFdVZydFFnV2g1Tmk2NXRkTkwxdDlGd0xoUWdWTXp2Q3ZQbkYzYk9nemp6Y0hoQ2FiZ2x6WmF2OC1nRDZkampPbi1hZEVEU1dOT0MtaGdJRU5Dazg5WFpyX0VQRTRPV1pMMnJJTy1KU3djRHZuX1J3OVgtaVFCWWtjMGxNUElVSmxObVJ2R0FKSDdUWTFVVFZvY2pDSXhaSC1OVW45RHZXM2NfSHRSOVVVNWlxaFJ0cDdlWjgxZWpKUVVIOUFybVNBN2JqWXhOa3JHbVQtZWIyOWtPcUYyNk1pYV9JRXl1U3hvbTFEYU95MTRaNWxtazVrWVdPZmFGemtSNExVR3U1WHg3ZEd1c2p2UTdpTC1zendQTi1zU0hjcUp2SzZ4Wl9CaWhjbXliMW9OQURhU25Ja2pXa3QwZjh1QkNmQkI2bTVaNUVSU1lPdklXZ095UnZYajBhMkJwQVVuUnYxWDBLMjg1QWRseEpmN3pRY1g0NUIwaTFOSC1PNG8zQ2pDOXR1TU03STNfRWtSdms3NEprR0ZfSlZ2cElSZWt0NTIyTWlwWUs0VmFRT1Jtb2Q3T1RjNzFoMDd0SmpvZTRMeDlSNzF1SFZJMGJlaGlwN2thTkxOX0U4YUR3X3lSRjB0dVBKQWRVbnBEVTcxTkdkc05lVHRDdnZ4TVJvbDZGSGJlQmNVQWRXTkt2SzBQa1AyV1RYcVpGRzZxVXlJQjg4VEk1dG9MaWpvMG80MW1HeEtkbkdxVWRWUlVZb1ZsQXBkaEVsNWdPOW9lM0J3dFhTeGdzN1JzYW9yN283TVRvNHNhQWUzLWp4VWtNbVI4WWthRHdqODdFbFlsWGs1UTFvZVp5WUx3Vno3dTNGQThxQlpJVVRCQldWYXVMNkFzUlRTaWRRalFVYnF6S18ta3JyanlwbllTOVRkMFoyekFQZm91YTd0WmZ4RXNGc3dpZjJzTkMwUmUyWHBXY016RERBSk5IUmRGXzBocm1NSVZPRE4wOG9oYWpPeWNiUHpvZE11c056VEtTb2I1T3VFODl0TjBYRGR1emdfLXhxOHM5ckVZSjhlS243ZW5rNjNZZS04dXdXMXJpYnRqMlRqTjNaRS02QjhMa0FpaTRoR1RtVFJnZWZsUnhSbi1IckF6LVhJaU43blhNX09CbDJwWlBfNmlBTDRoQURnREM3N3hpeV94WV85WTVRa09XaGI4eFEzTXlNQXhscTM2ZWVSbU5yQWxDUzhFWndWdFpZRS00ekk1NXZBT2pmNFo3YjAwNDRFeGNVMmFYNnNnMEVEVlExRHdmd3FXVlA2clpXaUlCSlVrdlo1YUZJeE1SV2hGSFEyVGpMWW5JdWt5Vldua2lGaExtY1dFMURMTFF3U3ZmSTJjRnlzUmFKSnJjb0NNMHNtRkVoTUZxNG9oZkt1WDB1NGwxYnRhbW5vUHV5YmkwV25ZWnZNOHc2QXRMOHRKUDN5R2VNUjB1aHBJNEI1T3JJUkpoLUpHMW92SjJheXVtcVBVUXNhWXlMVlN5RG1fWEE4akZGd0lwSkxkUjVEREFqbnd4dk1jWldMeHFUSkxmRG5UbjFVY25YQmRxRlkwTHdNVXROTnc0UnYzbHk1aF83NGlxN3V3UGZ6LXBoM0xZSkJYdnlSbHRISlVhNU9SbEdiS2NyNV9UeGdxLWRZWTIxNUt3YXNKUHFCVEh0YVg2ZGM0S2tnSHEwNlJ3b1VLVjhqWi1YUkd1N2tqdndSR1g0QlJVUXIwX0g1WUtWdG5COHdBZWFveGRQNE8zNXZvYmJXUnZvRER5NzRLTkxaWE5DQnJQWHI2ZlNFUTh1aUw1Ny0yMXJCMU1VS21RSDBRdzk0STFXMXBYMVk5LU5fZC1NZ2ZubjhBTW1sT2FWVl8wT0lSWlNvaWxUdXc0OTF5M3ZUVUJITXZKampCcjJ6RFN0V09lS0NLSDFGb1pHZ2hBU1NuQXdidXlqQWJfU0Zyd1g0RFF2TjdmTHFELWt2STFxcndFZzJZTzdfOEJfR0hXTFM4dWROeWNDeEw3WGlBQVJRemJFeTF3eklsZHIyMmNPZm9MbEp4NGE0RUlFODhWWVVmS0gzcjE4ekxZY042eDF2SjluQUNtMUdqXzBJaXJjb0RmNEVGUXlkWWRIRy0wcDZYSFpoUThuREVvSWtpclAxdGgzMzc5RjVHNmdlcDhpRHlRYk45RTdTUEVCV1ZsYmxNYUpWdUJoY3NTTHBtNWRwMUl0Q3BXdzQ4N2Q0UnZkYTRQZndBbGRxclVYU19XaGEwRFd3cVJfeUtaZWJseWxYbUFvNk8tZC1PenZmX3FMelNOZ2labUtfNEROLWFqRTc4WEhad0tYWjZSMG9BcXA1b0F6bmxtcGotN201SmphQUdZVXpqUWZObGxpYVc3VzZpeE1BeW5Bc2Q2Y0QyUGcyYWRWYjNQUnd3ckNlc09mQlF3b2pTV2NKa09CYlp0OWRDYVRFQ3pDcUlpZjA3OUI0MFl1WkVqZE05ZmJfbGsxOUJwMUZPNlpPcVpxSjJldjVHb3k5NVdfTVRXYmRFWHg3bkRDemhXdy1idlcwb3UtN193X3NWM0YtOXFzdUxjUTNxTlZGUnNneThRUVNMQmVwdEVBY1MyZk15bDZoNUh2NkF4Z0VqdDRpZjhxQzlxbVdCRnZZSHNRZVdCWkZKU25jLXBsOHpoalFEUFVKY0ttSG1KNU5zT1NfZ3pUbnZWV2ItWFRuQlk2UVhBd1ljMGZMU0dMUHlZWjhodjg2RV9ZYmRDanJUM3VrUXhESlhtLXJnWkFObW1uQ1poaHM2UUdieURSWnJtbGZBcVNiQjVyd2gtTkVOcUpHY0ZOZkRmTWVUSG5aZ1Y2dDZHUW1jNmlPVG1iNkt0SjFyeHlkVEtIWER6MEFDQ1pEWmpJbUtGQjVGTkQwOTJ4SmppYlUtWWFqcjJqZ2lDRlNUOFRZMnpGb210NkhBWFRGbVEyTVdFb0g0WE1QMGxLQUlWUFBnX0syLXhMXy13cWJacloycHAwdFBJU3NnQTV5WEV5ZXU1aEoyUzZ5OFZjVzd4VVZvUGsyWS1GRnA1ZVJoYnRtNm9IdVVYWXQwTVdvSmhEdXhWMXhsN2xwWmZfeWFnckFoZF8tTDVtNlR4S1RhcXo3V3g4S2NKUjljWl9tSGo0UDdRQU5VT2JfVTFBN1ZUR3ZMby1JVHh3QkFjdURLVUVSMk9GS2lfZWgzN09SMVJHZWFUTGdpakpsbldkcG11c0pkbHh0LU1DanJIMG5SXzBKSXZYQXZsTFhBbk1ZLWRkNENRbjE3SHpsOXRPbDRpRndTaDB4dzFxRVMxQ1ZCMWlYTEoxQVpWWF94dEhIUjRwb0ZFSWJaT3l6RHJTMmM0TlJpNFdRZDQ3UUE0RUp2cHpSOFF5ZjBpd0wwWkZ2S3lTaWJTUHpTM3daYlpybGNPUUxFdDc5c3dzUWs0bm02NG8ySUlST0tMQmJ3enZOQkpyeTl6bjd0TUxoQzZMV1luSGRuZ0ltbDVCY2hLT3g3UV9nQjA3OS1aS1FsV09lSHptZzU2MDJhN0dMZXpPYjR6NTZ0bF9uenMtOEJjeWJ6MS1fU0N6RFpZYnp2RktxYVBaaWVLWHBhQnctclc0cFJkdVdDZ2hGbnRUU043N0NST1Nud2hlNHJSME9NalpseXRkOHBWNjRGUmczWm9IWjdTRFZ6UTRJUWNRQzVsMkZVU1pTNWZFczN5cXNmcWZLWl9SVDJfcV9YVDZFbDdFRFZlckZYNF9ZdUVvOVZHNlJfY0FYOWwzc29pa1NHdFN2N0Mycm1tc0wtcm9fQ2dxMmFkTTBtRnBSNHRpN2R2RV92Tk1oWHhjMEdVT0k3OWRkYzdwMVgzd0VUZThzM3ZnTEdaQVMydEE0TTdrdzRVOEdYRml5aFFnNWZRWFk5MEpqeGpvd3Z5aGltejNLU0M3MHhORkQ1RkhHMTd1bTFvUzRQWmVqUVFoQnYyUjYwVGl3dTlDV2tObmNkYmJEYzVfd1hlV3F4ajhJcW5UQ1hLNVBUUUp2ZGFyOVVhUlZFWUtzOXdnMndzVTFVUG9IN19qd2hNVDV4SDVEczJicjQ2Sm9oQ0lFZWRydUJyYWJqRk1TY25jWXBUdWVoaEFOdjdZQmsxRHI3OUlaZUlGZkx5UGE4ZHpFQ01XaFFhaW8xQVFZbjVfTU5Gdno0UmxpLXdjOTZXMFpVRkhqMjcwaTBORnctMzI5cndnWXNDTnNweFg3aWJEem90bDlJV21JUzR1cVg3VFN5SnFpVDhkRzV6ZnNwXzJVVHJfRXJXbDAweVJsU04xcFQ1U2g4RUdGZnJ4ZjlNNmpIc0xuSU5KMUNhVm95XzFsVHBEWk5jOVQ5RXhXY1Zndno5X2pvOHBNZVJuZVExU016RVpCcFM3Y0ZabVdmUV82dFRXU2ZON0RNLWp6OGlxZmp2U0RhUUZFR0thOEc0dENCMlB0b3NSTUJuTjUxSXRhY2dHeFptSUtHa1p6UkFWeG5INjVuZ1V0d3Nnc2txWWRiNDc1UHFJVjFfOGtEMFlZajlRT1RXdkdCWHlMM0R6Z1ZCX1p2SzNpcTlONTVBNXliUkpuUUpGRnFqMHVJWGJJYjZub0JVT1dxdU1kblVyMXJxWVB5UXVaRzU2YjJ0NGJhVVF5VzNWZkFyQzg2NUhpZGl3OC1Gc0daTXV4RTVZWUh0M3l2QW1uNXU3T1JNR3FrYkpmbF9zbVlaWWpzUmNHaEZqa0NuLXExSW9PQmt0cmczTFNEU1RvZy1rZGRpZEVFYm13Y3hCZnBGdjZMS0tScnBvM0dpNl9kUVhxdXhHeEhUVGQ0bUVJVDZEbE0yeXRmQ0xNZkhfd05nX0l4NGxUdzc2d0p2XzN1OUphenlaMlN5UUpULU81UHpFVlEtcTZTTDlnZElUT1ptYTNlWEdMeFBEVFdDcFU3T0UzWGJISHJfUkdhUVExb3VXTHVQTU9ndFMzTW5VYS1NUU1CZHBJbmRfY3VmcC1rWVJiOGhWaXZ5dG9yOXdyam1LZzJPQ2JCVUQzbWxvS3FON2hmQUVlcUJMVUlYTWcyX3pLN1NzeFZaRzBNUUZPZWc3dExXT3pQZVVmeU9helR5bU9CbXpITWl1M2VsV3pqQ0NQRWdnVEpDOU53MEt1dGpBZnlJRXZXTVRJMEZrdDludzUzNlBXNUMxWEpiMUtwb3J6ZVFVM0VRUTVNQUVuQWtRcllKNV9wcl9Jb2JQcTJQVFg4a3ZNU3V0LWNuNzNBZlNVTm9NTjVia3lQNGRhQ2dsOFlwNUtvTzNxdU0xaEtRdkhaT2Fxc0tBN2QyMjJueE9JbnlEeGYtbzhTYl9OT1JXLXp3R05MQjRPUV81cnN2RzZKSW11c3dkRXltQlBSWUdFSEhxaU80WUhSX2RQRXBuam5Ibk0wamFubGhvdXJqN3UyS1dObG5GR0FpTUZjanhlUGlfZTdyaWl0SUpDdnhYLWdfV2RyVWU3MlRlSHFqaXdOXzg2STdsTVFNTGdyZWlURExnQ045TllpV1A4amZaa3RaVTB2eE90OXN3YmdTa3JnQl80VTU0dmEzRWt2ZVd1dkRqZFV3VnRhRUExWnB6MUxocjRzbk10WWpIX25FcHJmMno2cVRJa2hQbVhQZUUtWmY5QmFENjlESE02Q0psUEZocWgwWnRURWMzNV9GWW9lWk51RjY4eUp1QVh5LUpCX0p0OEdwMURtWGJvTTcwTnZjVkM4eF81dVNBUW5DVTRrWlFIcXd6dC1jY1NQTFVfRzAwaWtnVTRVejdwQi1KNlFNT2tVS1pzMVJxOUJnc2JLYmZtNFk3dmFsVjNjMkRVMG52TWRzSnZCSGtGSjBVbDluWnJBX3VRNGVrckdEQXphbkZsWWh6eVB0eUsyX1BPcGpnSHFERXNxZEpqalpOdzJ3blV2MzlSblEtcHhVVU5NUGhMWjcyOTNOVFUwSWU5OXU5TUowMGVYSkszWEZVSzJqeVNFQ0luM013T09ybWU4aUlqRXRub2pBUmItSllxNGZzSXBPbFNzdjBhWnRKeVF3ZXZDbE52TGJZT0VoSWN2WjhWTHVRNmlkaGtUb0x0T283OVpLOWh6cVVoMnZneDE5d0tfdzVjaFpyaWVlcTdsaW5MekZuRkpIanJFTUR6aDlZR2dYellTQnNYd2Z1aTdKSVFFdTFtMnFXa2ExdFE1cjlUZUM1amxzUUhGcWV3Ujh1ZDVaU0JtNlpEWVZJLXNTREFQWlJXSmJrUlEtMFY2cU16SWxxNHZRR1pNMHZ2RHlOal9yLXdvRmFVMldxMXlZc2Faa2ZESEVQdlVlVlRuMldsb09rb0ExREpHX0FiQjctQjVEWmdCZmVFZUhick1GNTdUbHdhRDJXZWNHZmFXQngtMUdiMFBxYzRWdHZjanF0Z3huSUJpaFZwVHktalNNX2hrN1ltc2NfWDRoYlNkVjV0NWFpMFFWSFZCZ3ROOHZjM3hOQ0g0MDJDUzBKcmJ4cGRZOGFmRi00bVRRX1RpVU5SZFZGZWpJMmFTVGcxV3NvdF9TQ1NvTW9PUWcyVi12cGVWTE8tdGhzZVpBSDVXeWhQQzM4eGs3S0VEZ0ZPT2ZNR3FNb2FWbHF2bTBTaU9fclhDVTdkTFdUZE5EQW84QXZhQTlGU0FfbTNBUG9ULUF4NVJMUXozbWJxbm1wNWpyRFkxSkJubWJzR0czWW9tOFV3aUtqTjZQWWVvSzdSOFRjTTZsSk53SmliNGlvaHlmQnkzWXhLX1NuSk96MWxiS2x3WHNTNF9uUGI2TlpsRHozUUphemQyNWhEZVRBU2haOFFPcW5YYURkaGJNTENRcWk0aUpzUkpKWmtNR1MyXzR0R0MyYU9HNzhxcTZ2bWk5c1o2clVvNFFqRW12WEt2c0cyN29nTm9NZ0NELWlpWU5zRnZuaERKS2h6WTBXdEF1Q2M2WTFxWmpXaFktaFpvQzBubUQ0b2ljXzliVEtzakNJb0JxQWhXLW1BX1lFZ05vUmlQcjdKcEpuSF83N1ctV0w4UmVrXzEyZjFWZ0l5dVB5NVBES2FZb2ZsRi0zMjNkamdjMUpJX1RkSDk0bks4SVo3WXBwcTM1UkVGYS16a3hPUTZ4N2ZxaXBNQUZKTkk0MVpweW1XZE5JZUE3LUdwanh3YWcxZFRkMEVlR3BYcTFpdkljY09Yd3Bxc29zS0dnVGhZamFJQ0ZzcW9iWldZMGdOc0V4SmFSMVp2ZW43M0owMFZrMmlsVHRtaTZGTHZleUxkWkg3UnVEUzJsdGZaTGxuTElGb3M1OVlDcXVzcjFFYnFyQjRFOWpGSUhkaFhwUTE0MGNydlpOWkVSVlExNkdoeUhhUFVSVnlLS0hxdWZubkNDdzFSbGU0QVBvd2FUbWw3bk5IXzgxU3Y5QWtxNVgwWFVFLUl4NnVDWnVKMF9jX0lrak13M1JJMkRpanQ5b044a0hRSnNkM1pkNE90RHhfWUVEVUxUQXVpWkJtZ01WaGN3Ym1YYkVvTnd6YWpIU2M0NDFYRDR4WkxRVjdfZkwzQldlYUNwYmtqRjYzRFRVS01jaURGNDI3MFNtTzFmNVJ3REMxaHp5TEFvTnItZU1TMEF3LVNBV3FCdnlydkRhbnFoYk9kZHlMNHE3a2UyMmNDNWRuUG5lbEtQS0lMUVY3QXg3RG41MmhqUzR6WC1zb0l2S0lwY0tKSW5UVHdITkZIQjdBTllKelladmNkcWJzUnozMEJENVVHV3Njb240cW5pcTU1Ni1CUzU5QVVmdmVWcjZsZ2xlMVhScW9MQ0pOcGZQazNMVmJNN2Y2aXRJRUZoNVh2UG1SLUxhTmpOWTYxUURrSjB6LWNqZWQtNjd3aEJiRDZSV1JmTHdxYS1GYkhPTnVjS05KaEV0QTFxSFVmaHo1SVM1ZFNKLVNyUmNHOE1DNTRRcUtuSVZLSjJmU1d5d2tqaXBxam9wRkRxVUJ3dDRsaHk2cnpqQXJBMm9Sdk15dE5KS2NFLUlGYTl4UDdGTlZBZ1Q4WDhubmo0YXFJUUVBRkJya3p3UE5UaWJGUzVxOFFzWDZ3V1lsVnp6MkFNbG5lYlVsUkxHR1g1bVVsX096MWZXQnRGUFAzbnlHSWF5MDR2RkNPLVg4YVByMGF6OVVfRkUzdmZpRDNmRkFqQTBpbDhjc0wwVzJmeVUxZEJoQWp4cGg1RWUxS2VnYnNEWnQ2WldmOWJtRllPVS1lemEydUROWGJUa2JGeVFIcE11b1B3UWpoaW52b053TVk4ZHVhaGNWSGJVLTBXdkNkSS1WYmh6U0phTXZnYUtBMl9CMUNLYUVrWUxfc25ZNzhGQzF4YV9GVlBTNTRBZnpOckZUTFItQi13QlkxVTNKdHhsX2tHVTktVGZZUTlkaHZNZFhGX3piaGU5VWZYdUtOdnRiR1JLUXlrVjEzd2NiMW1TTnlKSkNxdml2dUhIUlVNcmRDSnhIVmdHS1hYRnh0UzZ6eDZDRlVNR29OM3RYa1JJMmJFM29uSDdpVnkyUDlkNFIxUWtYRW9JY1NwUUt2MzB5T3M5UU9MTGJjMXVxTXpka0VWN2ZWRjZjWDE2SWhval9ZLWZJTy1WRm5KdnZjZ2MxVjhabkprNk9ZZUNSYTRWRnZoam0zb0x5Wm5idmdUbzVnWEtESlE4VTJrbVE2Qi13TU44OUd1ejlKM2V6SWUtdnpUSm9XTUxMQVRnZzdVbVc3Mk54Y3Y5VTczUW5LU0s5Szh3NWo3YnJGZ0k2eGZHOThHcm1hMXhHNE9YYmp1dHRZT1NhVlBJZTl2ZENQZ013YTdIMXhNaGVZamk0dXhkRHFWV0lCb19UdkJHLU56WWVTRmhNei1SMFdCTjh5eFFYUG9sSVlwb1ZFMHBMa241ZmM2N3RBM3lGTEx2X2VsY2lvdnpMLVdRX2xGRnpuZ2sweWJkS0RNN2ZNaGpYNTYyOHFuVFhQSkRGRGNmcWl6NUt6RG5ELXNuMFlnWEo3V21wNWFsVElmR2NXWEF1TmlwUVYtQTNOLVFCQWJQZDlXWEY1alZneVVLOUxfdHVVR2huakZlUlBiSjhGaHZyRzVFYkN4UU1YeFczenRHd05iZUVRbGhzankweHZ1RHZSZnZyTFhNdmtGRXJYMUNPVGU5MGVrdkp3LTdnNTh4QkVYN1otZlRtb2xfNVEzcEk3VUdXSEg5MTNhTXRpVXNPZTZIWFFDU3lma1JMSXlSaGNnVUgwWTVUcUFLaGhrYklIVTlnd20yd1NPX0tKVTVVZTRfWjVLLUZ5bUMyUFl4OFZVVkY2ZkFwTFQ5RTRzUldGTVhVa2g4ZzdrR011dE9BU3NYYkRKQ0NzTElZRnFWOHIzNW12Q1ppQ3B4YmNNcEVyc1J2dVY1R2tVVzJMY1hWR0pfRFp5MkZoNnI3aDVWbENYN2xCTzAyalE0RWM2VXlDQVVaYndPOHNnMzhKWWcyanNWNFFCRTY3SG1jSmoyQnN1aFh4YllxS0J3U01nZG5VZ0hhQmVYRjhFNW83NE5VWW02TjUtajdLalV5MjBOTHNXakljdVROSzZxZVdMWnpZVkZwWVhSUkVkOUF1N3g1dWRiOHFqalF2aE1sSDMyTlNzS0RnaUNQN0I4ZnYyNExiaEtNanJHQVU0eFZtdnpSS1g0czM1aWVWazV3aVA5X1lYVi0zeGVRRkNkUUlwZHNmMnU5cF84T1VVSHloaWdSNkVaOU80Ymk0ckhwV0syRERKUWdDMVlvejl2TlAxanowb0FvU3RpajZBaXp5cTJwT05femVzYWRaa3BJTVZDc3d5T2V4Y3FpRl83RTBYYXNGTGhvSlk0c05tcHlxNkhpYkVraVRvOFVsemxTVVdKMTlFejhUTmZhVGZVOFhlMUs0ZV9iUEhfS2E3MDJnMDRLVjhCQnFuVHVWX1QxbjVDLV9BWEltczhxZEk2aFdQREp0Z05ZVTdPS1ZleXNuc2ZtYVdkVW14akZLcE5hMms5aGU2TTRNYmNWWGNhRlhybElBRTJ1dkY0elJjbWZ1NXhJZG9qeDZZbjMzdjFVNGRGQ1p1aV9vYzYxU3lxWldHeTF0Q3Rkb1NhbzdGYW9GUGJJSGZnWjJ0NDVpT0FUYkNjb1RVNFc0WE1LRXpoWmFXNjNNMzB6ZTRUczZfT3pkbU1JRFdCdGVlRDJ6NEt1WmtZeExiMngtb18wVjRHZWtLcnR0RXRySW9xLTF1UW41OVR6VWd1dElEWjM4RFl6SzBtNFliUU8wTmg5X3VoVHhFV2NuTVpLa2RMZzRZdjNoSlRVQVFtMTVfbHRmdUg3VVRla1VrdlJtVDVvaVQ0X1EtV3A5WFROdnBuSXFCeHFnQTVuTGdLYm45XzFwd3gwcHhMTjhMbFFNM2lGWW9MVVFQQzJ1dVNlRVVQblAyOEpzMlY5TS1LeFhzRmJsbnJmbm5CcjhVNjBUSmVYYXQ3U3JsSWRyMm1QdGVqRHppcVZIUHRJb1R6RFJ3MlIzbmpxYW5XdkRMYTltSExoaHFTZlh4VDNST0hsc1ZaaGFvUFF6R1ZENXVKdUd3TjlmdEplblZQbUxfTlpUaHlQZkZMRkRzVXMzbXR5bkpOQnN0UV9jTjFVRmF2Tjg3andwakhtUFVfWER6NHQweExYZ3VFbDJseHFqc3JnVm9teGJiMG9Tb2pQV2dFSks5VkZCZ2tPTmphLTkyUnhJWkN5SVNwVU9lajFLNzE1UjRCSld3UXFmT3VSbEJsazRHNVpLZlc4WWVBbV90U3h3THo5MEN4dEFON2M0NjRSdHFaRl82a3V5TEprUXRMQjZRaEcxYnd5SU15QXRjNm9Fc2FLZm9LOUM4NWpxazQ5cVF0OFpJV0lfZHE3dXFkWFJMUGpsc0ktTzVjeEUwWl9ZOFRoY2NOVW9Dd1NvWmRkd25hU3dqVERJZUU1VERzNEtXTXJmRks4RFIwMHVqeUFqTHFkbHFkc1lTOHFOMGRIU3VSS1V4NExWV09xeWpXc2xHRVJxYmhFY0Z1SlM4Tld0OXEyaEhtUXhwVFFiQzVOOXJFdFlkaUhkdXNiVlpGR3hCUnV6Q2FXcXF2QkRleUdVZHFsWWtDMGhNNExmbnFRbVkxVHc5NUF0Z1FUdk9CWDh1U1JmRUlKSDBzeDBGSWNMNmMzSUdkcVNXY2FJdGdGeDQwcmpjS1hsenlObWNhZHNjN00xM2JiU0c0dnBNdUI2ZzJtU05XY2d2QlpKTGtrY05DRWJ2ZkRUTWxXSWZ6Nm9tcjF2UUxablFFcG9CRGJocl9VXzh3cTRBS1RoMXZWems4djNKYXRZMUk1U18xQXJWYWt6cGs1LUNHVXNFUlpsdzRDRV92XzVKZXF1djJzajdIc3oyQy1sTHRSTmFKVDZxOUxTRjkxY3BaUFVCel9INlZNbTF2dnVjbDJkaTJZam15RDhmd182UDA3eU5hYnU0dmFhd1RxV0tHVmp4SUY0T0FfNkdLWHRTQldXaXAyakZGa1htR0dCa0w1Rkt1cV9aWkFPbUhOWTFReWtRN2oyYVA0c0hpd1Bkd1NURmhyTzU3TFphaEZ5UlVYLXBkX1FVRmxmTFJKNUZSUG5uUXdnMk82NGhLLWFKcEpMeUlaTURlWU9nbEp6VTAyN3NNTTZTZFlaVzY4Rk9iM3YtSTIydkJmdThsaDZqTkV5bWo3am5FenRObWlEbHNyTkVGNGR2cGp6VDBIYnJDQlpORWJyMjBybHBXS3RnSXFRMV9YYlZwNU12c0YxZVYwem5JVjlUZXFueFNMSlFHdld6N1J6S0V0TlBpT1d6d3VMa3pQLUxQMHRHN1RLU0NwdnZRZ3JLek9QZWk0cDhGcklJOGtKRWdYVmdKc2FCUEVNUlViMFFrS3BVa0RQRWZZTE9rYkhQd3RGY2NJejVteG4weTBmVTZfLTFJaUxnVl9WSF9sd3JieHdxNUhDS2N1Q0wwaHkzdEdySS1USUNfd0Zrd1hUNGdsamxzU1hkZ0RGODA2Q0t1MXlkM1VOSExaQnE5a2ZqejFNVHlaOC1BemR5eklIYTl4SWtIc0ViRkJrdGt4aFk4QldjSk5hdVRJYUdRLXlyelZHVXFBX3JVQm9laEo1X1dpSjE4c2dZal9TSTJXbS1ES0ZwcERtM0h3MDVIQjQxQ0lMRENmVWR3dTFFREYxWnNNUXVEUUp1UDZyc0dVa1NzWld2TmZRSXVZa01UZHFkZjNvSjZNSEVrVnUxT0FCdjFpNHh6MlcwZkxTc2o2R3ZNblotQmt1M3ZqSWxNVm5qVmVnTnRWY0FZTmc5Y1ZvZkdFNHpuQTk5SDRQOFB3M1JsOGNaejY2ZWs4RjJ6bkhEaWdqTTJhRV9qUHhUaGExYjRnTS1ZaUJvem9QdXcyVnNzMlNxV2lnN3A2MmZqOWJ4eWloZGY1WWZ1UTV2bU5za0huNUE4MEZSb1F3U1BYZ05QMGtBWFJrVFlRWEYzNlNTRXNxMDdhcGFtSGZsTTBfNEdBenR1bkVES3VaQTJxOFhUZjR3akJpWUlrQ1MzM3lJc08tOVpsWmgzMF9RMDBVTzcyZnc5endTaHQtUHFIS0xNZFpmcEM0N0pOWnVTT1dhUmJkT3gzNlctN1BVMkVETmlvYnNnT0N1bHhvNC02dW5wZklyZVBsRmxpVkx4MFREalhiWUhTT1RWT2x3M1VVX0xNc3hGSXRKQ3hOVlBBM2ZzLWdiZUdvMlBMZU9LTXZwZXR6SGMzcTVDd0Q4MGd4LWY3SkNNYTkzOWo5MmJyaFdURGxhLWoxVGN3NVVadWZtcTZNNkJrNkFVTXpCQ1hKZ0gtSVpUSThNVUJLR21JLVFMOWExQlhWTmR0UzRieURsdXo2ei1ZQnR6NVktYVRvdnhyZXgwR2trZ01YaUoyb0NiOHNJQlRTblJpaXhrLU15TmJKZmlfVi1SNnJ1YXZlcnRlWGNadGo3TWs2bEpXUTh2YmdCcXprRU4zMWdHVmJwd05ScS0wU1dKSTRCMTg3ejNYX195a2p0cGVPbVRncXZGcEZOQXd3Y2N5WUgtVmtOUGRLSEJQWHRaWUJXaVdWcXRrY0dDbjI2MjZ0LTQtbmlmVkpUTFhXeHJ3YWV5UUY4eWU1MU13X3JjbTRRV2xxMHhObHpCWG5JZWZma3J5eURvbnNMYnVFeS0yYzBBWmtJRFJpTDVLTWRfOW5LeGJZVVVxUGszTTZfV0h4N1BabEhXaTEzMjNHbTNWcS1XQUxya1FZdjR3bzJtbUU2M2dRb0hFZEhnR0YwN0E0UW9RcUx4aGVJcFBFMzZmc0pBdXR4cFZBak1QQWp0YWFkVjhkSmo4X3FUaFRuRXVVai1RT09ZdzBXdmdCcE1pY0NyV0t5bzJIQkoySFJUUENzYk5pb2owTElaeV9TbS1JSjJKcDY3WnVJd2hUR1ZrWi1iczRaYlFHZkljWEcxbURyODNETUxJQW5TMC1hc2tJdEhvVFJmS0h2TWtfVGdSOFhKMFZyRVJRUEFqcjU4MVBtYnFHWXBmemZhS1ZCbHpIMUoydTZxS3VTWFhvZTducmJJdnM0V0FfYmpteEFZVkhwTmFRSXd4V1BCTnlxQk16V2Vwc0padWFrblpvdUhXa28zMDV1YW03QVdFWnBhOHdsWVAxZi1aZ2RqTkhacXJqMUlFYW1TTGcwRkJWRl82M2RVTkNCcEF5c252SExheVRONWJpX2JObkNQOC1mc2w5dmRLb2E3akJFUERCXzFHWGx3YjRDaVptNDRlQlRkT252LWV2OW4weGNxX1NlX284SEt5VV9rOVA5M3ZDRDZ4NXZ3WDJXbkd6endlaWdQTjdzZUIzSktWeXpxamR2X3FSS1NtZWQ1X1hvQkNaNTdjSFRoM3ZOY19wVjdXVjdvQV95Z1o2UkVGbS1MQXZUSjFVdTNHMlk4MHBMQUdLUFhVOVBWUTFiWVpqaGhITFlNSW10MGJhSEtVWUFsSEZvclFPcS01c2NoNW5oS2dhUktwMlJsMkFhbVpsLTI1UHpmS2N1OGZfaktmUWFlTzhYa0NHOE5KNHdMU2RwNnlxMXJ6cnhCSjl1M0VoVFl0WWxzZmdRQXFDVjdBWXlLbzA2ZHBNeVFGQ08zUkZQal9aUTJPbGNaczktY3p2bVFrWE9raWhxQkdwa2Y4cW5xb1lKNWxTTlhNRllYSTZ3VENiQmItcmdwWHNrajVSUGVRTVFReHhOckZYbFJHalA1VjJEd19Jb1pCbzNJNjZPSWpDYWlHUnRGV3J5eHFlTm9kWEhuamd0NFNob1pLVDlhdE5IdF84bUNJaVJ0N0hwejJNMG1uTF9sdGhCN3FDVnRUelowX1h0N0s3bVJhd2pVV1lIdWs3RUhYbVlMU2FGelB3WGhfaWg0bTZJcDZIVjk0SW1FTU5RYXhsY2RMNU9PRE5OVHNpVWM3WXg1WEFRQWpqLUd6R1I1R01mdjNhTlc3b2w0X1pHaEN0TlNGVmg2YWpiQlhlSHFHTm9mYkFwemZadFpmcmNLQm5xYXpsY3lmM1MxZjZpTVRjaF9PVkV6WlFaM3V2NXBob3dhTWxWNG9aUS11cWwtTXp2bzRtX25vNGVRRWdMTkN2NVJEamw5d2hPUU5BenhGU2dzNk81REc5YmFWUHpqWFNscDg0a21aQmNudmVzSjNnZ0VpSkJpRHRtd09mN2hLSk95RFhzV2ZtZXlVNEp1VjMyQmkxdDEyWDJPT2sxSVIyU2g5bHBVSldHQjR2amdmR1IxWnNZVUtFZENtTTF3Yl9yYk5FQWVhTjhJeHItNmFad3ZleWtIQXVWV2tna29sSGM4eWtWSGpmWVhMeU9XUkY1QjhFa0d4eElrN01oYWZ1aTdqSklHN3VyNExOZUE3ZHQtTjUtYlljTEgwVUVneFZGWjZyWllBdkVRTkEtOEJjWW4wc1ZETGRRd1Q5S0dia3FNLUtYU2ZsSlU2OGtZZkgyc3BjZGNkUG1BMVEzUF85YU12M1dmQWhmVnZDTlRPSmhsMXJRTWV6ZFhfSmZSd056bEtYazZWMlpNeE5Rd2gtQXBJbzRsTGtTOVo1ZkR6aUREcWxHWEtaQ2I5Y3BodVU1TGNWVGpzMkF3STZIa2ZvODhyV21WdDRNUThULVppbnVZdWE1NmFWeEhrMFFoc0Q1Y2dUN0dhT01hQS0wRnZJajF0M1ZfSEZYUGNOWWl2OFhJU2FhVDBPQkVVM1VlZl9SOUxQckpBSlU2LVRibWhvWXRDSXlieGl5TjZiMzRvdzlOTGtrbWY5SGRMSExjOHMwd3VGUllEekxmaVF4ZC1yTDNpM0pzU2hZaGVGQTAtOXVOR2o2TUNtWmt1YmFNcHAyV2RSRm5mZHBiWDR5SlA4SEw0WWs4YnViUHNpdHFxM192T2wydUJKU25LVHpFT3NSYmRNcTBYanBqcmxDZERLaml5MFRDVThqSnVDTURUb29rSHAzZTZCSmxTc2dDaC1NUXlLSnh0QWxMVnFrWElXcVdMRnFNVVItMDE2LXNwUHRWS1BDTU1pZ1M4eVdIdC13ZmZxSDVrNlluUnBNTzdGU05BQmJXVmNSQ0g3UlQzLTh2Wnc0T1kxLWNLM3A0eDJCQ1FoczduUDFpZnVtTTNkeXdoUXRIY0dFdEV4NlBDaE01YjBtTGRfY2RscmRvUjRGMjJNV2VXOUQxX2Via0dWRWxQN3RlY0NVa2tCOVRuUmZTMDhrQU13LUVqQ1p0Wk0za0F1Y2NGaEN2NlhCaFZUTzhtMXE1dnkzM09hMmptcVZwa3JBUzRBSkNhVVVKT2hnZFNBbDVYZWw4UGVNTml1RG9wVWtmY0dLcEpDaklnZFlhZURtdUcycDh4ZFJycmJLbTc1N2pQb0pNNW05SjRWRlJ5TC1LOWlCck5uY2FaUjRVSDMyREt3ZDNUam05V1gxcGxKdGZKSkVWMFJ6RzNQS2VKRDF1S0drN3ZGY1pTTjRTc3ExZVA3MFNhaUlwdnVLNjRuTjF6N2lBcVQ1RUljbHR3SENOM193R0FwZEFvVGlCNTdGQ1ZzUTU2am56TXBRZUowcWV0cG1SbG9FMXFoZHdCMk1zeVBhSUNrS2VBMGtvdnVJVWlEVWQyQl92cFRqbTJ0VmRJNjdoLVBId1FiYTNpbWdudW1UR3hNdHJleUtDUERmdWJ2QlFpR3EzN2tCaGNuS0x5SjJTbmJlbUhucmtZcWZwemZielk4Qnc1UkxkNGxYVnM0Qm55ODBndkFTT0NxcGJqWU1FdFVCdE9OZ2o3ZEV4QTBzbWs5UndoMzY4R1JfX2ZnYXl0ckhPaXFDZDlDMEo1NmNLUHd1Yk1hNGdvaDhJOEM1TWpMVVQyVW1XdVM3YXoweGNlSUVFZjRzbS1HSlRtMm5SR0s2RTlMZXRkRGlrVDlpY01MclVwVTlaVFB3VTNwSmVCMkgtQlZhSHRZSi00cHBCQzRlZDRpUUxNSkFTdjg4ZmZVV3h1T2U1b0hlVkVTR1ZFeWtjWGJDNnVnNnE2cDlqLXR6QU5JZTd0N1Z3N1otX1dUOGNtQklqWHZ3LURrN2E2eWpoNXdZb3ByajZYZkJIcFFRa3ZpeHVQUTQ2cVc0OTBBNlNvQ1hEWGotNk9iVGxJbndFaUFqZGlBTXhQaFBSc1VCQ25oM0xWTnhRNTN5WjBhd1NONmlfcmpPd3NmSDdMZDRLV1BkOFRKbkRUZlVyUFJVclFib3dDaTRWNmtwamxSZm1aNlR4eEhvR2tsYTVoZy1Zalc3RmswcTFOc3lTemNLSFljbUdQeE9BSkJhVzgxUGhIR3ZIVlF3ZkFvTFgzZjNZV1pUa2JTdFNVUl8zV1Z3LUpQUERNeklVbVBPSF9tdzd2aEhidHJFeXpHMWdUY25GOFRnSkNJeGhoSW5oTmxORk5lOGNscFFpUlI0WlpaN2JvSTVWdW5KTzNqWTRRdHZlSzNlRjU4UG80UDJrVlpUU1BFVjhQSVBRTUt5R3FldzNsZXktcWJCXy1qRlFVcEJtSHpqUlFpVGJWSk91TmRpdTRYR0hWbUpPUXJtM3FldDJtUXJ1TEVaUmFZSWdYVkdwU2ludEYwUmZjWUVQNjV6V1FjUHo4UVlsRm90WWFfV1N0ZFJLYkE4MWhsZmcyVjFYVkgzQk1rUzBvLWoyLUxKZ2tZcFM3VFZRVHd0ZVRrV0hORzRJVUNoR1ZvaTE5MG1vcmprQzNBbG94aHl4QVRiUmk0QV91TnpVMVhnZ1hlVlJlTi1aU0R2c3VsdWFYc0l3M2JXM0F1NFl3TlQtU2NwRGtIOWJHSXktLXBNOUprdzF0RjNjcm1VWVljV25FQ1E2dU1neWRscXlHd0tRZldkaHRMbWJGYU96cVEwVTdKQlZ5VHNRMHMwYndRT1FIV25ZZllkOEczQmg1M2tkaklpdnRFZVlsbkNsVHR2cnZVVm15UkZCNjFXZ0oyRjlFcUZXVS12RGdYZ0JYQ3k4QXgtMUV5cFdKVlpEX3FFdmpfUEZRcFZXck96SlBnUFZVRFdNaWJNN2trb2E1dG5RQWN4WHZRUTh2bWxLenh1b19Rd09BWVdCNWhuOTBrMWx3UWJzajJ3SG1tNUhvV1NrWGxhTUNCenllQkZpTjl3ek5TV3luNUs2ajh6ZGw2UVktc0NFWk56YmRDUHA3XzYzTjFxTm5OSzZDTlVraWVCWWhRQzBtNFh4TExTQTFsbDZQMDVjc3BLTmZ3QUV6WXZkdGlueU16b3IwQV9kdUdraVJkUHAxNnRSWHQ3SjVicUVNUFpRWVNDVnh0OVI3TVFKQUNZVFlnQ1N4QnRaZlJ3bzFtVlUwZkUweFR0OTZmQ1dnU21lX3FGS09yeVc2SkxFa2hpUmp4VnBJRzRKeWt2S1lZb0tpX0tuV2JVb3hGUzl0YTJGV0MyTnp1eFhwQ0VlQjRjRUtkUUM4ZXZzS1NhWVg0elF5LXlsUVhmTGIxZVUxOGxLSklkYnMxMzNCQXBNeUxrS212QVZFVDVxWDdmVUJEeUZGTVlZRUsyVTBmZnhWVVk0WmNiZGxVVEt2WWdsaDA4TUNCc0VPY2FFQ3pydHRlYUFBNVFoQUVucnVRSkl3N3lRc0lNWDNPOThLQXJDU2JuS3ZSQndSRVpzM0h4bE9FelZhb0VGWG5IQ1lnMXRGcGVXMWZIV242WkFFWGczbWtJb1BGeU1VT0pQeUl4cHJFYnZwNnl0ak1LQWtvMTByUGdlNHhYU1FzcmZzZDlVTE40OUdfeWhIQ3lzY2pKVF9nYmpJTGNRTlI2dDZrUDhyZnRYZnhuNUN6WkVlYlZfUHRTRmFCSHp2VWlLZDFfRWJ5MFhLb1czV3l1ZThJTUp2dWdpYlRUckk5c0tMazVGSHBPemdINUlvTHhFTEQybkZNV3pxNUQyZXNmUnBSNzVXcF9DU3hObndHcEY2UjNfa2ZmanFfZnA0MVVockppbkxpaGY2Qi1LU3M0R3ltTXh1aTQtMHBrakNNa2hSUW1yaUcwSDJzVHpGYWljbEhDNlM4S3I5NmY1Wm42MmlYZEd5NTh3WXdrYzN6OFY5dUhyZlNaaWYwMUt3RDVXQVBLWEtXOXJzVzFjMkFMTTJ0amZXR182ZXNrUjgyUVpFOU5rVzVwS05ycm5UUVBUYVBGa0xUUGtWMW42VVo5S1p3XzRNQjkzRFA3SThnUkotTGZqVXZKeU1hdjdiMUhsTFFlcXhNZzVqc3cxbHlSMXpXakw3ZDl3bmkxbUN3RVBRZkhGMk0zWWd2QUZJZnlVa2JmZFE2TGt0cmxWZTBfcFF5Yi1qdUJLM0JKM28wY3Y4NjlCaGxwNWVxQUdEdzh2bkVxQ3BkVWNZTlZVcXFrYnF3TnpYZU9ZcFEwOE45a21paXdHb1I4enBHSFdUcTBPNXZ6S2tVR1FOUndDc1hXMGgzSEkxaEpST05DSVEzb3Y0YWhDZ3NCQmVxd1NYQ2pxdjR6LWhldU1CY0JyUHBvaE9jVWktTjc2aWNuWFE4eEtxdXpnMC01cVdzYnlsY2RRRmJVRURlZGhYSjRtdlB2eG41ci1BTV9PYUFWLUUwYi1TRXZLMWR3aHljZ292NDRwdDdTWW1VODZyYlh2V3FocWZIM3JMV1pyTVAzQXRUZk50R1lVbjdDRXZoTF9ObmZZVlpjVkRidUdfRUgydTVYLVVtQnNOeDM0OXEyclFtOEx3X3lNbXd6bkhYSTFodENIWVFpVDRZM3dTVzBya3JRdDlCbHdxYXJIaWNZclFhNVRQWG55MGNQRVQwTWx0eTZCNjFrajVrMndGR3RDUGpqNWFsalZoZHozN3ZKcUo3MnliV1lQdHNmdy1BQmczZ2NEWmpVdjNyV00xeTY1RnZXTERnbkZGZmUwdUUweVlIUno2aW05QzVOVzJQXzhSTmRoLURRaF9VdHZJSVRKNG1FcFoxMl9KVW54NllScWZWWklFMC1Sckw2TmpReG9zUm1jb1R5VVJsWFF5Mm43TG85dTB0dzk0eG95ejQ4SGlLU002RXBzZHoydkJpTGU5VFUwWi1fVl9nNndic2ZGY2JwcnNhaXdYQXEtVi1aQkRHRG50SEZsQlgyXzlJZVl2RERKbXZmbFBaQ1pRUFk4NEtIcmlfUFVUbklyVGhtd3JKZk1ZQ2JaZG5mT1pWd0NTWnlhMFppc3FvV1ZqWEg5cThVT0FvSHNoZWpXY1lGSDBGcDREYTR4a3JCeWlqR3h6X2F3S1ppVWJPT2dvckFEVFVHSGN0elZ3T29zZU12QzhqczFHV0g5Uk1PbHVHWmNBMkdYSEZ2OVk5QlJkcGplQVRiMHM4T1R2WF94S3BSaXQyMlVyN2h2N1h0UTB6ODlpeVlPdzlYMHJrcFlWdnJ5cHg2MU9rNmRTeXJ0Y19CV0ZfM3k1NkN4Z1FsV2QyYlFRUnUzSmQzbVVnTXdIeVNaRl9uYTljeWxZN3hvZDZsUFlCTG1KcVpzVXc5NjZCbWg0a25MeXhSVlZ0bkZUc1hUcWNFSlhmdEhsXzJ1cWN0elRNNy1DS0p1VXlPYU5sWW5KTWNiYzBfYlZHTFZPRHBhdGJsdXJsLUNvZHZjWHkwd2oxcGN2UlZRcXU1LWg2cjhnV1hLd1F3c3hrZlF0OHdMU0haRTl5YTR5NDVrMldFaXp2eTNieUMwZ1doMFpVM0hGVW9qQ01nVGxaTW5Kc09ZZExnTzJTOVgyNkJWdGxyMGpvRl9tMF9YZXZvbUNEVDhZRS1fc3owV0tzTXd5S1pXT2V3d0tNUWZKWXVPTFk0QkQ3cHktcDZFVnd3cG0tZlRFV1NlWjZYYzZ6OHRXeFNsN1djUUlQR19yS0dSTlRvTGNBaVhXOExyVk90YmFpUTZjMGJ1cWp6NjBPNlJWdElWRnk3SS1aNUxHMmpXbjdhVHdKcEw3OHVDc3J0MVdoTHBaNVQ4ZHZlNHpneXcyWm5iZE1fUGZfMmVqWW9wVDlqNndEVXB1WG9nd3RlYk0wa3NEVElFRkN1R0JGVzVWSU9ldEFpNzZnWXJBR2gyVTM1ZlZUUDhodmNoUVVhR21yaFJvV3o5dkFHN2ZMNFFzQ0xkUGRBSE10aVB4U1pzOFpxZFhRYTdVY0ZSUngyMlItVWdoU3hWaFlCOVVqQnloOFdJUXR0TEdjeHg5WGFJTVlkVTJBUk1vT0YxTEp2UG9fdURKTEVFMGdMdGo4TjRXZnVDRVFoMHgtNXQzNXFmZmxNOE54TDJ0RTlqdzAxODFmRUFNRWhvLWw1M2lMMWZUX1ljYmRONEZZbzNoOTZjRDVZVENDSnRULUlLU0ZfS283U193bnlIQmN2bGxWLU56bnJCTGZMNFhud3h3MWNpVWxVZTJrV1RldzNfWlJoc0hud1R3aUVjTVNXWE4zQ0tUbTNSNUhEOXBZR1JFdlF3cGo2OGZVOHp1VFQzbEtiazhyVmVJemk0WW1zRDN5ajFReVhXRGo0WjZDNzN4WGFuSVRWckUtM29PY05RZEprNzJ4X3gwaFp1d1EzeHF2N0dJUmUtenRDXzdib1pUT2tQR2dod0U1cjQ3NTlEaTU2bHhVWkdTcC1wX2JmZmgzQWdWZEt0aEppT0d2YnB6TFJYU2wxMWI2TVg4d3VCWFpwdkNQWnU3R1ZHQVpqTGwzYnh4YWxhQ1VYUkdFSkVqZlZGcnQxZFZtLTdRaEM1WC1fak9XalRBWWtXcm5MWkphLV94cUozeEkzSXBHUGJDZmZ5ckdYbTctZVN3THotS3VUdWhGa1pxdkVpdWl3bzd4Vk4xOUpIemhKMjRiOEFUbXRDZHlpZWZrNmtnbWFGT096akFMaFNoZE56YkE3WnEzR0FGT0ZXSmc2d0NsQ2N4UEhHekVWTzdDblBad3c3b0JkdjVTclVkMnpxZkZ4UldZd3B5cExtVWdna1pQaHUwWEd0aVJhRDEyc1RuQ294Wk5CVm40Tno1SW5PY1FDZ3ZSU2c1alZLWXhBelI3ajIxU0hRanhVNTFUM3J5cjN4SmNPX2lDRkJabnVVbFdpUUVXRzZ6Vy01OTJoRzJWS3RYbTlDLWxKdXhnUXFYeHVDV1E1M3FnczE3STctUnNKT0t6cHRCNGZaWDV6eGEtYXFwVjRLT1FIOWR1Z1gzNWpRcUUtbk1LNXdwN2xaZzJPQ0FBdndUZWRYUWtNV3VTLWE0VDdsQmViV0NnOVNFZWFYdVVlTnZaUW5HQnNvS1JRUk9Ma1VZSTBiYnFVNDFtalBvSWdzbzh4YUZ2aWxjT1c2VTVFaHd4bnZ2ZmpwclZ4WGY4cFAyRm5vM3p0SlpkYjZ1TDZLRDJGRWd1NlMzSzBKUGlkdmRLWkFObmVONG02eGx5bFpfYzJ5ZF9tdFYwUDRWTFVjZG9Db2hVUG9TakNvbU83VTRfNlREV0JfMWVXWHliai1TcVAxSEdsaVAxVVJrNEtVMllwRFNkWUd6UVJnYlRrcF95RlFaeTF1R2lJdjV4TDdOcF8zU1NadFJqQXZ4WWlsUm9FcFREVC1EQzZzWEVrYmVuUk1YdjNEeWdzbUxLbUw3TFQ1blkxRTZlT2pBbFZOMTFmd1NvZUNxUzZfMkc4ZTFSYzFwbkRKOW5jQ3BOSDU3WW9GZ1ZyRnprX0lRQy0xVGxja2IxdlFyQ2xQUVo1TEp4YnZnUDB4Y2w5M1ZvSllfaUY1eFZURlpKOVRETE1yRzNhZzdQbzVhNUhOVnlwLWlUVWw1cWxHWTY4bUxWblM5SFVhV01FTUEtVjNfX000TWQwWTVxMkI0S293aXFTT2RsMHg2S0JOQkJEVmRtZXdvQ3hpWFpvLTNGSzVnSVlEaExnY2VDQlJJaFpKd3ZNMTZGcHRCX0xVdnRwc00td2tPdU92U2gtQkNqTHJjZjI4Zi10VklzNW4ycWV3WWdaOVF1NjVrN2FzYndnM196QkdWTm01S2JQdUxqeWJuVjQ5WGRGaHh4T2N3QUY1SzRaOE1VRDVqT0NmOGJQVS1ra3FQbFItaFAxSkxNNjRESFcyckdJZGVXbE1ZV1NDOERxWVVLR1BicVdWbTFrMmtqMy02b0RzaE43a3FPSnZPcHdxem15SzhaNkZiZFEtSUpTeHpxblNFamdPV1BwM3ZFTHkweFpReURGZTFOWDM2WTE5dUZGamx0UmZrZ19nU2JBTTVTUzg1Q2tFcWFMbkRCa3M4SEdLOTBkMFh3clhfYzhSaXRHVDFnaTZGS19RZ3ZsNGpwUG5DQnplRXBTOGc0ekNjQTJTRV82dFZxYjVzeFMxNTlIZFBNa0VmR2Y3bVZjQjVNNVk4STg0WEZOUlRtaTdEdzBlaTJwdms1MXY2eDk2RldOYXNYR1F0cDAzcEdlMXUyN29UbW5RN0lGaWJjM3hnc0l6VmhqdGlJbWg4czhkSkIxenZfOURqX3lDSjdYN2Y1NEhuQVpYOFcwQkNmeUJiR19aQmZJb3g5cndTZXdaS2JVUWRuaHF5YS1aeUlpejBTWHlGa19LMzllQmw0Z2MzbVRVeXlZeW5vT0tkMGViMG9NbW1OLV8xUlFOQ3RPdlUyNVp3RUZndU5wc1ltR0ZRQVFfbTZPd1d6Qm9WQXJNcF9VTVdEaWp2R1otS29vQ2tCNkgyZW1xNXZaanVXbjl5eG9UTUtZWm1RSlctV19ESDRaNURWb3lsN2ZTaTBTandqbGc5SWhLVFVRa25sSVZXelFJbnFLWjRZbUNOeWFIdU54N2JJV3JJaHF5OFN4MWhEcUlPN00yT01IeEN6N0VyLU5DaXo1c3dVV0ZTeUxwOW1oaS1NTUJ1Nno1MUdXTmlyOTVaYVk4M1U1d0VUek1sTnJrZWk4ZEVJMERZQUtYMTA5Q3k4MGpVSDlEVklud21uaU5yZm1sVDJmNUtMRmlvQVFsMFFiRWFMNFAxZXY1SEQ4V3Z6cC1Xei0zRUY5MkhBY19WeTJsQXpXSXJBcFhOYk93LU1fSVlla2FkZTlNYmFUZkwxcHc0TG9QMFViTGtRY1VmWmdRRmhaTkRieklyNHNVWWNHbzVLR3YzcWxsc252OThtVHRSQ2xEdjhWcURpVVNXZVMwMk1tUXJmVVkzeDJyY2Q5RUhVUzZ1U3hiM2I2dFNPQ0dLY3ZKVTVjV1lhWXo1bktGLUhCRUtwOWtld2lKT1ZlRFRucDUtNnUwN2JEeDlqdzJCTGk1anNwZUtuYWJRLU9rSXNWQ0Fnb3lweTdWTDBBWXBQNkRhLUM4T1hWTEU1WG1XMjB5SkNBZ2NaN19nSEpGRE1vM1BSU3A2bXF3Qm83T3NxLVlUVlNabkhfNVZzbW9xZ1l0UmlRSFhGTHFFU2VFTnJ6R3F6Y1BkeVgtcFd3ZnQyVHhCRTFpaFBJZE9PRUFVNDhNeHRQUHFHcENLSGc3bk1OQzkzWFRiaXpIVTZteS04aEdXa08xdWRYaktaVFU0SWU3ZmU4TUVKdy1PYW1xQ3pNQ2pyeTVfWmNfNVMyeDNmZm1Fcm1pTUNGMUR0cVVxRDBaa0lRVlJpSmRneEZ5dGwwMGVCbV80elNHTVdDVFJMV25odTA1N210YTh2OGVidWpzTk9KRGp1WlRocm5pNmFadUxLYnBTSEJJVWpRdk5CaFFKb1lhbE02ZHA5RDdlTk5LQkRhUXkxZkxVV3RaRzdNV3J0VlFhUXVyUGlfeDlwb1FwZjJxYXdxZkRGeTRpZURfdlZzaDdBWTk3eUYzOEZsaGJoMWtpU2Z4YnlKdGZsTUdnZTRjSHJHOFBQZ3FuMVZBNUNYU29ZVHZBMnhmZmVSaUltOE9OV2Vnd09Jc2Q4b0JwREVZZWdYc0NhaXVNOW00cjhYWXhBUk5Ta0lCeE1pbUtqeGhnTGlzUktOMTUxSXdKTmVuYVdVWEVCNWtHc0YtQkJ0M1NmeVZ3MDhkUFFCNXFPbTJOTl9ZS2NheFducWJ2R25JZXIzSlU2Q2VyZGRjcnNGQURYaURNSUZoUnFuSUVid1BxU1dDTjBEdndMelBIYXV1em5PWFJzX3J2Q244MVkweTc0Z3dGdHZna1hlRzdiNHNRWlphaFBxT2l1UnJTLWNLbXpRTjFOTHQ5NkFReXZEcDBjVmtLYlJIX2hHQWlBM0oxdEJCU2kxcWluUm9raXUwRlEwOXF0ejFEbzhha1daanZacU9VSGV4dnRsdFFVNTZnVFBOenRVOTN1LWFxVmJYNHcxLUd2TTlzanhCMEE4Q3FwRGp0V3U4Y1QzdUlMX1MxODlyd2VzeUQzUy1jSjV6TnRjaUZJODhqaXE1anhSaWk1UWVUbVlVNlV5aVlMRmgtYkVJWmVSelRmOFFVT1ZEcWV0UHptMU8ySEVucW1zTXZzZnl2VnZscXo1RGlDYk9ULWMydjFtTTl0ZWJBckNkUHZJbnFDazMyWTBqckRNU3dfUk41ZUZ2YjhmYnpSMjhkT2JRLWRzZU9iaDI1UF9MSzk3SUthcm5JZHZzcjk5M2pYVkhDRDJsckp0OExLaFEyVGxoeFpqb0hQSE5maDJyUlRXRkZyQ1pZcDN4eF9nVGEycG5iZmpzVmJBdGR1U0lzWUh3dzAyY1dQTm5IR3ZKMm9nQThfZXpxLXJDYjBDbllBLXFvY3czSFBSZGFLYzhLLU1fYVNHS3NEQWY4RTBPbVRnSzdQSGdtTlF3bksyeU9POWhpbXQzY3p1TmJqNHU5RFNjR3pQazZ4UEVCQTNwSkpMNDdaVl9CNXROU3gxV1hTN0hfbWw5YWdOVzBTWk9QREdqMHdVa01VQTduNE9ZWHNJUWRnc3RSY2RZbTJkclQ1M3Vra0h5ZFQ0RTQyZUN2RWhXME14YlhuMWNMNTZVbWY5VFBsd0lpQ0F1U1IzdFFoVnlHOXFIMmhGSnNWSFpnSHNoRDlnU0V3SlBLbTdyVklTOTluV0xIQTZwZlBOWFNzYV9WU3JUaHgyMGZfRFNoUmsyTTV4cnlubnhVQXhVWEVSam8zZk02TzNfWFZLNFlwZjlsVWRROTFCRmIzMnNEN2hNY2wxeEE4andvdVdVVUxfTlNSOWpGdVViYkpKMkRrVGRpRFVqUmc2VW5mODVaSkRGeVB1cEtOT0VWcjFpTDV3Zm9ZWmgxeF9KTWpJQnl6T2l3LTV1NUp3Umg2OEc1Q2ZsOGZ3R01kY3FNcDVROF9vYndWVFVEUzRsQ0ZrejNaU2VaU3gyTTVwbXoxSjZ4VXU1ME9kZWE4Z0pWSDRWZnNva3FTV19pR1BmamhHUVZYa1JCVkZyNlVuS0FJZEcxdGczYzhqVllrNUd5TmNSWS12eWxoWVdSaHBnYlhMaU1yQWVSX18wRXNoMERkRHAxYWdMSXFwZGNKTG1RY2kxa2dfT0JLS2w5ckp5bUs2X2FXX3FzRXRrVU1SUXRTVE5oMnNtYmdHREtjUXVpcDhmcEl3SDZXMnQ5dUVsTEJkMmUtcU56b3hNS1p3dkhleHB5aUdSZ0owYWt5YkZzaVhId05Ic0xEcTZBY016VlY3aWlMOGI2bWozR0JGb3FBYXZHcEVScU5ZSmtJeHRseXRMOTZsN1RnV1Rud3NCR2ItcHZDT0VuWm10YkFyVW1nbmd0Qy1fZ1lidzZ2Sm9KdHV4SDVLVFItTlBHS1FUS0ZnUFk3MEx1TDB6MFVnZmFfSTgzQjRQSlNMR1Vla21KZlZIanRPUnBOVUw5TWZLbEdmMjh5VllMWnNOYmxTdGF5WmxFUlpua2gzeUdLMklxZ3lNYWhBTXpWTEtfNTRXTlp5ZEtJMGh4dkp4V0hWdDdkTUhzTUR6RDVkUnFRLWhmSXpzTmtEUlZkLUUxYU82SjFqcUdkMlFESk9NcUFsYmRES1JrMjNoSmRpeHNZbEZEWFZhX1BXWGZXc1F1VDNlUHhiZ3FDVjZ6YlEzOUFCR2pBcHNnYXBIR083RjJIVXp2alNMNXJNRUhaakw1ZVZDMklkbXl4N1JXbzF5THBfNTFvODVSZzJOV0xDVGdLanlyZ09mNlpLRVY4ejNZYnB3YVRGQVh2cnhQbWhSNFdpbU1mZmZaSVVaaFdjYjVoUHBKclBZSURHZjRJZzcxeGxPRFBzeHljOXZvSDFpYnhjMXBBNGlWUjAwOFpXcVZKWUlwOGcxX0dGbmJpUXpjSXBkZVB3RGlzVjNRa2FaZktOLXVBUHVkb0FUQ2FmSVBua3NWU25GVXhjYnJ3MEQ3ZWMyMHRxZUxneDhRc1VWYTBFVDdsdVRfWkR5QTZjY1BWTWxlRHNqd3JlZXZfTkRnZWxVdEY1M05GNTdaQkpPWEtxR20zUHN3aGJiendyNWp1WUxlWEg5Q2NnTEFDbTdiSk5raU04UEFxOXF3NUlkVUVuS0NZd3M3ZndidGN6aUg0bWpGSHRFUVlodDlGc2t2VFhfbmlBVVN3ZFp6c3NWbUF1MlhVUGp5b281eFZnU001YWZBc29uVHYxdFJra29TOTRva2xNTmJNOGFkVEZqOFdMbld3VlpwWGpCTEVITDkyZ01pSHlwbGloZFA4QjhyUDZQTkJXRDM1OHhNRnVTd05hWFUwdmtrTm55amhLUUxFampycXQ4MmNmMVlPN3hUdWFlNXRuOUR6eEsyYllITkRSUFpySUNlUlRPMk1PVkRsejYyNnpMdUhPdTcxMEZza0JJQjgtdkhVVWt2TWdPSTFIOWlsRk4ybWRRdHBLLXU2aWFJVXJzN1NQMnlzOUVUU3RaRk9SX2hHZ25DRG9NMm40a2JEVEJjNnpkMTdBWlQ1S0gtWHJOUTktZm5DRERzdEp4bk1nQXU5VndRY3ozSV8wb3YzbDVHYUtTSUpOU2RLOEFDX0ZqN1BabDNkQnhsZ3RqclNhNms0cmMxTUNlZGlnSVJyTW1URDJSVVZnMFplSC0weFBzMzl6SVJTeGh4ZUlHSFM2QUtwVGF3enFsOE1ya1h3ZXNWRWgtLW1vODYxbktzaXNNdDdYaXd2WS1TODduVVMxR0xJTnc5SjczWFVqRFZLMW5EcnozNU5kcVFBeFN2ZWVQNTRTSDh4UmZOR0pfbnFzcVFxNWlCSmt2TnNocEMyNlpQX1Y4Rk05cHJEcVhDUk5BelRHZkJSUENCcTVRVjVZTHJLLVpzRVVIc2hnWndockpTdUVpbDdoUDlxV1QwVW9qYTJ5ejBDSHp3ZTBjcVZCM1RkZDdvcUdmNlJ0QTIzRVlNR21VX2hrQi1xZE9YTmZCNXhPQXFrVlNzN2k4WGNZZmdKOElPU2Z0Zm4tU0dIM1cyWU54RGh5bGtSamFoQlJrNDJBeVFBQ2V0RmZkS3FvTFRteEZrQklqWS0yMHJacXlNaU9MbjQzQnJIR1VqSWpFNW9qNHo4SUg5UjdEcERFYWw4V2huM1R4VUttSkxCd01BQVRlZ0NkRTM5RG54TENzY3RNSlFOWjlIZVMtdGNWWkIxbXU1RHlCVlFvdVR3LWxsM0ZDT0NEbUVYZEFlMXhpbUlBRWlCUHVPNjU4YUhRSDQ5SEV1R0VuVkxNSEFhcjl1RU03YVZ5akVIUC1WVzFiQXBqR1JieUMwNkw3WFlqb19xMV8tXzBOZVdpNHNOcy04RUhJTHFhY19DUEg4eHg4ZXFTdlQ3djBsd2ZQMlJPM2kxdGNVYWpXRWtsUW5tNWNLWlRCeEtPbE44d0g1Y2lDdXRrYkZrbFhpZnpyY0VYR2JuQU9QREx5N29DY3p5STFWV21NSkpJenpueHgwVWl1c053cDF3MWZRZGVfdFptcUN4TWJIRU5ROE4xcjVybk5IbVJFUmlyRWxELXhWWnZmVmdyT2xaNm9KVkRYR1JqTG42S2hTVjVwdjJyQXpja3EtWGxVU1g3NDM3Y1o4QmJaVktlWVJTb0YxTUMyeEY5RjVfTFR5Nmo0ZndGV1lCdFlvRnJqZF9WZGd3OGl2MDFKZjFJWGk3TnNRVXlQOW9MczBCRDRITVl5bFdkX1QwVEJHRUZfWEp5dzg0V3A1NjFQYXg3WU40eWJfT2cyZEEtVndzaXppN0QwQ0RPQ05UaXhON2FMdUlvMjVyS19hYlhIclpoclFELUwxQ3BJTHdZNVF5R0hldDE5U0FwcmlFVDNDNmtmQW9KaUVBYlRWYVNUa2tqUmE0LUdpVDFwQy14Q19RR3lUVEN4NjRWNWhkMmp0VkZNSmxMYUY0NzRLVUJpOVhnQjZadmVkU3M4Z09ZSVF1RUZQQjIzUVA4S1JVNGgzVE0tdGtCTk1CeG9OQlFWOXltLXVCY014YmlMcEdHcWY0RU9kaW9xWUQ1WExSSHk0bnZNdjE2dkJnYU9Xa2E0OHVSSEx4dE82TFUyXzlmTmxkU2U5YWl4SENvVVkxUUFWd3FaRy0xTXllY1pndXN1MnJMTXFXMGUxdzF0Qlk1QkhSdG80YTNhR2JqUExtNHlxeXg3UTRiVGw0WUhEenNFVXlTQU9kWERWY2JDOC1SdnlZZHIxWFhoWVBWREhTYXhmQ0l4bTVqaE1uamJuOEh2V0lGbjRGOUh0TGxXU3BOUGw2VjhYSTN4Qk00Xzc1a0hhOTVING95dEJUNkxZZXlUT0hZV0dER09RR0cyeG5OUDhYU2YzX1NFZzhnUnhiaHRzeUFta2VmTjhnNTBRM1BCT0pxbm5FS0U3ekpxMmVacFpBRDhIbnpWTm5yeEdSWG5QN0lUUWtEby1aWVVPN0NCb285UC1ycEJfVEVVVC1BTnp3ajJvdGdoQ0xjV01TNHUtX2xMMEVKV2p0OG5UTDFJZjFHZFN4bXNHc3NDTXd2M3dpVHRtMExMSDhaN2JiQ0tJY3F0SGxERVhfZXo2RDg1OUE3OUtkR3VHZHoxS1dIZGYyaWs1eldacW9fVjRvUzNVT3psQTRMOTRiY05jbjJ2djMwQWExNFJQUEFyNzFXM3FVb0dwY3hobkxYZHZ2emdVQXJUTzFwbGpGZEhiWnBxVGZFZ2owZWlhR3cySjc3d213QkdqZmJjZUdfbHZMR3V2cGpCQzhOSmJfUzVjRGJDdU1aQmlXU0s3NExzM1diazNtaElYN0FfRkdXT0dhX0FuWnJOVjI3Q0owRElDaTRMQmxYWGVLYW1QRFYwV3VGZ1BXc2RfaUdiY0VXUkpkaEUwVGJfa1VBNEJRenhWdGF0RkZobmxBdnlnVi16cEg0cFl4a1hfaE5zWHozdG5ZRlMzV1BYMXZyY0U4akR2R0dHbmJYTHVZVWhYY0dSSGJoY0VveUprTHljM0RwTGtlamFkZGV0NTVjZkVpRHN2SG11X3h0dEs1bXNVT09LWHVKZGIzM3ZGanA5NkYwelhiay1EV2ZUbVZQXzF6eGNaSXNucjdwVmJMREx3QVNOcjNqck8tc204VTFBZVNnNUpPeVBncW94NjlseGRsZ1ZlamNBR1VWRWJacTZyVlM2Tkh4T0drN0czdlcyOWlmaEZiZjQtUWZDUk52eVhSZHhxei1UYTJZSzltUmJmX2paUU5SUy0zdVNqdnZPQ0ljaDlJaHJPUVVFTVRvekN6RThoZmc3RGN4MTg1QmJHVlo2ck5wSXF2TDdMb0kyVUZidEZuLUZFakl2YllJS1JRRkZXcVlNMXY3UFJXdzlSMXYzbXpOMF9yd1JlMGpvRHZtcjhYdVZ5SkctT0ZYU2EwNDdNekpjb0VVQXZkQ2VlcUF2NTRUNV91dnEyaWxkeXNPUWI0bnVUSm5zMFI5bnRnRDN4cjJGaHpoX295TkdsZjFNQ01nT0pMU0d4Y0R5LWZxUXVfWlhRdUM3MHBsRmRCaEd2NmRKS1pjVERWT1RkWDFsSWJDWFdTalJDMkRCaEotU0t2b01wbzJkYkdhejhpM2FiNEFfd3JwODJYallQQm5LelNIRHlOM1pSeXBNWjZ3dlJFejN2czBFRmprR1NuQm9McjlDZmU0cmxEVk00SjlkYXpOVGpoVHVVZm1WQ284a1lySEZGdnFfUER1LTRhLVVDcUpVeFhFbkZLVEg2eXI0X1BldG9kX0RoWFJraHZRS2ZpM0gxZjFIUmFycmwtNjRIaGZTd1ZtSzVvVkoxQXNSNEdkSjNDX2dMUGpEVEJ2RmstWkRPRmxia0Npd2ZMZVY0WnJ1cDVPUTNuQ1NZWGdaUTk4Q2FKNkJ3azBnRGN6U212VlNtOFZyblE4S215OE5jcm5RaEh2eTk2eFhRQ0pLbEhwSk5UTS40Rm9hOUNVX0phZUtRSEF3X0UtVURR"})
  .query(true)
  .reply(409, {"error":{"code":"Conflict","message":"Conflict while restoring certificate https://keyvault_name.vault.azure.net/certificates/recoverCertificateName-canrestoreacertificate-/721c11482149480f93ba5a6dd18f8de5 - certificate already exists or concurrent access"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '273',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'c9e35eaa-d7c6-4d5a-a6d0-986f703bb641',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:04 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .post('/certificates/restore')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'df9aea91-d913-420f-84a3-5a0f0df8afe5',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:14 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '27aface1-c521-424b-b63e-c63009a96500',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHEAAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:35:15 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:35:15 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .post('/certificates/restore', {"value":""})
  .query(true)
  .reply(409, {"error":{"code":"Conflict","message":"Conflict while restoring certificate https://keyvault_name.vault.azure.net/certificates/recoverCertificateName-canrestoreacertificate-/721c11482149480f93ba5a6dd18f8de5 - certificate already exists or concurrent access"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '273',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'de17536d-581f-4d85-9a14-659e880a360c',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:14 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .post('/certificates/restore')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'fc0af886-311e-46a0-8a2c-4577ccf41227',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:24 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  'a31f1446-262b-4d37-9c34-cfaeffff6700',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHEQAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:35:25 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:35:25 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .post('/certificates/restore', {"value":""})
  .query(true)
  .reply(200, {"id":"https://keyvault_name.vault.azure.net/certificates/recoverCertificateName-canrestoreacertificate-/721c11482149480f93ba5a6dd18f8de5","attributes":{"enabled":false,"nbf":1578601487,"exp":1610224487,"created":1578602088,"updated":1578602088,"recoveryLevel":"Recoverable+Purgeable"},"policy":{"id":"https://keyvault_name.vault.azure.net/certificates/recoverCertificateName-canrestoreacertificate-/policy","key_props":{"exportable":true,"kty":"RSA","key_size":2048,"reuse_key":false},"secret_props":{"contentType":"application/x-pkcs12"},"x509_props":{"subject":"cn=MyCert","ekus":["1.3.6.1.5.5.7.3.1","1.3.6.1.5.5.7.3.2"],"key_usage":["digitalSignature","keyEncipherment"],"validity_months":12,"basic_constraints":{"ca":false}},"lifetime_actions":[{"trigger":{"lifetime_percentage":80},"action":{"action_type":"AutoRenew"}}],"issuer":{"name":"Self"},"attributes":{"enabled":true,"created":1578602088,"updated":1578602088}}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '1d7fb123-01e2-4359-acfa-ed1e7e82f3e0',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:25 GMT',
  'Content-Length',
  '954'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/certificates/recoverCertificateName-canrestoreacertificate-/')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'bb1be7d7-0595-40a5-83d0-bb12ecbfd0c2',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:25 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  'a3a164a3-589f-4eb0-8105-09f42a297f00',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHEgAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:35:26 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:35:26 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/certificates/recoverCertificateName-canrestoreacertificate-/')
  .query(true)
  .reply(200, {"id":"https://keyvault_name.vault.azure.net/certificates/recoverCertificateName-canrestoreacertificate-/721c11482149480f93ba5a6dd18f8de5","attributes":{"enabled":false,"nbf":1578601487,"exp":1610224487,"created":1578602088,"updated":1578602088,"recoveryLevel":"Recoverable+Purgeable"},"policy":{"id":"https://keyvault_name.vault.azure.net/certificates/recoverCertificateName-canrestoreacertificate-/policy","key_props":{"exportable":true,"kty":"RSA","key_size":2048,"reuse_key":false},"secret_props":{"contentType":"application/x-pkcs12"},"x509_props":{"subject":"cn=MyCert","ekus":["1.3.6.1.5.5.7.3.1","1.3.6.1.5.5.7.3.2"],"key_usage":["digitalSignature","keyEncipherment"],"validity_months":12,"basic_constraints":{"ca":false}},"lifetime_actions":[{"trigger":{"lifetime_percentage":80},"action":{"action_type":"AutoRenew"}}],"issuer":{"name":"Self"},"attributes":{"enabled":true,"created":1578602088,"updated":1578602088}}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'd48a69df-a92f-43e9-9d1c-28764d02e9df',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:25 GMT',
  'Content-Length',
  '954'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .delete('/certificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '8a64f61e-6728-4fb8-b07a-010a06d12a9e',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:25 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '91b544fd-c5e5-41ad-9524-3e32110d6400',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHEwAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:35:26 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:35:26 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .delete('/certificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(200, {"recoveryId":"https://keyvault_name.vault.azure.net/deletedcertificates/recoverCertificateName-canrestoreacertificate-","deletedDate":1578602126,"scheduledPurgeDate":1586378126,"id":"https://keyvault_name.vault.azure.net/certificates/recoverCertificateName-canrestoreacertificate-/721c11482149480f93ba5a6dd18f8de5","attributes":{"enabled":false,"nbf":1578601487,"exp":1610224487,"created":1578602088,"updated":1578602088,"recoveryLevel":"Recoverable+Purgeable"},"policy":{"id":"https://keyvault_name.vault.azure.net/certificates/recoverCertificateName-canrestoreacertificate-/policy","key_props":{"exportable":true,"kty":"RSA","key_size":2048,"reuse_key":false},"secret_props":{"contentType":"application/x-pkcs12"},"x509_props":{"subject":"cn=MyCert","ekus":["1.3.6.1.5.5.7.3.1","1.3.6.1.5.5.7.3.2"],"key_usage":["digitalSignature","keyEncipherment"],"validity_months":12,"basic_constraints":{"ca":false}},"lifetime_actions":[{"trigger":{"lifetime_percentage":80},"action":{"action_type":"AutoRenew"}}],"issuer":{"name":"Self"},"attributes":{"enabled":true,"created":1578602088,"updated":1578602088}}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '758eff78-3bdd-4101-a22d-12c4ba6e2278',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:25 GMT',
  'Content-Length',
  '1145'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '80cf7e02-d6d5-4ae6-bdf1-be2f29d9d4ea',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:25 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  'bf5bf65b-6cb0-4ba5-80c5-d7143f156b00',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHFAAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:35:26 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:35:26 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(404, {"error":{"code":"CertificateNotFound","message":"Deleted Certificate not found: recoverCertificateName-canrestoreacertificate-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '146',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '8085045b-27a1-49ff-b3aa-e40c4f7264b6',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:25 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '8464fa66-c65d-43ad-a2cc-511e25220c4b',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:25 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '520eabfe-5a19-4890-b62c-822745d87c00',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHFAAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:35:26 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:35:26 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(404, {"error":{"code":"CertificateNotFound","message":"Deleted Certificate not found: recoverCertificateName-canrestoreacertificate-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '146',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'bd618d35-d1b0-45d2-bafb-30d0f9e0edfd',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:26 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '2eb01d49-78e9-418b-b6cf-808e4ea0d705',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:29 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '2cc06234-b373-4f02-a4cc-f24ad0e76800',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHFAAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:35:29 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:35:28 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(404, {"error":{"code":"CertificateNotFound","message":"Deleted Certificate not found: recoverCertificateName-canrestoreacertificate-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '146',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '597f8838-efd0-4935-8d9e-e035c54a2d0c',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:29 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '2cf55112-e67f-4f09-aebb-a98c74b0332f',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:31 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '803c6cb3-fc7e-417c-a847-b7745d9c6500',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHFAAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:35:31 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:35:31 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(404, {"error":{"code":"CertificateNotFound","message":"Deleted Certificate not found: recoverCertificateName-canrestoreacertificate-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '146',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '697f55c1-6cb8-4dab-9a09-52c1f5398ea0',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:31 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '042a4fb0-cd65-4947-9328-441374d1ebb9',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:33 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '2c4fb2fa-6fe6-4586-816a-450bf6dc6300',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHFAAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:35:33 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:35:33 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(404, {"error":{"code":"CertificateNotFound","message":"Deleted Certificate not found: recoverCertificateName-canrestoreacertificate-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '146',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'f1fef39f-d7b9-41fa-9d5a-2f8a257fe5fb',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:33 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'b6b1a7cc-91f8-4711-b033-00ffbde3b860',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:35 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '04cde5ff-41ee-4390-969e-abf4a9fe6500',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHFAAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:35:35 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:35:35 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(404, {"error":{"code":"CertificateNotFound","message":"Deleted Certificate not found: recoverCertificateName-canrestoreacertificate-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '146',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'e2359274-b765-4928-a7b0-468620b428c5',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:35 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'cf57c524-488d-4e86-8422-a6f90a19b3b9',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:37 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  'ab4479f6-6fc4-4225-8a07-acb006196800',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHFAAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:35:38 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:35:37 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(404, {"error":{"code":"CertificateNotFound","message":"Deleted Certificate not found: recoverCertificateName-canrestoreacertificate-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '146',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '36ff6498-841e-4a5b-9452-427f815f5117',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:37 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '96d0d533-264c-47bf-bfc8-5827725dad66',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:39 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '67085fce-f710-4158-b0b0-bfa0cbc98600',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHFAAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:35:40 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:35:39 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(404, {"error":{"code":"CertificateNotFound","message":"Deleted Certificate not found: recoverCertificateName-canrestoreacertificate-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '146',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '1385168d-c5a5-4b0e-8be2-900f1cdd8bb8',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:40 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '06e207bd-1e70-4a0d-a354-66daa81a314f',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:42 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '3ed39262-6cfc-4a3d-b628-5102e1f06100',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHFAAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:35:42 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:35:42 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(404, {"error":{"code":"CertificateNotFound","message":"Deleted Certificate not found: recoverCertificateName-canrestoreacertificate-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '146',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '5f12f92c-6753-4cfa-981d-467172fd7fef',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:42 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '79a4e124-bab0-4aec-a8ce-5378e84aaa82',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:44 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  'ab24052a-1b60-41b9-b74e-1212d37c6400',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHFAAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:35:44 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:35:44 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(200, {"recoveryId":"https://keyvault_name.vault.azure.net/deletedcertificates/recoverCertificateName-canrestoreacertificate-","deletedDate":1578602126,"scheduledPurgeDate":1586378126,"id":"https://keyvault_name.vault.azure.net/certificates/recoverCertificateName-canrestoreacertificate-/721c11482149480f93ba5a6dd18f8de5","attributes":{"enabled":false,"nbf":1578601487,"exp":1610224487,"created":1578602088,"updated":1578602088,"recoveryLevel":"Recoverable+Purgeable"},"policy":{"id":"https://keyvault_name.vault.azure.net/certificates/recoverCertificateName-canrestoreacertificate-/policy","key_props":{"exportable":true,"kty":"RSA","key_size":2048,"reuse_key":false},"secret_props":{"contentType":"application/x-pkcs12"},"x509_props":{"subject":"cn=MyCert","ekus":["1.3.6.1.5.5.7.3.1","1.3.6.1.5.5.7.3.2"],"key_usage":["digitalSignature","keyEncipherment"],"validity_months":12,"basic_constraints":{"ca":false}},"lifetime_actions":[{"trigger":{"lifetime_percentage":80},"action":{"action_type":"AutoRenew"}}],"issuer":{"name":"Self"},"attributes":{"enabled":true,"created":1578602088,"updated":1578602088}}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'f6ec10cc-b41b-446a-bfa7-bd44e8ac3671',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:44 GMT',
  'Content-Length',
  '1145'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .delete('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'eb88826b-365b-4008-b6ea-055b9127f446',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:44 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  'c8311ab0-baf1-4119-ad31-6807bab96500',
  'x-ms-ests-server',
  '2.1.9898.10 - WST ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=ArdvsW_6bNVKqV3RDDStopo_aSJHFAAAAGaFqdUOAAAA; expires=Sat, 08-Feb-2020 20:35:44 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=prod; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=ests; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Thu, 09 Jan 2020 20:35:44 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .delete('/deletedcertificates/recoverCertificateName-canrestoreacertificate-')
  .query(true)
  .reply(204, "", [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '89570ed3-90e1-47a8-bbe8-bbba0ecfcbf3',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.250.15.99;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Thu, 09 Jan 2020 20:35:44 GMT'
]);
