/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/mHSMPrivateEndpointConnectionsMappers";
import * as Parameters from "../models/parameters";
import { KeyVaultManagementClientContext } from "../keyVaultManagementClientContext";

/** Class representing a MHSMPrivateEndpointConnections. */
export class MHSMPrivateEndpointConnections {
  private readonly client: KeyVaultManagementClientContext;

  /**
   * Create a MHSMPrivateEndpointConnections.
   * @param {KeyVaultManagementClientContext} client Reference to the service client.
   */
  constructor(client: KeyVaultManagementClientContext) {
    this.client = client;
  }

  /**
   * The List operation gets information about the private endpoint connections associated with the
   * managed HSM Pool.
   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.
   * @param name Name of the managed HSM Pool
   * @param [options] The optional parameters
   * @returns Promise<Models.MHSMPrivateEndpointConnectionsListByResourceResponse>
   */
  listByResource(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.MHSMPrivateEndpointConnectionsListByResourceResponse>;
  /**
   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.
   * @param name Name of the managed HSM Pool
   * @param callback The callback
   */
  listByResource(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.MHSMPrivateEndpointConnectionsListResult>): void;
  /**
   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.
   * @param name Name of the managed HSM Pool
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResource(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MHSMPrivateEndpointConnectionsListResult>): void;
  listByResource(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.MHSMPrivateEndpointConnectionsListResult>, callback?: msRest.ServiceCallback<Models.MHSMPrivateEndpointConnectionsListResult>): Promise<Models.MHSMPrivateEndpointConnectionsListByResourceResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        options
      },
      listByResourceOperationSpec,
      callback) as Promise<Models.MHSMPrivateEndpointConnectionsListByResourceResponse>;
  }

  /**
   * Gets the specified private endpoint connection associated with the managed HSM Pool.
   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.
   * @param name Name of the managed HSM Pool
   * @param privateEndpointConnectionName Name of the private endpoint connection associated with the
   * managed hsm pool.
   * @param [options] The optional parameters
   * @returns Promise<Models.MHSMPrivateEndpointConnectionsGetResponse>
   */
  get(resourceGroupName: string, name: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase): Promise<Models.MHSMPrivateEndpointConnectionsGetResponse>;
  /**
   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.
   * @param name Name of the managed HSM Pool
   * @param privateEndpointConnectionName Name of the private endpoint connection associated with the
   * managed hsm pool.
   * @param callback The callback
   */
  get(resourceGroupName: string, name: string, privateEndpointConnectionName: string, callback: msRest.ServiceCallback<Models.MHSMPrivateEndpointConnection>): void;
  /**
   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.
   * @param name Name of the managed HSM Pool
   * @param privateEndpointConnectionName Name of the private endpoint connection associated with the
   * managed hsm pool.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, name: string, privateEndpointConnectionName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MHSMPrivateEndpointConnection>): void;
  get(resourceGroupName: string, name: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.MHSMPrivateEndpointConnection>, callback?: msRest.ServiceCallback<Models.MHSMPrivateEndpointConnection>): Promise<Models.MHSMPrivateEndpointConnectionsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        privateEndpointConnectionName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.MHSMPrivateEndpointConnectionsGetResponse>;
  }

  /**
   * Updates the specified private endpoint connection associated with the managed hsm pool.
   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.
   * @param name Name of the managed HSM Pool
   * @param privateEndpointConnectionName Name of the private endpoint connection associated with the
   * managed hsm pool.
   * @param properties The intended state of private endpoint connection.
   * @param [options] The optional parameters
   * @returns Promise<Models.MHSMPrivateEndpointConnectionsPutResponse>
   */
  put(resourceGroupName: string, name: string, privateEndpointConnectionName: string, properties: Models.MHSMPrivateEndpointConnection, options?: msRest.RequestOptionsBase): Promise<Models.MHSMPrivateEndpointConnectionsPutResponse>;
  /**
   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.
   * @param name Name of the managed HSM Pool
   * @param privateEndpointConnectionName Name of the private endpoint connection associated with the
   * managed hsm pool.
   * @param properties The intended state of private endpoint connection.
   * @param callback The callback
   */
  put(resourceGroupName: string, name: string, privateEndpointConnectionName: string, properties: Models.MHSMPrivateEndpointConnection, callback: msRest.ServiceCallback<Models.MHSMPrivateEndpointConnection>): void;
  /**
   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.
   * @param name Name of the managed HSM Pool
   * @param privateEndpointConnectionName Name of the private endpoint connection associated with the
   * managed hsm pool.
   * @param properties The intended state of private endpoint connection.
   * @param options The optional parameters
   * @param callback The callback
   */
  put(resourceGroupName: string, name: string, privateEndpointConnectionName: string, properties: Models.MHSMPrivateEndpointConnection, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MHSMPrivateEndpointConnection>): void;
  put(resourceGroupName: string, name: string, privateEndpointConnectionName: string, properties: Models.MHSMPrivateEndpointConnection, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.MHSMPrivateEndpointConnection>, callback?: msRest.ServiceCallback<Models.MHSMPrivateEndpointConnection>): Promise<Models.MHSMPrivateEndpointConnectionsPutResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        privateEndpointConnectionName,
        properties,
        options
      },
      putOperationSpec,
      callback) as Promise<Models.MHSMPrivateEndpointConnectionsPutResponse>;
  }

  /**
   * Deletes the specified private endpoint connection associated with the managed hsm pool.
   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.
   * @param name Name of the managed HSM Pool
   * @param privateEndpointConnectionName Name of the private endpoint connection associated with the
   * managed hsm pool.
   * @param [options] The optional parameters
   * @returns Promise<Models.MHSMPrivateEndpointConnectionsDeleteResponse>
   */
  deleteMethod(resourceGroupName: string, name: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase): Promise<Models.MHSMPrivateEndpointConnectionsDeleteResponse> {
    return this.beginDeleteMethod(resourceGroupName,name,privateEndpointConnectionName,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.MHSMPrivateEndpointConnectionsDeleteResponse>;
  }

  /**
   * Deletes the specified private endpoint connection associated with the managed hsm pool.
   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.
   * @param name Name of the managed HSM Pool
   * @param privateEndpointConnectionName Name of the private endpoint connection associated with the
   * managed hsm pool.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeleteMethod(resourceGroupName: string, name: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        name,
        privateEndpointConnectionName,
        options
      },
      beginDeleteMethodOperationSpec,
      options);
  }

  /**
   * The List operation gets information about the private endpoint connections associated with the
   * managed HSM Pool.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.MHSMPrivateEndpointConnectionsListByResourceNextResponse>
   */
  listByResourceNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.MHSMPrivateEndpointConnectionsListByResourceNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByResourceNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.MHSMPrivateEndpointConnectionsListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MHSMPrivateEndpointConnectionsListResult>): void;
  listByResourceNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.MHSMPrivateEndpointConnectionsListResult>, callback?: msRest.ServiceCallback<Models.MHSMPrivateEndpointConnectionsListResult>): Promise<Models.MHSMPrivateEndpointConnectionsListByResourceNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByResourceNextOperationSpec,
      callback) as Promise<Models.MHSMPrivateEndpointConnectionsListByResourceNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listByResourceOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}/privateEndpointConnections",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.name
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.MHSMPrivateEndpointConnectionsListResult
    },
    default: {
      bodyMapper: Mappers.ManagedHsmError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}/privateEndpointConnections/{privateEndpointConnectionName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.privateEndpointConnectionName
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.MHSMPrivateEndpointConnection
    },
    default: {
      bodyMapper: Mappers.ManagedHsmError
    }
  },
  serializer
};

const putOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}/privateEndpointConnections/{privateEndpointConnectionName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.privateEndpointConnectionName
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "properties",
    mapper: {
      ...Mappers.MHSMPrivateEndpointConnection,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.MHSMPrivateEndpointConnection,
      headersMapper: Mappers.MHSMPrivateEndpointConnectionsPutHeaders
    },
    default: {
      bodyMapper: Mappers.CloudError,
      headersMapper: Mappers.MHSMPrivateEndpointConnectionsPutHeaders
    }
  },
  serializer
};

const beginDeleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}/privateEndpointConnections/{privateEndpointConnectionName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.privateEndpointConnectionName
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.MHSMPrivateEndpointConnection,
      headersMapper: Mappers.MHSMPrivateEndpointConnectionsDeleteHeaders
    },
    202: {
      headersMapper: Mappers.MHSMPrivateEndpointConnectionsDeleteHeaders
    },
    204: {
      headersMapper: Mappers.MHSMPrivateEndpointConnectionsDeleteHeaders
    },
    default: {
      bodyMapper: Mappers.CloudError,
      headersMapper: Mappers.MHSMPrivateEndpointConnectionsDeleteHeaders
    }
  },
  serializer
};

const listByResourceNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.MHSMPrivateEndpointConnectionsListResult
    },
    default: {
      bodyMapper: Mappers.ManagedHsmError
    }
  },
  serializer
};
