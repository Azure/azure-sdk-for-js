src/core/models/roleAssignmentsMappers.ts:export {
src/core/models/parameters.ts:export const apiVersion: coreHttp.OperationQueryParameter = {
src/core/models/parameters.ts:export const filter: coreHttp.OperationQueryParameter = {
src/core/models/parameters.ts:export const jobId: coreHttp.OperationURLParameter = {
src/core/models/parameters.ts:export const keyName: coreHttp.OperationURLParameter = {
src/core/models/parameters.ts:export const roleAssignmentName: coreHttp.OperationURLParameter = {
src/core/models/parameters.ts:export const scope: coreHttp.OperationURLParameter = {
src/core/models/parameters.ts:export const vaultBaseUrl: coreHttp.OperationURLParameter = {
RoleAssignmentFilter {
RoleAssignmentPropertiesWithScope {
RoleAssignment {
RoleAssignmentListResult {
RoleAssignmentProperties {
RoleAssignmentCreateParameters {
RoleDefinitionFilter {
Permission {
RoleDefinition {
RoleDefinitionListResult {
ErrorModel {
KeyVaultError {
SASTokenParameter {
RestoreOperationParameters {
SelectiveKeyRestoreOperationParameters {
SelectiveKeyRestoreOperation {
FullBackupOperation {
FullRestoreOperation {
RoleDefinitionsListOptionalParams extends coreHttp.RequestOptionsBase {
RoleAssignmentsListForScopeOptionalParams extends coreHttp.RequestOptionsBase {
KeyVaultClientFullBackupOptionalParams extends coreHttp.RequestOptionsBase {
KeyVaultClientFullRestoreOperationMethodOptionalParams extends coreHttp.RequestOptionsBase {
KeyVaultClientSelectiveKeyRestoreOperationMethodOptionalParams extends coreHttp.RequestOptionsBase {
FullBackupHeaders {
FullRestoreOperationHeaders {
SelectiveKeyRestoreOperationHeaders {
RoleDefinitionsListResponse = RoleDefinitionListResult & {
RoleAssignmentsDeleteMethodResponse = RoleAssignment & {
RoleAssignmentsCreateResponse = RoleAssignment & {
RoleAssignmentsGetResponse = RoleAssignment & {
RoleAssignmentsListForScopeResponse = RoleAssignmentListResult & {
FullBackupResponse = FullBackupOperation & FullBackupHeaders & {
FullBackupStatusResponse = FullBackupOperation & {
FullRestoreOperationResponse = FullRestoreOperation & FullRestoreOperationHeaders & {
FullRestoreStatusResponse = FullRestoreOperation & {
SelectiveKeyRestoreOperationResponse = SelectiveKeyRestoreOperation & SelectiveKeyRestoreOperationHeaders & {
src/core/models/mappers.ts:export const RoleAssignmentFilter: coreHttp.CompositeMapper = {
src/core/models/mappers.ts:export const RoleAssignmentPropertiesWithScope: coreHttp.CompositeMapper = {
src/core/models/mappers.ts:export const RoleAssignment: coreHttp.CompositeMapper = {
src/core/models/mappers.ts:export const RoleAssignmentListResult: coreHttp.CompositeMapper = {
src/core/models/mappers.ts:export const RoleAssignmentProperties: coreHttp.CompositeMapper = {
src/core/models/mappers.ts:export const RoleAssignmentCreateParameters: coreHttp.CompositeMapper = {
src/core/models/mappers.ts:export const RoleDefinitionFilter: coreHttp.CompositeMapper = {
src/core/models/mappers.ts:export const Permission: coreHttp.CompositeMapper = {
src/core/models/mappers.ts:export const RoleDefinition: coreHttp.CompositeMapper = {
src/core/models/mappers.ts:export const RoleDefinitionListResult: coreHttp.CompositeMapper = {
src/core/models/mappers.ts:export const ErrorModel: coreHttp.CompositeMapper = {
src/core/models/mappers.ts:export const KeyVaultError: coreHttp.CompositeMapper = {
src/core/models/mappers.ts:export const SASTokenParameter: coreHttp.CompositeMapper = {
src/core/models/mappers.ts:export const RestoreOperationParameters: coreHttp.CompositeMapper = {
src/core/models/mappers.ts:export const SelectiveKeyRestoreOperationParameters: coreHttp.CompositeMapper = {
src/core/models/mappers.ts:export const SelectiveKeyRestoreOperation: coreHttp.CompositeMapper = {
src/core/models/mappers.ts:export const FullBackupOperation: coreHttp.CompositeMapper = {
src/core/models/mappers.ts:export const FullRestoreOperation: coreHttp.CompositeMapper = {
src/core/models/mappers.ts:export const FullBackupHeaders: coreHttp.CompositeMapper = {
src/core/models/mappers.ts:export const FullRestoreOperationHeaders: coreHttp.CompositeMapper = {
src/core/models/mappers.ts:export const SelectiveKeyRestoreOperationHeaders: coreHttp.CompositeMapper = {
src/core/models/roleDefinitionsMappers.ts:export {
