/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */


import * as coreHttp from "@azure/core-http";

/**
 * Role Assignments filter
 */
export interface RoleAssignmentFilter {
  /**
   * Returns role assignment of the specific principal.
   */
  principalId?: string;
}

/**
 * Role assignment properties with scope.
 */
export interface RoleAssignmentPropertiesWithScope {
  /**
   * The role assignment scope.
   */
  scope?: string;
  /**
   * The role definition ID.
   */
  roleDefinitionId?: string;
  /**
   * The principal ID.
   */
  principalId?: string;
}

/**
 * Role Assignments
 */
export interface RoleAssignment {
  /**
   * The role assignment ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The role assignment name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The role assignment type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Role assignment properties.
   */
  properties?: RoleAssignmentPropertiesWithScope;
}

/**
 * Role assignment list operation result.
 */
export interface RoleAssignmentListResult {
  /**
   * Role assignment list.
   */
  value?: RoleAssignment[];
  /**
   * The URL to use for getting the next set of results.
   */
  nextLink?: string;
}

/**
 * Role assignment properties.
 */
export interface RoleAssignmentProperties {
  /**
   * The role definition ID used in the role assignment.
   */
  roleDefinitionId: string;
  /**
   * The principal ID assigned to the role. This maps to the ID inside the Active Directory. It can
   * point to a user, service principal, or security group.
   */
  principalId: string;
}

/**
 * Role assignment create parameters.
 */
export interface RoleAssignmentCreateParameters {
  /**
   * Role assignment properties.
   */
  properties: RoleAssignmentProperties;
}

/**
 * Role Definitions filter
 */
export interface RoleDefinitionFilter {
  /**
   * Returns role definition with the specific name.
   */
  roleName?: string;
}

/**
 * Role definition permissions.
 */
export interface Permission {
  /**
   * Allowed actions.
   */
  actions?: string[];
  /**
   * Denied actions.
   */
  notActions?: string[];
  /**
   * Allowed Data actions.
   */
  dataActions?: string[];
  /**
   * Denied Data actions.
   */
  notDataActions?: string[];
}

/**
 * Role definition.
 */
export interface RoleDefinition {
  /**
   * The role definition ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The role definition name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The role definition type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The role name.
   */
  roleName?: string;
  /**
   * The role definition description.
   */
  description?: string;
  /**
   * The role type.
   */
  roleType?: string;
  /**
   * Role definition permissions.
   */
  permissions?: Permission[];
  /**
   * Role definition assignable scopes.
   */
  assignableScopes?: string[];
}

/**
 * Role definition list operation result.
 */
export interface RoleDefinitionListResult {
  /**
   * Role definition list.
   */
  value?: RoleDefinition[];
  /**
   * The URL to use for getting the next set of results.
   */
  nextLink?: string;
}

/**
 * The key vault server error.
 */
export interface ErrorModel {
  /**
   * The error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly innerError?: ErrorModel;
}

/**
 * The key vault error exception.
 */
export interface KeyVaultError {
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: ErrorModel;
}

/**
 * An interface representing SASTokenParameter.
 */
export interface SASTokenParameter {
  /**
   * Azure Blob storage container Uri
   */
  storageResourceUri: string;
  /**
   * The SAS token pointing to an Azure Blob storage container
   */
  token: string;
}

/**
 * An interface representing RestoreOperationParameters.
 */
export interface RestoreOperationParameters {
  sasTokenParameters: SASTokenParameter;
  /**
   * The Folder name of the blob where the previous successful full backup was stored
   */
  folderToRestore: string;
}

/**
 * An interface representing SelectiveKeyRestoreOperationParameters.
 */
export interface SelectiveKeyRestoreOperationParameters {
  sasTokenParameters: SASTokenParameter;
  /**
   * The Folder name of the blob where the previous successful full backup was stored
   */
  folder: string;
}

/**
 * Selective Key Restore operation
 */
export interface SelectiveKeyRestoreOperation {
  /**
   * Status of the restore operation.
   */
  status?: string;
  /**
   * The status details of restore operation.
   */
  statusDetails?: string;
  /**
   * Error encountered, if any, during the selective key restore operation.
   */
  error?: ErrorModel;
  /**
   * Identifier for the selective key restore operation.
   */
  jobId?: string;
  /**
   * The start time of the restore operation
   */
  startTime?: Date;
  /**
   * The end time of the restore operation
   */
  endTime?: Date;
}

/**
 * Full backup operation
 */
export interface FullBackupOperation {
  /**
   * Status of the backup operation.
   */
  status?: string;
  /**
   * The status details of backup operation.
   */
  statusDetails?: string;
  /**
   * Error encountered, if any, during the full backup operation.
   */
  error?: ErrorModel;
  /**
   * The start time of the backup operation in UTC
   */
  startTime?: Date;
  /**
   * The end time of the backup operation in UTC
   */
  endTime?: Date;
  /**
   * Identifier for the full backup operation.
   */
  jobId?: string;
  /**
   * The Azure blob storage container Uri which contains the full backup
   */
  azureStorageBlobContainerUri?: string;
}

/**
 * Full restore operation
 */
export interface FullRestoreOperation {
  /**
   * Status of the restore operation.
   */
  status?: string;
  /**
   * The status details of restore operation.
   */
  statusDetails?: string;
  /**
   * Error encountered, if any, during the full restore operation.
   */
  error?: ErrorModel;
  /**
   * Identifier for the full restore operation.
   */
  jobId?: string;
  /**
   * The start time of the restore operation
   */
  startTime?: Date;
  /**
   * The end time of the restore operation
   */
  endTime?: Date;
}

/**
 * Optional Parameters.
 */
export interface RoleDefinitionsListOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * The filter to apply on the operation. Use atScopeAndBelow filter to search below the given
   * scope as well.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface RoleAssignmentsListForScopeOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * The filter to apply on the operation. Use $filter=atScope() to return all role assignments at
   * or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above
   * or below the scope for the specified principal.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface KeyVaultClientFullBackupOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Azure blob shared access signature token pointing to a valid Azure blob container where full
   * backup needs to be stored. This token needs to be valid for at least next 24 hours from the
   * time of making this call
   */
  azureStorageBlobContainerUri?: SASTokenParameter;
}

/**
 * Optional Parameters.
 */
export interface KeyVaultClientFullRestoreOperationMethodOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * The Azure blob SAS token pointing to a folder where the previous successful full backup was
   * stored
   */
  restoreBlobDetails?: RestoreOperationParameters;
}

/**
 * Optional Parameters.
 */
export interface KeyVaultClientSelectiveKeyRestoreOperationMethodOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * The Azure blob SAS token pointing to a folder where the previous successful full backup was
   * stored
   */
  restoreBlobDetails?: SelectiveKeyRestoreOperationParameters;
}

/**
 * Defines headers for FullBackup operation.
 */
export interface FullBackupHeaders {
  /**
   * The recommended number of seconds to wait before calling the URI specified in
   * Azure-AsyncOperation.
   */
  retryAfter: number;
  /**
   * The URI to poll for completion status.
   */
  azureAsyncOperation: string;
}

/**
 * Defines headers for FullRestoreOperation operation.
 */
export interface FullRestoreOperationHeaders {
  /**
   * The recommended number of seconds to wait before calling the URI specified in
   * Azure-AsyncOperation.
   */
  retryAfter: number;
  /**
   * The URI to poll for completion status.
   */
  azureAsyncOperation: string;
}

/**
 * Defines headers for SelectiveKeyRestoreOperation operation.
 */
export interface SelectiveKeyRestoreOperationHeaders {
  /**
   * The recommended number of seconds to wait before calling the URI specified in
   * Azure-AsyncOperation.
   */
  retryAfter: number;
  /**
   * The URI to poll for completion status.
   */
  azureAsyncOperation: string;
}

/**
 * Contains response data for the list operation.
 */
export type RoleDefinitionsListResponse = RoleDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleDefinitionListResult;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type RoleAssignmentsDeleteMethodResponse = RoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignment;
    };
};

/**
 * Contains response data for the create operation.
 */
export type RoleAssignmentsCreateResponse = RoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignment;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RoleAssignmentsGetResponse = RoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignment;
    };
};

/**
 * Contains response data for the listForScope operation.
 */
export type RoleAssignmentsListForScopeResponse = RoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignmentListResult;
    };
};

/**
 * Contains response data for the fullBackup operation.
 */
export type FullBackupResponse = FullBackupOperation & FullBackupHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: FullBackupHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FullBackupOperation;
    };
};

/**
 * Contains response data for the fullBackupStatus operation.
 */
export type FullBackupStatusResponse = FullBackupOperation & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FullBackupOperation;
    };
};

/**
 * Contains response data for the fullRestoreOperationMethod operation.
 */
export type FullRestoreOperationResponse = FullRestoreOperation & FullRestoreOperationHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: FullRestoreOperationHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FullRestoreOperation;
    };
};

/**
 * Contains response data for the fullRestoreStatus operation.
 */
export type FullRestoreStatusResponse = FullRestoreOperation & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FullRestoreOperation;
    };
};

/**
 * Contains response data for the selectiveKeyRestoreOperationMethod operation.
 */
export type SelectiveKeyRestoreOperationResponse = SelectiveKeyRestoreOperation & SelectiveKeyRestoreOperationHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SelectiveKeyRestoreOperationHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SelectiveKeyRestoreOperation;
    };
};
