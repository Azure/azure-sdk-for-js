/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";


export const RoleAssignmentFilter: coreHttp.CompositeMapper = {
  serializedName: "RoleAssignmentFilter",
  type: {
    name: "Composite",
    className: "RoleAssignmentFilter",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleAssignmentPropertiesWithScope: coreHttp.CompositeMapper = {
  serializedName: "RoleAssignmentPropertiesWithScope",
  type: {
    name: "Composite",
    className: "RoleAssignmentPropertiesWithScope",
    modelProperties: {
      scope: {
        serializedName: "scope",
        type: {
          name: "String"
        }
      },
      roleDefinitionId: {
        serializedName: "roleDefinitionId",
        type: {
          name: "String"
        }
      },
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleAssignment: coreHttp.CompositeMapper = {
  serializedName: "RoleAssignment",
  type: {
    name: "Composite",
    className: "RoleAssignment",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "RoleAssignmentPropertiesWithScope"
        }
      }
    }
  }
};

export const RoleAssignmentListResult: coreHttp.CompositeMapper = {
  serializedName: "RoleAssignmentListResult",
  type: {
    name: "Composite",
    className: "RoleAssignmentListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RoleAssignment"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleAssignmentProperties: coreHttp.CompositeMapper = {
  serializedName: "RoleAssignmentProperties",
  type: {
    name: "Composite",
    className: "RoleAssignmentProperties",
    modelProperties: {
      roleDefinitionId: {
        required: true,
        serializedName: "roleDefinitionId",
        type: {
          name: "String"
        }
      },
      principalId: {
        required: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleAssignmentCreateParameters: coreHttp.CompositeMapper = {
  serializedName: "RoleAssignmentCreateParameters",
  type: {
    name: "Composite",
    className: "RoleAssignmentCreateParameters",
    modelProperties: {
      properties: {
        required: true,
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "RoleAssignmentProperties"
        }
      }
    }
  }
};

export const RoleDefinitionFilter: coreHttp.CompositeMapper = {
  serializedName: "RoleDefinitionFilter",
  type: {
    name: "Composite",
    className: "RoleDefinitionFilter",
    modelProperties: {
      roleName: {
        serializedName: "roleName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Permission: coreHttp.CompositeMapper = {
  serializedName: "Permission",
  type: {
    name: "Composite",
    className: "Permission",
    modelProperties: {
      actions: {
        serializedName: "actions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      notActions: {
        serializedName: "notActions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      dataActions: {
        serializedName: "dataActions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      notDataActions: {
        serializedName: "notDataActions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const RoleDefinition: coreHttp.CompositeMapper = {
  serializedName: "RoleDefinition",
  type: {
    name: "Composite",
    className: "RoleDefinition",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      roleName: {
        serializedName: "properties.roleName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      roleType: {
        serializedName: "properties.type",
        type: {
          name: "String"
        }
      },
      permissions: {
        serializedName: "properties.permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Permission"
            }
          }
        }
      },
      assignableScopes: {
        serializedName: "properties.assignableScopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const RoleDefinitionListResult: coreHttp.CompositeMapper = {
  serializedName: "RoleDefinitionListResult",
  type: {
    name: "Composite",
    className: "RoleDefinitionListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RoleDefinition"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorModel: coreHttp.CompositeMapper = {
  serializedName: "Error",
  type: {
    name: "Composite",
    className: "ErrorModel",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      innerError: {
        readOnly: true,
        serializedName: "innererror",
        type: {
          name: "Composite",
          className: "ErrorModel"
        }
      }
    }
  }
};

export const KeyVaultError: coreHttp.CompositeMapper = {
  serializedName: "KeyVaultError",
  type: {
    name: "Composite",
    className: "KeyVaultError",
    modelProperties: {
      error: {
        readOnly: true,
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorModel"
        }
      }
    }
  }
};
