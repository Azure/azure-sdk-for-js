/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Models from "../models";
import * as Mappers from "../models/roleDefinitionsMappers";
import * as Parameters from "../models/parameters";
import { KeyVaultClientContext } from "../keyVaultClientContext";

/** Class representing a RoleDefinitions. */
export class RoleDefinitions {
  private readonly client: KeyVaultClientContext;

  /**
   * Create a RoleDefinitions.
   * @param {KeyVaultClientContext} client Reference to the service client.
   */
  constructor(client: KeyVaultClientContext) {
    this.client = client;
  }

  /**
   * Get all role definitions that are applicable at scope and above.
   * @param vaultBaseUrl The vault name, for example https://myvault.vault.azure.net.
   * @param scope The scope of the role definition.
   * @param [options] The optional parameters
   * @returns Promise<Models.RoleDefinitionsListResponse>
   */
  list(vaultBaseUrl: string, scope: string, options?: Models.RoleDefinitionsListOptionalParams): Promise<Models.RoleDefinitionsListResponse>;
  /**
   * @param vaultBaseUrl The vault name, for example https://myvault.vault.azure.net.
   * @param scope The scope of the role definition.
   * @param callback The callback
   */
  list(vaultBaseUrl: string, scope: string, callback: coreHttp.ServiceCallback<Models.RoleDefinitionListResult>): void;
  /**
   * @param vaultBaseUrl The vault name, for example https://myvault.vault.azure.net.
   * @param scope The scope of the role definition.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(vaultBaseUrl: string, scope: string, options: Models.RoleDefinitionsListOptionalParams, callback: coreHttp.ServiceCallback<Models.RoleDefinitionListResult>): void;
  list(vaultBaseUrl: string, scope: string, options?: Models.RoleDefinitionsListOptionalParams | coreHttp.ServiceCallback<Models.RoleDefinitionListResult>, callback?: coreHttp.ServiceCallback<Models.RoleDefinitionListResult>): Promise<Models.RoleDefinitionsListResponse> {
    return this.client.sendOperationRequest(
      {
        vaultBaseUrl,
        scope,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.RoleDefinitionsListResponse>;
  }
}

// Operation Specifications
const serializer = new coreHttp.Serializer(Mappers);
const listOperationSpec: coreHttp.OperationSpec = {
  httpMethod: "GET",
  path: "{scope}/providers/Microsoft.Authorization/roleDefinitions",
  urlParameters: [
    Parameters.vaultBaseUrl,
    Parameters.scope
  ],
  queryParameters: [
    Parameters.filter,
    Parameters.apiVersion
  ],
  responses: {
    200: {
      bodyMapper: Mappers.RoleDefinitionListResult
    },
    default: {
      bodyMapper: Mappers.KeyVaultError
    }
  },
  serializer
};
