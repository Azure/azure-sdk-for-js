/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter
} from "@azure/core-client";
import {
  RoleDefinitionCreateParameters as RoleDefinitionCreateParametersMapper,
  RoleAssignmentCreateParameters as RoleAssignmentCreateParametersMapper,
  SASTokenParameter as SASTokenParameterMapper,
  RestoreOperationParameters as RestoreOperationParametersMapper,
  SelectiveKeyRestoreOperationParameters as SelectiveKeyRestoreOperationParametersMapper,
  UpdateSettingRequest as UpdateSettingRequestMapper
} from "../models/mappers";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const vaultBaseUrl: OperationURLParameter = {
  parameterPath: "vaultBaseUrl",
  mapper: {
    serializedName: "vaultBaseUrl",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const scope: OperationURLParameter = {
  parameterPath: "scope",
  mapper: {
    serializedName: "scope",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const roleDefinitionName: OperationURLParameter = {
  parameterPath: "roleDefinitionName",
  mapper: {
    serializedName: "roleDefinitionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    serializedName: "api-version",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const parameters: OperationParameter = {
  parameterPath: "parameters",
  mapper: RoleDefinitionCreateParametersMapper
};

export const filter: OperationQueryParameter = {
  parameterPath: ["options", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const roleAssignmentName: OperationURLParameter = {
  parameterPath: "roleAssignmentName",
  mapper: {
    serializedName: "roleAssignmentName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters1: OperationParameter = {
  parameterPath: "parameters",
  mapper: RoleAssignmentCreateParametersMapper
};

export const azureStorageBlobContainerUri: OperationParameter = {
  parameterPath: ["options", "azureStorageBlobContainerUri"],
  mapper: SASTokenParameterMapper
};

export const jobId: OperationURLParameter = {
  parameterPath: "jobId",
  mapper: {
    serializedName: "jobId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const restoreBlobDetails: OperationParameter = {
  parameterPath: ["options", "restoreBlobDetails"],
  mapper: RestoreOperationParametersMapper
};

export const restoreBlobDetails1: OperationParameter = {
  parameterPath: ["options", "restoreBlobDetails"],
  mapper: SelectiveKeyRestoreOperationParametersMapper
};

export const keyName: OperationURLParameter = {
  parameterPath: "keyName",
  mapper: {
    serializedName: "keyName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const value: OperationParameter = {
  parameterPath: "value",
  mapper: UpdateSettingRequestMapper
};

export const settingName: OperationURLParameter = {
  parameterPath: "settingName",
  mapper: {
    serializedName: "setting-name",
    required: true,
    type: {
      name: "String"
    }
  }
};
