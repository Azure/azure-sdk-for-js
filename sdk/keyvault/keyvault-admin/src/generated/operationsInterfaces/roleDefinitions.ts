/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  RoleDefinitionsDeleteOptionalParams,
  RoleDefinitionCreateParameters,
  RoleDefinitionsCreateOrUpdateOptionalParams,
  RoleDefinitionsCreateOrUpdateResponse,
  RoleDefinitionsGetOptionalParams,
  RoleDefinitionsGetResponse,
  RoleDefinitionsListOptionalParams,
  RoleDefinitionsListResponse,
  RoleDefinitionsListNextOptionalParams,
  RoleDefinitionsListNextResponse
} from "../models";

/** Interface representing a RoleDefinitions. */
export interface RoleDefinitions {
  /**
   * Deletes a custom role definition.
   * @param vaultBaseUrl The vault name, for example https://myvault.vault.azure.net.
   * @param scope The scope of the role definition to delete. Managed HSM only supports '/'.
   * @param roleDefinitionName The name (GUID) of the role definition to delete.
   * @param options The options parameters.
   */
  delete(
    vaultBaseUrl: string,
    scope: string,
    roleDefinitionName: string,
    options?: RoleDefinitionsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Creates or updates a custom role definition.
   * @param vaultBaseUrl The vault name, for example https://myvault.vault.azure.net.
   * @param scope The scope of the role definition to create or update. Managed HSM only supports '/'.
   * @param roleDefinitionName The name of the role definition to create or update. It can be any valid
   *                           GUID.
   * @param parameters Parameters for the role definition.
   * @param options The options parameters.
   */
  createOrUpdate(
    vaultBaseUrl: string,
    scope: string,
    roleDefinitionName: string,
    parameters: RoleDefinitionCreateParameters,
    options?: RoleDefinitionsCreateOrUpdateOptionalParams
  ): Promise<RoleDefinitionsCreateOrUpdateResponse>;
  /**
   * Get the specified role definition.
   * @param vaultBaseUrl The vault name, for example https://myvault.vault.azure.net.
   * @param scope The scope of the role definition to get. Managed HSM only supports '/'.
   * @param roleDefinitionName The name of the role definition to get.
   * @param options The options parameters.
   */
  get(
    vaultBaseUrl: string,
    scope: string,
    roleDefinitionName: string,
    options?: RoleDefinitionsGetOptionalParams
  ): Promise<RoleDefinitionsGetResponse>;
  /**
   * Get all role definitions that are applicable at scope and above.
   * @param vaultBaseUrl The vault name, for example https://myvault.vault.azure.net.
   * @param scope The scope of the role definition.
   * @param options The options parameters.
   */
  list(
    vaultBaseUrl: string,
    scope: string,
    options?: RoleDefinitionsListOptionalParams
  ): Promise<RoleDefinitionsListResponse>;
  /**
   * ListNext
   * @param vaultBaseUrl The vault name, for example https://myvault.vault.azure.net.
   * @param scope The scope of the role definition.
   * @param nextLink The nextLink from the previous successful call to the List method.
   * @param options The options parameters.
   */
  listNext(
    vaultBaseUrl: string,
    scope: string,
    nextLink: string,
    options?: RoleDefinitionsListNextOptionalParams
  ): Promise<RoleDefinitionsListNextResponse>;
}
