{"version":3,"file":"backupClientModels.js","sourceRoot":"","sources":["../../src/backupClientModels.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { ClientOptions, OperationOptions } from \"@azure-rest/core-client\";\nimport type { SUPPORTED_API_VERSIONS } from \"./constants.js\";\nimport { KeyVaultBackupClient } from \"./backupClient.js\";\n\nexport type { PollerLike } from \"./lro/shim.js\";\nexport type { OperationStatus } from \"./generated/index.js\";\n\n/**\n * The optional parameters accepted by the KeyVaultBackupClient\n */\nexport interface KeyVaultBackupClientOptions extends ClientOptions {\n  /**\n   * The accepted versions of the Key Vault's service API.\n   */\n  serviceVersion?: SUPPORTED_API_VERSIONS;\n\n  /**\n   * Whether to disable verification that the authentication challenge resource matches the Key Vault or Managed HSM domain.\n   * Defaults to false.\n   */\n  disableChallengeResourceVerification?: boolean;\n}\n\n/**\n * An interface representing the optional parameters that can be\n * passed to {@link beginBackup}\n */\nexport interface KeyVaultBackupPollerOptions extends OperationOptions {\n  /**\n   * Time between each polling\n   */\n  intervalInMs?: number;\n  /**\n   * A serialized poller, used to resume an existing operation\n   */\n  resumeFrom?: string;\n}\n\n/**\n * An interface representing the optional parameters that can be\n * passed to {@link KeyVaultBackupClient.beginPreBackup}\n */\nexport interface KeyVaultBeginPreBackupOptions extends KeyVaultBackupPollerOptions {}\n\n/**\n * An interface representing the optional parameters that can be\n * passed to {@link KeyVaultBackupClient.beginBackup}\n */\nexport interface KeyVaultBeginBackupOptions extends KeyVaultBackupPollerOptions {}\n\n/**\n * An interface representing the optional parameters that can be\n * passed to {@link KeyVaultBackupClient.beginRestore}\n */\nexport interface KeyVaultBeginRestoreOptions extends KeyVaultBackupPollerOptions {}\n\n/**\n * An interface representing the optional parameters that can be\n * passed to {@link KeyVaultBackupClient.beginPreRestore}\n */\nexport interface KeyVaultBeginPreRestoreOptions extends KeyVaultBackupPollerOptions {}\n\n/**\n * An interface representing the optional parameters that can be\n * passed to {@link KeyVaultBackupClient.beginSelectiveKeyRestore}\n */\nexport interface KeyVaultBeginSelectiveKeyRestoreOptions extends KeyVaultBackupPollerOptions {}\n\n/**\n * An interface representing the result of a backup operation.\n */\nexport interface KeyVaultBackupResult {\n  /**\n   * The location of the full backup.\n   */\n  folderUri?: string;\n\n  /**\n   * The start time of the backup operation.\n   */\n  startTime?: Date;\n\n  /**\n   * The end time of the backup operation.\n   */\n  endTime?: Date;\n}\n\n/**\n * An interface representing the result of a restore operation.\n */\nexport interface KeyVaultRestoreResult {\n  /**\n   * The start time of the restore operation.\n   */\n  startTime?: Date;\n\n  /**\n   * The end time of the restore operation.\n   */\n  endTime?: Date;\n}\n\n/**\n * An interface representing the result of a selective key restore operation.\n */\nexport interface KeyVaultSelectiveKeyRestoreResult {\n  /**\n   * The start time of the selective key restore operation.\n   */\n  startTime?: Date;\n\n  /**\n   * The end time of the selective key restore operation.\n   */\n  endTime?: Date;\n}\n"]}