{"version":3,"file":"models.js","sourceRoot":"","sources":["../../../../src/generated/models/models.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/** Full backup operation */\nexport interface FullBackupOperation {\n  /** Status of the backup operation. */\n  status?: OperationStatus;\n  /** The status details of backup operation. */\n  statusDetails?: string;\n  /** Error encountered, if any, during the full backup operation. */\n  error?: ErrorModel;\n  /** The start time of the backup operation in UTC */\n  startTime?: Date;\n  /** The end time of the backup operation in UTC */\n  endTime?: Date | null;\n  /** Identifier for the full backup operation. */\n  jobId?: string;\n  /** The Azure blob storage container Uri which contains the full backup */\n  folderUri?: string;\n}\n\nexport function fullBackupOperationDeserializer(\n  item: any,\n): FullBackupOperation {\n  return {\n    status: item[\"status\"],\n    statusDetails: item[\"statusDetails\"],\n    error: !item[\"error\"]\n      ? item[\"error\"]\n      : _fullBackupOperationErrorDeserializer(item[\"error\"]),\n    startTime: !item[\"startTime\"]\n      ? item[\"startTime\"]\n      : new Date(item[\"startTime\"] * 1000),\n    endTime: !item[\"endTime\"]\n      ? item[\"endTime\"]\n      : new Date(item[\"endTime\"] * 1000),\n    jobId: item[\"jobId\"],\n    folderUri: item[\"azureStorageBlobContainerUri\"],\n  };\n}\n\n/** The status of a long-running operation. */\nexport enum KnownOperationStatus {\n  /** The operation is in progress. */\n  InProgress = \"InProgress\",\n  /** The operation successfully completed. */\n  Succeeded = \"Succeeded\",\n  /** The operation was canceled. */\n  Canceled = \"Canceled\",\n  /** The operation failed. */\n  Failed = \"Failed\",\n}\n\n/**\n * The status of a long-running operation. \\\n * {@link KnownOperationStatus} can be used interchangeably with OperationStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **InProgress**: The operation is in progress. \\\n * **Succeeded**: The operation successfully completed. \\\n * **Canceled**: The operation was canceled. \\\n * **Failed**: The operation failed.\n */\nexport type OperationStatus = string;\n/** Alias for ErrorModel */\nexport type ErrorModel = {\n  code?: string;\n  message?: string;\n  innerError?: ErrorModel_1;\n} | null;\n\n/** model interface _FullBackupOperationError */\nexport interface _FullBackupOperationError {\n  /** The error code. */\n  readonly code?: string;\n  /** The error message. */\n  readonly message?: string;\n  /** The key vault server error. */\n  readonly innerError?: ErrorModel_1;\n}\n\nexport function _fullBackupOperationErrorDeserializer(\n  item: any,\n): _FullBackupOperationError {\n  return {\n    code: item[\"code\"],\n    message: item[\"message\"],\n    innerError: !item[\"innererror\"]\n      ? item[\"innererror\"]\n      : _fullBackupOperationErrorDeserializer(item[\"innererror\"]),\n  };\n}\n\n/** Alias for ErrorModel */\nexport type ErrorModel_1 = {\n  code?: string;\n  message?: string;\n  innerError?: ErrorModel_1;\n} | null;\n\n/** The key vault error exception. */\nexport interface KeyVaultError {\n  /** The key vault server error. */\n  readonly error?: ErrorModel;\n}\n\nexport function keyVaultErrorDeserializer(item: any): KeyVaultError {\n  return {\n    error: !item[\"error\"]\n      ? item[\"error\"]\n      : _fullBackupOperationErrorDeserializer(item[\"error\"]),\n  };\n}\n\n/** An authentication method and location for the operation. */\nexport interface SASTokenParameter {\n  /** Azure Blob storage container Uri */\n  storageResourceUri: string;\n  /** The SAS token pointing to an Azure Blob storage container */\n  token?: string;\n  /** Indicates which authentication method should be used. If set to true, Managed HSM will use the configured user-assigned managed identity to authenticate with Azure Storage. Otherwise, a SAS token has to be specified. */\n  useManagedIdentity?: boolean;\n}\n\nexport function sASTokenParameterSerializer(item: SASTokenParameter): any {\n  return {\n    storageResourceUri: item[\"storageResourceUri\"],\n    token: item[\"token\"],\n    useManagedIdentity: item[\"useManagedIdentity\"],\n  };\n}\n\n/** The authentication method and location for the backup operation. */\nexport interface PreBackupOperationParameters {\n  /** Azure Blob storage container Uri */\n  storageResourceUri?: string;\n  /** The SAS token pointing to an Azure Blob storage container */\n  token?: string;\n  /** Indicates which authentication method should be used. If set to true, Managed HSM will use the configured user-assigned managed identity to authenticate with Azure Storage. Otherwise, a SAS token has to be specified. */\n  useManagedIdentity?: boolean;\n}\n\nexport function preBackupOperationParametersSerializer(\n  item: PreBackupOperationParameters,\n): any {\n  return {\n    storageResourceUri: item[\"storageResourceUri\"],\n    token: item[\"token\"],\n    useManagedIdentity: item[\"useManagedIdentity\"],\n  };\n}\n\n/** Restore operation */\nexport interface RestoreOperation {\n  /** Status of the restore operation. */\n  status?: OperationStatus;\n  /** The status details of restore operation. */\n  statusDetails?: string;\n  /** Error encountered, if any, during the restore operation. */\n  error?: ErrorModel;\n  /** Identifier for the restore operation. */\n  jobId?: string;\n  /** The start time of the restore operation */\n  startTime?: Date;\n  /** The end time of the restore operation */\n  endTime?: Date | null;\n}\n\nexport function restoreOperationDeserializer(item: any): RestoreOperation {\n  return {\n    status: item[\"status\"],\n    statusDetails: item[\"statusDetails\"],\n    error: !item[\"error\"]\n      ? item[\"error\"]\n      : _fullBackupOperationErrorDeserializer(item[\"error\"]),\n    jobId: item[\"jobId\"],\n    startTime: !item[\"startTime\"]\n      ? item[\"startTime\"]\n      : new Date(item[\"startTime\"] * 1000),\n    endTime: !item[\"endTime\"]\n      ? item[\"endTime\"]\n      : new Date(item[\"endTime\"] * 1000),\n  };\n}\n\n/** The authentication method and location for the restore operation. */\nexport interface PreRestoreOperationParameters {\n  /** A user-provided SAS token to an Azure blob storage container. */\n  sasTokenParameters?: SASTokenParameter;\n  /** The Folder name of the blob where the previous successful full backup was stored */\n  folderToRestore?: string;\n}\n\nexport function preRestoreOperationParametersSerializer(\n  item: PreRestoreOperationParameters,\n): any {\n  return {\n    sasTokenParameters: !item[\"sasTokenParameters\"]\n      ? item[\"sasTokenParameters\"]\n      : sASTokenParameterSerializer(item[\"sasTokenParameters\"]),\n    folderToRestore: item[\"folderToRestore\"],\n  };\n}\n\n/** The authentication method and location for the restore operation. */\nexport interface RestoreOperationParameters {\n  /** A user-provided SAS token to an Azure blob storage container. */\n  sasTokenParameters: SASTokenParameter;\n  /** The Folder name of the blob where the previous successful full backup was stored */\n  folderToRestore: string;\n}\n\nexport function restoreOperationParametersSerializer(\n  item: RestoreOperationParameters,\n): any {\n  return {\n    sasTokenParameters: sASTokenParameterSerializer(item[\"sasTokenParameters\"]),\n    folderToRestore: item[\"folderToRestore\"],\n  };\n}\n\n/** Selective Key Restore operation */\nexport interface SelectiveKeyRestoreOperation {\n  /** Status of the restore operation. */\n  status?: OperationStatus;\n  /** The status details of restore operation. */\n  statusDetails?: string;\n  /** Error encountered, if any, during the selective key restore operation. */\n  error?: ErrorModel;\n  /** Identifier for the selective key restore operation. */\n  jobId?: string;\n  /** The start time of the restore operation */\n  startTime?: Date;\n  /** The end time of the restore operation */\n  endTime?: Date | null;\n}\n\nexport function selectiveKeyRestoreOperationDeserializer(\n  item: any,\n): SelectiveKeyRestoreOperation {\n  return {\n    status: item[\"status\"],\n    statusDetails: item[\"statusDetails\"],\n    error: !item[\"error\"]\n      ? item[\"error\"]\n      : _fullBackupOperationErrorDeserializer(item[\"error\"]),\n    jobId: item[\"jobId\"],\n    startTime: !item[\"startTime\"]\n      ? item[\"startTime\"]\n      : new Date(item[\"startTime\"] * 1000),\n    endTime: !item[\"endTime\"]\n      ? item[\"endTime\"]\n      : new Date(item[\"endTime\"] * 1000),\n  };\n}\n\n/** The authentication method and location for the selective key restore operation. */\nexport interface SelectiveKeyRestoreOperationParameters {\n  /** A user-provided SAS token to an Azure blob storage container. */\n  sasTokenParameters: SASTokenParameter;\n  /** The Folder name of the blob where the previous successful full backup was stored */\n  folder: string;\n}\n\nexport function selectiveKeyRestoreOperationParametersSerializer(\n  item: SelectiveKeyRestoreOperationParameters,\n): any {\n  return {\n    sasTokenParameters: sASTokenParameterSerializer(item[\"sasTokenParameters\"]),\n    folder: item[\"folder\"],\n  };\n}\n\n/** The update settings request object. */\nexport interface UpdateSettingRequest {\n  /** The value of the pool setting. */\n  value: string;\n}\n\nexport function updateSettingRequestSerializer(\n  item: UpdateSettingRequest,\n): any {\n  return { value: item[\"value\"] };\n}\n\n/** A Key Vault account setting. */\nexport interface Setting {\n  /** The account setting to be updated */\n  name: string;\n  /** The value of the pool setting. */\n  value: string;\n  /** The type specifier of the value. */\n  type?: SettingTypeEnum;\n}\n\nexport function settingDeserializer(item: any): Setting {\n  return {\n    name: item[\"name\"],\n    value: item[\"value\"],\n    type: item[\"type\"],\n  };\n}\n\n/** The type specifier of the value. */\nexport enum KnownSettingTypeEnum {\n  /** A boolean setting value. */\n  boolean = \"boolean\",\n}\n\n/**\n * The type specifier of the value. \\\n * {@link KnownSettingTypeEnum} can be used interchangeably with SettingTypeEnum,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **boolean**: A boolean setting value.\n */\nexport type SettingTypeEnum = string;\n\n/** The settings list result. */\nexport interface SettingsListResult {\n  /** A response message containing a list of account settings with their associated value. */\n  readonly settings?: Setting[];\n}\n\nexport function settingsListResultDeserializer(item: any): SettingsListResult {\n  return {\n    settings: !item[\"settings\"]\n      ? item[\"settings\"]\n      : settingArrayDeserializer(item[\"settings\"]),\n  };\n}\n\nexport function settingArrayDeserializer(result: Array<Setting>): any[] {\n  return result.map((item) => {\n    return settingDeserializer(item);\n  });\n}\n\n/** Role Assignments */\nexport interface RoleAssignment {\n  /** The role assignment ID. */\n  readonly id?: string;\n  /** The role assignment name. */\n  readonly name?: string;\n  /** The role assignment type. */\n  readonly type?: string;\n  /** Role assignment properties. */\n  properties?: RoleAssignmentPropertiesWithScope;\n}\n\nexport function roleAssignmentDeserializer(item: any): RoleAssignment {\n  return {\n    id: item[\"id\"],\n    name: item[\"name\"],\n    type: item[\"type\"],\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : roleAssignmentPropertiesWithScopeDeserializer(item[\"properties\"]),\n  };\n}\n\n/** Role assignment properties with scope. */\nexport interface RoleAssignmentPropertiesWithScope {\n  /** The role scope. */\n  scope?: RoleScope;\n  /** The role definition ID. */\n  roleDefinitionId?: string;\n  /** The principal ID. */\n  principalId?: string;\n}\n\nexport function roleAssignmentPropertiesWithScopeDeserializer(\n  item: any,\n): RoleAssignmentPropertiesWithScope {\n  return {\n    scope: item[\"scope\"],\n    roleDefinitionId: item[\"roleDefinitionId\"],\n    principalId: item[\"principalId\"],\n  };\n}\n\n/** The role scope. */\nexport enum KnownRoleScope {\n  /** Global scope */\n  Global = \"/\",\n  /** Keys scope */\n  Keys = \"/keys\",\n}\n\n/**\n * The role scope. \\\n * {@link KnownRoleScope} can be used interchangeably with RoleScope,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **\\/**: Global scope \\\n * **\\/keys**: Keys scope\n */\nexport type RoleScope = string;\n\n/** Role assignment create parameters. */\nexport interface RoleAssignmentCreateParameters {\n  /** Role assignment properties. */\n  properties: RoleAssignmentProperties;\n}\n\nexport function roleAssignmentCreateParametersSerializer(\n  item: RoleAssignmentCreateParameters,\n): any {\n  return { properties: roleAssignmentPropertiesSerializer(item[\"properties\"]) };\n}\n\n/** Role assignment properties. */\nexport interface RoleAssignmentProperties {\n  /** The role definition ID used in the role assignment. */\n  roleDefinitionId: string;\n  /** The principal ID assigned to the role. This maps to the ID inside the Active Directory. It can point to a user, service principal, or security group. */\n  principalId: string;\n}\n\nexport function roleAssignmentPropertiesSerializer(\n  item: RoleAssignmentProperties,\n): any {\n  return {\n    roleDefinitionId: item[\"roleDefinitionId\"],\n    principalId: item[\"principalId\"],\n  };\n}\n\n/** Role assignment list operation result. */\nexport interface _RoleAssignmentListResult {\n  /** Role assignment list. */\n  value?: RoleAssignment[];\n  /** The URL to use for getting the next set of results. */\n  nextLink?: string;\n}\n\nexport function _roleAssignmentListResultDeserializer(\n  item: any,\n): _RoleAssignmentListResult {\n  return {\n    value: !item[\"value\"]\n      ? item[\"value\"]\n      : roleAssignmentArrayDeserializer(item[\"value\"]),\n    nextLink: item[\"nextLink\"],\n  };\n}\n\nexport function roleAssignmentArrayDeserializer(\n  result: Array<RoleAssignment>,\n): any[] {\n  return result.map((item) => {\n    return roleAssignmentDeserializer(item);\n  });\n}\n\n/** Role definition. */\nexport interface RoleDefinition {\n  /** The role definition ID. */\n  readonly id?: string;\n  /** The role definition name. */\n  readonly name?: string;\n  /** The role definition type. */\n  readonly type?: RoleDefinitionType;\n  /** Role definition properties. */\n  properties?: RoleDefinitionProperties;\n}\n\nexport function roleDefinitionDeserializer(item: any): RoleDefinition {\n  return {\n    id: item[\"id\"],\n    name: item[\"name\"],\n    type: item[\"type\"],\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : roleDefinitionPropertiesDeserializer(item[\"properties\"]),\n  };\n}\n\n/** The role definition type. */\nexport enum KnownRoleDefinitionType {\n  /** Microsoft-defined role definitions. */\n  \"Microsoft.Authorization/roleDefinitions\" = \"Microsoft.Authorization/roleDefinitions\",\n}\n\n/**\n * The role definition type. \\\n * {@link KnownRoleDefinitionType} can be used interchangeably with RoleDefinitionType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Microsoft.Authorization\\/roleDefinitions**: Microsoft-defined role definitions.\n */\nexport type RoleDefinitionType = string;\n\n/** Role definition properties. */\nexport interface RoleDefinitionProperties {\n  /** The role name. */\n  roleName?: string;\n  /** The role definition description. */\n  description?: string;\n  /** The role type. */\n  roleType?: RoleType;\n  /** Role definition permissions. */\n  permissions?: Permission[];\n  /** Role definition assignable scopes. */\n  assignableScopes?: RoleScope[];\n}\n\nexport function roleDefinitionPropertiesSerializer(\n  item: RoleDefinitionProperties,\n): any {\n  return {\n    roleName: item[\"roleName\"],\n    description: item[\"description\"],\n    type: item[\"roleType\"],\n    permissions: !item[\"permissions\"]\n      ? item[\"permissions\"]\n      : permissionArraySerializer(item[\"permissions\"]),\n    assignableScopes: !item[\"assignableScopes\"]\n      ? item[\"assignableScopes\"]\n      : item[\"assignableScopes\"].map((p: any) => {\n          return p;\n        }),\n  };\n}\n\nexport function roleDefinitionPropertiesDeserializer(\n  item: any,\n): RoleDefinitionProperties {\n  return {\n    roleName: item[\"roleName\"],\n    description: item[\"description\"],\n    roleType: item[\"type\"],\n    permissions: !item[\"permissions\"]\n      ? item[\"permissions\"]\n      : permissionArrayDeserializer(item[\"permissions\"]),\n    assignableScopes: !item[\"assignableScopes\"]\n      ? item[\"assignableScopes\"]\n      : item[\"assignableScopes\"].map((p: any) => {\n          return p;\n        }),\n  };\n}\n\n/** The role type. */\nexport enum KnownRoleType {\n  /** Built in role. */\n  BuiltInRole = \"AKVBuiltInRole\",\n  /** Custom role. */\n  CustomRole = \"CustomRole\",\n}\n\n/**\n * The role type. \\\n * {@link KnownRoleType} can be used interchangeably with RoleType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AKVBuiltInRole**: Built in role. \\\n * **CustomRole**: Custom role.\n */\nexport type RoleType = string;\n\nexport function permissionArraySerializer(result: Array<Permission>): any[] {\n  return result.map((item) => {\n    return permissionSerializer(item);\n  });\n}\n\nexport function permissionArrayDeserializer(result: Array<Permission>): any[] {\n  return result.map((item) => {\n    return permissionDeserializer(item);\n  });\n}\n\n/** Role definition permissions. */\nexport interface Permission {\n  /** Action permissions that are granted. */\n  actions?: string[];\n  /** Action permissions that are excluded but not denied. They may be granted by other role definitions assigned to a principal. */\n  notActions?: string[];\n  /** Data action permissions that are granted. */\n  dataActions?: DataAction[];\n  /** Data action permissions that are excluded but not denied. They may be granted by other role definitions assigned to a principal. */\n  notDataActions?: DataAction[];\n}\n\nexport function permissionSerializer(item: Permission): any {\n  return {\n    actions: !item[\"actions\"]\n      ? item[\"actions\"]\n      : item[\"actions\"].map((p: any) => {\n          return p;\n        }),\n    notActions: !item[\"notActions\"]\n      ? item[\"notActions\"]\n      : item[\"notActions\"].map((p: any) => {\n          return p;\n        }),\n    dataActions: !item[\"dataActions\"]\n      ? item[\"dataActions\"]\n      : item[\"dataActions\"].map((p: any) => {\n          return p;\n        }),\n    notDataActions: !item[\"notDataActions\"]\n      ? item[\"notDataActions\"]\n      : item[\"notDataActions\"].map((p: any) => {\n          return p;\n        }),\n  };\n}\n\nexport function permissionDeserializer(item: any): Permission {\n  return {\n    actions: !item[\"actions\"]\n      ? item[\"actions\"]\n      : item[\"actions\"].map((p: any) => {\n          return p;\n        }),\n    notActions: !item[\"notActions\"]\n      ? item[\"notActions\"]\n      : item[\"notActions\"].map((p: any) => {\n          return p;\n        }),\n    dataActions: !item[\"dataActions\"]\n      ? item[\"dataActions\"]\n      : item[\"dataActions\"].map((p: any) => {\n          return p;\n        }),\n    notDataActions: !item[\"notDataActions\"]\n      ? item[\"notDataActions\"]\n      : item[\"notDataActions\"].map((p: any) => {\n          return p;\n        }),\n  };\n}\n\n/** Supported permissions for data actions. */\nexport enum KnownDataAction {\n  /** Read HSM key metadata. */\n  ReadHsmKey = \"Microsoft.KeyVault/managedHsm/keys/read/action\",\n  /** Update an HSM key. */\n  WriteHsmKey = \"Microsoft.KeyVault/managedHsm/keys/write/action\",\n  /** Read deleted HSM key. */\n  ReadDeletedHsmKey = \"Microsoft.KeyVault/managedHsm/keys/deletedKeys/read/action\",\n  /** Recover deleted HSM key. */\n  RecoverDeletedHsmKey = \"Microsoft.KeyVault/managedHsm/keys/deletedKeys/recover/action\",\n  /** Backup HSM keys. */\n  BackupHsmKeys = \"Microsoft.KeyVault/managedHsm/keys/backup/action\",\n  /** Restore HSM keys. */\n  RestoreHsmKeys = \"Microsoft.KeyVault/managedHsm/keys/restore/action\",\n  /** Delete role assignment. */\n  DeleteRoleAssignment = \"Microsoft.KeyVault/managedHsm/roleAssignments/delete/action\",\n  /** Get role assignment. */\n  GetRoleAssignment = \"Microsoft.KeyVault/managedHsm/roleAssignments/read/action\",\n  /** Create or update role assignment. */\n  WriteRoleAssignment = \"Microsoft.KeyVault/managedHsm/roleAssignments/write/action\",\n  /** Get role definition. */\n  ReadRoleDefinition = \"Microsoft.KeyVault/managedHsm/roleDefinitions/read/action\",\n  /** Create or update role definition. */\n  WriteRoleDefinition = \"Microsoft.KeyVault/managedHsm/roleDefinitions/write/action\",\n  /** Delete role definition. */\n  DeleteRoleDefinition = \"Microsoft.KeyVault/managedHsm/roleDefinitions/delete/action\",\n  /** Encrypt using an HSM key. */\n  EncryptHsmKey = \"Microsoft.KeyVault/managedHsm/keys/encrypt/action\",\n  /** Decrypt using an HSM key. */\n  DecryptHsmKey = \"Microsoft.KeyVault/managedHsm/keys/decrypt/action\",\n  /** Wrap using an HSM key. */\n  WrapHsmKey = \"Microsoft.KeyVault/managedHsm/keys/wrap/action\",\n  /** Unwrap using an HSM key. */\n  UnwrapHsmKey = \"Microsoft.KeyVault/managedHsm/keys/unwrap/action\",\n  /** Sign using an HSM key. */\n  SignHsmKey = \"Microsoft.KeyVault/managedHsm/keys/sign/action\",\n  /** Verify using an HSM key. */\n  VerifyHsmKey = \"Microsoft.KeyVault/managedHsm/keys/verify/action\",\n  /** Create an HSM key. */\n  CreateHsmKey = \"Microsoft.KeyVault/managedHsm/keys/create\",\n  /** Delete an HSM key. */\n  DeleteHsmKey = \"Microsoft.KeyVault/managedHsm/keys/delete\",\n  /** Export an HSM key. */\n  ExportHsmKey = \"Microsoft.KeyVault/managedHsm/keys/export/action\",\n  /** Release an HSM key using Secure Key Release. */\n  ReleaseKey = \"Microsoft.KeyVault/managedHsm/keys/release/action\",\n  /** Import an HSM key. */\n  ImportHsmKey = \"Microsoft.KeyVault/managedHsm/keys/import/action\",\n  /** Purge a deleted HSM key. */\n  PurgeDeletedHsmKey = \"Microsoft.KeyVault/managedHsm/keys/deletedKeys/delete\",\n  /** Download an HSM security domain. */\n  DownloadHsmSecurityDomain = \"Microsoft.KeyVault/managedHsm/securitydomain/download/action\",\n  /** Check status of HSM security domain download. */\n  DownloadHsmSecurityDomainStatus = \"Microsoft.KeyVault/managedHsm/securitydomain/download/read\",\n  /** Upload an HSM security domain. */\n  UploadHsmSecurityDomain = \"Microsoft.KeyVault/managedHsm/securitydomain/upload/action\",\n  /** Check the status of the HSM security domain exchange file. */\n  ReadHsmSecurityDomainStatus = \"Microsoft.KeyVault/managedHsm/securitydomain/upload/read\",\n  /** Download an HSM security domain transfer key. */\n  ReadHsmSecurityDomainTransferKey = \"Microsoft.KeyVault/managedHsm/securitydomain/transferkey/read\",\n  /** Start an HSM backup. */\n  StartHsmBackup = \"Microsoft.KeyVault/managedHsm/backup/start/action\",\n  /** Start an HSM restore. */\n  StartHsmRestore = \"Microsoft.KeyVault/managedHsm/restore/start/action\",\n  /** Read an HSM backup status. */\n  ReadHsmBackupStatus = \"Microsoft.KeyVault/managedHsm/backup/status/action\",\n  /** Read an HSM restore status. */\n  ReadHsmRestoreStatus = \"Microsoft.KeyVault/managedHsm/restore/status/action\",\n  /** Generate random numbers. */\n  RandomNumbersGenerate = \"Microsoft.KeyVault/managedHsm/rng/action\",\n}\n\n/**\n * Supported permissions for data actions. \\\n * {@link KnownDataAction} can be used interchangeably with DataAction,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Microsoft.KeyVault\\/managedHsm\\/keys\\/read\\/action**: Read HSM key metadata. \\\n * **Microsoft.KeyVault\\/managedHsm\\/keys\\/write\\/action**: Update an HSM key. \\\n * **Microsoft.KeyVault\\/managedHsm\\/keys\\/deletedKeys\\/read\\/action**: Read deleted HSM key. \\\n * **Microsoft.KeyVault\\/managedHsm\\/keys\\/deletedKeys\\/recover\\/action**: Recover deleted HSM key. \\\n * **Microsoft.KeyVault\\/managedHsm\\/keys\\/backup\\/action**: Backup HSM keys. \\\n * **Microsoft.KeyVault\\/managedHsm\\/keys\\/restore\\/action**: Restore HSM keys. \\\n * **Microsoft.KeyVault\\/managedHsm\\/roleAssignments\\/delete\\/action**: Delete role assignment. \\\n * **Microsoft.KeyVault\\/managedHsm\\/roleAssignments\\/read\\/action**: Get role assignment. \\\n * **Microsoft.KeyVault\\/managedHsm\\/roleAssignments\\/write\\/action**: Create or update role assignment. \\\n * **Microsoft.KeyVault\\/managedHsm\\/roleDefinitions\\/read\\/action**: Get role definition. \\\n * **Microsoft.KeyVault\\/managedHsm\\/roleDefinitions\\/write\\/action**: Create or update role definition. \\\n * **Microsoft.KeyVault\\/managedHsm\\/roleDefinitions\\/delete\\/action**: Delete role definition. \\\n * **Microsoft.KeyVault\\/managedHsm\\/keys\\/encrypt\\/action**: Encrypt using an HSM key. \\\n * **Microsoft.KeyVault\\/managedHsm\\/keys\\/decrypt\\/action**: Decrypt using an HSM key. \\\n * **Microsoft.KeyVault\\/managedHsm\\/keys\\/wrap\\/action**: Wrap using an HSM key. \\\n * **Microsoft.KeyVault\\/managedHsm\\/keys\\/unwrap\\/action**: Unwrap using an HSM key. \\\n * **Microsoft.KeyVault\\/managedHsm\\/keys\\/sign\\/action**: Sign using an HSM key. \\\n * **Microsoft.KeyVault\\/managedHsm\\/keys\\/verify\\/action**: Verify using an HSM key. \\\n * **Microsoft.KeyVault\\/managedHsm\\/keys\\/create**: Create an HSM key. \\\n * **Microsoft.KeyVault\\/managedHsm\\/keys\\/delete**: Delete an HSM key. \\\n * **Microsoft.KeyVault\\/managedHsm\\/keys\\/export\\/action**: Export an HSM key. \\\n * **Microsoft.KeyVault\\/managedHsm\\/keys\\/release\\/action**: Release an HSM key using Secure Key Release. \\\n * **Microsoft.KeyVault\\/managedHsm\\/keys\\/import\\/action**: Import an HSM key. \\\n * **Microsoft.KeyVault\\/managedHsm\\/keys\\/deletedKeys\\/delete**: Purge a deleted HSM key. \\\n * **Microsoft.KeyVault\\/managedHsm\\/securitydomain\\/download\\/action**: Download an HSM security domain. \\\n * **Microsoft.KeyVault\\/managedHsm\\/securitydomain\\/download\\/read**: Check status of HSM security domain download. \\\n * **Microsoft.KeyVault\\/managedHsm\\/securitydomain\\/upload\\/action**: Upload an HSM security domain. \\\n * **Microsoft.KeyVault\\/managedHsm\\/securitydomain\\/upload\\/read**: Check the status of the HSM security domain exchange file. \\\n * **Microsoft.KeyVault\\/managedHsm\\/securitydomain\\/transferkey\\/read**: Download an HSM security domain transfer key. \\\n * **Microsoft.KeyVault\\/managedHsm\\/backup\\/start\\/action**: Start an HSM backup. \\\n * **Microsoft.KeyVault\\/managedHsm\\/restore\\/start\\/action**: Start an HSM restore. \\\n * **Microsoft.KeyVault\\/managedHsm\\/backup\\/status\\/action**: Read an HSM backup status. \\\n * **Microsoft.KeyVault\\/managedHsm\\/restore\\/status\\/action**: Read an HSM restore status. \\\n * **Microsoft.KeyVault\\/managedHsm\\/rng\\/action**: Generate random numbers.\n */\nexport type DataAction = string;\n\n/** Role definition create parameters. */\nexport interface RoleDefinitionCreateParameters {\n  /** Role definition properties. */\n  properties: RoleDefinitionProperties;\n}\n\nexport function roleDefinitionCreateParametersSerializer(\n  item: RoleDefinitionCreateParameters,\n): any {\n  return { properties: roleDefinitionPropertiesSerializer(item[\"properties\"]) };\n}\n\n/** Role definition list operation result. */\nexport interface _RoleDefinitionListResult {\n  /** Role definition list. */\n  value?: RoleDefinition[];\n  /** The URL to use for getting the next set of results. */\n  nextLink?: string;\n}\n\nexport function _roleDefinitionListResultDeserializer(\n  item: any,\n): _RoleDefinitionListResult {\n  return {\n    value: !item[\"value\"]\n      ? item[\"value\"]\n      : roleDefinitionArrayDeserializer(item[\"value\"]),\n    nextLink: item[\"nextLink\"],\n  };\n}\n\nexport function roleDefinitionArrayDeserializer(\n  result: Array<RoleDefinition>,\n): any[] {\n  return result.map((item) => {\n    return roleDefinitionDeserializer(item);\n  });\n}\n\n/** The available API versions. */\nexport enum KnownVersions {\n  /** The 7.5 API version. */\n  \"v7.5\" = \"7.5\",\n  /** The 7.6-preview.2 API version. */\n  \"v7.6_preview.2\" = \"7.6-preview.2\",\n}\n"]}