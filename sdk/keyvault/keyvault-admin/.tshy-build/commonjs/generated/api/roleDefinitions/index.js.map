{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/generated/api/roleDefinitions/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport {\n  KeyVaultContext as Client,\n  RoleDefinitionsCreateOrUpdateOptionalParams,\n  RoleDefinitionsDeleteOptionalParams,\n  RoleDefinitionsGetOptionalParams,\n  RoleDefinitionsListOptionalParams,\n} from \"../index.js\";\nimport {\n  keyVaultErrorDeserializer,\n  RoleDefinition,\n  roleDefinitionDeserializer,\n  RoleDefinitionCreateParameters,\n  roleDefinitionCreateParametersSerializer,\n  _RoleDefinitionListResult,\n  _roleDefinitionListResultDeserializer,\n} from \"../../models/models.js\";\nimport {\n  PagedAsyncIterableIterator,\n  buildPagedAsyncIterator,\n} from \"../../static-helpers/pagingHelpers.js\";\nimport {\n  StreamableMethod,\n  PathUncheckedResponse,\n  createRestError,\n  operationOptionsToRequestParameters,\n} from \"@azure-rest/core-client\";\n\nexport function _listSend(\n  context: Client,\n  scope: string,\n  options: RoleDefinitionsListOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  return context\n    .path(\"/{scope}/providers/Microsoft.Authorization/roleDefinitions\", {\n      value: scope,\n      allowReserved: true,\n    })\n    .get({\n      ...operationOptionsToRequestParameters(options),\n      headers: {\n        accept: \"application/json\",\n        ...options.requestOptions?.headers,\n      },\n      queryParameters: {\n        \"api-version\": context.apiVersion,\n        $filter: options?.$filter,\n      },\n    });\n}\n\nexport async function _listDeserialize(\n  result: PathUncheckedResponse,\n): Promise<_RoleDefinitionListResult> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = keyVaultErrorDeserializer(result.body);\n    throw error;\n  }\n\n  return _roleDefinitionListResultDeserializer(result.body);\n}\n\n/** Get all role definitions that are applicable at scope and above. */\nexport function list(\n  context: Client,\n  scope: string,\n  options: RoleDefinitionsListOptionalParams = { requestOptions: {} },\n): PagedAsyncIterableIterator<RoleDefinition> {\n  return buildPagedAsyncIterator(\n    context,\n    () => _listSend(context, scope, options),\n    _listDeserialize,\n    [\"200\"],\n    { itemName: \"value\", nextLinkName: \"nextLink\" },\n  );\n}\n\nexport function _getSend(\n  context: Client,\n  scope: string,\n  roleDefinitionName: string,\n  options: RoleDefinitionsGetOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  return context\n    .path(\n      \"/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionName}\",\n      { value: scope, allowReserved: true },\n      roleDefinitionName,\n    )\n    .get({\n      ...operationOptionsToRequestParameters(options),\n      headers: {\n        accept: \"application/json\",\n        ...options.requestOptions?.headers,\n      },\n      queryParameters: { \"api-version\": context.apiVersion },\n    });\n}\n\nexport async function _getDeserialize(\n  result: PathUncheckedResponse,\n): Promise<RoleDefinition> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = keyVaultErrorDeserializer(result.body);\n    throw error;\n  }\n\n  return roleDefinitionDeserializer(result.body);\n}\n\n/** Get the specified role definition. */\nexport async function get(\n  context: Client,\n  scope: string,\n  roleDefinitionName: string,\n  options: RoleDefinitionsGetOptionalParams = { requestOptions: {} },\n): Promise<RoleDefinition> {\n  const result = await _getSend(context, scope, roleDefinitionName, options);\n  return _getDeserialize(result);\n}\n\nexport function _createOrUpdateSend(\n  context: Client,\n  scope: string,\n  roleDefinitionName: string,\n  parameters: RoleDefinitionCreateParameters,\n  options: RoleDefinitionsCreateOrUpdateOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  return context\n    .path(\n      \"/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionName}\",\n      { value: scope, allowReserved: true },\n      roleDefinitionName,\n    )\n    .put({\n      ...operationOptionsToRequestParameters(options),\n      contentType: \"application/json\",\n      headers: {\n        accept: \"application/json\",\n        ...options.requestOptions?.headers,\n      },\n      queryParameters: { \"api-version\": context.apiVersion },\n      body: roleDefinitionCreateParametersSerializer(parameters),\n    });\n}\n\nexport async function _createOrUpdateDeserialize(\n  result: PathUncheckedResponse,\n): Promise<RoleDefinition> {\n  const expectedStatuses = [\"201\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = keyVaultErrorDeserializer(result.body);\n    throw error;\n  }\n\n  return roleDefinitionDeserializer(result.body);\n}\n\n/** Creates or updates a custom role definition. */\nexport async function createOrUpdate(\n  context: Client,\n  scope: string,\n  roleDefinitionName: string,\n  parameters: RoleDefinitionCreateParameters,\n  options: RoleDefinitionsCreateOrUpdateOptionalParams = { requestOptions: {} },\n): Promise<RoleDefinition> {\n  const result = await _createOrUpdateSend(\n    context,\n    scope,\n    roleDefinitionName,\n    parameters,\n    options,\n  );\n  return _createOrUpdateDeserialize(result);\n}\n\nexport function _$deleteSend(\n  context: Client,\n  scope: string,\n  roleDefinitionName: string,\n  options: RoleDefinitionsDeleteOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  return context\n    .path(\n      \"/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionName}\",\n      { value: scope, allowReserved: true },\n      roleDefinitionName,\n    )\n    .delete({\n      ...operationOptionsToRequestParameters(options),\n      headers: {\n        accept: \"application/json\",\n        ...options.requestOptions?.headers,\n      },\n      queryParameters: { \"api-version\": context.apiVersion },\n    });\n}\n\nexport async function _$deleteDeserialize(\n  result: PathUncheckedResponse,\n): Promise<RoleDefinition> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = keyVaultErrorDeserializer(result.body);\n    throw error;\n  }\n\n  return roleDefinitionDeserializer(result.body);\n}\n\n/** Deletes a custom role definition. */\n/**\n *  @fixme delete is a reserved word that cannot be used as an operation name.\n *         Please add @clientName(\"clientName\") or @clientName(\"<JS-Specific-Name>\", \"javascript\")\n *         to the operation to override the generated name.\n */\nexport async function $delete(\n  context: Client,\n  scope: string,\n  roleDefinitionName: string,\n  options: RoleDefinitionsDeleteOptionalParams = { requestOptions: {} },\n): Promise<RoleDefinition> {\n  const result = await _$deleteSend(\n    context,\n    scope,\n    roleDefinitionName,\n    options,\n  );\n  return _$deleteDeserialize(result);\n}\n"]}