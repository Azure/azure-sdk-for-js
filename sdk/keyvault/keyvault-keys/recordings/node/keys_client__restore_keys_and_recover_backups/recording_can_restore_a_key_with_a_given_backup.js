let nock = require('nock');

module.exports.testInfo = {"uniqueName":{},"newDate":{}}

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .post('/keys/recoverKeyName-canrestoreakeywithagivenbackup-/create')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '1e27428f-2bf5-4ee9-b606-4e3cd7614d8b',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:10 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '7ead172d-dced-4060-abca-56aafb3a5200',
  'x-ms-ests-server',
  '2.1.9987.9 - WUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHAQAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:34:10 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:34:10 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .post('/keys/recoverKeyName-canrestoreakeywithagivenbackup-/create', {"kty":"RSA"})
  .query(true)
  .reply(200, {"key":{"kid":"https://keyvault_name.vault.azure.net/keys/recoverKeyName-canrestoreakeywithagivenbackup-/2ab416ead51543578d175da0e549b96b","kty":"RSA","key_ops":["encrypt","decrypt","sign","verify","wrapKey","unwrapKey"],"n":"1p3TTTTuumw5VM2jcfAFIPL1kEpBRPgUkVBAfPZtINRiCIF3ynkUdU2giFrc8I7pplnYBr3Odl6TZTfFo2JIe7lebSwKmaCEVUtRIaOlTly8eUCBNXsVcoqeCG493Z5XngMz-E5yTUQAVTXfPlixg3C7PJae-bU0vGCPKaGvwAl4IsMYjPVQaw6-G3gj28bNyi_BkaaR7T4SLq9OnpFnn6UQBQLmMbW3xgomHzb2Ho_y1AsBtW0Cqwh2Ri7DTTgfaTYa86Roig8ZVges0G21sVU2TCEPA6zy3LF2lhvH1fij3TuYXo474YiW27XScZr8iNr7YtVIjT2GcGfHSgG2fQ","e":"AQAB"},"attributes":{"enabled":true,"created":1580502851,"updated":1580502851,"recoveryLevel":"Recoverable+Purgeable"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '449330f5-faa8-4c4d-af88-2c7f6bfe1c3c',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:10 GMT',
  'Content-Length',
  '715'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .post('/keys/recoverKeyName-canrestoreakeywithagivenbackup-/backup')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '7e4ded01-86d0-4f84-ba07-d8e389aeda18',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:10 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '72784599-dddc-4ced-934f-334dc8555300',
  'x-ms-ests-server',
  '2.1.9987.9 - WUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHAgAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:34:11 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:34:11 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .post('/keys/recoverKeyName-canrestoreakeywithagivenbackup-/backup')
  .query(true)
  .reply(200, {"value":"JkF6dXJlS2V5VmF1bHRLZXlCYWNrdXBWMS5taWNyb3NvZnQuY29tZXlKcmFXUWlPaUkwTXpnMVlqQTNZaTFrTlRRM0xUUXlaVFV0WVdVNVpTMDJNVEJrWXpNNVpHWmhaamdpTENKaGJHY2lPaUpTVTBFdFQwRkZVQ0lzSW1WdVl5STZJa0V4TWpoRFFrTXRTRk15TlRZaWZRLlBtTGtHQXdEZkxzUW5BWmx1YWZvSFNSUWVWcXlkbmVKb0dUdlpwYjRmY3JsdEhjcjQxR19zWnl1MFQ2NDgxYW9QRjRJVHFWTjZDbW1QaDNJYUdqWGhxSmhIeDVOV2FZOVh6aG5JMzFDdDh1by0taklISzlWMjIxZHI5VlNjUjE1OVRySW50aE9VR1FDMVlEcTNRT21nX3VpX3NVOFczcmFTQUJQVFlWa0YxVERENmppa2RJbHZzRHJscGRpR2daMVNvLVBOMF9fRUZSMnNpb3NqS254SGllQnJ4M1RpdkxaUDhReVkzejZLZmVoaG51dWk3VGRJdlNwdzRfT2lXWEFsV19qbXdtOV9PR3JUdWxfNGlCVlJwTW9oNTN1eFVJUDM5UDZ4SDZyb3JuZ1FaSWFYZ2NaRHM4QUJWUHNjQkJTWFNSbXhXU1hQSXZYby14ZmRsdlFyZy5ZY3NzekZhQ0tCZVE4eGF4WERxU1RBLlZzcFdfNVlncWEyc3NUakpKTzl0TlZIc2VuOHlEdGhQU0tUNDd5Y2J5Z3R6MlAzQ3pVZlkzRTlyeVNISEVxNmk5RzQtNDR0WFdxVktOaFBtWkxWdWs5WXBweDlmNGh3NXhhR2NtMUZFdW5GdkxEdER1VHI3M19nUkJkb0lZVUxESldFM1FjMmpUNDRrd1E3eEFzVGJmNmhhVXRVRVB0OGhncDJlNERHM2Z1Yjk3b3lvVEVMZTZUSUgzT2Qwa280NlVaSTdOdXZlWTlIQXBlbnB1S1lYOUNDSFNBemJObU1BZU04UjhzNHoxak9PZURmRnVZMkN5RnBYN2R3TzlOUVUtN0duNkJ6YzRRWExIODJOVy12RmExUzlrT0YxLU1aa1lpMVFJd2xLbkY1OVJVWkZuNXVFdUlUS1J0dmF6X1lPUTltZmRmNm9TLTBGR3VBaVpNUnFWV1BiQjdSSEFOUzFOQk81bmZ5UUNIZWl0MzZtTnZFakpYQmVnaW9HTVlyNHpsRllYX1prelF2TXRITkJQUWQzSlE5M0pPWE1zaXd2WHQxMVIzZV9aT1NFbE5BbWEyYS1YOGJXZ0dsbDhZV004VDFpS2ZOTDBlYXZUbHNQWTQ1X3RzUHlOaFdIYlFjT1lObXo2bk4xQzVHd1dUVGd6c2NzdExSZnFKRldTQVNtdlNUUjNKYVpvSVcwMW9rT1g1MXFtczktNjRRd2toZFc2cGFKbm9XQUdiYzN4aW40U0lmTkJqNE5ZRmlCdUEyMHdGMmdHQzk4bkpTeHZtMlk0UXc5dHljMWI4dEdfTkkzSTc0emtSd2FLODFkQ1pweDBORDJ4XzVha3BKWHlOOFVpRDB4Z3l0M2hMdHhUTXBqQ0U3VzlKMFJwOHh3ZEtEOV9iN21UajhhSXVudHZSVXRVMjR3NWdQRUlrSGVTSmNmVGpJelZ1Y2o3aFNrZ25McGFBR25SVlMtVU9mZzNzOXRDZ3VJYVg2NmJoOUVyNmZCT19sT19SWDVwWWh6TlZraTJJUUZTdmJPREZZN0twVHJDUjhObFkwcHJYM290U2Q0UlBhT1lidTlxMHdYYURXSVNNdWFhWnJFVDl2SXQ0SFhJWFNwQ1R0LWk3eHJVV0xFSDZvVEdDZ294Uk5qcXV6Qm42ekZENTFTSklDQ3V4WjFLMkZsTS1Nc2Z1YWFONWt1TGxic0FKeENiSEM3VGE4TUJYLUtlcGdSUG4wZlp1ZlZZQW45aThNcGJqaHRXcHNsanRlTjI2Uk93UEhkV2tTZ3gtb0hNdHNaYXBhQ1BUeXlnd09FbG1OOF9RUnl3UDdabkhYYVRYQWFFM2o1Vm15cC1SZ1VHQUFlMnc4dnI4THFjQXZFLXh4M0ZVQlItZnc5M0NWSVRnRlRjMEpSUGtGREk3QkFYR1ZacFd5LXhhZ3I4VElBSVYwTDd1U0ZxZk1zdUVzOTgwNFFocU4tSkRGVlZ3czhESy12ZDRZN3ZZS3UtYVp5VTRoOXA5dm54LWN1aWxMSGhzbmdGNVlaczNZX09GRUgxOVN0RjJHLUJmc3ExR1VNVVRWNmdhMnJyMUpGdjlmOTR4eHhKTW1ScUc3Ri1YSDRXQlBjRHpqRnVGdzdBNFNubEt5d2xHRGl5ZmJjeHNyV3FiMDF2NWhZbmswZ3lySm04VzZGSlo2ODV0eWFmd0QzZXByWUNUM0tIMjJJelcxbHZVOE9jaTlGWGgtZ25iMF9kR21wRndlazduQklpdWV2ZjdaNjJqV2Y4MnFnNHJDYWtobHh5MHFwVUR4WWc4U0ZNV2NXUlMtcmk4SXEwWUxYT3F1SVFhdmVjb1AxTUZYVm5ZRFJpem9OSXF1V2w1TWZIc2hJV0FkM3U3djBqc3JGZXdpbWZ0djdvWVJheHl1dlNEcWFrNlVqbnk5akczMjdkQWFXbmFqWGhvcklDVGtNWXpmRVN5ZC05RUVoSXMweE13NVZXMW9RbHh5M1JfcURYRlFWQ2RRMjNBNXl6LXlJYVE4emo2S1lMdU15X25jZHlKY2FhMHpiajNjY0hhUngyOU5Hd1FnUHFBTk5laVBhejZJNzJVNFhRTTVoWE5sOE16THZZNmt4WUstenF3alp3RDFmRUVDcjBCUm9TS3NqOUFrNWdMV3ZFZ0c5RlF0ejMyVVV2eC11eS1GU0VZOGdiQ3NoTkMxbFF6a2dWbTR3MXNDcEF0Q1NsVmo4Yjc5dnFkSkVkQWFFbFREZUkwaUYtQ0VSMTRMeHRkWFYxQXB4eVo1QVhhazZkNjlkN1ppenExZzNlcy10RlJ6akJjbmVibkQwYlM3ZlZSc2xPNEQ5N2xqdjF2WjZ1Y3JnN3dwMDhySEtzTUxMZnZRR3RCTjducjg5WlhNWlJuYzNTN0ZoMUttNXQ2aXJlTjczUW44b1dZNUI4UGtOMWZyWGdCcHZhS1ROeFI0VDh3Wkcxd1ExU25TcWpGbUVwZzVxZTlFdHNMNDBuX013Y0lDYjdmd0lGbC1yNjRlc09rVGJ2OTV4aG5FVU8xYWVHeFNKeDRHaF9hTnVVMENscFEzOFlTZW84ZG0xTW1ROGs5RlMxaVY5MmtyWEVQY0NoWF9jbUVhUTBYbTBNekhhSWR5UEJMZ0c0QnZLSGZybVNSU1hWTjEtSXphSGFxLWg3ZXphRi1CcjNqWEJFTE55ZUJLU0dNUnE2NWVCdEdpUDB3R0NQQXEwc0pmN1VyczVuN1liWkNsYW84dF9Dbm9RWUxnUGs0d1FPaXIxbTl4WUNPSy1XOWoyVlBOVEJNVFlmbGJPcjFGVHZIYzdUZDQ0Yk9GVmNoczJ2RFAwSlNVaVYwemwzcDgyVVdra2kxdXdMeWlYUEhrblRoX01LSGw1Wi1ERUdxd1J5N3p3OHRkZ0k0dFQ2VDIyQThGajZyWEU5eEVIYW5yd3A5bk1kQl9WR0JRZXZiRzd0dWdyWVVIODJsUTRYSUhEVkZYSnNvYmNPWFVPLVJqX1Jla0dkUnIzejc5ZzE0d0t4T2RxVk9CRXBUTjNfdXRhaFlNWjFmaHI4NXRTMG80ZG0yU2x3Y0RDZHBYS3U1M092Z19kejJMaVpfTHY3a1pWSUl3ejU5d0t4bnFTOUlDem5qZWlZUVppSm1EazU4aFIxNTV2dnlFUTVSaUZSSFE0N3ZXUmxnUnluaXB2cWFCR2tFeHQ0QVhCUXNNVzNlNmE4RFRfcWxsSEpfMTREbXFJbFBTX0NrajQxc0UxVnNVRXVlUjlFUDVzcExoNlBneVpHY3F3RHpjajM2bXc4RlZFZnlXQk9aWVRpWnNGdGVaeTVZNXhyb2IzSHZXVkZXYjA0UHhGam96WnlMX2ZVM09RM3ZBVElNTXgwRURSV1NKaVhTdkNfRTBxZmNtYzB1eXJ4by1mdGh4cUItVGlqVXlyOEJaMHVOMlh2dWVyV1VJTVN4WW53RFdHREE2dzNOd3pQd1ZtOWNlel9qR1JfdzlsbDNDTkxOeEpRMVBma2UyLXJRREotRi1GSGFfOTFHNEZiRTRsTlV4d19ZVmwwSWJYYnl2SGJqd0M0V09yNmFTZl83N2p1STZydWdIRVhzMTBXN2FrVlFsVG5zb0JVcU81YjJYSXJKbGpWREJBNEhjcFRYQVpJSC1uTkFrS0w3ajU4aHIxUVhaU0dsTms2SnJEZEEtaEtDeVhtY1RxY1JKQ1RVdGxtYnI0dWFYaEsyVWNhQnlBUUJxYzU4cF9kdHpSNkdobmZBXzNuLTY1ZkNjdkFLUUhXYkZVTW81a25NVFQtVHUzZXNYc3hMamxNVW5QY0pFeHg4UU8yT3lPZU5hVUpIeWh3dUJRS2duS2ZJSmw2ejBhZW5sdnVIZGVvbkdvWmVFak13T3Z6TjBaQ2NlN3dmTnF6SnhGZ1BFNkFGeDIzM3NmekFDMHhLaS1MN29UdFpubkhzZkN1WFZRYjhYUHJVc3hqTnpnM0VxZC1ReE9QamVyTUsxZERTal9WUG40Sm4tc1RaQlptT09fcDZGUTF0cUN5aGw0Z1RPVnNuM0FBdGdsRHpRR3BpT0ZyNFVDVF9yTy10bnVJZ2Rtc28yMlpTdko4aXVmRlpGUHRDNUNSOGNjQ19weFNRX1YtRFNqSThiNTVMdThBOFEtZEFRZ1JZdDBFaGE1NV9rTHRScGdieVZBc0N6b0oybzdsTGNvSWhKOFJrUGJ6Yl9RNWJwX2pHTnhlLXpsVHNmTlFJcEVQbEFYZ1ZtaXpGRGo4SkpsTllyN3lRV24tdkxNUUR4NlBUZ29rdnYtX01iWEF0S3B0Y1pUMFJxVk0zd3JoRGx4VmpBUUpZcTFYbVVTcFBUdTRLb3FDNWJwQWFOYjIzYV81dEZNLWtvbVVCa2xMUHpJVWNtQ180R0pZNHh0bWhFSXZxUDY1cU9mcHlzNjJyc05pdWdzZ1B6LWNXcXhJX1k4T1pabDFxLXV0cnB4NzNZMC1ZVlh4Qml3R25HVGhTY0t5RDN4YVFhYmtXcFNWZUotRDZ1ZWJyTlhGQlB5RXpBZmRvR2JBOW5JbWpvNEpCaGwzd2JETXdkMkh2Vmk3enIzZkhpTmZUemljYUY5NDZnZloyblpoWkpwdThOVVR5SVV1M1lsTDNwUzhlNThkbHRkOFAzaURnMEtMX0thcFNVb3lBdlllRGZjM21MUm9US1JsY2d4SlRZRkh6dnJ5ZjVYZ2doWFVLa19weU52bkkwYlVlc0NkMXhDNVoyYWlDTEczNVRrVERTbHVhY3JiUHV4bzFfR0UxN0JDMVBZeXhQYmNKTUE2ZG0yMlFoZ2xJTlgyYkdzQkJEQXBnZnFSZnBaOXRPUWJkTkdGTUtGdmhoM3hnc2dYWGo4eDl2WFRmVmFvempSejdPY3NLSXdFc0VndUswSFhxaHF0Q1FSUXRvX1FrUWZmaVFOVUI0NVRCSDRKMW56R01oVE1KMThhTEszaWhmSVg4SmljbUtRRVF3LXFiMkw3NjZPdG1VZ2JFR285MFgtWGpxUmV0c0gyc2dkYXhoQWpNZHJMMEpuRW5Id0hUZEZaZzd1d3dNSGtycGx1MldQTlNJQ0hKcjkwd3p6ZHFTZmE4R2RzN3FveEdfMXBWSXpqdmxOMURZb3h1TFlIa2VpdW1tS0U4VmdaTG9lOGQ0VDNJQXZNQ2lESTA0TzBjd2FKNGRMSWFNeTgwYl9XRENLVTBMZ01zYU8tYlpBZWthcDBGX1YxNGl2cGtaSnRkeG1pWnJRTVJSSVdDNHJGRmloOEFpamppX1FrblpFVUc1RS1xQkhIeF80bkRweXJ2SHRZcElMZFNxVEdQa19BT3JVc0hfR3h4bFlRNnUtX2VocnQwalItQmZmcm43em81YnZYRGJiMHpJSVFzSDVQdURPaU5WcS15eTBXX3QwdWJJVExBZmlsQUcwWFJ1SXBCNVZPSDZleW5vOHNVNVIwcTh5TjUwTWZNOW81ekpIYWp6QnVuYTdFVUt6TlR0OXRGSnRZLURrai1DdnhVOXJKcjhoN25SWlJQYjN1SGQzY1pmR0RUQjJiZHkyVkt5TE1BTEd6TWFtbzRmTDlwTTVvV2daOFh0WFM3enU5eDlPWmx6RnVNZFNQTkdoRTEweEhVc3J0M2ozaEtqMnd5eHVuN0pQY1JDb1dpR3oxT0ZiZmMxVHhHcmwyM01EaS1ieUthOGN2ZEgtQzFfOWNhOUlHVkxsNHpOaGtCWTktTkdGQkszdkRhTTNCZHVrZExWdENxNjVXWTdyeS1xaWQ2NlhNOFo5UTBNMm9XSFgyOHYxdUh6eHpaMlZDTkJGODZGRFVOVkdqV04zd2hGc3dfYlFZVE1SMWUxc2pjM0VwSXgtYzAyU1Qxd0p5U1l6TXR2Wi1sa1E2SnQ1am5CNjUxUU9hc2N6MGt1Q2JCcGdpakZ5YXRtd0lYbkFyd1dVWVhvaFZPU2hYVnh0cTMyakR3bkRXcVp5SERNdzBkZ3N2TkxRRDQ3SWFkRGFVa3hldHlyWVdOTkNLWktpbXczQ3VYRmtfY19IbGJFeHk5aUVLUllNaU5vQzNwSzV0VVdudzNXbUQ4bXZaQXRSNW9sSWdZRXB2TlR6bnp5Z2xJUUI2cHVhYkdPM2p5dTA4T2kwRFZkRll3V1VhbjF4RUJMdEhyYnd2WWoyT2hFdlp4VElNX0I3WE1MYk03MGxzWlUyNEM5UDlhRHg5VTBzQjlKSENxRVQtWThxelRFSjZXLVR3SU82dHZSMFpPeTdxRkJTbjR1WXZ0NndqM3o3a2hiZnpvR1gzSjYyaXptbVd3eld6TVVqQzUxRHYzX3FEOC14ZVhKMmV6MlVjcmpBN3ZkdEUtS2hmSmtwYXJPVDdtUHVIQWxoMnd1MVR1SVRKR21fX1NxSXNFTFA0MzZvNTF3U2EtQTdDd1lEUlRKWU5NTzdhczV6ZGNEZWdLMWZNbUVrTGdqR3RINUQ3OE5XM3RqS2p1WGtMdFFRcHJXV0xBc3RyRkFxT2hkdE5rU3A5LURrQi1zc3laSk9hVVlfZG9saWhvSDdwdURJVktpMmY4dm9fbFdHME9hSHB6Z2hjU1A3Z1dFeVljV2FiUDBQX2l4dF9uQ2RHTnZYa3BUWmQxeU5qNF9aTTluTHBjYVdsUWNqbnVoNmtJVjViQW9JODNvQ0tOVUFUcDRRZjhPUzdXNTVBdkFvRmxWSTJ2M1duSzE0bE45cFJ0cjNQQmpWSVRDYzVMbS1mc0NJcUkwWE80MXhRTlhIQkh2S1c5cGhaQW10NVZkZzc3Z2RKNnFTY2YyVWIxR1ZpcXdtV25DTlVTZUdpNlhJaUJxWFU0d25PWDhYUVdiOVRiRmJVY2lCV0pxb1kyT0hhWWtEQzdoU21uQW9tRlJMVXFsQkJ5QXprN1hvNXBNX1Rpb01rXzlMbG9Bc2Y4UmRhcUk0MkNhZy1wS2xVRWgxZkNfQ2F2dVdPQ0FGNXIxQjFveHAzSkJjbWJEM1EzZ2otb2RyQ3c2Rk9hS3BpZzRrZTVzUG1KUThYNG9JT28waHFuMWtCLWt4OWVCVVpuWmtHald0RXZvbjhWTnZOMlo2UjJ6aGwtTjQ4Y2ZxMnRkeW1CQ3BJbDU3dmJ5R0txQ185MmZUWmthYnVTUV9pUDRVUkFhMG1aMUxmajhmQ0h5bUxDbmJWZFlsNnMzdDI1MkZXOVdFMkotTlpab1hmWFJIanRreVRGUG5TRGJKQU1Ra3ZtYU5OSUE5OW5kalVYdU5wd25GaTAtaGRxVkxUN3E4TURaU0xvc0RESk5SVVZXaFVIenpzcGNPTDBEamFWVFBaRGl6cnFfT0lidlJWeHphYUJxT0lVcjhXeGJJYjhLMDNmUVBiVzk0SDhEaG9RWENDZ1draVlEMHFnTTFXU0lPOEY2TV9KOElyRkVfZUEwWGd4eHhOamlJVm9abUZXUWkwWmxjaFc0aUpNSHhMU1pyT0JqaE9YSkt4ODNVdm56ZWd2VUktLVRnVEJBeF9TUFVtUWxST3cyS3RZX25GQmUtdmlPbWtKdng5cDUyZTg2LVMtZ2h6dzFuVFpHS21ERHlyc2loa3lSV2xhLVJUcGJpUVRwRkdSaHNIRVgyWU5BQVB0WDlDNDdoeGNjRFgyTmt3bUFHX2pyQWhpRy1BTTlkOUJqLXZUOVl4SjAxWUxhdldRVG9aMGNEU2pVZkxBNEdvS1hocy1VSkIzeVhVTmxINmd1eUsxUmtGdXlMU0hnZk02OUdNSm55SHFsNUpSeElmeVh6MEUyLUNoTmhpTjBLUmhraVY0XzhLNVczR1RKamdsTzdxQ0FaVG9WMjF4cU5seFQ5OEtRbUNoTFloSjNhWkR0YnM5enhJNjhwMFZJYmVCM0MtMi1nRnJUdFg1MGJObHdrWkhwMU1kYkttS0VIOU95WHdzWjgyOEhZU21TUGRUUGZ4MDdiMGdwbW5HdWlIaUtmdGN2TXZBMDJFU1BHOGFRMXJsdlhDUjBza0k3RHM4dFFkcURUUGJNMU5NMXhBQS1DcnRyOXB3VDJoVXNETHA1R2xjRVZSb3BoQWZIMmU1Z002QWNLWm1QY1p5ckM2bVFXTXl6YTdVQmpNV3gxOXgxT2c3c2RXM3UwZWFNdHFiNzMtbHppTFkzdWdaZi0zU1QxcXFwNEpFaGJCNkVQV010eEo0Rmdxd1hmeDN3NXdNQUxzQVBKUzV4WEFmNnpRWlBudkRFb05VZzQ0Ry16TWM5ZUU3aDRBcDRxWmNoaEpMWXJwM1pCSTVNeGJYSjQ0Y3k1RmRLRlk2NzBtdlAza0hPUm4zMmM2RjFxeGFXNmVzWE1vU2E0NXBYRkdBSlpfbXJXZGgtOTktUnlsWkgybFoxYURfQ2xIYjN3OVFkZHd3cWc2LTVJZ25BSkk1dGNYTFRRODFBNTVzVXZNMXVNS3R3U3JYQ2xyZUJBOHZRb1dRY0ZhdTh4am10bVBTR2VJdjRKYWdOUmplc1R5VFltZkVDTldhclYtODJXOUZOQ2pSbkNZOFJoaE5BOXJMbVJXaTFHY3lIdVRnYVVadktOU2c4QTBNZFBVRThaMDlmbERReXo4OHdjai04RFZrWUVmNk5BcDZfZE54SnQyRm5pLVBFOVBWOW5TaTB5Vk9MTEZEaktuNUlFYXlNWC1LUFpKa0JhV2lxS2hyRGF3ckJmeVdqY2EwNWNIcjlGcVdackJ2dWVTY0tqWFpOWGxubVVxa0hWQVZNQ3pXTklqYTN4NWx3OF9wTVk3dTU4RG42MzUtdnJJTWRsU19VVlZ2alBwb18tZWIwNEJjeXFxSVpmbVdpc3hnZDhmcUpqMXNPeVB0eWZEdjZFUmY5dVZmUGNlNDRxM3d6NmJSMUZRZ1VGQjQwUFJwLTNNYzh4V1c4dkdYQUxnc19mZjlUcDhZcE0xV1E1dUZueWpQRUVodDJHbG5tck0zbFJtbS03R3JKUk94RXRweWQ3bXV3OUs0Ql9IdjlHTUpuTTNjNjE0cTJQSUhQRmlmYW1FZUR4ajNHZ1hEVGN5dm9FUjNHd3hiTkZsZWUtNTM1dXNCa0RobzNZMzJnOVE5U3AwdWllNHBRdDFSRW51WDB6dHQ4cW14VzZ0azFIS3pCbnVsMXNCekktNTVNSEdlV2VsT3h0emRZUjVWb2M1TFRjd05GdW1Pb2J2X1NhdjZoMHJId054T0tVYUpTQzdNQTFmaHAtZXhlbGRsYXV0S19BZFRUdGF5Q2RJbzB6VmdPRTlnSy0weldIMV9QTTNzUXlPNXdFZTlKYVJqVFZjQTBhZkxodXloUFlvdUUwamJxVFdST004Y0FBOTlUR1REOTRqaUVoZ3NvcndvOUFRZy1uTDlzTU9uLXdkczNESGpNbkwzaDg3TmpYUzhIaEw4WmEtam1oZVVHWDhnaXhWSkRNaFRiVWdaVW1oU244WUpuT0pwUjNBMmRvanFCX1ZoV0ZfVTZPc19rZjZ0eENSUGZHbE1wYVlYTHh6dzlJZDFpUUhqR3d2N3pXRDlSdV9OM01YQjl5U0otMmYwWXlBT3lnczBBSWJMVGFrQlo4YlN6VTF4Y0hnS1pXMU5xT3VldHNYX1ZFWmVqMlRQOEtlMEFzUV9wZHRlekFUaE1wODdmeWxmcC1BUnNPZDdBSnphZkZmdE16LjF2VjlGdEFWZnhhRHB4WndmMWhnVkE"}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '7459a370-8748-4d96-ba60-126d623d38e8',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:11 GMT',
  'Content-Length',
  '10379'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .delete('/keys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'a06fa60d-bfd2-4e6a-8a69-3101e2d23aaf',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:11 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '7ead172d-dced-4060-abca-56aa313b5200',
  'x-ms-ests-server',
  '2.1.9987.9 - WUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHAwAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:34:11 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:34:11 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .delete('/keys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(200, {"recoveryId":"https://keyvault_name.vault.azure.net/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-","deletedDate":1580502851,"scheduledPurgeDate":1588278851,"key":{"kid":"https://keyvault_name.vault.azure.net/keys/recoverKeyName-canrestoreakeywithagivenbackup-/2ab416ead51543578d175da0e549b96b","kty":"RSA","key_ops":["encrypt","decrypt","sign","verify","wrapKey","unwrapKey"],"n":"1p3TTTTuumw5VM2jcfAFIPL1kEpBRPgUkVBAfPZtINRiCIF3ynkUdU2giFrc8I7pplnYBr3Odl6TZTfFo2JIe7lebSwKmaCEVUtRIaOlTly8eUCBNXsVcoqeCG493Z5XngMz-E5yTUQAVTXfPlixg3C7PJae-bU0vGCPKaGvwAl4IsMYjPVQaw6-G3gj28bNyi_BkaaR7T4SLq9OnpFnn6UQBQLmMbW3xgomHzb2Ho_y1AsBtW0Cqwh2Ri7DTTgfaTYa86Roig8ZVges0G21sVU2TCEPA6zy3LF2lhvH1fij3TuYXo474YiW27XScZr8iNr7YtVIjT2GcGfHSgG2fQ","e":"AQAB"},"attributes":{"enabled":true,"created":1580502851,"updated":1580502851,"recoveryLevel":"Recoverable+Purgeable"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'd3c1721f-adb9-4396-8ad9-c03850f0c572',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:11 GMT',
  'Content-Length',
  '905'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '084f29c4-1e0e-4658-9ea9-f84db2d2022b',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:11 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  'ffd38757-0723-4793-900f-ccbb3c865000',
  'x-ms-ests-server',
  '2.1.9987.9 - WUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHBAAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:34:12 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:34:11 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(404, {"error":{"code":"KeyNotFound","message":"Deleted Key not found: recoverKeyName-canrestoreakeywithagivenbackup-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '130',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '02f3551e-581b-438d-ae53-781abda65474',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:11 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '0650b657-b90e-4559-982e-493227daad0e',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:11 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '095f2845-2000-42d9-8f02-7d8f5ff60300',
  'x-ms-ests-server',
  '2.1.9987.9 - SCUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHBQAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:34:12 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:34:12 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(404, {"error":{"code":"KeyNotFound","message":"Deleted Key not found: recoverKeyName-canrestoreakeywithagivenbackup-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '130',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '3d6ff422-e7df-46dc-89ca-c3ae38a7e7e7',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:11 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '602196b0-bf92-4a6d-8ceb-7a2b9913edf0',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:13 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '737b111c-778d-4fdc-aaf9-0c25e1010700',
  'x-ms-ests-server',
  '2.1.9987.9 - NCUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHBgAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:34:14 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:34:14 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(404, {"error":{"code":"KeyNotFound","message":"Deleted Key not found: recoverKeyName-canrestoreakeywithagivenbackup-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '130',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '3316d823-271e-4acd-a9db-60ed10a3d49b',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:14 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'e55dfe9d-e4c5-4f06-a47e-d25dbd94965e',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:16 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '72784599-dddc-4ced-934f-334d44575300',
  'x-ms-ests-server',
  '2.1.9987.9 - WUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHBwAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:34:17 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:34:16 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(404, {"error":{"code":"KeyNotFound","message":"Deleted Key not found: recoverKeyName-canrestoreakeywithagivenbackup-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '130',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '7ac9a266-aa57-4a63-a306-91bd19002697',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:16 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'd7f3a7a9-d68e-4f57-b282-730f97a52b27',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:18 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '37782e69-c6b1-4bb2-b640-8a5002290a00',
  'x-ms-ests-server',
  '2.1.9987.9 - EUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHCAAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:34:19 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:34:19 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(404, {"error":{"code":"KeyNotFound","message":"Deleted Key not found: recoverKeyName-canrestoreakeywithagivenbackup-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '130',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'e68a227f-8f7f-4ec4-84b1-99203886cb98',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:18 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'd6bc08c5-b6ca-43c7-b01e-34052ae311b6',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:20 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '72784599-dddc-4ced-934f-334d7c585300',
  'x-ms-ests-server',
  '2.1.9987.9 - WUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHCQAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:34:21 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:34:21 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(404, {"error":{"code":"KeyNotFound","message":"Deleted Key not found: recoverKeyName-canrestoreakeywithagivenbackup-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '130',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '8fd82284-238f-46de-a855-701aa1c790ff',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:21 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'c28dfbd9-7b43-4de3-9890-362959cbedda',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:23 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '69d04f77-52c2-4ac4-ae35-00f5b2320700',
  'x-ms-ests-server',
  '2.1.9987.9 - NCUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHCgAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:34:24 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:34:23 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(404, {"error":{"code":"KeyNotFound","message":"Deleted Key not found: recoverKeyName-canrestoreakeywithagivenbackup-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '130',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '283ddcc0-ae8b-4bab-988f-f0994543518a',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:23 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '1e55fc7f-4ebd-4886-8606-cdebe2c9cd0a',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:25 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '434fdd2c-5aff-40e2-83ed-d1ccaa6b0900',
  'x-ms-ests-server',
  '2.1.9987.9 - EUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHCwAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:34:26 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:34:26 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(200, {"recoveryId":"https://keyvault_name.vault.azure.net/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-","deletedDate":1580502851,"scheduledPurgeDate":1588278851,"key":{"kid":"https://keyvault_name.vault.azure.net/keys/recoverKeyName-canrestoreakeywithagivenbackup-/2ab416ead51543578d175da0e549b96b","kty":"RSA","key_ops":["encrypt","decrypt","sign","verify","wrapKey","unwrapKey"],"n":"1p3TTTTuumw5VM2jcfAFIPL1kEpBRPgUkVBAfPZtINRiCIF3ynkUdU2giFrc8I7pplnYBr3Odl6TZTfFo2JIe7lebSwKmaCEVUtRIaOlTly8eUCBNXsVcoqeCG493Z5XngMz-E5yTUQAVTXfPlixg3C7PJae-bU0vGCPKaGvwAl4IsMYjPVQaw6-G3gj28bNyi_BkaaR7T4SLq9OnpFnn6UQBQLmMbW3xgomHzb2Ho_y1AsBtW0Cqwh2Ri7DTTgfaTYa86Roig8ZVges0G21sVU2TCEPA6zy3LF2lhvH1fij3TuYXo474YiW27XScZr8iNr7YtVIjT2GcGfHSgG2fQ","e":"AQAB"},"attributes":{"enabled":true,"created":1580502851,"updated":1580502851,"recoveryLevel":"Recoverable+Purgeable"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '82327d36-ee66-4bc2-8205-c399eb47f7c0',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:25 GMT',
  'Content-Length',
  '905'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .delete('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'eda13d8c-34c1-4eba-83ba-6fffb9fcc405',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:25 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '83221881-70d4-4b5a-b624-1f25bf970a00',
  'x-ms-ests-server',
  '2.1.9987.9 - EUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHDAAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:34:26 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:34:26 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .delete('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(204, "", [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'f1563ce2-5367-4fb0-bdea-ec17a8a58d0d',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:26 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .post('/keys/restore')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'a9215b5a-de4e-425a-94e8-8d4615f13a3c',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:26 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '3e3db5e7-bf75-4127-9669-a3e8f7ce0300',
  'x-ms-ests-server',
  '2.1.9987.9 - SCUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHDQAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:34:27 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:34:26 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .post('/keys/restore', {"value":"JkF6dXJlS2V5VmF1bHRLZXlCYWNrdXBWMS5taWNyb3NvZnQuY29tZXlKcmFXUWlPaUkwTXpnMVlqQTNZaTFrTlRRM0xUUXlaVFV0WVdVNVpTMDJNVEJrWXpNNVpHWmhaamdpTENKaGJHY2lPaUpTVTBFdFQwRkZVQ0lzSW1WdVl5STZJa0V4TWpoRFFrTXRTRk15TlRZaWZRLlBtTGtHQXdEZkxzUW5BWmx1YWZvSFNSUWVWcXlkbmVKb0dUdlpwYjRmY3JsdEhjcjQxR19zWnl1MFQ2NDgxYW9QRjRJVHFWTjZDbW1QaDNJYUdqWGhxSmhIeDVOV2FZOVh6aG5JMzFDdDh1by0taklISzlWMjIxZHI5VlNjUjE1OVRySW50aE9VR1FDMVlEcTNRT21nX3VpX3NVOFczcmFTQUJQVFlWa0YxVERENmppa2RJbHZzRHJscGRpR2daMVNvLVBOMF9fRUZSMnNpb3NqS254SGllQnJ4M1RpdkxaUDhReVkzejZLZmVoaG51dWk3VGRJdlNwdzRfT2lXWEFsV19qbXdtOV9PR3JUdWxfNGlCVlJwTW9oNTN1eFVJUDM5UDZ4SDZyb3JuZ1FaSWFYZ2NaRHM4QUJWUHNjQkJTWFNSbXhXU1hQSXZYby14ZmRsdlFyZy5ZY3NzekZhQ0tCZVE4eGF4WERxU1RBLlZzcFdfNVlncWEyc3NUakpKTzl0TlZIc2VuOHlEdGhQU0tUNDd5Y2J5Z3R6MlAzQ3pVZlkzRTlyeVNISEVxNmk5RzQtNDR0WFdxVktOaFBtWkxWdWs5WXBweDlmNGh3NXhhR2NtMUZFdW5GdkxEdER1VHI3M19nUkJkb0lZVUxESldFM1FjMmpUNDRrd1E3eEFzVGJmNmhhVXRVRVB0OGhncDJlNERHM2Z1Yjk3b3lvVEVMZTZUSUgzT2Qwa280NlVaSTdOdXZlWTlIQXBlbnB1S1lYOUNDSFNBemJObU1BZU04UjhzNHoxak9PZURmRnVZMkN5RnBYN2R3TzlOUVUtN0duNkJ6YzRRWExIODJOVy12RmExUzlrT0YxLU1aa1lpMVFJd2xLbkY1OVJVWkZuNXVFdUlUS1J0dmF6X1lPUTltZmRmNm9TLTBGR3VBaVpNUnFWV1BiQjdSSEFOUzFOQk81bmZ5UUNIZWl0MzZtTnZFakpYQmVnaW9HTVlyNHpsRllYX1prelF2TXRITkJQUWQzSlE5M0pPWE1zaXd2WHQxMVIzZV9aT1NFbE5BbWEyYS1YOGJXZ0dsbDhZV004VDFpS2ZOTDBlYXZUbHNQWTQ1X3RzUHlOaFdIYlFjT1lObXo2bk4xQzVHd1dUVGd6c2NzdExSZnFKRldTQVNtdlNUUjNKYVpvSVcwMW9rT1g1MXFtczktNjRRd2toZFc2cGFKbm9XQUdiYzN4aW40U0lmTkJqNE5ZRmlCdUEyMHdGMmdHQzk4bkpTeHZtMlk0UXc5dHljMWI4dEdfTkkzSTc0emtSd2FLODFkQ1pweDBORDJ4XzVha3BKWHlOOFVpRDB4Z3l0M2hMdHhUTXBqQ0U3VzlKMFJwOHh3ZEtEOV9iN21UajhhSXVudHZSVXRVMjR3NWdQRUlrSGVTSmNmVGpJelZ1Y2o3aFNrZ25McGFBR25SVlMtVU9mZzNzOXRDZ3VJYVg2NmJoOUVyNmZCT19sT19SWDVwWWh6TlZraTJJUUZTdmJPREZZN0twVHJDUjhObFkwcHJYM290U2Q0UlBhT1lidTlxMHdYYURXSVNNdWFhWnJFVDl2SXQ0SFhJWFNwQ1R0LWk3eHJVV0xFSDZvVEdDZ294Uk5qcXV6Qm42ekZENTFTSklDQ3V4WjFLMkZsTS1Nc2Z1YWFONWt1TGxic0FKeENiSEM3VGE4TUJYLUtlcGdSUG4wZlp1ZlZZQW45aThNcGJqaHRXcHNsanRlTjI2Uk93UEhkV2tTZ3gtb0hNdHNaYXBhQ1BUeXlnd09FbG1OOF9RUnl3UDdabkhYYVRYQWFFM2o1Vm15cC1SZ1VHQUFlMnc4dnI4THFjQXZFLXh4M0ZVQlItZnc5M0NWSVRnRlRjMEpSUGtGREk3QkFYR1ZacFd5LXhhZ3I4VElBSVYwTDd1U0ZxZk1zdUVzOTgwNFFocU4tSkRGVlZ3czhESy12ZDRZN3ZZS3UtYVp5VTRoOXA5dm54LWN1aWxMSGhzbmdGNVlaczNZX09GRUgxOVN0RjJHLUJmc3ExR1VNVVRWNmdhMnJyMUpGdjlmOTR4eHhKTW1ScUc3Ri1YSDRXQlBjRHpqRnVGdzdBNFNubEt5d2xHRGl5ZmJjeHNyV3FiMDF2NWhZbmswZ3lySm04VzZGSlo2ODV0eWFmd0QzZXByWUNUM0tIMjJJelcxbHZVOE9jaTlGWGgtZ25iMF9kR21wRndlazduQklpdWV2ZjdaNjJqV2Y4MnFnNHJDYWtobHh5MHFwVUR4WWc4U0ZNV2NXUlMtcmk4SXEwWUxYT3F1SVFhdmVjb1AxTUZYVm5ZRFJpem9OSXF1V2w1TWZIc2hJV0FkM3U3djBqc3JGZXdpbWZ0djdvWVJheHl1dlNEcWFrNlVqbnk5akczMjdkQWFXbmFqWGhvcklDVGtNWXpmRVN5ZC05RUVoSXMweE13NVZXMW9RbHh5M1JfcURYRlFWQ2RRMjNBNXl6LXlJYVE4emo2S1lMdU15X25jZHlKY2FhMHpiajNjY0hhUngyOU5Hd1FnUHFBTk5laVBhejZJNzJVNFhRTTVoWE5sOE16THZZNmt4WUstenF3alp3RDFmRUVDcjBCUm9TS3NqOUFrNWdMV3ZFZ0c5RlF0ejMyVVV2eC11eS1GU0VZOGdiQ3NoTkMxbFF6a2dWbTR3MXNDcEF0Q1NsVmo4Yjc5dnFkSkVkQWFFbFREZUkwaUYtQ0VSMTRMeHRkWFYxQXB4eVo1QVhhazZkNjlkN1ppenExZzNlcy10RlJ6akJjbmVibkQwYlM3ZlZSc2xPNEQ5N2xqdjF2WjZ1Y3JnN3dwMDhySEtzTUxMZnZRR3RCTjducjg5WlhNWlJuYzNTN0ZoMUttNXQ2aXJlTjczUW44b1dZNUI4UGtOMWZyWGdCcHZhS1ROeFI0VDh3Wkcxd1ExU25TcWpGbUVwZzVxZTlFdHNMNDBuX013Y0lDYjdmd0lGbC1yNjRlc09rVGJ2OTV4aG5FVU8xYWVHeFNKeDRHaF9hTnVVMENscFEzOFlTZW84ZG0xTW1ROGs5RlMxaVY5MmtyWEVQY0NoWF9jbUVhUTBYbTBNekhhSWR5UEJMZ0c0QnZLSGZybVNSU1hWTjEtSXphSGFxLWg3ZXphRi1CcjNqWEJFTE55ZUJLU0dNUnE2NWVCdEdpUDB3R0NQQXEwc0pmN1VyczVuN1liWkNsYW84dF9Dbm9RWUxnUGs0d1FPaXIxbTl4WUNPSy1XOWoyVlBOVEJNVFlmbGJPcjFGVHZIYzdUZDQ0Yk9GVmNoczJ2RFAwSlNVaVYwemwzcDgyVVdra2kxdXdMeWlYUEhrblRoX01LSGw1Wi1ERUdxd1J5N3p3OHRkZ0k0dFQ2VDIyQThGajZyWEU5eEVIYW5yd3A5bk1kQl9WR0JRZXZiRzd0dWdyWVVIODJsUTRYSUhEVkZYSnNvYmNPWFVPLVJqX1Jla0dkUnIzejc5ZzE0d0t4T2RxVk9CRXBUTjNfdXRhaFlNWjFmaHI4NXRTMG80ZG0yU2x3Y0RDZHBYS3U1M092Z19kejJMaVpfTHY3a1pWSUl3ejU5d0t4bnFTOUlDem5qZWlZUVppSm1EazU4aFIxNTV2dnlFUTVSaUZSSFE0N3ZXUmxnUnluaXB2cWFCR2tFeHQ0QVhCUXNNVzNlNmE4RFRfcWxsSEpfMTREbXFJbFBTX0NrajQxc0UxVnNVRXVlUjlFUDVzcExoNlBneVpHY3F3RHpjajM2bXc4RlZFZnlXQk9aWVRpWnNGdGVaeTVZNXhyb2IzSHZXVkZXYjA0UHhGam96WnlMX2ZVM09RM3ZBVElNTXgwRURSV1NKaVhTdkNfRTBxZmNtYzB1eXJ4by1mdGh4cUItVGlqVXlyOEJaMHVOMlh2dWVyV1VJTVN4WW53RFdHREE2dzNOd3pQd1ZtOWNlel9qR1JfdzlsbDNDTkxOeEpRMVBma2UyLXJRREotRi1GSGFfOTFHNEZiRTRsTlV4d19ZVmwwSWJYYnl2SGJqd0M0V09yNmFTZl83N2p1STZydWdIRVhzMTBXN2FrVlFsVG5zb0JVcU81YjJYSXJKbGpWREJBNEhjcFRYQVpJSC1uTkFrS0w3ajU4aHIxUVhaU0dsTms2SnJEZEEtaEtDeVhtY1RxY1JKQ1RVdGxtYnI0dWFYaEsyVWNhQnlBUUJxYzU4cF9kdHpSNkdobmZBXzNuLTY1ZkNjdkFLUUhXYkZVTW81a25NVFQtVHUzZXNYc3hMamxNVW5QY0pFeHg4UU8yT3lPZU5hVUpIeWh3dUJRS2duS2ZJSmw2ejBhZW5sdnVIZGVvbkdvWmVFak13T3Z6TjBaQ2NlN3dmTnF6SnhGZ1BFNkFGeDIzM3NmekFDMHhLaS1MN29UdFpubkhzZkN1WFZRYjhYUHJVc3hqTnpnM0VxZC1ReE9QamVyTUsxZERTal9WUG40Sm4tc1RaQlptT09fcDZGUTF0cUN5aGw0Z1RPVnNuM0FBdGdsRHpRR3BpT0ZyNFVDVF9yTy10bnVJZ2Rtc28yMlpTdko4aXVmRlpGUHRDNUNSOGNjQ19weFNRX1YtRFNqSThiNTVMdThBOFEtZEFRZ1JZdDBFaGE1NV9rTHRScGdieVZBc0N6b0oybzdsTGNvSWhKOFJrUGJ6Yl9RNWJwX2pHTnhlLXpsVHNmTlFJcEVQbEFYZ1ZtaXpGRGo4SkpsTllyN3lRV24tdkxNUUR4NlBUZ29rdnYtX01iWEF0S3B0Y1pUMFJxVk0zd3JoRGx4VmpBUUpZcTFYbVVTcFBUdTRLb3FDNWJwQWFOYjIzYV81dEZNLWtvbVVCa2xMUHpJVWNtQ180R0pZNHh0bWhFSXZxUDY1cU9mcHlzNjJyc05pdWdzZ1B6LWNXcXhJX1k4T1pabDFxLXV0cnB4NzNZMC1ZVlh4Qml3R25HVGhTY0t5RDN4YVFhYmtXcFNWZUotRDZ1ZWJyTlhGQlB5RXpBZmRvR2JBOW5JbWpvNEpCaGwzd2JETXdkMkh2Vmk3enIzZkhpTmZUemljYUY5NDZnZloyblpoWkpwdThOVVR5SVV1M1lsTDNwUzhlNThkbHRkOFAzaURnMEtMX0thcFNVb3lBdlllRGZjM21MUm9US1JsY2d4SlRZRkh6dnJ5ZjVYZ2doWFVLa19weU52bkkwYlVlc0NkMXhDNVoyYWlDTEczNVRrVERTbHVhY3JiUHV4bzFfR0UxN0JDMVBZeXhQYmNKTUE2ZG0yMlFoZ2xJTlgyYkdzQkJEQXBnZnFSZnBaOXRPUWJkTkdGTUtGdmhoM3hnc2dYWGo4eDl2WFRmVmFvempSejdPY3NLSXdFc0VndUswSFhxaHF0Q1FSUXRvX1FrUWZmaVFOVUI0NVRCSDRKMW56R01oVE1KMThhTEszaWhmSVg4SmljbUtRRVF3LXFiMkw3NjZPdG1VZ2JFR285MFgtWGpxUmV0c0gyc2dkYXhoQWpNZHJMMEpuRW5Id0hUZEZaZzd1d3dNSGtycGx1MldQTlNJQ0hKcjkwd3p6ZHFTZmE4R2RzN3FveEdfMXBWSXpqdmxOMURZb3h1TFlIa2VpdW1tS0U4VmdaTG9lOGQ0VDNJQXZNQ2lESTA0TzBjd2FKNGRMSWFNeTgwYl9XRENLVTBMZ01zYU8tYlpBZWthcDBGX1YxNGl2cGtaSnRkeG1pWnJRTVJSSVdDNHJGRmloOEFpamppX1FrblpFVUc1RS1xQkhIeF80bkRweXJ2SHRZcElMZFNxVEdQa19BT3JVc0hfR3h4bFlRNnUtX2VocnQwalItQmZmcm43em81YnZYRGJiMHpJSVFzSDVQdURPaU5WcS15eTBXX3QwdWJJVExBZmlsQUcwWFJ1SXBCNVZPSDZleW5vOHNVNVIwcTh5TjUwTWZNOW81ekpIYWp6QnVuYTdFVUt6TlR0OXRGSnRZLURrai1DdnhVOXJKcjhoN25SWlJQYjN1SGQzY1pmR0RUQjJiZHkyVkt5TE1BTEd6TWFtbzRmTDlwTTVvV2daOFh0WFM3enU5eDlPWmx6RnVNZFNQTkdoRTEweEhVc3J0M2ozaEtqMnd5eHVuN0pQY1JDb1dpR3oxT0ZiZmMxVHhHcmwyM01EaS1ieUthOGN2ZEgtQzFfOWNhOUlHVkxsNHpOaGtCWTktTkdGQkszdkRhTTNCZHVrZExWdENxNjVXWTdyeS1xaWQ2NlhNOFo5UTBNMm9XSFgyOHYxdUh6eHpaMlZDTkJGODZGRFVOVkdqV04zd2hGc3dfYlFZVE1SMWUxc2pjM0VwSXgtYzAyU1Qxd0p5U1l6TXR2Wi1sa1E2SnQ1am5CNjUxUU9hc2N6MGt1Q2JCcGdpakZ5YXRtd0lYbkFyd1dVWVhvaFZPU2hYVnh0cTMyakR3bkRXcVp5SERNdzBkZ3N2TkxRRDQ3SWFkRGFVa3hldHlyWVdOTkNLWktpbXczQ3VYRmtfY19IbGJFeHk5aUVLUllNaU5vQzNwSzV0VVdudzNXbUQ4bXZaQXRSNW9sSWdZRXB2TlR6bnp5Z2xJUUI2cHVhYkdPM2p5dTA4T2kwRFZkRll3V1VhbjF4RUJMdEhyYnd2WWoyT2hFdlp4VElNX0I3WE1MYk03MGxzWlUyNEM5UDlhRHg5VTBzQjlKSENxRVQtWThxelRFSjZXLVR3SU82dHZSMFpPeTdxRkJTbjR1WXZ0NndqM3o3a2hiZnpvR1gzSjYyaXptbVd3eld6TVVqQzUxRHYzX3FEOC14ZVhKMmV6MlVjcmpBN3ZkdEUtS2hmSmtwYXJPVDdtUHVIQWxoMnd1MVR1SVRKR21fX1NxSXNFTFA0MzZvNTF3U2EtQTdDd1lEUlRKWU5NTzdhczV6ZGNEZWdLMWZNbUVrTGdqR3RINUQ3OE5XM3RqS2p1WGtMdFFRcHJXV0xBc3RyRkFxT2hkdE5rU3A5LURrQi1zc3laSk9hVVlfZG9saWhvSDdwdURJVktpMmY4dm9fbFdHME9hSHB6Z2hjU1A3Z1dFeVljV2FiUDBQX2l4dF9uQ2RHTnZYa3BUWmQxeU5qNF9aTTluTHBjYVdsUWNqbnVoNmtJVjViQW9JODNvQ0tOVUFUcDRRZjhPUzdXNTVBdkFvRmxWSTJ2M1duSzE0bE45cFJ0cjNQQmpWSVRDYzVMbS1mc0NJcUkwWE80MXhRTlhIQkh2S1c5cGhaQW10NVZkZzc3Z2RKNnFTY2YyVWIxR1ZpcXdtV25DTlVTZUdpNlhJaUJxWFU0d25PWDhYUVdiOVRiRmJVY2lCV0pxb1kyT0hhWWtEQzdoU21uQW9tRlJMVXFsQkJ5QXprN1hvNXBNX1Rpb01rXzlMbG9Bc2Y4UmRhcUk0MkNhZy1wS2xVRWgxZkNfQ2F2dVdPQ0FGNXIxQjFveHAzSkJjbWJEM1EzZ2otb2RyQ3c2Rk9hS3BpZzRrZTVzUG1KUThYNG9JT28waHFuMWtCLWt4OWVCVVpuWmtHald0RXZvbjhWTnZOMlo2UjJ6aGwtTjQ4Y2ZxMnRkeW1CQ3BJbDU3dmJ5R0txQ185MmZUWmthYnVTUV9pUDRVUkFhMG1aMUxmajhmQ0h5bUxDbmJWZFlsNnMzdDI1MkZXOVdFMkotTlpab1hmWFJIanRreVRGUG5TRGJKQU1Ra3ZtYU5OSUE5OW5kalVYdU5wd25GaTAtaGRxVkxUN3E4TURaU0xvc0RESk5SVVZXaFVIenpzcGNPTDBEamFWVFBaRGl6cnFfT0lidlJWeHphYUJxT0lVcjhXeGJJYjhLMDNmUVBiVzk0SDhEaG9RWENDZ1draVlEMHFnTTFXU0lPOEY2TV9KOElyRkVfZUEwWGd4eHhOamlJVm9abUZXUWkwWmxjaFc0aUpNSHhMU1pyT0JqaE9YSkt4ODNVdm56ZWd2VUktLVRnVEJBeF9TUFVtUWxST3cyS3RZX25GQmUtdmlPbWtKdng5cDUyZTg2LVMtZ2h6dzFuVFpHS21ERHlyc2loa3lSV2xhLVJUcGJpUVRwRkdSaHNIRVgyWU5BQVB0WDlDNDdoeGNjRFgyTmt3bUFHX2pyQWhpRy1BTTlkOUJqLXZUOVl4SjAxWUxhdldRVG9aMGNEU2pVZkxBNEdvS1hocy1VSkIzeVhVTmxINmd1eUsxUmtGdXlMU0hnZk02OUdNSm55SHFsNUpSeElmeVh6MEUyLUNoTmhpTjBLUmhraVY0XzhLNVczR1RKamdsTzdxQ0FaVG9WMjF4cU5seFQ5OEtRbUNoTFloSjNhWkR0YnM5enhJNjhwMFZJYmVCM0MtMi1nRnJUdFg1MGJObHdrWkhwMU1kYkttS0VIOU95WHdzWjgyOEhZU21TUGRUUGZ4MDdiMGdwbW5HdWlIaUtmdGN2TXZBMDJFU1BHOGFRMXJsdlhDUjBza0k3RHM4dFFkcURUUGJNMU5NMXhBQS1DcnRyOXB3VDJoVXNETHA1R2xjRVZSb3BoQWZIMmU1Z002QWNLWm1QY1p5ckM2bVFXTXl6YTdVQmpNV3gxOXgxT2c3c2RXM3UwZWFNdHFiNzMtbHppTFkzdWdaZi0zU1QxcXFwNEpFaGJCNkVQV010eEo0Rmdxd1hmeDN3NXdNQUxzQVBKUzV4WEFmNnpRWlBudkRFb05VZzQ0Ry16TWM5ZUU3aDRBcDRxWmNoaEpMWXJwM1pCSTVNeGJYSjQ0Y3k1RmRLRlk2NzBtdlAza0hPUm4zMmM2RjFxeGFXNmVzWE1vU2E0NXBYRkdBSlpfbXJXZGgtOTktUnlsWkgybFoxYURfQ2xIYjN3OVFkZHd3cWc2LTVJZ25BSkk1dGNYTFRRODFBNTVzVXZNMXVNS3R3U3JYQ2xyZUJBOHZRb1dRY0ZhdTh4am10bVBTR2VJdjRKYWdOUmplc1R5VFltZkVDTldhclYtODJXOUZOQ2pSbkNZOFJoaE5BOXJMbVJXaTFHY3lIdVRnYVVadktOU2c4QTBNZFBVRThaMDlmbERReXo4OHdjai04RFZrWUVmNk5BcDZfZE54SnQyRm5pLVBFOVBWOW5TaTB5Vk9MTEZEaktuNUlFYXlNWC1LUFpKa0JhV2lxS2hyRGF3ckJmeVdqY2EwNWNIcjlGcVdackJ2dWVTY0tqWFpOWGxubVVxa0hWQVZNQ3pXTklqYTN4NWx3OF9wTVk3dTU4RG42MzUtdnJJTWRsU19VVlZ2alBwb18tZWIwNEJjeXFxSVpmbVdpc3hnZDhmcUpqMXNPeVB0eWZEdjZFUmY5dVZmUGNlNDRxM3d6NmJSMUZRZ1VGQjQwUFJwLTNNYzh4V1c4dkdYQUxnc19mZjlUcDhZcE0xV1E1dUZueWpQRUVodDJHbG5tck0zbFJtbS03R3JKUk94RXRweWQ3bXV3OUs0Ql9IdjlHTUpuTTNjNjE0cTJQSUhQRmlmYW1FZUR4ajNHZ1hEVGN5dm9FUjNHd3hiTkZsZWUtNTM1dXNCa0RobzNZMzJnOVE5U3AwdWllNHBRdDFSRW51WDB6dHQ4cW14VzZ0azFIS3pCbnVsMXNCekktNTVNSEdlV2VsT3h0emRZUjVWb2M1TFRjd05GdW1Pb2J2X1NhdjZoMHJId054T0tVYUpTQzdNQTFmaHAtZXhlbGRsYXV0S19BZFRUdGF5Q2RJbzB6VmdPRTlnSy0weldIMV9QTTNzUXlPNXdFZTlKYVJqVFZjQTBhZkxodXloUFlvdUUwamJxVFdST004Y0FBOTlUR1REOTRqaUVoZ3NvcndvOUFRZy1uTDlzTU9uLXdkczNESGpNbkwzaDg3TmpYUzhIaEw4WmEtam1oZVVHWDhnaXhWSkRNaFRiVWdaVW1oU244WUpuT0pwUjNBMmRvanFCX1ZoV0ZfVTZPc19rZjZ0eENSUGZHbE1wYVlYTHh6dzlJZDFpUUhqR3d2N3pXRDlSdV9OM01YQjl5U0otMmYwWXlBT3lnczBBSWJMVGFrQlo4YlN6VTF4Y0hnS1pXMU5xT3VldHNYX1ZFWmVqMlRQOEtlMEFzUV9wZHRlekFUaE1wODdmeWxmcC1BUnNPZDdBSnphZkZmdE16LjF2VjlGdEFWZnhhRHB4WndmMWhnVkE"})
  .query(true)
  .reply(409, {"error":{"code":"Conflict","message":"Conflict while restoring key https://keyvault_name.vault.azure.net/keys/recoverKeyName-canrestoreakeywithagivenbackup-/2ab416ead51543578d175da0e549b96b - key already exists or concurrent access"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '256',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '0a24a723-5431-4381-afb3-b6a7cf46c987',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:26 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .post('/keys/restore')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'de332a91-f3e4-42b3-a0be-2fd1d386d157',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:36 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '14543f29-fe32-4aa1-b9a0-51325c4b0900',
  'x-ms-ests-server',
  '2.1.9987.9 - EUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHDgAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:34:37 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:34:37 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .post('/keys/restore', {"value":"JkF6dXJlS2V5VmF1bHRLZXlCYWNrdXBWMS5taWNyb3NvZnQuY29tZXlKcmFXUWlPaUkwTXpnMVlqQTNZaTFrTlRRM0xUUXlaVFV0WVdVNVpTMDJNVEJrWXpNNVpHWmhaamdpTENKaGJHY2lPaUpTVTBFdFQwRkZVQ0lzSW1WdVl5STZJa0V4TWpoRFFrTXRTRk15TlRZaWZRLlBtTGtHQXdEZkxzUW5BWmx1YWZvSFNSUWVWcXlkbmVKb0dUdlpwYjRmY3JsdEhjcjQxR19zWnl1MFQ2NDgxYW9QRjRJVHFWTjZDbW1QaDNJYUdqWGhxSmhIeDVOV2FZOVh6aG5JMzFDdDh1by0taklISzlWMjIxZHI5VlNjUjE1OVRySW50aE9VR1FDMVlEcTNRT21nX3VpX3NVOFczcmFTQUJQVFlWa0YxVERENmppa2RJbHZzRHJscGRpR2daMVNvLVBOMF9fRUZSMnNpb3NqS254SGllQnJ4M1RpdkxaUDhReVkzejZLZmVoaG51dWk3VGRJdlNwdzRfT2lXWEFsV19qbXdtOV9PR3JUdWxfNGlCVlJwTW9oNTN1eFVJUDM5UDZ4SDZyb3JuZ1FaSWFYZ2NaRHM4QUJWUHNjQkJTWFNSbXhXU1hQSXZYby14ZmRsdlFyZy5ZY3NzekZhQ0tCZVE4eGF4WERxU1RBLlZzcFdfNVlncWEyc3NUakpKTzl0TlZIc2VuOHlEdGhQU0tUNDd5Y2J5Z3R6MlAzQ3pVZlkzRTlyeVNISEVxNmk5RzQtNDR0WFdxVktOaFBtWkxWdWs5WXBweDlmNGh3NXhhR2NtMUZFdW5GdkxEdER1VHI3M19nUkJkb0lZVUxESldFM1FjMmpUNDRrd1E3eEFzVGJmNmhhVXRVRVB0OGhncDJlNERHM2Z1Yjk3b3lvVEVMZTZUSUgzT2Qwa280NlVaSTdOdXZlWTlIQXBlbnB1S1lYOUNDSFNBemJObU1BZU04UjhzNHoxak9PZURmRnVZMkN5RnBYN2R3TzlOUVUtN0duNkJ6YzRRWExIODJOVy12RmExUzlrT0YxLU1aa1lpMVFJd2xLbkY1OVJVWkZuNXVFdUlUS1J0dmF6X1lPUTltZmRmNm9TLTBGR3VBaVpNUnFWV1BiQjdSSEFOUzFOQk81bmZ5UUNIZWl0MzZtTnZFakpYQmVnaW9HTVlyNHpsRllYX1prelF2TXRITkJQUWQzSlE5M0pPWE1zaXd2WHQxMVIzZV9aT1NFbE5BbWEyYS1YOGJXZ0dsbDhZV004VDFpS2ZOTDBlYXZUbHNQWTQ1X3RzUHlOaFdIYlFjT1lObXo2bk4xQzVHd1dUVGd6c2NzdExSZnFKRldTQVNtdlNUUjNKYVpvSVcwMW9rT1g1MXFtczktNjRRd2toZFc2cGFKbm9XQUdiYzN4aW40U0lmTkJqNE5ZRmlCdUEyMHdGMmdHQzk4bkpTeHZtMlk0UXc5dHljMWI4dEdfTkkzSTc0emtSd2FLODFkQ1pweDBORDJ4XzVha3BKWHlOOFVpRDB4Z3l0M2hMdHhUTXBqQ0U3VzlKMFJwOHh3ZEtEOV9iN21UajhhSXVudHZSVXRVMjR3NWdQRUlrSGVTSmNmVGpJelZ1Y2o3aFNrZ25McGFBR25SVlMtVU9mZzNzOXRDZ3VJYVg2NmJoOUVyNmZCT19sT19SWDVwWWh6TlZraTJJUUZTdmJPREZZN0twVHJDUjhObFkwcHJYM290U2Q0UlBhT1lidTlxMHdYYURXSVNNdWFhWnJFVDl2SXQ0SFhJWFNwQ1R0LWk3eHJVV0xFSDZvVEdDZ294Uk5qcXV6Qm42ekZENTFTSklDQ3V4WjFLMkZsTS1Nc2Z1YWFONWt1TGxic0FKeENiSEM3VGE4TUJYLUtlcGdSUG4wZlp1ZlZZQW45aThNcGJqaHRXcHNsanRlTjI2Uk93UEhkV2tTZ3gtb0hNdHNaYXBhQ1BUeXlnd09FbG1OOF9RUnl3UDdabkhYYVRYQWFFM2o1Vm15cC1SZ1VHQUFlMnc4dnI4THFjQXZFLXh4M0ZVQlItZnc5M0NWSVRnRlRjMEpSUGtGREk3QkFYR1ZacFd5LXhhZ3I4VElBSVYwTDd1U0ZxZk1zdUVzOTgwNFFocU4tSkRGVlZ3czhESy12ZDRZN3ZZS3UtYVp5VTRoOXA5dm54LWN1aWxMSGhzbmdGNVlaczNZX09GRUgxOVN0RjJHLUJmc3ExR1VNVVRWNmdhMnJyMUpGdjlmOTR4eHhKTW1ScUc3Ri1YSDRXQlBjRHpqRnVGdzdBNFNubEt5d2xHRGl5ZmJjeHNyV3FiMDF2NWhZbmswZ3lySm04VzZGSlo2ODV0eWFmd0QzZXByWUNUM0tIMjJJelcxbHZVOE9jaTlGWGgtZ25iMF9kR21wRndlazduQklpdWV2ZjdaNjJqV2Y4MnFnNHJDYWtobHh5MHFwVUR4WWc4U0ZNV2NXUlMtcmk4SXEwWUxYT3F1SVFhdmVjb1AxTUZYVm5ZRFJpem9OSXF1V2w1TWZIc2hJV0FkM3U3djBqc3JGZXdpbWZ0djdvWVJheHl1dlNEcWFrNlVqbnk5akczMjdkQWFXbmFqWGhvcklDVGtNWXpmRVN5ZC05RUVoSXMweE13NVZXMW9RbHh5M1JfcURYRlFWQ2RRMjNBNXl6LXlJYVE4emo2S1lMdU15X25jZHlKY2FhMHpiajNjY0hhUngyOU5Hd1FnUHFBTk5laVBhejZJNzJVNFhRTTVoWE5sOE16THZZNmt4WUstenF3alp3RDFmRUVDcjBCUm9TS3NqOUFrNWdMV3ZFZ0c5RlF0ejMyVVV2eC11eS1GU0VZOGdiQ3NoTkMxbFF6a2dWbTR3MXNDcEF0Q1NsVmo4Yjc5dnFkSkVkQWFFbFREZUkwaUYtQ0VSMTRMeHRkWFYxQXB4eVo1QVhhazZkNjlkN1ppenExZzNlcy10RlJ6akJjbmVibkQwYlM3ZlZSc2xPNEQ5N2xqdjF2WjZ1Y3JnN3dwMDhySEtzTUxMZnZRR3RCTjducjg5WlhNWlJuYzNTN0ZoMUttNXQ2aXJlTjczUW44b1dZNUI4UGtOMWZyWGdCcHZhS1ROeFI0VDh3Wkcxd1ExU25TcWpGbUVwZzVxZTlFdHNMNDBuX013Y0lDYjdmd0lGbC1yNjRlc09rVGJ2OTV4aG5FVU8xYWVHeFNKeDRHaF9hTnVVMENscFEzOFlTZW84ZG0xTW1ROGs5RlMxaVY5MmtyWEVQY0NoWF9jbUVhUTBYbTBNekhhSWR5UEJMZ0c0QnZLSGZybVNSU1hWTjEtSXphSGFxLWg3ZXphRi1CcjNqWEJFTE55ZUJLU0dNUnE2NWVCdEdpUDB3R0NQQXEwc0pmN1VyczVuN1liWkNsYW84dF9Dbm9RWUxnUGs0d1FPaXIxbTl4WUNPSy1XOWoyVlBOVEJNVFlmbGJPcjFGVHZIYzdUZDQ0Yk9GVmNoczJ2RFAwSlNVaVYwemwzcDgyVVdra2kxdXdMeWlYUEhrblRoX01LSGw1Wi1ERUdxd1J5N3p3OHRkZ0k0dFQ2VDIyQThGajZyWEU5eEVIYW5yd3A5bk1kQl9WR0JRZXZiRzd0dWdyWVVIODJsUTRYSUhEVkZYSnNvYmNPWFVPLVJqX1Jla0dkUnIzejc5ZzE0d0t4T2RxVk9CRXBUTjNfdXRhaFlNWjFmaHI4NXRTMG80ZG0yU2x3Y0RDZHBYS3U1M092Z19kejJMaVpfTHY3a1pWSUl3ejU5d0t4bnFTOUlDem5qZWlZUVppSm1EazU4aFIxNTV2dnlFUTVSaUZSSFE0N3ZXUmxnUnluaXB2cWFCR2tFeHQ0QVhCUXNNVzNlNmE4RFRfcWxsSEpfMTREbXFJbFBTX0NrajQxc0UxVnNVRXVlUjlFUDVzcExoNlBneVpHY3F3RHpjajM2bXc4RlZFZnlXQk9aWVRpWnNGdGVaeTVZNXhyb2IzSHZXVkZXYjA0UHhGam96WnlMX2ZVM09RM3ZBVElNTXgwRURSV1NKaVhTdkNfRTBxZmNtYzB1eXJ4by1mdGh4cUItVGlqVXlyOEJaMHVOMlh2dWVyV1VJTVN4WW53RFdHREE2dzNOd3pQd1ZtOWNlel9qR1JfdzlsbDNDTkxOeEpRMVBma2UyLXJRREotRi1GSGFfOTFHNEZiRTRsTlV4d19ZVmwwSWJYYnl2SGJqd0M0V09yNmFTZl83N2p1STZydWdIRVhzMTBXN2FrVlFsVG5zb0JVcU81YjJYSXJKbGpWREJBNEhjcFRYQVpJSC1uTkFrS0w3ajU4aHIxUVhaU0dsTms2SnJEZEEtaEtDeVhtY1RxY1JKQ1RVdGxtYnI0dWFYaEsyVWNhQnlBUUJxYzU4cF9kdHpSNkdobmZBXzNuLTY1ZkNjdkFLUUhXYkZVTW81a25NVFQtVHUzZXNYc3hMamxNVW5QY0pFeHg4UU8yT3lPZU5hVUpIeWh3dUJRS2duS2ZJSmw2ejBhZW5sdnVIZGVvbkdvWmVFak13T3Z6TjBaQ2NlN3dmTnF6SnhGZ1BFNkFGeDIzM3NmekFDMHhLaS1MN29UdFpubkhzZkN1WFZRYjhYUHJVc3hqTnpnM0VxZC1ReE9QamVyTUsxZERTal9WUG40Sm4tc1RaQlptT09fcDZGUTF0cUN5aGw0Z1RPVnNuM0FBdGdsRHpRR3BpT0ZyNFVDVF9yTy10bnVJZ2Rtc28yMlpTdko4aXVmRlpGUHRDNUNSOGNjQ19weFNRX1YtRFNqSThiNTVMdThBOFEtZEFRZ1JZdDBFaGE1NV9rTHRScGdieVZBc0N6b0oybzdsTGNvSWhKOFJrUGJ6Yl9RNWJwX2pHTnhlLXpsVHNmTlFJcEVQbEFYZ1ZtaXpGRGo4SkpsTllyN3lRV24tdkxNUUR4NlBUZ29rdnYtX01iWEF0S3B0Y1pUMFJxVk0zd3JoRGx4VmpBUUpZcTFYbVVTcFBUdTRLb3FDNWJwQWFOYjIzYV81dEZNLWtvbVVCa2xMUHpJVWNtQ180R0pZNHh0bWhFSXZxUDY1cU9mcHlzNjJyc05pdWdzZ1B6LWNXcXhJX1k4T1pabDFxLXV0cnB4NzNZMC1ZVlh4Qml3R25HVGhTY0t5RDN4YVFhYmtXcFNWZUotRDZ1ZWJyTlhGQlB5RXpBZmRvR2JBOW5JbWpvNEpCaGwzd2JETXdkMkh2Vmk3enIzZkhpTmZUemljYUY5NDZnZloyblpoWkpwdThOVVR5SVV1M1lsTDNwUzhlNThkbHRkOFAzaURnMEtMX0thcFNVb3lBdlllRGZjM21MUm9US1JsY2d4SlRZRkh6dnJ5ZjVYZ2doWFVLa19weU52bkkwYlVlc0NkMXhDNVoyYWlDTEczNVRrVERTbHVhY3JiUHV4bzFfR0UxN0JDMVBZeXhQYmNKTUE2ZG0yMlFoZ2xJTlgyYkdzQkJEQXBnZnFSZnBaOXRPUWJkTkdGTUtGdmhoM3hnc2dYWGo4eDl2WFRmVmFvempSejdPY3NLSXdFc0VndUswSFhxaHF0Q1FSUXRvX1FrUWZmaVFOVUI0NVRCSDRKMW56R01oVE1KMThhTEszaWhmSVg4SmljbUtRRVF3LXFiMkw3NjZPdG1VZ2JFR285MFgtWGpxUmV0c0gyc2dkYXhoQWpNZHJMMEpuRW5Id0hUZEZaZzd1d3dNSGtycGx1MldQTlNJQ0hKcjkwd3p6ZHFTZmE4R2RzN3FveEdfMXBWSXpqdmxOMURZb3h1TFlIa2VpdW1tS0U4VmdaTG9lOGQ0VDNJQXZNQ2lESTA0TzBjd2FKNGRMSWFNeTgwYl9XRENLVTBMZ01zYU8tYlpBZWthcDBGX1YxNGl2cGtaSnRkeG1pWnJRTVJSSVdDNHJGRmloOEFpamppX1FrblpFVUc1RS1xQkhIeF80bkRweXJ2SHRZcElMZFNxVEdQa19BT3JVc0hfR3h4bFlRNnUtX2VocnQwalItQmZmcm43em81YnZYRGJiMHpJSVFzSDVQdURPaU5WcS15eTBXX3QwdWJJVExBZmlsQUcwWFJ1SXBCNVZPSDZleW5vOHNVNVIwcTh5TjUwTWZNOW81ekpIYWp6QnVuYTdFVUt6TlR0OXRGSnRZLURrai1DdnhVOXJKcjhoN25SWlJQYjN1SGQzY1pmR0RUQjJiZHkyVkt5TE1BTEd6TWFtbzRmTDlwTTVvV2daOFh0WFM3enU5eDlPWmx6RnVNZFNQTkdoRTEweEhVc3J0M2ozaEtqMnd5eHVuN0pQY1JDb1dpR3oxT0ZiZmMxVHhHcmwyM01EaS1ieUthOGN2ZEgtQzFfOWNhOUlHVkxsNHpOaGtCWTktTkdGQkszdkRhTTNCZHVrZExWdENxNjVXWTdyeS1xaWQ2NlhNOFo5UTBNMm9XSFgyOHYxdUh6eHpaMlZDTkJGODZGRFVOVkdqV04zd2hGc3dfYlFZVE1SMWUxc2pjM0VwSXgtYzAyU1Qxd0p5U1l6TXR2Wi1sa1E2SnQ1am5CNjUxUU9hc2N6MGt1Q2JCcGdpakZ5YXRtd0lYbkFyd1dVWVhvaFZPU2hYVnh0cTMyakR3bkRXcVp5SERNdzBkZ3N2TkxRRDQ3SWFkRGFVa3hldHlyWVdOTkNLWktpbXczQ3VYRmtfY19IbGJFeHk5aUVLUllNaU5vQzNwSzV0VVdudzNXbUQ4bXZaQXRSNW9sSWdZRXB2TlR6bnp5Z2xJUUI2cHVhYkdPM2p5dTA4T2kwRFZkRll3V1VhbjF4RUJMdEhyYnd2WWoyT2hFdlp4VElNX0I3WE1MYk03MGxzWlUyNEM5UDlhRHg5VTBzQjlKSENxRVQtWThxelRFSjZXLVR3SU82dHZSMFpPeTdxRkJTbjR1WXZ0NndqM3o3a2hiZnpvR1gzSjYyaXptbVd3eld6TVVqQzUxRHYzX3FEOC14ZVhKMmV6MlVjcmpBN3ZkdEUtS2hmSmtwYXJPVDdtUHVIQWxoMnd1MVR1SVRKR21fX1NxSXNFTFA0MzZvNTF3U2EtQTdDd1lEUlRKWU5NTzdhczV6ZGNEZWdLMWZNbUVrTGdqR3RINUQ3OE5XM3RqS2p1WGtMdFFRcHJXV0xBc3RyRkFxT2hkdE5rU3A5LURrQi1zc3laSk9hVVlfZG9saWhvSDdwdURJVktpMmY4dm9fbFdHME9hSHB6Z2hjU1A3Z1dFeVljV2FiUDBQX2l4dF9uQ2RHTnZYa3BUWmQxeU5qNF9aTTluTHBjYVdsUWNqbnVoNmtJVjViQW9JODNvQ0tOVUFUcDRRZjhPUzdXNTVBdkFvRmxWSTJ2M1duSzE0bE45cFJ0cjNQQmpWSVRDYzVMbS1mc0NJcUkwWE80MXhRTlhIQkh2S1c5cGhaQW10NVZkZzc3Z2RKNnFTY2YyVWIxR1ZpcXdtV25DTlVTZUdpNlhJaUJxWFU0d25PWDhYUVdiOVRiRmJVY2lCV0pxb1kyT0hhWWtEQzdoU21uQW9tRlJMVXFsQkJ5QXprN1hvNXBNX1Rpb01rXzlMbG9Bc2Y4UmRhcUk0MkNhZy1wS2xVRWgxZkNfQ2F2dVdPQ0FGNXIxQjFveHAzSkJjbWJEM1EzZ2otb2RyQ3c2Rk9hS3BpZzRrZTVzUG1KUThYNG9JT28waHFuMWtCLWt4OWVCVVpuWmtHald0RXZvbjhWTnZOMlo2UjJ6aGwtTjQ4Y2ZxMnRkeW1CQ3BJbDU3dmJ5R0txQ185MmZUWmthYnVTUV9pUDRVUkFhMG1aMUxmajhmQ0h5bUxDbmJWZFlsNnMzdDI1MkZXOVdFMkotTlpab1hmWFJIanRreVRGUG5TRGJKQU1Ra3ZtYU5OSUE5OW5kalVYdU5wd25GaTAtaGRxVkxUN3E4TURaU0xvc0RESk5SVVZXaFVIenpzcGNPTDBEamFWVFBaRGl6cnFfT0lidlJWeHphYUJxT0lVcjhXeGJJYjhLMDNmUVBiVzk0SDhEaG9RWENDZ1draVlEMHFnTTFXU0lPOEY2TV9KOElyRkVfZUEwWGd4eHhOamlJVm9abUZXUWkwWmxjaFc0aUpNSHhMU1pyT0JqaE9YSkt4ODNVdm56ZWd2VUktLVRnVEJBeF9TUFVtUWxST3cyS3RZX25GQmUtdmlPbWtKdng5cDUyZTg2LVMtZ2h6dzFuVFpHS21ERHlyc2loa3lSV2xhLVJUcGJpUVRwRkdSaHNIRVgyWU5BQVB0WDlDNDdoeGNjRFgyTmt3bUFHX2pyQWhpRy1BTTlkOUJqLXZUOVl4SjAxWUxhdldRVG9aMGNEU2pVZkxBNEdvS1hocy1VSkIzeVhVTmxINmd1eUsxUmtGdXlMU0hnZk02OUdNSm55SHFsNUpSeElmeVh6MEUyLUNoTmhpTjBLUmhraVY0XzhLNVczR1RKamdsTzdxQ0FaVG9WMjF4cU5seFQ5OEtRbUNoTFloSjNhWkR0YnM5enhJNjhwMFZJYmVCM0MtMi1nRnJUdFg1MGJObHdrWkhwMU1kYkttS0VIOU95WHdzWjgyOEhZU21TUGRUUGZ4MDdiMGdwbW5HdWlIaUtmdGN2TXZBMDJFU1BHOGFRMXJsdlhDUjBza0k3RHM4dFFkcURUUGJNMU5NMXhBQS1DcnRyOXB3VDJoVXNETHA1R2xjRVZSb3BoQWZIMmU1Z002QWNLWm1QY1p5ckM2bVFXTXl6YTdVQmpNV3gxOXgxT2c3c2RXM3UwZWFNdHFiNzMtbHppTFkzdWdaZi0zU1QxcXFwNEpFaGJCNkVQV010eEo0Rmdxd1hmeDN3NXdNQUxzQVBKUzV4WEFmNnpRWlBudkRFb05VZzQ0Ry16TWM5ZUU3aDRBcDRxWmNoaEpMWXJwM1pCSTVNeGJYSjQ0Y3k1RmRLRlk2NzBtdlAza0hPUm4zMmM2RjFxeGFXNmVzWE1vU2E0NXBYRkdBSlpfbXJXZGgtOTktUnlsWkgybFoxYURfQ2xIYjN3OVFkZHd3cWc2LTVJZ25BSkk1dGNYTFRRODFBNTVzVXZNMXVNS3R3U3JYQ2xyZUJBOHZRb1dRY0ZhdTh4am10bVBTR2VJdjRKYWdOUmplc1R5VFltZkVDTldhclYtODJXOUZOQ2pSbkNZOFJoaE5BOXJMbVJXaTFHY3lIdVRnYVVadktOU2c4QTBNZFBVRThaMDlmbERReXo4OHdjai04RFZrWUVmNk5BcDZfZE54SnQyRm5pLVBFOVBWOW5TaTB5Vk9MTEZEaktuNUlFYXlNWC1LUFpKa0JhV2lxS2hyRGF3ckJmeVdqY2EwNWNIcjlGcVdackJ2dWVTY0tqWFpOWGxubVVxa0hWQVZNQ3pXTklqYTN4NWx3OF9wTVk3dTU4RG42MzUtdnJJTWRsU19VVlZ2alBwb18tZWIwNEJjeXFxSVpmbVdpc3hnZDhmcUpqMXNPeVB0eWZEdjZFUmY5dVZmUGNlNDRxM3d6NmJSMUZRZ1VGQjQwUFJwLTNNYzh4V1c4dkdYQUxnc19mZjlUcDhZcE0xV1E1dUZueWpQRUVodDJHbG5tck0zbFJtbS03R3JKUk94RXRweWQ3bXV3OUs0Ql9IdjlHTUpuTTNjNjE0cTJQSUhQRmlmYW1FZUR4ajNHZ1hEVGN5dm9FUjNHd3hiTkZsZWUtNTM1dXNCa0RobzNZMzJnOVE5U3AwdWllNHBRdDFSRW51WDB6dHQ4cW14VzZ0azFIS3pCbnVsMXNCekktNTVNSEdlV2VsT3h0emRZUjVWb2M1TFRjd05GdW1Pb2J2X1NhdjZoMHJId054T0tVYUpTQzdNQTFmaHAtZXhlbGRsYXV0S19BZFRUdGF5Q2RJbzB6VmdPRTlnSy0weldIMV9QTTNzUXlPNXdFZTlKYVJqVFZjQTBhZkxodXloUFlvdUUwamJxVFdST004Y0FBOTlUR1REOTRqaUVoZ3NvcndvOUFRZy1uTDlzTU9uLXdkczNESGpNbkwzaDg3TmpYUzhIaEw4WmEtam1oZVVHWDhnaXhWSkRNaFRiVWdaVW1oU244WUpuT0pwUjNBMmRvanFCX1ZoV0ZfVTZPc19rZjZ0eENSUGZHbE1wYVlYTHh6dzlJZDFpUUhqR3d2N3pXRDlSdV9OM01YQjl5U0otMmYwWXlBT3lnczBBSWJMVGFrQlo4YlN6VTF4Y0hnS1pXMU5xT3VldHNYX1ZFWmVqMlRQOEtlMEFzUV9wZHRlekFUaE1wODdmeWxmcC1BUnNPZDdBSnphZkZmdE16LjF2VjlGdEFWZnhhRHB4WndmMWhnVkE"})
  .query(true)
  .reply(409, {"error":{"code":"Conflict","message":"Conflict while restoring key https://keyvault_name.vault.azure.net/keys/recoverKeyName-canrestoreakeywithagivenbackup-/2ab416ead51543578d175da0e549b96b - key already exists or concurrent access"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '256',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '2b35b9d5-e10e-4835-98a9-92393e2f297d',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:37 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .post('/keys/restore')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '99a127e8-29d8-4f0d-8028-cd48d5fb4f26',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:47 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '737b111c-778d-4fdc-aaf9-0c251d0a0700',
  'x-ms-ests-server',
  '2.1.9987.9 - NCUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHDwAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:34:48 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:34:47 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .post('/keys/restore', {"value":"JkF6dXJlS2V5VmF1bHRLZXlCYWNrdXBWMS5taWNyb3NvZnQuY29tZXlKcmFXUWlPaUkwTXpnMVlqQTNZaTFrTlRRM0xUUXlaVFV0WVdVNVpTMDJNVEJrWXpNNVpHWmhaamdpTENKaGJHY2lPaUpTVTBFdFQwRkZVQ0lzSW1WdVl5STZJa0V4TWpoRFFrTXRTRk15TlRZaWZRLlBtTGtHQXdEZkxzUW5BWmx1YWZvSFNSUWVWcXlkbmVKb0dUdlpwYjRmY3JsdEhjcjQxR19zWnl1MFQ2NDgxYW9QRjRJVHFWTjZDbW1QaDNJYUdqWGhxSmhIeDVOV2FZOVh6aG5JMzFDdDh1by0taklISzlWMjIxZHI5VlNjUjE1OVRySW50aE9VR1FDMVlEcTNRT21nX3VpX3NVOFczcmFTQUJQVFlWa0YxVERENmppa2RJbHZzRHJscGRpR2daMVNvLVBOMF9fRUZSMnNpb3NqS254SGllQnJ4M1RpdkxaUDhReVkzejZLZmVoaG51dWk3VGRJdlNwdzRfT2lXWEFsV19qbXdtOV9PR3JUdWxfNGlCVlJwTW9oNTN1eFVJUDM5UDZ4SDZyb3JuZ1FaSWFYZ2NaRHM4QUJWUHNjQkJTWFNSbXhXU1hQSXZYby14ZmRsdlFyZy5ZY3NzekZhQ0tCZVE4eGF4WERxU1RBLlZzcFdfNVlncWEyc3NUakpKTzl0TlZIc2VuOHlEdGhQU0tUNDd5Y2J5Z3R6MlAzQ3pVZlkzRTlyeVNISEVxNmk5RzQtNDR0WFdxVktOaFBtWkxWdWs5WXBweDlmNGh3NXhhR2NtMUZFdW5GdkxEdER1VHI3M19nUkJkb0lZVUxESldFM1FjMmpUNDRrd1E3eEFzVGJmNmhhVXRVRVB0OGhncDJlNERHM2Z1Yjk3b3lvVEVMZTZUSUgzT2Qwa280NlVaSTdOdXZlWTlIQXBlbnB1S1lYOUNDSFNBemJObU1BZU04UjhzNHoxak9PZURmRnVZMkN5RnBYN2R3TzlOUVUtN0duNkJ6YzRRWExIODJOVy12RmExUzlrT0YxLU1aa1lpMVFJd2xLbkY1OVJVWkZuNXVFdUlUS1J0dmF6X1lPUTltZmRmNm9TLTBGR3VBaVpNUnFWV1BiQjdSSEFOUzFOQk81bmZ5UUNIZWl0MzZtTnZFakpYQmVnaW9HTVlyNHpsRllYX1prelF2TXRITkJQUWQzSlE5M0pPWE1zaXd2WHQxMVIzZV9aT1NFbE5BbWEyYS1YOGJXZ0dsbDhZV004VDFpS2ZOTDBlYXZUbHNQWTQ1X3RzUHlOaFdIYlFjT1lObXo2bk4xQzVHd1dUVGd6c2NzdExSZnFKRldTQVNtdlNUUjNKYVpvSVcwMW9rT1g1MXFtczktNjRRd2toZFc2cGFKbm9XQUdiYzN4aW40U0lmTkJqNE5ZRmlCdUEyMHdGMmdHQzk4bkpTeHZtMlk0UXc5dHljMWI4dEdfTkkzSTc0emtSd2FLODFkQ1pweDBORDJ4XzVha3BKWHlOOFVpRDB4Z3l0M2hMdHhUTXBqQ0U3VzlKMFJwOHh3ZEtEOV9iN21UajhhSXVudHZSVXRVMjR3NWdQRUlrSGVTSmNmVGpJelZ1Y2o3aFNrZ25McGFBR25SVlMtVU9mZzNzOXRDZ3VJYVg2NmJoOUVyNmZCT19sT19SWDVwWWh6TlZraTJJUUZTdmJPREZZN0twVHJDUjhObFkwcHJYM290U2Q0UlBhT1lidTlxMHdYYURXSVNNdWFhWnJFVDl2SXQ0SFhJWFNwQ1R0LWk3eHJVV0xFSDZvVEdDZ294Uk5qcXV6Qm42ekZENTFTSklDQ3V4WjFLMkZsTS1Nc2Z1YWFONWt1TGxic0FKeENiSEM3VGE4TUJYLUtlcGdSUG4wZlp1ZlZZQW45aThNcGJqaHRXcHNsanRlTjI2Uk93UEhkV2tTZ3gtb0hNdHNaYXBhQ1BUeXlnd09FbG1OOF9RUnl3UDdabkhYYVRYQWFFM2o1Vm15cC1SZ1VHQUFlMnc4dnI4THFjQXZFLXh4M0ZVQlItZnc5M0NWSVRnRlRjMEpSUGtGREk3QkFYR1ZacFd5LXhhZ3I4VElBSVYwTDd1U0ZxZk1zdUVzOTgwNFFocU4tSkRGVlZ3czhESy12ZDRZN3ZZS3UtYVp5VTRoOXA5dm54LWN1aWxMSGhzbmdGNVlaczNZX09GRUgxOVN0RjJHLUJmc3ExR1VNVVRWNmdhMnJyMUpGdjlmOTR4eHhKTW1ScUc3Ri1YSDRXQlBjRHpqRnVGdzdBNFNubEt5d2xHRGl5ZmJjeHNyV3FiMDF2NWhZbmswZ3lySm04VzZGSlo2ODV0eWFmd0QzZXByWUNUM0tIMjJJelcxbHZVOE9jaTlGWGgtZ25iMF9kR21wRndlazduQklpdWV2ZjdaNjJqV2Y4MnFnNHJDYWtobHh5MHFwVUR4WWc4U0ZNV2NXUlMtcmk4SXEwWUxYT3F1SVFhdmVjb1AxTUZYVm5ZRFJpem9OSXF1V2w1TWZIc2hJV0FkM3U3djBqc3JGZXdpbWZ0djdvWVJheHl1dlNEcWFrNlVqbnk5akczMjdkQWFXbmFqWGhvcklDVGtNWXpmRVN5ZC05RUVoSXMweE13NVZXMW9RbHh5M1JfcURYRlFWQ2RRMjNBNXl6LXlJYVE4emo2S1lMdU15X25jZHlKY2FhMHpiajNjY0hhUngyOU5Hd1FnUHFBTk5laVBhejZJNzJVNFhRTTVoWE5sOE16THZZNmt4WUstenF3alp3RDFmRUVDcjBCUm9TS3NqOUFrNWdMV3ZFZ0c5RlF0ejMyVVV2eC11eS1GU0VZOGdiQ3NoTkMxbFF6a2dWbTR3MXNDcEF0Q1NsVmo4Yjc5dnFkSkVkQWFFbFREZUkwaUYtQ0VSMTRMeHRkWFYxQXB4eVo1QVhhazZkNjlkN1ppenExZzNlcy10RlJ6akJjbmVibkQwYlM3ZlZSc2xPNEQ5N2xqdjF2WjZ1Y3JnN3dwMDhySEtzTUxMZnZRR3RCTjducjg5WlhNWlJuYzNTN0ZoMUttNXQ2aXJlTjczUW44b1dZNUI4UGtOMWZyWGdCcHZhS1ROeFI0VDh3Wkcxd1ExU25TcWpGbUVwZzVxZTlFdHNMNDBuX013Y0lDYjdmd0lGbC1yNjRlc09rVGJ2OTV4aG5FVU8xYWVHeFNKeDRHaF9hTnVVMENscFEzOFlTZW84ZG0xTW1ROGs5RlMxaVY5MmtyWEVQY0NoWF9jbUVhUTBYbTBNekhhSWR5UEJMZ0c0QnZLSGZybVNSU1hWTjEtSXphSGFxLWg3ZXphRi1CcjNqWEJFTE55ZUJLU0dNUnE2NWVCdEdpUDB3R0NQQXEwc0pmN1VyczVuN1liWkNsYW84dF9Dbm9RWUxnUGs0d1FPaXIxbTl4WUNPSy1XOWoyVlBOVEJNVFlmbGJPcjFGVHZIYzdUZDQ0Yk9GVmNoczJ2RFAwSlNVaVYwemwzcDgyVVdra2kxdXdMeWlYUEhrblRoX01LSGw1Wi1ERUdxd1J5N3p3OHRkZ0k0dFQ2VDIyQThGajZyWEU5eEVIYW5yd3A5bk1kQl9WR0JRZXZiRzd0dWdyWVVIODJsUTRYSUhEVkZYSnNvYmNPWFVPLVJqX1Jla0dkUnIzejc5ZzE0d0t4T2RxVk9CRXBUTjNfdXRhaFlNWjFmaHI4NXRTMG80ZG0yU2x3Y0RDZHBYS3U1M092Z19kejJMaVpfTHY3a1pWSUl3ejU5d0t4bnFTOUlDem5qZWlZUVppSm1EazU4aFIxNTV2dnlFUTVSaUZSSFE0N3ZXUmxnUnluaXB2cWFCR2tFeHQ0QVhCUXNNVzNlNmE4RFRfcWxsSEpfMTREbXFJbFBTX0NrajQxc0UxVnNVRXVlUjlFUDVzcExoNlBneVpHY3F3RHpjajM2bXc4RlZFZnlXQk9aWVRpWnNGdGVaeTVZNXhyb2IzSHZXVkZXYjA0UHhGam96WnlMX2ZVM09RM3ZBVElNTXgwRURSV1NKaVhTdkNfRTBxZmNtYzB1eXJ4by1mdGh4cUItVGlqVXlyOEJaMHVOMlh2dWVyV1VJTVN4WW53RFdHREE2dzNOd3pQd1ZtOWNlel9qR1JfdzlsbDNDTkxOeEpRMVBma2UyLXJRREotRi1GSGFfOTFHNEZiRTRsTlV4d19ZVmwwSWJYYnl2SGJqd0M0V09yNmFTZl83N2p1STZydWdIRVhzMTBXN2FrVlFsVG5zb0JVcU81YjJYSXJKbGpWREJBNEhjcFRYQVpJSC1uTkFrS0w3ajU4aHIxUVhaU0dsTms2SnJEZEEtaEtDeVhtY1RxY1JKQ1RVdGxtYnI0dWFYaEsyVWNhQnlBUUJxYzU4cF9kdHpSNkdobmZBXzNuLTY1ZkNjdkFLUUhXYkZVTW81a25NVFQtVHUzZXNYc3hMamxNVW5QY0pFeHg4UU8yT3lPZU5hVUpIeWh3dUJRS2duS2ZJSmw2ejBhZW5sdnVIZGVvbkdvWmVFak13T3Z6TjBaQ2NlN3dmTnF6SnhGZ1BFNkFGeDIzM3NmekFDMHhLaS1MN29UdFpubkhzZkN1WFZRYjhYUHJVc3hqTnpnM0VxZC1ReE9QamVyTUsxZERTal9WUG40Sm4tc1RaQlptT09fcDZGUTF0cUN5aGw0Z1RPVnNuM0FBdGdsRHpRR3BpT0ZyNFVDVF9yTy10bnVJZ2Rtc28yMlpTdko4aXVmRlpGUHRDNUNSOGNjQ19weFNRX1YtRFNqSThiNTVMdThBOFEtZEFRZ1JZdDBFaGE1NV9rTHRScGdieVZBc0N6b0oybzdsTGNvSWhKOFJrUGJ6Yl9RNWJwX2pHTnhlLXpsVHNmTlFJcEVQbEFYZ1ZtaXpGRGo4SkpsTllyN3lRV24tdkxNUUR4NlBUZ29rdnYtX01iWEF0S3B0Y1pUMFJxVk0zd3JoRGx4VmpBUUpZcTFYbVVTcFBUdTRLb3FDNWJwQWFOYjIzYV81dEZNLWtvbVVCa2xMUHpJVWNtQ180R0pZNHh0bWhFSXZxUDY1cU9mcHlzNjJyc05pdWdzZ1B6LWNXcXhJX1k4T1pabDFxLXV0cnB4NzNZMC1ZVlh4Qml3R25HVGhTY0t5RDN4YVFhYmtXcFNWZUotRDZ1ZWJyTlhGQlB5RXpBZmRvR2JBOW5JbWpvNEpCaGwzd2JETXdkMkh2Vmk3enIzZkhpTmZUemljYUY5NDZnZloyblpoWkpwdThOVVR5SVV1M1lsTDNwUzhlNThkbHRkOFAzaURnMEtMX0thcFNVb3lBdlllRGZjM21MUm9US1JsY2d4SlRZRkh6dnJ5ZjVYZ2doWFVLa19weU52bkkwYlVlc0NkMXhDNVoyYWlDTEczNVRrVERTbHVhY3JiUHV4bzFfR0UxN0JDMVBZeXhQYmNKTUE2ZG0yMlFoZ2xJTlgyYkdzQkJEQXBnZnFSZnBaOXRPUWJkTkdGTUtGdmhoM3hnc2dYWGo4eDl2WFRmVmFvempSejdPY3NLSXdFc0VndUswSFhxaHF0Q1FSUXRvX1FrUWZmaVFOVUI0NVRCSDRKMW56R01oVE1KMThhTEszaWhmSVg4SmljbUtRRVF3LXFiMkw3NjZPdG1VZ2JFR285MFgtWGpxUmV0c0gyc2dkYXhoQWpNZHJMMEpuRW5Id0hUZEZaZzd1d3dNSGtycGx1MldQTlNJQ0hKcjkwd3p6ZHFTZmE4R2RzN3FveEdfMXBWSXpqdmxOMURZb3h1TFlIa2VpdW1tS0U4VmdaTG9lOGQ0VDNJQXZNQ2lESTA0TzBjd2FKNGRMSWFNeTgwYl9XRENLVTBMZ01zYU8tYlpBZWthcDBGX1YxNGl2cGtaSnRkeG1pWnJRTVJSSVdDNHJGRmloOEFpamppX1FrblpFVUc1RS1xQkhIeF80bkRweXJ2SHRZcElMZFNxVEdQa19BT3JVc0hfR3h4bFlRNnUtX2VocnQwalItQmZmcm43em81YnZYRGJiMHpJSVFzSDVQdURPaU5WcS15eTBXX3QwdWJJVExBZmlsQUcwWFJ1SXBCNVZPSDZleW5vOHNVNVIwcTh5TjUwTWZNOW81ekpIYWp6QnVuYTdFVUt6TlR0OXRGSnRZLURrai1DdnhVOXJKcjhoN25SWlJQYjN1SGQzY1pmR0RUQjJiZHkyVkt5TE1BTEd6TWFtbzRmTDlwTTVvV2daOFh0WFM3enU5eDlPWmx6RnVNZFNQTkdoRTEweEhVc3J0M2ozaEtqMnd5eHVuN0pQY1JDb1dpR3oxT0ZiZmMxVHhHcmwyM01EaS1ieUthOGN2ZEgtQzFfOWNhOUlHVkxsNHpOaGtCWTktTkdGQkszdkRhTTNCZHVrZExWdENxNjVXWTdyeS1xaWQ2NlhNOFo5UTBNMm9XSFgyOHYxdUh6eHpaMlZDTkJGODZGRFVOVkdqV04zd2hGc3dfYlFZVE1SMWUxc2pjM0VwSXgtYzAyU1Qxd0p5U1l6TXR2Wi1sa1E2SnQ1am5CNjUxUU9hc2N6MGt1Q2JCcGdpakZ5YXRtd0lYbkFyd1dVWVhvaFZPU2hYVnh0cTMyakR3bkRXcVp5SERNdzBkZ3N2TkxRRDQ3SWFkRGFVa3hldHlyWVdOTkNLWktpbXczQ3VYRmtfY19IbGJFeHk5aUVLUllNaU5vQzNwSzV0VVdudzNXbUQ4bXZaQXRSNW9sSWdZRXB2TlR6bnp5Z2xJUUI2cHVhYkdPM2p5dTA4T2kwRFZkRll3V1VhbjF4RUJMdEhyYnd2WWoyT2hFdlp4VElNX0I3WE1MYk03MGxzWlUyNEM5UDlhRHg5VTBzQjlKSENxRVQtWThxelRFSjZXLVR3SU82dHZSMFpPeTdxRkJTbjR1WXZ0NndqM3o3a2hiZnpvR1gzSjYyaXptbVd3eld6TVVqQzUxRHYzX3FEOC14ZVhKMmV6MlVjcmpBN3ZkdEUtS2hmSmtwYXJPVDdtUHVIQWxoMnd1MVR1SVRKR21fX1NxSXNFTFA0MzZvNTF3U2EtQTdDd1lEUlRKWU5NTzdhczV6ZGNEZWdLMWZNbUVrTGdqR3RINUQ3OE5XM3RqS2p1WGtMdFFRcHJXV0xBc3RyRkFxT2hkdE5rU3A5LURrQi1zc3laSk9hVVlfZG9saWhvSDdwdURJVktpMmY4dm9fbFdHME9hSHB6Z2hjU1A3Z1dFeVljV2FiUDBQX2l4dF9uQ2RHTnZYa3BUWmQxeU5qNF9aTTluTHBjYVdsUWNqbnVoNmtJVjViQW9JODNvQ0tOVUFUcDRRZjhPUzdXNTVBdkFvRmxWSTJ2M1duSzE0bE45cFJ0cjNQQmpWSVRDYzVMbS1mc0NJcUkwWE80MXhRTlhIQkh2S1c5cGhaQW10NVZkZzc3Z2RKNnFTY2YyVWIxR1ZpcXdtV25DTlVTZUdpNlhJaUJxWFU0d25PWDhYUVdiOVRiRmJVY2lCV0pxb1kyT0hhWWtEQzdoU21uQW9tRlJMVXFsQkJ5QXprN1hvNXBNX1Rpb01rXzlMbG9Bc2Y4UmRhcUk0MkNhZy1wS2xVRWgxZkNfQ2F2dVdPQ0FGNXIxQjFveHAzSkJjbWJEM1EzZ2otb2RyQ3c2Rk9hS3BpZzRrZTVzUG1KUThYNG9JT28waHFuMWtCLWt4OWVCVVpuWmtHald0RXZvbjhWTnZOMlo2UjJ6aGwtTjQ4Y2ZxMnRkeW1CQ3BJbDU3dmJ5R0txQ185MmZUWmthYnVTUV9pUDRVUkFhMG1aMUxmajhmQ0h5bUxDbmJWZFlsNnMzdDI1MkZXOVdFMkotTlpab1hmWFJIanRreVRGUG5TRGJKQU1Ra3ZtYU5OSUE5OW5kalVYdU5wd25GaTAtaGRxVkxUN3E4TURaU0xvc0RESk5SVVZXaFVIenpzcGNPTDBEamFWVFBaRGl6cnFfT0lidlJWeHphYUJxT0lVcjhXeGJJYjhLMDNmUVBiVzk0SDhEaG9RWENDZ1draVlEMHFnTTFXU0lPOEY2TV9KOElyRkVfZUEwWGd4eHhOamlJVm9abUZXUWkwWmxjaFc0aUpNSHhMU1pyT0JqaE9YSkt4ODNVdm56ZWd2VUktLVRnVEJBeF9TUFVtUWxST3cyS3RZX25GQmUtdmlPbWtKdng5cDUyZTg2LVMtZ2h6dzFuVFpHS21ERHlyc2loa3lSV2xhLVJUcGJpUVRwRkdSaHNIRVgyWU5BQVB0WDlDNDdoeGNjRFgyTmt3bUFHX2pyQWhpRy1BTTlkOUJqLXZUOVl4SjAxWUxhdldRVG9aMGNEU2pVZkxBNEdvS1hocy1VSkIzeVhVTmxINmd1eUsxUmtGdXlMU0hnZk02OUdNSm55SHFsNUpSeElmeVh6MEUyLUNoTmhpTjBLUmhraVY0XzhLNVczR1RKamdsTzdxQ0FaVG9WMjF4cU5seFQ5OEtRbUNoTFloSjNhWkR0YnM5enhJNjhwMFZJYmVCM0MtMi1nRnJUdFg1MGJObHdrWkhwMU1kYkttS0VIOU95WHdzWjgyOEhZU21TUGRUUGZ4MDdiMGdwbW5HdWlIaUtmdGN2TXZBMDJFU1BHOGFRMXJsdlhDUjBza0k3RHM4dFFkcURUUGJNMU5NMXhBQS1DcnRyOXB3VDJoVXNETHA1R2xjRVZSb3BoQWZIMmU1Z002QWNLWm1QY1p5ckM2bVFXTXl6YTdVQmpNV3gxOXgxT2c3c2RXM3UwZWFNdHFiNzMtbHppTFkzdWdaZi0zU1QxcXFwNEpFaGJCNkVQV010eEo0Rmdxd1hmeDN3NXdNQUxzQVBKUzV4WEFmNnpRWlBudkRFb05VZzQ0Ry16TWM5ZUU3aDRBcDRxWmNoaEpMWXJwM1pCSTVNeGJYSjQ0Y3k1RmRLRlk2NzBtdlAza0hPUm4zMmM2RjFxeGFXNmVzWE1vU2E0NXBYRkdBSlpfbXJXZGgtOTktUnlsWkgybFoxYURfQ2xIYjN3OVFkZHd3cWc2LTVJZ25BSkk1dGNYTFRRODFBNTVzVXZNMXVNS3R3U3JYQ2xyZUJBOHZRb1dRY0ZhdTh4am10bVBTR2VJdjRKYWdOUmplc1R5VFltZkVDTldhclYtODJXOUZOQ2pSbkNZOFJoaE5BOXJMbVJXaTFHY3lIdVRnYVVadktOU2c4QTBNZFBVRThaMDlmbERReXo4OHdjai04RFZrWUVmNk5BcDZfZE54SnQyRm5pLVBFOVBWOW5TaTB5Vk9MTEZEaktuNUlFYXlNWC1LUFpKa0JhV2lxS2hyRGF3ckJmeVdqY2EwNWNIcjlGcVdackJ2dWVTY0tqWFpOWGxubVVxa0hWQVZNQ3pXTklqYTN4NWx3OF9wTVk3dTU4RG42MzUtdnJJTWRsU19VVlZ2alBwb18tZWIwNEJjeXFxSVpmbVdpc3hnZDhmcUpqMXNPeVB0eWZEdjZFUmY5dVZmUGNlNDRxM3d6NmJSMUZRZ1VGQjQwUFJwLTNNYzh4V1c4dkdYQUxnc19mZjlUcDhZcE0xV1E1dUZueWpQRUVodDJHbG5tck0zbFJtbS03R3JKUk94RXRweWQ3bXV3OUs0Ql9IdjlHTUpuTTNjNjE0cTJQSUhQRmlmYW1FZUR4ajNHZ1hEVGN5dm9FUjNHd3hiTkZsZWUtNTM1dXNCa0RobzNZMzJnOVE5U3AwdWllNHBRdDFSRW51WDB6dHQ4cW14VzZ0azFIS3pCbnVsMXNCekktNTVNSEdlV2VsT3h0emRZUjVWb2M1TFRjd05GdW1Pb2J2X1NhdjZoMHJId054T0tVYUpTQzdNQTFmaHAtZXhlbGRsYXV0S19BZFRUdGF5Q2RJbzB6VmdPRTlnSy0weldIMV9QTTNzUXlPNXdFZTlKYVJqVFZjQTBhZkxodXloUFlvdUUwamJxVFdST004Y0FBOTlUR1REOTRqaUVoZ3NvcndvOUFRZy1uTDlzTU9uLXdkczNESGpNbkwzaDg3TmpYUzhIaEw4WmEtam1oZVVHWDhnaXhWSkRNaFRiVWdaVW1oU244WUpuT0pwUjNBMmRvanFCX1ZoV0ZfVTZPc19rZjZ0eENSUGZHbE1wYVlYTHh6dzlJZDFpUUhqR3d2N3pXRDlSdV9OM01YQjl5U0otMmYwWXlBT3lnczBBSWJMVGFrQlo4YlN6VTF4Y0hnS1pXMU5xT3VldHNYX1ZFWmVqMlRQOEtlMEFzUV9wZHRlekFUaE1wODdmeWxmcC1BUnNPZDdBSnphZkZmdE16LjF2VjlGdEFWZnhhRHB4WndmMWhnVkE"})
  .query(true)
  .reply(200, {"key":{"kid":"https://keyvault_name.vault.azure.net/keys/recoverKeyName-canrestoreakeywithagivenbackup-/2ab416ead51543578d175da0e549b96b","kty":"RSA","key_ops":["encrypt","decrypt","sign","verify","wrapKey","unwrapKey"],"n":"1p3TTTTuumw5VM2jcfAFIPL1kEpBRPgUkVBAfPZtINRiCIF3ynkUdU2giFrc8I7pplnYBr3Odl6TZTfFo2JIe7lebSwKmaCEVUtRIaOlTly8eUCBNXsVcoqeCG493Z5XngMz-E5yTUQAVTXfPlixg3C7PJae-bU0vGCPKaGvwAl4IsMYjPVQaw6-G3gj28bNyi_BkaaR7T4SLq9OnpFnn6UQBQLmMbW3xgomHzb2Ho_y1AsBtW0Cqwh2Ri7DTTgfaTYa86Roig8ZVges0G21sVU2TCEPA6zy3LF2lhvH1fij3TuYXo474YiW27XScZr8iNr7YtVIjT2GcGfHSgG2fQ","e":"AQAB"},"attributes":{"enabled":true,"created":1580502851,"updated":1580502851,"recoveryLevel":"Recoverable+Purgeable"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '373f8832-e090-4e1d-8554-f56d3c9de452',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:48 GMT',
  'Content-Length',
  '715'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/keys/recoverKeyName-canrestoreakeywithagivenbackup-/')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'e0284c1e-e31f-46f0-86bc-80abb32e90e8',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:48 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '9b1fe44f-27bf-4a5e-8906-03b093600600',
  'x-ms-ests-server',
  '2.1.9987.9 - NCUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHEAAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:34:48 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:34:47 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/keys/recoverKeyName-canrestoreakeywithagivenbackup-/')
  .query(true)
  .reply(200, {"key":{"kid":"https://keyvault_name.vault.azure.net/keys/recoverKeyName-canrestoreakeywithagivenbackup-/2ab416ead51543578d175da0e549b96b","kty":"RSA","key_ops":["encrypt","decrypt","sign","verify","wrapKey","unwrapKey"],"n":"1p3TTTTuumw5VM2jcfAFIPL1kEpBRPgUkVBAfPZtINRiCIF3ynkUdU2giFrc8I7pplnYBr3Odl6TZTfFo2JIe7lebSwKmaCEVUtRIaOlTly8eUCBNXsVcoqeCG493Z5XngMz-E5yTUQAVTXfPlixg3C7PJae-bU0vGCPKaGvwAl4IsMYjPVQaw6-G3gj28bNyi_BkaaR7T4SLq9OnpFnn6UQBQLmMbW3xgomHzb2Ho_y1AsBtW0Cqwh2Ri7DTTgfaTYa86Roig8ZVges0G21sVU2TCEPA6zy3LF2lhvH1fij3TuYXo474YiW27XScZr8iNr7YtVIjT2GcGfHSgG2fQ","e":"AQAB"},"attributes":{"enabled":true,"created":1580502851,"updated":1580502851,"recoveryLevel":"Recoverable+Purgeable"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'd320c2c7-ff1a-4cb2-a2fe-70eb311010dc',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:48 GMT',
  'Content-Length',
  '715'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .delete('/keys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'acc459da-6a96-441f-a535-1c3df198da50',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:48 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '3e3db5e7-bf75-4127-9669-a3e85bd30300',
  'x-ms-ests-server',
  '2.1.9987.9 - SCUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHEQAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:34:48 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:34:47 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .delete('/keys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(200, {"recoveryId":"https://keyvault_name.vault.azure.net/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-","deletedDate":1580502888,"scheduledPurgeDate":1588278888,"key":{"kid":"https://keyvault_name.vault.azure.net/keys/recoverKeyName-canrestoreakeywithagivenbackup-/2ab416ead51543578d175da0e549b96b","kty":"RSA","key_ops":["encrypt","decrypt","sign","verify","wrapKey","unwrapKey"],"n":"1p3TTTTuumw5VM2jcfAFIPL1kEpBRPgUkVBAfPZtINRiCIF3ynkUdU2giFrc8I7pplnYBr3Odl6TZTfFo2JIe7lebSwKmaCEVUtRIaOlTly8eUCBNXsVcoqeCG493Z5XngMz-E5yTUQAVTXfPlixg3C7PJae-bU0vGCPKaGvwAl4IsMYjPVQaw6-G3gj28bNyi_BkaaR7T4SLq9OnpFnn6UQBQLmMbW3xgomHzb2Ho_y1AsBtW0Cqwh2Ri7DTTgfaTYa86Roig8ZVges0G21sVU2TCEPA6zy3LF2lhvH1fij3TuYXo474YiW27XScZr8iNr7YtVIjT2GcGfHSgG2fQ","e":"AQAB"},"attributes":{"enabled":true,"created":1580502851,"updated":1580502851,"recoveryLevel":"Recoverable+Purgeable"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '16509f93-5865-4afd-b731-dbd4850e665a',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:48 GMT',
  'Content-Length',
  '905'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'f9ed867d-23cb-4113-bc02-6c71771fe055',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:49 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '7ead172d-dced-4060-abca-56aa50445200',
  'x-ms-ests-server',
  '2.1.9987.9 - WUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHEgAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:34:49 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:34:48 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(404, {"error":{"code":"KeyNotFound","message":"Deleted Key not found: recoverKeyName-canrestoreakeywithagivenbackup-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '130',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '8ed8aeaf-0bcd-40cd-b5cb-877fe6b9d3eb',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:49 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '69023e73-9c51-4f2a-af00-66044f141619',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:49 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  'ffd38757-0723-4793-900f-ccbb8d8f5000',
  'x-ms-ests-server',
  '2.1.9987.9 - WUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHEwAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:34:49 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:34:48 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(404, {"error":{"code":"KeyNotFound","message":"Deleted Key not found: recoverKeyName-canrestoreakeywithagivenbackup-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '130',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '8a74ea7b-9ce0-46d8-a4c9-2ab6da8eb440',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:49 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '7e93857a-5295-4c91-adc2-9a27b94a0604',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:51 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '37782e69-c6b1-4bb2-b640-8a50a0310a00',
  'x-ms-ests-server',
  '2.1.9987.9 - EUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHFAAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:34:51 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:34:51 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(404, {"error":{"code":"KeyNotFound","message":"Deleted Key not found: recoverKeyName-canrestoreakeywithagivenbackup-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '130',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '809c9e5f-0da9-49ed-ac3a-3f889e604287',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:51 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'e1ae33fa-3274-40a4-bd02-e6002afba394',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:53 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '095f2845-2000-42d9-8f02-7d8fef000400',
  'x-ms-ests-server',
  '2.1.9987.9 - SCUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHFAAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:34:54 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:34:54 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(404, {"error":{"code":"KeyNotFound","message":"Deleted Key not found: recoverKeyName-canrestoreakeywithagivenbackup-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '130',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '56b47b6d-bfda-4403-afab-993c59fa2110',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:54 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '21e9ec7d-e74f-42e9-b3aa-9373b428010b',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:56 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '72784599-dddc-4ced-934f-334d47615300',
  'x-ms-ests-server',
  '2.1.9987.9 - WUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHFAAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:34:56 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:34:56 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(404, {"error":{"code":"KeyNotFound","message":"Deleted Key not found: recoverKeyName-canrestoreakeywithagivenbackup-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '130',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '7fd3d9f9-ca44-4cf2-9bc1-df4ca12c10f6',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:56 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '05528935-9033-4f84-9538-02f17796e4a2',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:58 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '4d7922fa-157f-42eb-bc55-6fa988cb0500',
  'x-ms-ests-server',
  '2.1.9987.9 - NCUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHFAAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:34:58 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:34:58 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(404, {"error":{"code":"KeyNotFound","message":"Deleted Key not found: recoverKeyName-canrestoreakeywithagivenbackup-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '130',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'a3cb8099-4cf7-4eba-9979-c1535bc43bff',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:34:58 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '124b1caf-7389-45d5-8ea7-8988c370aad5',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:35:00 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '72784599-dddc-4ced-934f-334d72625300',
  'x-ms-ests-server',
  '2.1.9987.9 - WUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHFAAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:35:01 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:35:00 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(404, {"error":{"code":"KeyNotFound","message":"Deleted Key not found: recoverKeyName-canrestoreakeywithagivenbackup-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '130',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '350a5351-42f1-45be-abe5-ae0433a4ed5e',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:35:00 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '87c4978c-f84b-46cc-a56f-502432dc66f2',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:35:02 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  'ffd38757-0723-4793-900f-ccbbc5925000',
  'x-ms-ests-server',
  '2.1.9987.9 - WUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHFAAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:35:03 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:35:03 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(404, {"error":{"code":"KeyNotFound","message":"Deleted Key not found: recoverKeyName-canrestoreakeywithagivenbackup-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '130',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '9956698a-9ad8-48b0-8b19-dcb86f941a4e',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:35:03 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'd07874c5-9ee8-41b6-9341-ae604839a40b',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:35:05 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '434fdd2c-5aff-40e2-83ed-d1cc12750900',
  'x-ms-ests-server',
  '2.1.9987.9 - EUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHFAAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:35:05 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:35:05 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(404, {"error":{"code":"KeyNotFound","message":"Deleted Key not found: recoverKeyName-canrestoreakeywithagivenbackup-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '130',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'ba11bb87-a736-40f6-a8d5-7eaf194db703',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:35:05 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '909ba4b6-94a7-4366-8724-65241a5e3eb3',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:35:07 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '37782e69-c6b1-4bb2-b640-8a501c360a00',
  'x-ms-ests-server',
  '2.1.9987.9 - EUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHFAAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:35:08 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:35:07 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(404, {"error":{"code":"KeyNotFound","message":"Deleted Key not found: recoverKeyName-canrestoreakeywithagivenbackup-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '130',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'a8de476c-2d10-4647-969a-2b09ae6a89e1',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:35:07 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '729d1501-06e1-4c5f-91fe-020247744e24',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:35:09 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '737b111c-778d-4fdc-aaf9-0c25aa0f0700',
  'x-ms-ests-server',
  '2.1.9987.9 - NCUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHFAAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:35:10 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:35:10 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(404, {"error":{"code":"KeyNotFound","message":"Deleted Key not found: recoverKeyName-canrestoreakeywithagivenbackup-"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '130',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '3f76fd63-745c-49fa-b03d-a55cba7bfa25',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:35:10 GMT'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '514e4c98-9da6-4ffe-a2df-f1e5f13b6cd8',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:35:12 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  '195b2c68-bf86-4ab3-aa15-61f95ed75000',
  'x-ms-ests-server',
  '2.1.9987.9 - WUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHFAAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:35:12 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:35:12 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .get('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(200, {"recoveryId":"https://keyvault_name.vault.azure.net/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-","deletedDate":1580502888,"scheduledPurgeDate":1588278888,"key":{"kid":"https://keyvault_name.vault.azure.net/keys/recoverKeyName-canrestoreakeywithagivenbackup-/2ab416ead51543578d175da0e549b96b","kty":"RSA","key_ops":["encrypt","decrypt","sign","verify","wrapKey","unwrapKey"],"n":"1p3TTTTuumw5VM2jcfAFIPL1kEpBRPgUkVBAfPZtINRiCIF3ynkUdU2giFrc8I7pplnYBr3Odl6TZTfFo2JIe7lebSwKmaCEVUtRIaOlTly8eUCBNXsVcoqeCG493Z5XngMz-E5yTUQAVTXfPlixg3C7PJae-bU0vGCPKaGvwAl4IsMYjPVQaw6-G3gj28bNyi_BkaaR7T4SLq9OnpFnn6UQBQLmMbW3xgomHzb2Ho_y1AsBtW0Cqwh2Ri7DTTgfaTYa86Roig8ZVges0G21sVU2TCEPA6zy3LF2lhvH1fij3TuYXo474YiW27XScZr8iNr7YtVIjT2GcGfHSgG2fQ","e":"AQAB"},"attributes":{"enabled":true,"created":1580502851,"updated":1580502851,"recoveryLevel":"Recoverable+Purgeable"}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  '1b7153eb-de6d-46fa-9a81-4ab1b3ff5ab9',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:35:12 GMT',
  'Content-Length',
  '905'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .delete('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(401, {"error":{"code":"Unauthorized","message":"Request is missing a Bearer or PoP token."}}, [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Content-Length',
  '87',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'WWW-Authenticate',
  'Bearer authorization="https://login.windows.net/azure_tenant_id", resource="https://vault.azure.net"',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'fc3017a1-0d6c-41d4-a6a5-3f4f8160d3d2',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:35:12 GMT'
]);

nock('https://login.microsoftonline.com:443', {"encodedQueryParams":true})
  .post('/azure_tenant_id/oauth2/v2.0/token', "response_type=token&grant_type=client_credentials&client_id=azure_client_id&client_secret=azure_client_secret&scope=https%3A%2F%2Fvault.azure.net%2F.default")
  .reply(200, {"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"access_token"}, [
  'Cache-Control',
  'no-cache, no-store',
  'Pragma',
  'no-cache',
  'Content-Type',
  'application/json; charset=utf-8',
  'Expires',
  '-1',
  'Strict-Transport-Security',
  'max-age=31536000; includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'x-ms-request-id',
  'ffd38757-0723-4793-900f-ccbb3d955000',
  'x-ms-ests-server',
  '2.1.9987.9 - WUS ProdSlices',
  'P3P',
  'CP="DSP CUR OTPi IND OTRi ONL FIN"',
  'Set-Cookie',
  'fpc=Asng3Fp2xTBPvTiKtY5ocH8_aSJHFAAAAEKGxtUOAAAA; expires=Sun, 01-Mar-2020 20:35:12 GMT; path=/; secure; HttpOnly; SameSite=None',
  'Set-Cookie',
  'x-ms-gateway-slice=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Set-Cookie',
  'stsservicecookie=estsfd; path=/; SameSite=None; secure; HttpOnly',
  'Date',
  'Fri, 31 Jan 2020 20:35:12 GMT',
  'Content-Length',
  '1231'
]);

nock('https://keyvault_name.vault.azure.net:443', {"encodedQueryParams":true})
  .delete('/deletedkeys/recoverKeyName-canrestoreakeywithagivenbackup-')
  .query(true)
  .reply(204, "", [
  'Cache-Control',
  'no-cache',
  'Pragma',
  'no-cache',
  'Expires',
  '-1',
  'Server',
  'Microsoft-IIS/10.0',
  'x-ms-keyvault-region',
  'westus',
  'x-ms-request-id',
  'd1c6af11-6dfb-4804-99bd-1aad02a94f22',
  'x-ms-keyvault-service-version',
  '1.1.0.891',
  'x-ms-keyvault-network-info',
  'addr=52.137.64.184;act_addr_fam=InterNetwork;',
  'X-AspNet-Version',
  '4.0.30319',
  'X-Powered-By',
  'ASP.NET',
  'Strict-Transport-Security',
  'max-age=31536000;includeSubDomains',
  'X-Content-Type-Options',
  'nosniff',
  'Date',
  'Fri, 31 Jan 2020 20:35:12 GMT'
]);
