{"version":3,"file":"transformations.js","sourceRoot":"","sources":["../../src/transformations.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;AAYlC,8DA8DC;AAWD,sDAkCC;;AAnHD,mDAAgE;AAIhE;;;GAGG;AACH,SAAgB,yBAAyB,CACvC,MAA0C;IAE1C,MAAM,YAAY,GAAG,MAAsB,CAAC;IAC5C,MAAM,mBAAmB,GAAG,MAA6B,CAAC;IAC1D,MAAM,QAAQ,GAAG,IAAA,6CAA6B,EAAC,YAAY,CAAC,EAAG,CAAC,CAAC;IAEjE,MAAM,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC;IAC3C,OAAO,YAAY,CAAC,UAAU,CAAC;IAE/B,MAAM,YAAY,GAAmC;QACnD,KAAK,EAAE,YAAY,CAAC,KAAK;QACzB,IAAI,EAAE,QAAQ,CAAC,IAAI;QACnB,UAAU,EAAE;YACV,SAAS,EAAE,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,OAAO;YAC9B,SAAS,EAAE,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,OAAO;YAC9B,SAAS,EAAE,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,OAAO;YAC9B,OAAO,EAAE,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,OAAO;YAC5B,SAAS,EAAE,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,SAAS;YAChC,eAAe,EAAE,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,eAAe;YAC5C,aAAa,EAAE,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,aAAa;YAExC,EAAE,EAAE,YAAY,CAAC,EAAE;YACnB,WAAW,EAAE,YAAY,CAAC,WAAW;YACrC,IAAI,EAAE,YAAY,CAAC,IAAI;YACvB,OAAO,EAAE,YAAY,CAAC,OAAO;YAE7B,QAAQ,EAAE,QAAQ,CAAC,QAAQ;YAC3B,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,IAAI,EAAE,QAAQ,CAAC,IAAI;YACnB,gBAAgB,EAAE,YAAY,CAAC,GAAG;SACnC;KACF,CAAC;IAEF,IAAI,mBAAmB,CAAC,UAAU,EAAE,CAAC;QACnC,YAAY,CAAC,UAAU,CAAC,UAAU,GAAG,mBAAmB,CAAC,UAAU,CAAC;QACpE,YAAY,CAAC,UAAU,CAAC,kBAAkB,GAAG,mBAAmB,CAAC,kBAAkB,CAAC;QACpF,YAAY,CAAC,UAAU,CAAC,SAAS,GAAG,mBAAmB,CAAC,WAAW,CAAC;QACpE,YAAY,CAAC,UAAU,GAAG,mBAAmB,CAAC,UAAU,CAAC;QACzD,YAAY,CAAC,kBAAkB,GAAG,mBAAmB,CAAC,kBAAkB,CAAC;QACzE,YAAY,CAAC,SAAS,GAAG,mBAAmB,CAAC,WAAW,CAAC;IAC3D,CAAC;IAED,IAAI,UAAU,EAAE,CAAC;QACf,IAAK,UAAkB,CAAC,QAAQ,EAAE,CAAC;YACjC,OAAQ,YAAY,CAAC,UAAkB,CAAC,QAAQ,CAAC;QACnD,CAAC;QAED,IAAI,UAAU,CAAC,OAAO,EAAE,CAAC;YACvB,OAAQ,YAAY,CAAC,UAAkB,CAAC,OAAO,CAAC;QAClD,CAAC;QAED,IAAI,UAAU,CAAC,OAAO,EAAE,CAAC;YACvB,OAAQ,YAAY,CAAC,UAAkB,CAAC,OAAO,CAAC;QAClD,CAAC;QAED,IAAI,UAAU,CAAC,OAAO,EAAE,CAAC;YACvB,OAAQ,YAAY,CAAC,UAAkB,CAAC,OAAO,CAAC;QAClD,CAAC;IACH,CAAC;IAED,OAAO,YAAY,CAAC;AACtB,CAAC;AAED;;;;;;;;GAQG;AACH,SAAgB,qBAAqB,CAKnC,SAAwE,EACxE,gBAA0B,EAC1B,MAAkC;IAElC,IAAI,IAAI,GAA6C,SAAS,CAAC;IAC/D,OAAO;QACL,KAAK,CAAC,IAAI;YACR,IAAI,aAAJ,IAAI,cAAJ,IAAI,IAAJ,IAAI,GAAK,SAAS,iCAAM,gBAAgB,KAAE,UAAU,EAAE,SAAS,IAAG,EAAC;YACnE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;YAEjC,uCACK,MAAM,KACT,KAAK,EAAE,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAC3C;QACJ,CAAC;QACD,CAAC,MAAM,CAAC,aAAa,CAAC;YACpB,OAAO,IAAI,CAAC;QACd,CAAC;QACM,MAAM,CAA4D,QAAoB;;;gBAC3F,8DAA8D;gBAC9D,MAAM,cAAc,GAAG,SAAS,iCAC3B,gBAAgB,KACnB,UAAU,EAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,IACjC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;;oBACpB,KAAyB,eAAA,mBAAA,sBAAA,cAAc,CAAA,oBAAA,qHAAE,CAAC;wBAAjB,8BAAc;wBAAd,WAAc;wBAA5B,MAAM,IAAI,KAAA,CAAA;wBACnB,4BAAM,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA,CAAC;oBACzB,CAAC;;;;;;;;;YACH,CAAC;SAAA;KACF,CAAC;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PagedAsyncIterableIterator, PageSettings } from \"./generated/index.js\";\nimport type { DeletedSecretBundle, SecretBundle } from \"./generated/models/index.js\";\nimport { parseKeyVaultSecretIdentifier } from \"./identifier.js\";\nimport type { DeletedSecret, KeyVaultSecret } from \"./secretsModels.js\";\nimport type { OperationOptions } from \"@azure-rest/core-client\";\n\n/**\n * @internal\n * Shapes the exposed {@link KeyVaultKey} based on either a received secret bundle or deleted secret bundle.\n */\nexport function getSecretFromSecretBundle(\n  bundle: SecretBundle | DeletedSecretBundle,\n): KeyVaultSecret {\n  const secretBundle = bundle as SecretBundle;\n  const deletedSecretBundle = bundle as DeletedSecretBundle;\n  const parsedId = parseKeyVaultSecretIdentifier(secretBundle.id!);\n\n  const attributes = secretBundle.attributes;\n  delete secretBundle.attributes;\n\n  const resultObject: KeyVaultSecret & DeletedSecret = {\n    value: secretBundle.value,\n    name: parsedId.name,\n    properties: {\n      expiresOn: attributes?.expires,\n      createdOn: attributes?.created,\n      updatedOn: attributes?.updated,\n      enabled: attributes?.enabled,\n      notBefore: attributes?.notBefore,\n      recoverableDays: attributes?.recoverableDays,\n      recoveryLevel: attributes?.recoveryLevel,\n\n      id: secretBundle.id,\n      contentType: secretBundle.contentType,\n      tags: secretBundle.tags,\n      managed: secretBundle.managed,\n\n      vaultUrl: parsedId.vaultUrl,\n      version: parsedId.version,\n      name: parsedId.name,\n      certificateKeyId: secretBundle.kid,\n    },\n  };\n\n  if (deletedSecretBundle.recoveryId) {\n    resultObject.properties.recoveryId = deletedSecretBundle.recoveryId;\n    resultObject.properties.scheduledPurgeDate = deletedSecretBundle.scheduledPurgeDate;\n    resultObject.properties.deletedOn = deletedSecretBundle.deletedDate;\n    resultObject.recoveryId = deletedSecretBundle.recoveryId;\n    resultObject.scheduledPurgeDate = deletedSecretBundle.scheduledPurgeDate;\n    resultObject.deletedOn = deletedSecretBundle.deletedDate;\n  }\n\n  if (attributes) {\n    if ((attributes as any).vaultUrl) {\n      delete (resultObject.properties as any).vaultUrl;\n    }\n\n    if (attributes.expires) {\n      delete (resultObject.properties as any).expires;\n    }\n\n    if (attributes.created) {\n      delete (resultObject.properties as any).created;\n    }\n\n    if (attributes.updated) {\n      delete (resultObject.properties as any).updated;\n    }\n  }\n\n  return resultObject;\n}\n\n/**\n * A helper supporting compatibility between modular and legacy paged async iterables.\n *\n * Provides the following compatibility:\n * 1. Maps the values of the paged async iterable using the provided mapper function.\n * 2. Supports `maxPageSize` operation on the paged async iterable.\n *\n * TODO: move this to keyvault-common once everything is merged\n */\nexport function mapPagedAsyncIterable<\n  TGenerated,\n  TPublic,\n  TOptions extends OperationOptions & { maxresults?: number },\n>(\n  operation: (options: TOptions) => PagedAsyncIterableIterator<TGenerated>,\n  operationOptions: TOptions,\n  mapper: (x: TGenerated) => TPublic,\n): PagedAsyncIterableIterator<TPublic> {\n  let iter: ReturnType<typeof operation> | undefined = undefined;\n  return {\n    async next() {\n      iter ??= operation({ ...operationOptions, maxresults: undefined });\n      const result = await iter.next();\n\n      return {\n        ...result,\n        value: result.value && mapper(result.value),\n      };\n    },\n    [Symbol.asyncIterator]() {\n      return this;\n    },\n    async *byPage<TSettings extends PageSettings & { maxPageSize?: number }>(settings?: TSettings) {\n      // Pass the maxPageSize value to the underlying page operation\n      const iteratorByPage = operation({\n        ...operationOptions,\n        maxresults: settings?.maxPageSize,\n      }).byPage(settings);\n      for await (const page of iteratorByPage) {\n        yield page.map(mapper);\n      }\n    },\n  };\n}\n"]}