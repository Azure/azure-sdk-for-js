{"version":3,"file":"workflowRuns.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/workflowRuns.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport {\n  WorkflowRun,\n  WorkflowRunsListOptionalParams,\n  WorkflowRunsGetOptionalParams,\n  WorkflowRunsGetResponse,\n  WorkflowRunsCancelOptionalParams\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a WorkflowRuns. */\nexport interface WorkflowRuns {\n  /**\n   * Gets a list of workflow runs.\n   * @param resourceGroupName The resource group name.\n   * @param workflowName The workflow name.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    workflowName: string,\n    options?: WorkflowRunsListOptionalParams\n  ): PagedAsyncIterableIterator<WorkflowRun>;\n  /**\n   * Gets a workflow run.\n   * @param resourceGroupName The resource group name.\n   * @param workflowName The workflow name.\n   * @param runName The workflow run name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workflowName: string,\n    runName: string,\n    options?: WorkflowRunsGetOptionalParams\n  ): Promise<WorkflowRunsGetResponse>;\n  /**\n   * Cancels a workflow run.\n   * @param resourceGroupName The resource group name.\n   * @param workflowName The workflow name.\n   * @param runName The workflow run name.\n   * @param options The options parameters.\n   */\n  cancel(\n    resourceGroupName: string,\n    workflowName: string,\n    runName: string,\n    options?: WorkflowRunsCancelOptionalParams\n  ): Promise<void>;\n}\n"]}