{"version":3,"file":"integrationServiceEnvironments.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/integrationServiceEnvironments.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { PollerLike, PollOperationState } from \"@azure/core-lro\";\nimport {\n  IntegrationServiceEnvironment,\n  IntegrationServiceEnvironmentsListBySubscriptionOptionalParams,\n  IntegrationServiceEnvironmentsListByResourceGroupOptionalParams,\n  IntegrationServiceEnvironmentsGetOptionalParams,\n  IntegrationServiceEnvironmentsGetResponse,\n  IntegrationServiceEnvironmentsCreateOrUpdateOptionalParams,\n  IntegrationServiceEnvironmentsCreateOrUpdateResponse,\n  IntegrationServiceEnvironmentsUpdateOptionalParams,\n  IntegrationServiceEnvironmentsUpdateResponse,\n  IntegrationServiceEnvironmentsDeleteOptionalParams,\n  IntegrationServiceEnvironmentsRestartOptionalParams\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a IntegrationServiceEnvironments. */\nexport interface IntegrationServiceEnvironments {\n  /**\n   * Gets a list of integration service environments by subscription.\n   * @param options The options parameters.\n   */\n  listBySubscription(\n    options?: IntegrationServiceEnvironmentsListBySubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<IntegrationServiceEnvironment>;\n  /**\n   * Gets a list of integration service environments by resource group.\n   * @param resourceGroup The resource group.\n   * @param options The options parameters.\n   */\n  listByResourceGroup(\n    resourceGroup: string,\n    options?: IntegrationServiceEnvironmentsListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<IntegrationServiceEnvironment>;\n  /**\n   * Gets an integration service environment.\n   * @param resourceGroup The resource group.\n   * @param integrationServiceEnvironmentName The integration service environment name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroup: string,\n    integrationServiceEnvironmentName: string,\n    options?: IntegrationServiceEnvironmentsGetOptionalParams\n  ): Promise<IntegrationServiceEnvironmentsGetResponse>;\n  /**\n   * Creates or updates an integration service environment.\n   * @param resourceGroup The resource group.\n   * @param integrationServiceEnvironmentName The integration service environment name.\n   * @param integrationServiceEnvironment The integration service environment.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroup: string,\n    integrationServiceEnvironmentName: string,\n    integrationServiceEnvironment: IntegrationServiceEnvironment,\n    options?: IntegrationServiceEnvironmentsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<IntegrationServiceEnvironmentsCreateOrUpdateResponse>,\n      IntegrationServiceEnvironmentsCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Creates or updates an integration service environment.\n   * @param resourceGroup The resource group.\n   * @param integrationServiceEnvironmentName The integration service environment name.\n   * @param integrationServiceEnvironment The integration service environment.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroup: string,\n    integrationServiceEnvironmentName: string,\n    integrationServiceEnvironment: IntegrationServiceEnvironment,\n    options?: IntegrationServiceEnvironmentsCreateOrUpdateOptionalParams\n  ): Promise<IntegrationServiceEnvironmentsCreateOrUpdateResponse>;\n  /**\n   * Updates an integration service environment.\n   * @param resourceGroup The resource group.\n   * @param integrationServiceEnvironmentName The integration service environment name.\n   * @param integrationServiceEnvironment The integration service environment.\n   * @param options The options parameters.\n   */\n  beginUpdate(\n    resourceGroup: string,\n    integrationServiceEnvironmentName: string,\n    integrationServiceEnvironment: IntegrationServiceEnvironment,\n    options?: IntegrationServiceEnvironmentsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<IntegrationServiceEnvironmentsUpdateResponse>,\n      IntegrationServiceEnvironmentsUpdateResponse\n    >\n  >;\n  /**\n   * Updates an integration service environment.\n   * @param resourceGroup The resource group.\n   * @param integrationServiceEnvironmentName The integration service environment name.\n   * @param integrationServiceEnvironment The integration service environment.\n   * @param options The options parameters.\n   */\n  beginUpdateAndWait(\n    resourceGroup: string,\n    integrationServiceEnvironmentName: string,\n    integrationServiceEnvironment: IntegrationServiceEnvironment,\n    options?: IntegrationServiceEnvironmentsUpdateOptionalParams\n  ): Promise<IntegrationServiceEnvironmentsUpdateResponse>;\n  /**\n   * Deletes an integration service environment.\n   * @param resourceGroup The resource group.\n   * @param integrationServiceEnvironmentName The integration service environment name.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroup: string,\n    integrationServiceEnvironmentName: string,\n    options?: IntegrationServiceEnvironmentsDeleteOptionalParams\n  ): Promise<void>;\n  /**\n   * Restarts an integration service environment.\n   * @param resourceGroup The resource group.\n   * @param integrationServiceEnvironmentName The integration service environment name.\n   * @param options The options parameters.\n   */\n  restart(\n    resourceGroup: string,\n    integrationServiceEnvironmentName: string,\n    options?: IntegrationServiceEnvironmentsRestartOptionalParams\n  ): Promise<void>;\n}\n"]}