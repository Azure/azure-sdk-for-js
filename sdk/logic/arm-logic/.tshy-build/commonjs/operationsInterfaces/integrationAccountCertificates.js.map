{"version":3,"file":"integrationAccountCertificates.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/integrationAccountCertificates.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport {\n  IntegrationAccountCertificate,\n  IntegrationAccountCertificatesListOptionalParams,\n  IntegrationAccountCertificatesGetOptionalParams,\n  IntegrationAccountCertificatesGetResponse,\n  IntegrationAccountCertificatesCreateOrUpdateOptionalParams,\n  IntegrationAccountCertificatesCreateOrUpdateResponse,\n  IntegrationAccountCertificatesDeleteOptionalParams\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a IntegrationAccountCertificates. */\nexport interface IntegrationAccountCertificates {\n  /**\n   * Gets a list of integration account certificates.\n   * @param resourceGroupName The resource group name.\n   * @param integrationAccountName The integration account name.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    integrationAccountName: string,\n    options?: IntegrationAccountCertificatesListOptionalParams\n  ): PagedAsyncIterableIterator<IntegrationAccountCertificate>;\n  /**\n   * Gets an integration account certificate.\n   * @param resourceGroupName The resource group name.\n   * @param integrationAccountName The integration account name.\n   * @param certificateName The integration account certificate name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    integrationAccountName: string,\n    certificateName: string,\n    options?: IntegrationAccountCertificatesGetOptionalParams\n  ): Promise<IntegrationAccountCertificatesGetResponse>;\n  /**\n   * Creates or updates an integration account certificate.\n   * @param resourceGroupName The resource group name.\n   * @param integrationAccountName The integration account name.\n   * @param certificateName The integration account certificate name.\n   * @param certificate The integration account certificate.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    integrationAccountName: string,\n    certificateName: string,\n    certificate: IntegrationAccountCertificate,\n    options?: IntegrationAccountCertificatesCreateOrUpdateOptionalParams\n  ): Promise<IntegrationAccountCertificatesCreateOrUpdateResponse>;\n  /**\n   * Deletes an integration account certificate.\n   * @param resourceGroupName The resource group name.\n   * @param integrationAccountName The integration account name.\n   * @param certificateName The integration account certificate name.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    integrationAccountName: string,\n    certificateName: string,\n    options?: IntegrationAccountCertificatesDeleteOptionalParams\n  ): Promise<void>;\n}\n"]}