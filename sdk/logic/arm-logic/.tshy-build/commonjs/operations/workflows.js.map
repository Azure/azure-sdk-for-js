{"version":3,"file":"workflows.js","sourceRoot":"","sources":["../../../src/operations/workflows.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;;AAGH,wDAA0D;AAE1D,uEAAiD;AACjD,sEAAgD;AAChD,4EAAsD;AAEtD,8CAA4E;AAC5E,8CAAwC;AAoCxC,4CAA4C;AAC5C,6CAA6C;AAC7C,MAAa,aAAa;IAGxB;;;OAGG;IACH,YAAY,MAA6B;QACvC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED;;;OAGG;IACI,kBAAkB,CACvB,OAAmD;QAEnD,MAAM,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,CAAC;QACvD,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,4BAA4B,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;YAC9D,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,4BAA4B,CACzC,OAAmD,EACnD,QAAuB;;YAEvB,IAAI,MAA2C,CAAC;YAChD,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,sBAAM,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAA,CAAC;gBACjD,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAA,sCAAoB,EAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,4BAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,sBAAM,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;gBACxE,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,IAAA,sCAAoB,EAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,4BAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,2BAA2B,CACxC,OAAmD;;;;gBAEnD,KAAyB,eAAA,KAAA,sBAAA,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,CAAA,IAAA,uEAAE,CAAC;oBAA7C,cAA0C;oBAA1C,WAA0C;oBAAxD,MAAM,IAAI,KAAA,CAAA;oBACnB,sBAAA,KAAK,CAAC,CAAC,yBAAA,sBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;OAIG;IACI,mBAAmB,CACxB,iBAAyB,EACzB,OAAoD;QAEpD,MAAM,IAAI,GAAG,IAAI,CAAC,4BAA4B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAC3E,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,6BAA6B,CACvC,iBAAiB,EACjB,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,6BAA6B,CAC1C,iBAAyB,EACzB,OAAoD,EACpD,QAAuB;;YAEvB,IAAI,MAA4C,CAAC;YACjD,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,sBAAM,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;gBACrE,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAA,sCAAoB,EAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,4BAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,sBAAM,IAAI,CAAC,wBAAwB,CAC1C,iBAAiB,EACjB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,IAAA,sCAAoB,EAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,4BAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,OAAoD;;;;gBAEpD,KAAyB,eAAA,KAAA,sBAAA,IAAI,CAAC,6BAA6B,CACzD,iBAAiB,EACjB,OAAO,CACR,CAAA,IAAA,uEAAE,CAAC;oBAHqB,cAGxB;oBAHwB,WAGxB;oBAHU,MAAM,IAAI,KAAA,CAAA;oBAInB,sBAAA,KAAK,CAAC,CAAC,yBAAA,sBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;OAGG;IACK,mBAAmB,CACzB,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,OAAO,EAAE,EACX,+BAA+B,CAChC,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACK,oBAAoB,CAC1B,iBAAyB,EACzB,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAC9B,gCAAgC,CACjC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,GAAG,CACD,iBAAyB,EACzB,YAAoB,EACpB,OAAoC;QAEpC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,YAAY,EAAE,OAAO,EAAE,EAC5C,gBAAgB,CACjB,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,cAAc,CACZ,iBAAyB,EACzB,YAAoB,EACpB,QAAkB,EAClB,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,YAAY,EAAE,QAAQ,EAAE,OAAO,EAAE,EACtD,2BAA2B,CAC5B,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,MAAM,CACJ,iBAAyB,EACzB,YAAoB,EACpB,OAAuC;QAEvC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,YAAY,EAAE,OAAO,EAAE,EAC5C,mBAAmB,CACpB,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,MAAM,CACJ,iBAAyB,EACzB,YAAoB,EACpB,OAAuC;QAEvC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,YAAY,EAAE,OAAO,EAAE,EAC5C,mBAAmB,CACpB,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,OAAO,CACL,iBAAyB,EACzB,YAAoB,EACpB,OAAwC;QAExC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,YAAY,EAAE,OAAO,EAAE,EAC5C,oBAAoB,CACrB,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,MAAM,CACJ,iBAAyB,EACzB,YAAoB,EACpB,OAAuC;QAEvC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,YAAY,EAAE,OAAO,EAAE,EAC5C,mBAAmB,CACpB,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,0BAA0B,CACxB,iBAAyB,EACzB,YAAoB,EACpB,UAAgD,EAChD,OAA2D;QAE3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,YAAY,EAAE,UAAU,EAAE,OAAO,EAAE,EACxD,uCAAuC,CACxC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,eAAe,CACb,iBAAyB,EACzB,YAAoB,EACpB,eAAyC,EACzC,OAAgD;QAEhD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,YAAY,EAAE,eAAe,EAAE,OAAO,EAAE,EAC7D,4BAA4B,CAC7B,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,WAAW,CACT,iBAAyB,EACzB,YAAoB,EACpB,OAA4C;QAE5C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,YAAY,EAAE,OAAO,EAAE,EAC5C,wBAAwB,CACzB,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,SAAS,CACb,iBAAyB,EACzB,YAAoB,EACpB,IAAuB,EACvB,OAAqC;QAErC,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACf,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,aAAa,GAAG,KAAK,EACzB,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GAEN,SAAS,CAAC;YAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,IAAI,oBAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,YAAY,EAAE,IAAI,EAAE,OAAO,EAAE,EAClD,iBAAiB,CAClB,CAAC;QACF,MAAM,MAAM,GAAG,IAAI,oBAAS,CAAC,GAAG,EAAE;YAChC,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,gBAAgB,CACpB,iBAAyB,EACzB,YAAoB,EACpB,IAAuB,EACvB,OAAqC;QAErC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,CACjC,iBAAiB,EACjB,YAAY,EACZ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;;OAMG;IACH,mBAAmB,CACjB,iBAAyB,EACzB,YAAoB,EACpB,OAAkC,EAClC,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,YAAY,EAAE,OAAO,EAAE,OAAO,EAAE,EACrD,gCAAgC,CACjC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,uBAAuB,CACrB,iBAAyB,EACzB,YAAoB,EACpB,QAAkB,EAClB,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,YAAY,EAAE,QAAQ,EAAE,OAAO,EAAE,EACtD,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,kBAAkB,CAChB,iBAAyB,EACzB,QAAgB,EAChB,YAAoB,EACpB,QAAkB,EAClB,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,YAAY,EAAE,QAAQ,EAAE,OAAO,EAAE,EAChE,+BAA+B,CAChC,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACK,uBAAuB,CAC7B,QAAgB,EAChB,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrB,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACK,wBAAwB,CAC9B,iBAAyB,EACzB,QAAgB,EAChB,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAE,EACxC,oCAAoC,CACrC,CAAC;IACJ,CAAC;CACF;AAlfD,sCAkfC;AACD,2BAA2B;AAC3B,MAAM,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;AAE3E,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EAAE,qEAAqE;IAC3E,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,GAAG,EAAE,UAAU,CAAC,MAAM,CAAC;IAC3E,aAAa,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,cAAc,CAAC;IAC5D,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EACF,wGAAwG;IAC1G,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,GAAG,EAAE,UAAU,CAAC,MAAM,CAAC;IAC3E,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;KAC7B;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gBAAgB,GAA6B;IACjD,IAAI,EACF,uHAAuH;IACzH,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,QAAQ;SAC7B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,YAAY;KACxB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA6B;IAC5D,IAAI,EACF,uHAAuH;IACzH,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,QAAQ;SAC7B;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,QAAQ;SAC7B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,QAAQ;IAChC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,YAAY;KACxB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA6B;IACpD,IAAI,EACF,uHAAuH;IACzH,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,QAAQ;SAC7B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,YAAY;KACxB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA6B;IACpD,IAAI,EACF,uHAAuH;IACzH,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,YAAY;KACxB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,oBAAoB,GAA6B;IACrD,IAAI,EACF,+HAA+H;IACjI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,YAAY;KACxB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA6B;IACpD,IAAI,EACF,8HAA8H;IAChI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,YAAY;KACxB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,uCAAuC,GAA6B;IACxE,IAAI,EACF,kJAAkJ;IACpJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;SACtC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,UAAU;IAClC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,YAAY;KACxB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,4BAA4B,GAA6B;IAC7D,IAAI,EACF,uIAAuI;IACzI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0BAA0B;SAC/C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,eAAe;IACvC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,YAAY;KACxB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,wBAAwB,GAA6B;IACzD,IAAI,EACF,mIAAmI;IACrI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;SACtC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,YAAY;KACxB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iBAAiB,GAA6B;IAClD,IAAI,EACF,4HAA4H;IAC9H,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,IAAI;IAC5B,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,YAAY;KACxB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EACF,2IAA2I;IAC7I,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,OAAO;IAC/B,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,YAAY;KACxB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EACF,gIAAgI;IAClI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,QAAQ;IAChC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,YAAY;KACxB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EACF,qJAAqJ;IACvJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,QAAQ;IAChC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,YAAY;QACvB,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { Workflows } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { LogicManagementClient } from \"../logicManagementClient.js\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl.js\";\nimport {\n  Workflow,\n  WorkflowsListBySubscriptionNextOptionalParams,\n  WorkflowsListBySubscriptionOptionalParams,\n  WorkflowsListBySubscriptionResponse,\n  WorkflowsListByResourceGroupNextOptionalParams,\n  WorkflowsListByResourceGroupOptionalParams,\n  WorkflowsListByResourceGroupResponse,\n  WorkflowsGetOptionalParams,\n  WorkflowsGetResponse,\n  WorkflowsCreateOrUpdateOptionalParams,\n  WorkflowsCreateOrUpdateResponse,\n  WorkflowsUpdateOptionalParams,\n  WorkflowsUpdateResponse,\n  WorkflowsDeleteOptionalParams,\n  WorkflowsDisableOptionalParams,\n  WorkflowsEnableOptionalParams,\n  GenerateUpgradedDefinitionParameters,\n  WorkflowsGenerateUpgradedDefinitionOptionalParams,\n  WorkflowsGenerateUpgradedDefinitionResponse,\n  GetCallbackUrlParameters,\n  WorkflowsListCallbackUrlOptionalParams,\n  WorkflowsListCallbackUrlResponse,\n  WorkflowsListSwaggerOptionalParams,\n  WorkflowsListSwaggerResponse,\n  WorkflowReference,\n  WorkflowsMoveOptionalParams,\n  RegenerateActionParameter,\n  WorkflowsRegenerateAccessKeyOptionalParams,\n  WorkflowsValidateByResourceGroupOptionalParams,\n  WorkflowsValidateByLocationOptionalParams,\n  WorkflowsListBySubscriptionNextResponse,\n  WorkflowsListByResourceGroupNextResponse\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Workflows operations. */\nexport class WorkflowsImpl implements Workflows {\n  private readonly client: LogicManagementClient;\n\n  /**\n   * Initialize a new instance of the class Workflows class.\n   * @param client Reference to the service client\n   */\n  constructor(client: LogicManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of workflows by subscription.\n   * @param options The options parameters.\n   */\n  public listBySubscription(\n    options?: WorkflowsListBySubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<Workflow> {\n    const iter = this.listBySubscriptionPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBySubscriptionPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listBySubscriptionPagingPage(\n    options?: WorkflowsListBySubscriptionOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Workflow[]> {\n    let result: WorkflowsListBySubscriptionResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listBySubscription(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listBySubscriptionNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listBySubscriptionPagingAll(\n    options?: WorkflowsListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<Workflow> {\n    for await (const page of this.listBySubscriptionPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of workflows by resource group.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: WorkflowsListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<Workflow> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: WorkflowsListByResourceGroupOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Workflow[]> {\n    let result: WorkflowsListByResourceGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroup(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: WorkflowsListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<Workflow> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of workflows by subscription.\n   * @param options The options parameters.\n   */\n  private _listBySubscription(\n    options?: WorkflowsListBySubscriptionOptionalParams\n  ): Promise<WorkflowsListBySubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listBySubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of workflows by resource group.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: WorkflowsListByResourceGroupOptionalParams\n  ): Promise<WorkflowsListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Gets a workflow.\n   * @param resourceGroupName The resource group name.\n   * @param workflowName The workflow name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workflowName: string,\n    options?: WorkflowsGetOptionalParams\n  ): Promise<WorkflowsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workflowName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a workflow.\n   * @param resourceGroupName The resource group name.\n   * @param workflowName The workflow name.\n   * @param workflow The workflow.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workflowName: string,\n    workflow: Workflow,\n    options?: WorkflowsCreateOrUpdateOptionalParams\n  ): Promise<WorkflowsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workflowName, workflow, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Updates a workflow.\n   * @param resourceGroupName The resource group name.\n   * @param workflowName The workflow name.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    workflowName: string,\n    options?: WorkflowsUpdateOptionalParams\n  ): Promise<WorkflowsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workflowName, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a workflow.\n   * @param resourceGroupName The resource group name.\n   * @param workflowName The workflow name.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workflowName: string,\n    options?: WorkflowsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workflowName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Disables a workflow.\n   * @param resourceGroupName The resource group name.\n   * @param workflowName The workflow name.\n   * @param options The options parameters.\n   */\n  disable(\n    resourceGroupName: string,\n    workflowName: string,\n    options?: WorkflowsDisableOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workflowName, options },\n      disableOperationSpec\n    );\n  }\n\n  /**\n   * Enables a workflow.\n   * @param resourceGroupName The resource group name.\n   * @param workflowName The workflow name.\n   * @param options The options parameters.\n   */\n  enable(\n    resourceGroupName: string,\n    workflowName: string,\n    options?: WorkflowsEnableOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workflowName, options },\n      enableOperationSpec\n    );\n  }\n\n  /**\n   * Generates the upgraded definition for a workflow.\n   * @param resourceGroupName The resource group name.\n   * @param workflowName The workflow name.\n   * @param parameters Parameters for generating an upgraded definition.\n   * @param options The options parameters.\n   */\n  generateUpgradedDefinition(\n    resourceGroupName: string,\n    workflowName: string,\n    parameters: GenerateUpgradedDefinitionParameters,\n    options?: WorkflowsGenerateUpgradedDefinitionOptionalParams\n  ): Promise<WorkflowsGenerateUpgradedDefinitionResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workflowName, parameters, options },\n      generateUpgradedDefinitionOperationSpec\n    );\n  }\n\n  /**\n   * Get the workflow callback Url.\n   * @param resourceGroupName The resource group name.\n   * @param workflowName The workflow name.\n   * @param listCallbackUrl Which callback url to list.\n   * @param options The options parameters.\n   */\n  listCallbackUrl(\n    resourceGroupName: string,\n    workflowName: string,\n    listCallbackUrl: GetCallbackUrlParameters,\n    options?: WorkflowsListCallbackUrlOptionalParams\n  ): Promise<WorkflowsListCallbackUrlResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workflowName, listCallbackUrl, options },\n      listCallbackUrlOperationSpec\n    );\n  }\n\n  /**\n   * Gets an OpenAPI definition for the workflow.\n   * @param resourceGroupName The resource group name.\n   * @param workflowName The workflow name.\n   * @param options The options parameters.\n   */\n  listSwagger(\n    resourceGroupName: string,\n    workflowName: string,\n    options?: WorkflowsListSwaggerOptionalParams\n  ): Promise<WorkflowsListSwaggerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workflowName, options },\n      listSwaggerOperationSpec\n    );\n  }\n\n  /**\n   * Moves an existing workflow.\n   * @param resourceGroupName The resource group name.\n   * @param workflowName The workflow name.\n   * @param move The workflow to move.\n   * @param options The options parameters.\n   */\n  async beginMove(\n    resourceGroupName: string,\n    workflowName: string,\n    move: WorkflowReference,\n    options?: WorkflowsMoveOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workflowName, move, options },\n      moveOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Moves an existing workflow.\n   * @param resourceGroupName The resource group name.\n   * @param workflowName The workflow name.\n   * @param move The workflow to move.\n   * @param options The options parameters.\n   */\n  async beginMoveAndWait(\n    resourceGroupName: string,\n    workflowName: string,\n    move: WorkflowReference,\n    options?: WorkflowsMoveOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginMove(\n      resourceGroupName,\n      workflowName,\n      move,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Regenerates the callback URL access key for request triggers.\n   * @param resourceGroupName The resource group name.\n   * @param workflowName The workflow name.\n   * @param keyType The access key type.\n   * @param options The options parameters.\n   */\n  regenerateAccessKey(\n    resourceGroupName: string,\n    workflowName: string,\n    keyType: RegenerateActionParameter,\n    options?: WorkflowsRegenerateAccessKeyOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workflowName, keyType, options },\n      regenerateAccessKeyOperationSpec\n    );\n  }\n\n  /**\n   * Validates the workflow.\n   * @param resourceGroupName The resource group name.\n   * @param workflowName The workflow name.\n   * @param validate The workflow.\n   * @param options The options parameters.\n   */\n  validateByResourceGroup(\n    resourceGroupName: string,\n    workflowName: string,\n    validate: Workflow,\n    options?: WorkflowsValidateByResourceGroupOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workflowName, validate, options },\n      validateByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Validates the workflow definition.\n   * @param resourceGroupName The resource group name.\n   * @param location The workflow location.\n   * @param workflowName The workflow name.\n   * @param validate The workflow.\n   * @param options The options parameters.\n   */\n  validateByLocation(\n    resourceGroupName: string,\n    location: string,\n    workflowName: string,\n    validate: Workflow,\n    options?: WorkflowsValidateByLocationOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, location, workflowName, validate, options },\n      validateByLocationOperationSpec\n    );\n  }\n\n  /**\n   * ListBySubscriptionNext\n   * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.\n   * @param options The options parameters.\n   */\n  private _listBySubscriptionNext(\n    nextLink: string,\n    options?: WorkflowsListBySubscriptionNextOptionalParams\n  ): Promise<WorkflowsListBySubscriptionNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listBySubscriptionNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The resource group name.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: WorkflowsListByResourceGroupNextOptionalParams\n  ): Promise<WorkflowsListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listBySubscriptionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Logic/workflows\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkflowListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top, Parameters.filter],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkflowListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top, Parameters.filter],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Workflow\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workflowName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Workflow\n    },\n    201: {\n      bodyMapper: Mappers.Workflow\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.workflow,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workflowName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Workflow\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workflowName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workflowName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst disableOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/disable\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workflowName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst enableOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/enable\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workflowName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst generateUpgradedDefinitionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/generateUpgradedDefinition\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"any\" } }\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workflowName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listCallbackUrlOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/listCallbackUrl\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkflowTriggerCallbackUrl\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.listCallbackUrl,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workflowName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listSwaggerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/listSwagger\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"any\" } }\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workflowName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst moveOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/move\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.move,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workflowName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst regenerateAccessKeyOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/regenerateAccessKey\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.keyType,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workflowName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst validateByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/validate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.validate,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workflowName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst validateByLocationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/locations/{location}/workflows/{workflowName}/validate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.validate,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workflowName,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listBySubscriptionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkflowListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkflowListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n"]}