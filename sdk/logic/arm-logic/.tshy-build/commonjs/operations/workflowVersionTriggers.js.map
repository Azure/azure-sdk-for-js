{"version":3,"file":"workflowVersionTriggers.js","sourceRoot":"","sources":["../../../src/operations/workflowVersionTriggers.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;;AAGH,uEAAiD;AACjD,sEAAgD;AAChD,4EAAsD;AAOtD,2DAA2D;AAC3D,MAAa,2BAA2B;IAGtC;;;OAGG;IACH,YAAY,MAA6B;QACvC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED;;;;;;;OAOG;IACH,eAAe,CACb,iBAAyB,EACzB,YAAoB,EACpB,SAAiB,EACjB,WAAmB,EACnB,OAA8D;QAE9D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,YAAY,EAAE,SAAS,EAAE,WAAW,EAAE,OAAO,EAAE,EACpE,4BAA4B,CAC7B,CAAC;IACJ,CAAC;CACF;AA/BD,kEA+BC;AACD,2BAA2B;AAC3B,MAAM,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;AAE3E,MAAM,4BAA4B,GAA6B;IAC7D,IAAI,EACF,mLAAmL;IACrL,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0BAA0B;SAC/C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,WAAW;IACnC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,YAAY;QACvB,UAAU,CAAC,SAAS;QACpB,UAAU,CAAC,WAAW;KACvB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { WorkflowVersionTriggers } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { LogicManagementClient } from \"../logicManagementClient.js\";\nimport {\n  WorkflowVersionTriggersListCallbackUrlOptionalParams,\n  WorkflowVersionTriggersListCallbackUrlResponse\n} from \"../models/index.js\";\n\n/** Class containing WorkflowVersionTriggers operations. */\nexport class WorkflowVersionTriggersImpl implements WorkflowVersionTriggers {\n  private readonly client: LogicManagementClient;\n\n  /**\n   * Initialize a new instance of the class WorkflowVersionTriggers class.\n   * @param client Reference to the service client\n   */\n  constructor(client: LogicManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get the callback url for a trigger of a workflow version.\n   * @param resourceGroupName The resource group name.\n   * @param workflowName The workflow name.\n   * @param versionId The workflow versionId.\n   * @param triggerName The workflow trigger name.\n   * @param options The options parameters.\n   */\n  listCallbackUrl(\n    resourceGroupName: string,\n    workflowName: string,\n    versionId: string,\n    triggerName: string,\n    options?: WorkflowVersionTriggersListCallbackUrlOptionalParams\n  ): Promise<WorkflowVersionTriggersListCallbackUrlResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workflowName, versionId, triggerName, options },\n      listCallbackUrlOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listCallbackUrlOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/versions/{versionId}/triggers/{triggerName}/listCallbackUrl\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkflowTriggerCallbackUrl\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workflowName,\n    Parameters.versionId,\n    Parameters.triggerName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n"]}