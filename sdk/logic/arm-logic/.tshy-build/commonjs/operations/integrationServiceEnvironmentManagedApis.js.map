{"version":3,"file":"integrationServiceEnvironmentManagedApis.js","sourceRoot":"","sources":["../../../src/operations/integrationServiceEnvironmentManagedApis.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { IntegrationServiceEnvironmentManagedApis } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { LogicManagementClient } from \"../logicManagementClient.js\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl.js\";\nimport {\n  IntegrationServiceEnvironmentManagedApi,\n  IntegrationServiceEnvironmentManagedApisListNextOptionalParams,\n  IntegrationServiceEnvironmentManagedApisListOptionalParams,\n  IntegrationServiceEnvironmentManagedApisListResponse,\n  IntegrationServiceEnvironmentManagedApisGetOptionalParams,\n  IntegrationServiceEnvironmentManagedApisGetResponse,\n  IntegrationServiceEnvironmentManagedApisPutOptionalParams,\n  IntegrationServiceEnvironmentManagedApisPutResponse,\n  IntegrationServiceEnvironmentManagedApisDeleteOptionalParams,\n  IntegrationServiceEnvironmentManagedApisListNextResponse\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing IntegrationServiceEnvironmentManagedApis operations. */\nexport class IntegrationServiceEnvironmentManagedApisImpl\n  implements IntegrationServiceEnvironmentManagedApis {\n  private readonly client: LogicManagementClient;\n\n  /**\n   * Initialize a new instance of the class IntegrationServiceEnvironmentManagedApis class.\n   * @param client Reference to the service client\n   */\n  constructor(client: LogicManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the integration service environment managed Apis.\n   * @param resourceGroup The resource group.\n   * @param integrationServiceEnvironmentName The integration service environment name.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroup: string,\n    integrationServiceEnvironmentName: string,\n    options?: IntegrationServiceEnvironmentManagedApisListOptionalParams\n  ): PagedAsyncIterableIterator<IntegrationServiceEnvironmentManagedApi> {\n    const iter = this.listPagingAll(\n      resourceGroup,\n      integrationServiceEnvironmentName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroup,\n          integrationServiceEnvironmentName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroup: string,\n    integrationServiceEnvironmentName: string,\n    options?: IntegrationServiceEnvironmentManagedApisListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<IntegrationServiceEnvironmentManagedApi[]> {\n    let result: IntegrationServiceEnvironmentManagedApisListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(\n        resourceGroup,\n        integrationServiceEnvironmentName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroup,\n        integrationServiceEnvironmentName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroup: string,\n    integrationServiceEnvironmentName: string,\n    options?: IntegrationServiceEnvironmentManagedApisListOptionalParams\n  ): AsyncIterableIterator<IntegrationServiceEnvironmentManagedApi> {\n    for await (const page of this.listPagingPage(\n      resourceGroup,\n      integrationServiceEnvironmentName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the integration service environment managed Apis.\n   * @param resourceGroup The resource group.\n   * @param integrationServiceEnvironmentName The integration service environment name.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroup: string,\n    integrationServiceEnvironmentName: string,\n    options?: IntegrationServiceEnvironmentManagedApisListOptionalParams\n  ): Promise<IntegrationServiceEnvironmentManagedApisListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroup, integrationServiceEnvironmentName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Gets the integration service environment managed Api.\n   * @param resourceGroup The resource group name.\n   * @param integrationServiceEnvironmentName The integration service environment name.\n   * @param apiName The api name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroup: string,\n    integrationServiceEnvironmentName: string,\n    apiName: string,\n    options?: IntegrationServiceEnvironmentManagedApisGetOptionalParams\n  ): Promise<IntegrationServiceEnvironmentManagedApisGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroup, integrationServiceEnvironmentName, apiName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Puts the integration service environment managed Api.\n   * @param resourceGroup The resource group name.\n   * @param integrationServiceEnvironmentName The integration service environment name.\n   * @param apiName The api name.\n   * @param integrationServiceEnvironmentManagedApi The integration service environment managed api.\n   * @param options The options parameters.\n   */\n  async beginPut(\n    resourceGroup: string,\n    integrationServiceEnvironmentName: string,\n    apiName: string,\n    integrationServiceEnvironmentManagedApi: IntegrationServiceEnvironmentManagedApi,\n    options?: IntegrationServiceEnvironmentManagedApisPutOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<IntegrationServiceEnvironmentManagedApisPutResponse>,\n      IntegrationServiceEnvironmentManagedApisPutResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<IntegrationServiceEnvironmentManagedApisPutResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroup,\n        integrationServiceEnvironmentName,\n        apiName,\n        integrationServiceEnvironmentManagedApi,\n        options\n      },\n      putOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Puts the integration service environment managed Api.\n   * @param resourceGroup The resource group name.\n   * @param integrationServiceEnvironmentName The integration service environment name.\n   * @param apiName The api name.\n   * @param integrationServiceEnvironmentManagedApi The integration service environment managed api.\n   * @param options The options parameters.\n   */\n  async beginPutAndWait(\n    resourceGroup: string,\n    integrationServiceEnvironmentName: string,\n    apiName: string,\n    integrationServiceEnvironmentManagedApi: IntegrationServiceEnvironmentManagedApi,\n    options?: IntegrationServiceEnvironmentManagedApisPutOptionalParams\n  ): Promise<IntegrationServiceEnvironmentManagedApisPutResponse> {\n    const poller = await this.beginPut(\n      resourceGroup,\n      integrationServiceEnvironmentName,\n      apiName,\n      integrationServiceEnvironmentManagedApi,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes the integration service environment managed Api.\n   * @param resourceGroup The resource group.\n   * @param integrationServiceEnvironmentName The integration service environment name.\n   * @param apiName The api name.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroup: string,\n    integrationServiceEnvironmentName: string,\n    apiName: string,\n    options?: IntegrationServiceEnvironmentManagedApisDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroup, integrationServiceEnvironmentName, apiName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes the integration service environment managed Api.\n   * @param resourceGroup The resource group.\n   * @param integrationServiceEnvironmentName The integration service environment name.\n   * @param apiName The api name.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroup: string,\n    integrationServiceEnvironmentName: string,\n    apiName: string,\n    options?: IntegrationServiceEnvironmentManagedApisDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroup,\n      integrationServiceEnvironmentName,\n      apiName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroup The resource group.\n   * @param integrationServiceEnvironmentName The integration service environment name.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroup: string,\n    integrationServiceEnvironmentName: string,\n    nextLink: string,\n    options?: IntegrationServiceEnvironmentManagedApisListNextOptionalParams\n  ): Promise<IntegrationServiceEnvironmentManagedApisListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroup, integrationServiceEnvironmentName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}/managedApis\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IntegrationServiceEnvironmentManagedApiListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroup,\n    Parameters.integrationServiceEnvironmentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}/managedApis/{apiName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IntegrationServiceEnvironmentManagedApi\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroup,\n    Parameters.integrationServiceEnvironmentName,\n    Parameters.apiName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst putOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}/managedApis/{apiName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IntegrationServiceEnvironmentManagedApi\n    },\n    201: {\n      bodyMapper: Mappers.IntegrationServiceEnvironmentManagedApi\n    },\n    202: {\n      bodyMapper: Mappers.IntegrationServiceEnvironmentManagedApi\n    },\n    204: {\n      bodyMapper: Mappers.IntegrationServiceEnvironmentManagedApi\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.integrationServiceEnvironmentManagedApi,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroup,\n    Parameters.integrationServiceEnvironmentName,\n    Parameters.apiName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}/managedApis/{apiName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroup,\n    Parameters.integrationServiceEnvironmentName,\n    Parameters.apiName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IntegrationServiceEnvironmentManagedApiListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.resourceGroup,\n    Parameters.integrationServiceEnvironmentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n"]}