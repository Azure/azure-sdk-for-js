{"version":3,"file":"integrationServiceEnvironmentManagedApiOperations.js","sourceRoot":"","sources":["../../../src/operations/integrationServiceEnvironmentManagedApiOperations.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { IntegrationServiceEnvironmentManagedApiOperations } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { LogicManagementClient } from \"../logicManagementClient.js\";\nimport {\n  ApiOperation,\n  IntegrationServiceEnvironmentManagedApiOperationsListNextOptionalParams,\n  IntegrationServiceEnvironmentManagedApiOperationsListOptionalParams,\n  IntegrationServiceEnvironmentManagedApiOperationsListResponse,\n  IntegrationServiceEnvironmentManagedApiOperationsListNextResponse\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing IntegrationServiceEnvironmentManagedApiOperations operations. */\nexport class IntegrationServiceEnvironmentManagedApiOperationsImpl\n  implements IntegrationServiceEnvironmentManagedApiOperations {\n  private readonly client: LogicManagementClient;\n\n  /**\n   * Initialize a new instance of the class IntegrationServiceEnvironmentManagedApiOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: LogicManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the managed Api operations.\n   * @param resourceGroup The resource group.\n   * @param integrationServiceEnvironmentName The integration service environment name.\n   * @param apiName The api name.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroup: string,\n    integrationServiceEnvironmentName: string,\n    apiName: string,\n    options?: IntegrationServiceEnvironmentManagedApiOperationsListOptionalParams\n  ): PagedAsyncIterableIterator<ApiOperation> {\n    const iter = this.listPagingAll(\n      resourceGroup,\n      integrationServiceEnvironmentName,\n      apiName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroup,\n          integrationServiceEnvironmentName,\n          apiName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroup: string,\n    integrationServiceEnvironmentName: string,\n    apiName: string,\n    options?: IntegrationServiceEnvironmentManagedApiOperationsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ApiOperation[]> {\n    let result: IntegrationServiceEnvironmentManagedApiOperationsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(\n        resourceGroup,\n        integrationServiceEnvironmentName,\n        apiName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroup,\n        integrationServiceEnvironmentName,\n        apiName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroup: string,\n    integrationServiceEnvironmentName: string,\n    apiName: string,\n    options?: IntegrationServiceEnvironmentManagedApiOperationsListOptionalParams\n  ): AsyncIterableIterator<ApiOperation> {\n    for await (const page of this.listPagingPage(\n      resourceGroup,\n      integrationServiceEnvironmentName,\n      apiName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the managed Api operations.\n   * @param resourceGroup The resource group.\n   * @param integrationServiceEnvironmentName The integration service environment name.\n   * @param apiName The api name.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroup: string,\n    integrationServiceEnvironmentName: string,\n    apiName: string,\n    options?: IntegrationServiceEnvironmentManagedApiOperationsListOptionalParams\n  ): Promise<IntegrationServiceEnvironmentManagedApiOperationsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroup, integrationServiceEnvironmentName, apiName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroup The resource group.\n   * @param integrationServiceEnvironmentName The integration service environment name.\n   * @param apiName The api name.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroup: string,\n    integrationServiceEnvironmentName: string,\n    apiName: string,\n    nextLink: string,\n    options?: IntegrationServiceEnvironmentManagedApiOperationsListNextOptionalParams\n  ): Promise<\n    IntegrationServiceEnvironmentManagedApiOperationsListNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroup,\n        integrationServiceEnvironmentName,\n        apiName,\n        nextLink,\n        options\n      },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}/managedApis/{apiName}/apiOperations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApiOperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroup,\n    Parameters.integrationServiceEnvironmentName,\n    Parameters.apiName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApiOperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.resourceGroup,\n    Parameters.integrationServiceEnvironmentName,\n    Parameters.apiName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n"]}