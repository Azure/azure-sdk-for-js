{"version":3,"file":"workflowRunActionScopeRepetitions.js","sourceRoot":"","sources":["../../../src/operations/workflowRunActionScopeRepetitions.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;;AAIH,uEAAiD;AACjD,sEAAgD;AAChD,4EAAsD;AAUtD,4CAA4C;AAC5C,qEAAqE;AACrE,MAAa,qCAAqC;IAIhD;;;OAGG;IACH,YAAY,MAA6B;QACvC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED;;;;;;;OAOG;IACI,IAAI,CACT,iBAAyB,EACzB,YAAoB,EACpB,OAAe,EACf,UAAkB,EAClB,OAA6D;QAE7D,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAC7B,iBAAiB,EACjB,YAAY,EACZ,OAAO,EACP,UAAU,EACV,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,cAAc,CACxB,iBAAiB,EACjB,YAAY,EACZ,OAAO,EACP,UAAU,EACV,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,cAAc,CAC3B,iBAAyB,EACzB,YAAoB,EACpB,OAAe,EACf,UAAkB,EAClB,OAA6D,EAC7D,SAAwB;;YAExB,IAAI,MAAqD,CAAC;YAC1D,MAAM,GAAG,sBAAM,IAAI,CAAC,KAAK,CACvB,iBAAiB,EACjB,YAAY,EACZ,OAAO,EACP,UAAU,EACV,OAAO,CACR,CAAA,CAAC;YACF,4BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;QAC3B,CAAC;KAAA;IAEc,aAAa,CAC1B,iBAAyB,EACzB,YAAoB,EACpB,OAAe,EACf,UAAkB,EAClB,OAA6D;;;;gBAE7D,KAAyB,eAAA,KAAA,sBAAA,IAAI,CAAC,cAAc,CAC1C,iBAAiB,EACjB,YAAY,EACZ,OAAO,EACP,UAAU,EACV,OAAO,CACR,CAAA,IAAA,uEAAE,CAAC;oBANqB,cAMxB;oBANwB,WAMxB;oBANU,MAAM,IAAI,KAAA,CAAA;oBAOnB,sBAAA,KAAK,CAAC,CAAC,yBAAA,sBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;OAOG;IACK,KAAK,CACX,iBAAyB,EACzB,YAAoB,EACpB,OAAe,EACf,UAAkB,EAClB,OAA6D;QAE7D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,YAAY,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,EACjE,iBAAiB,CAClB,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,GAAG,CACD,iBAAyB,EACzB,YAAoB,EACpB,OAAe,EACf,UAAkB,EAClB,cAAsB,EACtB,OAA4D;QAE5D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,YAAY;YACZ,OAAO;YACP,UAAU;YACV,cAAc;YACd,OAAO;SACR,EACD,gBAAgB,CACjB,CAAC;IACJ,CAAC;CACF;AAhJD,sFAgJC;AACD,2BAA2B;AAC3B,MAAM,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;AAE3E,MAAM,iBAAiB,GAA6B;IAClD,IAAI,EACF,4KAA4K;IAC9K,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,+CAA+C;SACpE;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,YAAY;QACvB,UAAU,CAAC,OAAO;QAClB,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gBAAgB,GAA6B;IACjD,IAAI,EACF,6LAA6L;IAC/L,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,qCAAqC;SAC1D;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,YAAY;QACvB,UAAU,CAAC,OAAO;QAClB,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,cAAc;KAC1B;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { WorkflowRunActionScopeRepetitions } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { LogicManagementClient } from \"../logicManagementClient.js\";\nimport {\n  WorkflowRunActionRepetitionDefinition,\n  WorkflowRunActionScopeRepetitionsListOptionalParams,\n  WorkflowRunActionScopeRepetitionsListResponse,\n  WorkflowRunActionScopeRepetitionsGetOptionalParams,\n  WorkflowRunActionScopeRepetitionsGetResponse\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing WorkflowRunActionScopeRepetitions operations. */\nexport class WorkflowRunActionScopeRepetitionsImpl\n  implements WorkflowRunActionScopeRepetitions {\n  private readonly client: LogicManagementClient;\n\n  /**\n   * Initialize a new instance of the class WorkflowRunActionScopeRepetitions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: LogicManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List the workflow run action scoped repetitions.\n   * @param resourceGroupName The resource group name.\n   * @param workflowName The workflow name.\n   * @param runName The workflow run name.\n   * @param actionName The workflow action name.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workflowName: string,\n    runName: string,\n    actionName: string,\n    options?: WorkflowRunActionScopeRepetitionsListOptionalParams\n  ): PagedAsyncIterableIterator<WorkflowRunActionRepetitionDefinition> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      workflowName,\n      runName,\n      actionName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          workflowName,\n          runName,\n          actionName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workflowName: string,\n    runName: string,\n    actionName: string,\n    options?: WorkflowRunActionScopeRepetitionsListOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<WorkflowRunActionRepetitionDefinition[]> {\n    let result: WorkflowRunActionScopeRepetitionsListResponse;\n    result = await this._list(\n      resourceGroupName,\n      workflowName,\n      runName,\n      actionName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workflowName: string,\n    runName: string,\n    actionName: string,\n    options?: WorkflowRunActionScopeRepetitionsListOptionalParams\n  ): AsyncIterableIterator<WorkflowRunActionRepetitionDefinition> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workflowName,\n      runName,\n      actionName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List the workflow run action scoped repetitions.\n   * @param resourceGroupName The resource group name.\n   * @param workflowName The workflow name.\n   * @param runName The workflow run name.\n   * @param actionName The workflow action name.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workflowName: string,\n    runName: string,\n    actionName: string,\n    options?: WorkflowRunActionScopeRepetitionsListOptionalParams\n  ): Promise<WorkflowRunActionScopeRepetitionsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workflowName, runName, actionName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Get a workflow run action scoped repetition.\n   * @param resourceGroupName The resource group name.\n   * @param workflowName The workflow name.\n   * @param runName The workflow run name.\n   * @param actionName The workflow action name.\n   * @param repetitionName The workflow repetition.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workflowName: string,\n    runName: string,\n    actionName: string,\n    repetitionName: string,\n    options?: WorkflowRunActionScopeRepetitionsGetOptionalParams\n  ): Promise<WorkflowRunActionScopeRepetitionsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workflowName,\n        runName,\n        actionName,\n        repetitionName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/scopeRepetitions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkflowRunActionRepetitionDefinitionCollection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workflowName,\n    Parameters.runName,\n    Parameters.actionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/scopeRepetitions/{repetitionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkflowRunActionRepetitionDefinition\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workflowName,\n    Parameters.runName,\n    Parameters.actionName,\n    Parameters.repetitionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n"]}