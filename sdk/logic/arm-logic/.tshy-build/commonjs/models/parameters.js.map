{"version":3,"file":"parameters.js","sourceRoot":"","sources":["../../../src/models/parameters.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  Workflow as WorkflowMapper,\n  GenerateUpgradedDefinitionParameters as GenerateUpgradedDefinitionParametersMapper,\n  GetCallbackUrlParameters as GetCallbackUrlParametersMapper,\n  WorkflowReference as WorkflowReferenceMapper,\n  RegenerateActionParameter as RegenerateActionParameterMapper,\n  SetTriggerStateActionDefinition as SetTriggerStateActionDefinitionMapper,\n  IntegrationAccount as IntegrationAccountMapper,\n  ListKeyVaultKeysDefinition as ListKeyVaultKeysDefinitionMapper,\n  TrackingEventsDefinition as TrackingEventsDefinitionMapper,\n  AssemblyDefinition as AssemblyDefinitionMapper,\n  BatchConfiguration as BatchConfigurationMapper,\n  IntegrationAccountSchema as IntegrationAccountSchemaMapper,\n  IntegrationAccountMap as IntegrationAccountMapMapper,\n  IntegrationAccountPartner as IntegrationAccountPartnerMapper,\n  IntegrationAccountAgreement as IntegrationAccountAgreementMapper,\n  IntegrationAccountCertificate as IntegrationAccountCertificateMapper,\n  IntegrationAccountSession as IntegrationAccountSessionMapper,\n  IntegrationServiceEnvironment as IntegrationServiceEnvironmentMapper,\n  IntegrationServiceEnvironmentManagedApi as IntegrationServiceEnvironmentManagedApiMapper\n} from \"../models/mappers.js\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2019-05-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const top: OperationQueryParameter = {\n  parameterPath: [\"options\", \"top\"],\n  mapper: {\n    serializedName: \"$top\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const filter: OperationQueryParameter = {\n  parameterPath: [\"options\", \"filter\"],\n  mapper: {\n    serializedName: \"$filter\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const workflowName: OperationURLParameter = {\n  parameterPath: \"workflowName\",\n  mapper: {\n    serializedName: \"workflowName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const workflow: OperationParameter = {\n  parameterPath: \"workflow\",\n  mapper: WorkflowMapper\n};\n\nexport const parameters: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: GenerateUpgradedDefinitionParametersMapper\n};\n\nexport const listCallbackUrl: OperationParameter = {\n  parameterPath: \"listCallbackUrl\",\n  mapper: GetCallbackUrlParametersMapper\n};\n\nexport const move: OperationParameter = {\n  parameterPath: \"move\",\n  mapper: WorkflowReferenceMapper\n};\n\nexport const keyType: OperationParameter = {\n  parameterPath: \"keyType\",\n  mapper: RegenerateActionParameterMapper\n};\n\nexport const validate: OperationParameter = {\n  parameterPath: \"validate\",\n  mapper: WorkflowMapper\n};\n\nexport const location: OperationURLParameter = {\n  parameterPath: \"location\",\n  mapper: {\n    serializedName: \"location\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const versionId: OperationURLParameter = {\n  parameterPath: \"versionId\",\n  mapper: {\n    serializedName: \"versionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const triggerName: OperationURLParameter = {\n  parameterPath: \"triggerName\",\n  mapper: {\n    serializedName: \"triggerName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const setState: OperationParameter = {\n  parameterPath: \"setState\",\n  mapper: SetTriggerStateActionDefinitionMapper\n};\n\nexport const parameters1: OperationParameter = {\n  parameterPath: [\"options\", \"parameters\"],\n  mapper: GetCallbackUrlParametersMapper\n};\n\nexport const historyName: OperationURLParameter = {\n  parameterPath: \"historyName\",\n  mapper: {\n    serializedName: \"historyName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const runName: OperationURLParameter = {\n  parameterPath: \"runName\",\n  mapper: {\n    serializedName: \"runName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const actionName: OperationURLParameter = {\n  parameterPath: \"actionName\",\n  mapper: {\n    serializedName: \"actionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const repetitionName: OperationURLParameter = {\n  parameterPath: \"repetitionName\",\n  mapper: {\n    serializedName: \"repetitionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const requestHistoryName: OperationURLParameter = {\n  parameterPath: \"requestHistoryName\",\n  mapper: {\n    serializedName: \"requestHistoryName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const operationId: OperationURLParameter = {\n  parameterPath: \"operationId\",\n  mapper: {\n    serializedName: \"operationId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const integrationAccountName: OperationURLParameter = {\n  parameterPath: \"integrationAccountName\",\n  mapper: {\n    serializedName: \"integrationAccountName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const integrationAccount: OperationParameter = {\n  parameterPath: \"integrationAccount\",\n  mapper: IntegrationAccountMapper\n};\n\nexport const parameters2: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: GetCallbackUrlParametersMapper\n};\n\nexport const listKeyVaultKeys: OperationParameter = {\n  parameterPath: \"listKeyVaultKeys\",\n  mapper: ListKeyVaultKeysDefinitionMapper\n};\n\nexport const logTrackingEvents: OperationParameter = {\n  parameterPath: \"logTrackingEvents\",\n  mapper: TrackingEventsDefinitionMapper\n};\n\nexport const regenerateAccessKey: OperationParameter = {\n  parameterPath: \"regenerateAccessKey\",\n  mapper: RegenerateActionParameterMapper\n};\n\nexport const assemblyArtifactName: OperationURLParameter = {\n  parameterPath: \"assemblyArtifactName\",\n  mapper: {\n    serializedName: \"assemblyArtifactName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const assemblyArtifact: OperationParameter = {\n  parameterPath: \"assemblyArtifact\",\n  mapper: AssemblyDefinitionMapper\n};\n\nexport const batchConfigurationName: OperationURLParameter = {\n  parameterPath: \"batchConfigurationName\",\n  mapper: {\n    serializedName: \"batchConfigurationName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const batchConfiguration: OperationParameter = {\n  parameterPath: \"batchConfiguration\",\n  mapper: BatchConfigurationMapper\n};\n\nexport const schemaName: OperationURLParameter = {\n  parameterPath: \"schemaName\",\n  mapper: {\n    serializedName: \"schemaName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const schema: OperationParameter = {\n  parameterPath: \"schema\",\n  mapper: IntegrationAccountSchemaMapper\n};\n\nexport const listContentCallbackUrl: OperationParameter = {\n  parameterPath: \"listContentCallbackUrl\",\n  mapper: GetCallbackUrlParametersMapper\n};\n\nexport const mapName: OperationURLParameter = {\n  parameterPath: \"mapName\",\n  mapper: {\n    serializedName: \"mapName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const map: OperationParameter = {\n  parameterPath: \"map\",\n  mapper: IntegrationAccountMapMapper\n};\n\nexport const partnerName: OperationURLParameter = {\n  parameterPath: \"partnerName\",\n  mapper: {\n    serializedName: \"partnerName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const partner: OperationParameter = {\n  parameterPath: \"partner\",\n  mapper: IntegrationAccountPartnerMapper\n};\n\nexport const agreementName: OperationURLParameter = {\n  parameterPath: \"agreementName\",\n  mapper: {\n    serializedName: \"agreementName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const agreement: OperationParameter = {\n  parameterPath: \"agreement\",\n  mapper: IntegrationAccountAgreementMapper\n};\n\nexport const certificateName: OperationURLParameter = {\n  parameterPath: \"certificateName\",\n  mapper: {\n    serializedName: \"certificateName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const certificate: OperationParameter = {\n  parameterPath: \"certificate\",\n  mapper: IntegrationAccountCertificateMapper\n};\n\nexport const sessionName: OperationURLParameter = {\n  parameterPath: \"sessionName\",\n  mapper: {\n    serializedName: \"sessionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const session: OperationParameter = {\n  parameterPath: \"session\",\n  mapper: IntegrationAccountSessionMapper\n};\n\nexport const resourceGroup: OperationURLParameter = {\n  parameterPath: \"resourceGroup\",\n  mapper: {\n    serializedName: \"resourceGroup\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const integrationServiceEnvironmentName: OperationURLParameter = {\n  parameterPath: \"integrationServiceEnvironmentName\",\n  mapper: {\n    serializedName: \"integrationServiceEnvironmentName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const integrationServiceEnvironment: OperationParameter = {\n  parameterPath: \"integrationServiceEnvironment\",\n  mapper: IntegrationServiceEnvironmentMapper\n};\n\nexport const apiName: OperationURLParameter = {\n  parameterPath: \"apiName\",\n  mapper: {\n    serializedName: \"apiName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const integrationServiceEnvironmentManagedApi: OperationParameter = {\n  parameterPath: \"integrationServiceEnvironmentManagedApi\",\n  mapper: IntegrationServiceEnvironmentManagedApiMapper\n};\n"]}