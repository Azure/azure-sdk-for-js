/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
/** Known values of {@link WorkflowProvisioningState} that the service accepts. */
export var KnownWorkflowProvisioningState;
(function (KnownWorkflowProvisioningState) {
    /** NotSpecified */
    KnownWorkflowProvisioningState["NotSpecified"] = "NotSpecified";
    /** Accepted */
    KnownWorkflowProvisioningState["Accepted"] = "Accepted";
    /** Running */
    KnownWorkflowProvisioningState["Running"] = "Running";
    /** Ready */
    KnownWorkflowProvisioningState["Ready"] = "Ready";
    /** Creating */
    KnownWorkflowProvisioningState["Creating"] = "Creating";
    /** Created */
    KnownWorkflowProvisioningState["Created"] = "Created";
    /** Deleting */
    KnownWorkflowProvisioningState["Deleting"] = "Deleting";
    /** Deleted */
    KnownWorkflowProvisioningState["Deleted"] = "Deleted";
    /** Canceled */
    KnownWorkflowProvisioningState["Canceled"] = "Canceled";
    /** Failed */
    KnownWorkflowProvisioningState["Failed"] = "Failed";
    /** Succeeded */
    KnownWorkflowProvisioningState["Succeeded"] = "Succeeded";
    /** Moving */
    KnownWorkflowProvisioningState["Moving"] = "Moving";
    /** Updating */
    KnownWorkflowProvisioningState["Updating"] = "Updating";
    /** Registering */
    KnownWorkflowProvisioningState["Registering"] = "Registering";
    /** Registered */
    KnownWorkflowProvisioningState["Registered"] = "Registered";
    /** Unregistering */
    KnownWorkflowProvisioningState["Unregistering"] = "Unregistering";
    /** Unregistered */
    KnownWorkflowProvisioningState["Unregistered"] = "Unregistered";
    /** Completed */
    KnownWorkflowProvisioningState["Completed"] = "Completed";
    /** Renewing */
    KnownWorkflowProvisioningState["Renewing"] = "Renewing";
    /** Pending */
    KnownWorkflowProvisioningState["Pending"] = "Pending";
    /** Waiting */
    KnownWorkflowProvisioningState["Waiting"] = "Waiting";
    /** InProgress */
    KnownWorkflowProvisioningState["InProgress"] = "InProgress";
})(KnownWorkflowProvisioningState || (KnownWorkflowProvisioningState = {}));
/** Known values of {@link WorkflowState} that the service accepts. */
export var KnownWorkflowState;
(function (KnownWorkflowState) {
    /** NotSpecified */
    KnownWorkflowState["NotSpecified"] = "NotSpecified";
    /** Completed */
    KnownWorkflowState["Completed"] = "Completed";
    /** Enabled */
    KnownWorkflowState["Enabled"] = "Enabled";
    /** Disabled */
    KnownWorkflowState["Disabled"] = "Disabled";
    /** Deleted */
    KnownWorkflowState["Deleted"] = "Deleted";
    /** Suspended */
    KnownWorkflowState["Suspended"] = "Suspended";
})(KnownWorkflowState || (KnownWorkflowState = {}));
/** Known values of {@link OpenAuthenticationProviderType} that the service accepts. */
export var KnownOpenAuthenticationProviderType;
(function (KnownOpenAuthenticationProviderType) {
    /** AAD */
    KnownOpenAuthenticationProviderType["AAD"] = "AAD";
})(KnownOpenAuthenticationProviderType || (KnownOpenAuthenticationProviderType = {}));
/** Known values of {@link SkuName} that the service accepts. */
export var KnownSkuName;
(function (KnownSkuName) {
    /** NotSpecified */
    KnownSkuName["NotSpecified"] = "NotSpecified";
    /** Free */
    KnownSkuName["Free"] = "Free";
    /** Shared */
    KnownSkuName["Shared"] = "Shared";
    /** Basic */
    KnownSkuName["Basic"] = "Basic";
    /** Standard */
    KnownSkuName["Standard"] = "Standard";
    /** Premium */
    KnownSkuName["Premium"] = "Premium";
})(KnownSkuName || (KnownSkuName = {}));
/** Known values of {@link ParameterType} that the service accepts. */
export var KnownParameterType;
(function (KnownParameterType) {
    /** NotSpecified */
    KnownParameterType["NotSpecified"] = "NotSpecified";
    /** String */
    KnownParameterType["String"] = "String";
    /** SecureString */
    KnownParameterType["SecureString"] = "SecureString";
    /** Int */
    KnownParameterType["Int"] = "Int";
    /** Float */
    KnownParameterType["Float"] = "Float";
    /** Bool */
    KnownParameterType["Bool"] = "Bool";
    /** Array */
    KnownParameterType["Array"] = "Array";
    /** Object */
    KnownParameterType["Object"] = "Object";
    /** SecureObject */
    KnownParameterType["SecureObject"] = "SecureObject";
})(KnownParameterType || (KnownParameterType = {}));
/** Known values of {@link ManagedServiceIdentityType} that the service accepts. */
export var KnownManagedServiceIdentityType;
(function (KnownManagedServiceIdentityType) {
    /** SystemAssigned */
    KnownManagedServiceIdentityType["SystemAssigned"] = "SystemAssigned";
    /** UserAssigned */
    KnownManagedServiceIdentityType["UserAssigned"] = "UserAssigned";
    /** None */
    KnownManagedServiceIdentityType["None"] = "None";
})(KnownManagedServiceIdentityType || (KnownManagedServiceIdentityType = {}));
/** Known values of {@link KeyType} that the service accepts. */
export var KnownKeyType;
(function (KnownKeyType) {
    /** NotSpecified */
    KnownKeyType["NotSpecified"] = "NotSpecified";
    /** Primary */
    KnownKeyType["Primary"] = "Primary";
    /** Secondary */
    KnownKeyType["Secondary"] = "Secondary";
})(KnownKeyType || (KnownKeyType = {}));
/** Known values of {@link WorkflowTriggerProvisioningState} that the service accepts. */
export var KnownWorkflowTriggerProvisioningState;
(function (KnownWorkflowTriggerProvisioningState) {
    /** NotSpecified */
    KnownWorkflowTriggerProvisioningState["NotSpecified"] = "NotSpecified";
    /** Accepted */
    KnownWorkflowTriggerProvisioningState["Accepted"] = "Accepted";
    /** Running */
    KnownWorkflowTriggerProvisioningState["Running"] = "Running";
    /** Ready */
    KnownWorkflowTriggerProvisioningState["Ready"] = "Ready";
    /** Creating */
    KnownWorkflowTriggerProvisioningState["Creating"] = "Creating";
    /** Created */
    KnownWorkflowTriggerProvisioningState["Created"] = "Created";
    /** Deleting */
    KnownWorkflowTriggerProvisioningState["Deleting"] = "Deleting";
    /** Deleted */
    KnownWorkflowTriggerProvisioningState["Deleted"] = "Deleted";
    /** Canceled */
    KnownWorkflowTriggerProvisioningState["Canceled"] = "Canceled";
    /** Failed */
    KnownWorkflowTriggerProvisioningState["Failed"] = "Failed";
    /** Succeeded */
    KnownWorkflowTriggerProvisioningState["Succeeded"] = "Succeeded";
    /** Moving */
    KnownWorkflowTriggerProvisioningState["Moving"] = "Moving";
    /** Updating */
    KnownWorkflowTriggerProvisioningState["Updating"] = "Updating";
    /** Registering */
    KnownWorkflowTriggerProvisioningState["Registering"] = "Registering";
    /** Registered */
    KnownWorkflowTriggerProvisioningState["Registered"] = "Registered";
    /** Unregistering */
    KnownWorkflowTriggerProvisioningState["Unregistering"] = "Unregistering";
    /** Unregistered */
    KnownWorkflowTriggerProvisioningState["Unregistered"] = "Unregistered";
    /** Completed */
    KnownWorkflowTriggerProvisioningState["Completed"] = "Completed";
})(KnownWorkflowTriggerProvisioningState || (KnownWorkflowTriggerProvisioningState = {}));
/** Known values of {@link WorkflowStatus} that the service accepts. */
export var KnownWorkflowStatus;
(function (KnownWorkflowStatus) {
    /** NotSpecified */
    KnownWorkflowStatus["NotSpecified"] = "NotSpecified";
    /** Paused */
    KnownWorkflowStatus["Paused"] = "Paused";
    /** Running */
    KnownWorkflowStatus["Running"] = "Running";
    /** Waiting */
    KnownWorkflowStatus["Waiting"] = "Waiting";
    /** Succeeded */
    KnownWorkflowStatus["Succeeded"] = "Succeeded";
    /** Skipped */
    KnownWorkflowStatus["Skipped"] = "Skipped";
    /** Suspended */
    KnownWorkflowStatus["Suspended"] = "Suspended";
    /** Cancelled */
    KnownWorkflowStatus["Cancelled"] = "Cancelled";
    /** Failed */
    KnownWorkflowStatus["Failed"] = "Failed";
    /** Faulted */
    KnownWorkflowStatus["Faulted"] = "Faulted";
    /** TimedOut */
    KnownWorkflowStatus["TimedOut"] = "TimedOut";
    /** Aborted */
    KnownWorkflowStatus["Aborted"] = "Aborted";
    /** Ignored */
    KnownWorkflowStatus["Ignored"] = "Ignored";
})(KnownWorkflowStatus || (KnownWorkflowStatus = {}));
/** Known values of {@link RecurrenceFrequency} that the service accepts. */
export var KnownRecurrenceFrequency;
(function (KnownRecurrenceFrequency) {
    /** NotSpecified */
    KnownRecurrenceFrequency["NotSpecified"] = "NotSpecified";
    /** Second */
    KnownRecurrenceFrequency["Second"] = "Second";
    /** Minute */
    KnownRecurrenceFrequency["Minute"] = "Minute";
    /** Hour */
    KnownRecurrenceFrequency["Hour"] = "Hour";
    /** Day */
    KnownRecurrenceFrequency["Day"] = "Day";
    /** Week */
    KnownRecurrenceFrequency["Week"] = "Week";
    /** Month */
    KnownRecurrenceFrequency["Month"] = "Month";
    /** Year */
    KnownRecurrenceFrequency["Year"] = "Year";
})(KnownRecurrenceFrequency || (KnownRecurrenceFrequency = {}));
/** Known values of {@link IntegrationAccountSkuName} that the service accepts. */
export var KnownIntegrationAccountSkuName;
(function (KnownIntegrationAccountSkuName) {
    /** NotSpecified */
    KnownIntegrationAccountSkuName["NotSpecified"] = "NotSpecified";
    /** Free */
    KnownIntegrationAccountSkuName["Free"] = "Free";
    /** Basic */
    KnownIntegrationAccountSkuName["Basic"] = "Basic";
    /** Standard */
    KnownIntegrationAccountSkuName["Standard"] = "Standard";
})(KnownIntegrationAccountSkuName || (KnownIntegrationAccountSkuName = {}));
/** Known values of {@link TrackEventsOperationOptions} that the service accepts. */
export var KnownTrackEventsOperationOptions;
(function (KnownTrackEventsOperationOptions) {
    /** None */
    KnownTrackEventsOperationOptions["None"] = "None";
    /** DisableSourceInfoEnrich */
    KnownTrackEventsOperationOptions["DisableSourceInfoEnrich"] = "DisableSourceInfoEnrich";
})(KnownTrackEventsOperationOptions || (KnownTrackEventsOperationOptions = {}));
/** Known values of {@link TrackingRecordType} that the service accepts. */
export var KnownTrackingRecordType;
(function (KnownTrackingRecordType) {
    /** NotSpecified */
    KnownTrackingRecordType["NotSpecified"] = "NotSpecified";
    /** Custom */
    KnownTrackingRecordType["Custom"] = "Custom";
    /** AS2Message */
    KnownTrackingRecordType["AS2Message"] = "AS2Message";
    /** AS2MDN */
    KnownTrackingRecordType["AS2MDN"] = "AS2MDN";
    /** X12Interchange */
    KnownTrackingRecordType["X12Interchange"] = "X12Interchange";
    /** X12FunctionalGroup */
    KnownTrackingRecordType["X12FunctionalGroup"] = "X12FunctionalGroup";
    /** X12TransactionSet */
    KnownTrackingRecordType["X12TransactionSet"] = "X12TransactionSet";
    /** X12InterchangeAcknowledgment */
    KnownTrackingRecordType["X12InterchangeAcknowledgment"] = "X12InterchangeAcknowledgment";
    /** X12FunctionalGroupAcknowledgment */
    KnownTrackingRecordType["X12FunctionalGroupAcknowledgment"] = "X12FunctionalGroupAcknowledgment";
    /** X12TransactionSetAcknowledgment */
    KnownTrackingRecordType["X12TransactionSetAcknowledgment"] = "X12TransactionSetAcknowledgment";
    /** EdifactInterchange */
    KnownTrackingRecordType["EdifactInterchange"] = "EdifactInterchange";
    /** EdifactFunctionalGroup */
    KnownTrackingRecordType["EdifactFunctionalGroup"] = "EdifactFunctionalGroup";
    /** EdifactTransactionSet */
    KnownTrackingRecordType["EdifactTransactionSet"] = "EdifactTransactionSet";
    /** EdifactInterchangeAcknowledgment */
    KnownTrackingRecordType["EdifactInterchangeAcknowledgment"] = "EdifactInterchangeAcknowledgment";
    /** EdifactFunctionalGroupAcknowledgment */
    KnownTrackingRecordType["EdifactFunctionalGroupAcknowledgment"] = "EdifactFunctionalGroupAcknowledgment";
    /** EdifactTransactionSetAcknowledgment */
    KnownTrackingRecordType["EdifactTransactionSetAcknowledgment"] = "EdifactTransactionSetAcknowledgment";
})(KnownTrackingRecordType || (KnownTrackingRecordType = {}));
/** Known values of {@link SchemaType} that the service accepts. */
export var KnownSchemaType;
(function (KnownSchemaType) {
    /** NotSpecified */
    KnownSchemaType["NotSpecified"] = "NotSpecified";
    /** Xml */
    KnownSchemaType["Xml"] = "Xml";
})(KnownSchemaType || (KnownSchemaType = {}));
/** Known values of {@link MapType} that the service accepts. */
export var KnownMapType;
(function (KnownMapType) {
    /** NotSpecified */
    KnownMapType["NotSpecified"] = "NotSpecified";
    /** Xslt */
    KnownMapType["Xslt"] = "Xslt";
    /** Xslt20 */
    KnownMapType["Xslt20"] = "Xslt20";
    /** Xslt30 */
    KnownMapType["Xslt30"] = "Xslt30";
    /** Liquid */
    KnownMapType["Liquid"] = "Liquid";
})(KnownMapType || (KnownMapType = {}));
/** Known values of {@link PartnerType} that the service accepts. */
export var KnownPartnerType;
(function (KnownPartnerType) {
    /** NotSpecified */
    KnownPartnerType["NotSpecified"] = "NotSpecified";
    /** B2B */
    KnownPartnerType["B2B"] = "B2B";
})(KnownPartnerType || (KnownPartnerType = {}));
/** Known values of {@link HashingAlgorithm} that the service accepts. */
export var KnownHashingAlgorithm;
(function (KnownHashingAlgorithm) {
    /** NotSpecified */
    KnownHashingAlgorithm["NotSpecified"] = "NotSpecified";
    /** None */
    KnownHashingAlgorithm["None"] = "None";
    /** MD5 */
    KnownHashingAlgorithm["MD5"] = "MD5";
    /** SHA1 */
    KnownHashingAlgorithm["SHA1"] = "SHA1";
    /** SHA2256 */
    KnownHashingAlgorithm["SHA2256"] = "SHA2256";
    /** SHA2384 */
    KnownHashingAlgorithm["SHA2384"] = "SHA2384";
    /** SHA2512 */
    KnownHashingAlgorithm["SHA2512"] = "SHA2512";
})(KnownHashingAlgorithm || (KnownHashingAlgorithm = {}));
/** Known values of {@link EncryptionAlgorithm} that the service accepts. */
export var KnownEncryptionAlgorithm;
(function (KnownEncryptionAlgorithm) {
    /** NotSpecified */
    KnownEncryptionAlgorithm["NotSpecified"] = "NotSpecified";
    /** None */
    KnownEncryptionAlgorithm["None"] = "None";
    /** DES3 */
    KnownEncryptionAlgorithm["DES3"] = "DES3";
    /** RC2 */
    KnownEncryptionAlgorithm["RC2"] = "RC2";
    /** AES128 */
    KnownEncryptionAlgorithm["AES128"] = "AES128";
    /** AES192 */
    KnownEncryptionAlgorithm["AES192"] = "AES192";
    /** AES256 */
    KnownEncryptionAlgorithm["AES256"] = "AES256";
})(KnownEncryptionAlgorithm || (KnownEncryptionAlgorithm = {}));
/** Known values of {@link SigningAlgorithm} that the service accepts. */
export var KnownSigningAlgorithm;
(function (KnownSigningAlgorithm) {
    /** NotSpecified */
    KnownSigningAlgorithm["NotSpecified"] = "NotSpecified";
    /** Default */
    KnownSigningAlgorithm["Default"] = "Default";
    /** SHA1 */
    KnownSigningAlgorithm["SHA1"] = "SHA1";
    /** SHA2256 */
    KnownSigningAlgorithm["SHA2256"] = "SHA2256";
    /** SHA2384 */
    KnownSigningAlgorithm["SHA2384"] = "SHA2384";
    /** SHA2512 */
    KnownSigningAlgorithm["SHA2512"] = "SHA2512";
})(KnownSigningAlgorithm || (KnownSigningAlgorithm = {}));
/** Known values of {@link TrailingSeparatorPolicy} that the service accepts. */
export var KnownTrailingSeparatorPolicy;
(function (KnownTrailingSeparatorPolicy) {
    /** NotSpecified */
    KnownTrailingSeparatorPolicy["NotSpecified"] = "NotSpecified";
    /** NotAllowed */
    KnownTrailingSeparatorPolicy["NotAllowed"] = "NotAllowed";
    /** Optional */
    KnownTrailingSeparatorPolicy["Optional"] = "Optional";
    /** Mandatory */
    KnownTrailingSeparatorPolicy["Mandatory"] = "Mandatory";
})(KnownTrailingSeparatorPolicy || (KnownTrailingSeparatorPolicy = {}));
/** Known values of {@link X12CharacterSet} that the service accepts. */
export var KnownX12CharacterSet;
(function (KnownX12CharacterSet) {
    /** NotSpecified */
    KnownX12CharacterSet["NotSpecified"] = "NotSpecified";
    /** Basic */
    KnownX12CharacterSet["Basic"] = "Basic";
    /** Extended */
    KnownX12CharacterSet["Extended"] = "Extended";
    /** UTF8 */
    KnownX12CharacterSet["UTF8"] = "UTF8";
})(KnownX12CharacterSet || (KnownX12CharacterSet = {}));
/** Known values of {@link X12DateFormat} that the service accepts. */
export var KnownX12DateFormat;
(function (KnownX12DateFormat) {
    /** NotSpecified */
    KnownX12DateFormat["NotSpecified"] = "NotSpecified";
    /** Ccyymmdd */
    KnownX12DateFormat["Ccyymmdd"] = "CCYYMMDD";
    /** Yymmdd */
    KnownX12DateFormat["Yymmdd"] = "YYMMDD";
})(KnownX12DateFormat || (KnownX12DateFormat = {}));
/** Known values of {@link X12TimeFormat} that the service accepts. */
export var KnownX12TimeFormat;
(function (KnownX12TimeFormat) {
    /** NotSpecified */
    KnownX12TimeFormat["NotSpecified"] = "NotSpecified";
    /** Hhmm */
    KnownX12TimeFormat["Hhmm"] = "HHMM";
    /** Hhmmss */
    KnownX12TimeFormat["Hhmmss"] = "HHMMSS";
    /** HhmmsSdd */
    KnownX12TimeFormat["HhmmsSdd"] = "HHMMSSdd";
    /** HhmmsSd */
    KnownX12TimeFormat["HhmmsSd"] = "HHMMSSd";
})(KnownX12TimeFormat || (KnownX12TimeFormat = {}));
/** Known values of {@link UsageIndicator} that the service accepts. */
export var KnownUsageIndicator;
(function (KnownUsageIndicator) {
    /** NotSpecified */
    KnownUsageIndicator["NotSpecified"] = "NotSpecified";
    /** Test */
    KnownUsageIndicator["Test"] = "Test";
    /** Information */
    KnownUsageIndicator["Information"] = "Information";
    /** Production */
    KnownUsageIndicator["Production"] = "Production";
})(KnownUsageIndicator || (KnownUsageIndicator = {}));
/** Known values of {@link MessageFilterType} that the service accepts. */
export var KnownMessageFilterType;
(function (KnownMessageFilterType) {
    /** NotSpecified */
    KnownMessageFilterType["NotSpecified"] = "NotSpecified";
    /** Include */
    KnownMessageFilterType["Include"] = "Include";
    /** Exclude */
    KnownMessageFilterType["Exclude"] = "Exclude";
})(KnownMessageFilterType || (KnownMessageFilterType = {}));
/** Known values of {@link EdifactCharacterSet} that the service accepts. */
export var KnownEdifactCharacterSet;
(function (KnownEdifactCharacterSet) {
    /** NotSpecified */
    KnownEdifactCharacterSet["NotSpecified"] = "NotSpecified";
    /** Unob */
    KnownEdifactCharacterSet["Unob"] = "UNOB";
    /** Unoa */
    KnownEdifactCharacterSet["Unoa"] = "UNOA";
    /** Unoc */
    KnownEdifactCharacterSet["Unoc"] = "UNOC";
    /** Unod */
    KnownEdifactCharacterSet["Unod"] = "UNOD";
    /** Unoe */
    KnownEdifactCharacterSet["Unoe"] = "UNOE";
    /** Unof */
    KnownEdifactCharacterSet["Unof"] = "UNOF";
    /** Unog */
    KnownEdifactCharacterSet["Unog"] = "UNOG";
    /** Unoh */
    KnownEdifactCharacterSet["Unoh"] = "UNOH";
    /** Unoi */
    KnownEdifactCharacterSet["Unoi"] = "UNOI";
    /** Unoj */
    KnownEdifactCharacterSet["Unoj"] = "UNOJ";
    /** Unok */
    KnownEdifactCharacterSet["Unok"] = "UNOK";
    /** Unox */
    KnownEdifactCharacterSet["Unox"] = "UNOX";
    /** Unoy */
    KnownEdifactCharacterSet["Unoy"] = "UNOY";
    /** Keca */
    KnownEdifactCharacterSet["Keca"] = "KECA";
})(KnownEdifactCharacterSet || (KnownEdifactCharacterSet = {}));
/** Known values of {@link IntegrationServiceEnvironmentAccessEndpointType} that the service accepts. */
export var KnownIntegrationServiceEnvironmentAccessEndpointType;
(function (KnownIntegrationServiceEnvironmentAccessEndpointType) {
    /** NotSpecified */
    KnownIntegrationServiceEnvironmentAccessEndpointType["NotSpecified"] = "NotSpecified";
    /** External */
    KnownIntegrationServiceEnvironmentAccessEndpointType["External"] = "External";
    /** Internal */
    KnownIntegrationServiceEnvironmentAccessEndpointType["Internal"] = "Internal";
})(KnownIntegrationServiceEnvironmentAccessEndpointType || (KnownIntegrationServiceEnvironmentAccessEndpointType = {}));
/** Known values of {@link IntegrationServiceEnvironmentSkuName} that the service accepts. */
export var KnownIntegrationServiceEnvironmentSkuName;
(function (KnownIntegrationServiceEnvironmentSkuName) {
    /** NotSpecified */
    KnownIntegrationServiceEnvironmentSkuName["NotSpecified"] = "NotSpecified";
    /** Premium */
    KnownIntegrationServiceEnvironmentSkuName["Premium"] = "Premium";
    /** Developer */
    KnownIntegrationServiceEnvironmentSkuName["Developer"] = "Developer";
})(KnownIntegrationServiceEnvironmentSkuName || (KnownIntegrationServiceEnvironmentSkuName = {}));
/** Known values of {@link IntegrationServiceEnvironmentSkuScaleType} that the service accepts. */
export var KnownIntegrationServiceEnvironmentSkuScaleType;
(function (KnownIntegrationServiceEnvironmentSkuScaleType) {
    /** Manual */
    KnownIntegrationServiceEnvironmentSkuScaleType["Manual"] = "Manual";
    /** Automatic */
    KnownIntegrationServiceEnvironmentSkuScaleType["Automatic"] = "Automatic";
    /** None */
    KnownIntegrationServiceEnvironmentSkuScaleType["None"] = "None";
})(KnownIntegrationServiceEnvironmentSkuScaleType || (KnownIntegrationServiceEnvironmentSkuScaleType = {}));
/** Known values of {@link IntegrationServiceEnvironmentNetworkDependencyCategoryType} that the service accepts. */
export var KnownIntegrationServiceEnvironmentNetworkDependencyCategoryType;
(function (KnownIntegrationServiceEnvironmentNetworkDependencyCategoryType) {
    /** NotSpecified */
    KnownIntegrationServiceEnvironmentNetworkDependencyCategoryType["NotSpecified"] = "NotSpecified";
    /** AzureStorage */
    KnownIntegrationServiceEnvironmentNetworkDependencyCategoryType["AzureStorage"] = "AzureStorage";
    /** AzureManagement */
    KnownIntegrationServiceEnvironmentNetworkDependencyCategoryType["AzureManagement"] = "AzureManagement";
    /** AzureActiveDirectory */
    KnownIntegrationServiceEnvironmentNetworkDependencyCategoryType["AzureActiveDirectory"] = "AzureActiveDirectory";
    /** SSLCertificateVerification */
    KnownIntegrationServiceEnvironmentNetworkDependencyCategoryType["SSLCertificateVerification"] = "SSLCertificateVerification";
    /** DiagnosticLogsAndMetrics */
    KnownIntegrationServiceEnvironmentNetworkDependencyCategoryType["DiagnosticLogsAndMetrics"] = "DiagnosticLogsAndMetrics";
    /** IntegrationServiceEnvironmentConnectors */
    KnownIntegrationServiceEnvironmentNetworkDependencyCategoryType["IntegrationServiceEnvironmentConnectors"] = "IntegrationServiceEnvironmentConnectors";
    /** RedisCache */
    KnownIntegrationServiceEnvironmentNetworkDependencyCategoryType["RedisCache"] = "RedisCache";
    /** AccessEndpoints */
    KnownIntegrationServiceEnvironmentNetworkDependencyCategoryType["AccessEndpoints"] = "AccessEndpoints";
    /** RecoveryService */
    KnownIntegrationServiceEnvironmentNetworkDependencyCategoryType["RecoveryService"] = "RecoveryService";
    /** SQL */
    KnownIntegrationServiceEnvironmentNetworkDependencyCategoryType["SQL"] = "SQL";
    /** RegionalService */
    KnownIntegrationServiceEnvironmentNetworkDependencyCategoryType["RegionalService"] = "RegionalService";
})(KnownIntegrationServiceEnvironmentNetworkDependencyCategoryType || (KnownIntegrationServiceEnvironmentNetworkDependencyCategoryType = {}));
/** Known values of {@link IntegrationServiceEnvironmentNetworkEndPointAccessibilityState} that the service accepts. */
export var KnownIntegrationServiceEnvironmentNetworkEndPointAccessibilityState;
(function (KnownIntegrationServiceEnvironmentNetworkEndPointAccessibilityState) {
    /** NotSpecified */
    KnownIntegrationServiceEnvironmentNetworkEndPointAccessibilityState["NotSpecified"] = "NotSpecified";
    /** Unknown */
    KnownIntegrationServiceEnvironmentNetworkEndPointAccessibilityState["Unknown"] = "Unknown";
    /** Available */
    KnownIntegrationServiceEnvironmentNetworkEndPointAccessibilityState["Available"] = "Available";
    /** NotAvailable */
    KnownIntegrationServiceEnvironmentNetworkEndPointAccessibilityState["NotAvailable"] = "NotAvailable";
})(KnownIntegrationServiceEnvironmentNetworkEndPointAccessibilityState || (KnownIntegrationServiceEnvironmentNetworkEndPointAccessibilityState = {}));
/** Known values of {@link ErrorResponseCode} that the service accepts. */
export var KnownErrorResponseCode;
(function (KnownErrorResponseCode) {
    /** NotSpecified */
    KnownErrorResponseCode["NotSpecified"] = "NotSpecified";
    /** IntegrationServiceEnvironmentNotFound */
    KnownErrorResponseCode["IntegrationServiceEnvironmentNotFound"] = "IntegrationServiceEnvironmentNotFound";
    /** InternalServerError */
    KnownErrorResponseCode["InternalServerError"] = "InternalServerError";
    /** InvalidOperationId */
    KnownErrorResponseCode["InvalidOperationId"] = "InvalidOperationId";
})(KnownErrorResponseCode || (KnownErrorResponseCode = {}));
/** Known values of {@link IntegrationServiceEnvironmentNetworkDependencyHealthState} that the service accepts. */
export var KnownIntegrationServiceEnvironmentNetworkDependencyHealthState;
(function (KnownIntegrationServiceEnvironmentNetworkDependencyHealthState) {
    /** NotSpecified */
    KnownIntegrationServiceEnvironmentNetworkDependencyHealthState["NotSpecified"] = "NotSpecified";
    /** Healthy */
    KnownIntegrationServiceEnvironmentNetworkDependencyHealthState["Healthy"] = "Healthy";
    /** Unhealthy */
    KnownIntegrationServiceEnvironmentNetworkDependencyHealthState["Unhealthy"] = "Unhealthy";
    /** Unknown */
    KnownIntegrationServiceEnvironmentNetworkDependencyHealthState["Unknown"] = "Unknown";
})(KnownIntegrationServiceEnvironmentNetworkDependencyHealthState || (KnownIntegrationServiceEnvironmentNetworkDependencyHealthState = {}));
/** Known values of {@link ApiType} that the service accepts. */
export var KnownApiType;
(function (KnownApiType) {
    /** NotSpecified */
    KnownApiType["NotSpecified"] = "NotSpecified";
    /** Rest */
    KnownApiType["Rest"] = "Rest";
    /** Soap */
    KnownApiType["Soap"] = "Soap";
})(KnownApiType || (KnownApiType = {}));
/** Known values of {@link WsdlImportMethod} that the service accepts. */
export var KnownWsdlImportMethod;
(function (KnownWsdlImportMethod) {
    /** NotSpecified */
    KnownWsdlImportMethod["NotSpecified"] = "NotSpecified";
    /** SoapToRest */
    KnownWsdlImportMethod["SoapToRest"] = "SoapToRest";
    /** SoapPassThrough */
    KnownWsdlImportMethod["SoapPassThrough"] = "SoapPassThrough";
})(KnownWsdlImportMethod || (KnownWsdlImportMethod = {}));
/** Known values of {@link ApiDeploymentParameterVisibility} that the service accepts. */
export var KnownApiDeploymentParameterVisibility;
(function (KnownApiDeploymentParameterVisibility) {
    /** NotSpecified */
    KnownApiDeploymentParameterVisibility["NotSpecified"] = "NotSpecified";
    /** Default */
    KnownApiDeploymentParameterVisibility["Default"] = "Default";
    /** Internal */
    KnownApiDeploymentParameterVisibility["Internal"] = "Internal";
})(KnownApiDeploymentParameterVisibility || (KnownApiDeploymentParameterVisibility = {}));
/** Known values of {@link ApiTier} that the service accepts. */
export var KnownApiTier;
(function (KnownApiTier) {
    /** NotSpecified */
    KnownApiTier["NotSpecified"] = "NotSpecified";
    /** Enterprise */
    KnownApiTier["Enterprise"] = "Enterprise";
    /** Standard */
    KnownApiTier["Standard"] = "Standard";
    /** Premium */
    KnownApiTier["Premium"] = "Premium";
})(KnownApiTier || (KnownApiTier = {}));
/** Known values of {@link StatusAnnotation} that the service accepts. */
export var KnownStatusAnnotation;
(function (KnownStatusAnnotation) {
    /** NotSpecified */
    KnownStatusAnnotation["NotSpecified"] = "NotSpecified";
    /** Preview */
    KnownStatusAnnotation["Preview"] = "Preview";
    /** Production */
    KnownStatusAnnotation["Production"] = "Production";
})(KnownStatusAnnotation || (KnownStatusAnnotation = {}));
/** Known values of {@link SwaggerSchemaType} that the service accepts. */
export var KnownSwaggerSchemaType;
(function (KnownSwaggerSchemaType) {
    /** String */
    KnownSwaggerSchemaType["String"] = "String";
    /** Number */
    KnownSwaggerSchemaType["Number"] = "Number";
    /** Integer */
    KnownSwaggerSchemaType["Integer"] = "Integer";
    /** Boolean */
    KnownSwaggerSchemaType["Boolean"] = "Boolean";
    /** Array */
    KnownSwaggerSchemaType["Array"] = "Array";
    /** File */
    KnownSwaggerSchemaType["File"] = "File";
    /** Object */
    KnownSwaggerSchemaType["Object"] = "Object";
    /** Null */
    KnownSwaggerSchemaType["Null"] = "Null";
})(KnownSwaggerSchemaType || (KnownSwaggerSchemaType = {}));
/** Known values of {@link AzureAsyncOperationState} that the service accepts. */
export var KnownAzureAsyncOperationState;
(function (KnownAzureAsyncOperationState) {
    /** Failed */
    KnownAzureAsyncOperationState["Failed"] = "Failed";
    /** Succeeded */
    KnownAzureAsyncOperationState["Succeeded"] = "Succeeded";
    /** Pending */
    KnownAzureAsyncOperationState["Pending"] = "Pending";
    /** Canceled */
    KnownAzureAsyncOperationState["Canceled"] = "Canceled";
})(KnownAzureAsyncOperationState || (KnownAzureAsyncOperationState = {}));
//# sourceMappingURL=index.js.map