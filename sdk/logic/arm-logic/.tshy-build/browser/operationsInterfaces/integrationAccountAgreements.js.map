{"version":3,"file":"integrationAccountAgreements.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/integrationAccountAgreements.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport {\n  IntegrationAccountAgreement,\n  IntegrationAccountAgreementsListOptionalParams,\n  IntegrationAccountAgreementsGetOptionalParams,\n  IntegrationAccountAgreementsGetResponse,\n  IntegrationAccountAgreementsCreateOrUpdateOptionalParams,\n  IntegrationAccountAgreementsCreateOrUpdateResponse,\n  IntegrationAccountAgreementsDeleteOptionalParams,\n  GetCallbackUrlParameters,\n  IntegrationAccountAgreementsListContentCallbackUrlOptionalParams,\n  IntegrationAccountAgreementsListContentCallbackUrlResponse\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a IntegrationAccountAgreements. */\nexport interface IntegrationAccountAgreements {\n  /**\n   * Gets a list of integration account agreements.\n   * @param resourceGroupName The resource group name.\n   * @param integrationAccountName The integration account name.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    integrationAccountName: string,\n    options?: IntegrationAccountAgreementsListOptionalParams\n  ): PagedAsyncIterableIterator<IntegrationAccountAgreement>;\n  /**\n   * Gets an integration account agreement.\n   * @param resourceGroupName The resource group name.\n   * @param integrationAccountName The integration account name.\n   * @param agreementName The integration account agreement name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    integrationAccountName: string,\n    agreementName: string,\n    options?: IntegrationAccountAgreementsGetOptionalParams\n  ): Promise<IntegrationAccountAgreementsGetResponse>;\n  /**\n   * Creates or updates an integration account agreement.\n   * @param resourceGroupName The resource group name.\n   * @param integrationAccountName The integration account name.\n   * @param agreementName The integration account agreement name.\n   * @param agreement The integration account agreement.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    integrationAccountName: string,\n    agreementName: string,\n    agreement: IntegrationAccountAgreement,\n    options?: IntegrationAccountAgreementsCreateOrUpdateOptionalParams\n  ): Promise<IntegrationAccountAgreementsCreateOrUpdateResponse>;\n  /**\n   * Deletes an integration account agreement.\n   * @param resourceGroupName The resource group name.\n   * @param integrationAccountName The integration account name.\n   * @param agreementName The integration account agreement name.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    integrationAccountName: string,\n    agreementName: string,\n    options?: IntegrationAccountAgreementsDeleteOptionalParams\n  ): Promise<void>;\n  /**\n   * Get the content callback url.\n   * @param resourceGroupName The resource group name.\n   * @param integrationAccountName The integration account name.\n   * @param agreementName The integration account agreement name.\n   * @param listContentCallbackUrl The callback url parameters.\n   * @param options The options parameters.\n   */\n  listContentCallbackUrl(\n    resourceGroupName: string,\n    integrationAccountName: string,\n    agreementName: string,\n    listContentCallbackUrl: GetCallbackUrlParameters,\n    options?: IntegrationAccountAgreementsListContentCallbackUrlOptionalParams\n  ): Promise<IntegrationAccountAgreementsListContentCallbackUrlResponse>;\n}\n"]}