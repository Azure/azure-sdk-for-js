{"version":3,"file":"integrationAccountMaps.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/integrationAccountMaps.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport {\n  IntegrationAccountMap,\n  IntegrationAccountMapsListOptionalParams,\n  IntegrationAccountMapsGetOptionalParams,\n  IntegrationAccountMapsGetResponse,\n  IntegrationAccountMapsCreateOrUpdateOptionalParams,\n  IntegrationAccountMapsCreateOrUpdateResponse,\n  IntegrationAccountMapsDeleteOptionalParams,\n  GetCallbackUrlParameters,\n  IntegrationAccountMapsListContentCallbackUrlOptionalParams,\n  IntegrationAccountMapsListContentCallbackUrlResponse\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a IntegrationAccountMaps. */\nexport interface IntegrationAccountMaps {\n  /**\n   * Gets a list of integration account maps.\n   * @param resourceGroupName The resource group name.\n   * @param integrationAccountName The integration account name.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    integrationAccountName: string,\n    options?: IntegrationAccountMapsListOptionalParams\n  ): PagedAsyncIterableIterator<IntegrationAccountMap>;\n  /**\n   * Gets an integration account map.\n   * @param resourceGroupName The resource group name.\n   * @param integrationAccountName The integration account name.\n   * @param mapName The integration account map name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    integrationAccountName: string,\n    mapName: string,\n    options?: IntegrationAccountMapsGetOptionalParams\n  ): Promise<IntegrationAccountMapsGetResponse>;\n  /**\n   * Creates or updates an integration account map. If the map is larger than 4 MB, you need to store the\n   * map in an Azure blob and use the blob's Shared Access Signature (SAS) URL as the 'contentLink'\n   * property value.\n   * @param resourceGroupName The resource group name.\n   * @param integrationAccountName The integration account name.\n   * @param mapName The integration account map name.\n   * @param map The integration account map.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    integrationAccountName: string,\n    mapName: string,\n    map: IntegrationAccountMap,\n    options?: IntegrationAccountMapsCreateOrUpdateOptionalParams\n  ): Promise<IntegrationAccountMapsCreateOrUpdateResponse>;\n  /**\n   * Deletes an integration account map.\n   * @param resourceGroupName The resource group name.\n   * @param integrationAccountName The integration account name.\n   * @param mapName The integration account map name.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    integrationAccountName: string,\n    mapName: string,\n    options?: IntegrationAccountMapsDeleteOptionalParams\n  ): Promise<void>;\n  /**\n   * Get the content callback url.\n   * @param resourceGroupName The resource group name.\n   * @param integrationAccountName The integration account name.\n   * @param mapName The integration account map name.\n   * @param listContentCallbackUrl The callback url parameters.\n   * @param options The options parameters.\n   */\n  listContentCallbackUrl(\n    resourceGroupName: string,\n    integrationAccountName: string,\n    mapName: string,\n    listContentCallbackUrl: GetCallbackUrlParameters,\n    options?: IntegrationAccountMapsListContentCallbackUrlOptionalParams\n  ): Promise<IntegrationAccountMapsListContentCallbackUrlResponse>;\n}\n"]}