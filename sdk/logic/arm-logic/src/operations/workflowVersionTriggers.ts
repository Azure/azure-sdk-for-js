/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { WorkflowVersionTriggers } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { LogicManagementClient } from "../logicManagementClient";
import {
  WorkflowVersionTriggersListCallbackUrlOptionalParams,
  WorkflowVersionTriggersListCallbackUrlResponse
} from "../models";

/** Class containing WorkflowVersionTriggers operations. */
export class WorkflowVersionTriggersImpl implements WorkflowVersionTriggers {
  private readonly client: LogicManagementClient;

  /**
   * Initialize a new instance of the class WorkflowVersionTriggers class.
   * @param client Reference to the service client
   */
  constructor(client: LogicManagementClient) {
    this.client = client;
  }

  /**
   * Get the callback url for a trigger of a workflow version.
   * @param resourceGroupName The resource group name.
   * @param workflowName The workflow name.
   * @param versionId The workflow versionId.
   * @param triggerName The workflow trigger name.
   * @param options The options parameters.
   */
  listCallbackUrl(
    resourceGroupName: string,
    workflowName: string,
    versionId: string,
    triggerName: string,
    options?: WorkflowVersionTriggersListCallbackUrlOptionalParams
  ): Promise<WorkflowVersionTriggersListCallbackUrlResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, workflowName, versionId, triggerName, options },
      listCallbackUrlOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const listCallbackUrlOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/versions/{versionId}/triggers/{triggerName}/listCallbackUrl",
  httpMethod: "POST",
  responses: {
    200: {
      bodyMapper: Mappers.WorkflowTriggerCallbackUrl
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  requestBody: Parameters.parameters1,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workflowName,
    Parameters.versionId,
    Parameters.triggerName
  ],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer
};
