/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";

export const acceptLanguage: msRest.OperationParameter = {
  parameterPath: "acceptLanguage",
  mapper: {
    serializedName: "accept-language",
    defaultValue: 'en-US',
    type: {
      name: "String"
    }
  }
};
export const actionName: msRest.OperationURLParameter = {
  parameterPath: "actionName",
  mapper: {
    required: true,
    serializedName: "actionName",
    type: {
      name: "String"
    }
  }
};
export const agreementName: msRest.OperationURLParameter = {
  parameterPath: "agreementName",
  mapper: {
    required: true,
    serializedName: "agreementName",
    type: {
      name: "String"
    }
  }
};
export const apiName: msRest.OperationURLParameter = {
  parameterPath: "apiName",
  mapper: {
    required: true,
    serializedName: "apiName",
    type: {
      name: "String"
    }
  }
};
export const apiVersion: msRest.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    required: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};
export const assemblyArtifactName: msRest.OperationURLParameter = {
  parameterPath: "assemblyArtifactName",
  mapper: {
    required: true,
    serializedName: "assemblyArtifactName",
    type: {
      name: "String"
    }
  }
};
export const batchConfigurationName: msRest.OperationURLParameter = {
  parameterPath: "batchConfigurationName",
  mapper: {
    required: true,
    serializedName: "batchConfigurationName",
    type: {
      name: "String"
    }
  }
};
export const certificateName: msRest.OperationURLParameter = {
  parameterPath: "certificateName",
  mapper: {
    required: true,
    serializedName: "certificateName",
    type: {
      name: "String"
    }
  }
};
export const filter: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "filter"
  ],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};
export const historyName: msRest.OperationURLParameter = {
  parameterPath: "historyName",
  mapper: {
    required: true,
    serializedName: "historyName",
    type: {
      name: "String"
    }
  }
};
export const integrationAccountName: msRest.OperationURLParameter = {
  parameterPath: "integrationAccountName",
  mapper: {
    required: true,
    serializedName: "integrationAccountName",
    type: {
      name: "String"
    }
  }
};
export const integrationServiceEnvironmentName: msRest.OperationURLParameter = {
  parameterPath: "integrationServiceEnvironmentName",
  mapper: {
    required: true,
    serializedName: "integrationServiceEnvironmentName",
    type: {
      name: "String"
    }
  }
};
export const location: msRest.OperationURLParameter = {
  parameterPath: "location",
  mapper: {
    required: true,
    serializedName: "location",
    type: {
      name: "String"
    }
  }
};
export const mapName: msRest.OperationURLParameter = {
  parameterPath: "mapName",
  mapper: {
    required: true,
    serializedName: "mapName",
    type: {
      name: "String"
    }
  }
};
export const nextPageLink: msRest.OperationURLParameter = {
  parameterPath: "nextPageLink",
  mapper: {
    required: true,
    serializedName: "nextLink",
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const operationId: msRest.OperationURLParameter = {
  parameterPath: "operationId",
  mapper: {
    required: true,
    serializedName: "operationId",
    type: {
      name: "String"
    }
  }
};
export const partnerName: msRest.OperationURLParameter = {
  parameterPath: "partnerName",
  mapper: {
    required: true,
    serializedName: "partnerName",
    type: {
      name: "String"
    }
  }
};
export const repetitionName: msRest.OperationURLParameter = {
  parameterPath: "repetitionName",
  mapper: {
    required: true,
    serializedName: "repetitionName",
    type: {
      name: "String"
    }
  }
};
export const requestHistoryName: msRest.OperationURLParameter = {
  parameterPath: "requestHistoryName",
  mapper: {
    required: true,
    serializedName: "requestHistoryName",
    type: {
      name: "String"
    }
  }
};
export const resourceGroup: msRest.OperationURLParameter = {
  parameterPath: "resourceGroup",
  mapper: {
    required: true,
    serializedName: "resourceGroup",
    type: {
      name: "String"
    }
  }
};
export const resourceGroupName: msRest.OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    required: true,
    serializedName: "resourceGroupName",
    type: {
      name: "String"
    }
  }
};
export const runName: msRest.OperationURLParameter = {
  parameterPath: "runName",
  mapper: {
    required: true,
    serializedName: "runName",
    type: {
      name: "String"
    }
  }
};
export const schemaName: msRest.OperationURLParameter = {
  parameterPath: "schemaName",
  mapper: {
    required: true,
    serializedName: "schemaName",
    type: {
      name: "String"
    }
  }
};
export const sessionName: msRest.OperationURLParameter = {
  parameterPath: "sessionName",
  mapper: {
    required: true,
    serializedName: "sessionName",
    type: {
      name: "String"
    }
  }
};
export const subscriptionId: msRest.OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    required: true,
    serializedName: "subscriptionId",
    type: {
      name: "String"
    }
  }
};
export const top: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "top"
  ],
  mapper: {
    serializedName: "$top",
    type: {
      name: "Number"
    }
  }
};
export const triggerName: msRest.OperationURLParameter = {
  parameterPath: "triggerName",
  mapper: {
    required: true,
    serializedName: "triggerName",
    type: {
      name: "String"
    }
  }
};
export const versionId: msRest.OperationURLParameter = {
  parameterPath: "versionId",
  mapper: {
    required: true,
    serializedName: "versionId",
    type: {
      name: "String"
    }
  }
};
export const workflowName: msRest.OperationURLParameter = {
  parameterPath: "workflowName",
  mapper: {
    required: true,
    serializedName: "workflowName",
    type: {
      name: "String"
    }
  }
};
