/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import {
  BusinessProcess,
  MicrosoftIntegrationSpaces
} from "@azure/arm-integrationspaces";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";

dotenv.config();

/**
 * This sample demonstrates how to Create a BusinessProcess
 *
 * @summary Create a BusinessProcess
 * x-ms-original-file: specification/azureintegrationspaces/resource-manager/Microsoft.IntegrationSpaces/preview/2023-11-14-preview/examples/BusinessProcesses_CreateOrUpdate.json
 */
async function createOrUpdateBusinessProcess() {
  const subscriptionId =
    process.env["INTEGRATIONSPACES_SUBSCRIPTION_ID"] ||
    "00000000-0000-0000-0000-000000000000";
  const resourceGroupName =
    process.env["INTEGRATIONSPACES_RESOURCE_GROUP"] || "testrg";
  const spaceName = "Space1";
  const applicationName = "Application1";
  const businessProcessName = "BusinessProcess1";
  const resource: BusinessProcess = {
    description: "First Business Process",
    businessProcessMapping: {
      completed: {
        logicAppResourceId:
          "subscriptions/sub1/resourcegroups/group1/providers/Microsoft.Web/sites/logicApp1",
        operationName: "CompletedPO",
        operationType: "Action",
        workflowName: "Fulfillment"
      },
      denied: {
        logicAppResourceId:
          "subscriptions/sub1/resourcegroups/group1/providers/Microsoft.Web/sites/logicApp1",
        operationName: "DeniedPO",
        operationType: "Action",
        workflowName: "Fulfillment"
      },
      processing: {
        logicAppResourceId:
          "subscriptions/sub1/resourcegroups/group1/providers/Microsoft.Web/sites/logicApp1",
        operationName: "ApprovedPO",
        operationType: "Action",
        workflowName: "PurchaseOrder"
      },
      received: {
        logicAppResourceId:
          "subscriptions/sub1/resourcegroups/group1/providers/Microsoft.Web/sites/logicApp1",
        operationName: "manual",
        operationType: "Trigger",
        workflowName: "PurchaseOrder"
      },
      shipped: {
        logicAppResourceId:
          "subscriptions/sub1/resourcegroups/group1/providers/Microsoft.Web/sites/logicApp1",
        operationName: "ShippedPO",
        operationType: "Action",
        workflowName: "Fulfillment"
      }
    },
    businessProcessStages: {
      completed: { description: "Completed", stagesBefore: ["Shipped"] },
      denied: { description: "Denied", stagesBefore: ["Processing"] },
      processing: {
        description: "Processing",
        properties: {
          approvalState: "String",
          approverName: "String",
          pOAmount: "Integer"
        },
        stagesBefore: ["Received"]
      },
      received: {
        description: "received",
        properties: {
          city: "String",
          product: "String",
          quantity: "Integer",
          state: "String"
        }
      },
      shipped: {
        description: "Shipped",
        properties: { shipPriority: "Integer", trackingID: "Integer" },
        stagesBefore: ["Denied"]
      }
    },
    identifier: {
      propertyName: "businessIdentifier-1",
      propertyType: "String"
    },
    tableName: "table1",
    trackingDataStoreReferenceName: "trackingDataStoreReferenceName1"
  };
  const credential = new DefaultAzureCredential();
  const client = new MicrosoftIntegrationSpaces(credential, subscriptionId);
  const result = await client.businessProcesses.createOrUpdate(
    resourceGroupName,
    spaceName,
    applicationName,
    businessProcessName,
    resource
  );
  console.log(result);
}

async function main() {
  createOrUpdateBusinessProcess();
}

main().catch(console.error);
