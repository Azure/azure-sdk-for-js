/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
const { MicrosoftIntegrationSpaces } = require("@azure/arm-integrationspaces");
const { DefaultAzureCredential } = require("@azure/identity");
require("dotenv").config();

/**
 * This sample demonstrates how to The validate business process development artifact action.
 *
 * @summary The validate business process development artifact action.
 * x-ms-original-file: specification/azureintegrationspaces/resource-manager/Microsoft.IntegrationSpaces/preview/2023-11-14-preview/examples/Applications_ValidateBusinessProcessDevelopmentArtifact.json
 */
async function validateBusinessProcessDevelopmentArtifact() {
  const subscriptionId =
    process.env["INTEGRATIONSPACES_SUBSCRIPTION_ID"] || "00000000-0000-0000-0000-000000000000";
  const resourceGroupName = process.env["INTEGRATIONSPACES_RESOURCE_GROUP"] || "testrg";
  const spaceName = "Space1";
  const applicationName = "Application1";
  const body = {
    name: "BusinessProcess1",
    properties: {
      description: "First Business Process",
      businessProcessMapping: {
        completed: {
          logicAppResourceId:
            "subscriptions/sub1/resourcegroups/group1/providers/Microsoft.Web/sites/logicApp1",
          operationName: "CompletedPO",
          operationType: "Action",
          workflowName: "Fulfillment",
        },
        denied: {
          logicAppResourceId:
            "subscriptions/sub1/resourcegroups/group1/providers/Microsoft.Web/sites/logicApp1",
          operationName: "DeniedPO",
          operationType: "Action",
          workflowName: "Fulfillment",
        },
        processing: {
          logicAppResourceId:
            "subscriptions/sub1/resourcegroups/group1/providers/Microsoft.Web/sites/logicApp1",
          operationName: "ApprovedPO",
          operationType: "Action",
          workflowName: "PurchaseOrder",
        },
        received: {
          logicAppResourceId:
            "subscriptions/sub1/resourcegroups/group1/providers/Microsoft.Web/sites/logicApp1",
          operationName: "manual",
          operationType: "Trigger",
          workflowName: "PurchaseOrder",
        },
        shipped: {
          logicAppResourceId:
            "subscriptions/sub1/resourcegroups/group1/providers/Microsoft.Web/sites/logicApp1",
          operationName: "ShippedPO",
          operationType: "Action",
          workflowName: "Fulfillment",
        },
      },
      businessProcessStages: {
        completed: { description: "Completed", stagesBefore: ["Shipped"] },
        denied: { description: "Denied", stagesBefore: ["Processing"] },
        processing: {
          description: "Processing",
          properties: {
            approvalState: "String",
            approverName: "String",
            pOAmount: "Integer",
          },
          stagesBefore: ["Received"],
        },
        "received@": {
          description: "received",
          properties: {
            city: "String",
            product: "String",
            quantity: "Integer",
            state: "String",
          },
        },
        shipped: {
          description: "Shipped",
          properties: { shipPriority: "Integer", trackingID: "Integer" },
          stagesBefore: ["Denied"],
        },
      },
      identifier: {
        propertyName: "businessIdentifier-1",
        propertyType: "String",
      },
      trackingProfiles: {
        "subscriptions/sub1/resourcegroups/group1/providers/MicrosoftWeb/sites/logicApp1": {
          schema:
            "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2023-01-01/trackingdefinitionschema.json#",
          businessProcess: {
            name: "businessProcess1",
            version: "d52c9c91-6e10-4a90-9c1f-08ee5d01c656",
          },
          trackingDefinitions: {
            fulfillment: {
              correlationContext: {
                operationName: "manual",
                operationType: "Trigger",
                propertyName: "OrderNumber",
                value: "@trigger().outputs.body.OrderNumber",
              },
              events: {
                completed: {
                  operationName: "CompletedPO",
                  operationType: "Action",
                  properties: {},
                },
                denied: {
                  operationName: "DeniedPO",
                  operationType: "Action",
                  properties: {},
                },
                shipped: {
                  operationName: "ShippedPO",
                  operationType: "Action",
                  properties: {
                    shipPriority: {
                      value: "@action().inputs.shipPriority",
                    },
                    trackingID: {
                      value: "@action().inputs.trackingID",
                    },
                  },
                },
              },
            },
            purchaseOrder: {
              correlationContext: {
                operationName: "manual",
                operationType: "Trigger",
                propertyName: "OrderNumber",
                value: "@trigger().outputs.body.OrderNumber",
              },
              events: {
                processing: {
                  operationName: "ApprovedPO",
                  operationType: "Action",
                  properties: {
                    approvalStatus: {
                      value: "@action().inputs.ApprovalStatus",
                    },
                    approverName: {
                      value: "@action().inputs.ApproverName",
                    },
                    pOAmount: {
                      value: "@action().inputs.POamount",
                    },
                  },
                },
                received: {
                  operationName: "manual",
                  operationType: "Trigger",
                  properties: {
                    city: {
                      value: "@trigger().outputs.body.Address.City",
                    },
                    product: {
                      value: "@trigger().outputs.body.Product",
                    },
                    quantity: {
                      value: "@trigger().outputs.body.Quantity",
                    },
                    state: {
                      value: "@trigger().outputs.body.Address.State",
                    },
                  },
                },
              },
            },
          },
        },
      },
    },
  };
  const credential = new DefaultAzureCredential();
  const client = new MicrosoftIntegrationSpaces(credential, subscriptionId);
  const result = await client.applications.validateBusinessProcessDevelopmentArtifact(
    resourceGroupName,
    spaceName,
    applicationName,
    body
  );
  console.log(result);
}

async function main() {
  validateBusinessProcessDevelopmentArtifact();
}

main().catch(console.error);
