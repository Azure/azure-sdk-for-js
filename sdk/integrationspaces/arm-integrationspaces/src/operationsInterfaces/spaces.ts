/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Space,
  SpacesListBySubscriptionOptionalParams,
  SpacesListByResourceGroupOptionalParams,
  SpacesGetOptionalParams,
  SpacesGetResponse,
  SpacesCreateOrUpdateOptionalParams,
  SpacesCreateOrUpdateResponse,
  SpaceUpdate,
  SpacesPatchOptionalParams,
  SpacesPatchResponse,
  SpacesDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Spaces. */
export interface Spaces {
  /**
   * List Space resources by subscription ID
   * @param options The options parameters.
   */
  listBySubscription(
    options?: SpacesListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<Space>;
  /**
   * List Space resources by resource group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: SpacesListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<Space>;
  /**
   * Get a Space
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param spaceName The name of the space
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    spaceName: string,
    options?: SpacesGetOptionalParams
  ): Promise<SpacesGetResponse>;
  /**
   * Create a Space
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param spaceName The name of the space
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    spaceName: string,
    resource: Space,
    options?: SpacesCreateOrUpdateOptionalParams
  ): Promise<SpacesCreateOrUpdateResponse>;
  /**
   * Update a Space
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param spaceName The name of the space
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  patch(
    resourceGroupName: string,
    spaceName: string,
    properties: SpaceUpdate,
    options?: SpacesPatchOptionalParams
  ): Promise<SpacesPatchResponse>;
  /**
   * Delete a Space
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param spaceName The name of the space
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    spaceName: string,
    options?: SpacesDeleteOptionalParams
  ): Promise<void>;
}
