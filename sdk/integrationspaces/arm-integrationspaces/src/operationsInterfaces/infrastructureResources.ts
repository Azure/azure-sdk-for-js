/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  InfrastructureResource,
  InfrastructureResourcesListBySpaceOptionalParams,
  InfrastructureResourcesGetOptionalParams,
  InfrastructureResourcesGetResponse,
  InfrastructureResourcesCreateOrUpdateOptionalParams,
  InfrastructureResourcesCreateOrUpdateResponse,
  InfrastructureResourceUpdate,
  InfrastructureResourcesPatchOptionalParams,
  InfrastructureResourcesPatchResponse,
  InfrastructureResourcesDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a InfrastructureResources. */
export interface InfrastructureResources {
  /**
   * List InfrastructureResource resources by Space
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param spaceName The name of the space
   * @param options The options parameters.
   */
  listBySpace(
    resourceGroupName: string,
    spaceName: string,
    options?: InfrastructureResourcesListBySpaceOptionalParams
  ): PagedAsyncIterableIterator<InfrastructureResource>;
  /**
   * Get a InfrastructureResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param spaceName The name of the space
   * @param infrastructureResourceName The name of the infrastructure resource in the space.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    spaceName: string,
    infrastructureResourceName: string,
    options?: InfrastructureResourcesGetOptionalParams
  ): Promise<InfrastructureResourcesGetResponse>;
  /**
   * Create a InfrastructureResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param spaceName The name of the space
   * @param infrastructureResourceName The name of the infrastructure resource in the space.
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    spaceName: string,
    infrastructureResourceName: string,
    resource: InfrastructureResource,
    options?: InfrastructureResourcesCreateOrUpdateOptionalParams
  ): Promise<InfrastructureResourcesCreateOrUpdateResponse>;
  /**
   * Update a InfrastructureResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param spaceName The name of the space
   * @param infrastructureResourceName The name of the infrastructure resource in the space.
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  patch(
    resourceGroupName: string,
    spaceName: string,
    infrastructureResourceName: string,
    properties: InfrastructureResourceUpdate,
    options?: InfrastructureResourcesPatchOptionalParams
  ): Promise<InfrastructureResourcesPatchResponse>;
  /**
   * Delete a InfrastructureResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param spaceName The name of the space
   * @param infrastructureResourceName The name of the infrastructure resource in the space.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    spaceName: string,
    infrastructureResourceName: string,
    options?: InfrastructureResourcesDeleteOptionalParams
  ): Promise<void>;
}
