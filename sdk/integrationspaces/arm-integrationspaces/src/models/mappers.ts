/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      }
    }
  }
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const SpaceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SpaceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Space"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const SpaceUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SpaceUpdate",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Application"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackingDataStore: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackingDataStore",
    modelProperties: {
      databaseName: {
        serializedName: "databaseName",
        required: true,
        type: {
          name: "String"
        }
      },
      dataStoreResourceId: {
        serializedName: "dataStoreResourceId",
        required: true,
        type: {
          name: "String"
        }
      },
      dataStoreUri: {
        serializedName: "dataStoreUri",
        required: true,
        type: {
          name: "String"
        }
      },
      dataStoreIngestionUri: {
        serializedName: "dataStoreIngestionUri",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationUpdate",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      trackingDataStores: {
        serializedName: "properties.trackingDataStores",
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "TrackingDataStore" } }
        }
      }
    }
  }
};

export const BusinessProcessListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BusinessProcessListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BusinessProcess"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BusinessProcessIdentifier: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BusinessProcessIdentifier",
    modelProperties: {
      propertyName: {
        serializedName: "propertyName",
        type: {
          name: "String"
        }
      },
      propertyType: {
        serializedName: "propertyType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BusinessProcessStage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BusinessProcessStage",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      stagesBefore: {
        serializedName: "stagesBefore",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const BusinessProcessMappingItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BusinessProcessMappingItem",
    modelProperties: {
      logicAppResourceId: {
        serializedName: "logicAppResourceId",
        type: {
          name: "String"
        }
      },
      workflowName: {
        serializedName: "workflowName",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      operationType: {
        serializedName: "operationType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BusinessProcessUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BusinessProcessUpdate",
    modelProperties: {
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      tableName: {
        serializedName: "properties.tableName",
        type: {
          name: "String"
        }
      },
      trackingDataStoreReferenceName: {
        serializedName: "properties.trackingDataStoreReferenceName",
        type: {
          name: "String"
        }
      },
      identifier: {
        serializedName: "properties.identifier",
        type: {
          name: "Composite",
          className: "BusinessProcessIdentifier"
        }
      },
      businessProcessStages: {
        serializedName: "properties.businessProcessStages",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "BusinessProcessStage" }
          }
        }
      },
      businessProcessMapping: {
        serializedName: "properties.businessProcessMapping",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "BusinessProcessMappingItem" }
          }
        }
      }
    }
  }
};

export const BusinessProcessVersionListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BusinessProcessVersionListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BusinessProcessVersion"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetOrDeleteBusinessProcessDevelopmentArtifactRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetOrDeleteBusinessProcessDevelopmentArtifactRequest",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SaveOrGetBusinessProcessDevelopmentArtifactResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SaveOrGetBusinessProcessDevelopmentArtifactResponse",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "BusinessProcessDevelopmentArtifactProperties"
        }
      }
    }
  }
};

export const BusinessProcessDevelopmentArtifactProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BusinessProcessDevelopmentArtifactProperties",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      identifier: {
        serializedName: "identifier",
        type: {
          name: "Composite",
          className: "BusinessProcessIdentifier"
        }
      },
      businessProcessStages: {
        serializedName: "businessProcessStages",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "BusinessProcessStage" }
          }
        }
      },
      businessProcessMapping: {
        serializedName: "businessProcessMapping",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "BusinessProcessMappingItem" }
          }
        }
      },
      trackingProfiles: {
        serializedName: "trackingProfiles",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "TrackingProfileDefinition" }
          }
        }
      }
    }
  }
};

export const TrackingProfileDefinition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackingProfileDefinition",
    modelProperties: {
      schema: {
        serializedName: "$schema",
        type: {
          name: "String"
        }
      },
      businessProcess: {
        serializedName: "businessProcess",
        type: {
          name: "Composite",
          className: "BusinessProcessReference"
        }
      },
      trackingDefinitions: {
        serializedName: "trackingDefinitions",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "FlowTrackingDefinition" }
          }
        }
      }
    }
  }
};

export const BusinessProcessReference: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BusinessProcessReference",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FlowTrackingDefinition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FlowTrackingDefinition",
    modelProperties: {
      correlationContext: {
        serializedName: "correlationContext",
        type: {
          name: "Composite",
          className: "TrackingCorrelationContext"
        }
      },
      events: {
        serializedName: "events",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "TrackingEventDefinition" }
          }
        }
      }
    }
  }
};

export const TrackingCorrelationContext: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackingCorrelationContext",
    modelProperties: {
      operationType: {
        serializedName: "operationType",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      propertyName: {
        serializedName: "propertyName",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackingEventDefinition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackingEventDefinition",
    modelProperties: {
      operationType: {
        serializedName: "operationType",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      }
    }
  }
};

export const ListBusinessProcessDevelopmentArtifactsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ListBusinessProcessDevelopmentArtifactsResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SaveOrGetBusinessProcessDevelopmentArtifactResponse"
            }
          }
        }
      }
    }
  }
};

export const ApplicationResourceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationResourceUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationResourceUpdate",
    modelProperties: {
      resourceType: {
        serializedName: "properties.resourceType",
        type: {
          name: "String"
        }
      },
      resourceId: {
        serializedName: "properties.resourceId",
        type: {
          name: "String"
        }
      },
      resourceKind: {
        serializedName: "properties.resourceKind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SaveOrValidateBusinessProcessDevelopmentArtifactRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SaveOrValidateBusinessProcessDevelopmentArtifactRequest",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "BusinessProcessDevelopmentArtifactProperties"
        }
      }
    }
  }
};

export const InfrastructureResourceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InfrastructureResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InfrastructureResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InfrastructureResourceUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InfrastructureResourceUpdate",
    modelProperties: {
      resourceType: {
        serializedName: "properties.resourceType",
        type: {
          name: "String"
        }
      },
      resourceId: {
        serializedName: "properties.resourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const Space: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Space",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Application: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Application",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      trackingDataStores: {
        serializedName: "properties.trackingDataStores",
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "TrackingDataStore" } }
        }
      }
    }
  }
};

export const BusinessProcess: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BusinessProcess",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "properties.version",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      tableName: {
        serializedName: "properties.tableName",
        type: {
          name: "String"
        }
      },
      trackingDataStoreReferenceName: {
        serializedName: "properties.trackingDataStoreReferenceName",
        type: {
          name: "String"
        }
      },
      identifier: {
        serializedName: "properties.identifier",
        type: {
          name: "Composite",
          className: "BusinessProcessIdentifier"
        }
      },
      businessProcessStages: {
        serializedName: "properties.businessProcessStages",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "BusinessProcessStage" }
          }
        }
      },
      businessProcessMapping: {
        serializedName: "properties.businessProcessMapping",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "BusinessProcessMappingItem" }
          }
        }
      }
    }
  }
};

export const BusinessProcessVersion: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BusinessProcessVersion",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "properties.version",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      tableName: {
        serializedName: "properties.tableName",
        type: {
          name: "String"
        }
      },
      trackingDataStoreReferenceName: {
        serializedName: "properties.trackingDataStoreReferenceName",
        type: {
          name: "String"
        }
      },
      identifier: {
        serializedName: "properties.identifier",
        type: {
          name: "Composite",
          className: "BusinessProcessIdentifier"
        }
      },
      businessProcessStages: {
        serializedName: "properties.businessProcessStages",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "BusinessProcessStage" }
          }
        }
      },
      businessProcessMapping: {
        serializedName: "properties.businessProcessMapping",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "BusinessProcessMappingItem" }
          }
        }
      }
    }
  }
};

export const ApplicationResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resourceType: {
        serializedName: "properties.resourceType",
        type: {
          name: "String"
        }
      },
      resourceId: {
        serializedName: "properties.resourceId",
        type: {
          name: "String"
        }
      },
      resourceKind: {
        serializedName: "properties.resourceKind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InfrastructureResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InfrastructureResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resourceType: {
        serializedName: "properties.resourceType",
        type: {
          name: "String"
        }
      },
      resourceId: {
        serializedName: "properties.resourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};
