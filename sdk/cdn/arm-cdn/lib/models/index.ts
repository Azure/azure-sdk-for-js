/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing Sku.
 * The pricing tier (defines a CDN provider, feature list and rate) of the CDN
 * profile.
 *
 */
export interface Sku {
  /**
   * @member {SkuName} [name] Name of the pricing tier. Possible values
   * include: 'Standard_Verizon', 'Premium_Verizon', 'Custom_Verizon',
   * 'Standard_Akamai', 'Standard_ChinaCdn', 'Standard_Microsoft'
   */
  name?: SkuName;
}

/**
 * @interface
 * An interface representing Resource.
 * The core properties of ARM resources
 *
 * @extends BaseResource
 */
export interface Resource extends BaseResource {
  /**
   * @member {string} [id] Resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing TrackedResource.
 * The resource model definition for a ARM tracked top level resource.
 *
 * @extends Resource
 */
export interface TrackedResource extends Resource {
  /**
   * @member {string} location Resource location.
   */
  location: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing Profile.
 * CDN profile is a logical grouping of endpoints that share the same settings,
 * such as CDN provider and pricing tier.
 *
 * @extends TrackedResource
 */
export interface Profile extends TrackedResource {
  /**
   * @member {Sku} sku The pricing tier (defines a CDN provider, feature list
   * and rate) of the CDN profile.
   */
  sku: Sku;
  /**
   * @member {ProfileResourceState} [resourceState] Resource status of the
   * profile. Possible values include: 'Creating', 'Active', 'Deleting',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceState?: ProfileResourceState;
  /**
   * @member {string} [provisioningState] Provisioning status of the profile.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: string;
}

/**
 * @interface
 * An interface representing ProfileUpdateParameters.
 * Properties required to update a profile.
 *
 * @extends BaseResource
 */
export interface ProfileUpdateParameters extends BaseResource {
  /**
   * @member {{ [propertyName: string]: string }} [tags] Profile tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing SsoUri.
 * The URI required to login to the supplemental portal from the Azure portal.
 *
 */
export interface SsoUri {
  /**
   * @member {string} [ssoUriValue] The URI used to login to the supplemental
   * portal.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly ssoUriValue?: string;
}

/**
 * @interface
 * An interface representing SupportedOptimizationTypesListResult.
 * The result of the GetSupportedOptimizationTypes API
 *
 */
export interface SupportedOptimizationTypesListResult {
  /**
   * @member {OptimizationType[]} [supportedOptimizationTypes] Supported
   * optimization types for a profile.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly supportedOptimizationTypes?: OptimizationType[];
}

/**
 * @interface
 * An interface representing DeepCreatedOrigin.
 * The main origin of CDN content which is added when creating a CDN endpoint.
 *
 * @extends BaseResource
 */
export interface DeepCreatedOrigin extends BaseResource {
  /**
   * @member {string} name Origin name
   */
  name: string;
  /**
   * @member {string} hostName The address of the origin. It can be a domain
   * name, IPv4 address, or IPv6 address.
   */
  hostName: string;
  /**
   * @member {number} [httpPort] The value of the HTTP port. Must be between 1
   * and 65535
   */
  httpPort?: number;
  /**
   * @member {number} [httpsPort] The value of the HTTPS port. Must be between
   * 1 and 65535
   */
  httpsPort?: number;
}

/**
 * @interface
 * An interface representing Endpoint.
 * CDN endpoint is the entity within a CDN profile containing configuration
 * information such as origin, protocol, content caching and delivery behavior.
 * The CDN endpoint uses the URL format <endpointname>.azureedge.net.
 *
 * @extends TrackedResource
 */
export interface Endpoint extends TrackedResource {
  /**
   * @member {string} [originHostHeader] The host header value sent to the
   * origin with each request. If you leave this blank, the request hostname
   * determines this value. Azure CDN origins, such as Web Apps, Blob Storage,
   * and Cloud Services require this host header value to match the origin
   * hostname by default.
   */
  originHostHeader?: string;
  /**
   * @member {string} [originPath] A directory path on the origin that CDN can
   * use to retrieve content from, e.g. contoso.cloudapp.net/originpath.
   */
  originPath?: string;
  /**
   * @member {string[]} [contentTypesToCompress] List of content types on which
   * compression applies. The value should be a valid MIME type.
   */
  contentTypesToCompress?: string[];
  /**
   * @member {boolean} [isCompressionEnabled] Indicates whether content
   * compression is enabled on CDN. Default value is false. If compression is
   * enabled, content will be served as compressed if user requests for a
   * compressed version. Content won't be compressed on CDN when requested
   * content is smaller than 1 byte or larger than 1 MB.
   */
  isCompressionEnabled?: boolean;
  /**
   * @member {boolean} [isHttpAllowed] Indicates whether HTTP traffic is
   * allowed on the endpoint. Default value is true. At least one protocol
   * (HTTP or HTTPS) must be allowed.
   */
  isHttpAllowed?: boolean;
  /**
   * @member {boolean} [isHttpsAllowed] Indicates whether HTTPS traffic is
   * allowed on the endpoint. Default value is true. At least one protocol
   * (HTTP or HTTPS) must be allowed.
   */
  isHttpsAllowed?: boolean;
  /**
   * @member {QueryStringCachingBehavior} [queryStringCachingBehavior] Defines
   * how CDN caches requests that include query strings. You can ignore any
   * query strings when caching, bypass caching to prevent requests that
   * contain query strings from being cached, or cache every request with a
   * unique URL. Possible values include: 'IgnoreQueryString', 'BypassCaching',
   * 'UseQueryString', 'NotSet'
   */
  queryStringCachingBehavior?: QueryStringCachingBehavior;
  /**
   * @member {OptimizationType} [optimizationType] Specifies what scenario the
   * customer wants this CDN endpoint to optimize for, e.g. Download, Media
   * services. With this information, CDN can apply scenario driven
   * optimization. Possible values include: 'GeneralWebDelivery',
   * 'GeneralMediaStreaming', 'VideoOnDemandMediaStreaming',
   * 'LargeFileDownload', 'DynamicSiteAcceleration'
   */
  optimizationType?: OptimizationType;
  /**
   * @member {string} [probePath] Path to a file hosted on the origin which
   * helps accelerate delivery of the dynamic content and calculate the most
   * optimal routes for the CDN. This is relative to the origin path.
   */
  probePath?: string;
  /**
   * @member {GeoFilter[]} [geoFilters] List of rules defining the user's geo
   * access within a CDN endpoint. Each geo filter defines an access rule to a
   * specified path or content, e.g. block APAC for path /pictures/
   */
  geoFilters?: GeoFilter[];
  /**
   * @member {EndpointPropertiesUpdateParametersDeliveryPolicy}
   * [deliveryPolicy] A policy that specifies the delivery rules to be used for
   * an endpoint.
   */
  deliveryPolicy?: EndpointPropertiesUpdateParametersDeliveryPolicy;
  /**
   * @member
   * {EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink}
   * [webApplicationFirewallPolicyLink] Defines the Web Application Firewall
   * policy for the endpoint (if applicable)
   */
  webApplicationFirewallPolicyLink?: EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink;
  /**
   * @member {string} [hostName] The host name of the endpoint structured as
   * {endpointName}.{DNSZone}, e.g. contoso.azureedge.net
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly hostName?: string;
  /**
   * @member {DeepCreatedOrigin[]} origins The source of the content being
   * delivered via CDN.
   */
  origins: DeepCreatedOrigin[];
  /**
   * @member {EndpointResourceState} [resourceState] Resource status of the
   * endpoint. Possible values include: 'Creating', 'Deleting', 'Running',
   * 'Starting', 'Stopped', 'Stopping'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceState?: EndpointResourceState;
  /**
   * @member {string} [provisioningState] Provisioning status of the endpoint.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: string;
}

/**
 * @interface
 * An interface representing GeoFilter.
 * Rules defining user's geo access within a CDN endpoint.
 *
 */
export interface GeoFilter {
  /**
   * @member {string} relativePath Relative path applicable to geo filter.
   * (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
   */
  relativePath: string;
  /**
   * @member {GeoFilterActions} action Action of the geo filter, i.e. allow or
   * block access. Possible values include: 'Block', 'Allow'
   */
  action: GeoFilterActions;
  /**
   * @member {string[]} countryCodes Two letter country codes defining user
   * country access in a geo filter, e.g. AU, MX, US.
   */
  countryCodes: string[];
}

/**
 * Contains the possible cases for DeliveryRuleCondition.
 */
export type DeliveryRuleConditionUnion = DeliveryRuleCondition | DeliveryRuleRemoteAddressCondition | DeliveryRuleRequestMethodCondition | DeliveryRuleQueryStringCondition | DeliveryRulePostArgsCondition | DeliveryRuleRequestUriCondition | DeliveryRuleRequestHeaderCondition | DeliveryRuleRequestBodyCondition | DeliveryRuleRequestSchemeCondition | DeliveryRuleUrlPathCondition | DeliveryRuleUrlFileExtensionCondition | DeliveryRuleUrlFileNameCondition | DeliveryRuleIsDeviceCondition;

/**
 * @interface
 * An interface representing DeliveryRuleCondition.
 * A condition for the delivery rule.
 *
 */
export interface DeliveryRuleCondition {
  /**
   * @member {string} name Polymorphic Discriminator
   */
  name: "DeliveryRuleCondition";
}

/**
 * Contains the possible cases for DeliveryRuleAction.
 */
export type DeliveryRuleActionUnion = DeliveryRuleAction | UrlRedirectAction | DeliveryRuleRequestHeaderAction | DeliveryRuleResponseHeaderAction | DeliveryRuleCacheExpirationAction;

/**
 * @interface
 * An interface representing DeliveryRuleAction.
 * An action for the delivery rule.
 *
 */
export interface DeliveryRuleAction {
  /**
   * @member {string} name Polymorphic Discriminator
   */
  name: "DeliveryRuleAction";
}

/**
 * @interface
 * An interface representing DeliveryRule.
 * A rule that specifies a set of actions and conditions
 *
 */
export interface DeliveryRule {
  /**
   * @member {string} name Name of the rule
   */
  name: string;
  /**
   * @member {number} order The order in which the rules are applied for the
   * endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will
   * be applied before a rule with a greater order. Rule with order 0 is a
   * special rule. It does not require any condition and actions listed in it
   * will always be applied.
   */
  order: number;
  /**
   * @member {DeliveryRuleConditionUnion[]} [conditions] A list of conditions
   * that must be matched for the actions to be executed
   */
  conditions?: DeliveryRuleConditionUnion[];
  /**
   * @member {DeliveryRuleActionUnion[]} actions A list of actions that are
   * executed when all the conditions of a rule are satisfied.
   */
  actions: DeliveryRuleActionUnion[];
}

/**
 * @interface
 * An interface representing EndpointPropertiesUpdateParametersDeliveryPolicy.
 * A policy that specifies the delivery rules to be used for an endpoint.
 *
 */
export interface EndpointPropertiesUpdateParametersDeliveryPolicy {
  /**
   * @member {string} [description] User-friendly description of the policy.
   */
  description?: string;
  /**
   * @member {DeliveryRule[]} rules A list of the delivery rules.
   */
  rules: DeliveryRule[];
}

/**
 * @interface
 * An interface representing EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink.
 * Defines the Web Application Firewall policy for the endpoint (if applicable)
 *
 */
export interface EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink {
  /**
   * @member {string} [id] Resource ID.
   */
  id?: string;
}

/**
 * @interface
 * An interface representing EndpointUpdateParameters.
 * Properties required to create or update an endpoint.
 *
 * @extends BaseResource
 */
export interface EndpointUpdateParameters extends BaseResource {
  /**
   * @member {{ [propertyName: string]: string }} [tags] Endpoint tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * @member {string} [originHostHeader] The host header value sent to the
   * origin with each request. If you leave this blank, the request hostname
   * determines this value. Azure CDN origins, such as Web Apps, Blob Storage,
   * and Cloud Services require this host header value to match the origin
   * hostname by default.
   */
  originHostHeader?: string;
  /**
   * @member {string} [originPath] A directory path on the origin that CDN can
   * use to retrieve content from, e.g. contoso.cloudapp.net/originpath.
   */
  originPath?: string;
  /**
   * @member {string[]} [contentTypesToCompress] List of content types on which
   * compression applies. The value should be a valid MIME type.
   */
  contentTypesToCompress?: string[];
  /**
   * @member {boolean} [isCompressionEnabled] Indicates whether content
   * compression is enabled on CDN. Default value is false. If compression is
   * enabled, content will be served as compressed if user requests for a
   * compressed version. Content won't be compressed on CDN when requested
   * content is smaller than 1 byte or larger than 1 MB.
   */
  isCompressionEnabled?: boolean;
  /**
   * @member {boolean} [isHttpAllowed] Indicates whether HTTP traffic is
   * allowed on the endpoint. Default value is true. At least one protocol
   * (HTTP or HTTPS) must be allowed.
   */
  isHttpAllowed?: boolean;
  /**
   * @member {boolean} [isHttpsAllowed] Indicates whether HTTPS traffic is
   * allowed on the endpoint. Default value is true. At least one protocol
   * (HTTP or HTTPS) must be allowed.
   */
  isHttpsAllowed?: boolean;
  /**
   * @member {QueryStringCachingBehavior} [queryStringCachingBehavior] Defines
   * how CDN caches requests that include query strings. You can ignore any
   * query strings when caching, bypass caching to prevent requests that
   * contain query strings from being cached, or cache every request with a
   * unique URL. Possible values include: 'IgnoreQueryString', 'BypassCaching',
   * 'UseQueryString', 'NotSet'
   */
  queryStringCachingBehavior?: QueryStringCachingBehavior;
  /**
   * @member {OptimizationType} [optimizationType] Specifies what scenario the
   * customer wants this CDN endpoint to optimize for, e.g. Download, Media
   * services. With this information, CDN can apply scenario driven
   * optimization. Possible values include: 'GeneralWebDelivery',
   * 'GeneralMediaStreaming', 'VideoOnDemandMediaStreaming',
   * 'LargeFileDownload', 'DynamicSiteAcceleration'
   */
  optimizationType?: OptimizationType;
  /**
   * @member {string} [probePath] Path to a file hosted on the origin which
   * helps accelerate delivery of the dynamic content and calculate the most
   * optimal routes for the CDN. This is relative to the origin path.
   */
  probePath?: string;
  /**
   * @member {GeoFilter[]} [geoFilters] List of rules defining the user's geo
   * access within a CDN endpoint. Each geo filter defines an access rule to a
   * specified path or content, e.g. block APAC for path /pictures/
   */
  geoFilters?: GeoFilter[];
  /**
   * @member {EndpointPropertiesUpdateParametersDeliveryPolicy}
   * [deliveryPolicy] A policy that specifies the delivery rules to be used for
   * an endpoint.
   */
  deliveryPolicy?: EndpointPropertiesUpdateParametersDeliveryPolicy;
  /**
   * @member
   * {EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink}
   * [webApplicationFirewallPolicyLink] Defines the Web Application Firewall
   * policy for the endpoint (if applicable)
   */
  webApplicationFirewallPolicyLink?: EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink;
}

/**
 * @interface
 * An interface representing RemoteAddressMatchConditionParameters.
 * Defines the parameters for RemoteAddress match conditions
 *
 */
export interface RemoteAddressMatchConditionParameters {
  /**
   * @member {RemoteAddressOperator} operator Describes operator to be matched.
   * Possible values include: 'Any', 'IPMatch', 'GeoMatch'
   */
  operator: RemoteAddressOperator;
  /**
   * @member {boolean} [negateCondition] Describes if this is negate condition
   * or not
   */
  negateCondition?: boolean;
  /**
   * @member {string[]} matchValues Match values to match against. The operator
   * will apply to each value in here with OR semantics. If any of them match
   * the variable with the given operator this match condition is considered a
   * match.
   */
  matchValues: string[];
  /**
   * @member {Transform[]} [transforms] List of transforms
   */
  transforms?: Transform[];
}

/**
 * @interface
 * An interface representing DeliveryRuleRemoteAddressCondition.
 * Defines the RemoteAddress condition for the delivery rule.
 *
 */
export interface DeliveryRuleRemoteAddressCondition {
  /**
   * @member {string} name Polymorphic Discriminator
   */
  name: "RemoteAddress";
  /**
   * @member {RemoteAddressMatchConditionParameters} parameters Defines the
   * parameters for the condition.
   */
  parameters: RemoteAddressMatchConditionParameters;
}

/**
 * @interface
 * An interface representing RequestMethodMatchConditionParameters.
 * Defines the parameters for RequestMethod match conditions
 *
 */
export interface RequestMethodMatchConditionParameters {
  /**
   * @member {boolean} [negateCondition] Describes if this is negate condition
   * or not
   */
  negateCondition?: boolean;
  /**
   * @member {string[]} matchValues The match value for the condition of the
   * delivery rule
   */
  matchValues: string[];
}

/**
 * @interface
 * An interface representing DeliveryRuleRequestMethodCondition.
 * Defines the RequestMethod condition for the delivery rule.
 *
 */
export interface DeliveryRuleRequestMethodCondition {
  /**
   * @member {string} name Polymorphic Discriminator
   */
  name: "RequestMethod";
  /**
   * @member {RequestMethodMatchConditionParameters} parameters Defines the
   * parameters for the condition.
   */
  parameters: RequestMethodMatchConditionParameters;
}

/**
 * @interface
 * An interface representing QueryStringMatchConditionParameters.
 * Defines the parameters for QueryString match conditions
 *
 */
export interface QueryStringMatchConditionParameters {
  /**
   * @member {QueryStringOperator} operator Describes operator to be matched.
   * Possible values include: 'Any', 'Equal', 'Contains', 'BeginsWith',
   * 'EndsWith', 'LessThan', 'LessThanOrEqual', 'GreaterThan',
   * 'GreaterThanOrEqual'
   */
  operator: QueryStringOperator;
  /**
   * @member {boolean} [negateCondition] Describes if this is negate condition
   * or not
   */
  negateCondition?: boolean;
  /**
   * @member {string[]} matchValues The match value for the condition of the
   * delivery rule
   */
  matchValues: string[];
  /**
   * @member {Transform[]} [transforms] List of transforms
   */
  transforms?: Transform[];
}

/**
 * @interface
 * An interface representing DeliveryRuleQueryStringCondition.
 * Defines the QueryString condition for the delivery rule.
 *
 */
export interface DeliveryRuleQueryStringCondition {
  /**
   * @member {string} name Polymorphic Discriminator
   */
  name: "QueryString";
  /**
   * @member {QueryStringMatchConditionParameters} parameters Defines the
   * parameters for the condition.
   */
  parameters: QueryStringMatchConditionParameters;
}

/**
 * @interface
 * An interface representing PostArgsMatchConditionParameters.
 * Defines the parameters for PostArgs match conditions
 *
 */
export interface PostArgsMatchConditionParameters {
  /**
   * @member {string} selector Name of PostArg to be matched
   */
  selector: string;
  /**
   * @member {PostArgsOperator} operator Describes operator to be matched.
   * Possible values include: 'Any', 'Equal', 'Contains', 'BeginsWith',
   * 'EndsWith', 'LessThan', 'LessThanOrEqual', 'GreaterThan',
   * 'GreaterThanOrEqual'
   */
  operator: PostArgsOperator;
  /**
   * @member {boolean} [negateCondition] Describes if this is negate condition
   * or not
   */
  negateCondition?: boolean;
  /**
   * @member {string[]} matchValues The match value for the condition of the
   * delivery rule
   */
  matchValues: string[];
  /**
   * @member {Transform[]} [transforms] List of transforms
   */
  transforms?: Transform[];
}

/**
 * @interface
 * An interface representing DeliveryRulePostArgsCondition.
 * Defines the PostArgs condition for the delivery rule.
 *
 */
export interface DeliveryRulePostArgsCondition {
  /**
   * @member {string} name Polymorphic Discriminator
   */
  name: "PostArgs";
  /**
   * @member {PostArgsMatchConditionParameters} parameters Defines the
   * parameters for the condition.
   */
  parameters: PostArgsMatchConditionParameters;
}

/**
 * @interface
 * An interface representing RequestUriMatchConditionParameters.
 * Defines the parameters for RequestUri match conditions
 *
 */
export interface RequestUriMatchConditionParameters {
  /**
   * @member {RequestUriOperator} operator Describes operator to be matched.
   * Possible values include: 'Any', 'Equal', 'Contains', 'BeginsWith',
   * 'EndsWith', 'LessThan', 'LessThanOrEqual', 'GreaterThan',
   * 'GreaterThanOrEqual'
   */
  operator: RequestUriOperator;
  /**
   * @member {boolean} [negateCondition] Describes if this is negate condition
   * or not
   */
  negateCondition?: boolean;
  /**
   * @member {string[]} matchValues The match value for the condition of the
   * delivery rule
   */
  matchValues: string[];
  /**
   * @member {Transform[]} [transforms] List of transforms
   */
  transforms?: Transform[];
}

/**
 * @interface
 * An interface representing DeliveryRuleRequestUriCondition.
 * Defines the RequestUri condition for the delivery rule.
 *
 */
export interface DeliveryRuleRequestUriCondition {
  /**
   * @member {string} name Polymorphic Discriminator
   */
  name: "RequestUri";
  /**
   * @member {RequestUriMatchConditionParameters} parameters Defines the
   * parameters for the condition.
   */
  parameters: RequestUriMatchConditionParameters;
}

/**
 * @interface
 * An interface representing RequestHeaderMatchConditionParameters.
 * Defines the parameters for RequestHeader match conditions
 *
 */
export interface RequestHeaderMatchConditionParameters {
  /**
   * @member {string} selector Name of Header to be matched
   */
  selector: string;
  /**
   * @member {RequestHeaderOperator} operator Describes operator to be matched.
   * Possible values include: 'Any', 'Equal', 'Contains', 'BeginsWith',
   * 'EndsWith', 'LessThan', 'LessThanOrEqual', 'GreaterThan',
   * 'GreaterThanOrEqual'
   */
  operator: RequestHeaderOperator;
  /**
   * @member {boolean} [negateCondition] Describes if this is negate condition
   * or not
   */
  negateCondition?: boolean;
  /**
   * @member {string[]} matchValues The match value for the condition of the
   * delivery rule
   */
  matchValues: string[];
  /**
   * @member {Transform[]} [transforms] List of transforms
   */
  transforms?: Transform[];
}

/**
 * @interface
 * An interface representing DeliveryRuleRequestHeaderCondition.
 * Defines the RequestHeader condition for the delivery rule.
 *
 */
export interface DeliveryRuleRequestHeaderCondition {
  /**
   * @member {string} name Polymorphic Discriminator
   */
  name: "RequestHeader";
  /**
   * @member {RequestHeaderMatchConditionParameters} parameters Defines the
   * parameters for the condition.
   */
  parameters: RequestHeaderMatchConditionParameters;
}

/**
 * @interface
 * An interface representing RequestBodyMatchConditionParameters.
 * Defines the parameters for RequestBody match conditions
 *
 */
export interface RequestBodyMatchConditionParameters {
  /**
   * @member {RequestBodyOperator} operator Describes operator to be matched.
   * Possible values include: 'Any', 'Equal', 'Contains', 'BeginsWith',
   * 'EndsWith', 'LessThan', 'LessThanOrEqual', 'GreaterThan',
   * 'GreaterThanOrEqual'
   */
  operator: RequestBodyOperator;
  /**
   * @member {boolean} [negateCondition] Describes if this is negate condition
   * or not
   */
  negateCondition?: boolean;
  /**
   * @member {string[]} matchValues The match value for the condition of the
   * delivery rule
   */
  matchValues: string[];
  /**
   * @member {Transform[]} [transforms] List of transforms
   */
  transforms?: Transform[];
}

/**
 * @interface
 * An interface representing DeliveryRuleRequestBodyCondition.
 * Defines the RequestBody condition for the delivery rule.
 *
 */
export interface DeliveryRuleRequestBodyCondition {
  /**
   * @member {string} name Polymorphic Discriminator
   */
  name: "RequestBody";
  /**
   * @member {RequestBodyMatchConditionParameters} parameters Defines the
   * parameters for the condition.
   */
  parameters: RequestBodyMatchConditionParameters;
}

/**
 * @interface
 * An interface representing RequestSchemeMatchConditionParameters.
 * Defines the parameters for RequestScheme match conditions
 *
 */
export interface RequestSchemeMatchConditionParameters {
  /**
   * @member {boolean} [negateCondition] Describes if this is negate condition
   * or not
   */
  negateCondition?: boolean;
  /**
   * @member {string[]} matchValues The match value for the condition of the
   * delivery rule
   */
  matchValues: string[];
}

/**
 * @interface
 * An interface representing DeliveryRuleRequestSchemeCondition.
 * Defines the RequestScheme condition for the delivery rule.
 *
 */
export interface DeliveryRuleRequestSchemeCondition {
  /**
   * @member {string} name Polymorphic Discriminator
   */
  name: "RequestScheme";
  /**
   * @member {RequestSchemeMatchConditionParameters} parameters Defines the
   * parameters for the condition.
   */
  parameters: RequestSchemeMatchConditionParameters;
}

/**
 * @interface
 * An interface representing UrlPathMatchConditionParameters.
 * Defines the parameters for UrlPath match conditions
 *
 */
export interface UrlPathMatchConditionParameters {
  /**
   * @member {UrlPathOperator} operator Describes operator to be matched.
   * Possible values include: 'Any', 'Equal', 'Contains', 'BeginsWith',
   * 'EndsWith', 'LessThan', 'LessThanOrEqual', 'GreaterThan',
   * 'GreaterThanOrEqual', 'Wildcard'
   */
  operator: UrlPathOperator;
  /**
   * @member {boolean} [negateCondition] Describes if this is negate condition
   * or not
   */
  negateCondition?: boolean;
  /**
   * @member {string[]} matchValues The match value for the condition of the
   * delivery rule
   */
  matchValues: string[];
  /**
   * @member {Transform[]} [transforms] List of transforms
   */
  transforms?: Transform[];
}

/**
 * @interface
 * An interface representing DeliveryRuleUrlPathCondition.
 * Defines the UrlPath condition for the delivery rule.
 *
 */
export interface DeliveryRuleUrlPathCondition {
  /**
   * @member {string} name Polymorphic Discriminator
   */
  name: "UrlPath";
  /**
   * @member {UrlPathMatchConditionParameters} parameters Defines the
   * parameters for the condition.
   */
  parameters: UrlPathMatchConditionParameters;
}

/**
 * @interface
 * An interface representing UrlFileExtensionMatchConditionParameters.
 * Defines the parameters for UrlFileExtension match conditions
 *
 */
export interface UrlFileExtensionMatchConditionParameters {
  /**
   * @member {UrlFileExtensionOperator} operator Describes operator to be
   * matched. Possible values include: 'Any', 'Equal', 'Contains',
   * 'BeginsWith', 'EndsWith', 'LessThan', 'LessThanOrEqual', 'GreaterThan',
   * 'GreaterThanOrEqual'
   */
  operator: UrlFileExtensionOperator;
  /**
   * @member {boolean} [negateCondition] Describes if this is negate condition
   * or not
   */
  negateCondition?: boolean;
  /**
   * @member {string[]} matchValues The match value for the condition of the
   * delivery rule
   */
  matchValues: string[];
  /**
   * @member {Transform[]} [transforms] List of transforms
   */
  transforms?: Transform[];
}

/**
 * @interface
 * An interface representing DeliveryRuleUrlFileExtensionCondition.
 * Defines the UrlFileExtension condition for the delivery rule.
 *
 */
export interface DeliveryRuleUrlFileExtensionCondition {
  /**
   * @member {string} name Polymorphic Discriminator
   */
  name: "UrlFileExtension";
  /**
   * @member {UrlFileExtensionMatchConditionParameters} parameters Defines the
   * parameters for the condition.
   */
  parameters: UrlFileExtensionMatchConditionParameters;
}

/**
 * @interface
 * An interface representing UrlFileNameMatchConditionParameters.
 * Defines the parameters for UrlFilename match conditions
 *
 */
export interface UrlFileNameMatchConditionParameters {
  /**
   * @member {UrlFileNameOperator} operator Describes operator to be matched.
   * Possible values include: 'Any', 'Equal', 'Contains', 'BeginsWith',
   * 'EndsWith', 'LessThan', 'LessThanOrEqual', 'GreaterThan',
   * 'GreaterThanOrEqual'
   */
  operator: UrlFileNameOperator;
  /**
   * @member {boolean} [negateCondition] Describes if this is negate condition
   * or not
   */
  negateCondition?: boolean;
  /**
   * @member {string[]} matchValues The match value for the condition of the
   * delivery rule
   */
  matchValues: string[];
  /**
   * @member {Transform[]} [transforms] List of transforms
   */
  transforms?: Transform[];
}

/**
 * @interface
 * An interface representing DeliveryRuleUrlFileNameCondition.
 * Defines the UrlFileName condition for the delivery rule.
 *
 */
export interface DeliveryRuleUrlFileNameCondition {
  /**
   * @member {string} name Polymorphic Discriminator
   */
  name: "UrlFileName";
  /**
   * @member {UrlFileNameMatchConditionParameters} parameters Defines the
   * parameters for the condition.
   */
  parameters: UrlFileNameMatchConditionParameters;
}

/**
 * @interface
 * An interface representing IsDeviceMatchConditionParameters.
 * Defines the parameters for IsDevice match conditions
 *
 */
export interface IsDeviceMatchConditionParameters {
  /**
   * @member {boolean} [negateCondition] Describes if this is negate condition
   * or not
   */
  negateCondition?: boolean;
  /**
   * @member {string[]} matchValues The match value for the condition of the
   * delivery rule
   */
  matchValues: string[];
  /**
   * @member {Transform[]} [transforms] List of transforms
   */
  transforms?: Transform[];
}

/**
 * @interface
 * An interface representing DeliveryRuleIsDeviceCondition.
 * Defines the IsDevice condition for the delivery rule.
 *
 */
export interface DeliveryRuleIsDeviceCondition {
  /**
   * @member {string} name Polymorphic Discriminator
   */
  name: "IsDevice";
  /**
   * @member {IsDeviceMatchConditionParameters} parameters Defines the
   * parameters for the condition.
   */
  parameters: IsDeviceMatchConditionParameters;
}

/**
 * @interface
 * An interface representing UrlRedirectActionParameters.
 * Defines the parameters for the url redirect action.
 *
 */
export interface UrlRedirectActionParameters {
  /**
   * @member {RedirectType} redirectType The redirect type the rule will use
   * when redirecting traffic. Possible values include: 'Moved', 'Found',
   * 'TemporaryRedirect', 'PermanentRedirect'
   */
  redirectType: RedirectType;
  /**
   * @member {DestinationProtocol} [destinationProtocol] Protocol to use for
   * the redirect. The default value is MatchRequest. Possible values include:
   * 'MatchRequest', 'Http', 'Https'
   */
  destinationProtocol?: DestinationProtocol;
  /**
   * @member {string} [customPath] The full path to redirect. Path cannot be
   * empty and must start with /. Leave empty to use the incoming path as
   * destination path.
   */
  customPath?: string;
  /**
   * @member {string} [customHostname] Host to redirect. Leave empty to use use
   * the incoming host as the destination host.
   */
  customHostname?: string;
  /**
   * @member {string} [customQueryString] The set of query strings to be placed
   * in the redirect URL. Setting this value would replace any existing query
   * string; leave empty to preserve the incoming query string. Query string
   * must be in <key>=<value> format. ? and & will be added automatically so do
   * not include them.
   */
  customQueryString?: string;
  /**
   * @member {string} [customFragment] Fragment to add to the redirect URL.
   * Fragment is the part of the URL that comes after #. Do not include the #.
   */
  customFragment?: string;
}

/**
 * @interface
 * An interface representing UrlRedirectAction.
 * Defines the url redirect action for the delivery rule.
 *
 */
export interface UrlRedirectAction {
  /**
   * @member {string} name Polymorphic Discriminator
   */
  name: "UrlRedirect";
  /**
   * @member {UrlRedirectActionParameters} parameters Defines the parameters
   * for the action.
   */
  parameters: UrlRedirectActionParameters;
}

/**
 * @interface
 * An interface representing HeaderActionParameters.
 * Defines the parameters for the request header action.
 *
 */
export interface HeaderActionParameters {
  /**
   * @member {HeaderAction} headerAction Action to perform. Possible values
   * include: 'Append', 'Overwrite', 'Delete'
   */
  headerAction: HeaderAction;
  /**
   * @member {string} headerName Name of the header to modify
   */
  headerName: string;
  /**
   * @member {string} [value] Value for the specified action
   */
  value?: string;
}

/**
 * @interface
 * An interface representing DeliveryRuleRequestHeaderAction.
 * Defines the request header action for the delivery rule.
 *
 */
export interface DeliveryRuleRequestHeaderAction {
  /**
   * @member {string} name Polymorphic Discriminator
   */
  name: "ModifyRequestHeader";
  /**
   * @member {HeaderActionParameters} parameters Defines the parameters for the
   * action.
   */
  parameters: HeaderActionParameters;
}

/**
 * @interface
 * An interface representing DeliveryRuleResponseHeaderAction.
 * Defines the response header action for the delivery rule.
 *
 */
export interface DeliveryRuleResponseHeaderAction {
  /**
   * @member {string} name Polymorphic Discriminator
   */
  name: "ModifyResponseHeader";
  /**
   * @member {HeaderActionParameters} parameters Defines the parameters for the
   * action.
   */
  parameters: HeaderActionParameters;
}

/**
 * @interface
 * An interface representing CacheExpirationActionParameters.
 * Defines the parameters for the cache expiration action.
 *
 */
export interface CacheExpirationActionParameters {
  /**
   * @member {CacheBehavior} cacheBehavior Caching behavior for the requests.
   * Possible values include: 'BypassCache', 'Override', 'SetIfMissing'
   */
  cacheBehavior: CacheBehavior;
  /**
   * @member {string} [cacheDuration] The duration for which the content needs
   * to be cached. Allowed format is [d.]hh:mm:ss
   */
  cacheDuration?: string;
}

/**
 * @interface
 * An interface representing DeliveryRuleCacheExpirationAction.
 * Defines the cache expiration action for the delivery rule.
 *
 */
export interface DeliveryRuleCacheExpirationAction {
  /**
   * @member {string} name Polymorphic Discriminator
   */
  name: "CacheExpiration";
  /**
   * @member {CacheExpirationActionParameters} parameters Defines the
   * parameters for the action.
   */
  parameters: CacheExpirationActionParameters;
}

/**
 * @interface
 * An interface representing PurgeParameters.
 * Parameters required for content purge.
 *
 */
export interface PurgeParameters {
  /**
   * @member {string[]} contentPaths The path to the content to be purged. Can
   * describe a file path or a wild card directory.
   */
  contentPaths: string[];
}

/**
 * @interface
 * An interface representing LoadParameters.
 * Parameters required for content load.
 *
 */
export interface LoadParameters {
  /**
   * @member {string[]} contentPaths The path to the content to be loaded. Path
   * should be a relative file URL of the origin.
   */
  contentPaths: string[];
}

/**
 * @interface
 * An interface representing Origin.
 * CDN origin is the source of the content being delivered via CDN. When the
 * edge nodes represented by an endpoint do not have the requested content
 * cached, they attempt to fetch it from one or more of the configured origins.
 *
 * @extends TrackedResource
 */
export interface Origin extends TrackedResource {
  /**
   * @member {string} hostName The address of the origin. Domain names, IPv4
   * addresses, and IPv6 addresses are supported.
   */
  hostName: string;
  /**
   * @member {number} [httpPort] The value of the HTTP port. Must be between 1
   * and 65535.
   */
  httpPort?: number;
  /**
   * @member {number} [httpsPort] The value of the https port. Must be between
   * 1 and 65535.
   */
  httpsPort?: number;
  /**
   * @member {OriginResourceState} [resourceState] Resource status of the
   * origin. Possible values include: 'Creating', 'Active', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceState?: OriginResourceState;
  /**
   * @member {string} [provisioningState] Provisioning status of the origin.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: string;
}

/**
 * @interface
 * An interface representing OriginUpdateParameters.
 * Origin properties needed for origin creation or update.
 *
 * @extends BaseResource
 */
export interface OriginUpdateParameters extends BaseResource {
  /**
   * @member {string} [hostName] The address of the origin. Domain names, IPv4
   * addresses, and IPv6 addresses are supported.
   */
  hostName?: string;
  /**
   * @member {number} [httpPort] The value of the HTTP port. Must be between 1
   * and 65535.
   */
  httpPort?: number;
  /**
   * @member {number} [httpsPort] The value of the HTTPS port. Must be between
   * 1 and 65535.
   */
  httpsPort?: number;
}

/**
 * @interface
 * An interface representing ProxyResource.
 * The resource model definition for a ARM proxy resource. It will have
 * everything other than required location and tags
 *
 * @extends Resource
 */
export interface ProxyResource extends Resource {
}

/**
 * @interface
 * An interface representing CustomDomain.
 * Friendly domain name mapping to the endpoint hostname that the customer
 * provides for branding purposes, e.g. www.contoso.com.
 *
 * @extends ProxyResource
 */
export interface CustomDomain extends ProxyResource {
  /**
   * @member {string} hostName The host name of the custom domain. Must be a
   * domain name.
   */
  hostName: string;
  /**
   * @member {CustomDomainResourceState} [resourceState] Resource status of the
   * custom domain. Possible values include: 'Creating', 'Active', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceState?: CustomDomainResourceState;
  /**
   * @member {CustomHttpsProvisioningState} [customHttpsProvisioningState]
   * Provisioning status of Custom Https of the custom domain. Possible values
   * include: 'Enabling', 'Enabled', 'Disabling', 'Disabled', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly customHttpsProvisioningState?: CustomHttpsProvisioningState;
  /**
   * @member {CustomHttpsProvisioningSubstate}
   * [customHttpsProvisioningSubstate] Provisioning substate shows the progress
   * of custom HTTPS enabling/disabling process step by step. Possible values
   * include: 'SubmittingDomainControlValidationRequest',
   * 'PendingDomainControlValidationREquestApproval',
   * 'DomainControlValidationRequestApproved',
   * 'DomainControlValidationRequestRejected',
   * 'DomainControlValidationRequestTimedOut', 'IssuingCertificate',
   * 'DeployingCertificate', 'CertificateDeployed', 'DeletingCertificate',
   * 'CertificateDeleted'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly customHttpsProvisioningSubstate?: CustomHttpsProvisioningSubstate;
  /**
   * @member {string} [validationData] Special validation or data may be
   * required when delivering CDN to some regions due to local compliance
   * reasons. E.g. ICP license number of a custom domain is required to deliver
   * content in China.
   */
  validationData?: string;
  /**
   * @member {string} [provisioningState] Provisioning status of the custom
   * domain.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: string;
}

/**
 * @interface
 * An interface representing CustomDomainParameters.
 * The customDomain JSON object required for custom domain creation or update.
 *
 */
export interface CustomDomainParameters {
  /**
   * @member {string} hostName The host name of the custom domain. Must be a
   * domain name.
   */
  hostName: string;
}

/**
 * Contains the possible cases for CustomDomainHttpsParameters.
 */
export type CustomDomainHttpsParametersUnion = CustomDomainHttpsParameters | CdnManagedHttpsParameters | UserManagedHttpsParameters;

/**
 * @interface
 * An interface representing CustomDomainHttpsParameters.
 * The JSON object that contains the properties to secure a custom domain.
 *
 */
export interface CustomDomainHttpsParameters {
  /**
   * @member {string} certificateSource Polymorphic Discriminator
   */
  certificateSource: "CustomDomainHttpsParameters";
  /**
   * @member {ProtocolType} protocolType Defines the TLS extension protocol
   * that is used for secure delivery. Possible values include:
   * 'ServerNameIndication', 'IPBased'
   */
  protocolType: ProtocolType;
}

/**
 * @interface
 * An interface representing CdnCertificateSourceParameters.
 * Defines the parameters for using CDN managed certificate for securing custom
 * domain.
 *
 */
export interface CdnCertificateSourceParameters {
  /**
   * @member {CertificateType} certificateType Type of certificate used.
   * Possible values include: 'Shared', 'Dedicated'
   */
  certificateType: CertificateType;
}

/**
 * @interface
 * An interface representing CdnManagedHttpsParameters.
 * Defines the certificate source parameters using CDN managed certificate for
 * enabling SSL.
 *
 */
export interface CdnManagedHttpsParameters {
  /**
   * @member {string} certificateSource Polymorphic Discriminator
   */
  certificateSource: "Cdn";
  /**
   * @member {ProtocolType} protocolType Defines the TLS extension protocol
   * that is used for secure delivery. Possible values include:
   * 'ServerNameIndication', 'IPBased'
   */
  protocolType: ProtocolType;
  /**
   * @member {CdnCertificateSourceParameters} certificateSourceParameters
   * Defines the certificate source parameters using CDN managed certificate
   * for enabling SSL.
   */
  certificateSourceParameters: CdnCertificateSourceParameters;
}

/**
 * @interface
 * An interface representing KeyVaultCertificateSourceParameters.
 * Describes the parameters for using a user's KeyVault certificate for
 * securing custom domain.
 *
 */
export interface KeyVaultCertificateSourceParameters {
  /**
   * @member {string} subscriptionId Subscription Id of the user's Key Vault
   * containing the SSL certificate
   */
  subscriptionId: string;
  /**
   * @member {string} resourceGroupName Resource group of the user's Key Vault
   * containing the SSL certificate
   */
  resourceGroupName: string;
  /**
   * @member {string} vaultName The name of the user's Key Vault containing the
   * SSL certificate
   */
  vaultName: string;
  /**
   * @member {string} secretName The name of Key Vault Secret (representing the
   * full certificate PFX) in Key Vault.
   */
  secretName: string;
  /**
   * @member {string} secretVersion The version(GUID) of Key Vault Secret in
   * Key Vault.
   */
  secretVersion: string;
}

/**
 * @interface
 * An interface representing UserManagedHttpsParameters.
 * Defines the certificate source parameters using user's keyvault certificate
 * for enabling SSL.
 *
 */
export interface UserManagedHttpsParameters {
  /**
   * @member {string} certificateSource Polymorphic Discriminator
   */
  certificateSource: "AzureKeyVault";
  /**
   * @member {ProtocolType} protocolType Defines the TLS extension protocol
   * that is used for secure delivery. Possible values include:
   * 'ServerNameIndication', 'IPBased'
   */
  protocolType: ProtocolType;
  /**
   * @member {KeyVaultCertificateSourceParameters} certificateSourceParameters
   * Defines the certificate source parameters using user's keyvault
   * certificate for enabling SSL.
   */
  certificateSourceParameters: KeyVaultCertificateSourceParameters;
}

/**
 * @interface
 * An interface representing ValidateCustomDomainInput.
 * Input of the custom domain to be validated for DNS mapping.
 *
 */
export interface ValidateCustomDomainInput {
  /**
   * @member {string} hostName The host name of the custom domain. Must be a
   * domain name.
   */
  hostName: string;
}

/**
 * @interface
 * An interface representing ValidateCustomDomainOutput.
 * Output of custom domain validation.
 *
 */
export interface ValidateCustomDomainOutput {
  /**
   * @member {boolean} [customDomainValidated] Indicates whether the custom
   * domain is valid or not.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly customDomainValidated?: boolean;
  /**
   * @member {string} [reason] The reason why the custom domain is not valid.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly reason?: string;
  /**
   * @member {string} [message] Error message describing why the custom domain
   * is not valid.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
}

/**
 * @interface
 * An interface representing CheckNameAvailabilityInput.
 * Input of CheckNameAvailability API.
 *
 */
export interface CheckNameAvailabilityInput {
  /**
   * @member {string} name The resource name to validate.
   */
  name: string;
}

/**
 * @interface
 * An interface representing CheckNameAvailabilityOutput.
 * Output of check name availability API.
 *
 */
export interface CheckNameAvailabilityOutput {
  /**
   * @member {boolean} [nameAvailable] Indicates whether the name is available.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nameAvailable?: boolean;
  /**
   * @member {string} [reason] The reason why the name is not available.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly reason?: string;
  /**
   * @member {string} [message] The detailed error message describing why the
   * name is not available.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
}

/**
 * @interface
 * An interface representing ValidateProbeInput.
 * Input of the validate probe API.
 *
 */
export interface ValidateProbeInput {
  /**
   * @member {string} probeURL The probe URL to validate.
   */
  probeURL: string;
}

/**
 * @interface
 * An interface representing ValidateProbeOutput.
 * Output of the validate probe API.
 *
 */
export interface ValidateProbeOutput {
  /**
   * @member {boolean} [isValid] Indicates whether the probe URL is accepted or
   * not.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isValid?: boolean;
  /**
   * @member {string} [errorCode] Specifies the error code when the probe url
   * is not accepted.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorCode?: string;
  /**
   * @member {string} [message] The detailed error message describing why the
   * probe URL is not accepted.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
}

/**
 * @interface
 * An interface representing ResourceUsage.
 * Output of check resource usage API.
 *
 */
export interface ResourceUsage {
  /**
   * @member {string} [resourceType] Resource type for which the usage is
   * provided.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceType?: string;
  /**
   * @member {string} [unit] Unit of the usage. e.g. Count.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly unit?: string;
  /**
   * @member {number} [currentValue] Actual value of usage on the specified
   * resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly currentValue?: number;
  /**
   * @member {number} [limit] Quota of the specified resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly limit?: number;
}

/**
 * @interface
 * An interface representing OperationDisplay.
 * The object that represents the operation.
 *
 */
export interface OperationDisplay {
  /**
   * @member {string} [provider] Service provider: Microsoft.Cdn
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: string;
  /**
   * @member {string} [resource] Resource on which the operation is performed:
   * Profile, endpoint, etc.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resource?: string;
  /**
   * @member {string} [operation] Operation type: Read, write, delete, etc.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly operation?: string;
}

/**
 * @interface
 * An interface representing Operation.
 * CDN REST API operation
 *
 */
export interface Operation {
  /**
   * @member {string} [name] Operation name: {provider}/{resource}/{operation}
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {OperationDisplay} [display] The object that represents the
   * operation.
   */
  display?: OperationDisplay;
}

/**
 * @interface
 * An interface representing CidrIpAddress.
 * CIDR Ip address
 *
 */
export interface CidrIpAddress {
  /**
   * @member {string} [baseIpAddress] Ip address itself.
   */
  baseIpAddress?: string;
  /**
   * @member {number} [prefixLength] The length of the prefix of the ip
   * address.
   */
  prefixLength?: number;
}

/**
 * @interface
 * An interface representing IpAddressGroup.
 * CDN Ip address group
 *
 */
export interface IpAddressGroup {
  /**
   * @member {string} [deliveryRegion] The delivery region of the ip address
   * group
   */
  deliveryRegion?: string;
  /**
   * @member {CidrIpAddress[]} [ipv4Addresses] The list of ip v4 addresses.
   */
  ipv4Addresses?: CidrIpAddress[];
  /**
   * @member {CidrIpAddress[]} [ipv6Addresses] The list of ip v6 addresses.
   */
  ipv6Addresses?: CidrIpAddress[];
}

/**
 * @interface
 * An interface representing EdgeNode.
 * Edgenode is a global Point of Presence (POP) location used to deliver CDN
 * content to end users.
 *
 * @extends ProxyResource
 */
export interface EdgeNode extends ProxyResource {
  /**
   * @member {IpAddressGroup[]} ipAddressGroups List of ip address groups.
   */
  ipAddressGroups: IpAddressGroup[];
}

/**
 * @interface
 * An interface representing ErrorResponse.
 * Error response indicates CDN service is not able to process the incoming
 * request. The reason is provided in the error message.
 *
 */
export interface ErrorResponse {
  /**
   * @member {string} [code] Error code.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly code?: string;
  /**
   * @member {string} [message] Error message indicating why the operation
   * failed.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
}

/**
 * @interface
 * An interface representing PolicySettings.
 * Defines contents of a web application firewall global configuration
 *
 */
export interface PolicySettings {
  /**
   * @member {PolicyEnabledState} [enabledState] describes if the policy is in
   * enabled state or disabled state. Possible values include: 'Disabled',
   * 'Enabled'
   */
  enabledState?: PolicyEnabledState;
  /**
   * @member {PolicyMode} [mode] Describes if it is in detection mode or
   * prevention mode at policy level. Possible values include: 'Prevention',
   * 'Detection'
   */
  mode?: PolicyMode;
  /**
   * @member {string} [defaultRedirectUrl] If action type is redirect, this
   * field represents the default redirect URL for the client.
   */
  defaultRedirectUrl?: string;
  /**
   * @member {number} [defaultCustomBlockResponseStatusCode] If the action type
   * is block, this field defines the default customer overridable response
   * status code.
   */
  defaultCustomBlockResponseStatusCode?: number;
  /**
   * @member {string} [defaultCustomBlockResponseBody] If the action type is
   * block, customer can override the response body. The body must be specified
   * in base64 encoding.
   */
  defaultCustomBlockResponseBody?: string;
}

/**
 * @interface
 * An interface representing CustomRule.
 * Defines the common attributes for a custom rule that can be included in a
 * waf policy
 *
 */
export interface CustomRule {
  /**
   * @member {string} name Defines the name of the custom rule
   */
  name: string;
  /**
   * @member {CustomRuleEnabledState} [enabledState] Describes if the custom
   * rule is in enabled or disabled state. Defaults to Enabled if not
   * specified. Possible values include: 'Disabled', 'Enabled'
   */
  enabledState?: CustomRuleEnabledState;
  /**
   * @member {number} priority Defines in what order this rule be evaluated in
   * the overall list of custom rules
   */
  priority: number;
  /**
   * @member {MatchCondition[]} matchConditions List of match conditions.
   */
  matchConditions: MatchCondition[];
  /**
   * @member {ActionType} action Describes what action to be applied when rule
   * matches
   */
  action: ActionType;
}

/**
 * @interface
 * An interface representing RateLimitRule.
 * Defines a rate limiting rule that can be included in a waf policy
 *
 * @extends CustomRule
 */
export interface RateLimitRule extends CustomRule {
  /**
   * @member {number} rateLimitThreshold Defines rate limit threshold.
   */
  rateLimitThreshold: number;
  /**
   * @member {number} rateLimitDurationInMinutes Defines rate limit duration.
   * Default is 1 minute.
   */
  rateLimitDurationInMinutes: number;
}

/**
 * @interface
 * An interface representing RateLimitRuleList.
 * Defines contents of rate limit rules
 *
 */
export interface RateLimitRuleList {
  /**
   * @member {RateLimitRule[]} [rules] List of rules
   */
  rules?: RateLimitRule[];
}

/**
 * @interface
 * An interface representing MatchCondition.
 * Define match conditions
 *
 */
export interface MatchCondition {
  /**
   * @member {MatchVariable} matchVariable Match variable to compare against.
   * Possible values include: 'RemoteAddr', 'Country', 'RequestMethod',
   * 'RequestHeader', 'RequestUri', 'QueryString', 'RequestBody', 'Cookies',
   * 'PostArgs'
   */
  matchVariable: MatchVariable;
  /**
   * @member {string} [selector] Selector can used to match a specific key for
   * QueryString, RequestUri, RequestHeaders or RequestBody.
   */
  selector?: string;
  /**
   * @member {Operator} operator Describes operator to be matched. Possible
   * values include: 'Any', 'IPMatch', 'GeoMatch', 'Equal', 'Contains',
   * 'LessThan', 'GreaterThan', 'LessThanOrEqual', 'GreaterThanOrEqual',
   * 'BeginsWith', 'EndsWith', 'RegEx'
   */
  operator: Operator;
  /**
   * @member {boolean} [negateCondition] Describes if the result of this
   * condition should be negated.
   */
  negateCondition?: boolean;
  /**
   * @member {string[]} matchValue List of possible match values.
   */
  matchValue: string[];
}

/**
 * @interface
 * An interface representing ActionType.
 * Defines the action to take on rule match.
 *
 */
export interface ActionType {
  /**
   * @member {Action} actionType Describes type of action. Possible values
   * include: 'Allow', 'Block', 'Log', 'Redirect'
   */
  actionType: Action;
  /**
   * @member {string} [redirectUrl] If action type is redirect, this field
   * represents URL to be re-directed.
   */
  redirectUrl?: string;
  /**
   * @member {number} [customBlockResponseStatusCode] If the action type is
   * block, customer can override the response status code.
   */
  customBlockResponseStatusCode?: number;
  /**
   * @member {string} [customBlockResponseBody] If the action type is block,
   * customer can override the response body. The body must be specified in
   * base64 encoding.
   */
  customBlockResponseBody?: string;
}

/**
 * @interface
 * An interface representing CustomRuleList.
 * Defines contents of custom rules
 *
 */
export interface CustomRuleList {
  /**
   * @member {CustomRule[]} [rules] List of rules
   */
  rules?: CustomRule[];
}

/**
 * @interface
 * An interface representing ManagedRuleOverride.
 * Defines a managed rule group override setting.
 *
 */
export interface ManagedRuleOverride {
  /**
   * @member {string} ruleId Identifier for the managed rule.
   */
  ruleId: string;
  /**
   * @member {ManagedRuleEnabledState} [enabledState] Describes if the managed
   * rule is in enabled or disabled state. Defaults to Disabled if not
   * specified. Possible values include: 'Disabled', 'Enabled'
   */
  enabledState?: ManagedRuleEnabledState;
  /**
   * @member {ActionType} [action] Describes the override action to be applied
   * when rule matches.
   */
  action?: ActionType;
}

/**
 * @interface
 * An interface representing ManagedRuleGroupOverride.
 * Defines a managed rule group override setting.
 *
 */
export interface ManagedRuleGroupOverride {
  /**
   * @member {string} ruleGroupName Describes the managed rule group within the
   * rule set to override
   */
  ruleGroupName: string;
  /**
   * @member {ManagedRuleOverride[]} [rules] List of rules that will be
   * disabled. If none specified, all rules in the group will be disabled.
   */
  rules?: ManagedRuleOverride[];
}

/**
 * @interface
 * An interface representing ManagedRuleSet.
 * Defines a managed rule set.
 *
 */
export interface ManagedRuleSet {
  /**
   * @member {string} ruleSetType Defines the rule set type to use.
   */
  ruleSetType: string;
  /**
   * @member {string} ruleSetVersion Defines the version of the rule set to
   * use.
   */
  ruleSetVersion: string;
  /**
   * @member {number} [anomalyScore] Verizon only : If the rule set supports
   * anomaly detection mode, this describes the threshold for blocking
   * requests.
   */
  anomalyScore?: number;
  /**
   * @member {ManagedRuleGroupOverride[]} [ruleGroupOverrides] Defines the rule
   * overrides to apply to the rule set.
   */
  ruleGroupOverrides?: ManagedRuleGroupOverride[];
}

/**
 * @interface
 * An interface representing ManagedRuleSetList.
 * Defines the list of managed rule sets for the policy.
 *
 */
export interface ManagedRuleSetList {
  /**
   * @member {ManagedRuleSet[]} [managedRuleSets] List of rule sets.
   */
  managedRuleSets?: ManagedRuleSet[];
}

/**
 * @interface
 * An interface representing CdnEndpoint.
 * Defines the ARM Resource ID for the linked endpoints
 *
 */
export interface CdnEndpoint {
  /**
   * @member {string} [id] ARM Resource ID string.
   */
  id?: string;
}

/**
 * @interface
 * An interface representing CdnWebApplicationFirewallPolicy.
 * Defines web application firewall policy for Azure CDN.
 *
 * @extends TrackedResource
 */
export interface CdnWebApplicationFirewallPolicy extends TrackedResource {
  /**
   * @member {PolicySettings} [policySettings] Describes  policySettings for
   * policy
   */
  policySettings?: PolicySettings;
  /**
   * @member {RateLimitRuleList} [rateLimitRules] Describes rate limit rules
   * inside the policy.
   */
  rateLimitRules?: RateLimitRuleList;
  /**
   * @member {CustomRuleList} [customRules] Describes custom rules inside the
   * policy.
   */
  customRules?: CustomRuleList;
  /**
   * @member {ManagedRuleSetList} [managedRules] Describes managed rules inside
   * the policy.
   */
  managedRules?: ManagedRuleSetList;
  /**
   * @member {CdnEndpoint[]} [cdnEndpointLinks] Describes Azure CDN endpoints
   * associated with this Web Application Firewall policy.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly cdnEndpointLinks?: CdnEndpoint[];
  /**
   * @member {string} [provisioningState] Provisioning state of the
   * WebApplicationFirewallPolicy.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: string;
  /**
   * @member {PolicyResourceState} [resourceState] Resource status of the
   * policy. Possible values include: 'Creating', 'Enabling', 'Enabled',
   * 'Disabling', 'Disabled', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceState?: PolicyResourceState;
  /**
   * @member {string} [etag] Gets a unique read-only string that changes
   * whenever the resource is updated.
   */
  etag?: string;
  /**
   * @member {Sku} sku The pricing tier (defines a CDN provider, feature list
   * and rate) of the CdnWebApplicationFirewallPolicy.
   */
  sku: Sku;
}

/**
 * @interface
 * An interface representing ManagedRuleDefinition.
 * Describes a managed rule definition.
 *
 */
export interface ManagedRuleDefinition {
  /**
   * @member {string} [ruleId] Identifier for the managed rule.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly ruleId?: string;
  /**
   * @member {string} [description] Describes the functionality of the managed
   * rule.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
}

/**
 * @interface
 * An interface representing ManagedRuleGroupDefinition.
 * Describes a managed rule group.
 *
 */
export interface ManagedRuleGroupDefinition {
  /**
   * @member {string} [ruleGroupName] Name of the managed rule group.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly ruleGroupName?: string;
  /**
   * @member {string} [description] Description of the managed rule group.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {ManagedRuleDefinition[]} [rules] List of rules within the managed
   * rule group.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly rules?: ManagedRuleDefinition[];
}

/**
 * @interface
 * An interface representing ManagedRuleSetDefinition.
 * Describes a managed rule set definition.
 *
 * @extends Resource
 */
export interface ManagedRuleSetDefinition extends Resource {
  /**
   * @member {string} [provisioningState] Provisioning state of the managed
   * rule set.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: string;
  /**
   * @member {string} [ruleSetType] Type of the managed rule set.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly ruleSetType?: string;
  /**
   * @member {string} [ruleSetVersion] Version of the managed rule set type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly ruleSetVersion?: string;
  /**
   * @member {ManagedRuleGroupDefinition[]} [ruleGroups] Rule groups of the
   * managed rule set.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly ruleGroups?: ManagedRuleGroupDefinition[];
  /**
   * @member {Sku} [sku] The pricing tier (defines a CDN provider, feature list
   * and rate) of the CdnWebApplicationFirewallPolicy.
   */
  sku?: Sku;
}

/**
 * @interface
 * An interface representing ProfilesUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ProfilesUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {{ [propertyName: string]: string }} [tags] Profile tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing ProfilesBeginUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ProfilesBeginUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {{ [propertyName: string]: string }} [tags] Profile tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing CustomDomainsEnableCustomHttpsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface CustomDomainsEnableCustomHttpsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {CustomDomainHttpsParametersUnion} [customDomainHttpsParameters]
   * The configuration specifying how to enable HTTPS for the custom domain -
   * using CDN managed certificate or user's own certificate. If not specified,
   * enabling ssl uses CDN managed certificate by default.
   */
  customDomainHttpsParameters?: CustomDomainHttpsParametersUnion;
}

/**
 * @interface
 * An interface representing CdnManagementClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface CdnManagementClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the ProfileListResult.
 * Result of the request to list profiles. It contains a list of profile
 * objects and a URL link to get the next set of results.
 *
 * @extends Array<Profile>
 */
export interface ProfileListResult extends Array<Profile> {
  /**
   * @member {string} [nextLink] URL to get the next set of profile objects if
   * there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the ResourceUsageListResult.
 * Output of check resource usage API.
 *
 * @extends Array<ResourceUsage>
 */
export interface ResourceUsageListResult extends Array<ResourceUsage> {
  /**
   * @member {string} [nextLink] URL to get the next set of custom domain
   * objects if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the EndpointListResult.
 * Result of the request to list endpoints. It contains a list of endpoint
 * objects and a URL link to get the next set of results.
 *
 * @extends Array<Endpoint>
 */
export interface EndpointListResult extends Array<Endpoint> {
  /**
   * @member {string} [nextLink] URL to get the next set of endpoint objects if
   * there is any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the OriginListResult.
 * Result of the request to list origins. It contains a list of origin objects
 * and a URL link to get the next set of results.
 *
 * @extends Array<Origin>
 */
export interface OriginListResult extends Array<Origin> {
  /**
   * @member {string} [nextLink] URL to get the next set of origin objects if
   * there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the CustomDomainListResult.
 * Result of the request to list custom domains. It contains a list of custom
 * domain objects and a URL link to get the next set of results.
 *
 * @extends Array<CustomDomain>
 */
export interface CustomDomainListResult extends Array<CustomDomain> {
  /**
   * @member {string} [nextLink] URL to get the next set of custom domain
   * objects if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the OperationsListResult.
 * Result of the request to list CDN operations. It contains a list of
 * operations and a URL link to get the next set of results.
 *
 * @extends Array<Operation>
 */
export interface OperationsListResult extends Array<Operation> {
  /**
   * @member {string} [nextLink] URL to get the next set of operation list
   * results if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the EdgenodeResult.
 * Result of the request to list CDN edgenodes. It contains a list of ip
 * address group and a URL link to get the next set of results.
 *
 * @extends Array<EdgeNode>
 */
export interface EdgenodeResult extends Array<EdgeNode> {
  /**
   * @member {string} [nextLink] URL to get the next set of edgenode list
   * results if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the CdnWebApplicationFirewallPolicyList.
 * Defines a list of WebApplicationFirewallPolicies for Azure CDN. It contains
 * a list of WebApplicationFirewallPolicy objects and a URL link to get the
 * next set of results.
 *
 * @extends Array<CdnWebApplicationFirewallPolicy>
 */
export interface CdnWebApplicationFirewallPolicyList extends Array<CdnWebApplicationFirewallPolicy> {
  /**
   * @member {string} [nextLink] URL to get the next set of
   * WebApplicationFirewallPolicy objects if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the ManagedRuleSetDefinitionList.
 * List of managed rule set definitions available for use in a policy.
 *
 * @extends Array<ManagedRuleSetDefinition>
 */
export interface ManagedRuleSetDefinitionList extends Array<ManagedRuleSetDefinition> {
  /**
   * @member {string} [nextLink] URL to retrieve next set of managed rule set
   * definitions.
   */
  nextLink?: string;
}

/**
 * Defines values for SkuName.
 * Possible values include: 'Standard_Verizon', 'Premium_Verizon', 'Custom_Verizon',
 * 'Standard_Akamai', 'Standard_ChinaCdn', 'Standard_Microsoft'
 * @readonly
 * @enum {string}
 */
export type SkuName = 'Standard_Verizon' | 'Premium_Verizon' | 'Custom_Verizon' | 'Standard_Akamai' | 'Standard_ChinaCdn' | 'Standard_Microsoft';

/**
 * Defines values for ProfileResourceState.
 * Possible values include: 'Creating', 'Active', 'Deleting', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type ProfileResourceState = 'Creating' | 'Active' | 'Deleting' | 'Disabled';

/**
 * Defines values for OptimizationType.
 * Possible values include: 'GeneralWebDelivery', 'GeneralMediaStreaming',
 * 'VideoOnDemandMediaStreaming', 'LargeFileDownload', 'DynamicSiteAcceleration'
 * @readonly
 * @enum {string}
 */
export type OptimizationType = 'GeneralWebDelivery' | 'GeneralMediaStreaming' | 'VideoOnDemandMediaStreaming' | 'LargeFileDownload' | 'DynamicSiteAcceleration';

/**
 * Defines values for EndpointResourceState.
 * Possible values include: 'Creating', 'Deleting', 'Running', 'Starting', 'Stopped', 'Stopping'
 * @readonly
 * @enum {string}
 */
export type EndpointResourceState = 'Creating' | 'Deleting' | 'Running' | 'Starting' | 'Stopped' | 'Stopping';

/**
 * Defines values for QueryStringCachingBehavior.
 * Possible values include: 'IgnoreQueryString', 'BypassCaching', 'UseQueryString', 'NotSet'
 * @readonly
 * @enum {string}
 */
export type QueryStringCachingBehavior = 'IgnoreQueryString' | 'BypassCaching' | 'UseQueryString' | 'NotSet';

/**
 * Defines values for GeoFilterActions.
 * Possible values include: 'Block', 'Allow'
 * @readonly
 * @enum {string}
 */
export type GeoFilterActions = 'Block' | 'Allow';

/**
 * Defines values for RemoteAddressOperator.
 * Possible values include: 'Any', 'IPMatch', 'GeoMatch'
 * @readonly
 * @enum {string}
 */
export type RemoteAddressOperator = 'Any' | 'IPMatch' | 'GeoMatch';

/**
 * Defines values for Transform.
 * Possible values include: 'Lowercase', 'Uppercase'
 * @readonly
 * @enum {string}
 */
export type Transform = 'Lowercase' | 'Uppercase';

/**
 * Defines values for QueryStringOperator.
 * Possible values include: 'Any', 'Equal', 'Contains', 'BeginsWith', 'EndsWith', 'LessThan',
 * 'LessThanOrEqual', 'GreaterThan', 'GreaterThanOrEqual'
 * @readonly
 * @enum {string}
 */
export type QueryStringOperator = 'Any' | 'Equal' | 'Contains' | 'BeginsWith' | 'EndsWith' | 'LessThan' | 'LessThanOrEqual' | 'GreaterThan' | 'GreaterThanOrEqual';

/**
 * Defines values for PostArgsOperator.
 * Possible values include: 'Any', 'Equal', 'Contains', 'BeginsWith', 'EndsWith', 'LessThan',
 * 'LessThanOrEqual', 'GreaterThan', 'GreaterThanOrEqual'
 * @readonly
 * @enum {string}
 */
export type PostArgsOperator = 'Any' | 'Equal' | 'Contains' | 'BeginsWith' | 'EndsWith' | 'LessThan' | 'LessThanOrEqual' | 'GreaterThan' | 'GreaterThanOrEqual';

/**
 * Defines values for RequestUriOperator.
 * Possible values include: 'Any', 'Equal', 'Contains', 'BeginsWith', 'EndsWith', 'LessThan',
 * 'LessThanOrEqual', 'GreaterThan', 'GreaterThanOrEqual'
 * @readonly
 * @enum {string}
 */
export type RequestUriOperator = 'Any' | 'Equal' | 'Contains' | 'BeginsWith' | 'EndsWith' | 'LessThan' | 'LessThanOrEqual' | 'GreaterThan' | 'GreaterThanOrEqual';

/**
 * Defines values for RequestHeaderOperator.
 * Possible values include: 'Any', 'Equal', 'Contains', 'BeginsWith', 'EndsWith', 'LessThan',
 * 'LessThanOrEqual', 'GreaterThan', 'GreaterThanOrEqual'
 * @readonly
 * @enum {string}
 */
export type RequestHeaderOperator = 'Any' | 'Equal' | 'Contains' | 'BeginsWith' | 'EndsWith' | 'LessThan' | 'LessThanOrEqual' | 'GreaterThan' | 'GreaterThanOrEqual';

/**
 * Defines values for RequestBodyOperator.
 * Possible values include: 'Any', 'Equal', 'Contains', 'BeginsWith', 'EndsWith', 'LessThan',
 * 'LessThanOrEqual', 'GreaterThan', 'GreaterThanOrEqual'
 * @readonly
 * @enum {string}
 */
export type RequestBodyOperator = 'Any' | 'Equal' | 'Contains' | 'BeginsWith' | 'EndsWith' | 'LessThan' | 'LessThanOrEqual' | 'GreaterThan' | 'GreaterThanOrEqual';

/**
 * Defines values for UrlPathOperator.
 * Possible values include: 'Any', 'Equal', 'Contains', 'BeginsWith', 'EndsWith', 'LessThan',
 * 'LessThanOrEqual', 'GreaterThan', 'GreaterThanOrEqual', 'Wildcard'
 * @readonly
 * @enum {string}
 */
export type UrlPathOperator = 'Any' | 'Equal' | 'Contains' | 'BeginsWith' | 'EndsWith' | 'LessThan' | 'LessThanOrEqual' | 'GreaterThan' | 'GreaterThanOrEqual' | 'Wildcard';

/**
 * Defines values for UrlFileExtensionOperator.
 * Possible values include: 'Any', 'Equal', 'Contains', 'BeginsWith', 'EndsWith', 'LessThan',
 * 'LessThanOrEqual', 'GreaterThan', 'GreaterThanOrEqual'
 * @readonly
 * @enum {string}
 */
export type UrlFileExtensionOperator = 'Any' | 'Equal' | 'Contains' | 'BeginsWith' | 'EndsWith' | 'LessThan' | 'LessThanOrEqual' | 'GreaterThan' | 'GreaterThanOrEqual';

/**
 * Defines values for UrlFileNameOperator.
 * Possible values include: 'Any', 'Equal', 'Contains', 'BeginsWith', 'EndsWith', 'LessThan',
 * 'LessThanOrEqual', 'GreaterThan', 'GreaterThanOrEqual'
 * @readonly
 * @enum {string}
 */
export type UrlFileNameOperator = 'Any' | 'Equal' | 'Contains' | 'BeginsWith' | 'EndsWith' | 'LessThan' | 'LessThanOrEqual' | 'GreaterThan' | 'GreaterThanOrEqual';

/**
 * Defines values for RedirectType.
 * Possible values include: 'Moved', 'Found', 'TemporaryRedirect', 'PermanentRedirect'
 * @readonly
 * @enum {string}
 */
export type RedirectType = 'Moved' | 'Found' | 'TemporaryRedirect' | 'PermanentRedirect';

/**
 * Defines values for DestinationProtocol.
 * Possible values include: 'MatchRequest', 'Http', 'Https'
 * @readonly
 * @enum {string}
 */
export type DestinationProtocol = 'MatchRequest' | 'Http' | 'Https';

/**
 * Defines values for HeaderAction.
 * Possible values include: 'Append', 'Overwrite', 'Delete'
 * @readonly
 * @enum {string}
 */
export type HeaderAction = 'Append' | 'Overwrite' | 'Delete';

/**
 * Defines values for CacheBehavior.
 * Possible values include: 'BypassCache', 'Override', 'SetIfMissing'
 * @readonly
 * @enum {string}
 */
export type CacheBehavior = 'BypassCache' | 'Override' | 'SetIfMissing';

/**
 * Defines values for OriginResourceState.
 * Possible values include: 'Creating', 'Active', 'Deleting'
 * @readonly
 * @enum {string}
 */
export type OriginResourceState = 'Creating' | 'Active' | 'Deleting';

/**
 * Defines values for CustomDomainResourceState.
 * Possible values include: 'Creating', 'Active', 'Deleting'
 * @readonly
 * @enum {string}
 */
export type CustomDomainResourceState = 'Creating' | 'Active' | 'Deleting';

/**
 * Defines values for CustomHttpsProvisioningState.
 * Possible values include: 'Enabling', 'Enabled', 'Disabling', 'Disabled', 'Failed'
 * @readonly
 * @enum {string}
 */
export type CustomHttpsProvisioningState = 'Enabling' | 'Enabled' | 'Disabling' | 'Disabled' | 'Failed';

/**
 * Defines values for CustomHttpsProvisioningSubstate.
 * Possible values include: 'SubmittingDomainControlValidationRequest',
 * 'PendingDomainControlValidationREquestApproval', 'DomainControlValidationRequestApproved',
 * 'DomainControlValidationRequestRejected', 'DomainControlValidationRequestTimedOut',
 * 'IssuingCertificate', 'DeployingCertificate', 'CertificateDeployed', 'DeletingCertificate',
 * 'CertificateDeleted'
 * @readonly
 * @enum {string}
 */
export type CustomHttpsProvisioningSubstate = 'SubmittingDomainControlValidationRequest' | 'PendingDomainControlValidationREquestApproval' | 'DomainControlValidationRequestApproved' | 'DomainControlValidationRequestRejected' | 'DomainControlValidationRequestTimedOut' | 'IssuingCertificate' | 'DeployingCertificate' | 'CertificateDeployed' | 'DeletingCertificate' | 'CertificateDeleted';

/**
 * Defines values for ProtocolType.
 * Possible values include: 'ServerNameIndication', 'IPBased'
 * @readonly
 * @enum {string}
 */
export type ProtocolType = 'ServerNameIndication' | 'IPBased';

/**
 * Defines values for CertificateType.
 * Possible values include: 'Shared', 'Dedicated'
 * @readonly
 * @enum {string}
 */
export type CertificateType = 'Shared' | 'Dedicated';

/**
 * Defines values for ResourceType.
 * Possible values include: 'Microsoft.Cdn/Profiles/Endpoints'
 * @readonly
 * @enum {string}
 */
export type ResourceType = 'Microsoft.Cdn/Profiles/Endpoints';

/**
 * Defines values for PolicyEnabledState.
 * Possible values include: 'Disabled', 'Enabled'
 * @readonly
 * @enum {string}
 */
export type PolicyEnabledState = 'Disabled' | 'Enabled';

/**
 * Defines values for PolicyMode.
 * Possible values include: 'Prevention', 'Detection'
 * @readonly
 * @enum {string}
 */
export type PolicyMode = 'Prevention' | 'Detection';

/**
 * Defines values for CustomRuleEnabledState.
 * Possible values include: 'Disabled', 'Enabled'
 * @readonly
 * @enum {string}
 */
export type CustomRuleEnabledState = 'Disabled' | 'Enabled';

/**
 * Defines values for MatchVariable.
 * Possible values include: 'RemoteAddr', 'Country', 'RequestMethod', 'RequestHeader',
 * 'RequestUri', 'QueryString', 'RequestBody', 'Cookies', 'PostArgs'
 * @readonly
 * @enum {string}
 */
export type MatchVariable = 'RemoteAddr' | 'Country' | 'RequestMethod' | 'RequestHeader' | 'RequestUri' | 'QueryString' | 'RequestBody' | 'Cookies' | 'PostArgs';

/**
 * Defines values for Operator.
 * Possible values include: 'Any', 'IPMatch', 'GeoMatch', 'Equal', 'Contains', 'LessThan',
 * 'GreaterThan', 'LessThanOrEqual', 'GreaterThanOrEqual', 'BeginsWith', 'EndsWith', 'RegEx'
 * @readonly
 * @enum {string}
 */
export type Operator = 'Any' | 'IPMatch' | 'GeoMatch' | 'Equal' | 'Contains' | 'LessThan' | 'GreaterThan' | 'LessThanOrEqual' | 'GreaterThanOrEqual' | 'BeginsWith' | 'EndsWith' | 'RegEx';

/**
 * Defines values for Action.
 * Possible values include: 'Allow', 'Block', 'Log', 'Redirect'
 * @readonly
 * @enum {string}
 */
export type Action = 'Allow' | 'Block' | 'Log' | 'Redirect';

/**
 * Defines values for ManagedRuleEnabledState.
 * Possible values include: 'Disabled', 'Enabled'
 * @readonly
 * @enum {string}
 */
export type ManagedRuleEnabledState = 'Disabled' | 'Enabled';

/**
 * Defines values for PolicyResourceState.
 * Possible values include: 'Creating', 'Enabling', 'Enabled', 'Disabling', 'Disabled', 'Deleting'
 * @readonly
 * @enum {string}
 */
export type PolicyResourceState = 'Creating' | 'Enabling' | 'Enabled' | 'Disabling' | 'Disabled' | 'Deleting';

/**
 * Contains response data for the list operation.
 */
export type ProfilesListResponse = ProfileListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProfileListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ProfilesListByResourceGroupResponse = ProfileListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProfileListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ProfilesGetResponse = Profile & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Profile;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ProfilesCreateResponse = Profile & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Profile;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ProfilesUpdateResponse = Profile & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Profile;
    };
};

/**
 * Contains response data for the generateSsoUri operation.
 */
export type ProfilesGenerateSsoUriResponse = SsoUri & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SsoUri;
    };
};

/**
 * Contains response data for the listSupportedOptimizationTypes operation.
 */
export type ProfilesListSupportedOptimizationTypesResponse = SupportedOptimizationTypesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SupportedOptimizationTypesListResult;
    };
};

/**
 * Contains response data for the listResourceUsage operation.
 */
export type ProfilesListResourceUsageResponse = ResourceUsageListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceUsageListResult;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type ProfilesBeginCreateResponse = Profile & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Profile;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ProfilesBeginUpdateResponse = Profile & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Profile;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ProfilesListNextResponse = ProfileListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProfileListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type ProfilesListByResourceGroupNextResponse = ProfileListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProfileListResult;
    };
};

/**
 * Contains response data for the listResourceUsageNext operation.
 */
export type ProfilesListResourceUsageNextResponse = ResourceUsageListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceUsageListResult;
    };
};

/**
 * Contains response data for the listByProfile operation.
 */
export type EndpointsListByProfileResponse = EndpointListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EndpointListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type EndpointsGetResponse = Endpoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Endpoint;
    };
};

/**
 * Contains response data for the create operation.
 */
export type EndpointsCreateResponse = Endpoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Endpoint;
    };
};

/**
 * Contains response data for the update operation.
 */
export type EndpointsUpdateResponse = Endpoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Endpoint;
    };
};

/**
 * Contains response data for the start operation.
 */
export type EndpointsStartResponse = Endpoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Endpoint;
    };
};

/**
 * Contains response data for the stop operation.
 */
export type EndpointsStopResponse = Endpoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Endpoint;
    };
};

/**
 * Contains response data for the validateCustomDomain operation.
 */
export type EndpointsValidateCustomDomainResponse = ValidateCustomDomainOutput & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ValidateCustomDomainOutput;
    };
};

/**
 * Contains response data for the listResourceUsage operation.
 */
export type EndpointsListResourceUsageResponse = ResourceUsageListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceUsageListResult;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type EndpointsBeginCreateResponse = Endpoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Endpoint;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type EndpointsBeginUpdateResponse = Endpoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Endpoint;
    };
};

/**
 * Contains response data for the beginStart operation.
 */
export type EndpointsBeginStartResponse = Endpoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Endpoint;
    };
};

/**
 * Contains response data for the beginStop operation.
 */
export type EndpointsBeginStopResponse = Endpoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Endpoint;
    };
};

/**
 * Contains response data for the listByProfileNext operation.
 */
export type EndpointsListByProfileNextResponse = EndpointListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EndpointListResult;
    };
};

/**
 * Contains response data for the listResourceUsageNext operation.
 */
export type EndpointsListResourceUsageNextResponse = ResourceUsageListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceUsageListResult;
    };
};

/**
 * Contains response data for the listByEndpoint operation.
 */
export type OriginsListByEndpointResponse = OriginListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OriginListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type OriginsGetResponse = Origin & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Origin;
    };
};

/**
 * Contains response data for the update operation.
 */
export type OriginsUpdateResponse = Origin & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Origin;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type OriginsBeginUpdateResponse = Origin & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Origin;
    };
};

/**
 * Contains response data for the listByEndpointNext operation.
 */
export type OriginsListByEndpointNextResponse = OriginListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OriginListResult;
    };
};

/**
 * Contains response data for the listByEndpoint operation.
 */
export type CustomDomainsListByEndpointResponse = CustomDomainListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CustomDomainListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type CustomDomainsGetResponse = CustomDomain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CustomDomain;
    };
};

/**
 * Contains response data for the create operation.
 */
export type CustomDomainsCreateResponse = CustomDomain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CustomDomain;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type CustomDomainsDeleteMethodResponse = CustomDomain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CustomDomain;
    };
};

/**
 * Contains response data for the disableCustomHttps operation.
 */
export type CustomDomainsDisableCustomHttpsResponse = CustomDomain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CustomDomain;
    };
};

/**
 * Contains response data for the enableCustomHttps operation.
 */
export type CustomDomainsEnableCustomHttpsResponse = CustomDomain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CustomDomain;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type CustomDomainsBeginCreateResponse = CustomDomain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CustomDomain;
    };
};

/**
 * Contains response data for the beginDeleteMethod operation.
 */
export type CustomDomainsBeginDeleteMethodResponse = CustomDomain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CustomDomain;
    };
};

/**
 * Contains response data for the listByEndpointNext operation.
 */
export type CustomDomainsListByEndpointNextResponse = CustomDomainListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CustomDomainListResult;
    };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type CheckNameAvailabilityResponse = CheckNameAvailabilityOutput & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CheckNameAvailabilityOutput;
    };
};

/**
 * Contains response data for the checkNameAvailabilityWithSubscription operation.
 */
export type CheckNameAvailabilityWithSubscriptionResponse = CheckNameAvailabilityOutput & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CheckNameAvailabilityOutput;
    };
};

/**
 * Contains response data for the validateProbe operation.
 */
export type ValidateProbeResponse = ValidateProbeOutput & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ValidateProbeOutput;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ResourceUsageListResponse = ResourceUsageListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceUsageListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ResourceUsageListNextResponse = ResourceUsageListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceUsageListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationsListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationsListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type EdgeNodesListResponse = EdgenodeResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EdgenodeResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type EdgeNodesListNextResponse = EdgenodeResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EdgenodeResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type PoliciesListResponse = CdnWebApplicationFirewallPolicyList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CdnWebApplicationFirewallPolicyList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PoliciesGetResponse = CdnWebApplicationFirewallPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CdnWebApplicationFirewallPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type PoliciesCreateOrUpdateResponse = CdnWebApplicationFirewallPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CdnWebApplicationFirewallPolicy;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type PoliciesBeginCreateOrUpdateResponse = CdnWebApplicationFirewallPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CdnWebApplicationFirewallPolicy;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type PoliciesListNextResponse = CdnWebApplicationFirewallPolicyList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CdnWebApplicationFirewallPolicyList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ManagedRuleSetsListResponse = ManagedRuleSetDefinitionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedRuleSetDefinitionList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ManagedRuleSetsListNextResponse = ManagedRuleSetDefinitionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedRuleSetDefinitionList;
    };
};
