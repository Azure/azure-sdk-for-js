/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export type DeliveryRuleConditionUnion =
  | DeliveryRuleCondition
  | DeliveryRuleRemoteAddressCondition
  | DeliveryRuleRequestMethodCondition
  | DeliveryRuleQueryStringCondition
  | DeliveryRulePostArgsCondition
  | DeliveryRuleRequestUriCondition
  | DeliveryRuleRequestHeaderCondition
  | DeliveryRuleRequestBodyCondition
  | DeliveryRuleRequestSchemeCondition
  | DeliveryRuleUrlPathCondition
  | DeliveryRuleUrlFileExtensionCondition
  | DeliveryRuleUrlFileNameCondition
  | DeliveryRuleHttpVersionCondition
  | DeliveryRuleCookiesCondition
  | DeliveryRuleIsDeviceCondition
  | DeliveryRuleSocketAddrCondition
  | DeliveryRuleClientPortCondition
  | DeliveryRuleServerPortCondition
  | DeliveryRuleHostNameCondition
  | DeliveryRuleSslProtocolCondition;
export type DeliveryRuleActionAutoGeneratedUnion =
  | DeliveryRuleActionAutoGenerated
  | UrlRedirectAction
  | UrlSigningAction
  | OriginGroupOverrideAction
  | UrlRewriteAction
  | DeliveryRuleRequestHeaderAction
  | DeliveryRuleResponseHeaderAction
  | DeliveryRuleCacheExpirationAction
  | DeliveryRuleCacheKeyQueryStringAction
  | DeliveryRuleRouteConfigurationOverrideAction;
export type SecurityPolicyPropertiesParametersUnion =
  | SecurityPolicyPropertiesParameters
  | SecurityPolicyWebApplicationFirewallParameters;
export type SecretParametersUnion =
  | SecretParameters
  | UrlSigningKeyParameters
  | ManagedCertificateParameters
  | CustomerCertificateParameters
  | AzureFirstPartyManagedCertificateParameters;
export type CustomDomainHttpsParametersUnion =
  | CustomDomainHttpsParameters
  | CdnManagedHttpsParameters
  | UserManagedHttpsParameters;

/** Input of CheckNameAvailability API. */
export interface CheckEndpointNameAvailabilityInput {
  /** The resource name to validate. */
  name: string;
  /** The type of the resource whose name is to be validated. */
  type: ResourceType;
  /** Indicates the endpoint name reuse scope. The default value is TenantReuse. */
  autoGeneratedDomainNameLabelScope?: AutoGeneratedDomainNameLabelScope;
}

/** Output of check name availability API. */
export interface CheckEndpointNameAvailabilityOutput {
  /**
   * Indicates whether the name is available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nameAvailable?: boolean;
  /**
   * Returns the available hostname generated based on the AutoGeneratedDomainNameLabelScope when the name is available, otherwise it returns empty string
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly availableHostname?: string;
  /**
   * The reason why the name is not available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reason?: string;
  /**
   * The detailed error message describing why the name is not available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface AfdErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** The list usages operation response. */
export interface UsagesListResult {
  /** The list of resource usages. */
  value?: Usage[];
  /** URL to get the next set of results. */
  nextLink?: string;
}

/** Describes resource usage. */
export interface Usage {
  /**
   * Resource identifier.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /** An enum describing the unit of measurement. */
  unit: UsageUnit;
  /** The current value of the usage. */
  currentValue: number;
  /** The limit of usage. */
  limit: number;
  /** The name of the type of usage. */
  name: UsageName;
}

/** The usage names. */
export interface UsageName {
  /** A string describing the resource name. */
  value?: string;
  /** A localized string describing the resource name. */
  localizedValue?: string;
}

/** Input of CheckHostNameAvailability API. */
export interface CheckHostNameAvailabilityInput {
  /** The host name to validate. */
  hostName: string;
}

/** Output of check name availability API. */
export interface CheckNameAvailabilityOutput {
  /**
   * Indicates whether the name is available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nameAvailable?: boolean;
  /**
   * The reason why the name is not available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reason?: string;
  /**
   * The detailed error message describing why the name is not available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
}

/** Result of the request to list domains. It contains a list of domain objects and a URL link to get the next set of results. */
export interface AFDDomainListResult {
  /**
   * List of AzureFrontDoor domains within a profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: AFDDomain[];
  /** URL to get the next set of domain objects if there are any. */
  nextLink?: string;
}

/** The JSON object that contains the properties to validate a domain. */
export interface DomainValidationProperties {
  /**
   * Challenge used for DNS TXT record or file based validation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly validationToken?: string;
  /**
   * The date time that the token expires
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expirationDate?: string;
}

/** The JSON object that contains the properties of the domain to create. */
export interface AFDDomainUpdatePropertiesParameters {
  /**
   * The name of the profile which holds the domain.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly profileName?: string;
  /** The configuration specifying how to enable HTTPS for the domain - using AzureFrontDoor managed certificate or user's own certificate. If not specified, enabling ssl uses AzureFrontDoor managed certificate by default. */
  tlsSettings?: AFDDomainHttpsParameters;
  /** Resource reference to the Azure DNS zone */
  azureDnsZone?: ResourceReference;
  /** Resource reference to the Azure resource where custom domain ownership was prevalidated */
  preValidatedCustomDomainResourceId?: ResourceReference;
}

/** The JSON object that contains the properties to secure a domain. */
export interface AFDDomainHttpsParameters {
  /** Defines the source of the SSL certificate. */
  certificateType: AfdCertificateType;
  /** TLS protocol version that will be used for Https */
  minimumTlsVersion?: AfdMinimumTlsVersion;
  /** Resource reference to the secret. ie. subs/rg/profile/secret */
  secret?: ResourceReference;
}

/** Reference to another resource. */
export interface ResourceReference {
  /** Resource ID. */
  id?: string;
}

/** The tracking states for afd resources. */
export interface AFDStateProperties {
  /**
   * Provisioning status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: AfdProvisioningState;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly deploymentStatus?: DeploymentStatus;
}

/** The core properties of ARM resources */
export interface Resource {
  /**
   * Resource ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Resource name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Resource type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Read only system data
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Read only system data */
export interface SystemData {
  /** An identifier for the identity that created the resource */
  createdBy?: string;
  /** The type of identity that created the resource */
  createdByType?: IdentityType;
  /** The timestamp of resource creation (UTC) */
  createdAt?: Date;
  /** An identifier for the identity that last modified the resource */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource */
  lastModifiedByType?: IdentityType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** The domain JSON object required for domain creation or update. */
export interface AFDDomainUpdateParameters {
  /**
   * The name of the profile which holds the domain.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly profileName?: string;
  /** The configuration specifying how to enable HTTPS for the domain - using AzureFrontDoor managed certificate or user's own certificate. If not specified, enabling ssl uses AzureFrontDoor managed certificate by default. */
  tlsSettings?: AFDDomainHttpsParameters;
  /** Resource reference to the Azure DNS zone */
  azureDnsZone?: ResourceReference;
  /** Resource reference to the Azure resource where custom domain ownership was prevalidated */
  preValidatedCustomDomainResourceId?: ResourceReference;
}

/** Result of the request to list endpoints. It contains a list of endpoint objects and a URL link to get the next set of results. */
export interface AFDEndpointListResult {
  /**
   * List of AzureFrontDoor endpoints within a profile
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: AFDEndpoint[];
  /** URL to get the next set of endpoint objects if there is any. */
  nextLink?: string;
}

/** The JSON object containing endpoint update parameters. */
export interface AFDEndpointPropertiesUpdateParameters {
  /**
   * The name of the profile which holds the endpoint.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly profileName?: string;
  /** Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled' */
  enabledState?: EnabledState;
}

/** Properties required to create or update an endpoint. */
export interface AFDEndpointUpdateParameters {
  /** Endpoint tags. */
  tags?: { [propertyName: string]: string };
  /**
   * The name of the profile which holds the endpoint.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly profileName?: string;
  /** Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled' */
  enabledState?: EnabledState;
}

/** Parameters required for content purge. */
export interface AfdPurgeParameters {
  /** The path to the content to be purged. Can describe a file path or a wild card directory. */
  contentPaths: string[];
  /** List of domains. */
  domains?: string[];
}

/** Input of the custom domain to be validated for DNS mapping. */
export interface ValidateCustomDomainInput {
  /** The host name of the custom domain. Must be a domain name. */
  hostName: string;
}

/** Output of custom domain validation. */
export interface ValidateCustomDomainOutput {
  /**
   * Indicates whether the custom domain is valid or not.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customDomainValidated?: boolean;
  /**
   * The reason why the custom domain is not valid.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reason?: string;
  /**
   * Error message describing why the custom domain is not valid.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
}

/** Result of the request to list origin groups. It contains a list of origin groups objects and a URL link to get the next set of results. */
export interface AFDOriginGroupListResult {
  /**
   * List of CDN origin groups within an endpoint
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: AFDOriginGroup[];
  /** URL to get the next set of origin objects if there are any. */
  nextLink?: string;
}

/** The JSON object that contains the properties of the origin group. */
export interface AFDOriginGroupUpdatePropertiesParameters {
  /**
   * The name of the profile which holds the origin group.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly profileName?: string;
  /** Load balancing settings for a backend pool */
  loadBalancingSettings?: LoadBalancingSettingsParameters;
  /** Health probe settings to the origin that is used to determine the health of the origin. */
  healthProbeSettings?: HealthProbeParameters;
  /** Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported. */
  trafficRestorationTimeToHealedOrNewEndpointsInMinutes?: number;
  /** Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled' */
  sessionAffinityState?: EnabledState;
}

/** Round-Robin load balancing settings for a backend pool */
export interface LoadBalancingSettingsParameters {
  /** The number of samples to consider for load balancing decisions */
  sampleSize?: number;
  /** The number of samples within the sample period that must succeed */
  successfulSamplesRequired?: number;
  /** The additional latency in milliseconds for probes to fall into the lowest latency bucket */
  additionalLatencyInMilliseconds?: number;
}

/** The JSON object that contains the properties to send health probes to origin. */
export interface HealthProbeParameters {
  /** The path relative to the origin that is used to determine the health of the origin. */
  probePath?: string;
  /** The type of health probe request that is made. */
  probeRequestType?: HealthProbeRequestType;
  /** Protocol to use for health probe. */
  probeProtocol?: ProbeProtocol;
  /** The number of seconds between health probes.Default is 240sec. */
  probeIntervalInSeconds?: number;
}

/** AFDOrigin group properties needed for origin group creation or update. */
export interface AFDOriginGroupUpdateParameters {
  /**
   * The name of the profile which holds the origin group.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly profileName?: string;
  /** Load balancing settings for a backend pool */
  loadBalancingSettings?: LoadBalancingSettingsParameters;
  /** Health probe settings to the origin that is used to determine the health of the origin. */
  healthProbeSettings?: HealthProbeParameters;
  /** Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported. */
  trafficRestorationTimeToHealedOrNewEndpointsInMinutes?: number;
  /** Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled' */
  sessionAffinityState?: EnabledState;
}

/** Result of the request to list origins. It contains a list of origin objects and a URL link to get the next set of results. */
export interface AFDOriginListResult {
  /**
   * List of CDN origins within an endpoint
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: AFDOrigin[];
  /** URL to get the next set of origin objects if there are any. */
  nextLink?: string;
}

/** The JSON object that contains the properties of the origin. */
export interface AFDOriginUpdatePropertiesParameters {
  /**
   * The name of the origin group which contains this origin.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly originGroupName?: string;
  /** Resource reference to the Azure origin resource. */
  azureOrigin?: ResourceReference;
  /** The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint. */
  hostName?: string;
  /** The value of the HTTP port. Must be between 1 and 65535. */
  httpPort?: number;
  /** The value of the HTTPS port. Must be between 1 and 65535. */
  httpsPort?: number;
  /** The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint */
  originHostHeader?: string;
  /** Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5 */
  priority?: number;
  /** Weight of the origin in given origin group for load balancing. Must be between 1 and 1000 */
  weight?: number;
  /** The properties of the private link resource for private origin. */
  sharedPrivateLinkResource?: SharedPrivateLinkResourceProperties;
  /** Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool. */
  enabledState?: EnabledState;
  /** Whether to enable certificate name check at origin level */
  enforceCertificateNameCheck?: boolean;
}

/** Describes the properties of an existing Shared Private Link Resource to use when connecting to a private origin. */
export interface SharedPrivateLinkResourceProperties {
  /** The resource id of the resource the shared private link resource is for. */
  privateLink?: ResourceReference;
  /** The location of the shared private link resource */
  privateLinkLocation?: string;
  /** The group id from the provider of resource the shared private link resource is for. */
  groupId?: string;
  /** The request message for requesting approval of the shared private link resource. */
  requestMessage?: string;
  /** Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected, or Timeout. */
  status?: SharedPrivateLinkResourceStatus;
}

/** AFDOrigin properties needed for origin update. */
export interface AFDOriginUpdateParameters {
  /**
   * The name of the origin group which contains this origin.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly originGroupName?: string;
  /** Resource reference to the Azure origin resource. */
  azureOrigin?: ResourceReference;
  /** The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint. */
  hostName?: string;
  /** The value of the HTTP port. Must be between 1 and 65535. */
  httpPort?: number;
  /** The value of the HTTPS port. Must be between 1 and 65535. */
  httpsPort?: number;
  /** The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint */
  originHostHeader?: string;
  /** Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5 */
  priority?: number;
  /** Weight of the origin in given origin group for load balancing. Must be between 1 and 1000 */
  weight?: number;
  /** The properties of the private link resource for private origin. */
  sharedPrivateLinkResource?: SharedPrivateLinkResourceProperties;
  /** Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool. */
  enabledState?: EnabledState;
  /** Whether to enable certificate name check at origin level */
  enforceCertificateNameCheck?: boolean;
}

/** Result of the request to list routes. It contains a list of route objects and a URL link to get the next set of results. */
export interface RouteListResult {
  /**
   * List of AzureFrontDoor routes within a profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Route[];
  /** URL to get the next set of route objects if there are any. */
  nextLink?: string;
}

/** The JSON object that contains the properties of the domain to create. */
export interface RouteUpdatePropertiesParameters {
  /**
   * The name of the endpoint which holds the route.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endpointName?: string;
  /** Domains referenced by this endpoint. */
  customDomains?: ActivatedResourceReference[];
  /** A reference to the origin group. */
  originGroup?: ResourceReference;
  /** A directory path on the origin that AzureFrontDoor can use to retrieve content from, e.g. contoso.cloudapp.net/originpath. */
  originPath?: string;
  /** rule sets referenced by this endpoint. */
  ruleSets?: ResourceReference[];
  /** List of supported protocols for this route. */
  supportedProtocols?: AFDEndpointProtocols[];
  /** The route patterns of the rule. */
  patternsToMatch?: string[];
  /** The caching configuration for this route. To disable caching, do not provide a cacheConfiguration object. */
  cacheConfiguration?: AfdRouteCacheConfiguration;
  /** Protocol this rule will use when forwarding traffic to backends. */
  forwardingProtocol?: ForwardingProtocol;
  /** whether this route will be linked to the default endpoint domain. */
  linkToDefaultDomain?: LinkToDefaultDomain;
  /** Whether to automatically redirect HTTP traffic to HTTPS traffic. Note that this is a easy way to set up this rule and it will be the first rule that gets executed. */
  httpsRedirect?: HttpsRedirect;
  /** Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled' */
  enabledState?: EnabledState;
}

/** Reference to another resource along with its state. */
export interface ActivatedResourceReference {
  /** Resource ID. */
  id?: string;
  /**
   * Whether the resource is active or inactive
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isActive?: boolean;
}

/** Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object. */
export interface AfdRouteCacheConfiguration {
  /** Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings. */
  queryStringCachingBehavior?: AfdQueryStringCachingBehavior;
  /** query parameters to include or exclude (comma separated). */
  queryParameters?: string;
  /** compression settings. */
  compressionSettings?: CompressionSettings;
}

/** settings for compression. */
export interface CompressionSettings {
  /** List of content types on which compression applies. The value should be a valid MIME type. */
  contentTypesToCompress?: string[];
  /** Indicates whether content compression is enabled on AzureFrontDoor. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB. */
  isCompressionEnabled?: boolean;
}

/** The domain JSON object required for domain creation or update. */
export interface RouteUpdateParameters {
  /**
   * The name of the endpoint which holds the route.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endpointName?: string;
  /** Domains referenced by this endpoint. */
  customDomains?: ActivatedResourceReference[];
  /** A reference to the origin group. */
  originGroup?: ResourceReference;
  /** A directory path on the origin that AzureFrontDoor can use to retrieve content from, e.g. contoso.cloudapp.net/originpath. */
  originPath?: string;
  /** rule sets referenced by this endpoint. */
  ruleSets?: ResourceReference[];
  /** List of supported protocols for this route. */
  supportedProtocols?: AFDEndpointProtocols[];
  /** The route patterns of the rule. */
  patternsToMatch?: string[];
  /** The caching configuration for this route. To disable caching, do not provide a cacheConfiguration object. */
  cacheConfiguration?: AfdRouteCacheConfiguration;
  /** Protocol this rule will use when forwarding traffic to backends. */
  forwardingProtocol?: ForwardingProtocol;
  /** whether this route will be linked to the default endpoint domain. */
  linkToDefaultDomain?: LinkToDefaultDomain;
  /** Whether to automatically redirect HTTP traffic to HTTPS traffic. Note that this is a easy way to set up this rule and it will be the first rule that gets executed. */
  httpsRedirect?: HttpsRedirect;
  /** Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled' */
  enabledState?: EnabledState;
}

/** Result of the request to list rule sets. It contains a list of rule set objects and a URL link to get the next set of results. */
export interface RuleSetListResult {
  /**
   * List of AzureFrontDoor rule sets within a profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: RuleSet[];
  /** URL to get the next set of rule set objects if there are any. */
  nextLink?: string;
}

/** Result of the request to list rules. It contains a list of rule objects and a URL link to get the next set of results. */
export interface RuleListResult {
  /**
   * List of AzureFrontDoor rules within a rule set.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Rule[];
  /** URL to get the next set of rule objects if there are any. */
  nextLink?: string;
}

/** The JSON object that contains the properties of the rule to update. */
export interface RuleUpdatePropertiesParameters {
  /**
   * The name of the rule set containing the rule.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ruleSetName?: string;
  /** The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied. */
  order?: number;
  /** A list of conditions that must be matched for the actions to be executed */
  conditions?: DeliveryRuleConditionUnion[];
  /** A list of actions that are executed when all the conditions of a rule are satisfied. */
  actions?: DeliveryRuleActionAutoGeneratedUnion[];
  /** If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue. */
  matchProcessingBehavior?: MatchProcessingBehavior;
}

/** A condition for the delivery rule. */
export interface DeliveryRuleCondition {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name:
    | "RemoteAddress"
    | "RequestMethod"
    | "QueryString"
    | "PostArgs"
    | "RequestUri"
    | "RequestHeader"
    | "RequestBody"
    | "RequestScheme"
    | "UrlPath"
    | "UrlFileExtension"
    | "UrlFileName"
    | "HttpVersion"
    | "Cookies"
    | "IsDevice"
    | "SocketAddr"
    | "ClientPort"
    | "ServerPort"
    | "HostName"
    | "SslProtocol";
}

/** An action for the delivery rule. */
export interface DeliveryRuleActionAutoGenerated {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name:
    | "UrlRedirect"
    | "UrlSigning"
    | "OriginGroupOverride"
    | "UrlRewrite"
    | "ModifyRequestHeader"
    | "ModifyResponseHeader"
    | "CacheExpiration"
    | "CacheKeyQueryString"
    | "RouteConfigurationOverride";
}

/** The domain JSON object required for domain creation or update. */
export interface RuleUpdateParameters {
  /**
   * The name of the rule set containing the rule.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ruleSetName?: string;
  /** The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied. */
  order?: number;
  /** A list of conditions that must be matched for the actions to be executed */
  conditions?: DeliveryRuleConditionUnion[];
  /** A list of actions that are executed when all the conditions of a rule are satisfied. */
  actions?: DeliveryRuleActionAutoGeneratedUnion[];
  /** If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue. */
  matchProcessingBehavior?: MatchProcessingBehavior;
}

/** Result of the request to list security policies. It contains a list of security policy objects and a URL link to get the next set of results. */
export interface SecurityPolicyListResult {
  /**
   * List of Security policies within a profile
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: SecurityPolicy[];
  /** URL to get the next set of security policy objects if there is any. */
  nextLink?: string;
}

/** The json object containing security policy parameters */
export interface SecurityPolicyPropertiesParameters {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "WebApplicationFirewall";
}

/** The JSON object containing security policy update parameters. */
export interface SecurityPolicyUpdateParameters {
  /** object which contains security policy parameters */
  parameters?: SecurityPolicyPropertiesParametersUnion;
}

/** Result of the request to list secrets. It contains a list of Secret objects and a URL link to get the next set of results. */
export interface SecretListResult {
  /**
   * List of AzureFrontDoor secrets within a profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Secret[];
  /** URL to get the next set of Secret objects if there are any. */
  nextLink?: string;
}

/** The json object containing secret parameters */
export interface SecretParameters {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type:
    | "UrlSigningKey"
    | "ManagedCertificate"
    | "CustomerCertificate"
    | "AzureFirstPartyManagedCertificate";
}

/** Input of the secret to be validated. */
export interface ValidateSecretInput {
  /** The secret type. */
  secretType: SecretType;
  /** Resource reference to the Azure Key Vault secret. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{secretName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​ */
  secretSource: ResourceReference;
  /** Secret version, if customer is using a specific version. */
  secretVersion?: string;
}

/** Output of the validated secret. */
export interface ValidateSecretOutput {
  /** The validation status. */
  status?: Status;
  /** Detailed error message */
  message?: string;
}

/** Metrics Response */
export interface MetricsResponse {
  dateTimeBegin?: Date;
  dateTimeEnd?: Date;
  granularity?: MetricsResponseGranularity;
  series?: MetricsResponseSeriesItem[];
}

export interface MetricsResponseSeriesItem {
  metric?: string;
  unit?: MetricsResponseSeriesItemUnit;
  groups?: MetricsResponseSeriesPropertiesItemsItem[];
  data?: Components1Gs0LlpSchemasMetricsresponsePropertiesSeriesItemsPropertiesDataItems[];
}

export interface MetricsResponseSeriesPropertiesItemsItem {
  name?: string;
  value?: string;
}

export interface Components1Gs0LlpSchemasMetricsresponsePropertiesSeriesItemsPropertiesDataItems {
  dateTime?: Date;
  value?: number;
}

/** Rankings Response */
export interface RankingsResponse {
  dateTimeBegin?: Date;
  dateTimeEnd?: Date;
  tables?: RankingsResponseTablesItem[];
}

export interface RankingsResponseTablesItem {
  ranking?: string;
  data?: RankingsResponseTablesPropertiesItemsItem[];
}

export interface RankingsResponseTablesPropertiesItemsItem {
  name?: string;
  metrics?: RankingsResponseTablesPropertiesItemsMetricsItem[];
}

export interface RankingsResponseTablesPropertiesItemsMetricsItem {
  metric?: string;
  value?: number;
  percentage?: number;
}

/** Continents Response */
export interface ContinentsResponse {
  continents?: ContinentsResponseContinentsItem[];
  countryOrRegions?: ContinentsResponseCountryOrRegionsItem[];
}

export interface ContinentsResponseContinentsItem {
  id?: string;
}

export interface ContinentsResponseCountryOrRegionsItem {
  id?: string;
  continentId?: string;
}

/** Resources Response */
export interface ResourcesResponse {
  endpoints?: ResourcesResponseEndpointsItem[];
  customDomains?: ResourcesResponseCustomDomainsItem[];
}

export interface ResourcesResponseEndpointsItem {
  id?: string;
  name?: string;
  history?: boolean;
  customDomains?: ResourcesResponseEndpointsPropertiesItemsItem[];
}

export interface ResourcesResponseEndpointsPropertiesItemsItem {
  id?: string;
  name?: string;
  endpointId?: string;
  history?: boolean;
}

export interface ResourcesResponseCustomDomainsItem {
  id?: string;
  name?: string;
  endpointId?: string;
  history?: boolean;
}

/** Waf Metrics Response */
export interface WafMetricsResponse {
  dateTimeBegin?: Date;
  dateTimeEnd?: Date;
  granularity?: WafMetricsResponseGranularity;
  series?: WafMetricsResponseSeriesItem[];
}

export interface WafMetricsResponseSeriesItem {
  metric?: string;
  unit?: "count";
  groups?: WafMetricsResponseSeriesPropertiesItemsItem[];
  data?: Components18OrqelSchemasWafmetricsresponsePropertiesSeriesItemsPropertiesDataItems[];
}

export interface WafMetricsResponseSeriesPropertiesItemsItem {
  name?: string;
  value?: string;
}

export interface Components18OrqelSchemasWafmetricsresponsePropertiesSeriesItemsPropertiesDataItems {
  dateTime?: Date;
  value?: number;
}

/** Waf Rankings Response */
export interface WafRankingsResponse {
  dateTimeBegin?: Date;
  dateTimeEnd?: Date;
  groups?: string[];
  data?: WafRankingsResponseDataItem[];
}

export interface WafRankingsResponseDataItem {
  groupValues?: string[];
  metrics?: ComponentsKpo1PjSchemasWafrankingsresponsePropertiesDataItemsPropertiesMetricsItems[];
}

export interface ComponentsKpo1PjSchemasWafrankingsresponsePropertiesDataItemsPropertiesMetricsItems {
  metric?: string;
  value?: number;
  percentage?: number;
}

/** Result of the request to list profiles. It contains a list of profile objects and a URL link to get the next set of results. */
export interface ProfileListResult {
  /**
   * List of CDN profiles within a resource group.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Profile[];
  /** URL to get the next set of profile objects if there are any. */
  nextLink?: string;
}

/**
 * Standard_Verizon = The SKU name for a Standard Verizon CDN profile.
 * Premium_Verizon = The SKU name for a Premium Verizon CDN profile.
 * Custom_Verizon = The SKU name for a Custom Verizon CDN profile.
 * Standard_Akamai = The SKU name for an Akamai CDN profile.
 * Standard_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using GB based billing model.
 * Standard_Microsoft = The SKU name for a Standard Microsoft CDN profile.
 * Standard_AzureFrontDoor =  The SKU name for an Azure Front Door Standard profile.
 * Premium_AzureFrontDoor = The SKU name for an Azure Front Door Premium profile.
 * Standard_955BandWidth_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using 95-5 peak bandwidth billing model.
 * Standard_AvgBandWidth_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using monthly average peak bandwidth billing model.
 * StandardPlus_ChinaCdn = The SKU name for a China CDN profile for live-streaming using GB based billing model.
 * StandardPlus_955BandWidth_ChinaCdn = The SKU name for a China CDN live-streaming profile using 95-5 peak bandwidth billing model.
 * StandardPlus_AvgBandWidth_ChinaCdn = The SKU name for a China CDN live-streaming profile using monthly average peak bandwidth billing model.
 *
 */
export interface Sku {
  /** Name of the pricing tier. */
  name?: SkuName;
}

/** Error response indicates Azure Front Door Standard or Azure Front Door Premium or CDN service is not able to process the incoming request. The reason is provided in the error message. */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** Properties required to update a profile. */
export interface ProfileUpdateParameters {
  /** Profile tags */
  tags?: { [propertyName: string]: string };
  /** Send and receive timeout on forwarding request to the origin. When timeout is reached, the request fails and returns. */
  originResponseTimeoutSeconds?: number;
}

/** The URI required to login to the supplemental portal from the Azure portal. */
export interface SsoUri {
  /**
   * The URI used to login to the supplemental portal.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ssoUriValue?: string;
}

/** The result of the GetSupportedOptimizationTypes API */
export interface SupportedOptimizationTypesListResult {
  /**
   * Supported optimization types for a profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly supportedOptimizationTypes?: OptimizationType[];
}

/** Output of check resource usage API. */
export interface ResourceUsageListResult {
  /**
   * List of resource usages.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: ResourceUsage[];
  /** URL to get the next set of custom domain objects if there are any. */
  nextLink?: string;
}

/** Output of check resource usage API. */
export interface ResourceUsage {
  /**
   * Resource type for which the usage is provided.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceType?: string;
  /**
   * Unit of the usage. e.g. Count.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly unit?: string;
  /**
   * Actual value of usage on the specified resource type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly currentValue?: number;
  /**
   * Quota of the specified resource type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly limit?: number;
}

/** Result of the request to list endpoints. It contains a list of endpoint objects and a URL link to get the next set of results. */
export interface EndpointListResult {
  /**
   * List of CDN endpoints within a profile
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Endpoint[];
  /** URL to get the next set of endpoint objects if there is any. */
  nextLink?: string;
}

/** The main origin of CDN content which is added when creating a CDN endpoint. */
export interface DeepCreatedOrigin {
  /** Origin name which must be unique within the endpoint. */
  name: string;
  /** The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint. */
  hostName?: string;
  /** The value of the HTTP port. Must be between 1 and 65535. */
  httpPort?: number;
  /** The value of the HTTPS port. Must be between 1 and 65535. */
  httpsPort?: number;
  /** The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. */
  originHostHeader?: string;
  /** Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5. */
  priority?: number;
  /** Weight of the origin in given origin group for load balancing. Must be between 1 and 1000 */
  weight?: number;
  /** Origin is enabled for load balancing or not. By default, origin is always enabled. */
  enabled?: boolean;
  /** The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private' */
  privateLinkAlias?: string;
  /** The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private' */
  privateLinkResourceId?: string;
  /** The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated */
  privateLinkLocation?: string;
  /** A custom message to be included in the approval request to connect to the Private Link. */
  privateLinkApprovalMessage?: string;
  /**
   * The approval status for the connection to the Private Link
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateEndpointStatus?: PrivateEndpointStatus;
}

/** The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health. */
export interface DeepCreatedOriginGroup {
  /** Origin group name which must be unique within the endpoint. */
  name: string;
  /** Health probe settings to the origin that is used to determine the health of the origin. */
  healthProbeSettings?: HealthProbeParameters;
  /** The source of the content being delivered via CDN within given origin group. */
  origins?: ResourceReference[];
  /** Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported. */
  trafficRestorationTimeToHealedOrNewEndpointsInMinutes?: number;
  /** The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported. */
  responseBasedOriginErrorDetectionSettings?: ResponseBasedOriginErrorDetectionParameters;
}

/** The JSON object that contains the properties to determine origin health using real requests/responses. */
export interface ResponseBasedOriginErrorDetectionParameters {
  /** Type of response errors for real user requests for which origin will be deemed unhealthy */
  responseBasedDetectedErrorTypes?: ResponseBasedDetectedErrorTypes;
  /** The percentage of failed requests in the sample where failover should trigger. */
  responseBasedFailoverThresholdPercentage?: number;
  /** The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy. */
  httpErrorRanges?: HttpErrorRangeParameters[];
}

/** The JSON object that represents the range for http status codes */
export interface HttpErrorRangeParameters {
  /** The inclusive start of the http status code range. */
  begin?: number;
  /** The inclusive end of the http status code range. */
  end?: number;
}

/** The JSON object that contains the properties to secure a custom domain. */
export interface CustomDomainHttpsParameters {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  certificateSource: "Cdn" | "AzureKeyVault";
  /** Defines the TLS extension protocol that is used for secure delivery. */
  protocolType: ProtocolType;
  /** TLS protocol version that will be used for Https */
  minimumTlsVersion?: MinimumTlsVersion;
}

/** The JSON object containing endpoint update parameters. */
export interface EndpointPropertiesUpdateParameters {
  /** A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath. */
  originPath?: string;
  /** List of content types on which compression applies. The value should be a valid MIME type. */
  contentTypesToCompress?: string[];
  /** The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. */
  originHostHeader?: string;
  /** Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB. */
  isCompressionEnabled?: boolean;
  /** Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed. */
  isHttpAllowed?: boolean;
  /** Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed. */
  isHttpsAllowed?: boolean;
  /** Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL. */
  queryStringCachingBehavior?: QueryStringCachingBehavior;
  /** Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this information, CDN can apply scenario driven optimization. */
  optimizationType?: OptimizationType;
  /** Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin. */
  probePath?: string;
  /** List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/ */
  geoFilters?: GeoFilter[];
  /** A reference to the origin group. */
  defaultOriginGroup?: ResourceReference;
  /** List of keys used to validate the signed URL hashes. */
  urlSigningKeys?: UrlSigningKey[];
  /** A policy that specifies the delivery rules to be used for an endpoint. */
  deliveryPolicy?: EndpointPropertiesUpdateParametersDeliveryPolicy;
  /** Defines the Web Application Firewall policy for the endpoint (if applicable) */
  webApplicationFirewallPolicyLink?: EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink;
}

/** Rules defining user's geo access within a CDN endpoint. */
export interface GeoFilter {
  /** Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.) */
  relativePath: string;
  /** Action of the geo filter, i.e. allow or block access. */
  action: GeoFilterActions;
  /** Two letter country or region codes defining user country or region access in a geo filter, e.g. AU, MX, US. */
  countryCodes: string[];
}

/** Url signing key */
export interface UrlSigningKey {
  /** Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash. */
  keyId: string;
  /** Defines the parameters for using customer key vault for Url Signing Key. */
  keySourceParameters: KeyVaultSigningKeyParameters;
}

/** Describes the parameters for using a user's KeyVault for URL Signing Key. */
export interface KeyVaultSigningKeyParameters {
  typeName: "KeyVaultSigningKeyParameters";
  /** Subscription Id of the user's Key Vault containing the secret */
  subscriptionId: string;
  /** Resource group of the user's Key Vault containing the secret */
  resourceGroupName: string;
  /** The name of the user's Key Vault containing the secret */
  vaultName: string;
  /** The name of secret in Key Vault. */
  secretName: string;
  /** The version(GUID) of secret in Key Vault. */
  secretVersion: string;
}

/** A policy that specifies the delivery rules to be used for an endpoint. */
export interface EndpointPropertiesUpdateParametersDeliveryPolicy {
  /** User-friendly description of the policy. */
  description?: string;
  /** A list of the delivery rules. */
  rules: DeliveryRule[];
}

/** A rule that specifies a set of actions and conditions */
export interface DeliveryRule {
  /** Name of the rule */
  name?: string;
  /** The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied. */
  order: number;
  /** A list of conditions that must be matched for the actions to be executed */
  conditions?: DeliveryRuleConditionUnion[];
  /** A list of actions that are executed when all the conditions of a rule are satisfied. */
  actions: DeliveryRuleActionAutoGeneratedUnion[];
}

/** Defines the Web Application Firewall policy for the endpoint (if applicable) */
export interface EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink {
  /** Resource ID. */
  id?: string;
}

/** Properties required to create or update an endpoint. */
export interface EndpointUpdateParameters {
  /** Endpoint tags. */
  tags?: { [propertyName: string]: string };
  /** A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath. */
  originPath?: string;
  /** List of content types on which compression applies. The value should be a valid MIME type. */
  contentTypesToCompress?: string[];
  /** The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. */
  originHostHeader?: string;
  /** Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB. */
  isCompressionEnabled?: boolean;
  /** Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed. */
  isHttpAllowed?: boolean;
  /** Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed. */
  isHttpsAllowed?: boolean;
  /** Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL. */
  queryStringCachingBehavior?: QueryStringCachingBehavior;
  /** Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this information, CDN can apply scenario driven optimization. */
  optimizationType?: OptimizationType;
  /** Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin. */
  probePath?: string;
  /** List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/ */
  geoFilters?: GeoFilter[];
  /** A reference to the origin group. */
  defaultOriginGroup?: ResourceReference;
  /** List of keys used to validate the signed URL hashes. */
  urlSigningKeys?: UrlSigningKey[];
  /** A policy that specifies the delivery rules to be used for an endpoint. */
  deliveryPolicy?: EndpointPropertiesUpdateParametersDeliveryPolicy;
  /** Defines the Web Application Firewall policy for the endpoint (if applicable) */
  webApplicationFirewallPolicyLink?: EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink;
}

/** Parameters required for content purge. */
export interface PurgeParameters {
  /** The path to the content to be purged. Can describe a file path or a wild card directory. */
  contentPaths: string[];
}

/** Parameters required for content load. */
export interface LoadParameters {
  /** The path to the content to be loaded. Path should be a relative file URL of the origin. */
  contentPaths: string[];
}

/** Result of the request to list origins. It contains a list of origin objects and a URL link to get the next set of results. */
export interface OriginListResult {
  /**
   * List of CDN origins within an endpoint
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Origin[];
  /** URL to get the next set of origin objects if there are any. */
  nextLink?: string;
}

/** The JSON object that contains the properties of the origin. */
export interface OriginUpdatePropertiesParameters {
  /** The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint. */
  hostName?: string;
  /** The value of the HTTP port. Must be between 1 and 65535. */
  httpPort?: number;
  /** The value of the HTTPS port. Must be between 1 and 65535. */
  httpsPort?: number;
  /** The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint */
  originHostHeader?: string;
  /** Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5 */
  priority?: number;
  /** Weight of the origin in given origin group for load balancing. Must be between 1 and 1000 */
  weight?: number;
  /** Origin is enabled for load balancing or not */
  enabled?: boolean;
  /** The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private' */
  privateLinkAlias?: string;
  /** The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private' */
  privateLinkResourceId?: string;
  /** The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated */
  privateLinkLocation?: string;
  /** A custom message to be included in the approval request to connect to the Private Link. */
  privateLinkApprovalMessage?: string;
}

/** Origin properties needed for origin update. */
export interface OriginUpdateParameters {
  /** The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint. */
  hostName?: string;
  /** The value of the HTTP port. Must be between 1 and 65535. */
  httpPort?: number;
  /** The value of the HTTPS port. Must be between 1 and 65535. */
  httpsPort?: number;
  /** The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint */
  originHostHeader?: string;
  /** Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5 */
  priority?: number;
  /** Weight of the origin in given origin group for load balancing. Must be between 1 and 1000 */
  weight?: number;
  /** Origin is enabled for load balancing or not */
  enabled?: boolean;
  /** The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private' */
  privateLinkAlias?: string;
  /** The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private' */
  privateLinkResourceId?: string;
  /** The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated */
  privateLinkLocation?: string;
  /** A custom message to be included in the approval request to connect to the Private Link. */
  privateLinkApprovalMessage?: string;
}

/** Result of the request to list origin groups. It contains a list of origin groups objects and a URL link to get the next set of results. */
export interface OriginGroupListResult {
  /**
   * List of CDN origin groups within an endpoint
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: OriginGroup[];
  /** URL to get the next set of origin objects if there are any. */
  nextLink?: string;
}

/** The JSON object that contains the properties of the origin group. */
export interface OriginGroupUpdatePropertiesParameters {
  /** Health probe settings to the origin that is used to determine the health of the origin. */
  healthProbeSettings?: HealthProbeParameters;
  /** The source of the content being delivered via CDN within given origin group. */
  origins?: ResourceReference[];
  /** Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported. */
  trafficRestorationTimeToHealedOrNewEndpointsInMinutes?: number;
  /** The JSON object that contains the properties to determine origin health using real requests/responses. This property is currently not supported. */
  responseBasedOriginErrorDetectionSettings?: ResponseBasedOriginErrorDetectionParameters;
}

/** Origin group properties needed for origin group creation or update. */
export interface OriginGroupUpdateParameters {
  /** Health probe settings to the origin that is used to determine the health of the origin. */
  healthProbeSettings?: HealthProbeParameters;
  /** The source of the content being delivered via CDN within given origin group. */
  origins?: ResourceReference[];
  /** Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported. */
  trafficRestorationTimeToHealedOrNewEndpointsInMinutes?: number;
  /** The JSON object that contains the properties to determine origin health using real requests/responses. This property is currently not supported. */
  responseBasedOriginErrorDetectionSettings?: ResponseBasedOriginErrorDetectionParameters;
}

/** Result of the request to list custom domains. It contains a list of custom domain objects and a URL link to get the next set of results. */
export interface CustomDomainListResult {
  /**
   * List of CDN CustomDomains within an endpoint.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: CustomDomain[];
  /** URL to get the next set of custom domain objects if there are any. */
  nextLink?: string;
}

/** The customDomain JSON object required for custom domain creation or update. */
export interface CustomDomainParameters {
  /** The host name of the custom domain. Must be a domain name. */
  hostName?: string;
}

/** Input of CheckNameAvailability API. */
export interface CheckNameAvailabilityInput {
  /** The resource name to validate. */
  name: string;
  /** The type of the resource whose name is to be validated. */
  type: ResourceType;
}

/** Input of the validate probe API. */
export interface ValidateProbeInput {
  /** The probe URL to validate. */
  probeURL: string;
}

/** Output of the validate probe API. */
export interface ValidateProbeOutput {
  /**
   * Indicates whether the probe URL is accepted or not.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isValid?: boolean;
  /**
   * Specifies the error code when the probe url is not accepted.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorCode?: string;
  /**
   * The detailed error message describing why the probe URL is not accepted.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
}

/** Result of the request to list CDN operations. It contains a list of operations and a URL link to get the next set of results. */
export interface OperationsListResult {
  /** List of CDN operations supported by the CDN resource provider. */
  value?: Operation[];
  /** URL to get the next set of operation list results if there are any. */
  nextLink?: string;
}

/** CDN REST API operation */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /** Indicates whether the operation is a data action */
  isDataAction?: boolean;
  /** The object that represents the operation. */
  display?: OperationDisplay;
  /**
   * The origin of operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: string;
  /** One property of operation, include metric specifications. */
  serviceSpecification?: ServiceSpecification;
}

/** The object that represents the operation. */
export interface OperationDisplay {
  /**
   * Service provider: Microsoft.Cdn
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * Resource on which the operation is performed: Profile, endpoint, etc.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * Operation type: Read, write, delete, etc.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * Description of operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** One property of operation, include log specifications. */
export interface ServiceSpecification {
  /** Log specifications of operation. */
  logSpecifications?: LogSpecification[];
  /** Metric specifications of operation. */
  metricSpecifications?: MetricSpecification[];
}

/** Log specification of operation. */
export interface LogSpecification {
  /** Name of log specification. */
  name?: string;
  /** Display name of log specification. */
  displayName?: string;
  /** Blob duration of specification. */
  blobDuration?: string;
  /** Pattern to filter based on name */
  logFilterPattern?: string;
}

/** Metric specification of operation. */
export interface MetricSpecification {
  /** Name of metric specification. */
  name?: string;
  /** Display name of metric specification. */
  displayName?: string;
  /** Display description of metric specification. */
  displayDescription?: string;
  /** The metric unit. Possible values include: 'Bytes', 'Count', 'Milliseconds'. */
  unit?: string;
  /** The metric aggregation type. Possible values include: 'Average', 'Count', 'Total'. */
  aggregationType?: string;
  /** Retention policies of a resource metric. */
  availabilities?: MetricAvailability[];
  /** The supported time grain types for the metrics. */
  supportedTimeGrainTypes?: string[];
  /** The dimensions of metric */
  dimensions?: DimensionProperties[];
  /** Property to specify whether to fill gap with zero. */
  fillGapWithZero?: boolean;
  /** Pattern to filter based on name */
  metricFilterPattern?: string;
  /** Property to specify metric is internal or not. */
  isInternal?: boolean;
}

/** Retention policy of a resource metric. */
export interface MetricAvailability {
  timeGrain?: string;
  blobDuration?: string;
}

/** Type of operation: get, read, delete, etc. */
export interface DimensionProperties {
  /** Name of dimension. */
  name?: string;
  /** Display name of dimension. */
  displayName?: string;
  /** Internal name of dimension. */
  internalName?: string;
}

/** Result of the request to list CDN edgenodes. It contains a list of ip address group and a URL link to get the next set of results. */
export interface EdgenodeResult {
  /**
   * Edge node of CDN service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: EdgeNode[];
  /** URL to get the next set of edgenode list results if there are any. */
  nextLink?: string;
}

/** CDN Ip address group */
export interface IpAddressGroup {
  /** The delivery region of the ip address group */
  deliveryRegion?: string;
  /** The list of ip v4 addresses. */
  ipv4Addresses?: CidrIpAddress[];
  /** The list of ip v6 addresses. */
  ipv6Addresses?: CidrIpAddress[];
}

/** CIDR Ip address */
export interface CidrIpAddress {
  /** Ip address itself. */
  baseIpAddress?: string;
  /** The length of the prefix of the ip address. */
  prefixLength?: number;
}

/** Defines a list of WebApplicationFirewallPolicies for Azure CDN. It contains a list of WebApplicationFirewallPolicy objects and a URL link to get the next set of results. */
export interface CdnWebApplicationFirewallPolicyList {
  /**
   * List of Azure CDN WebApplicationFirewallPolicies within a resource group.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: CdnWebApplicationFirewallPolicy[];
  /** URL to get the next set of WebApplicationFirewallPolicy objects if there are any. */
  nextLink?: string;
}

/** Defines contents of a web application firewall global configuration */
export interface PolicySettings {
  /** describes if the policy is in enabled state or disabled state */
  enabledState?: PolicyEnabledState;
  /** Describes if it is in detection mode or prevention mode at policy level. */
  mode?: PolicyMode;
  /** If action type is redirect, this field represents the default redirect URL for the client. */
  defaultRedirectUrl?: string;
  /** If the action type is block, this field defines the default customer overridable http response status code. */
  defaultCustomBlockResponseStatusCode?: PolicySettingsDefaultCustomBlockResponseStatusCode;
  /** If the action type is block, customer can override the response body. The body must be specified in base64 encoding. */
  defaultCustomBlockResponseBody?: string;
}

/** Defines contents of rate limit rules */
export interface RateLimitRuleList {
  /** List of rules */
  rules?: RateLimitRule[];
}

/** Defines the common attributes for a custom rule that can be included in a waf policy */
export interface CustomRule {
  /** Defines the name of the custom rule */
  name: string;
  /** Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified. */
  enabledState?: CustomRuleEnabledState;
  /** Defines in what order this rule be evaluated in the overall list of custom rules */
  priority: number;
  /** List of match conditions. */
  matchConditions: MatchCondition[];
  /** Describes what action to be applied when rule matches */
  action: ActionType;
}

/** Define match conditions */
export interface MatchCondition {
  /** Match variable to compare against. */
  matchVariable: WafMatchVariable;
  /** Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs. */
  selector?: string;
  /** Describes operator to be matched */
  operator: Operator;
  /** Describes if the result of this condition should be negated. */
  negateCondition?: boolean;
  /** List of possible match values. */
  matchValue: string[];
  /** List of transforms. */
  transforms?: TransformType[];
}

/** Defines contents of custom rules */
export interface CustomRuleList {
  /** List of rules */
  rules?: CustomRule[];
}

/** Defines the list of managed rule sets for the policy. */
export interface ManagedRuleSetList {
  /** List of rule sets. */
  managedRuleSets?: ManagedRuleSet[];
}

/** Defines a managed rule set. */
export interface ManagedRuleSet {
  /** Defines the rule set type to use. */
  ruleSetType: string;
  /** Defines the version of the rule set to use. */
  ruleSetVersion: string;
  /** Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests. */
  anomalyScore?: number;
  /** Defines the rule overrides to apply to the rule set. */
  ruleGroupOverrides?: ManagedRuleGroupOverride[];
}

/** Defines a managed rule group override setting. */
export interface ManagedRuleGroupOverride {
  /** Describes the managed rule group within the rule set to override */
  ruleGroupName: string;
  /** List of rules that will be disabled. If none specified, all rules in the group will be disabled. */
  rules?: ManagedRuleOverride[];
}

/** Defines a managed rule group override setting. */
export interface ManagedRuleOverride {
  /** Identifier for the managed rule. */
  ruleId: string;
  /** Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified. */
  enabledState?: ManagedRuleEnabledState;
  /** Describes the override action to be applied when rule matches. */
  action?: ActionType;
}

/** Defines the ARM Resource ID for the linked endpoints */
export interface CdnEndpoint {
  /** ARM Resource ID string. */
  id?: string;
}

/** Properties required to update a CdnWebApplicationFirewallPolicy. */
export interface CdnWebApplicationFirewallPolicyPatchParameters {
  /** CdnWebApplicationFirewallPolicy tags */
  tags?: { [propertyName: string]: string };
}

/** List of managed rule set definitions available for use in a policy. */
export interface ManagedRuleSetDefinitionList {
  /**
   * List of managed rule set definitions.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: ManagedRuleSetDefinition[];
  /** URL to retrieve next set of managed rule set definitions. */
  nextLink?: string;
}

/** Describes a managed rule group. */
export interface ManagedRuleGroupDefinition {
  /**
   * Name of the managed rule group.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ruleGroupName?: string;
  /**
   * Description of the managed rule group.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
  /**
   * List of rules within the managed rule group.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly rules?: ManagedRuleDefinition[];
}

/** Describes a managed rule definition. */
export interface ManagedRuleDefinition {
  /**
   * Identifier for the managed rule.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ruleId?: string;
  /**
   * Describes the functionality of the managed rule.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Certificate used for https */
export interface Certificate {
  /** The type of the secret resource. */
  type?: SecretType;
  /**
   * Subject name in the certificate.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subject?: string;
  /**
   * Certificate expiration date.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expirationDate?: string;
}

/** settings for security policy patterns to match */
export interface SecurityPolicyWebApplicationFirewallAssociation {
  /** List of domains. */
  domains?: ActivatedResourceReference[];
  /** List of paths */
  patternsToMatch?: string[];
}

/** The validation token. */
export interface ValidationToken {
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly token?: string;
}

/** Defines the parameters for RemoteAddress match conditions */
export interface RemoteAddressMatchConditionParameters {
  typeName: "DeliveryRuleRemoteAddressConditionParameters";
  /** Describes operator to be matched */
  operator: RemoteAddressOperator;
  /** Describes if this is negate condition or not */
  negateCondition?: boolean;
  /** Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match. */
  matchValues?: string[];
  /** List of transforms */
  transforms?: Transform[];
}

/** Defines the parameters for RequestMethod match conditions */
export interface RequestMethodMatchConditionParameters {
  typeName: "DeliveryRuleRequestMethodConditionParameters";
  /** Describes operator to be matched */
  operator: RequestMethodOperator;
  /** Describes if this is negate condition or not */
  negateCondition?: boolean;
  /** List of transforms */
  transforms?: Transform[];
  /** The match value for the condition of the delivery rule */
  matchValues?: RequestMethodMatchConditionParametersMatchValuesItem[];
}

/** Defines the parameters for QueryString match conditions */
export interface QueryStringMatchConditionParameters {
  typeName: "DeliveryRuleQueryStringConditionParameters";
  /** Describes operator to be matched */
  operator: QueryStringOperator;
  /** Describes if this is negate condition or not */
  negateCondition?: boolean;
  /** The match value for the condition of the delivery rule */
  matchValues?: string[];
  /** List of transforms */
  transforms?: Transform[];
}

/** Defines the parameters for PostArgs match conditions */
export interface PostArgsMatchConditionParameters {
  typeName: "DeliveryRulePostArgsConditionParameters";
  /** Name of PostArg to be matched */
  selector?: string;
  /** Describes operator to be matched */
  operator: PostArgsOperator;
  /** Describes if this is negate condition or not */
  negateCondition?: boolean;
  /** The match value for the condition of the delivery rule */
  matchValues?: string[];
  /** List of transforms */
  transforms?: Transform[];
}

/** Defines the parameters for RequestUri match conditions */
export interface RequestUriMatchConditionParameters {
  typeName: "DeliveryRuleRequestUriConditionParameters";
  /** Describes operator to be matched */
  operator: RequestUriOperator;
  /** Describes if this is negate condition or not */
  negateCondition?: boolean;
  /** The match value for the condition of the delivery rule */
  matchValues?: string[];
  /** List of transforms */
  transforms?: Transform[];
}

/** Defines the parameters for RequestHeader match conditions */
export interface RequestHeaderMatchConditionParameters {
  typeName: "DeliveryRuleRequestHeaderConditionParameters";
  /** Name of Header to be matched */
  selector?: string;
  /** Describes operator to be matched */
  operator: RequestHeaderOperator;
  /** Describes if this is negate condition or not */
  negateCondition?: boolean;
  /** The match value for the condition of the delivery rule */
  matchValues?: string[];
  /** List of transforms */
  transforms?: Transform[];
}

/** Defines the parameters for RequestBody match conditions */
export interface RequestBodyMatchConditionParameters {
  typeName: "DeliveryRuleRequestBodyConditionParameters";
  /** Describes operator to be matched */
  operator: RequestBodyOperator;
  /** Describes if this is negate condition or not */
  negateCondition?: boolean;
  /** The match value for the condition of the delivery rule */
  matchValues?: string[];
  /** List of transforms */
  transforms?: Transform[];
}

/** Defines the parameters for RequestScheme match conditions */
export interface RequestSchemeMatchConditionParameters {
  typeName: "DeliveryRuleRequestSchemeConditionParameters";
  /** Describes operator to be matched */
  operator: "Equal";
  /** Describes if this is negate condition or not */
  negateCondition?: boolean;
  /** List of transforms */
  transforms?: Transform[];
  /** The match value for the condition of the delivery rule */
  matchValues?: RequestSchemeMatchConditionParametersMatchValuesItem[];
}

/** Defines the parameters for UrlPath match conditions */
export interface UrlPathMatchConditionParameters {
  typeName: "DeliveryRuleUrlPathMatchConditionParameters";
  /** Describes operator to be matched */
  operator: UrlPathOperator;
  /** Describes if this is negate condition or not */
  negateCondition?: boolean;
  /** The match value for the condition of the delivery rule */
  matchValues?: string[];
  /** List of transforms */
  transforms?: Transform[];
}

/** Defines the parameters for UrlFileExtension match conditions */
export interface UrlFileExtensionMatchConditionParameters {
  typeName: "DeliveryRuleUrlFileExtensionMatchConditionParameters";
  /** Describes operator to be matched */
  operator: UrlFileExtensionOperator;
  /** Describes if this is negate condition or not */
  negateCondition?: boolean;
  /** The match value for the condition of the delivery rule */
  matchValues?: string[];
  /** List of transforms */
  transforms?: Transform[];
}

/** Defines the parameters for UrlFilename match conditions */
export interface UrlFileNameMatchConditionParameters {
  typeName: "DeliveryRuleUrlFilenameConditionParameters";
  /** Describes operator to be matched */
  operator: UrlFileNameOperator;
  /** Describes if this is negate condition or not */
  negateCondition?: boolean;
  /** The match value for the condition of the delivery rule */
  matchValues?: string[];
  /** List of transforms */
  transforms?: Transform[];
}

/** Defines the parameters for HttpVersion match conditions */
export interface HttpVersionMatchConditionParameters {
  typeName: "DeliveryRuleHttpVersionConditionParameters";
  /** Describes operator to be matched */
  operator: HttpVersionOperator;
  /** Describes if this is negate condition or not */
  negateCondition?: boolean;
  /** The match value for the condition of the delivery rule */
  matchValues?: string[];
  /** List of transforms */
  transforms?: Transform[];
}

/** Defines the parameters for Cookies match conditions */
export interface CookiesMatchConditionParameters {
  typeName: "DeliveryRuleCookiesConditionParameters";
  /** Name of Cookies to be matched */
  selector?: string;
  /** Describes operator to be matched */
  operator: CookiesOperator;
  /** Describes if this is negate condition or not */
  negateCondition?: boolean;
  /** The match value for the condition of the delivery rule */
  matchValues?: string[];
  /** List of transforms */
  transforms?: Transform[];
}

/** Defines the parameters for IsDevice match conditions */
export interface IsDeviceMatchConditionParameters {
  typeName: "DeliveryRuleIsDeviceConditionParameters";
  /** Describes operator to be matched */
  operator: IsDeviceOperator;
  /** Describes if this is negate condition or not */
  negateCondition?: boolean;
  /** The match value for the condition of the delivery rule */
  matchValues?: IsDeviceMatchConditionParametersMatchValuesItem[];
  /** List of transforms */
  transforms?: Transform[];
}

/** Defines the parameters for SocketAddress match conditions */
export interface SocketAddrMatchConditionParameters {
  typeName: "DeliveryRuleSocketAddrConditionParameters";
  /** Describes operator to be matched */
  operator: SocketAddrOperator;
  /** Describes if this is negate condition or not */
  negateCondition?: boolean;
  /** The match value for the condition of the delivery rule */
  matchValues?: string[];
  /** List of transforms */
  transforms?: Transform[];
}

/** Defines the parameters for ClientPort match conditions */
export interface ClientPortMatchConditionParameters {
  typeName: "DeliveryRuleClientPortConditionParameters";
  /** Describes operator to be matched */
  operator: ClientPortOperator;
  /** Describes if this is negate condition or not */
  negateCondition?: boolean;
  /** The match value for the condition of the delivery rule */
  matchValues?: string[];
  /** List of transforms */
  transforms?: Transform[];
}

/** Defines the parameters for ServerPort match conditions */
export interface ServerPortMatchConditionParameters {
  typeName: "DeliveryRuleServerPortConditionParameters";
  /** Describes operator to be matched */
  operator: ServerPortOperator;
  /** Describes if this is negate condition or not */
  negateCondition?: boolean;
  /** The match value for the condition of the delivery rule */
  matchValues?: string[];
  /** List of transforms */
  transforms?: Transform[];
}

/** Defines the parameters for HostName match conditions */
export interface HostNameMatchConditionParameters {
  typeName: "DeliveryRuleHostNameConditionParameters";
  /** Describes operator to be matched */
  operator: HostNameOperator;
  /** Describes if this is negate condition or not */
  negateCondition?: boolean;
  /** The match value for the condition of the delivery rule */
  matchValues?: string[];
  /** List of transforms */
  transforms?: Transform[];
}

/** Defines the parameters for SslProtocol match conditions */
export interface SslProtocolMatchConditionParameters {
  typeName: "DeliveryRuleSslProtocolConditionParameters";
  /** Describes operator to be matched */
  operator: SslProtocolOperator;
  /** Describes if this is negate condition or not */
  negateCondition?: boolean;
  /** The match value for the condition of the delivery rule */
  matchValues?: SslProtocol[];
  /** List of transforms */
  transforms?: Transform[];
}

/** Defines the parameters for the url redirect action. */
export interface UrlRedirectActionParameters {
  typeName: "DeliveryRuleUrlRedirectActionParameters";
  /** The redirect type the rule will use when redirecting traffic. */
  redirectType: RedirectType;
  /** Protocol to use for the redirect. The default value is MatchRequest */
  destinationProtocol?: DestinationProtocol;
  /** The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path. */
  customPath?: string;
  /** Host to redirect. Leave empty to use the incoming host as the destination host. */
  customHostname?: string;
  /** The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them. */
  customQueryString?: string;
  /** Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #. */
  customFragment?: string;
}

/** Defines the parameters for the Url Signing action. */
export interface UrlSigningActionParameters {
  typeName: "DeliveryRuleUrlSigningActionParameters";
  /** Algorithm to use for URL signing */
  algorithm?: Algorithm;
  /** Defines which query string parameters in the url to be considered for expires, key id etc. */
  parameterNameOverride?: UrlSigningParamIdentifier[];
}

/** Defines how to identify a parameter for a specific purpose e.g. expires */
export interface UrlSigningParamIdentifier {
  /** Indicates the purpose of the parameter */
  paramIndicator: ParamIndicator;
  /** Parameter name */
  paramName: string;
}

/** Defines the parameters for the origin group override action. */
export interface OriginGroupOverrideActionParameters {
  typeName: "DeliveryRuleOriginGroupOverrideActionParameters";
  /** defines the OriginGroup that would override the DefaultOriginGroup. */
  originGroup: ResourceReference;
}

/** Defines the parameters for the url rewrite action. */
export interface UrlRewriteActionParameters {
  typeName: "DeliveryRuleUrlRewriteActionParameters";
  /** define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched. */
  sourcePattern: string;
  /** Define the relative URL to which the above requests will be rewritten by. */
  destination: string;
  /** Whether to preserve unmatched path. Default value is true. */
  preserveUnmatchedPath?: boolean;
}

/** Defines the parameters for the request header action. */
export interface HeaderActionParameters {
  typeName: "DeliveryRuleHeaderActionParameters";
  /** Action to perform */
  headerAction: HeaderAction;
  /** Name of the header to modify */
  headerName: string;
  /** Value for the specified action */
  value?: string;
}

/** Defines the parameters for the cache expiration action. */
export interface CacheExpirationActionParameters {
  typeName: "DeliveryRuleCacheExpirationActionParameters";
  /** Caching behavior for the requests */
  cacheBehavior: CacheBehavior;
  /** The level at which the content needs to be cached. */
  cacheType: CacheType;
  /** The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss */
  cacheDuration?: string;
}

/** Defines the parameters for the cache-key query string action. */
export interface CacheKeyQueryStringActionParameters {
  typeName: "DeliveryRuleCacheKeyQueryStringBehaviorActionParameters";
  /** Caching behavior for the requests */
  queryStringBehavior: QueryStringBehavior;
  /** query parameters to include or exclude (comma separated). */
  queryParameters?: string;
}

/** Defines the parameters for the route configuration override action. */
export interface RouteConfigurationOverrideActionParameters {
  typeName: "DeliveryRuleRouteConfigurationOverrideActionParameters";
  /** A reference to the origin group override configuration. Leave empty to use the default origin group on route. */
  originGroupOverride?: OriginGroupOverride;
  /** The caching configuration associated with this rule. To disable caching, do not provide a cacheConfiguration object. */
  cacheConfiguration?: CacheConfiguration;
}

/** Defines the parameters for the origin group override configuration. */
export interface OriginGroupOverride {
  /** defines the OriginGroup that would override the DefaultOriginGroup on route. */
  originGroup?: ResourceReference;
  /** Protocol this rule will use when forwarding traffic to backends. */
  forwardingProtocol?: ForwardingProtocol;
}

/** Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object. */
export interface CacheConfiguration {
  /** Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings. */
  queryStringCachingBehavior?: RuleQueryStringCachingBehavior;
  /** query parameters to include or exclude (comma separated). */
  queryParameters?: string;
  /** Indicates whether content compression is enabled. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB. */
  isCompressionEnabled?: RuleIsCompressionEnabled;
  /** Caching behavior for the requests */
  cacheBehavior?: RuleCacheBehavior;
  /** The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss */
  cacheDuration?: string;
}

/** Defines the parameters for using CDN managed certificate for securing custom domain. */
export interface CdnCertificateSourceParameters {
  typeName: "CdnCertificateSourceParameters";
  /** Type of certificate used */
  certificateType: CertificateType;
}

/** Describes the parameters for using a user's KeyVault certificate for securing custom domain. */
export interface KeyVaultCertificateSourceParameters {
  typeName: "KeyVaultCertificateSourceParameters";
  /** Subscription Id of the user's Key Vault containing the SSL certificate */
  subscriptionId: string;
  /** Resource group of the user's Key Vault containing the SSL certificate */
  resourceGroupName: string;
  /** The name of the user's Key Vault containing the SSL certificate */
  vaultName: string;
  /** The name of Key Vault Secret (representing the full certificate PFX) in Key Vault. */
  secretName: string;
  /** The version(GUID) of Key Vault Secret in Key Vault. */
  secretVersion?: string;
  /** Describes the action that shall be taken when the certificate is updated in Key Vault. */
  updateRule: UpdateRule;
  /** Describes the action that shall be taken when the certificate is removed from Key Vault. */
  deleteRule: DeleteRule;
}

/** The JSON object that contains the properties of the domain to create. */
export type AFDDomainProperties = AFDDomainUpdatePropertiesParameters &
  AFDStateProperties & {
    /**
     * Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step. DCV stands for DomainControlValidation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly domainValidationState?: DomainValidationState;
    /** The host name of the domain. Must be a domain name. */
    hostName: string;
    /**
     * Values the customer needs to validate domain ownership
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly validationProperties?: DomainValidationProperties;
  };

/** The JSON object that contains the properties required to create an endpoint. */
export type AFDEndpointProperties = AFDEndpointPropertiesUpdateParameters &
  AFDStateProperties & {
    /**
     * The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly hostName?: string;
    /** Indicates the endpoint name reuse scope. The default value is TenantReuse. */
    autoGeneratedDomainNameLabelScope?: AutoGeneratedDomainNameLabelScope;
  };

/** The JSON object that contains the properties of the origin group. */
export type AFDOriginGroupProperties = AFDOriginGroupUpdatePropertiesParameters &
  AFDStateProperties & {};

/** The JSON object that contains the properties of the origin. */
export type AFDOriginProperties = AFDOriginUpdatePropertiesParameters &
  AFDStateProperties & {};

/** The JSON object that contains the properties of the Routes to create. */
export type RouteProperties = RouteUpdatePropertiesParameters &
  AFDStateProperties & {};

/** The JSON object that contains the properties of the Rule Set to create. */
export type RuleSetProperties = AFDStateProperties & {
  /**
   * The name of the profile which holds the rule set.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly profileName?: string;
};

/** The JSON object that contains the properties of the Rules to create. */
export type RuleProperties = RuleUpdatePropertiesParameters &
  AFDStateProperties & {};

/** The json object that contains properties required to create a security policy */
export type SecurityPolicyProperties = AFDStateProperties & {
  /**
   * The name of the profile which holds the security policy.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly profileName?: string;
  /** object which contains security policy parameters */
  parameters?: SecurityPolicyPropertiesParametersUnion;
};

/** The JSON object that contains the properties of the Secret to create. */
export type SecretProperties = AFDStateProperties & {
  /**
   * The name of the profile which holds the secret.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly profileName?: string;
  /** object which contains secret parameters */
  parameters?: SecretParametersUnion;
};

/** The resource model definition for a ARM proxy resource. It will have everything other than required location and tags */
export type ProxyResource = Resource & {};

/** The resource model definition for a ARM tracked top level resource. */
export type TrackedResource = Resource & {
  /** Resource location. */
  location: string;
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
};

/** Describes a managed rule set definition. */
export type ManagedRuleSetDefinition = Resource & {
  /** The pricing tier (defines a CDN provider, feature list and rate) of the CdnWebApplicationFirewallPolicy. */
  sku?: Sku;
  /**
   * Provisioning state of the managed rule set.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /**
   * Type of the managed rule set.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ruleSetType?: string;
  /**
   * Version of the managed rule set type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ruleSetVersion?: string;
  /**
   * Rule groups of the managed rule set.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ruleGroups?: ManagedRuleGroupDefinition[];
};

/** Defines the RemoteAddress condition for the delivery rule. */
export type DeliveryRuleRemoteAddressCondition = DeliveryRuleCondition & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name: "RemoteAddress";
  /** Defines the parameters for the condition. */
  parameters: RemoteAddressMatchConditionParameters;
};

/** Defines the RequestMethod condition for the delivery rule. */
export type DeliveryRuleRequestMethodCondition = DeliveryRuleCondition & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name: "RequestMethod";
  /** Defines the parameters for the condition. */
  parameters: RequestMethodMatchConditionParameters;
};

/** Defines the QueryString condition for the delivery rule. */
export type DeliveryRuleQueryStringCondition = DeliveryRuleCondition & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name: "QueryString";
  /** Defines the parameters for the condition. */
  parameters: QueryStringMatchConditionParameters;
};

/** Defines the PostArgs condition for the delivery rule. */
export type DeliveryRulePostArgsCondition = DeliveryRuleCondition & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name: "PostArgs";
  /** Defines the parameters for the condition. */
  parameters: PostArgsMatchConditionParameters;
};

/** Defines the RequestUri condition for the delivery rule. */
export type DeliveryRuleRequestUriCondition = DeliveryRuleCondition & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name: "RequestUri";
  /** Defines the parameters for the condition. */
  parameters: RequestUriMatchConditionParameters;
};

/** Defines the RequestHeader condition for the delivery rule. */
export type DeliveryRuleRequestHeaderCondition = DeliveryRuleCondition & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name: "RequestHeader";
  /** Defines the parameters for the condition. */
  parameters: RequestHeaderMatchConditionParameters;
};

/** Defines the RequestBody condition for the delivery rule. */
export type DeliveryRuleRequestBodyCondition = DeliveryRuleCondition & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name: "RequestBody";
  /** Defines the parameters for the condition. */
  parameters: RequestBodyMatchConditionParameters;
};

/** Defines the RequestScheme condition for the delivery rule. */
export type DeliveryRuleRequestSchemeCondition = DeliveryRuleCondition & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name: "RequestScheme";
  /** Defines the parameters for the condition. */
  parameters: RequestSchemeMatchConditionParameters;
};

/** Defines the UrlPath condition for the delivery rule. */
export type DeliveryRuleUrlPathCondition = DeliveryRuleCondition & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name: "UrlPath";
  /** Defines the parameters for the condition. */
  parameters: UrlPathMatchConditionParameters;
};

/** Defines the UrlFileExtension condition for the delivery rule. */
export type DeliveryRuleUrlFileExtensionCondition = DeliveryRuleCondition & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name: "UrlFileExtension";
  /** Defines the parameters for the condition. */
  parameters: UrlFileExtensionMatchConditionParameters;
};

/** Defines the UrlFileName condition for the delivery rule. */
export type DeliveryRuleUrlFileNameCondition = DeliveryRuleCondition & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name: "UrlFileName";
  /** Defines the parameters for the condition. */
  parameters: UrlFileNameMatchConditionParameters;
};

/** Defines the HttpVersion condition for the delivery rule. */
export type DeliveryRuleHttpVersionCondition = DeliveryRuleCondition & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name: "HttpVersion";
  /** Defines the parameters for the condition. */
  parameters: HttpVersionMatchConditionParameters;
};

/** Defines the Cookies condition for the delivery rule. */
export type DeliveryRuleCookiesCondition = DeliveryRuleCondition & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name: "Cookies";
  /** Defines the parameters for the condition. */
  parameters: CookiesMatchConditionParameters;
};

/** Defines the IsDevice condition for the delivery rule. */
export type DeliveryRuleIsDeviceCondition = DeliveryRuleCondition & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name: "IsDevice";
  /** Defines the parameters for the condition. */
  parameters: IsDeviceMatchConditionParameters;
};

/** Defines the SocketAddress condition for the delivery rule. */
export type DeliveryRuleSocketAddrCondition = DeliveryRuleCondition & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name: "SocketAddr";
  /** Defines the parameters for the condition. */
  parameters: SocketAddrMatchConditionParameters;
};

/** Defines the ClientPort condition for the delivery rule. */
export type DeliveryRuleClientPortCondition = DeliveryRuleCondition & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name: "ClientPort";
  /** Defines the parameters for the condition. */
  parameters: ClientPortMatchConditionParameters;
};

/** Defines the ServerPort condition for the delivery rule. */
export type DeliveryRuleServerPortCondition = DeliveryRuleCondition & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name: "ServerPort";
  /** Defines the parameters for the condition. */
  parameters: ServerPortMatchConditionParameters;
};

/** Defines the HostName condition for the delivery rule. */
export type DeliveryRuleHostNameCondition = DeliveryRuleCondition & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name: "HostName";
  /** Defines the parameters for the condition. */
  parameters: HostNameMatchConditionParameters;
};

/** Defines the SslProtocol condition for the delivery rule. */
export type DeliveryRuleSslProtocolCondition = DeliveryRuleCondition & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name: "SslProtocol";
  /** Defines the parameters for the condition. */
  parameters: SslProtocolMatchConditionParameters;
};

/** Defines the url redirect action for the delivery rule. */
export type UrlRedirectAction = DeliveryRuleActionAutoGenerated & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name: "UrlRedirect";
  /** Defines the parameters for the action. */
  parameters: UrlRedirectActionParameters;
};

/** Defines the url signing action for the delivery rule. */
export type UrlSigningAction = DeliveryRuleActionAutoGenerated & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name: "UrlSigning";
  /** Defines the parameters for the action. */
  parameters: UrlSigningActionParameters;
};

/** Defines the origin group override action for the delivery rule. */
export type OriginGroupOverrideAction = DeliveryRuleActionAutoGenerated & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name: "OriginGroupOverride";
  /** Defines the parameters for the action. */
  parameters: OriginGroupOverrideActionParameters;
};

/** Defines the url rewrite action for the delivery rule. */
export type UrlRewriteAction = DeliveryRuleActionAutoGenerated & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name: "UrlRewrite";
  /** Defines the parameters for the action. */
  parameters: UrlRewriteActionParameters;
};

/** Defines the request header action for the delivery rule. */
export type DeliveryRuleRequestHeaderAction = DeliveryRuleActionAutoGenerated & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name: "ModifyRequestHeader";
  /** Defines the parameters for the action. */
  parameters: HeaderActionParameters;
};

/** Defines the response header action for the delivery rule. */
export type DeliveryRuleResponseHeaderAction = DeliveryRuleActionAutoGenerated & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name: "ModifyResponseHeader";
  /** Defines the parameters for the action. */
  parameters: HeaderActionParameters;
};

/** Defines the cache expiration action for the delivery rule. */
export type DeliveryRuleCacheExpirationAction = DeliveryRuleActionAutoGenerated & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name: "CacheExpiration";
  /** Defines the parameters for the action. */
  parameters: CacheExpirationActionParameters;
};

/** Defines the cache-key query string action for the delivery rule. */
export type DeliveryRuleCacheKeyQueryStringAction = DeliveryRuleActionAutoGenerated & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name: "CacheKeyQueryString";
  /** Defines the parameters for the action. */
  parameters: CacheKeyQueryStringActionParameters;
};

/** Defines the route configuration override action for the delivery rule. Only applicable to Frontdoor Standard/Premium Profiles. */
export type DeliveryRuleRouteConfigurationOverrideAction = DeliveryRuleActionAutoGenerated & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  name: "RouteConfigurationOverride";
  /** Defines the parameters for the action. */
  parameters: RouteConfigurationOverrideActionParameters;
};

/** The json object containing security policy waf parameters */
export type SecurityPolicyWebApplicationFirewallParameters = SecurityPolicyPropertiesParameters & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "WebApplicationFirewall";
  /** Resource ID. */
  wafPolicy?: ResourceReference;
  /** Waf associations */
  associations?: SecurityPolicyWebApplicationFirewallAssociation[];
};

/** Url signing key parameters */
export type UrlSigningKeyParameters = SecretParameters & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "UrlSigningKey";
  /** Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash. */
  keyId: string;
  /** Resource reference to the Azure Key Vault secret. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{secretName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​ */
  secretSource: ResourceReference;
  /** Version of the secret to be used */
  secretVersion?: string;
};

/** Managed Certificate used for https */
export type ManagedCertificateParameters = SecretParameters & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "ManagedCertificate";
  /**
   * Subject name in the certificate.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subject?: string;
  /**
   * Certificate expiration date.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expirationDate?: string;
};

/** Customer Certificate used for https */
export type CustomerCertificateParameters = SecretParameters & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "CustomerCertificate";
  /** Resource reference to the Azure Key Vault certificate. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{certificateName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​ */
  secretSource: ResourceReference;
  /** Version of the secret to be used */
  secretVersion?: string;
  /** Whether to use the latest version for the certificate */
  useLatestVersion?: boolean;
  /**
   * Subject name in the certificate.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subject?: string;
  /**
   * Certificate expiration date.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expirationDate?: string;
  /**
   * Certificate issuing authority.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly certificateAuthority?: string;
  /** The list of SANs. */
  subjectAlternativeNames?: string[];
  /**
   * Certificate thumbprint.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly thumbprint?: string;
};

/** Azure FirstParty Managed Certificate provided by other first party resource providers to enable HTTPS. */
export type AzureFirstPartyManagedCertificateParameters = SecretParameters & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "AzureFirstPartyManagedCertificate";
};

/** Defines the certificate source parameters using CDN managed certificate for enabling SSL. */
export type CdnManagedHttpsParameters = CustomDomainHttpsParameters & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  certificateSource: "Cdn";
  /** Defines the certificate source parameters using CDN managed certificate for enabling SSL. */
  certificateSourceParameters: CdnCertificateSourceParameters;
};

/** Defines the certificate source parameters using user's keyvault certificate for enabling SSL. */
export type UserManagedHttpsParameters = CustomDomainHttpsParameters & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  certificateSource: "AzureKeyVault";
  /** Defines the certificate source parameters using user's keyvault certificate for enabling SSL. */
  certificateSourceParameters: KeyVaultCertificateSourceParameters;
};

/** The JSON object that contains the properties required to create an endpoint. */
export type EndpointProperties = EndpointPropertiesUpdateParameters & {
  /**
   * The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostName?: string;
  /** The source of the content being delivered via CDN. */
  origins: DeepCreatedOrigin[];
  /** The origin groups comprising of origins that are used for load balancing the traffic based on availability. */
  originGroups?: DeepCreatedOriginGroup[];
  /**
   * The custom domains under the endpoint.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customDomains?: CustomDomain[];
  /**
   * Resource status of the endpoint.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceState?: EndpointResourceState;
  /**
   * Provisioning status of the endpoint.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
};

/** The JSON object that contains the properties of the origin. */
export type OriginProperties = OriginUpdatePropertiesParameters & {
  /**
   * Resource status of the origin.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceState?: OriginResourceState;
  /**
   * Provisioning status of the origin.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /**
   * The approval status for the connection to the Private Link
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateEndpointStatus?: PrivateEndpointStatus;
};

/** The JSON object that contains the properties of the origin group. */
export type OriginGroupProperties = OriginGroupUpdatePropertiesParameters & {
  /**
   * Resource status of the origin group.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceState?: OriginGroupResourceState;
  /**
   * Provisioning status of the origin group.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
};

/** Defines a rate limiting rule that can be included in a waf policy */
export type RateLimitRule = CustomRule & {
  /** Defines rate limit threshold. */
  rateLimitThreshold: number;
  /** Defines rate limit duration. Default is 1 minute. */
  rateLimitDurationInMinutes: number;
};

/** Managed Certificate used for https */
export type ManagedCertificate = Certificate & {};

/** Customer Certificate used for https */
export type CustomerCertificate = Certificate & {
  /** Resource reference to the Azure Key Vault certificate. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{certificateName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​ */
  secretSource?: ResourceReference;
  /** Certificate version. */
  secretVersion?: string;
  /**
   * Certificate issuing authority.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly certificateAuthority?: string;
  /** Whether to use the latest version for the certificate */
  useLatestVersion?: boolean;
  /** The list of SANs. */
  subjectAlternativeNames?: string[];
  /**
   * Certificate thumbprint.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly thumbprint?: string;
};

/** Azure FirstParty Managed Certificate provided by other first party resource providers to enable HTTPS. */
export type AzureFirstPartyManagedCertificate = Certificate & {};

/** Friendly domain name mapping to the endpoint hostname that the customer provides for branding purposes, e.g. www.contoso.com. */
export type AFDDomain = ProxyResource & {
  /**
   * The name of the profile which holds the domain.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly profileName?: string;
  /** The configuration specifying how to enable HTTPS for the domain - using AzureFrontDoor managed certificate or user's own certificate. If not specified, enabling ssl uses AzureFrontDoor managed certificate by default. */
  tlsSettings?: AFDDomainHttpsParameters;
  /** Resource reference to the Azure DNS zone */
  azureDnsZone?: ResourceReference;
  /** Resource reference to the Azure resource where custom domain ownership was prevalidated */
  preValidatedCustomDomainResourceId?: ResourceReference;
  /**
   * Provisioning status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: AfdProvisioningState;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly deploymentStatus?: DeploymentStatus;
  /**
   * Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step. DCV stands for DomainControlValidation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly domainValidationState?: DomainValidationState;
  /** The host name of the domain. Must be a domain name. */
  hostName?: string;
  /**
   * Values the customer needs to validate domain ownership
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly validationProperties?: DomainValidationProperties;
};

/** AFDOrigin group comprising of origins is used for load balancing to origins when the content cannot be served from CDN. */
export type AFDOriginGroup = ProxyResource & {
  /**
   * The name of the profile which holds the origin group.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly profileName?: string;
  /** Load balancing settings for a backend pool */
  loadBalancingSettings?: LoadBalancingSettingsParameters;
  /** Health probe settings to the origin that is used to determine the health of the origin. */
  healthProbeSettings?: HealthProbeParameters;
  /** Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported. */
  trafficRestorationTimeToHealedOrNewEndpointsInMinutes?: number;
  /** Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled' */
  sessionAffinityState?: EnabledState;
  /**
   * Provisioning status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: AfdProvisioningState;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly deploymentStatus?: DeploymentStatus;
};

/** CDN origin is the source of the content being delivered via CDN. When the edge nodes represented by an endpoint do not have the requested content cached, they attempt to fetch it from one or more of the configured origins. */
export type AFDOrigin = ProxyResource & {
  /**
   * The name of the origin group which contains this origin.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly originGroupName?: string;
  /** Resource reference to the Azure origin resource. */
  azureOrigin?: ResourceReference;
  /** The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint. */
  hostName?: string;
  /** The value of the HTTP port. Must be between 1 and 65535. */
  httpPort?: number;
  /** The value of the HTTPS port. Must be between 1 and 65535. */
  httpsPort?: number;
  /** The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint */
  originHostHeader?: string;
  /** Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5 */
  priority?: number;
  /** Weight of the origin in given origin group for load balancing. Must be between 1 and 1000 */
  weight?: number;
  /** The properties of the private link resource for private origin. */
  sharedPrivateLinkResource?: SharedPrivateLinkResourceProperties;
  /** Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool. */
  enabledState?: EnabledState;
  /** Whether to enable certificate name check at origin level */
  enforceCertificateNameCheck?: boolean;
  /**
   * Provisioning status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: AfdProvisioningState;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly deploymentStatus?: DeploymentStatus;
};

/** Friendly Routes name mapping to the any Routes or secret related information. */
export type Route = ProxyResource & {
  /**
   * The name of the endpoint which holds the route.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endpointName?: string;
  /** Domains referenced by this endpoint. */
  customDomains?: ActivatedResourceReference[];
  /** A reference to the origin group. */
  originGroup?: ResourceReference;
  /** A directory path on the origin that AzureFrontDoor can use to retrieve content from, e.g. contoso.cloudapp.net/originpath. */
  originPath?: string;
  /** rule sets referenced by this endpoint. */
  ruleSets?: ResourceReference[];
  /** List of supported protocols for this route. */
  supportedProtocols?: AFDEndpointProtocols[];
  /** The route patterns of the rule. */
  patternsToMatch?: string[];
  /** The caching configuration for this route. To disable caching, do not provide a cacheConfiguration object. */
  cacheConfiguration?: AfdRouteCacheConfiguration;
  /** Protocol this rule will use when forwarding traffic to backends. */
  forwardingProtocol?: ForwardingProtocol;
  /** whether this route will be linked to the default endpoint domain. */
  linkToDefaultDomain?: LinkToDefaultDomain;
  /** Whether to automatically redirect HTTP traffic to HTTPS traffic. Note that this is a easy way to set up this rule and it will be the first rule that gets executed. */
  httpsRedirect?: HttpsRedirect;
  /** Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled' */
  enabledState?: EnabledState;
  /**
   * Provisioning status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: AfdProvisioningState;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly deploymentStatus?: DeploymentStatus;
};

/** Friendly RuleSet name mapping to the any RuleSet or secret related information. */
export type RuleSet = ProxyResource & {
  /**
   * Provisioning status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: AfdProvisioningState;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly deploymentStatus?: DeploymentStatus;
  /**
   * The name of the profile which holds the rule set.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly profileName?: string;
};

/** Friendly Rules name mapping to the any Rules or secret related information. */
export type Rule = ProxyResource & {
  /**
   * The name of the rule set containing the rule.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ruleSetName?: string;
  /** The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied. */
  order?: number;
  /** A list of conditions that must be matched for the actions to be executed */
  conditions?: DeliveryRuleConditionUnion[];
  /** A list of actions that are executed when all the conditions of a rule are satisfied. */
  actions?: DeliveryRuleActionAutoGeneratedUnion[];
  /** If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue. */
  matchProcessingBehavior?: MatchProcessingBehavior;
  /**
   * Provisioning status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: AfdProvisioningState;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly deploymentStatus?: DeploymentStatus;
};

/** SecurityPolicy association for AzureFrontDoor profile */
export type SecurityPolicy = ProxyResource & {
  /**
   * Provisioning status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: AfdProvisioningState;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly deploymentStatus?: DeploymentStatus;
  /**
   * The name of the profile which holds the security policy.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly profileName?: string;
  /** object which contains security policy parameters */
  parameters?: SecurityPolicyPropertiesParametersUnion;
};

/** Friendly Secret name mapping to the any Secret or secret related information. */
export type Secret = ProxyResource & {
  /**
   * Provisioning status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: AfdProvisioningState;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly deploymentStatus?: DeploymentStatus;
  /**
   * The name of the profile which holds the secret.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly profileName?: string;
  /** object which contains secret parameters */
  parameters?: SecretParametersUnion;
};

/** Friendly domain name mapping to the endpoint hostname that the customer provides for branding purposes, e.g. www.contoso.com. */
export type CustomDomain = ProxyResource & {
  /** The host name of the custom domain. Must be a domain name. */
  hostName?: string;
  /**
   * Resource status of the custom domain.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceState?: CustomDomainResourceState;
  /**
   * Provisioning status of Custom Https of the custom domain.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customHttpsProvisioningState?: CustomHttpsProvisioningState;
  /**
   * Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customHttpsProvisioningSubstate?: CustomHttpsProvisioningSubstate;
  /** Certificate parameters for securing custom HTTPS */
  customHttpsParameters?: CustomDomainHttpsParametersUnion;
  /** Special validation or data may be required when delivering CDN to some regions due to local compliance reasons. E.g. ICP license number of a custom domain is required to deliver content in China. */
  validationData?: string;
  /**
   * Provisioning status of the custom domain.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
};

/** CDN origin is the source of the content being delivered via CDN. When the edge nodes represented by an endpoint do not have the requested content cached, they attempt to fetch it from one or more of the configured origins. */
export type Origin = ProxyResource & {
  /** The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint. */
  hostName?: string;
  /** The value of the HTTP port. Must be between 1 and 65535. */
  httpPort?: number;
  /** The value of the HTTPS port. Must be between 1 and 65535. */
  httpsPort?: number;
  /** The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint */
  originHostHeader?: string;
  /** Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5 */
  priority?: number;
  /** Weight of the origin in given origin group for load balancing. Must be between 1 and 1000 */
  weight?: number;
  /** Origin is enabled for load balancing or not */
  enabled?: boolean;
  /** The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private' */
  privateLinkAlias?: string;
  /** The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private' */
  privateLinkResourceId?: string;
  /** The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated */
  privateLinkLocation?: string;
  /** A custom message to be included in the approval request to connect to the Private Link. */
  privateLinkApprovalMessage?: string;
  /**
   * Resource status of the origin.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceState?: OriginResourceState;
  /**
   * Provisioning status of the origin.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /**
   * The approval status for the connection to the Private Link
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateEndpointStatus?: PrivateEndpointStatus;
};

/** Origin group comprising of origins is used for load balancing to origins when the content cannot be served from CDN. */
export type OriginGroup = ProxyResource & {
  /** Health probe settings to the origin that is used to determine the health of the origin. */
  healthProbeSettings?: HealthProbeParameters;
  /** The source of the content being delivered via CDN within given origin group. */
  origins?: ResourceReference[];
  /** Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported. */
  trafficRestorationTimeToHealedOrNewEndpointsInMinutes?: number;
  /** The JSON object that contains the properties to determine origin health using real requests/responses. This property is currently not supported. */
  responseBasedOriginErrorDetectionSettings?: ResponseBasedOriginErrorDetectionParameters;
  /**
   * Resource status of the origin group.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceState?: OriginGroupResourceState;
  /**
   * Provisioning status of the origin group.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
};

/** Edgenode is a global Point of Presence (POP) location used to deliver CDN content to end users. */
export type EdgeNode = ProxyResource & {
  /** List of ip address groups. */
  ipAddressGroups?: IpAddressGroup[];
};

/** CDN endpoint is the entity within a CDN profile containing configuration information such as origin, protocol, content caching and delivery behavior. The AzureFrontDoor endpoint uses the URL format <endpointname>.azureedge.net. */
export type AFDEndpoint = TrackedResource & {
  /**
   * The name of the profile which holds the endpoint.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly profileName?: string;
  /** Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled' */
  enabledState?: EnabledState;
  /**
   * Provisioning status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: AfdProvisioningState;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly deploymentStatus?: DeploymentStatus;
  /**
   * The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostName?: string;
  /** Indicates the endpoint name reuse scope. The default value is TenantReuse. */
  autoGeneratedDomainNameLabelScope?: AutoGeneratedDomainNameLabelScope;
};

/** A profile is a logical grouping of endpoints that share the same settings. */
export type Profile = TrackedResource & {
  /** The pricing tier (defines Azure Front Door Standard or Premium or a CDN provider, feature list and rate) of the profile. */
  sku: Sku;
  /**
   * Kind of the profile. Used by portal to differentiate traditional CDN profile and new AFD profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly kind?: string;
  /**
   * Resource status of the profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceState?: ProfileResourceState;
  /**
   * Provisioning status of the profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /**
   * The Id of the frontdoor.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly frontDoorId?: string;
  /** Send and receive timeout on forwarding request to the origin. When timeout is reached, the request fails and returns. */
  originResponseTimeoutSeconds?: number;
};

/** CDN endpoint is the entity within a CDN profile containing configuration information such as origin, protocol, content caching and delivery behavior. The CDN endpoint uses the URL format <endpointname>.azureedge.net. */
export type Endpoint = TrackedResource & {
  /** A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath. */
  originPath?: string;
  /** List of content types on which compression applies. The value should be a valid MIME type. */
  contentTypesToCompress?: string[];
  /** The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. */
  originHostHeader?: string;
  /** Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB. */
  isCompressionEnabled?: boolean;
  /** Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed. */
  isHttpAllowed?: boolean;
  /** Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed. */
  isHttpsAllowed?: boolean;
  /** Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL. */
  queryStringCachingBehavior?: QueryStringCachingBehavior;
  /** Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this information, CDN can apply scenario driven optimization. */
  optimizationType?: OptimizationType;
  /** Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin. */
  probePath?: string;
  /** List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/ */
  geoFilters?: GeoFilter[];
  /** A reference to the origin group. */
  defaultOriginGroup?: ResourceReference;
  /** List of keys used to validate the signed URL hashes. */
  urlSigningKeys?: UrlSigningKey[];
  /** A policy that specifies the delivery rules to be used for an endpoint. */
  deliveryPolicy?: EndpointPropertiesUpdateParametersDeliveryPolicy;
  /** Defines the Web Application Firewall policy for the endpoint (if applicable) */
  webApplicationFirewallPolicyLink?: EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink;
  /**
   * The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostName?: string;
  /** The source of the content being delivered via CDN. */
  origins?: DeepCreatedOrigin[];
  /** The origin groups comprising of origins that are used for load balancing the traffic based on availability. */
  originGroups?: DeepCreatedOriginGroup[];
  /**
   * The custom domains under the endpoint.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customDomains?: CustomDomain[];
  /**
   * Resource status of the endpoint.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceState?: EndpointResourceState;
  /**
   * Provisioning status of the endpoint.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
};

/** Defines web application firewall policy for Azure CDN. */
export type CdnWebApplicationFirewallPolicy = TrackedResource & {
  /** Gets a unique read-only string that changes whenever the resource is updated. */
  etag?: string;
  /** The pricing tier (defines a CDN provider, feature list and rate) of the CdnWebApplicationFirewallPolicy. */
  sku: Sku;
  /** Describes  policySettings for policy */
  policySettings?: PolicySettings;
  /** Describes rate limit rules inside the policy. */
  rateLimitRules?: RateLimitRuleList;
  /** Describes custom rules inside the policy. */
  customRules?: CustomRuleList;
  /** Describes managed rules inside the policy. */
  managedRules?: ManagedRuleSetList;
  /**
   * Describes Azure CDN endpoints associated with this Web Application Firewall policy.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endpointLinks?: CdnEndpoint[];
  /**
   * Provisioning state of the WebApplicationFirewallPolicy.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Resource status of the policy.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceState?: PolicyResourceState;
};

/** Known values of {@link ResourceType} that the service accepts. */
export enum KnownResourceType {
  MicrosoftCdnProfilesEndpoints = "Microsoft.Cdn/Profiles/Endpoints",
  MicrosoftCdnProfilesAfdEndpoints = "Microsoft.Cdn/Profiles/AfdEndpoints"
}

/**
 * Defines values for ResourceType. \
 * {@link KnownResourceType} can be used interchangeably with ResourceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Microsoft.Cdn\/Profiles\/Endpoints** \
 * **Microsoft.Cdn\/Profiles\/AfdEndpoints**
 */
export type ResourceType = string;

/** Known values of {@link AutoGeneratedDomainNameLabelScope} that the service accepts. */
export enum KnownAutoGeneratedDomainNameLabelScope {
  TenantReuse = "TenantReuse",
  SubscriptionReuse = "SubscriptionReuse",
  ResourceGroupReuse = "ResourceGroupReuse",
  NoReuse = "NoReuse"
}

/**
 * Defines values for AutoGeneratedDomainNameLabelScope. \
 * {@link KnownAutoGeneratedDomainNameLabelScope} can be used interchangeably with AutoGeneratedDomainNameLabelScope,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **TenantReuse** \
 * **SubscriptionReuse** \
 * **ResourceGroupReuse** \
 * **NoReuse**
 */
export type AutoGeneratedDomainNameLabelScope = string;

/** Known values of {@link UsageUnit} that the service accepts. */
export enum KnownUsageUnit {
  Count = "Count"
}

/**
 * Defines values for UsageUnit. \
 * {@link KnownUsageUnit} can be used interchangeably with UsageUnit,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Count**
 */
export type UsageUnit = string;

/** Known values of {@link DomainValidationState} that the service accepts. */
export enum KnownDomainValidationState {
  Unknown = "Unknown",
  Submitting = "Submitting",
  Pending = "Pending",
  Rejected = "Rejected",
  TimedOut = "TimedOut",
  PendingRevalidation = "PendingRevalidation",
  Approved = "Approved",
  RefreshingValidationToken = "RefreshingValidationToken",
  InternalError = "InternalError"
}

/**
 * Defines values for DomainValidationState. \
 * {@link KnownDomainValidationState} can be used interchangeably with DomainValidationState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Submitting** \
 * **Pending** \
 * **Rejected** \
 * **TimedOut** \
 * **PendingRevalidation** \
 * **Approved** \
 * **RefreshingValidationToken** \
 * **InternalError**
 */
export type DomainValidationState = string;

/** Known values of {@link AfdCertificateType} that the service accepts. */
export enum KnownAfdCertificateType {
  CustomerCertificate = "CustomerCertificate",
  ManagedCertificate = "ManagedCertificate",
  AzureFirstPartyManagedCertificate = "AzureFirstPartyManagedCertificate"
}

/**
 * Defines values for AfdCertificateType. \
 * {@link KnownAfdCertificateType} can be used interchangeably with AfdCertificateType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **CustomerCertificate** \
 * **ManagedCertificate** \
 * **AzureFirstPartyManagedCertificate**
 */
export type AfdCertificateType = string;

/** Known values of {@link AfdProvisioningState} that the service accepts. */
export enum KnownAfdProvisioningState {
  Succeeded = "Succeeded",
  Failed = "Failed",
  Updating = "Updating",
  Deleting = "Deleting",
  Creating = "Creating"
}

/**
 * Defines values for AfdProvisioningState. \
 * {@link KnownAfdProvisioningState} can be used interchangeably with AfdProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Failed** \
 * **Updating** \
 * **Deleting** \
 * **Creating**
 */
export type AfdProvisioningState = string;

/** Known values of {@link DeploymentStatus} that the service accepts. */
export enum KnownDeploymentStatus {
  NotStarted = "NotStarted",
  InProgress = "InProgress",
  Succeeded = "Succeeded",
  Failed = "Failed"
}

/**
 * Defines values for DeploymentStatus. \
 * {@link KnownDeploymentStatus} can be used interchangeably with DeploymentStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotStarted** \
 * **InProgress** \
 * **Succeeded** \
 * **Failed**
 */
export type DeploymentStatus = string;

/** Known values of {@link IdentityType} that the service accepts. */
export enum KnownIdentityType {
  User = "user",
  Application = "application",
  ManagedIdentity = "managedIdentity",
  Key = "key"
}

/**
 * Defines values for IdentityType. \
 * {@link KnownIdentityType} can be used interchangeably with IdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **application** \
 * **managedIdentity** \
 * **key**
 */
export type IdentityType = string;

/** Known values of {@link EnabledState} that the service accepts. */
export enum KnownEnabledState {
  Enabled = "Enabled",
  Disabled = "Disabled"
}

/**
 * Defines values for EnabledState. \
 * {@link KnownEnabledState} can be used interchangeably with EnabledState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export type EnabledState = string;

/** Known values of {@link AFDEndpointProtocols} that the service accepts. */
export enum KnownAFDEndpointProtocols {
  Http = "Http",
  Https = "Https"
}

/**
 * Defines values for AFDEndpointProtocols. \
 * {@link KnownAFDEndpointProtocols} can be used interchangeably with AFDEndpointProtocols,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Http** \
 * **Https**
 */
export type AFDEndpointProtocols = string;

/** Known values of {@link AfdQueryStringCachingBehavior} that the service accepts. */
export enum KnownAfdQueryStringCachingBehavior {
  IgnoreQueryString = "IgnoreQueryString",
  UseQueryString = "UseQueryString",
  IgnoreSpecifiedQueryStrings = "IgnoreSpecifiedQueryStrings",
  IncludeSpecifiedQueryStrings = "IncludeSpecifiedQueryStrings"
}

/**
 * Defines values for AfdQueryStringCachingBehavior. \
 * {@link KnownAfdQueryStringCachingBehavior} can be used interchangeably with AfdQueryStringCachingBehavior,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **IgnoreQueryString** \
 * **UseQueryString** \
 * **IgnoreSpecifiedQueryStrings** \
 * **IncludeSpecifiedQueryStrings**
 */
export type AfdQueryStringCachingBehavior = string;

/** Known values of {@link ForwardingProtocol} that the service accepts. */
export enum KnownForwardingProtocol {
  HttpOnly = "HttpOnly",
  HttpsOnly = "HttpsOnly",
  MatchRequest = "MatchRequest"
}

/**
 * Defines values for ForwardingProtocol. \
 * {@link KnownForwardingProtocol} can be used interchangeably with ForwardingProtocol,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **HttpOnly** \
 * **HttpsOnly** \
 * **MatchRequest**
 */
export type ForwardingProtocol = string;

/** Known values of {@link LinkToDefaultDomain} that the service accepts. */
export enum KnownLinkToDefaultDomain {
  Enabled = "Enabled",
  Disabled = "Disabled"
}

/**
 * Defines values for LinkToDefaultDomain. \
 * {@link KnownLinkToDefaultDomain} can be used interchangeably with LinkToDefaultDomain,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export type LinkToDefaultDomain = string;

/** Known values of {@link HttpsRedirect} that the service accepts. */
export enum KnownHttpsRedirect {
  Enabled = "Enabled",
  Disabled = "Disabled"
}

/**
 * Defines values for HttpsRedirect. \
 * {@link KnownHttpsRedirect} can be used interchangeably with HttpsRedirect,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export type HttpsRedirect = string;

/** Known values of {@link MatchVariable} that the service accepts. */
export enum KnownMatchVariable {
  RemoteAddress = "RemoteAddress",
  RequestMethod = "RequestMethod",
  QueryString = "QueryString",
  PostArgs = "PostArgs",
  RequestUri = "RequestUri",
  RequestHeader = "RequestHeader",
  RequestBody = "RequestBody",
  RequestScheme = "RequestScheme",
  UrlPath = "UrlPath",
  UrlFileExtension = "UrlFileExtension",
  UrlFileName = "UrlFileName",
  HttpVersion = "HttpVersion",
  Cookies = "Cookies",
  IsDevice = "IsDevice",
  SocketAddr = "SocketAddr",
  ClientPort = "ClientPort",
  ServerPort = "ServerPort",
  HostName = "HostName",
  SslProtocol = "SslProtocol"
}

/**
 * Defines values for MatchVariable. \
 * {@link KnownMatchVariable} can be used interchangeably with MatchVariable,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **RemoteAddress** \
 * **RequestMethod** \
 * **QueryString** \
 * **PostArgs** \
 * **RequestUri** \
 * **RequestHeader** \
 * **RequestBody** \
 * **RequestScheme** \
 * **UrlPath** \
 * **UrlFileExtension** \
 * **UrlFileName** \
 * **HttpVersion** \
 * **Cookies** \
 * **IsDevice** \
 * **SocketAddr** \
 * **ClientPort** \
 * **ServerPort** \
 * **HostName** \
 * **SslProtocol**
 */
export type MatchVariable = string;

/** Known values of {@link DeliveryRuleAction} that the service accepts. */
export enum KnownDeliveryRuleAction {
  CacheExpiration = "CacheExpiration",
  CacheKeyQueryString = "CacheKeyQueryString",
  ModifyRequestHeader = "ModifyRequestHeader",
  ModifyResponseHeader = "ModifyResponseHeader",
  UrlRedirect = "UrlRedirect",
  UrlRewrite = "UrlRewrite",
  UrlSigning = "UrlSigning",
  OriginGroupOverride = "OriginGroupOverride",
  RouteConfigurationOverride = "RouteConfigurationOverride"
}

/**
 * Defines values for DeliveryRuleAction. \
 * {@link KnownDeliveryRuleAction} can be used interchangeably with DeliveryRuleAction,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **CacheExpiration** \
 * **CacheKeyQueryString** \
 * **ModifyRequestHeader** \
 * **ModifyResponseHeader** \
 * **UrlRedirect** \
 * **UrlRewrite** \
 * **UrlSigning** \
 * **OriginGroupOverride** \
 * **RouteConfigurationOverride**
 */
export type DeliveryRuleAction = string;

/** Known values of {@link MatchProcessingBehavior} that the service accepts. */
export enum KnownMatchProcessingBehavior {
  Continue = "Continue",
  Stop = "Stop"
}

/**
 * Defines values for MatchProcessingBehavior. \
 * {@link KnownMatchProcessingBehavior} can be used interchangeably with MatchProcessingBehavior,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Continue** \
 * **Stop**
 */
export type MatchProcessingBehavior = string;

/** Known values of {@link SecurityPolicyType} that the service accepts. */
export enum KnownSecurityPolicyType {
  WebApplicationFirewall = "WebApplicationFirewall"
}

/**
 * Defines values for SecurityPolicyType. \
 * {@link KnownSecurityPolicyType} can be used interchangeably with SecurityPolicyType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **WebApplicationFirewall**
 */
export type SecurityPolicyType = string;

/** Known values of {@link SecretType} that the service accepts. */
export enum KnownSecretType {
  UrlSigningKey = "UrlSigningKey",
  CustomerCertificate = "CustomerCertificate",
  ManagedCertificate = "ManagedCertificate",
  AzureFirstPartyManagedCertificate = "AzureFirstPartyManagedCertificate"
}

/**
 * Defines values for SecretType. \
 * {@link KnownSecretType} can be used interchangeably with SecretType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **UrlSigningKey** \
 * **CustomerCertificate** \
 * **ManagedCertificate** \
 * **AzureFirstPartyManagedCertificate**
 */
export type SecretType = string;

/** Known values of {@link Status} that the service accepts. */
export enum KnownStatus {
  Valid = "Valid",
  Invalid = "Invalid",
  AccessDenied = "AccessDenied",
  CertificateExpired = "CertificateExpired"
}

/**
 * Defines values for Status. \
 * {@link KnownStatus} can be used interchangeably with Status,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Valid** \
 * **Invalid** \
 * **AccessDenied** \
 * **CertificateExpired**
 */
export type Status = string;

/** Known values of {@link LogMetric} that the service accepts. */
export enum KnownLogMetric {
  ClientRequestCount = "clientRequestCount",
  ClientRequestTraffic = "clientRequestTraffic",
  ClientRequestBandwidth = "clientRequestBandwidth",
  OriginRequestTraffic = "originRequestTraffic",
  OriginRequestBandwidth = "originRequestBandwidth",
  TotalLatency = "totalLatency"
}

/**
 * Defines values for LogMetric. \
 * {@link KnownLogMetric} can be used interchangeably with LogMetric,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **clientRequestCount** \
 * **clientRequestTraffic** \
 * **clientRequestBandwidth** \
 * **originRequestTraffic** \
 * **originRequestBandwidth** \
 * **totalLatency**
 */
export type LogMetric = string;

/** Known values of {@link LogMetricsGranularity} that the service accepts. */
export enum KnownLogMetricsGranularity {
  PT5M = "PT5M",
  PT1H = "PT1H",
  P1D = "P1D"
}

/**
 * Defines values for LogMetricsGranularity. \
 * {@link KnownLogMetricsGranularity} can be used interchangeably with LogMetricsGranularity,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **PT5M** \
 * **PT1H** \
 * **P1D**
 */
export type LogMetricsGranularity = string;

/** Known values of {@link LogMetricsGroupBy} that the service accepts. */
export enum KnownLogMetricsGroupBy {
  HttpStatusCode = "httpStatusCode",
  Protocol = "protocol",
  CacheStatus = "cacheStatus",
  CountryOrRegion = "countryOrRegion",
  CustomDomain = "customDomain"
}

/**
 * Defines values for LogMetricsGroupBy. \
 * {@link KnownLogMetricsGroupBy} can be used interchangeably with LogMetricsGroupBy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **httpStatusCode** \
 * **protocol** \
 * **cacheStatus** \
 * **countryOrRegion** \
 * **customDomain**
 */
export type LogMetricsGroupBy = string;

/** Known values of {@link MetricsResponseGranularity} that the service accepts. */
export enum KnownMetricsResponseGranularity {
  PT5M = "PT5M",
  PT1H = "PT1H",
  P1D = "P1D"
}

/**
 * Defines values for MetricsResponseGranularity. \
 * {@link KnownMetricsResponseGranularity} can be used interchangeably with MetricsResponseGranularity,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **PT5M** \
 * **PT1H** \
 * **P1D**
 */
export type MetricsResponseGranularity = string;

/** Known values of {@link MetricsResponseSeriesItemUnit} that the service accepts. */
export enum KnownMetricsResponseSeriesItemUnit {
  Count = "count",
  Bytes = "bytes",
  BitsPerSecond = "bitsPerSecond",
  MilliSeconds = "milliSeconds"
}

/**
 * Defines values for MetricsResponseSeriesItemUnit. \
 * {@link KnownMetricsResponseSeriesItemUnit} can be used interchangeably with MetricsResponseSeriesItemUnit,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **count** \
 * **bytes** \
 * **bitsPerSecond** \
 * **milliSeconds**
 */
export type MetricsResponseSeriesItemUnit = string;

/** Known values of {@link LogRanking} that the service accepts. */
export enum KnownLogRanking {
  Url = "url",
  Referrer = "referrer",
  Browser = "browser",
  UserAgent = "userAgent",
  CountryOrRegion = "countryOrRegion"
}

/**
 * Defines values for LogRanking. \
 * {@link KnownLogRanking} can be used interchangeably with LogRanking,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **url** \
 * **referrer** \
 * **browser** \
 * **userAgent** \
 * **countryOrRegion**
 */
export type LogRanking = string;

/** Known values of {@link LogRankingMetric} that the service accepts. */
export enum KnownLogRankingMetric {
  ClientRequestCount = "clientRequestCount",
  ClientRequestTraffic = "clientRequestTraffic",
  HitCount = "hitCount",
  MissCount = "missCount",
  UserErrorCount = "userErrorCount",
  ErrorCount = "errorCount"
}

/**
 * Defines values for LogRankingMetric. \
 * {@link KnownLogRankingMetric} can be used interchangeably with LogRankingMetric,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **clientRequestCount** \
 * **clientRequestTraffic** \
 * **hitCount** \
 * **missCount** \
 * **userErrorCount** \
 * **errorCount**
 */
export type LogRankingMetric = string;

/** Known values of {@link WafMetric} that the service accepts. */
export enum KnownWafMetric {
  ClientRequestCount = "clientRequestCount"
}

/**
 * Defines values for WafMetric. \
 * {@link KnownWafMetric} can be used interchangeably with WafMetric,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **clientRequestCount**
 */
export type WafMetric = string;

/** Known values of {@link WafGranularity} that the service accepts. */
export enum KnownWafGranularity {
  PT5M = "PT5M",
  PT1H = "PT1H",
  P1D = "P1D"
}

/**
 * Defines values for WafGranularity. \
 * {@link KnownWafGranularity} can be used interchangeably with WafGranularity,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **PT5M** \
 * **PT1H** \
 * **P1D**
 */
export type WafGranularity = string;

/** Known values of {@link WafAction} that the service accepts. */
export enum KnownWafAction {
  Allow = "allow",
  Block = "block",
  Log = "log",
  Redirect = "redirect"
}

/**
 * Defines values for WafAction. \
 * {@link KnownWafAction} can be used interchangeably with WafAction,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **allow** \
 * **block** \
 * **log** \
 * **redirect**
 */
export type WafAction = string;

/** Known values of {@link WafRankingGroupBy} that the service accepts. */
export enum KnownWafRankingGroupBy {
  HttpStatusCode = "httpStatusCode",
  CustomDomain = "customDomain"
}

/**
 * Defines values for WafRankingGroupBy. \
 * {@link KnownWafRankingGroupBy} can be used interchangeably with WafRankingGroupBy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **httpStatusCode** \
 * **customDomain**
 */
export type WafRankingGroupBy = string;

/** Known values of {@link WafRuleType} that the service accepts. */
export enum KnownWafRuleType {
  Managed = "managed",
  Custom = "custom",
  Bot = "bot"
}

/**
 * Defines values for WafRuleType. \
 * {@link KnownWafRuleType} can be used interchangeably with WafRuleType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **managed** \
 * **custom** \
 * **bot**
 */
export type WafRuleType = string;

/** Known values of {@link WafMetricsResponseGranularity} that the service accepts. */
export enum KnownWafMetricsResponseGranularity {
  PT5M = "PT5M",
  PT1H = "PT1H",
  P1D = "P1D"
}

/**
 * Defines values for WafMetricsResponseGranularity. \
 * {@link KnownWafMetricsResponseGranularity} can be used interchangeably with WafMetricsResponseGranularity,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **PT5M** \
 * **PT1H** \
 * **P1D**
 */
export type WafMetricsResponseGranularity = string;

/** Known values of {@link WafRankingType} that the service accepts. */
export enum KnownWafRankingType {
  Action = "action",
  RuleGroup = "ruleGroup",
  RuleId = "ruleId",
  UserAgent = "userAgent",
  ClientIp = "clientIp",
  Url = "url",
  CountryOrRegion = "countryOrRegion",
  RuleType = "ruleType"
}

/**
 * Defines values for WafRankingType. \
 * {@link KnownWafRankingType} can be used interchangeably with WafRankingType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **action** \
 * **ruleGroup** \
 * **ruleId** \
 * **userAgent** \
 * **clientIp** \
 * **url** \
 * **countryOrRegion** \
 * **ruleType**
 */
export type WafRankingType = string;

/** Known values of {@link SkuName} that the service accepts. */
export enum KnownSkuName {
  StandardVerizon = "Standard_Verizon",
  PremiumVerizon = "Premium_Verizon",
  CustomVerizon = "Custom_Verizon",
  StandardAkamai = "Standard_Akamai",
  StandardChinaCdn = "Standard_ChinaCdn",
  StandardMicrosoft = "Standard_Microsoft",
  StandardAzureFrontDoor = "Standard_AzureFrontDoor",
  PremiumAzureFrontDoor = "Premium_AzureFrontDoor",
  Standard955BandWidthChinaCdn = "Standard_955BandWidth_ChinaCdn",
  StandardAvgBandWidthChinaCdn = "Standard_AvgBandWidth_ChinaCdn",
  StandardPlusChinaCdn = "StandardPlus_ChinaCdn",
  StandardPlus955BandWidthChinaCdn = "StandardPlus_955BandWidth_ChinaCdn",
  StandardPlusAvgBandWidthChinaCdn = "StandardPlus_AvgBandWidth_ChinaCdn"
}

/**
 * Defines values for SkuName. \
 * {@link KnownSkuName} can be used interchangeably with SkuName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Standard_Verizon** \
 * **Premium_Verizon** \
 * **Custom_Verizon** \
 * **Standard_Akamai** \
 * **Standard_ChinaCdn** \
 * **Standard_Microsoft** \
 * **Standard_AzureFrontDoor** \
 * **Premium_AzureFrontDoor** \
 * **Standard_955BandWidth_ChinaCdn** \
 * **Standard_AvgBandWidth_ChinaCdn** \
 * **StandardPlus_ChinaCdn** \
 * **StandardPlus_955BandWidth_ChinaCdn** \
 * **StandardPlus_AvgBandWidth_ChinaCdn**
 */
export type SkuName = string;

/** Known values of {@link ProfileResourceState} that the service accepts. */
export enum KnownProfileResourceState {
  Creating = "Creating",
  Active = "Active",
  Deleting = "Deleting",
  Disabled = "Disabled"
}

/**
 * Defines values for ProfileResourceState. \
 * {@link KnownProfileResourceState} can be used interchangeably with ProfileResourceState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **Active** \
 * **Deleting** \
 * **Disabled**
 */
export type ProfileResourceState = string;

/** Known values of {@link OptimizationType} that the service accepts. */
export enum KnownOptimizationType {
  GeneralWebDelivery = "GeneralWebDelivery",
  GeneralMediaStreaming = "GeneralMediaStreaming",
  VideoOnDemandMediaStreaming = "VideoOnDemandMediaStreaming",
  LargeFileDownload = "LargeFileDownload",
  DynamicSiteAcceleration = "DynamicSiteAcceleration"
}

/**
 * Defines values for OptimizationType. \
 * {@link KnownOptimizationType} can be used interchangeably with OptimizationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **GeneralWebDelivery** \
 * **GeneralMediaStreaming** \
 * **VideoOnDemandMediaStreaming** \
 * **LargeFileDownload** \
 * **DynamicSiteAcceleration**
 */
export type OptimizationType = string;

/** Known values of {@link PrivateEndpointStatus} that the service accepts. */
export enum KnownPrivateEndpointStatus {
  Pending = "Pending",
  Approved = "Approved",
  Rejected = "Rejected",
  Disconnected = "Disconnected",
  Timeout = "Timeout"
}

/**
 * Defines values for PrivateEndpointStatus. \
 * {@link KnownPrivateEndpointStatus} can be used interchangeably with PrivateEndpointStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Approved** \
 * **Rejected** \
 * **Disconnected** \
 * **Timeout**
 */
export type PrivateEndpointStatus = string;

/** Known values of {@link CustomDomainResourceState} that the service accepts. */
export enum KnownCustomDomainResourceState {
  Creating = "Creating",
  Active = "Active",
  Deleting = "Deleting"
}

/**
 * Defines values for CustomDomainResourceState. \
 * {@link KnownCustomDomainResourceState} can be used interchangeably with CustomDomainResourceState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **Active** \
 * **Deleting**
 */
export type CustomDomainResourceState = string;

/** Known values of {@link CustomHttpsProvisioningState} that the service accepts. */
export enum KnownCustomHttpsProvisioningState {
  Enabling = "Enabling",
  Enabled = "Enabled",
  Disabling = "Disabling",
  Disabled = "Disabled",
  Failed = "Failed"
}

/**
 * Defines values for CustomHttpsProvisioningState. \
 * {@link KnownCustomHttpsProvisioningState} can be used interchangeably with CustomHttpsProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabling** \
 * **Enabled** \
 * **Disabling** \
 * **Disabled** \
 * **Failed**
 */
export type CustomHttpsProvisioningState = string;

/** Known values of {@link CustomHttpsProvisioningSubstate} that the service accepts. */
export enum KnownCustomHttpsProvisioningSubstate {
  SubmittingDomainControlValidationRequest = "SubmittingDomainControlValidationRequest",
  PendingDomainControlValidationREquestApproval = "PendingDomainControlValidationREquestApproval",
  DomainControlValidationRequestApproved = "DomainControlValidationRequestApproved",
  DomainControlValidationRequestRejected = "DomainControlValidationRequestRejected",
  DomainControlValidationRequestTimedOut = "DomainControlValidationRequestTimedOut",
  IssuingCertificate = "IssuingCertificate",
  DeployingCertificate = "DeployingCertificate",
  CertificateDeployed = "CertificateDeployed",
  DeletingCertificate = "DeletingCertificate",
  CertificateDeleted = "CertificateDeleted"
}

/**
 * Defines values for CustomHttpsProvisioningSubstate. \
 * {@link KnownCustomHttpsProvisioningSubstate} can be used interchangeably with CustomHttpsProvisioningSubstate,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SubmittingDomainControlValidationRequest** \
 * **PendingDomainControlValidationREquestApproval** \
 * **DomainControlValidationRequestApproved** \
 * **DomainControlValidationRequestRejected** \
 * **DomainControlValidationRequestTimedOut** \
 * **IssuingCertificate** \
 * **DeployingCertificate** \
 * **CertificateDeployed** \
 * **DeletingCertificate** \
 * **CertificateDeleted**
 */
export type CustomHttpsProvisioningSubstate = string;

/** Known values of {@link CertificateSource} that the service accepts. */
export enum KnownCertificateSource {
  AzureKeyVault = "AzureKeyVault",
  Cdn = "Cdn"
}

/**
 * Defines values for CertificateSource. \
 * {@link KnownCertificateSource} can be used interchangeably with CertificateSource,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AzureKeyVault** \
 * **Cdn**
 */
export type CertificateSource = string;

/** Known values of {@link ProtocolType} that the service accepts. */
export enum KnownProtocolType {
  ServerNameIndication = "ServerNameIndication",
  IPBased = "IPBased"
}

/**
 * Defines values for ProtocolType. \
 * {@link KnownProtocolType} can be used interchangeably with ProtocolType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ServerNameIndication** \
 * **IPBased**
 */
export type ProtocolType = string;

/** Known values of {@link EndpointResourceState} that the service accepts. */
export enum KnownEndpointResourceState {
  Creating = "Creating",
  Deleting = "Deleting",
  Running = "Running",
  Starting = "Starting",
  Stopped = "Stopped",
  Stopping = "Stopping"
}

/**
 * Defines values for EndpointResourceState. \
 * {@link KnownEndpointResourceState} can be used interchangeably with EndpointResourceState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **Deleting** \
 * **Running** \
 * **Starting** \
 * **Stopped** \
 * **Stopping**
 */
export type EndpointResourceState = string;

/** Known values of {@link OriginResourceState} that the service accepts. */
export enum KnownOriginResourceState {
  Creating = "Creating",
  Active = "Active",
  Deleting = "Deleting"
}

/**
 * Defines values for OriginResourceState. \
 * {@link KnownOriginResourceState} can be used interchangeably with OriginResourceState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **Active** \
 * **Deleting**
 */
export type OriginResourceState = string;

/** Known values of {@link OriginGroupResourceState} that the service accepts. */
export enum KnownOriginGroupResourceState {
  Creating = "Creating",
  Active = "Active",
  Deleting = "Deleting"
}

/**
 * Defines values for OriginGroupResourceState. \
 * {@link KnownOriginGroupResourceState} can be used interchangeably with OriginGroupResourceState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **Active** \
 * **Deleting**
 */
export type OriginGroupResourceState = string;

/** Known values of {@link PolicyEnabledState} that the service accepts. */
export enum KnownPolicyEnabledState {
  Disabled = "Disabled",
  Enabled = "Enabled"
}

/**
 * Defines values for PolicyEnabledState. \
 * {@link KnownPolicyEnabledState} can be used interchangeably with PolicyEnabledState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Enabled**
 */
export type PolicyEnabledState = string;

/** Known values of {@link PolicyMode} that the service accepts. */
export enum KnownPolicyMode {
  Prevention = "Prevention",
  Detection = "Detection"
}

/**
 * Defines values for PolicyMode. \
 * {@link KnownPolicyMode} can be used interchangeably with PolicyMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Prevention** \
 * **Detection**
 */
export type PolicyMode = string;

/** Known values of {@link PolicySettingsDefaultCustomBlockResponseStatusCode} that the service accepts. */
export enum KnownPolicySettingsDefaultCustomBlockResponseStatusCode {
  TwoHundred = 200,
  FourHundredThree = 403,
  FourHundredFive = 405,
  FourHundredSix = 406,
  FourHundredTwentyNine = 429
}

/**
 * Defines values for PolicySettingsDefaultCustomBlockResponseStatusCode. \
 * {@link KnownPolicySettingsDefaultCustomBlockResponseStatusCode} can be used interchangeably with PolicySettingsDefaultCustomBlockResponseStatusCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **200** \
 * **403** \
 * **405** \
 * **406** \
 * **429**
 */
export type PolicySettingsDefaultCustomBlockResponseStatusCode = number;

/** Known values of {@link CustomRuleEnabledState} that the service accepts. */
export enum KnownCustomRuleEnabledState {
  Disabled = "Disabled",
  Enabled = "Enabled"
}

/**
 * Defines values for CustomRuleEnabledState. \
 * {@link KnownCustomRuleEnabledState} can be used interchangeably with CustomRuleEnabledState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Enabled**
 */
export type CustomRuleEnabledState = string;

/** Known values of {@link WafMatchVariable} that the service accepts. */
export enum KnownWafMatchVariable {
  RemoteAddr = "RemoteAddr",
  SocketAddr = "SocketAddr",
  RequestMethod = "RequestMethod",
  RequestHeader = "RequestHeader",
  RequestUri = "RequestUri",
  QueryString = "QueryString",
  RequestBody = "RequestBody",
  Cookies = "Cookies",
  PostArgs = "PostArgs"
}

/**
 * Defines values for WafMatchVariable. \
 * {@link KnownWafMatchVariable} can be used interchangeably with WafMatchVariable,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **RemoteAddr** \
 * **SocketAddr** \
 * **RequestMethod** \
 * **RequestHeader** \
 * **RequestUri** \
 * **QueryString** \
 * **RequestBody** \
 * **Cookies** \
 * **PostArgs**
 */
export type WafMatchVariable = string;

/** Known values of {@link Operator} that the service accepts. */
export enum KnownOperator {
  Any = "Any",
  IPMatch = "IPMatch",
  GeoMatch = "GeoMatch",
  Equal = "Equal",
  Contains = "Contains",
  LessThan = "LessThan",
  GreaterThan = "GreaterThan",
  LessThanOrEqual = "LessThanOrEqual",
  GreaterThanOrEqual = "GreaterThanOrEqual",
  BeginsWith = "BeginsWith",
  EndsWith = "EndsWith",
  RegEx = "RegEx"
}

/**
 * Defines values for Operator. \
 * {@link KnownOperator} can be used interchangeably with Operator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **IPMatch** \
 * **GeoMatch** \
 * **Equal** \
 * **Contains** \
 * **LessThan** \
 * **GreaterThan** \
 * **LessThanOrEqual** \
 * **GreaterThanOrEqual** \
 * **BeginsWith** \
 * **EndsWith** \
 * **RegEx**
 */
export type Operator = string;

/** Known values of {@link TransformType} that the service accepts. */
export enum KnownTransformType {
  Lowercase = "Lowercase",
  Uppercase = "Uppercase",
  Trim = "Trim",
  UrlDecode = "UrlDecode",
  UrlEncode = "UrlEncode",
  RemoveNulls = "RemoveNulls"
}

/**
 * Defines values for TransformType. \
 * {@link KnownTransformType} can be used interchangeably with TransformType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Lowercase** \
 * **Uppercase** \
 * **Trim** \
 * **UrlDecode** \
 * **UrlEncode** \
 * **RemoveNulls**
 */
export type TransformType = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  Allow = "Allow",
  Block = "Block",
  Log = "Log",
  Redirect = "Redirect"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Allow** \
 * **Block** \
 * **Log** \
 * **Redirect**
 */
export type ActionType = string;

/** Known values of {@link ManagedRuleEnabledState} that the service accepts. */
export enum KnownManagedRuleEnabledState {
  Disabled = "Disabled",
  Enabled = "Enabled"
}

/**
 * Defines values for ManagedRuleEnabledState. \
 * {@link KnownManagedRuleEnabledState} can be used interchangeably with ManagedRuleEnabledState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Enabled**
 */
export type ManagedRuleEnabledState = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  Creating = "Creating",
  Succeeded = "Succeeded",
  Failed = "Failed"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **Succeeded** \
 * **Failed**
 */
export type ProvisioningState = string;

/** Known values of {@link PolicyResourceState} that the service accepts. */
export enum KnownPolicyResourceState {
  Creating = "Creating",
  Enabling = "Enabling",
  Enabled = "Enabled",
  Disabling = "Disabling",
  Disabled = "Disabled",
  Deleting = "Deleting"
}

/**
 * Defines values for PolicyResourceState. \
 * {@link KnownPolicyResourceState} can be used interchangeably with PolicyResourceState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **Enabling** \
 * **Enabled** \
 * **Disabling** \
 * **Disabled** \
 * **Deleting**
 */
export type PolicyResourceState = string;

/** Known values of {@link RemoteAddressOperator} that the service accepts. */
export enum KnownRemoteAddressOperator {
  Any = "Any",
  IPMatch = "IPMatch",
  GeoMatch = "GeoMatch"
}

/**
 * Defines values for RemoteAddressOperator. \
 * {@link KnownRemoteAddressOperator} can be used interchangeably with RemoteAddressOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **IPMatch** \
 * **GeoMatch**
 */
export type RemoteAddressOperator = string;

/** Known values of {@link Transform} that the service accepts. */
export enum KnownTransform {
  Lowercase = "Lowercase",
  Uppercase = "Uppercase",
  Trim = "Trim",
  UrlDecode = "UrlDecode",
  UrlEncode = "UrlEncode",
  RemoveNulls = "RemoveNulls"
}

/**
 * Defines values for Transform. \
 * {@link KnownTransform} can be used interchangeably with Transform,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Lowercase** \
 * **Uppercase** \
 * **Trim** \
 * **UrlDecode** \
 * **UrlEncode** \
 * **RemoveNulls**
 */
export type Transform = string;

/** Known values of {@link RequestMethodOperator} that the service accepts. */
export enum KnownRequestMethodOperator {
  Equal = "Equal"
}

/**
 * Defines values for RequestMethodOperator. \
 * {@link KnownRequestMethodOperator} can be used interchangeably with RequestMethodOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Equal**
 */
export type RequestMethodOperator = string;

/** Known values of {@link RequestMethodMatchConditionParametersMatchValuesItem} that the service accepts. */
export enum KnownRequestMethodMatchConditionParametersMatchValuesItem {
  GET = "GET",
  Head = "HEAD",
  Post = "POST",
  PUT = "PUT",
  Delete = "DELETE",
  Options = "OPTIONS",
  Trace = "TRACE"
}

/**
 * Defines values for RequestMethodMatchConditionParametersMatchValuesItem. \
 * {@link KnownRequestMethodMatchConditionParametersMatchValuesItem} can be used interchangeably with RequestMethodMatchConditionParametersMatchValuesItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **GET** \
 * **HEAD** \
 * **POST** \
 * **PUT** \
 * **DELETE** \
 * **OPTIONS** \
 * **TRACE**
 */
export type RequestMethodMatchConditionParametersMatchValuesItem = string;

/** Known values of {@link QueryStringOperator} that the service accepts. */
export enum KnownQueryStringOperator {
  Any = "Any",
  Equal = "Equal",
  Contains = "Contains",
  BeginsWith = "BeginsWith",
  EndsWith = "EndsWith",
  LessThan = "LessThan",
  LessThanOrEqual = "LessThanOrEqual",
  GreaterThan = "GreaterThan",
  GreaterThanOrEqual = "GreaterThanOrEqual",
  RegEx = "RegEx"
}

/**
 * Defines values for QueryStringOperator. \
 * {@link KnownQueryStringOperator} can be used interchangeably with QueryStringOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **Equal** \
 * **Contains** \
 * **BeginsWith** \
 * **EndsWith** \
 * **LessThan** \
 * **LessThanOrEqual** \
 * **GreaterThan** \
 * **GreaterThanOrEqual** \
 * **RegEx**
 */
export type QueryStringOperator = string;

/** Known values of {@link PostArgsOperator} that the service accepts. */
export enum KnownPostArgsOperator {
  Any = "Any",
  Equal = "Equal",
  Contains = "Contains",
  BeginsWith = "BeginsWith",
  EndsWith = "EndsWith",
  LessThan = "LessThan",
  LessThanOrEqual = "LessThanOrEqual",
  GreaterThan = "GreaterThan",
  GreaterThanOrEqual = "GreaterThanOrEqual",
  RegEx = "RegEx"
}

/**
 * Defines values for PostArgsOperator. \
 * {@link KnownPostArgsOperator} can be used interchangeably with PostArgsOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **Equal** \
 * **Contains** \
 * **BeginsWith** \
 * **EndsWith** \
 * **LessThan** \
 * **LessThanOrEqual** \
 * **GreaterThan** \
 * **GreaterThanOrEqual** \
 * **RegEx**
 */
export type PostArgsOperator = string;

/** Known values of {@link RequestUriOperator} that the service accepts. */
export enum KnownRequestUriOperator {
  Any = "Any",
  Equal = "Equal",
  Contains = "Contains",
  BeginsWith = "BeginsWith",
  EndsWith = "EndsWith",
  LessThan = "LessThan",
  LessThanOrEqual = "LessThanOrEqual",
  GreaterThan = "GreaterThan",
  GreaterThanOrEqual = "GreaterThanOrEqual",
  RegEx = "RegEx"
}

/**
 * Defines values for RequestUriOperator. \
 * {@link KnownRequestUriOperator} can be used interchangeably with RequestUriOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **Equal** \
 * **Contains** \
 * **BeginsWith** \
 * **EndsWith** \
 * **LessThan** \
 * **LessThanOrEqual** \
 * **GreaterThan** \
 * **GreaterThanOrEqual** \
 * **RegEx**
 */
export type RequestUriOperator = string;

/** Known values of {@link RequestHeaderOperator} that the service accepts. */
export enum KnownRequestHeaderOperator {
  Any = "Any",
  Equal = "Equal",
  Contains = "Contains",
  BeginsWith = "BeginsWith",
  EndsWith = "EndsWith",
  LessThan = "LessThan",
  LessThanOrEqual = "LessThanOrEqual",
  GreaterThan = "GreaterThan",
  GreaterThanOrEqual = "GreaterThanOrEqual",
  RegEx = "RegEx"
}

/**
 * Defines values for RequestHeaderOperator. \
 * {@link KnownRequestHeaderOperator} can be used interchangeably with RequestHeaderOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **Equal** \
 * **Contains** \
 * **BeginsWith** \
 * **EndsWith** \
 * **LessThan** \
 * **LessThanOrEqual** \
 * **GreaterThan** \
 * **GreaterThanOrEqual** \
 * **RegEx**
 */
export type RequestHeaderOperator = string;

/** Known values of {@link RequestBodyOperator} that the service accepts. */
export enum KnownRequestBodyOperator {
  Any = "Any",
  Equal = "Equal",
  Contains = "Contains",
  BeginsWith = "BeginsWith",
  EndsWith = "EndsWith",
  LessThan = "LessThan",
  LessThanOrEqual = "LessThanOrEqual",
  GreaterThan = "GreaterThan",
  GreaterThanOrEqual = "GreaterThanOrEqual",
  RegEx = "RegEx"
}

/**
 * Defines values for RequestBodyOperator. \
 * {@link KnownRequestBodyOperator} can be used interchangeably with RequestBodyOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **Equal** \
 * **Contains** \
 * **BeginsWith** \
 * **EndsWith** \
 * **LessThan** \
 * **LessThanOrEqual** \
 * **GreaterThan** \
 * **GreaterThanOrEqual** \
 * **RegEx**
 */
export type RequestBodyOperator = string;

/** Known values of {@link RequestSchemeMatchConditionParametersMatchValuesItem} that the service accepts. */
export enum KnownRequestSchemeMatchConditionParametersMatchValuesItem {
  Http = "HTTP",
  Https = "HTTPS"
}

/**
 * Defines values for RequestSchemeMatchConditionParametersMatchValuesItem. \
 * {@link KnownRequestSchemeMatchConditionParametersMatchValuesItem} can be used interchangeably with RequestSchemeMatchConditionParametersMatchValuesItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **HTTP** \
 * **HTTPS**
 */
export type RequestSchemeMatchConditionParametersMatchValuesItem = string;

/** Known values of {@link UrlPathOperator} that the service accepts. */
export enum KnownUrlPathOperator {
  Any = "Any",
  Equal = "Equal",
  Contains = "Contains",
  BeginsWith = "BeginsWith",
  EndsWith = "EndsWith",
  LessThan = "LessThan",
  LessThanOrEqual = "LessThanOrEqual",
  GreaterThan = "GreaterThan",
  GreaterThanOrEqual = "GreaterThanOrEqual",
  Wildcard = "Wildcard",
  RegEx = "RegEx"
}

/**
 * Defines values for UrlPathOperator. \
 * {@link KnownUrlPathOperator} can be used interchangeably with UrlPathOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **Equal** \
 * **Contains** \
 * **BeginsWith** \
 * **EndsWith** \
 * **LessThan** \
 * **LessThanOrEqual** \
 * **GreaterThan** \
 * **GreaterThanOrEqual** \
 * **Wildcard** \
 * **RegEx**
 */
export type UrlPathOperator = string;

/** Known values of {@link UrlFileExtensionOperator} that the service accepts. */
export enum KnownUrlFileExtensionOperator {
  Any = "Any",
  Equal = "Equal",
  Contains = "Contains",
  BeginsWith = "BeginsWith",
  EndsWith = "EndsWith",
  LessThan = "LessThan",
  LessThanOrEqual = "LessThanOrEqual",
  GreaterThan = "GreaterThan",
  GreaterThanOrEqual = "GreaterThanOrEqual",
  RegEx = "RegEx"
}

/**
 * Defines values for UrlFileExtensionOperator. \
 * {@link KnownUrlFileExtensionOperator} can be used interchangeably with UrlFileExtensionOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **Equal** \
 * **Contains** \
 * **BeginsWith** \
 * **EndsWith** \
 * **LessThan** \
 * **LessThanOrEqual** \
 * **GreaterThan** \
 * **GreaterThanOrEqual** \
 * **RegEx**
 */
export type UrlFileExtensionOperator = string;

/** Known values of {@link UrlFileNameOperator} that the service accepts. */
export enum KnownUrlFileNameOperator {
  Any = "Any",
  Equal = "Equal",
  Contains = "Contains",
  BeginsWith = "BeginsWith",
  EndsWith = "EndsWith",
  LessThan = "LessThan",
  LessThanOrEqual = "LessThanOrEqual",
  GreaterThan = "GreaterThan",
  GreaterThanOrEqual = "GreaterThanOrEqual",
  RegEx = "RegEx"
}

/**
 * Defines values for UrlFileNameOperator. \
 * {@link KnownUrlFileNameOperator} can be used interchangeably with UrlFileNameOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **Equal** \
 * **Contains** \
 * **BeginsWith** \
 * **EndsWith** \
 * **LessThan** \
 * **LessThanOrEqual** \
 * **GreaterThan** \
 * **GreaterThanOrEqual** \
 * **RegEx**
 */
export type UrlFileNameOperator = string;

/** Known values of {@link HttpVersionOperator} that the service accepts. */
export enum KnownHttpVersionOperator {
  Equal = "Equal"
}

/**
 * Defines values for HttpVersionOperator. \
 * {@link KnownHttpVersionOperator} can be used interchangeably with HttpVersionOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Equal**
 */
export type HttpVersionOperator = string;

/** Known values of {@link CookiesOperator} that the service accepts. */
export enum KnownCookiesOperator {
  Any = "Any",
  Equal = "Equal",
  Contains = "Contains",
  BeginsWith = "BeginsWith",
  EndsWith = "EndsWith",
  LessThan = "LessThan",
  LessThanOrEqual = "LessThanOrEqual",
  GreaterThan = "GreaterThan",
  GreaterThanOrEqual = "GreaterThanOrEqual",
  RegEx = "RegEx"
}

/**
 * Defines values for CookiesOperator. \
 * {@link KnownCookiesOperator} can be used interchangeably with CookiesOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **Equal** \
 * **Contains** \
 * **BeginsWith** \
 * **EndsWith** \
 * **LessThan** \
 * **LessThanOrEqual** \
 * **GreaterThan** \
 * **GreaterThanOrEqual** \
 * **RegEx**
 */
export type CookiesOperator = string;

/** Known values of {@link IsDeviceOperator} that the service accepts. */
export enum KnownIsDeviceOperator {
  Equal = "Equal"
}

/**
 * Defines values for IsDeviceOperator. \
 * {@link KnownIsDeviceOperator} can be used interchangeably with IsDeviceOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Equal**
 */
export type IsDeviceOperator = string;

/** Known values of {@link IsDeviceMatchConditionParametersMatchValuesItem} that the service accepts. */
export enum KnownIsDeviceMatchConditionParametersMatchValuesItem {
  Mobile = "Mobile",
  Desktop = "Desktop"
}

/**
 * Defines values for IsDeviceMatchConditionParametersMatchValuesItem. \
 * {@link KnownIsDeviceMatchConditionParametersMatchValuesItem} can be used interchangeably with IsDeviceMatchConditionParametersMatchValuesItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Mobile** \
 * **Desktop**
 */
export type IsDeviceMatchConditionParametersMatchValuesItem = string;

/** Known values of {@link SocketAddrOperator} that the service accepts. */
export enum KnownSocketAddrOperator {
  Any = "Any",
  IPMatch = "IPMatch"
}

/**
 * Defines values for SocketAddrOperator. \
 * {@link KnownSocketAddrOperator} can be used interchangeably with SocketAddrOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **IPMatch**
 */
export type SocketAddrOperator = string;

/** Known values of {@link ClientPortOperator} that the service accepts. */
export enum KnownClientPortOperator {
  Any = "Any",
  Equal = "Equal",
  Contains = "Contains",
  BeginsWith = "BeginsWith",
  EndsWith = "EndsWith",
  LessThan = "LessThan",
  LessThanOrEqual = "LessThanOrEqual",
  GreaterThan = "GreaterThan",
  GreaterThanOrEqual = "GreaterThanOrEqual",
  RegEx = "RegEx"
}

/**
 * Defines values for ClientPortOperator. \
 * {@link KnownClientPortOperator} can be used interchangeably with ClientPortOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **Equal** \
 * **Contains** \
 * **BeginsWith** \
 * **EndsWith** \
 * **LessThan** \
 * **LessThanOrEqual** \
 * **GreaterThan** \
 * **GreaterThanOrEqual** \
 * **RegEx**
 */
export type ClientPortOperator = string;

/** Known values of {@link ServerPortOperator} that the service accepts. */
export enum KnownServerPortOperator {
  Any = "Any",
  Equal = "Equal",
  Contains = "Contains",
  BeginsWith = "BeginsWith",
  EndsWith = "EndsWith",
  LessThan = "LessThan",
  LessThanOrEqual = "LessThanOrEqual",
  GreaterThan = "GreaterThan",
  GreaterThanOrEqual = "GreaterThanOrEqual",
  RegEx = "RegEx"
}

/**
 * Defines values for ServerPortOperator. \
 * {@link KnownServerPortOperator} can be used interchangeably with ServerPortOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **Equal** \
 * **Contains** \
 * **BeginsWith** \
 * **EndsWith** \
 * **LessThan** \
 * **LessThanOrEqual** \
 * **GreaterThan** \
 * **GreaterThanOrEqual** \
 * **RegEx**
 */
export type ServerPortOperator = string;

/** Known values of {@link HostNameOperator} that the service accepts. */
export enum KnownHostNameOperator {
  Any = "Any",
  Equal = "Equal",
  Contains = "Contains",
  BeginsWith = "BeginsWith",
  EndsWith = "EndsWith",
  LessThan = "LessThan",
  LessThanOrEqual = "LessThanOrEqual",
  GreaterThan = "GreaterThan",
  GreaterThanOrEqual = "GreaterThanOrEqual",
  RegEx = "RegEx"
}

/**
 * Defines values for HostNameOperator. \
 * {@link KnownHostNameOperator} can be used interchangeably with HostNameOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **Equal** \
 * **Contains** \
 * **BeginsWith** \
 * **EndsWith** \
 * **LessThan** \
 * **LessThanOrEqual** \
 * **GreaterThan** \
 * **GreaterThanOrEqual** \
 * **RegEx**
 */
export type HostNameOperator = string;

/** Known values of {@link SslProtocolOperator} that the service accepts. */
export enum KnownSslProtocolOperator {
  Equal = "Equal"
}

/**
 * Defines values for SslProtocolOperator. \
 * {@link KnownSslProtocolOperator} can be used interchangeably with SslProtocolOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Equal**
 */
export type SslProtocolOperator = string;

/** Known values of {@link SslProtocol} that the service accepts. */
export enum KnownSslProtocol {
  TLSv1 = "TLSv1",
  TLSv11 = "TLSv1.1",
  TLSv12 = "TLSv1.2"
}

/**
 * Defines values for SslProtocol. \
 * {@link KnownSslProtocol} can be used interchangeably with SslProtocol,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **TLSv1** \
 * **TLSv1.1** \
 * **TLSv1.2**
 */
export type SslProtocol = string;

/** Known values of {@link RedirectType} that the service accepts. */
export enum KnownRedirectType {
  Moved = "Moved",
  Found = "Found",
  TemporaryRedirect = "TemporaryRedirect",
  PermanentRedirect = "PermanentRedirect"
}

/**
 * Defines values for RedirectType. \
 * {@link KnownRedirectType} can be used interchangeably with RedirectType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Moved** \
 * **Found** \
 * **TemporaryRedirect** \
 * **PermanentRedirect**
 */
export type RedirectType = string;

/** Known values of {@link DestinationProtocol} that the service accepts. */
export enum KnownDestinationProtocol {
  MatchRequest = "MatchRequest",
  Http = "Http",
  Https = "Https"
}

/**
 * Defines values for DestinationProtocol. \
 * {@link KnownDestinationProtocol} can be used interchangeably with DestinationProtocol,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **MatchRequest** \
 * **Http** \
 * **Https**
 */
export type DestinationProtocol = string;

/** Known values of {@link Algorithm} that the service accepts. */
export enum KnownAlgorithm {
  SHA256 = "SHA256"
}

/**
 * Defines values for Algorithm. \
 * {@link KnownAlgorithm} can be used interchangeably with Algorithm,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SHA256**
 */
export type Algorithm = string;

/** Known values of {@link ParamIndicator} that the service accepts. */
export enum KnownParamIndicator {
  Expires = "Expires",
  KeyId = "KeyId",
  Signature = "Signature"
}

/**
 * Defines values for ParamIndicator. \
 * {@link KnownParamIndicator} can be used interchangeably with ParamIndicator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Expires** \
 * **KeyId** \
 * **Signature**
 */
export type ParamIndicator = string;

/** Known values of {@link HeaderAction} that the service accepts. */
export enum KnownHeaderAction {
  Append = "Append",
  Overwrite = "Overwrite",
  Delete = "Delete"
}

/**
 * Defines values for HeaderAction. \
 * {@link KnownHeaderAction} can be used interchangeably with HeaderAction,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Append** \
 * **Overwrite** \
 * **Delete**
 */
export type HeaderAction = string;

/** Known values of {@link CacheBehavior} that the service accepts. */
export enum KnownCacheBehavior {
  BypassCache = "BypassCache",
  Override = "Override",
  SetIfMissing = "SetIfMissing"
}

/**
 * Defines values for CacheBehavior. \
 * {@link KnownCacheBehavior} can be used interchangeably with CacheBehavior,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BypassCache** \
 * **Override** \
 * **SetIfMissing**
 */
export type CacheBehavior = string;

/** Known values of {@link CacheType} that the service accepts. */
export enum KnownCacheType {
  All = "All"
}

/**
 * Defines values for CacheType. \
 * {@link KnownCacheType} can be used interchangeably with CacheType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **All**
 */
export type CacheType = string;

/** Known values of {@link QueryStringBehavior} that the service accepts. */
export enum KnownQueryStringBehavior {
  Include = "Include",
  IncludeAll = "IncludeAll",
  Exclude = "Exclude",
  ExcludeAll = "ExcludeAll"
}

/**
 * Defines values for QueryStringBehavior. \
 * {@link KnownQueryStringBehavior} can be used interchangeably with QueryStringBehavior,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Include** \
 * **IncludeAll** \
 * **Exclude** \
 * **ExcludeAll**
 */
export type QueryStringBehavior = string;

/** Known values of {@link RuleQueryStringCachingBehavior} that the service accepts. */
export enum KnownRuleQueryStringCachingBehavior {
  IgnoreQueryString = "IgnoreQueryString",
  UseQueryString = "UseQueryString",
  IgnoreSpecifiedQueryStrings = "IgnoreSpecifiedQueryStrings",
  IncludeSpecifiedQueryStrings = "IncludeSpecifiedQueryStrings"
}

/**
 * Defines values for RuleQueryStringCachingBehavior. \
 * {@link KnownRuleQueryStringCachingBehavior} can be used interchangeably with RuleQueryStringCachingBehavior,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **IgnoreQueryString** \
 * **UseQueryString** \
 * **IgnoreSpecifiedQueryStrings** \
 * **IncludeSpecifiedQueryStrings**
 */
export type RuleQueryStringCachingBehavior = string;

/** Known values of {@link RuleIsCompressionEnabled} that the service accepts. */
export enum KnownRuleIsCompressionEnabled {
  Enabled = "Enabled",
  Disabled = "Disabled"
}

/**
 * Defines values for RuleIsCompressionEnabled. \
 * {@link KnownRuleIsCompressionEnabled} can be used interchangeably with RuleIsCompressionEnabled,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export type RuleIsCompressionEnabled = string;

/** Known values of {@link RuleCacheBehavior} that the service accepts. */
export enum KnownRuleCacheBehavior {
  HonorOrigin = "HonorOrigin",
  OverrideAlways = "OverrideAlways",
  OverrideIfOriginMissing = "OverrideIfOriginMissing"
}

/**
 * Defines values for RuleCacheBehavior. \
 * {@link KnownRuleCacheBehavior} can be used interchangeably with RuleCacheBehavior,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **HonorOrigin** \
 * **OverrideAlways** \
 * **OverrideIfOriginMissing**
 */
export type RuleCacheBehavior = string;

/** Known values of {@link CertificateType} that the service accepts. */
export enum KnownCertificateType {
  Shared = "Shared",
  Dedicated = "Dedicated"
}

/**
 * Defines values for CertificateType. \
 * {@link KnownCertificateType} can be used interchangeably with CertificateType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Shared** \
 * **Dedicated**
 */
export type CertificateType = string;

/** Known values of {@link UpdateRule} that the service accepts. */
export enum KnownUpdateRule {
  NoAction = "NoAction"
}

/**
 * Defines values for UpdateRule. \
 * {@link KnownUpdateRule} can be used interchangeably with UpdateRule,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NoAction**
 */
export type UpdateRule = string;

/** Known values of {@link DeleteRule} that the service accepts. */
export enum KnownDeleteRule {
  NoAction = "NoAction"
}

/**
 * Defines values for DeleteRule. \
 * {@link KnownDeleteRule} can be used interchangeably with DeleteRule,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NoAction**
 */
export type DeleteRule = string;
/** Defines values for AfdMinimumTlsVersion. */
export type AfdMinimumTlsVersion = "TLS10" | "TLS12";
/** Defines values for HealthProbeRequestType. */
export type HealthProbeRequestType = "NotSet" | "GET" | "HEAD";
/** Defines values for ProbeProtocol. */
export type ProbeProtocol = "NotSet" | "Http" | "Https";
/** Defines values for SharedPrivateLinkResourceStatus. */
export type SharedPrivateLinkResourceStatus =
  | "Pending"
  | "Approved"
  | "Rejected"
  | "Disconnected"
  | "Timeout";
/** Defines values for ResponseBasedDetectedErrorTypes. */
export type ResponseBasedDetectedErrorTypes =
  | "None"
  | "TcpErrorsOnly"
  | "TcpAndHttpErrors";
/** Defines values for MinimumTlsVersion. */
export type MinimumTlsVersion = "None" | "TLS10" | "TLS12";
/** Defines values for QueryStringCachingBehavior. */
export type QueryStringCachingBehavior =
  | "IgnoreQueryString"
  | "BypassCaching"
  | "UseQueryString"
  | "NotSet";
/** Defines values for GeoFilterActions. */
export type GeoFilterActions = "Block" | "Allow";

/** Optional parameters. */
export interface CheckEndpointNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkEndpointNameAvailability operation. */
export type CheckEndpointNameAvailabilityResponse = CheckEndpointNameAvailabilityOutput;

/** Optional parameters. */
export interface CheckNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkNameAvailability operation. */
export type CheckNameAvailabilityResponse = CheckNameAvailabilityOutput;

/** Optional parameters. */
export interface CheckNameAvailabilityWithSubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkNameAvailabilityWithSubscription operation. */
export type CheckNameAvailabilityWithSubscriptionResponse = CheckNameAvailabilityOutput;

/** Optional parameters. */
export interface ValidateProbeOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the validateProbe operation. */
export type ValidateProbeResponse = ValidateProbeOutput;

/** Optional parameters. */
export interface AfdProfilesListResourceUsageOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listResourceUsage operation. */
export type AfdProfilesListResourceUsageResponse = UsagesListResult;

/** Optional parameters. */
export interface AfdProfilesCheckHostNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkHostNameAvailability operation. */
export type AfdProfilesCheckHostNameAvailabilityResponse = CheckNameAvailabilityOutput;

/** Optional parameters. */
export interface AfdProfilesListResourceUsageNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listResourceUsageNext operation. */
export type AfdProfilesListResourceUsageNextResponse = UsagesListResult;

/** Optional parameters. */
export interface AfdCustomDomainsListByProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByProfile operation. */
export type AfdCustomDomainsListByProfileResponse = AFDDomainListResult;

/** Optional parameters. */
export interface AfdCustomDomainsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AfdCustomDomainsGetResponse = AFDDomain;

/** Optional parameters. */
export interface AfdCustomDomainsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type AfdCustomDomainsCreateResponse = AFDDomain;

/** Optional parameters. */
export interface AfdCustomDomainsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type AfdCustomDomainsUpdateResponse = AFDDomain;

/** Optional parameters. */
export interface AfdCustomDomainsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface AfdCustomDomainsRefreshValidationTokenOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface AfdCustomDomainsListByProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByProfileNext operation. */
export type AfdCustomDomainsListByProfileNextResponse = AFDDomainListResult;

/** Optional parameters. */
export interface AfdEndpointsListByProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByProfile operation. */
export type AfdEndpointsListByProfileResponse = AFDEndpointListResult;

/** Optional parameters. */
export interface AfdEndpointsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AfdEndpointsGetResponse = AFDEndpoint;

/** Optional parameters. */
export interface AfdEndpointsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type AfdEndpointsCreateResponse = AFDEndpoint;

/** Optional parameters. */
export interface AfdEndpointsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type AfdEndpointsUpdateResponse = AFDEndpoint;

/** Optional parameters. */
export interface AfdEndpointsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface AfdEndpointsPurgeContentOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface AfdEndpointsListResourceUsageOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listResourceUsage operation. */
export type AfdEndpointsListResourceUsageResponse = UsagesListResult;

/** Optional parameters. */
export interface AfdEndpointsValidateCustomDomainOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the validateCustomDomain operation. */
export type AfdEndpointsValidateCustomDomainResponse = ValidateCustomDomainOutput;

/** Optional parameters. */
export interface AfdEndpointsListByProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByProfileNext operation. */
export type AfdEndpointsListByProfileNextResponse = AFDEndpointListResult;

/** Optional parameters. */
export interface AfdEndpointsListResourceUsageNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listResourceUsageNext operation. */
export type AfdEndpointsListResourceUsageNextResponse = UsagesListResult;

/** Optional parameters. */
export interface AfdOriginGroupsListByProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByProfile operation. */
export type AfdOriginGroupsListByProfileResponse = AFDOriginGroupListResult;

/** Optional parameters. */
export interface AfdOriginGroupsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AfdOriginGroupsGetResponse = AFDOriginGroup;

/** Optional parameters. */
export interface AfdOriginGroupsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type AfdOriginGroupsCreateResponse = AFDOriginGroup;

/** Optional parameters. */
export interface AfdOriginGroupsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type AfdOriginGroupsUpdateResponse = AFDOriginGroup;

/** Optional parameters. */
export interface AfdOriginGroupsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface AfdOriginGroupsListResourceUsageOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listResourceUsage operation. */
export type AfdOriginGroupsListResourceUsageResponse = UsagesListResult;

/** Optional parameters. */
export interface AfdOriginGroupsListByProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByProfileNext operation. */
export type AfdOriginGroupsListByProfileNextResponse = AFDOriginGroupListResult;

/** Optional parameters. */
export interface AfdOriginGroupsListResourceUsageNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listResourceUsageNext operation. */
export type AfdOriginGroupsListResourceUsageNextResponse = UsagesListResult;

/** Optional parameters. */
export interface AfdOriginsListByOriginGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByOriginGroup operation. */
export type AfdOriginsListByOriginGroupResponse = AFDOriginListResult;

/** Optional parameters. */
export interface AfdOriginsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AfdOriginsGetResponse = AFDOrigin;

/** Optional parameters. */
export interface AfdOriginsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type AfdOriginsCreateResponse = AFDOrigin;

/** Optional parameters. */
export interface AfdOriginsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type AfdOriginsUpdateResponse = AFDOrigin;

/** Optional parameters. */
export interface AfdOriginsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface AfdOriginsListByOriginGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByOriginGroupNext operation. */
export type AfdOriginsListByOriginGroupNextResponse = AFDOriginListResult;

/** Optional parameters. */
export interface RoutesListByEndpointOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByEndpoint operation. */
export type RoutesListByEndpointResponse = RouteListResult;

/** Optional parameters. */
export interface RoutesGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type RoutesGetResponse = Route;

/** Optional parameters. */
export interface RoutesCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type RoutesCreateResponse = Route;

/** Optional parameters. */
export interface RoutesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type RoutesUpdateResponse = Route;

/** Optional parameters. */
export interface RoutesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface RoutesListByEndpointNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByEndpointNext operation. */
export type RoutesListByEndpointNextResponse = RouteListResult;

/** Optional parameters. */
export interface RuleSetsListByProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByProfile operation. */
export type RuleSetsListByProfileResponse = RuleSetListResult;

/** Optional parameters. */
export interface RuleSetsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type RuleSetsGetResponse = RuleSet;

/** Optional parameters. */
export interface RuleSetsCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type RuleSetsCreateResponse = RuleSet;

/** Optional parameters. */
export interface RuleSetsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface RuleSetsListResourceUsageOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listResourceUsage operation. */
export type RuleSetsListResourceUsageResponse = UsagesListResult;

/** Optional parameters. */
export interface RuleSetsListByProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByProfileNext operation. */
export type RuleSetsListByProfileNextResponse = RuleSetListResult;

/** Optional parameters. */
export interface RuleSetsListResourceUsageNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listResourceUsageNext operation. */
export type RuleSetsListResourceUsageNextResponse = UsagesListResult;

/** Optional parameters. */
export interface RulesListByRuleSetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByRuleSet operation. */
export type RulesListByRuleSetResponse = RuleListResult;

/** Optional parameters. */
export interface RulesGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type RulesGetResponse = Rule;

/** Optional parameters. */
export interface RulesCreateOptionalParams extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type RulesCreateResponse = Rule;

/** Optional parameters. */
export interface RulesUpdateOptionalParams extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type RulesUpdateResponse = Rule;

/** Optional parameters. */
export interface RulesDeleteOptionalParams extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface RulesListByRuleSetNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByRuleSetNext operation. */
export type RulesListByRuleSetNextResponse = RuleListResult;

/** Optional parameters. */
export interface SecurityPoliciesListByProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByProfile operation. */
export type SecurityPoliciesListByProfileResponse = SecurityPolicyListResult;

/** Optional parameters. */
export interface SecurityPoliciesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SecurityPoliciesGetResponse = SecurityPolicy;

/** Optional parameters. */
export interface SecurityPoliciesCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type SecurityPoliciesCreateResponse = SecurityPolicy;

/** Optional parameters. */
export interface SecurityPoliciesPatchOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the patch operation. */
export type SecurityPoliciesPatchResponse = SecurityPolicy;

/** Optional parameters. */
export interface SecurityPoliciesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface SecurityPoliciesListByProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByProfileNext operation. */
export type SecurityPoliciesListByProfileNextResponse = SecurityPolicyListResult;

/** Optional parameters. */
export interface SecretsListByProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByProfile operation. */
export type SecretsListByProfileResponse = SecretListResult;

/** Optional parameters. */
export interface SecretsGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SecretsGetResponse = Secret;

/** Optional parameters. */
export interface SecretsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type SecretsCreateResponse = Secret;

/** Optional parameters. */
export interface SecretsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface SecretsListByProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByProfileNext operation. */
export type SecretsListByProfileNextResponse = SecretListResult;

/** Optional parameters. */
export interface ValidateSecretOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the secret operation. */
export type ValidateSecretResponse = ValidateSecretOutput;

/** Optional parameters. */
export interface LogAnalyticsGetLogAnalyticsMetricsOptionalParams
  extends coreClient.OperationOptions {
  /** Array of LogMetricsGroupBy */
  groupBy?: LogMetricsGroupBy[];
  /** Array of Get9ItemsItem */
  continents?: string[];
  /** Array of Get10ItemsItem */
  countryOrRegions?: string[];
}

/** Contains response data for the getLogAnalyticsMetrics operation. */
export type LogAnalyticsGetLogAnalyticsMetricsResponse = MetricsResponse;

/** Optional parameters. */
export interface LogAnalyticsGetLogAnalyticsRankingsOptionalParams
  extends coreClient.OperationOptions {
  /** Array of String */
  customDomains?: string[];
}

/** Contains response data for the getLogAnalyticsRankings operation. */
export type LogAnalyticsGetLogAnalyticsRankingsResponse = RankingsResponse;

/** Optional parameters. */
export interface LogAnalyticsGetLogAnalyticsLocationsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getLogAnalyticsLocations operation. */
export type LogAnalyticsGetLogAnalyticsLocationsResponse = ContinentsResponse;

/** Optional parameters. */
export interface LogAnalyticsGetLogAnalyticsResourcesOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getLogAnalyticsResources operation. */
export type LogAnalyticsGetLogAnalyticsResourcesResponse = ResourcesResponse;

/** Optional parameters. */
export interface LogAnalyticsGetWafLogAnalyticsMetricsOptionalParams
  extends coreClient.OperationOptions {
  /** Array of WafAction */
  actions?: WafAction[];
  /** Array of WafRankingGroupBy */
  groupBy?: WafRankingGroupBy[];
  /** Array of WafRuleType */
  ruleTypes?: WafRuleType[];
}

/** Contains response data for the getWafLogAnalyticsMetrics operation. */
export type LogAnalyticsGetWafLogAnalyticsMetricsResponse = WafMetricsResponse;

/** Optional parameters. */
export interface LogAnalyticsGetWafLogAnalyticsRankingsOptionalParams
  extends coreClient.OperationOptions {
  /** Array of WafAction */
  actions?: WafAction[];
  /** Array of WafRuleType */
  ruleTypes?: WafRuleType[];
}

/** Contains response data for the getWafLogAnalyticsRankings operation. */
export type LogAnalyticsGetWafLogAnalyticsRankingsResponse = WafRankingsResponse;

/** Optional parameters. */
export interface ProfilesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ProfilesListResponse = ProfileListResult;

/** Optional parameters. */
export interface ProfilesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type ProfilesListByResourceGroupResponse = ProfileListResult;

/** Optional parameters. */
export interface ProfilesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ProfilesGetResponse = Profile;

/** Optional parameters. */
export interface ProfilesCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ProfilesCreateResponse = Profile;

/** Optional parameters. */
export interface ProfilesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type ProfilesUpdateResponse = Profile;

/** Optional parameters. */
export interface ProfilesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ProfilesGenerateSsoUriOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the generateSsoUri operation. */
export type ProfilesGenerateSsoUriResponse = SsoUri;

/** Optional parameters. */
export interface ProfilesListSupportedOptimizationTypesOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listSupportedOptimizationTypes operation. */
export type ProfilesListSupportedOptimizationTypesResponse = SupportedOptimizationTypesListResult;

/** Optional parameters. */
export interface ProfilesListResourceUsageOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listResourceUsage operation. */
export type ProfilesListResourceUsageResponse = ResourceUsageListResult;

/** Optional parameters. */
export interface ProfilesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ProfilesListNextResponse = ProfileListResult;

/** Optional parameters. */
export interface ProfilesListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type ProfilesListByResourceGroupNextResponse = ProfileListResult;

/** Optional parameters. */
export interface ProfilesListResourceUsageNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listResourceUsageNext operation. */
export type ProfilesListResourceUsageNextResponse = ResourceUsageListResult;

/** Optional parameters. */
export interface EndpointsListByProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByProfile operation. */
export type EndpointsListByProfileResponse = EndpointListResult;

/** Optional parameters. */
export interface EndpointsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type EndpointsGetResponse = Endpoint;

/** Optional parameters. */
export interface EndpointsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type EndpointsCreateResponse = Endpoint;

/** Optional parameters. */
export interface EndpointsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type EndpointsUpdateResponse = Endpoint;

/** Optional parameters. */
export interface EndpointsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface EndpointsStartOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the start operation. */
export type EndpointsStartResponse = Endpoint;

/** Optional parameters. */
export interface EndpointsStopOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the stop operation. */
export type EndpointsStopResponse = Endpoint;

/** Optional parameters. */
export interface EndpointsPurgeContentOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface EndpointsLoadContentOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface EndpointsValidateCustomDomainOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the validateCustomDomain operation. */
export type EndpointsValidateCustomDomainResponse = ValidateCustomDomainOutput;

/** Optional parameters. */
export interface EndpointsListResourceUsageOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listResourceUsage operation. */
export type EndpointsListResourceUsageResponse = ResourceUsageListResult;

/** Optional parameters. */
export interface EndpointsListByProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByProfileNext operation. */
export type EndpointsListByProfileNextResponse = EndpointListResult;

/** Optional parameters. */
export interface EndpointsListResourceUsageNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listResourceUsageNext operation. */
export type EndpointsListResourceUsageNextResponse = ResourceUsageListResult;

/** Optional parameters. */
export interface OriginsListByEndpointOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByEndpoint operation. */
export type OriginsListByEndpointResponse = OriginListResult;

/** Optional parameters. */
export interface OriginsGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type OriginsGetResponse = Origin;

/** Optional parameters. */
export interface OriginsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type OriginsCreateResponse = Origin;

/** Optional parameters. */
export interface OriginsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type OriginsUpdateResponse = Origin;

/** Optional parameters. */
export interface OriginsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface OriginsListByEndpointNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByEndpointNext operation. */
export type OriginsListByEndpointNextResponse = OriginListResult;

/** Optional parameters. */
export interface OriginGroupsListByEndpointOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByEndpoint operation. */
export type OriginGroupsListByEndpointResponse = OriginGroupListResult;

/** Optional parameters. */
export interface OriginGroupsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type OriginGroupsGetResponse = OriginGroup;

/** Optional parameters. */
export interface OriginGroupsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type OriginGroupsCreateResponse = OriginGroup;

/** Optional parameters. */
export interface OriginGroupsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type OriginGroupsUpdateResponse = OriginGroup;

/** Optional parameters. */
export interface OriginGroupsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface OriginGroupsListByEndpointNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByEndpointNext operation. */
export type OriginGroupsListByEndpointNextResponse = OriginGroupListResult;

/** Optional parameters. */
export interface CustomDomainsListByEndpointOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByEndpoint operation. */
export type CustomDomainsListByEndpointResponse = CustomDomainListResult;

/** Optional parameters. */
export interface CustomDomainsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type CustomDomainsGetResponse = CustomDomain;

/** Optional parameters. */
export interface CustomDomainsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type CustomDomainsCreateResponse = CustomDomain;

/** Optional parameters. */
export interface CustomDomainsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface CustomDomainsDisableCustomHttpsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the disableCustomHttps operation. */
export type CustomDomainsDisableCustomHttpsResponse = CustomDomain;

/** Optional parameters. */
export interface CustomDomainsEnableCustomHttpsOptionalParams
  extends coreClient.OperationOptions {
  /** The configuration specifying how to enable HTTPS for the custom domain - using CDN managed certificate or user's own certificate. If not specified, enabling ssl uses CDN managed certificate by default. */
  customDomainHttpsParameters?: CustomDomainHttpsParametersUnion;
}

/** Contains response data for the enableCustomHttps operation. */
export type CustomDomainsEnableCustomHttpsResponse = CustomDomain;

/** Optional parameters. */
export interface CustomDomainsListByEndpointNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByEndpointNext operation. */
export type CustomDomainsListByEndpointNextResponse = CustomDomainListResult;

/** Optional parameters. */
export interface ResourceUsageListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ResourceUsageListResponse = ResourceUsageListResult;

/** Optional parameters. */
export interface ResourceUsageListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ResourceUsageListNextResponse = ResourceUsageListResult;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationsListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationsListResult;

/** Optional parameters. */
export interface EdgeNodesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type EdgeNodesListResponse = EdgenodeResult;

/** Optional parameters. */
export interface EdgeNodesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type EdgeNodesListNextResponse = EdgenodeResult;

/** Optional parameters. */
export interface PoliciesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type PoliciesListResponse = CdnWebApplicationFirewallPolicyList;

/** Optional parameters. */
export interface PoliciesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PoliciesGetResponse = CdnWebApplicationFirewallPolicy;

/** Optional parameters. */
export interface PoliciesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type PoliciesCreateOrUpdateResponse = CdnWebApplicationFirewallPolicy;

/** Optional parameters. */
export interface PoliciesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type PoliciesUpdateResponse = CdnWebApplicationFirewallPolicy;

/** Optional parameters. */
export interface PoliciesDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface PoliciesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type PoliciesListNextResponse = CdnWebApplicationFirewallPolicyList;

/** Optional parameters. */
export interface ManagedRuleSetsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ManagedRuleSetsListResponse = ManagedRuleSetDefinitionList;

/** Optional parameters. */
export interface ManagedRuleSetsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ManagedRuleSetsListNextResponse = ManagedRuleSetDefinitionList;

/** Optional parameters. */
export interface CdnManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
