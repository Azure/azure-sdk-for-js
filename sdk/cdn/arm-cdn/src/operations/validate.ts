/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/validateMappers";
import * as Parameters from "../models/parameters";
import { CdnManagementClientContext } from "../cdnManagementClientContext";

/** Class representing a Validate. */
export class Validate {
  private readonly client: CdnManagementClientContext;

  /**
   * Create a Validate.
   * @param {CdnManagementClientContext} client Reference to the service client.
   */
  constructor(client: CdnManagementClientContext) {
    this.client = client;
  }

  /**
   * Validate a Secret in the profile.
   * @param secretSource The secret source.
   * @param secretType The secret type. Possible values include: 'UrlSigningKey',
   * 'ManagedCertificate', 'CustomerCertificate'
   * @param [options] The optional parameters
   * @returns Promise<Models.ValidateSecretMethodResponse>
   */
  secretMethod(secretSource: Models.ResourceReference, secretType: Models.ValidateSecretType, options?: msRest.RequestOptionsBase): Promise<Models.ValidateSecretMethodResponse>;
  /**
   * @param secretSource The secret source.
   * @param secretType The secret type. Possible values include: 'UrlSigningKey',
   * 'ManagedCertificate', 'CustomerCertificate'
   * @param callback The callback
   */
  secretMethod(secretSource: Models.ResourceReference, secretType: Models.ValidateSecretType, callback: msRest.ServiceCallback<Models.ValidateSecretOutput>): void;
  /**
   * @param secretSource The secret source.
   * @param secretType The secret type. Possible values include: 'UrlSigningKey',
   * 'ManagedCertificate', 'CustomerCertificate'
   * @param options The optional parameters
   * @param callback The callback
   */
  secretMethod(secretSource: Models.ResourceReference, secretType: Models.ValidateSecretType, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ValidateSecretOutput>): void;
  secretMethod(secretSource: Models.ResourceReference, secretType: Models.ValidateSecretType, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ValidateSecretOutput>, callback?: msRest.ServiceCallback<Models.ValidateSecretOutput>): Promise<Models.ValidateSecretMethodResponse> {
    return this.client.sendOperationRequest(
      {
        secretSource,
        secretType,
        options
      },
      secretMethodOperationSpec,
      callback) as Promise<Models.ValidateSecretMethodResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const secretMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.Cdn/validateSecret",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: {
      secretSource: "secretSource",
      secretType: "secretType"
    },
    mapper: {
      ...Mappers.ValidateSecretInput,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.ValidateSecretOutput
    },
    default: {
      bodyMapper: Mappers.AfdErrorResponse
    }
  },
  serializer
};
