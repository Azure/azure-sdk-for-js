/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { Validate } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { CdnManagementClient } from "../cdnManagementClient";
import {
  ValidateSecretInput,
  ValidateSecretOptionalParams,
  ValidateSecretResponse
} from "../models";

/** Class containing Validate operations. */
export class ValidateImpl implements Validate {
  private readonly client: CdnManagementClient;

  /**
   * Initialize a new instance of the class Validate class.
   * @param client Reference to the service client
   */
  constructor(client: CdnManagementClient) {
    this.client = client;
  }

  /**
   * Validate a Secret in the profile.
   * @param validateSecretInput The Secret source.
   * @param options The options parameters.
   */
  secret(
    validateSecretInput: ValidateSecretInput,
    options?: ValidateSecretOptionalParams
  ): Promise<ValidateSecretResponse> {
    return this.client.sendOperationRequest(
      { validateSecretInput, options },
      secretOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const secretOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/providers/Microsoft.Cdn/validateSecret",
  httpMethod: "POST",
  responses: {
    200: {
      bodyMapper: Mappers.ValidateSecretOutput
    },
    default: {
      bodyMapper: Mappers.AfdErrorResponse
    }
  },
  requestBody: Parameters.validateSecretInput,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.$host, Parameters.subscriptionId],
  headerParameters: [Parameters.contentType, Parameters.accept],
  mediaType: "json",
  serializer
};
