/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/aFDProfilesMappers";
import * as Parameters from "../models/parameters";
import { CdnManagementClientContext } from "../cdnManagementClientContext";

/** Class representing a AFDProfiles. */
export class AFDProfiles {
  private readonly client: CdnManagementClientContext;

  /**
   * Create a AFDProfiles.
   * @param {CdnManagementClientContext} client Reference to the service client.
   */
  constructor(client: CdnManagementClientContext) {
    this.client = client;
  }

  /**
   * Checks the quota and actual usage of endpoints under the given CDN profile.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param profileName Name of the CDN profile which is unique within the resource group.
   * @param [options] The optional parameters
   * @returns Promise<Models.AFDProfilesListResourceUsageResponse>
   */
  listResourceUsage(resourceGroupName: string, profileName: string, options?: msRest.RequestOptionsBase): Promise<Models.AFDProfilesListResourceUsageResponse>;
  /**
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param profileName Name of the CDN profile which is unique within the resource group.
   * @param callback The callback
   */
  listResourceUsage(resourceGroupName: string, profileName: string, callback: msRest.ServiceCallback<Models.UsagesListResult>): void;
  /**
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param profileName Name of the CDN profile which is unique within the resource group.
   * @param options The optional parameters
   * @param callback The callback
   */
  listResourceUsage(resourceGroupName: string, profileName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.UsagesListResult>): void;
  listResourceUsage(resourceGroupName: string, profileName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.UsagesListResult>, callback?: msRest.ServiceCallback<Models.UsagesListResult>): Promise<Models.AFDProfilesListResourceUsageResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        profileName,
        options
      },
      listResourceUsageOperationSpec,
      callback) as Promise<Models.AFDProfilesListResourceUsageResponse>;
  }

  /**
   * Validates the custom domain mapping to ensure it maps to the correct CDN endpoint in DNS.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param profileName Name of the CDN profile which is unique within the resource group.
   * @param hostName The host name of the custom domain. Must be a domain name.
   * @param [options] The optional parameters
   * @returns Promise<Models.AFDProfilesCheckHostNameAvailabilityResponse>
   */
  checkHostNameAvailability(resourceGroupName: string, profileName: string, hostName: string, options?: msRest.RequestOptionsBase): Promise<Models.AFDProfilesCheckHostNameAvailabilityResponse>;
  /**
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param profileName Name of the CDN profile which is unique within the resource group.
   * @param hostName The host name of the custom domain. Must be a domain name.
   * @param callback The callback
   */
  checkHostNameAvailability(resourceGroupName: string, profileName: string, hostName: string, callback: msRest.ServiceCallback<Models.ValidateCustomDomainOutput>): void;
  /**
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param profileName Name of the CDN profile which is unique within the resource group.
   * @param hostName The host name of the custom domain. Must be a domain name.
   * @param options The optional parameters
   * @param callback The callback
   */
  checkHostNameAvailability(resourceGroupName: string, profileName: string, hostName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ValidateCustomDomainOutput>): void;
  checkHostNameAvailability(resourceGroupName: string, profileName: string, hostName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ValidateCustomDomainOutput>, callback?: msRest.ServiceCallback<Models.ValidateCustomDomainOutput>): Promise<Models.AFDProfilesCheckHostNameAvailabilityResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        profileName,
        hostName,
        options
      },
      checkHostNameAvailabilityOperationSpec,
      callback) as Promise<Models.AFDProfilesCheckHostNameAvailabilityResponse>;
  }

  /**
   * Checks the quota and actual usage of endpoints under the given CDN profile.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.AFDProfilesListResourceUsageNextResponse>
   */
  listResourceUsageNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AFDProfilesListResourceUsageNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listResourceUsageNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.UsagesListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listResourceUsageNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.UsagesListResult>): void;
  listResourceUsageNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.UsagesListResult>, callback?: msRest.ServiceCallback<Models.UsagesListResult>): Promise<Models.AFDProfilesListResourceUsageNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listResourceUsageNextOperationSpec,
      callback) as Promise<Models.AFDProfilesListResourceUsageNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listResourceUsageOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/usages",
  urlParameters: [
    Parameters.resourceGroupName0,
    Parameters.profileName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.UsagesListResult
    },
    default: {
      bodyMapper: Mappers.AfdErrorResponse
    }
  },
  serializer
};

const checkHostNameAvailabilityOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/checkHostNameAvailability",
  urlParameters: [
    Parameters.resourceGroupName0,
    Parameters.profileName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: {
      hostName: "hostName"
    },
    mapper: {
      ...Mappers.ValidateCustomDomainInput,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.ValidateCustomDomainOutput
    },
    default: {
      bodyMapper: Mappers.AfdErrorResponse
    }
  },
  serializer
};

const listResourceUsageNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.UsagesListResult
    },
    default: {
      bodyMapper: Mappers.AfdErrorResponse
    }
  },
  serializer
};
