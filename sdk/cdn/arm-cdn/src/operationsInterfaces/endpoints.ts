/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  Endpoint,
  EndpointsListByProfileOptionalParams,
  ResourceUsage,
  EndpointsListResourceUsageOptionalParams,
  EndpointsGetOptionalParams,
  EndpointsGetResponse,
  EndpointsCreateOptionalParams,
  EndpointsCreateResponse,
  EndpointUpdateParameters,
  EndpointsUpdateOptionalParams,
  EndpointsUpdateResponse,
  EndpointsDeleteOptionalParams,
  EndpointsStartOptionalParams,
  EndpointsStartResponse,
  EndpointsStopOptionalParams,
  EndpointsStopResponse,
  PurgeParameters,
  EndpointsPurgeContentOptionalParams,
  LoadParameters,
  EndpointsLoadContentOptionalParams,
  ValidateCustomDomainInput,
  EndpointsValidateCustomDomainOptionalParams,
  EndpointsValidateCustomDomainResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Endpoints. */
export interface Endpoints {
  /**
   * Lists existing CDN endpoints.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param profileName Name of the CDN profile which is unique within the resource group.
   * @param options The options parameters.
   */
  listByProfile(
    resourceGroupName: string,
    profileName: string,
    options?: EndpointsListByProfileOptionalParams
  ): PagedAsyncIterableIterator<Endpoint>;
  /**
   * Checks the quota and usage of geo filters and custom domains under the given endpoint.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param profileName Name of the CDN profile which is unique within the resource group.
   * @param endpointName Name of the endpoint under the profile which is unique globally.
   * @param options The options parameters.
   */
  listResourceUsage(
    resourceGroupName: string,
    profileName: string,
    endpointName: string,
    options?: EndpointsListResourceUsageOptionalParams
  ): PagedAsyncIterableIterator<ResourceUsage>;
  /**
   * Gets an existing CDN endpoint with the specified endpoint name under the specified subscription,
   * resource group and profile.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param profileName Name of the CDN profile which is unique within the resource group.
   * @param endpointName Name of the endpoint under the profile which is unique globally.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    profileName: string,
    endpointName: string,
    options?: EndpointsGetOptionalParams
  ): Promise<EndpointsGetResponse>;
  /**
   * Creates a new CDN endpoint with the specified endpoint name under the specified subscription,
   * resource group and profile.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param profileName Name of the CDN profile which is unique within the resource group.
   * @param endpointName Name of the endpoint under the profile which is unique globally.
   * @param endpoint Endpoint properties
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    profileName: string,
    endpointName: string,
    endpoint: Endpoint,
    options?: EndpointsCreateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<EndpointsCreateResponse>,
      EndpointsCreateResponse
    >
  >;
  /**
   * Creates a new CDN endpoint with the specified endpoint name under the specified subscription,
   * resource group and profile.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param profileName Name of the CDN profile which is unique within the resource group.
   * @param endpointName Name of the endpoint under the profile which is unique globally.
   * @param endpoint Endpoint properties
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    profileName: string,
    endpointName: string,
    endpoint: Endpoint,
    options?: EndpointsCreateOptionalParams
  ): Promise<EndpointsCreateResponse>;
  /**
   * Updates an existing CDN endpoint with the specified endpoint name under the specified subscription,
   * resource group and profile. Only tags can be updated after creating an endpoint. To update origins,
   * use the Update Origin operation. To update origin groups, use the Update Origin group operation. To
   * update custom domains, use the Update Custom Domain operation.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param profileName Name of the CDN profile which is unique within the resource group.
   * @param endpointName Name of the endpoint under the profile which is unique globally.
   * @param endpointUpdateProperties Endpoint update properties
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    profileName: string,
    endpointName: string,
    endpointUpdateProperties: EndpointUpdateParameters,
    options?: EndpointsUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<EndpointsUpdateResponse>,
      EndpointsUpdateResponse
    >
  >;
  /**
   * Updates an existing CDN endpoint with the specified endpoint name under the specified subscription,
   * resource group and profile. Only tags can be updated after creating an endpoint. To update origins,
   * use the Update Origin operation. To update origin groups, use the Update Origin group operation. To
   * update custom domains, use the Update Custom Domain operation.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param profileName Name of the CDN profile which is unique within the resource group.
   * @param endpointName Name of the endpoint under the profile which is unique globally.
   * @param endpointUpdateProperties Endpoint update properties
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    profileName: string,
    endpointName: string,
    endpointUpdateProperties: EndpointUpdateParameters,
    options?: EndpointsUpdateOptionalParams
  ): Promise<EndpointsUpdateResponse>;
  /**
   * Deletes an existing CDN endpoint with the specified endpoint name under the specified subscription,
   * resource group and profile.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param profileName Name of the CDN profile which is unique within the resource group.
   * @param endpointName Name of the endpoint under the profile which is unique globally.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    profileName: string,
    endpointName: string,
    options?: EndpointsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes an existing CDN endpoint with the specified endpoint name under the specified subscription,
   * resource group and profile.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param profileName Name of the CDN profile which is unique within the resource group.
   * @param endpointName Name of the endpoint under the profile which is unique globally.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    profileName: string,
    endpointName: string,
    options?: EndpointsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Starts an existing CDN endpoint that is on a stopped state.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param profileName Name of the CDN profile which is unique within the resource group.
   * @param endpointName Name of the endpoint under the profile which is unique globally.
   * @param options The options parameters.
   */
  beginStart(
    resourceGroupName: string,
    profileName: string,
    endpointName: string,
    options?: EndpointsStartOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<EndpointsStartResponse>,
      EndpointsStartResponse
    >
  >;
  /**
   * Starts an existing CDN endpoint that is on a stopped state.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param profileName Name of the CDN profile which is unique within the resource group.
   * @param endpointName Name of the endpoint under the profile which is unique globally.
   * @param options The options parameters.
   */
  beginStartAndWait(
    resourceGroupName: string,
    profileName: string,
    endpointName: string,
    options?: EndpointsStartOptionalParams
  ): Promise<EndpointsStartResponse>;
  /**
   * Stops an existing running CDN endpoint.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param profileName Name of the CDN profile which is unique within the resource group.
   * @param endpointName Name of the endpoint under the profile which is unique globally.
   * @param options The options parameters.
   */
  beginStop(
    resourceGroupName: string,
    profileName: string,
    endpointName: string,
    options?: EndpointsStopOptionalParams
  ): Promise<
    PollerLike<PollOperationState<EndpointsStopResponse>, EndpointsStopResponse>
  >;
  /**
   * Stops an existing running CDN endpoint.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param profileName Name of the CDN profile which is unique within the resource group.
   * @param endpointName Name of the endpoint under the profile which is unique globally.
   * @param options The options parameters.
   */
  beginStopAndWait(
    resourceGroupName: string,
    profileName: string,
    endpointName: string,
    options?: EndpointsStopOptionalParams
  ): Promise<EndpointsStopResponse>;
  /**
   * Removes a content from CDN.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param profileName Name of the CDN profile which is unique within the resource group.
   * @param endpointName Name of the endpoint under the profile which is unique globally.
   * @param contentFilePaths The path to the content to be purged. Path can be a full URL, e.g.
   *                         '/pictures/city.png' which removes a single file, or a directory with a wildcard, e.g. '/pictures/*'
   *                         which removes all folders and files in the directory.
   * @param options The options parameters.
   */
  beginPurgeContent(
    resourceGroupName: string,
    profileName: string,
    endpointName: string,
    contentFilePaths: PurgeParameters,
    options?: EndpointsPurgeContentOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Removes a content from CDN.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param profileName Name of the CDN profile which is unique within the resource group.
   * @param endpointName Name of the endpoint under the profile which is unique globally.
   * @param contentFilePaths The path to the content to be purged. Path can be a full URL, e.g.
   *                         '/pictures/city.png' which removes a single file, or a directory with a wildcard, e.g. '/pictures/*'
   *                         which removes all folders and files in the directory.
   * @param options The options parameters.
   */
  beginPurgeContentAndWait(
    resourceGroupName: string,
    profileName: string,
    endpointName: string,
    contentFilePaths: PurgeParameters,
    options?: EndpointsPurgeContentOptionalParams
  ): Promise<void>;
  /**
   * Pre-loads a content to CDN. Available for Verizon Profiles.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param profileName Name of the CDN profile which is unique within the resource group.
   * @param endpointName Name of the endpoint under the profile which is unique globally.
   * @param contentFilePaths The path to the content to be loaded. Path should be a full URL, e.g.
   *                         ‘/pictures/city.png' which loads a single file
   * @param options The options parameters.
   */
  beginLoadContent(
    resourceGroupName: string,
    profileName: string,
    endpointName: string,
    contentFilePaths: LoadParameters,
    options?: EndpointsLoadContentOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Pre-loads a content to CDN. Available for Verizon Profiles.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param profileName Name of the CDN profile which is unique within the resource group.
   * @param endpointName Name of the endpoint under the profile which is unique globally.
   * @param contentFilePaths The path to the content to be loaded. Path should be a full URL, e.g.
   *                         ‘/pictures/city.png' which loads a single file
   * @param options The options parameters.
   */
  beginLoadContentAndWait(
    resourceGroupName: string,
    profileName: string,
    endpointName: string,
    contentFilePaths: LoadParameters,
    options?: EndpointsLoadContentOptionalParams
  ): Promise<void>;
  /**
   * Validates the custom domain mapping to ensure it maps to the correct CDN endpoint in DNS.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param profileName Name of the CDN profile which is unique within the resource group.
   * @param endpointName Name of the endpoint under the profile which is unique globally.
   * @param customDomainProperties Custom domain to be validated.
   * @param options The options parameters.
   */
  validateCustomDomain(
    resourceGroupName: string,
    profileName: string,
    endpointName: string,
    customDomainProperties: ValidateCustomDomainInput,
    options?: EndpointsValidateCustomDomainOptionalParams
  ): Promise<EndpointsValidateCustomDomainResponse>;
}
