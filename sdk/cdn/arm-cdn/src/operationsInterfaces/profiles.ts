/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  Profile,
  ProfilesListOptionalParams,
  ProfilesListByResourceGroupOptionalParams,
  ResourceUsage,
  ProfilesListResourceUsageOptionalParams,
  ProfilesGetOptionalParams,
  ProfilesGetResponse,
  ProfilesCreateOptionalParams,
  ProfilesCreateResponse,
  ProfileUpdateParameters,
  ProfilesUpdateOptionalParams,
  ProfilesUpdateResponse,
  ProfilesDeleteOptionalParams,
  CanMigrateParameters,
  ProfilesCanMigrateOptionalParams,
  ProfilesCanMigrateResponse,
  MigrationParameters,
  ProfilesMigrateOptionalParams,
  ProfilesMigrateResponse,
  ProfilesMigrationCommitOptionalParams,
  ProfilesGenerateSsoUriOptionalParams,
  ProfilesGenerateSsoUriResponse,
  ProfilesListSupportedOptimizationTypesOptionalParams,
  ProfilesListSupportedOptimizationTypesResponse,
  ProfilesCdnCanMigrateToAfdOptionalParams,
  ProfilesCdnCanMigrateToAfdResponse,
  CdnMigrationToAfdParameters,
  ProfilesCdnMigrateToAfdOptionalParams,
  ProfilesCdnMigrateToAfdResponse,
  ProfilesMigrationAbortOptionalParams,
  ProfilesMigrationAbortResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Profiles. */
export interface Profiles {
  /**
   * Lists all of the Azure Front Door Standard, Azure Front Door Premium, and CDN profiles within an
   * Azure subscription.
   * @param options The options parameters.
   */
  list(
    options?: ProfilesListOptionalParams,
  ): PagedAsyncIterableIterator<Profile>;
  /**
   * Lists all of the Azure Front Door Standard, Azure Front Door Premium, and CDN profiles within a
   * resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: ProfilesListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<Profile>;
  /**
   * Checks the quota and actual usage of endpoints under the given Azure Front Door Standard or Azure
   * Front Door Premium or CDN profile.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile
   *                    which is unique within the resource group.
   * @param options The options parameters.
   */
  listResourceUsage(
    resourceGroupName: string,
    profileName: string,
    options?: ProfilesListResourceUsageOptionalParams,
  ): PagedAsyncIterableIterator<ResourceUsage>;
  /**
   * Gets an Azure Front Door Standard or Azure Front Door Premium or CDN profile with the specified
   * profile name under the specified subscription and resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile
   *                    which is unique within the resource group.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    profileName: string,
    options?: ProfilesGetOptionalParams,
  ): Promise<ProfilesGetResponse>;
  /**
   * Creates a new Azure Front Door Standard or Azure Front Door Premium or CDN profile with a profile
   * name under the specified subscription and resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile
   *                    which is unique within the resource group.
   * @param profile Profile properties needed to create a new profile.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    profileName: string,
    profile: Profile,
    options?: ProfilesCreateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ProfilesCreateResponse>,
      ProfilesCreateResponse
    >
  >;
  /**
   * Creates a new Azure Front Door Standard or Azure Front Door Premium or CDN profile with a profile
   * name under the specified subscription and resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile
   *                    which is unique within the resource group.
   * @param profile Profile properties needed to create a new profile.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    profileName: string,
    profile: Profile,
    options?: ProfilesCreateOptionalParams,
  ): Promise<ProfilesCreateResponse>;
  /**
   * Updates an existing Azure Front Door Standard or Azure Front Door Premium or CDN profile with the
   * specified profile name under the specified subscription and resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile
   *                    which is unique within the resource group.
   * @param profileUpdateParameters Profile properties needed to update an existing profile.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    profileName: string,
    profileUpdateParameters: ProfileUpdateParameters,
    options?: ProfilesUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ProfilesUpdateResponse>,
      ProfilesUpdateResponse
    >
  >;
  /**
   * Updates an existing Azure Front Door Standard or Azure Front Door Premium or CDN profile with the
   * specified profile name under the specified subscription and resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile
   *                    which is unique within the resource group.
   * @param profileUpdateParameters Profile properties needed to update an existing profile.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    profileName: string,
    profileUpdateParameters: ProfileUpdateParameters,
    options?: ProfilesUpdateOptionalParams,
  ): Promise<ProfilesUpdateResponse>;
  /**
   * Deletes an existing  Azure Front Door Standard or Azure Front Door Premium or CDN profile with the
   * specified parameters. Deleting a profile will result in the deletion of all of the sub-resources
   * including endpoints, origins and custom domains.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile
   *                    which is unique within the resource group.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    profileName: string,
    options?: ProfilesDeleteOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Deletes an existing  Azure Front Door Standard or Azure Front Door Premium or CDN profile with the
   * specified parameters. Deleting a profile will result in the deletion of all of the sub-resources
   * including endpoints, origins and custom domains.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile
   *                    which is unique within the resource group.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    profileName: string,
    options?: ProfilesDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Checks if CDN profile can be migrated to Azure Frontdoor(Standard/Premium) profile.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param canMigrateParameters Properties needed to check if cdn profile or classic frontdoor can be
   *                             migrated.
   * @param options The options parameters.
   */
  beginCanMigrate(
    resourceGroupName: string,
    canMigrateParameters: CanMigrateParameters,
    options?: ProfilesCanMigrateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ProfilesCanMigrateResponse>,
      ProfilesCanMigrateResponse
    >
  >;
  /**
   * Checks if CDN profile can be migrated to Azure Frontdoor(Standard/Premium) profile.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param canMigrateParameters Properties needed to check if cdn profile or classic frontdoor can be
   *                             migrated.
   * @param options The options parameters.
   */
  beginCanMigrateAndWait(
    resourceGroupName: string,
    canMigrateParameters: CanMigrateParameters,
    options?: ProfilesCanMigrateOptionalParams,
  ): Promise<ProfilesCanMigrateResponse>;
  /**
   * Migrate the CDN profile to Azure Frontdoor(Standard/Premium) profile. The change need to be
   * committed after this.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param migrationParameters Properties needed to migrate the profile.
   * @param options The options parameters.
   */
  beginMigrate(
    resourceGroupName: string,
    migrationParameters: MigrationParameters,
    options?: ProfilesMigrateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ProfilesMigrateResponse>,
      ProfilesMigrateResponse
    >
  >;
  /**
   * Migrate the CDN profile to Azure Frontdoor(Standard/Premium) profile. The change need to be
   * committed after this.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param migrationParameters Properties needed to migrate the profile.
   * @param options The options parameters.
   */
  beginMigrateAndWait(
    resourceGroupName: string,
    migrationParameters: MigrationParameters,
    options?: ProfilesMigrateOptionalParams,
  ): Promise<ProfilesMigrateResponse>;
  /**
   * Commit the migrated Azure Frontdoor(Standard/Premium) profile.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param profileName Name of the CDN profile which is unique within the resource group.
   * @param options The options parameters.
   */
  beginMigrationCommit(
    resourceGroupName: string,
    profileName: string,
    options?: ProfilesMigrationCommitOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Commit the migrated Azure Frontdoor(Standard/Premium) profile.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param profileName Name of the CDN profile which is unique within the resource group.
   * @param options The options parameters.
   */
  beginMigrationCommitAndWait(
    resourceGroupName: string,
    profileName: string,
    options?: ProfilesMigrationCommitOptionalParams,
  ): Promise<void>;
  /**
   * Generates a dynamic SSO URI used to sign in to the CDN supplemental portal. Supplemental portal is
   * used to configure advanced feature capabilities that are not yet available in the Azure portal, such
   * as core reports in a standard profile; rules engine, advanced HTTP reports, and real-time stats and
   * alerts in a premium profile. The SSO URI changes approximately every 10 minutes.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param profileName Name of the CDN profile which is unique within the resource group.
   * @param options The options parameters.
   */
  generateSsoUri(
    resourceGroupName: string,
    profileName: string,
    options?: ProfilesGenerateSsoUriOptionalParams,
  ): Promise<ProfilesGenerateSsoUriResponse>;
  /**
   * Gets the supported optimization types for the current profile. A user can create an endpoint with an
   * optimization type from the listed values.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile
   *                    which is unique within the resource group.
   * @param options The options parameters.
   */
  listSupportedOptimizationTypes(
    resourceGroupName: string,
    profileName: string,
    options?: ProfilesListSupportedOptimizationTypesOptionalParams,
  ): Promise<ProfilesListSupportedOptimizationTypesResponse>;
  /**
   * Checks if CDN profile can be migrated to Azure Frontdoor(Standard/Premium) profile.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium which is unique
   *                    within the resource group.
   * @param options The options parameters.
   */
  beginCdnCanMigrateToAfd(
    resourceGroupName: string,
    profileName: string,
    options?: ProfilesCdnCanMigrateToAfdOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ProfilesCdnCanMigrateToAfdResponse>,
      ProfilesCdnCanMigrateToAfdResponse
    >
  >;
  /**
   * Checks if CDN profile can be migrated to Azure Frontdoor(Standard/Premium) profile.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium which is unique
   *                    within the resource group.
   * @param options The options parameters.
   */
  beginCdnCanMigrateToAfdAndWait(
    resourceGroupName: string,
    profileName: string,
    options?: ProfilesCdnCanMigrateToAfdOptionalParams,
  ): Promise<ProfilesCdnCanMigrateToAfdResponse>;
  /**
   * Migrate the CDN profile to Azure Frontdoor(Standard/Premium) profile. This step prepares the profile
   * for migration and will be followed by Commit to finalize the migration.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium which is unique
   *                    within the resource group.
   * @param migrationParameters Properties needed to migrate the profile.
   * @param options The options parameters.
   */
  beginCdnMigrateToAfd(
    resourceGroupName: string,
    profileName: string,
    migrationParameters: CdnMigrationToAfdParameters,
    options?: ProfilesCdnMigrateToAfdOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ProfilesCdnMigrateToAfdResponse>,
      ProfilesCdnMigrateToAfdResponse
    >
  >;
  /**
   * Migrate the CDN profile to Azure Frontdoor(Standard/Premium) profile. This step prepares the profile
   * for migration and will be followed by Commit to finalize the migration.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium which is unique
   *                    within the resource group.
   * @param migrationParameters Properties needed to migrate the profile.
   * @param options The options parameters.
   */
  beginCdnMigrateToAfdAndWait(
    resourceGroupName: string,
    profileName: string,
    migrationParameters: CdnMigrationToAfdParameters,
    options?: ProfilesCdnMigrateToAfdOptionalParams,
  ): Promise<ProfilesCdnMigrateToAfdResponse>;
  /**
   * Abort the migration to Azure Frontdoor Premium/Standard.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium which is unique
   *                    within the resource group.
   * @param options The options parameters.
   */
  beginMigrationAbort(
    resourceGroupName: string,
    profileName: string,
    options?: ProfilesMigrationAbortOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ProfilesMigrationAbortResponse>,
      ProfilesMigrationAbortResponse
    >
  >;
  /**
   * Abort the migration to Azure Frontdoor Premium/Standard.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium which is unique
   *                    within the resource group.
   * @param options The options parameters.
   */
  beginMigrationAbortAndWait(
    resourceGroupName: string,
    profileName: string,
    options?: ProfilesMigrationAbortOptionalParams,
  ): Promise<ProfilesMigrationAbortResponse>;
}
