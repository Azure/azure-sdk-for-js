/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
const { RedisEnterpriseManagementClient } = require("@azure/arm-redisenterprisecache");
const { DefaultAzureCredential } = require("@azure/identity");
require("dotenv").config();

/**
 * This sample demonstrates how to Creates/Updates a particular access policy assignment for a database
 *
 * @summary Creates/Updates a particular access policy assignment for a database
 * x-ms-original-file: specification/redisenterprise/resource-manager/Microsoft.Cache/preview/2024-09-01-preview/examples/RedisEnterpriseAccessPolicyAssignmentCreateUpdate.json
 */
async function redisEnterpriseAccessPolicyAssignmentCreateUpdate() {
  const subscriptionId =
    process.env["REDISENTERPRISE_SUBSCRIPTION_ID"] || "e7b5a9d2-6b6a-4d2f-9143-20d9a10f5b8f";
  const resourceGroupName = process.env["REDISENTERPRISE_RESOURCE_GROUP"] || "rg1";
  const clusterName = "cache1";
  const databaseName = "default";
  const accessPolicyAssignmentName = "defaultTestEntraApp1";
  const parameters = {
    accessPolicyName: "default",
    user: { objectId: "6497c918-11ad-41e7-1b0f-7c518a87d0b0" },
  };
  const credential = new DefaultAzureCredential();
  const client = new RedisEnterpriseManagementClient(credential, subscriptionId);
  const result = await client.accessPolicyAssignmentOperations.beginCreateUpdateAndWait(
    resourceGroupName,
    clusterName,
    databaseName,
    accessPolicyAssignmentName,
    parameters,
  );
  console.log(result);
}

async function main() {
  redisEnterpriseAccessPolicyAssignmentCreateUpdate();
}

main().catch(console.error);
