/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/changesMappers";
import * as Parameters from "../models/parameters";
import { AzureChangeAnalysisManagementClientContext } from "../azureChangeAnalysisManagementClientContext";

/** Class representing a Changes. */
export class Changes {
  private readonly client: AzureChangeAnalysisManagementClientContext;

  /**
   * Create a Changes.
   * @param {AzureChangeAnalysisManagementClientContext} client Reference to the service client.
   */
  constructor(client: AzureChangeAnalysisManagementClientContext) {
    this.client = client;
  }

  /**
   * @summary List the changes of a resource group within the specified time range. Customer data
   * will always be masked.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param startTime Specifies the start time of the changes request.
   * @param endTime Specifies the end time of the changes request.
   * @param [options] The optional parameters
   * @returns Promise<Models.ChangesListChangesByResourceGroupResponse>
   */
  listChangesByResourceGroup(resourceGroupName: string, startTime: Date | string, endTime: Date | string, options?: Models.ChangesListChangesByResourceGroupOptionalParams): Promise<Models.ChangesListChangesByResourceGroupResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param startTime Specifies the start time of the changes request.
   * @param endTime Specifies the end time of the changes request.
   * @param callback The callback
   */
  listChangesByResourceGroup(resourceGroupName: string, startTime: Date | string, endTime: Date | string, callback: msRest.ServiceCallback<Models.ChangeList>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param startTime Specifies the start time of the changes request.
   * @param endTime Specifies the end time of the changes request.
   * @param options The optional parameters
   * @param callback The callback
   */
  listChangesByResourceGroup(resourceGroupName: string, startTime: Date | string, endTime: Date | string, options: Models.ChangesListChangesByResourceGroupOptionalParams, callback: msRest.ServiceCallback<Models.ChangeList>): void;
  listChangesByResourceGroup(resourceGroupName: string, startTime: Date | string, endTime: Date | string, options?: Models.ChangesListChangesByResourceGroupOptionalParams | msRest.ServiceCallback<Models.ChangeList>, callback?: msRest.ServiceCallback<Models.ChangeList>): Promise<Models.ChangesListChangesByResourceGroupResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        startTime,
        endTime,
        options
      },
      listChangesByResourceGroupOperationSpec,
      callback) as Promise<Models.ChangesListChangesByResourceGroupResponse>;
  }

  /**
   * @summary List the changes of a subscription within the specified time range. Customer data will
   * always be masked.
   * @param startTime Specifies the start time of the changes request.
   * @param endTime Specifies the end time of the changes request.
   * @param [options] The optional parameters
   * @returns Promise<Models.ChangesListChangesBySubscriptionResponse>
   */
  listChangesBySubscription(startTime: Date | string, endTime: Date | string, options?: Models.ChangesListChangesBySubscriptionOptionalParams): Promise<Models.ChangesListChangesBySubscriptionResponse>;
  /**
   * @param startTime Specifies the start time of the changes request.
   * @param endTime Specifies the end time of the changes request.
   * @param callback The callback
   */
  listChangesBySubscription(startTime: Date | string, endTime: Date | string, callback: msRest.ServiceCallback<Models.ChangeList>): void;
  /**
   * @param startTime Specifies the start time of the changes request.
   * @param endTime Specifies the end time of the changes request.
   * @param options The optional parameters
   * @param callback The callback
   */
  listChangesBySubscription(startTime: Date | string, endTime: Date | string, options: Models.ChangesListChangesBySubscriptionOptionalParams, callback: msRest.ServiceCallback<Models.ChangeList>): void;
  listChangesBySubscription(startTime: Date | string, endTime: Date | string, options?: Models.ChangesListChangesBySubscriptionOptionalParams | msRest.ServiceCallback<Models.ChangeList>, callback?: msRest.ServiceCallback<Models.ChangeList>): Promise<Models.ChangesListChangesBySubscriptionResponse> {
    return this.client.sendOperationRequest(
      {
        startTime,
        endTime,
        options
      },
      listChangesBySubscriptionOperationSpec,
      callback) as Promise<Models.ChangesListChangesBySubscriptionResponse>;
  }

  /**
   * @summary List the changes of a resource group within the specified time range. Customer data
   * will always be masked.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param startTime Specifies the start time of the changes request.
   * @param endTime Specifies the end time of the changes request.
   * @param [options] The optional parameters
   * @returns Promise<Models.ChangesListChangesByResourceGroupNextResponse>
   */
  listChangesByResourceGroupNext(nextPageLink: string, startTime: Date | string, endTime: Date | string, options?: Models.ChangesListChangesByResourceGroupNextOptionalParams): Promise<Models.ChangesListChangesByResourceGroupNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param startTime Specifies the start time of the changes request.
   * @param endTime Specifies the end time of the changes request.
   * @param callback The callback
   */
  listChangesByResourceGroupNext(nextPageLink: string, startTime: Date | string, endTime: Date | string, callback: msRest.ServiceCallback<Models.ChangeList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param startTime Specifies the start time of the changes request.
   * @param endTime Specifies the end time of the changes request.
   * @param options The optional parameters
   * @param callback The callback
   */
  listChangesByResourceGroupNext(nextPageLink: string, startTime: Date | string, endTime: Date | string, options: Models.ChangesListChangesByResourceGroupNextOptionalParams, callback: msRest.ServiceCallback<Models.ChangeList>): void;
  listChangesByResourceGroupNext(nextPageLink: string, startTime: Date | string, endTime: Date | string, options?: Models.ChangesListChangesByResourceGroupNextOptionalParams | msRest.ServiceCallback<Models.ChangeList>, callback?: msRest.ServiceCallback<Models.ChangeList>): Promise<Models.ChangesListChangesByResourceGroupNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        startTime,
        endTime,
        options
      },
      listChangesByResourceGroupNextOperationSpec,
      callback) as Promise<Models.ChangesListChangesByResourceGroupNextResponse>;
  }

  /**
   * @summary List the changes of a subscription within the specified time range. Customer data will
   * always be masked.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param startTime Specifies the start time of the changes request.
   * @param endTime Specifies the end time of the changes request.
   * @param [options] The optional parameters
   * @returns Promise<Models.ChangesListChangesBySubscriptionNextResponse>
   */
  listChangesBySubscriptionNext(nextPageLink: string, startTime: Date | string, endTime: Date | string, options?: Models.ChangesListChangesBySubscriptionNextOptionalParams): Promise<Models.ChangesListChangesBySubscriptionNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param startTime Specifies the start time of the changes request.
   * @param endTime Specifies the end time of the changes request.
   * @param callback The callback
   */
  listChangesBySubscriptionNext(nextPageLink: string, startTime: Date | string, endTime: Date | string, callback: msRest.ServiceCallback<Models.ChangeList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param startTime Specifies the start time of the changes request.
   * @param endTime Specifies the end time of the changes request.
   * @param options The optional parameters
   * @param callback The callback
   */
  listChangesBySubscriptionNext(nextPageLink: string, startTime: Date | string, endTime: Date | string, options: Models.ChangesListChangesBySubscriptionNextOptionalParams, callback: msRest.ServiceCallback<Models.ChangeList>): void;
  listChangesBySubscriptionNext(nextPageLink: string, startTime: Date | string, endTime: Date | string, options?: Models.ChangesListChangesBySubscriptionNextOptionalParams | msRest.ServiceCallback<Models.ChangeList>, callback?: msRest.ServiceCallback<Models.ChangeList>): Promise<Models.ChangesListChangesBySubscriptionNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        startTime,
        endTime,
        options
      },
      listChangesBySubscriptionNextOperationSpec,
      callback) as Promise<Models.ChangesListChangesBySubscriptionNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listChangesByResourceGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ChangeAnalysis/changes",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.startTime,
    Parameters.endTime,
    Parameters.skipToken
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ChangeList
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listChangesBySubscriptionOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.ChangeAnalysis/changes",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.startTime,
    Parameters.endTime,
    Parameters.skipToken
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ChangeList
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listChangesByResourceGroupNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.startTime,
    Parameters.endTime,
    Parameters.skipToken
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ChangeList
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listChangesBySubscriptionNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.startTime,
    Parameters.endTime,
    Parameters.skipToken
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ChangeList
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
