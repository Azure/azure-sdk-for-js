// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

import type { WebSocketServer } from "ws";

/**
 * Represents a message sent by the server to a client when a connection is established.
 */
export interface ConnectedMessage {
  /** The message type. Always "system" for system messages. */
  type: "system";
  /** The event name. Always "connected" for connection messages. */
  event: "connected";
  /** A unique identifier for the connection, generated by the server. */
  connectionId: string;
  /** The identifier for the user associated with the connection. */
  userId: string;
  /**
   * A token used for reconnecting a reliable client.
   * Present only when the client uses a reliable protocol.
   */
  reconnectionToken?: string;
}

/**
 * Represents a message sent by the server to a client when a connection is terminated.
 */
export interface DisconnectedMessage {
  /** The message type. Always "system" for system messages. */
  type: "system";
  /** The event name. Always "disconnected" for disconnection messages. */
  event: "disconnected";
  /** A message describing the reason for disconnection. */
  message: string;
}

/**
 * Represents the Azure Web PubSub Simulator Server.
 */
export interface WebPubSubServer {
  /**
   * Closes the server and all active WebSocket connections.
   */
  close: () => void;
  /**
   * The WebSocket client URL used by clients to connect to the server.
   * Typically a secure URL (wss://).
   */
  webPubSubClientUrl: string;
  /**
   * The HTTPS URL for administrative operations and REST API endpoints.
   */
  httpsUrl: string;
  /**
   * The underlying WebSocketServer instance used to manage WebSocket connections.
   */
  ws: WebSocketServer;
}

/**
 * Options for configuring and starting the Azure Web PubSub Simulator Server.
 */
export interface WebPubSubServerOptions {
  /**
   * The port number on which the server will listen.
   * If not provided, 443 will be used.
   */
  port?: number;
  /**
   * An optional array of hub names to pre-initialize.
   * If specified, only these hubs are allowed.
   */
  hubs?: string[];
}
