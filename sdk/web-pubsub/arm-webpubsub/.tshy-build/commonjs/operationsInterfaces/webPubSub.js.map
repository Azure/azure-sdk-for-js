{"version":3,"file":"webPubSub.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/webPubSub.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  WebPubSubResource,\n  WebPubSubListBySubscriptionOptionalParams,\n  WebPubSubListByResourceGroupOptionalParams,\n  NameAvailabilityParameters,\n  WebPubSubCheckNameAvailabilityOptionalParams,\n  WebPubSubCheckNameAvailabilityResponse,\n  WebPubSubGetOptionalParams,\n  WebPubSubGetResponse,\n  WebPubSubCreateOrUpdateOptionalParams,\n  WebPubSubCreateOrUpdateResponse,\n  WebPubSubDeleteOptionalParams,\n  WebPubSubUpdateOptionalParams,\n  WebPubSubUpdateResponse,\n  WebPubSubListKeysOptionalParams,\n  WebPubSubListKeysResponse,\n  RegenerateKeyParameters,\n  WebPubSubRegenerateKeyOptionalParams,\n  WebPubSubRegenerateKeyResponse,\n  WebPubSubListReplicaSkusOptionalParams,\n  WebPubSubListReplicaSkusResponse,\n  WebPubSubRestartOptionalParams,\n  WebPubSubRestartResponse,\n  WebPubSubListSkusOptionalParams,\n  WebPubSubListSkusResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a WebPubSub. */\nexport interface WebPubSub {\n  /**\n   * Handles requests to list all resources in a subscription.\n   * @param options The options parameters.\n   */\n  listBySubscription(\n    options?: WebPubSubListBySubscriptionOptionalParams,\n  ): PagedAsyncIterableIterator<WebPubSubResource>;\n  /**\n   * Handles requests to list all resources in a resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  listByResourceGroup(\n    resourceGroupName: string,\n    options?: WebPubSubListByResourceGroupOptionalParams,\n  ): PagedAsyncIterableIterator<WebPubSubResource>;\n  /**\n   * Checks that the resource name is valid and is not already in use.\n   * @param location the region\n   * @param parameters Parameters supplied to the operation.\n   * @param options The options parameters.\n   */\n  checkNameAvailability(\n    location: string,\n    parameters: NameAvailabilityParameters,\n    options?: WebPubSubCheckNameAvailabilityOptionalParams,\n  ): Promise<WebPubSubCheckNameAvailabilityResponse>;\n  /**\n   * Get the resource and its properties.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the resource.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: WebPubSubGetOptionalParams,\n  ): Promise<WebPubSubGetResponse>;\n  /**\n   * Create or update a resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the resource.\n   * @param parameters Parameters for the create or update operation\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    resourceName: string,\n    parameters: WebPubSubResource,\n    options?: WebPubSubCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebPubSubCreateOrUpdateResponse>,\n      WebPubSubCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Create or update a resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the resource.\n   * @param parameters Parameters for the create or update operation\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    resourceName: string,\n    parameters: WebPubSubResource,\n    options?: WebPubSubCreateOrUpdateOptionalParams,\n  ): Promise<WebPubSubCreateOrUpdateResponse>;\n  /**\n   * Operation to delete a resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the resource.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: WebPubSubDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Operation to delete a resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the resource.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: WebPubSubDeleteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Operation to update an exiting resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the resource.\n   * @param parameters Parameters for the update operation\n   * @param options The options parameters.\n   */\n  beginUpdate(\n    resourceGroupName: string,\n    resourceName: string,\n    parameters: WebPubSubResource,\n    options?: WebPubSubUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebPubSubUpdateResponse>,\n      WebPubSubUpdateResponse\n    >\n  >;\n  /**\n   * Operation to update an exiting resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the resource.\n   * @param parameters Parameters for the update operation\n   * @param options The options parameters.\n   */\n  beginUpdateAndWait(\n    resourceGroupName: string,\n    resourceName: string,\n    parameters: WebPubSubResource,\n    options?: WebPubSubUpdateOptionalParams,\n  ): Promise<WebPubSubUpdateResponse>;\n  /**\n   * Get the access keys of the resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the resource.\n   * @param options The options parameters.\n   */\n  listKeys(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: WebPubSubListKeysOptionalParams,\n  ): Promise<WebPubSubListKeysResponse>;\n  /**\n   * Regenerate the access key for the resource. PrimaryKey and SecondaryKey cannot be regenerated at the\n   * same time.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the resource.\n   * @param parameters Parameter that describes the Regenerate Key Operation.\n   * @param options The options parameters.\n   */\n  beginRegenerateKey(\n    resourceGroupName: string,\n    resourceName: string,\n    parameters: RegenerateKeyParameters,\n    options?: WebPubSubRegenerateKeyOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebPubSubRegenerateKeyResponse>,\n      WebPubSubRegenerateKeyResponse\n    >\n  >;\n  /**\n   * Regenerate the access key for the resource. PrimaryKey and SecondaryKey cannot be regenerated at the\n   * same time.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the resource.\n   * @param parameters Parameter that describes the Regenerate Key Operation.\n   * @param options The options parameters.\n   */\n  beginRegenerateKeyAndWait(\n    resourceGroupName: string,\n    resourceName: string,\n    parameters: RegenerateKeyParameters,\n    options?: WebPubSubRegenerateKeyOptionalParams,\n  ): Promise<WebPubSubRegenerateKeyResponse>;\n  /**\n   * List all available skus of the replica resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the resource.\n   * @param replicaName The name of the replica.\n   * @param options The options parameters.\n   */\n  listReplicaSkus(\n    resourceGroupName: string,\n    resourceName: string,\n    replicaName: string,\n    options?: WebPubSubListReplicaSkusOptionalParams,\n  ): Promise<WebPubSubListReplicaSkusResponse>;\n  /**\n   * Operation to restart a resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the resource.\n   * @param options The options parameters.\n   */\n  beginRestart(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: WebPubSubRestartOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebPubSubRestartResponse>,\n      WebPubSubRestartResponse\n    >\n  >;\n  /**\n   * Operation to restart a resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the resource.\n   * @param options The options parameters.\n   */\n  beginRestartAndWait(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: WebPubSubRestartOptionalParams,\n  ): Promise<WebPubSubRestartResponse>;\n  /**\n   * List all available skus of the resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the resource.\n   * @param options The options parameters.\n   */\n  listSkus(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: WebPubSubListSkusOptionalParams,\n  ): Promise<WebPubSubListSkusResponse>;\n}\n"]}