/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const OperationList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        type: {
          name: "Boolean"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "OperationProperties"
        }
      }
    }
  }
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationProperties",
    modelProperties: {
      serviceSpecification: {
        serializedName: "serviceSpecification",
        type: {
          name: "Composite",
          className: "ServiceSpecification"
        }
      }
    }
  }
};

export const ServiceSpecification: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceSpecification",
    modelProperties: {
      metricSpecifications: {
        serializedName: "metricSpecifications",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MetricSpecification"
            }
          }
        }
      },
      logSpecifications: {
        serializedName: "logSpecifications",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LogSpecification"
            }
          }
        }
      }
    }
  }
};

export const MetricSpecification: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetricSpecification",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      displayDescription: {
        serializedName: "displayDescription",
        type: {
          name: "String"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      aggregationType: {
        serializedName: "aggregationType",
        type: {
          name: "String"
        }
      },
      fillGapWithZero: {
        serializedName: "fillGapWithZero",
        type: {
          name: "String"
        }
      },
      category: {
        serializedName: "category",
        type: {
          name: "String"
        }
      },
      dimensions: {
        serializedName: "dimensions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Dimension"
            }
          }
        }
      }
    }
  }
};

export const Dimension: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Dimension",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      internalName: {
        serializedName: "internalName",
        type: {
          name: "String"
        }
      },
      toBeExportedForShoebox: {
        serializedName: "toBeExportedForShoebox",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const LogSpecification: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogSpecification",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      }
    }
  }
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const NameAvailabilityParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NameAvailabilityParameters",
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NameAvailability: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NameAvailability",
    modelProperties: {
      nameAvailable: {
        serializedName: "nameAvailable",
        type: {
          name: "Boolean"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SignalRServiceUsageList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SignalRServiceUsageList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SignalRServiceUsage"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SignalRServiceUsage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SignalRServiceUsage",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      currentValue: {
        serializedName: "currentValue",
        type: {
          name: "Number"
        }
      },
      limit: {
        serializedName: "limit",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "Composite",
          className: "SignalRServiceUsageName"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SignalRServiceUsageName: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SignalRServiceUsageName",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      localizedValue: {
        serializedName: "localizedValue",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebPubSubResourceList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebPubSubResourceList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebPubSubResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceSku: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceSku",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "tier",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      family: {
        serializedName: "family",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PrivateEndpoint: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpoint",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateLinkServiceConnectionState: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateLinkServiceConnectionState",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      actionsRequired: {
        serializedName: "actionsRequired",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const WebPubSubTlsSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebPubSubTlsSettings",
    modelProperties: {
      clientCertEnabled: {
        defaultValue: false,
        serializedName: "clientCertEnabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const LiveTraceConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LiveTraceConfiguration",
    modelProperties: {
      enabled: {
        defaultValue: "false",
        serializedName: "enabled",
        type: {
          name: "String"
        }
      },
      categories: {
        serializedName: "categories",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LiveTraceCategory"
            }
          }
        }
      }
    }
  }
};

export const LiveTraceCategory: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LiveTraceCategory",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceLogConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceLogConfiguration",
    modelProperties: {
      categories: {
        serializedName: "categories",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResourceLogCategory"
            }
          }
        }
      }
    }
  }
};

export const ResourceLogCategory: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceLogCategory",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebPubSubNetworkACLs: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebPubSubNetworkACLs",
    modelProperties: {
      defaultAction: {
        serializedName: "defaultAction",
        type: {
          name: "String"
        }
      },
      publicNetwork: {
        serializedName: "publicNetwork",
        type: {
          name: "Composite",
          className: "NetworkACL"
        }
      },
      privateEndpoints: {
        serializedName: "privateEndpoints",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointACL"
            }
          }
        }
      }
    }
  }
};

export const NetworkACL: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkACL",
    modelProperties: {
      allow: {
        serializedName: "allow",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      deny: {
        serializedName: "deny",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ManagedIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedIdentity",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "UserAssignedIdentityProperty"
            }
          }
        }
      },
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserAssignedIdentityProperty: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserAssignedIdentityProperty",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      clientId: {
        serializedName: "clientId",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomCertificateList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomCertificateList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CustomCertificate"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomDomainList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomDomainList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CustomDomain"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceReference: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceReference",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebPubSubHubList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebPubSubHubList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebPubSubHub"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebPubSubHubProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebPubSubHubProperties",
    modelProperties: {
      eventHandlers: {
        serializedName: "eventHandlers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EventHandler"
            }
          }
        }
      },
      eventListeners: {
        serializedName: "eventListeners",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EventListener"
            }
          }
        }
      },
      anonymousConnectPolicy: {
        defaultValue: "deny",
        serializedName: "anonymousConnectPolicy",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventHandler: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventHandler",
    modelProperties: {
      urlTemplate: {
        serializedName: "urlTemplate",
        required: true,
        type: {
          name: "String"
        }
      },
      userEventPattern: {
        serializedName: "userEventPattern",
        type: {
          name: "String"
        }
      },
      systemEvents: {
        serializedName: "systemEvents",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      auth: {
        serializedName: "auth",
        type: {
          name: "Composite",
          className: "UpstreamAuthSettings"
        }
      }
    }
  }
};

export const UpstreamAuthSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpstreamAuthSettings",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      managedIdentity: {
        serializedName: "managedIdentity",
        type: {
          name: "Composite",
          className: "ManagedIdentitySettings"
        }
      }
    }
  }
};

export const ManagedIdentitySettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedIdentitySettings",
    modelProperties: {
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventListener: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventListener",
    modelProperties: {
      filter: {
        serializedName: "filter",
        type: {
          name: "Composite",
          className: "EventListenerFilter"
        }
      },
      endpoint: {
        serializedName: "endpoint",
        type: {
          name: "Composite",
          className: "EventListenerEndpoint"
        }
      }
    }
  }
};

export const EventListenerFilter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventListenerFilter",
    uberParent: "EventListenerFilter",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventListenerEndpoint: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventListenerEndpoint",
    uberParent: "EventListenerEndpoint",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebPubSubKeys: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebPubSubKeys",
    modelProperties: {
      primaryKey: {
        serializedName: "primaryKey",
        type: {
          name: "String"
        }
      },
      secondaryKey: {
        serializedName: "secondaryKey",
        type: {
          name: "String"
        }
      },
      primaryConnectionString: {
        serializedName: "primaryConnectionString",
        type: {
          name: "String"
        }
      },
      secondaryConnectionString: {
        serializedName: "secondaryConnectionString",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointConnectionList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpointConnectionList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnection"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateLinkResourceList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateLinkResourceList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateLinkResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ShareablePrivateLinkResourceType: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ShareablePrivateLinkResourceType",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ShareablePrivateLinkResourceProperties"
        }
      }
    }
  }
};

export const ShareablePrivateLinkResourceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ShareablePrivateLinkResourceProperties",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      groupId: {
        serializedName: "groupId",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegenerateKeyParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RegenerateKeyParameters",
    modelProperties: {
      keyType: {
        serializedName: "keyType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReplicaList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReplicaList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Replica"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SkuList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SkuList",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Sku"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Sku: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Sku",
    modelProperties: {
      resourceType: {
        serializedName: "resourceType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "ResourceSku"
        }
      },
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Composite",
          className: "SkuCapacity"
        }
      }
    }
  }
};

export const SkuCapacity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SkuCapacity",
    modelProperties: {
      minimum: {
        serializedName: "minimum",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      maximum: {
        serializedName: "maximum",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      default: {
        serializedName: "default",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      allowedValues: {
        serializedName: "allowedValues",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      },
      scaleType: {
        serializedName: "scaleType",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SharedPrivateLinkResourceList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SharedPrivateLinkResourceList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SharedPrivateLinkResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointACL: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpointACL",
    modelProperties: {
      ...NetworkACL.type.modelProperties,
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventNameFilter: coreClient.CompositeMapper = {
  serializedName: "EventName",
  type: {
    name: "Composite",
    className: "EventNameFilter",
    uberParent: "EventListenerFilter",
    polymorphicDiscriminator: EventListenerFilter.type.polymorphicDiscriminator,
    modelProperties: {
      ...EventListenerFilter.type.modelProperties,
      systemEvents: {
        serializedName: "systemEvents",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      userEventPattern: {
        serializedName: "userEventPattern",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventHubEndpoint: coreClient.CompositeMapper = {
  serializedName: "EventHub",
  type: {
    name: "Composite",
    className: "EventHubEndpoint",
    uberParent: "EventListenerEndpoint",
    polymorphicDiscriminator:
      EventListenerEndpoint.type.polymorphicDiscriminator,
    modelProperties: {
      ...EventListenerEndpoint.type.modelProperties,
      fullyQualifiedNamespace: {
        serializedName: "fullyQualifiedNamespace",
        required: true,
        type: {
          name: "String"
        }
      },
      eventHubName: {
        serializedName: "eventHubName",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointConnection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpointConnection",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      privateEndpoint: {
        serializedName: "properties.privateEndpoint",
        type: {
          name: "Composite",
          className: "PrivateEndpoint"
        }
      },
      groupIds: {
        serializedName: "properties.groupIds",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      privateLinkServiceConnectionState: {
        serializedName: "properties.privateLinkServiceConnectionState",
        type: {
          name: "Composite",
          className: "PrivateLinkServiceConnectionState"
        }
      }
    }
  }
};

export const SharedPrivateLinkResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SharedPrivateLinkResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      groupId: {
        serializedName: "properties.groupId",
        type: {
          name: "String"
        }
      },
      privateLinkResourceId: {
        serializedName: "properties.privateLinkResourceId",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      requestMessage: {
        serializedName: "properties.requestMessage",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomCertificate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomCertificate",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      keyVaultBaseUri: {
        serializedName: "properties.keyVaultBaseUri",
        required: true,
        type: {
          name: "String"
        }
      },
      keyVaultSecretName: {
        serializedName: "properties.keyVaultSecretName",
        required: true,
        type: {
          name: "String"
        }
      },
      keyVaultSecretVersion: {
        serializedName: "properties.keyVaultSecretVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomDomain: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomDomain",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      domainName: {
        serializedName: "properties.domainName",
        required: true,
        type: {
          name: "String"
        }
      },
      customCertificate: {
        serializedName: "properties.customCertificate",
        type: {
          name: "Composite",
          className: "ResourceReference"
        }
      }
    }
  }
};

export const WebPubSubHub: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebPubSubHub",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "WebPubSubHubProperties"
        }
      }
    }
  }
};

export const PrivateLinkResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateLinkResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      groupId: {
        serializedName: "properties.groupId",
        type: {
          name: "String"
        }
      },
      requiredMembers: {
        serializedName: "properties.requiredMembers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      requiredZoneNames: {
        serializedName: "properties.requiredZoneNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      shareablePrivateLinkResourceTypes: {
        serializedName: "properties.shareablePrivateLinkResourceTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ShareablePrivateLinkResourceType"
            }
          }
        }
      }
    }
  }
};

export const WebPubSubResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebPubSubResource",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "ResourceSku"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ManagedIdentity"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      externalIP: {
        serializedName: "properties.externalIP",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      hostName: {
        serializedName: "properties.hostName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      publicPort: {
        serializedName: "properties.publicPort",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      serverPort: {
        serializedName: "properties.serverPort",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      version: {
        serializedName: "properties.version",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      privateEndpointConnections: {
        serializedName: "properties.privateEndpointConnections",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnection"
            }
          }
        }
      },
      sharedPrivateLinkResources: {
        serializedName: "properties.sharedPrivateLinkResources",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SharedPrivateLinkResource"
            }
          }
        }
      },
      tls: {
        serializedName: "properties.tls",
        type: {
          name: "Composite",
          className: "WebPubSubTlsSettings"
        }
      },
      hostNamePrefix: {
        serializedName: "properties.hostNamePrefix",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      liveTraceConfiguration: {
        serializedName: "properties.liveTraceConfiguration",
        type: {
          name: "Composite",
          className: "LiveTraceConfiguration"
        }
      },
      resourceLogConfiguration: {
        serializedName: "properties.resourceLogConfiguration",
        type: {
          name: "Composite",
          className: "ResourceLogConfiguration"
        }
      },
      networkACLs: {
        serializedName: "properties.networkACLs",
        type: {
          name: "Composite",
          className: "WebPubSubNetworkACLs"
        }
      },
      publicNetworkAccess: {
        defaultValue: "Enabled",
        serializedName: "properties.publicNetworkAccess",
        type: {
          name: "String"
        }
      },
      disableLocalAuth: {
        defaultValue: false,
        serializedName: "properties.disableLocalAuth",
        type: {
          name: "Boolean"
        }
      },
      disableAadAuth: {
        defaultValue: false,
        serializedName: "properties.disableAadAuth",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Replica: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Replica",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "ResourceSku"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebPubSubUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebPubSubUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebPubSubRegenerateKeyHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebPubSubRegenerateKeyHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebPubSubRestartHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebPubSubRestartHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebPubSubReplicasUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebPubSubReplicasUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebPubSubReplicasRestartHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebPubSubReplicasRestartHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export let discriminators = {
  EventListenerFilter: EventListenerFilter,
  EventListenerEndpoint: EventListenerEndpoint,
  "EventListenerFilter.EventName": EventNameFilter,
  "EventListenerEndpoint.EventHub": EventHubEndpoint
};
