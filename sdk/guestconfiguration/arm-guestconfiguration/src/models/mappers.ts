/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const GuestConfigurationAssignmentProperties: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GuestConfigurationAssignmentProperties",
      modelProperties: {
        targetResourceId: {
          serializedName: "targetResourceId",
          readOnly: true,
          nullable: true,
          type: {
            name: "String",
          },
        },
        guestConfiguration: {
          serializedName: "guestConfiguration",
          type: {
            name: "Composite",
            className: "GuestConfigurationNavigation",
          },
        },
        complianceStatus: {
          serializedName: "complianceStatus",
          readOnly: true,
          type: {
            name: "String",
          },
        },
        lastComplianceStatusChecked: {
          serializedName: "lastComplianceStatusChecked",
          readOnly: true,
          nullable: true,
          type: {
            name: "DateTime",
          },
        },
        latestReportId: {
          serializedName: "latestReportId",
          readOnly: true,
          nullable: true,
          type: {
            name: "String",
          },
        },
        parameterHash: {
          serializedName: "parameterHash",
          readOnly: true,
          nullable: true,
          type: {
            name: "String",
          },
        },
        latestAssignmentReport: {
          serializedName: "latestAssignmentReport",
          type: {
            name: "Composite",
            className: "AssignmentReport",
          },
        },
        context: {
          serializedName: "context",
          type: {
            name: "String",
          },
        },
        assignmentHash: {
          serializedName: "assignmentHash",
          readOnly: true,
          nullable: true,
          type: {
            name: "String",
          },
        },
        provisioningState: {
          serializedName: "provisioningState",
          readOnly: true,
          nullable: true,
          type: {
            name: "String",
          },
        },
        resourceType: {
          serializedName: "resourceType",
          readOnly: true,
          nullable: true,
          type: {
            name: "String",
          },
        },
        vmssVMList: {
          serializedName: "vmssVMList",
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "VmssvmInfo",
              },
            },
          },
        },
      },
    },
  };

export const GuestConfigurationNavigation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GuestConfigurationNavigation",
    modelProperties: {
      kind: {
        serializedName: "kind",
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      version: {
        serializedName: "version",
        type: {
          name: "String",
        },
      },
      contentUri: {
        serializedName: "contentUri",
        type: {
          name: "String",
        },
      },
      contentHash: {
        serializedName: "contentHash",
        type: {
          name: "String",
        },
      },
      assignmentType: {
        serializedName: "assignmentType",
        type: {
          name: "String",
        },
      },
      assignmentSource: {
        serializedName: "assignmentSource",
        readOnly: true,
        nullable: true,
        type: {
          name: "String",
        },
      },
      contentType: {
        serializedName: "contentType",
        readOnly: true,
        nullable: true,
        type: {
          name: "String",
        },
      },
      configurationParameter: {
        serializedName: "configurationParameter",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ConfigurationParameter",
            },
          },
        },
      },
      configurationProtectedParameter: {
        serializedName: "configurationProtectedParameter",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ConfigurationParameter",
            },
          },
        },
      },
      configurationSetting: {
        serializedName: "configurationSetting",
        type: {
          name: "Composite",
          className: "ConfigurationSetting",
        },
      },
    },
  },
};

export const ConfigurationParameter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConfigurationParameter",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      value: {
        serializedName: "value",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ConfigurationSetting: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConfigurationSetting",
    modelProperties: {
      configurationMode: {
        serializedName: "configurationMode",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      allowModuleOverwrite: {
        serializedName: "allowModuleOverwrite",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      actionAfterReboot: {
        serializedName: "actionAfterReboot",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      refreshFrequencyMins: {
        defaultValue: 30,
        serializedName: "refreshFrequencyMins",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      rebootIfNeeded: {
        serializedName: "rebootIfNeeded",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      configurationModeFrequencyMins: {
        defaultValue: 15,
        serializedName: "configurationModeFrequencyMins",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AssignmentReport: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssignmentReport",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      reportId: {
        serializedName: "reportId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      assignment: {
        serializedName: "assignment",
        type: {
          name: "Composite",
          className: "AssignmentInfo",
        },
      },
      vm: {
        serializedName: "vm",
        type: {
          name: "Composite",
          className: "VMInfo",
        },
      },
      startTime: {
        serializedName: "startTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      endTime: {
        serializedName: "endTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      complianceStatus: {
        serializedName: "complianceStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operationType: {
        serializedName: "operationType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resources: {
        serializedName: "resources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssignmentReportResource",
            },
          },
        },
      },
    },
  },
};

export const AssignmentInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssignmentInfo",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      configuration: {
        serializedName: "configuration",
        type: {
          name: "Composite",
          className: "ConfigurationInfo",
        },
      },
    },
  },
};

export const ConfigurationInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConfigurationInfo",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      version: {
        serializedName: "version",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const VMInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VMInfo",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      uuid: {
        serializedName: "uuid",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssignmentReportResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssignmentReportResource",
    modelProperties: {
      complianceStatus: {
        serializedName: "complianceStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resourceId: {
        serializedName: "resourceId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      reasons: {
        serializedName: "reasons",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssignmentReportResourceComplianceReason",
            },
          },
        },
      },
      properties: {
        serializedName: "properties",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const AssignmentReportResourceComplianceReason: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "AssignmentReportResourceComplianceReason",
      modelProperties: {
        phrase: {
          serializedName: "phrase",
          readOnly: true,
          type: {
            name: "String",
          },
        },
        code: {
          serializedName: "code",
          readOnly: true,
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const VmssvmInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VmssvmInfo",
    modelProperties: {
      vmId: {
        serializedName: "vmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      vmResourceId: {
        serializedName: "vmResourceId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      complianceStatus: {
        serializedName: "complianceStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      latestReportId: {
        serializedName: "latestReportId",
        readOnly: true,
        nullable: true,
        type: {
          name: "String",
        },
      },
      lastComplianceChecked: {
        serializedName: "lastComplianceChecked",
        readOnly: true,
        nullable: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String",
        },
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String",
        },
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime",
        },
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String",
        },
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String",
        },
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorResponseError",
        },
      },
    },
  },
};

export const ErrorResponseError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponseError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GuestConfigurationAssignmentList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GuestConfigurationAssignmentList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GuestConfigurationAssignment",
            },
          },
        },
      },
    },
  },
};

export const GuestConfigurationAssignmentReportList: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GuestConfigurationAssignmentReportList",
      modelProperties: {
        value: {
          serializedName: "value",
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "GuestConfigurationAssignmentReport",
              },
            },
          },
        },
      },
    },
  };

export const GuestConfigurationAssignmentReport: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GuestConfigurationAssignmentReport",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "GuestConfigurationAssignmentReportProperties",
        },
      },
    },
  },
};

export const GuestConfigurationAssignmentReportProperties: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GuestConfigurationAssignmentReportProperties",
      modelProperties: {
        complianceStatus: {
          serializedName: "complianceStatus",
          readOnly: true,
          type: {
            name: "String",
          },
        },
        reportId: {
          serializedName: "reportId",
          readOnly: true,
          type: {
            name: "String",
          },
        },
        assignment: {
          serializedName: "assignment",
          type: {
            name: "Composite",
            className: "AssignmentInfo",
          },
        },
        vm: {
          serializedName: "vm",
          type: {
            name: "Composite",
            className: "VMInfo",
          },
        },
        startTime: {
          serializedName: "startTime",
          readOnly: true,
          type: {
            name: "DateTime",
          },
        },
        endTime: {
          serializedName: "endTime",
          readOnly: true,
          type: {
            name: "DateTime",
          },
        },
        details: {
          serializedName: "details",
          type: {
            name: "Composite",
            className: "AssignmentReportDetails",
          },
        },
        vmssResourceId: {
          serializedName: "vmssResourceId",
          readOnly: true,
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const AssignmentReportDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssignmentReportDetails",
    modelProperties: {
      complianceStatus: {
        serializedName: "complianceStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      startTime: {
        serializedName: "startTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      endTime: {
        serializedName: "endTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      jobId: {
        serializedName: "jobId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operationType: {
        serializedName: "operationType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resources: {
        serializedName: "resources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssignmentReportResource",
            },
          },
        },
      },
    },
  },
};

export const OperationList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation",
            },
          },
        },
      },
    },
  },
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "OperationProperties",
        },
      },
    },
  },
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String",
        },
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String",
        },
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationProperties",
    modelProperties: {
      statusCode: {
        serializedName: "statusCode",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties,
    },
  },
};

export const GuestConfigurationAssignment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GuestConfigurationAssignment",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "GuestConfigurationAssignmentProperties",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};
