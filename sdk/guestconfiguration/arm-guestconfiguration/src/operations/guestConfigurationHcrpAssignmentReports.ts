/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { GuestConfigurationHcrpAssignmentReports } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { GuestConfigurationClient } from "../guestConfigurationClient";
import {
  GuestConfigurationHcrpAssignmentReportsListOptionalParams,
  GuestConfigurationHcrpAssignmentReportsListResponse,
  GuestConfigurationHcrpAssignmentReportsGetOptionalParams,
  GuestConfigurationHcrpAssignmentReportsGetResponse,
} from "../models";

/** Class containing GuestConfigurationHcrpAssignmentReports operations. */
export class GuestConfigurationHcrpAssignmentReportsImpl
  implements GuestConfigurationHcrpAssignmentReports
{
  private readonly client: GuestConfigurationClient;

  /**
   * Initialize a new instance of the class GuestConfigurationHcrpAssignmentReports class.
   * @param client Reference to the service client
   */
  constructor(client: GuestConfigurationClient) {
    this.client = client;
  }

  /**
   * List all reports for the guest configuration assignment, latest report first.
   * @param resourceGroupName The resource group name.
   * @param guestConfigurationAssignmentName The guest configuration assignment name.
   * @param machineName The name of the ARC machine.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    guestConfigurationAssignmentName: string,
    machineName: string,
    options?: GuestConfigurationHcrpAssignmentReportsListOptionalParams,
  ): Promise<GuestConfigurationHcrpAssignmentReportsListResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        guestConfigurationAssignmentName,
        machineName,
        options,
      },
      listOperationSpec,
    );
  }

  /**
   * Get a report for the guest configuration assignment, by reportId.
   * @param resourceGroupName The resource group name.
   * @param guestConfigurationAssignmentName The guest configuration assignment name.
   * @param reportId The GUID for the guest configuration assignment report.
   * @param machineName The name of the ARC machine.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    guestConfigurationAssignmentName: string,
    reportId: string,
    machineName: string,
    options?: GuestConfigurationHcrpAssignmentReportsGetOptionalParams,
  ): Promise<GuestConfigurationHcrpAssignmentReportsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        guestConfigurationAssignmentName,
        reportId,
        machineName,
        options,
      },
      getOperationSpec,
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const listOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/{guestConfigurationAssignmentName}/reports",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.GuestConfigurationAssignmentReportList,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.guestConfigurationAssignmentName,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.machineName,
  ],
  headerParameters: [Parameters.accept],
  serializer,
};
const getOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/{guestConfigurationAssignmentName}/reports/{reportId}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.GuestConfigurationAssignmentReport,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.guestConfigurationAssignmentName,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.reportId,
    Parameters.machineName,
  ],
  headerParameters: [Parameters.accept],
  serializer,
};
