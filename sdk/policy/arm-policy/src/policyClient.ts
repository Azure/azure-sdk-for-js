/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreAuth from "@azure/core-auth";
import {
  DataPolicyManifestsImpl,
  PolicyAssignmentsImpl,
  PolicyDefinitionsImpl,
  PolicySetDefinitionsImpl,
  PolicyExemptionsImpl
} from "./operations";
import {
  DataPolicyManifests,
  PolicyAssignments,
  PolicyDefinitions,
  PolicySetDefinitions,
  PolicyExemptions
} from "./operationsInterfaces";
import { PolicyClientContext } from "./policyClientContext";
import { PolicyClientOptionalParams } from "./models";

export class PolicyClient extends PolicyClientContext {
  /**
   * Initializes a new instance of the PolicyClient class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param subscriptionId The ID of the target subscription.
   * @param options The parameter options
   */
  constructor(
    credentials: coreAuth.TokenCredential,
    subscriptionId: string,
    options?: PolicyClientOptionalParams
  ) {
    super(credentials, subscriptionId, options);
    this.dataPolicyManifests = new DataPolicyManifestsImpl(this);
    this.policyAssignments = new PolicyAssignmentsImpl(this);
    this.policyDefinitions = new PolicyDefinitionsImpl(this);
    this.policySetDefinitions = new PolicySetDefinitionsImpl(this);
    this.policyExemptions = new PolicyExemptionsImpl(this);
  }

  dataPolicyManifests: DataPolicyManifests;
  policyAssignments: PolicyAssignments;
  policyDefinitions: PolicyDefinitions;
  policySetDefinitions: PolicySetDefinitions;
  policyExemptions: PolicyExemptions;
}
