/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const ErrorAdditionalInfo: msRest.CompositeMapper = {
  serializedName: "ErrorAdditionalInfo",
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      info: {
        readOnly: true,
        serializedName: "info",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const ErrorDetail: msRest.CompositeMapper = {
  serializedName: "ErrorDetail",
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        readOnly: true,
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        readOnly: true,
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      },
      additionalInfo: {
        readOnly: true,
        serializedName: "additionalInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const CloudError: msRest.CompositeMapper = {
  serializedName: "CloudError",
  type: {
    name: "Composite",
    className: "CloudError",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      }
    }
  }
};

export const DataManifestCustomResourceFunctionDefinition: msRest.CompositeMapper = {
  serializedName: "DataManifestCustomResourceFunctionDefinition",
  type: {
    name: "Composite",
    className: "DataManifestCustomResourceFunctionDefinition",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      fullyQualifiedResourceType: {
        serializedName: "fullyQualifiedResourceType",
        type: {
          name: "String"
        }
      },
      defaultProperties: {
        serializedName: "defaultProperties",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      allowCustomProperties: {
        serializedName: "allowCustomProperties",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DataEffect: msRest.CompositeMapper = {
  serializedName: "DataEffect",
  type: {
    name: "Composite",
    className: "DataEffect",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      detailsSchema: {
        serializedName: "detailsSchema",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const AliasPattern: msRest.CompositeMapper = {
  serializedName: "AliasPattern",
  type: {
    name: "Composite",
    className: "AliasPattern",
    modelProperties: {
      phrase: {
        serializedName: "phrase",
        type: {
          name: "String"
        }
      },
      variable: {
        serializedName: "variable",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "Enum",
          allowedValues: [
            "NotSpecified",
            "Extract"
          ]
        }
      }
    }
  }
};

export const AliasPathMetadata: msRest.CompositeMapper = {
  serializedName: "AliasPathMetadata",
  type: {
    name: "Composite",
    className: "AliasPathMetadata",
    modelProperties: {
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      attributes: {
        readOnly: true,
        serializedName: "attributes",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AliasPath: msRest.CompositeMapper = {
  serializedName: "AliasPath",
  type: {
    name: "Composite",
    className: "AliasPath",
    modelProperties: {
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      apiVersions: {
        serializedName: "apiVersions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      pattern: {
        serializedName: "pattern",
        type: {
          name: "Composite",
          className: "AliasPattern"
        }
      },
      metadata: {
        readOnly: true,
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "AliasPathMetadata"
        }
      }
    }
  }
};

export const Alias: msRest.CompositeMapper = {
  serializedName: "Alias",
  type: {
    name: "Composite",
    className: "Alias",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      paths: {
        serializedName: "paths",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AliasPath"
            }
          }
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "Enum",
          allowedValues: [
            "NotSpecified",
            "PlainText",
            "Mask"
          ]
        }
      },
      defaultPath: {
        serializedName: "defaultPath",
        type: {
          name: "String"
        }
      },
      defaultPattern: {
        serializedName: "defaultPattern",
        type: {
          name: "Composite",
          className: "AliasPattern"
        }
      },
      defaultMetadata: {
        readOnly: true,
        serializedName: "defaultMetadata",
        type: {
          name: "Composite",
          className: "AliasPathMetadata"
        }
      }
    }
  }
};

export const ResourceTypeAliases: msRest.CompositeMapper = {
  serializedName: "ResourceTypeAliases",
  type: {
    name: "Composite",
    className: "ResourceTypeAliases",
    modelProperties: {
      resourceType: {
        serializedName: "resourceType",
        type: {
          name: "String"
        }
      },
      aliases: {
        serializedName: "aliases",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Alias"
            }
          }
        }
      }
    }
  }
};

export const DataPolicyManifest: msRest.CompositeMapper = {
  serializedName: "DataPolicyManifest",
  type: {
    name: "Composite",
    className: "DataPolicyManifest",
    modelProperties: {
      namespaces: {
        serializedName: "properties.namespaces",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      policyMode: {
        serializedName: "properties.policyMode",
        type: {
          name: "String"
        }
      },
      isBuiltInOnly: {
        serializedName: "properties.isBuiltInOnly",
        type: {
          name: "Boolean"
        }
      },
      resourceTypeAliases: {
        serializedName: "properties.resourceTypeAliases",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResourceTypeAliases"
            }
          }
        }
      },
      effects: {
        serializedName: "properties.effects",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataEffect"
            }
          }
        }
      },
      fieldValues: {
        serializedName: "properties.fieldValues",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      standard: {
        serializedName: "properties.resourceFunctions.standard",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      custom: {
        serializedName: "properties.resourceFunctions.custom",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataManifestCustomResourceFunctionDefinition"
            }
          }
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataPolicyManifestListResult: msRest.CompositeMapper = {
  serializedName: "DataPolicyManifestListResult",
  type: {
    name: "Composite",
    className: "DataPolicyManifestListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataPolicyManifest"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
