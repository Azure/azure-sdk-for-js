/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  DataPolicyManifest,
  DataPolicyManifestsListOptionalParams,
  DataPolicyManifestsGetByPolicyModeOptionalParams,
  DataPolicyManifestsGetByPolicyModeResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a DataPolicyManifests. */
export interface DataPolicyManifests {
  /**
   * This operation retrieves a list of all the data policy manifests that match the optional given
   * $filter. Valid values for $filter are: "$filter=namespace eq '{0}'". If $filter is not provided, the
   * unfiltered list includes all data policy manifests for data resource types. If $filter=namespace is
   * provided, the returned list only includes all data policy manifests that have a namespace matching
   * the provided value.
   * @param options The options parameters.
   */
  list(
    options?: DataPolicyManifestsListOptionalParams
  ): PagedAsyncIterableIterator<DataPolicyManifest>;
  /**
   * This operation retrieves the data policy manifest with the given policy mode.
   * @param policyMode The policy mode of the data policy manifest to get.
   * @param options The options parameters.
   */
  getByPolicyMode(
    policyMode: string,
    options?: DataPolicyManifestsGetByPolicyModeOptionalParams
  ): Promise<DataPolicyManifestsGetByPolicyModeResponse>;
}
