/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * The policy definition.
 */
export interface PolicyDefinition extends BaseResource {
  /**
   * The type of policy definition. Possible values are NotSpecified, BuiltIn, and Custom. Possible
   * values include: 'NotSpecified', 'BuiltIn', 'Custom'
   */
  policyType?: PolicyType;
  /**
   * The policy definition mode. Possible values are NotSpecified, Indexed, and All. Possible
   * values include: 'NotSpecified', 'Indexed', 'All'
   */
  mode?: PolicyMode;
  /**
   * The display name of the policy definition.
   */
  displayName?: string;
  /**
   * The policy definition description.
   */
  description?: string;
  /**
   * The policy rule.
   */
  policyRule?: any;
  /**
   * The policy definition metadata.
   */
  metadata?: any;
  /**
   * Required if a parameter is used in policy rule.
   */
  parameters?: any;
  /**
   * The ID of the policy definition.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the policy definition.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
}

/**
 * The policy assignment.
 */
export interface PolicyAssignment extends BaseResource {
  /**
   * The display name of the policy assignment.
   */
  displayName?: string;
  /**
   * The ID of the policy definition.
   */
  policyDefinitionId?: string;
  /**
   * The scope for the policy assignment.
   */
  scope?: string;
  /**
   * Required if a parameter is used in policy rule.
   */
  parameters?: any;
  /**
   * This message will be part of response in case of policy violation.
   */
  description?: string;
  /**
   * The ID of the policy assignment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The type of the policy assignment.
   */
  type?: string;
  /**
   * The name of the policy assignment.
   */
  name?: string;
}

/**
 * Optional Parameters.
 */
export interface PolicyAssignmentsListForResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface PolicyAssignmentsListForResourceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface PolicyAssignmentsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation.
   */
  filter?: string;
}

/**
 * An interface representing PolicyClientOptions.
 */
export interface PolicyClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * List of policy definitions.
 * @extends Array<PolicyDefinition>
 */
export interface PolicyDefinitionListResult extends Array<PolicyDefinition> {
  /**
   * The URL to use for getting the next set of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * List of policy assignments.
 * @extends Array<PolicyAssignment>
 */
export interface PolicyAssignmentListResult extends Array<PolicyAssignment> {
  /**
   * The URL to use for getting the next set of results.
   */
  nextLink?: string;
}

/**
 * Defines values for PolicyType.
 * Possible values include: 'NotSpecified', 'BuiltIn', 'Custom'
 * @readonly
 * @enum {string}
 */
export type PolicyType = 'NotSpecified' | 'BuiltIn' | 'Custom';

/**
 * Defines values for PolicyMode.
 * Possible values include: 'NotSpecified', 'Indexed', 'All'
 * @readonly
 * @enum {string}
 */
export type PolicyMode = 'NotSpecified' | 'Indexed' | 'All';

/**
 * Contains response data for the createOrUpdate operation.
 */
export type PolicyDefinitionsCreateOrUpdateResponse = PolicyDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyDefinition;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PolicyDefinitionsGetResponse = PolicyDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyDefinition;
    };
};

/**
 * Contains response data for the getBuiltIn operation.
 */
export type PolicyDefinitionsGetBuiltInResponse = PolicyDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyDefinition;
    };
};

/**
 * Contains response data for the createOrUpdateAtManagementGroup operation.
 */
export type PolicyDefinitionsCreateOrUpdateAtManagementGroupResponse = PolicyDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyDefinition;
    };
};

/**
 * Contains response data for the getAtManagementGroup operation.
 */
export type PolicyDefinitionsGetAtManagementGroupResponse = PolicyDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyDefinition;
    };
};

/**
 * Contains response data for the list operation.
 */
export type PolicyDefinitionsListResponse = PolicyDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyDefinitionListResult;
    };
};

/**
 * Contains response data for the listBuiltIn operation.
 */
export type PolicyDefinitionsListBuiltInResponse = PolicyDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyDefinitionListResult;
    };
};

/**
 * Contains response data for the listByManagementGroup operation.
 */
export type PolicyDefinitionsListByManagementGroupResponse = PolicyDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyDefinitionListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type PolicyDefinitionsListNextResponse = PolicyDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyDefinitionListResult;
    };
};

/**
 * Contains response data for the listBuiltInNext operation.
 */
export type PolicyDefinitionsListBuiltInNextResponse = PolicyDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyDefinitionListResult;
    };
};

/**
 * Contains response data for the listByManagementGroupNext operation.
 */
export type PolicyDefinitionsListByManagementGroupNextResponse = PolicyDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyDefinitionListResult;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type PolicyAssignmentsDeleteMethodResponse = PolicyAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyAssignment;
    };
};

/**
 * Contains response data for the create operation.
 */
export type PolicyAssignmentsCreateResponse = PolicyAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyAssignment;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PolicyAssignmentsGetResponse = PolicyAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyAssignment;
    };
};

/**
 * Contains response data for the listForResourceGroup operation.
 */
export type PolicyAssignmentsListForResourceGroupResponse = PolicyAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyAssignmentListResult;
    };
};

/**
 * Contains response data for the listForResource operation.
 */
export type PolicyAssignmentsListForResourceResponse = PolicyAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyAssignmentListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type PolicyAssignmentsListResponse = PolicyAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyAssignmentListResult;
    };
};

/**
 * Contains response data for the deleteById operation.
 */
export type PolicyAssignmentsDeleteByIdResponse = PolicyAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyAssignment;
    };
};

/**
 * Contains response data for the createById operation.
 */
export type PolicyAssignmentsCreateByIdResponse = PolicyAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyAssignment;
    };
};

/**
 * Contains response data for the getById operation.
 */
export type PolicyAssignmentsGetByIdResponse = PolicyAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyAssignment;
    };
};

/**
 * Contains response data for the listForResourceGroupNext operation.
 */
export type PolicyAssignmentsListForResourceGroupNextResponse = PolicyAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyAssignmentListResult;
    };
};

/**
 * Contains response data for the listForResourceNext operation.
 */
export type PolicyAssignmentsListForResourceNextResponse = PolicyAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyAssignmentListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type PolicyAssignmentsListNextResponse = PolicyAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyAssignmentListResult;
    };
};
