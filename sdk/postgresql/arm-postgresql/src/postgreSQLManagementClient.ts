/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as operations from "./operations";
import { PostgreSQLManagementClientContext } from "./postgreSQLManagementClientContext";


class PostgreSQLManagementClient extends PostgreSQLManagementClientContext {
  // Operation groups
  servers: operations.Servers;
  replicas: operations.Replicas;
  firewallRules: operations.FirewallRules;
  virtualNetworkRules: operations.VirtualNetworkRules;
  databases: operations.Databases;
  configurations: operations.Configurations;
  serverParameters: operations.ServerParameters;
  logFiles: operations.LogFiles;
  serverAdministrators: operations.ServerAdministrators;
  recoverableServers: operations.RecoverableServers;
  serverBasedPerformanceTier: operations.ServerBasedPerformanceTier;
  locationBasedPerformanceTier: operations.LocationBasedPerformanceTier;
  checkNameAvailability: operations.CheckNameAvailability;
  operations: operations.Operations;
  serverSecurityAlertPolicies: operations.ServerSecurityAlertPolicies;
  privateEndpointConnections: operations.PrivateEndpointConnections;
  privateLinkResources: operations.PrivateLinkResources;
  serverKeys: operations.ServerKeys;

  /**
   * Initializes a new instance of the PostgreSQLManagementClient class.
   * @param credentials Credentials needed for the client to connect to Azure.
   * @param subscriptionId The ID of the target subscription.
   * @param [options] The parameter options
   */
  constructor(credentials: msRest.ServiceClientCredentials, subscriptionId: string, options?: Models.PostgreSQLManagementClientOptions) {
    super(credentials, subscriptionId, options);
    this.servers = new operations.Servers(this);
    this.replicas = new operations.Replicas(this);
    this.firewallRules = new operations.FirewallRules(this);
    this.virtualNetworkRules = new operations.VirtualNetworkRules(this);
    this.databases = new operations.Databases(this);
    this.configurations = new operations.Configurations(this);
    this.serverParameters = new operations.ServerParameters(this);
    this.logFiles = new operations.LogFiles(this);
    this.serverAdministrators = new operations.ServerAdministrators(this);
    this.recoverableServers = new operations.RecoverableServers(this);
    this.serverBasedPerformanceTier = new operations.ServerBasedPerformanceTier(this);
    this.locationBasedPerformanceTier = new operations.LocationBasedPerformanceTier(this);
    this.checkNameAvailability = new operations.CheckNameAvailability(this);
    this.operations = new operations.Operations(this);
    this.serverSecurityAlertPolicies = new operations.ServerSecurityAlertPolicies(this);
    this.privateEndpointConnections = new operations.PrivateEndpointConnections(this);
    this.privateLinkResources = new operations.PrivateLinkResources(this);
    this.serverKeys = new operations.ServerKeys(this);
  }
}

// Operation Specifications

export {
  PostgreSQLManagementClient,
  PostgreSQLManagementClientContext,
  Models as PostgreSQLManagementModels,
  Mappers as PostgreSQLManagementMappers
};
export * from "./operations";
