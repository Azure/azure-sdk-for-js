/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const Database: msRest.CompositeMapper = {
  serializedName: "Database",
  type: {
    name: "Composite",
    className: "Database",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      charset: {
        serializedName: "properties.charset",
        type: {
          name: "String"
        }
      },
      collation: {
        serializedName: "properties.collation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: msRest.CompositeMapper = {
  serializedName: "ErrorAdditionalInfo",
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      info: {
        readOnly: true,
        serializedName: "info",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        readOnly: true,
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        readOnly: true,
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorResponse"
            }
          }
        }
      },
      additionalInfo: {
        readOnly: true,
        serializedName: "additionalInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureEntityResource: msRest.CompositeMapper = {
  serializedName: "AzureEntityResource",
  type: {
    name: "Composite",
    className: "AzureEntityResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Sku: msRest.CompositeMapper = {
  serializedName: "Sku",
  type: {
    name: "Composite",
    className: "Sku",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tier: {
        required: true,
        serializedName: "tier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RecoverableServerResource: msRest.CompositeMapper = {
  serializedName: "RecoverableServerResource",
  type: {
    name: "Composite",
    className: "RecoverableServerResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      availabilityZone: {
        readOnly: true,
        serializedName: "properties.availabilityZone",
        type: {
          name: "String"
        }
      },
      serverEdition: {
        readOnly: true,
        serializedName: "properties.serverEdition",
        type: {
          name: "String"
        }
      },
      version: {
        readOnly: true,
        serializedName: "properties.version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualNetworkSubnetUsageParameter: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkSubnetUsageParameter",
  type: {
    name: "Composite",
    className: "VirtualNetworkSubnetUsageParameter",
    modelProperties: {
      virtualNetworkArmResourceId: {
        serializedName: "virtualNetworkArmResourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DelegatedSubnetUsage: msRest.CompositeMapper = {
  serializedName: "DelegatedSubnetUsage",
  type: {
    name: "Composite",
    className: "DelegatedSubnetUsage",
    modelProperties: {
      subnetName: {
        readOnly: true,
        serializedName: "subnetName",
        type: {
          name: "String"
        }
      },
      usage: {
        readOnly: true,
        serializedName: "usage",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const VirtualNetworkSubnetUsageResult: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkSubnetUsageResult",
  type: {
    name: "Composite",
    className: "VirtualNetworkSubnetUsageResult",
    modelProperties: {
      delegatedSubnetsUsage: {
        readOnly: true,
        serializedName: "delegatedSubnetsUsage",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DelegatedSubnetUsage"
            }
          }
        }
      }
    }
  }
};

export const StorageMBCapability: msRest.CompositeMapper = {
  serializedName: "StorageMBCapability",
  type: {
    name: "Composite",
    className: "StorageMBCapability",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      supportedIops: {
        readOnly: true,
        serializedName: "supportedIops",
        type: {
          name: "Number"
        }
      },
      storageSizeMB: {
        readOnly: true,
        serializedName: "storageSizeMB",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const VcoreCapability: msRest.CompositeMapper = {
  serializedName: "VcoreCapability",
  type: {
    name: "Composite",
    className: "VcoreCapability",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      vCores: {
        readOnly: true,
        serializedName: "vCores",
        type: {
          name: "Number"
        }
      },
      supportedIops: {
        readOnly: true,
        serializedName: "supportedIops",
        type: {
          name: "Number"
        }
      },
      supportedMemoryPerVcoreMB: {
        readOnly: true,
        serializedName: "supportedMemoryPerVcoreMB",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ServerVersionCapability: msRest.CompositeMapper = {
  serializedName: "ServerVersionCapability",
  type: {
    name: "Composite",
    className: "ServerVersionCapability",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      supportedVcores: {
        readOnly: true,
        serializedName: "supportedVcores",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VcoreCapability"
            }
          }
        }
      }
    }
  }
};

export const StorageEditionCapability: msRest.CompositeMapper = {
  serializedName: "StorageEditionCapability",
  type: {
    name: "Composite",
    className: "StorageEditionCapability",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      supportedStorageMB: {
        readOnly: true,
        serializedName: "supportedStorageMB",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StorageMBCapability"
            }
          }
        }
      }
    }
  }
};

export const ServerEditionCapability: msRest.CompositeMapper = {
  serializedName: "ServerEditionCapability",
  type: {
    name: "Composite",
    className: "ServerEditionCapability",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      supportedStorageEditions: {
        readOnly: true,
        serializedName: "supportedStorageEditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StorageEditionCapability"
            }
          }
        }
      },
      supportedServerVersions: {
        readOnly: true,
        serializedName: "supportedServerVersions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServerVersionCapability"
            }
          }
        }
      }
    }
  }
};

export const CapabilityProperties: msRest.CompositeMapper = {
  serializedName: "CapabilityProperties",
  type: {
    name: "Composite",
    className: "CapabilityProperties",
    modelProperties: {
      zone: {
        readOnly: true,
        serializedName: "zone",
        type: {
          name: "String"
        }
      },
      supportedFlexibleServerEditions: {
        readOnly: true,
        serializedName: "supportedFlexibleServerEditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServerEditionCapability"
            }
          }
        }
      }
    }
  }
};

export const StorageProfile: msRest.CompositeMapper = {
  serializedName: "StorageProfile",
  type: {
    name: "Composite",
    className: "StorageProfile",
    modelProperties: {
      backupRetentionDays: {
        serializedName: "backupRetentionDays",
        type: {
          name: "Number"
        }
      },
      storageMB: {
        serializedName: "storageMB",
        type: {
          name: "Number"
        }
      },
      geoRedundantBackup: {
        serializedName: "geoRedundantBackup",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MaintenanceWindow: msRest.CompositeMapper = {
  serializedName: "MaintenanceWindow",
  type: {
    name: "Composite",
    className: "MaintenanceWindow",
    modelProperties: {
      customWindow: {
        serializedName: "customWindow",
        type: {
          name: "String"
        }
      },
      startHour: {
        serializedName: "startHour",
        type: {
          name: "Number"
        }
      },
      startMinute: {
        serializedName: "startMinute",
        type: {
          name: "Number"
        }
      },
      dayOfWeek: {
        serializedName: "dayOfWeek",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ServerPropertiesDelegatedSubnetArguments: msRest.CompositeMapper = {
  serializedName: "ServerProperties_delegatedSubnetArguments",
  type: {
    name: "Composite",
    className: "ServerPropertiesDelegatedSubnetArguments",
    modelProperties: {
      subnetArmResourceId: {
        serializedName: "subnetArmResourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerPropertiesPrivateDnsZoneArguments: msRest.CompositeMapper = {
  serializedName: "ServerProperties_privateDnsZoneArguments",
  type: {
    name: "Composite",
    className: "ServerPropertiesPrivateDnsZoneArguments",
    modelProperties: {
      privateDnsZoneArmResourceId: {
        serializedName: "privateDnsZoneArmResourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Identity: msRest.CompositeMapper = {
  serializedName: "Identity",
  type: {
    name: "Composite",
    className: "Identity",
    modelProperties: {
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "Enum",
          allowedValues: [
            "SystemAssigned"
          ]
        }
      }
    }
  }
};

export const Server: msRest.CompositeMapper = {
  serializedName: "Server",
  type: {
    name: "Composite",
    className: "Server",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "Identity"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      administratorLogin: {
        serializedName: "properties.administratorLogin",
        type: {
          name: "String"
        }
      },
      administratorLoginPassword: {
        serializedName: "properties.administratorLoginPassword",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "properties.version",
        type: {
          name: "String"
        }
      },
      state: {
        readOnly: true,
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      haState: {
        readOnly: true,
        serializedName: "properties.haState",
        type: {
          name: "String"
        }
      },
      fullyQualifiedDomainName: {
        readOnly: true,
        serializedName: "properties.fullyQualifiedDomainName",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      storageProfile: {
        serializedName: "properties.storageProfile",
        type: {
          name: "Composite",
          className: "StorageProfile"
        }
      },
      publicNetworkAccess: {
        readOnly: true,
        serializedName: "properties.publicNetworkAccess",
        type: {
          name: "String"
        }
      },
      maintenanceWindow: {
        serializedName: "properties.maintenanceWindow",
        type: {
          name: "Composite",
          className: "MaintenanceWindow"
        }
      },
      haEnabled: {
        serializedName: "properties.haEnabled",
        type: {
          name: "Enum",
          allowedValues: [
            "Enabled",
            "Disabled"
          ]
        }
      },
      sourceServerName: {
        serializedName: "properties.sourceServerName",
        type: {
          name: "String"
        }
      },
      sourceSubscriptionId: {
        serializedName: "properties.sourceSubscriptionId",
        type: {
          name: "String"
        }
      },
      sourceResourceGroupName: {
        serializedName: "properties.sourceResourceGroupName",
        type: {
          name: "String"
        }
      },
      pointInTimeUTC: {
        serializedName: "properties.pointInTimeUTC",
        type: {
          name: "DateTime"
        }
      },
      availabilityZone: {
        serializedName: "properties.availabilityZone",
        type: {
          name: "String"
        }
      },
      standbyAvailabilityZone: {
        readOnly: true,
        serializedName: "properties.standbyAvailabilityZone",
        type: {
          name: "String"
        }
      },
      byokEnforcement: {
        readOnly: true,
        serializedName: "properties.byokEnforcement",
        type: {
          name: "String"
        }
      },
      delegatedSubnetArguments: {
        serializedName: "properties.delegatedSubnetArguments",
        type: {
          name: "Composite",
          className: "ServerPropertiesDelegatedSubnetArguments"
        }
      },
      privateDnsZoneArguments: {
        serializedName: "properties.privateDnsZoneArguments",
        type: {
          name: "Composite",
          className: "ServerPropertiesPrivateDnsZoneArguments"
        }
      },
      createMode: {
        serializedName: "properties.createMode",
        type: {
          name: "String"
        }
      },
      serverTags: {
        serializedName: "properties.tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ServerForUpdate: msRest.CompositeMapper = {
  serializedName: "ServerForUpdate",
  type: {
    name: "Composite",
    className: "ServerForUpdate",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      administratorLoginPassword: {
        serializedName: "properties.administratorLoginPassword",
        type: {
          name: "String"
        }
      },
      storageProfile: {
        serializedName: "properties.storageProfile",
        type: {
          name: "Composite",
          className: "StorageProfile"
        }
      },
      haEnabled: {
        serializedName: "properties.haEnabled",
        type: {
          name: "Enum",
          allowedValues: [
            "Enabled",
            "Disabled"
          ]
        }
      },
      maintenanceWindow: {
        serializedName: "properties.maintenanceWindow",
        type: {
          name: "Composite",
          className: "MaintenanceWindow"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const FirewallRule: msRest.CompositeMapper = {
  serializedName: "FirewallRule",
  type: {
    name: "Composite",
    className: "FirewallRule",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      startIpAddress: {
        required: true,
        serializedName: "properties.startIpAddress",
        constraints: {
          Pattern: /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/
        },
        type: {
          name: "String"
        }
      },
      endIpAddress: {
        required: true,
        serializedName: "properties.endIpAddress",
        constraints: {
          Pattern: /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Configuration: msRest.CompositeMapper = {
  serializedName: "Configuration",
  type: {
    name: "Composite",
    className: "Configuration",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      value: {
        serializedName: "properties.value",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      defaultValue: {
        readOnly: true,
        serializedName: "properties.defaultValue",
        type: {
          name: "String"
        }
      },
      dataType: {
        readOnly: true,
        serializedName: "properties.dataType",
        type: {
          name: "String"
        }
      },
      allowedValues: {
        readOnly: true,
        serializedName: "properties.allowedValues",
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "properties.source",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "OperationDisplay",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        readOnly: true,
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        readOnly: true,
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        readOnly: true,
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        readOnly: true,
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        type: {
          name: "Boolean"
        }
      },
      origin: {
        readOnly: true,
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      properties: {
        readOnly: true,
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Object"
            }
          }
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NameAvailabilityRequest: msRest.CompositeMapper = {
  serializedName: "NameAvailabilityRequest",
  type: {
    name: "Composite",
    className: "NameAvailabilityRequest",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NameAvailability: msRest.CompositeMapper = {
  serializedName: "NameAvailability",
  type: {
    name: "Composite",
    className: "NameAvailability",
    modelProperties: {
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      nameAvailable: {
        serializedName: "nameAvailable",
        type: {
          name: "Boolean"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceModelWithAllowedPropertySetIdentity: msRest.CompositeMapper = {
  serializedName: "ResourceModelWithAllowedPropertySet_identity",
  type: {
    name: "Composite",
    className: "ResourceModelWithAllowedPropertySetIdentity",
    modelProperties: {
      ...Identity.type.modelProperties
    }
  }
};

export const ResourceModelWithAllowedPropertySetSku: msRest.CompositeMapper = {
  serializedName: "ResourceModelWithAllowedPropertySet_sku",
  type: {
    name: "Composite",
    className: "ResourceModelWithAllowedPropertySetSku",
    modelProperties: {
      ...Sku.type.modelProperties
    }
  }
};

export const Plan: msRest.CompositeMapper = {
  serializedName: "Plan",
  type: {
    name: "Composite",
    className: "Plan",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      publisher: {
        required: true,
        serializedName: "publisher",
        type: {
          name: "String"
        }
      },
      product: {
        required: true,
        serializedName: "product",
        type: {
          name: "String"
        }
      },
      promotionCode: {
        serializedName: "promotionCode",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceModelWithAllowedPropertySetPlan: msRest.CompositeMapper = {
  serializedName: "ResourceModelWithAllowedPropertySet_plan",
  type: {
    name: "Composite",
    className: "ResourceModelWithAllowedPropertySetPlan",
    modelProperties: {
      ...Plan.type.modelProperties
    }
  }
};

export const ResourceModelWithAllowedPropertySet: msRest.CompositeMapper = {
  serializedName: "ResourceModelWithAllowedPropertySet",
  type: {
    name: "Composite",
    className: "ResourceModelWithAllowedPropertySet",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      managedBy: {
        serializedName: "managedBy",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        constraints: {
          Pattern: /^[-\w\._,\(\)]+$/
        },
        type: {
          name: "String"
        }
      },
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ResourceModelWithAllowedPropertySetIdentity"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "ResourceModelWithAllowedPropertySetSku"
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className: "ResourceModelWithAllowedPropertySetPlan"
        }
      }
    }
  }
};

export const DatabaseListResult: msRest.CompositeMapper = {
  serializedName: "DatabaseListResult",
  type: {
    name: "Composite",
    className: "DatabaseListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Database"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerListResult: msRest.CompositeMapper = {
  serializedName: "ServerListResult",
  type: {
    name: "Composite",
    className: "ServerListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Server"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FirewallRuleListResult: msRest.CompositeMapper = {
  serializedName: "FirewallRuleListResult",
  type: {
    name: "Composite",
    className: "FirewallRuleListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FirewallRule"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConfigurationListResult: msRest.CompositeMapper = {
  serializedName: "ConfigurationListResult",
  type: {
    name: "Composite",
    className: "ConfigurationListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Configuration"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CapabilitiesListResult: msRest.CompositeMapper = {
  serializedName: "CapabilitiesListResult",
  type: {
    name: "Composite",
    className: "CapabilitiesListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CapabilityProperties"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
