/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Common fields that are returned in the response for all Azure Resource Manager resources
 * @summary Resource
 */
export interface Resource extends BaseResource {
  /**
   * Fully qualified resource ID for the resource. Ex -
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
   * "Microsoft.Storage/storageAccounts"
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * The resource model definition for a Azure Resource Manager proxy resource. It will not have tags
 * and a location
 * @summary Proxy Resource
 */
export interface ProxyResource extends Resource {
}

/**
 * Represents a Database.
 */
export interface Database extends ProxyResource {
  /**
   * The charset of the database.
   */
  charset?: string;
  /**
   * The collation of the database.
   */
  collation?: string;
}

/**
 * The resource management error additional info.
 */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly info?: any;
}

/**
 * Common error response for all Azure Resource Manager APIs to return error details for failed
 * operations. (This also follows the OData error response format.)
 * @summary Error Response
 */
export interface ErrorResponse {
  /**
   * The error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The error target.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly target?: string;
  /**
   * The error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: ErrorResponse[];
  /**
   * The error additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/**
 * The resource model definition for an Azure Resource Manager tracked top level resource which has
 * 'tags' and a 'location'
 * @summary Tracked Resource
 */
export interface TrackedResource extends Resource {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The geo-location where the resource lives
   */
  location: string;
}

/**
 * The resource model definition for an Azure Resource Manager resource with an etag.
 * @summary Entity Resource
 */
export interface AzureEntityResource extends Resource {
  /**
   * Resource Etag.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly etag?: string;
}

/**
 * Sku information related properties of a server.
 */
export interface Sku {
  /**
   * The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.
   */
  name: string;
  /**
   * The tier of the particular SKU, e.g. Burstable. Possible values include: 'Burstable',
   * 'GeneralPurpose', 'MemoryOptimized'
   */
  tier: SkuTier;
}

/**
 * Represents a recoverable server resource.
 */
export interface RecoverableServerResource extends ProxyResource {
  /**
   * The SKU (pricing tier) of the server.
   */
  sku?: Sku;
  /**
   * The location the resource resides in.
   */
  location?: string;
  /**
   * Availability zone of the server
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly availabilityZone?: string;
  /**
   * Edition of the performance tier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serverEdition?: string;
  /**
   * The PostgreSQL version
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly version?: string;
}

/**
 * Virtual network subnet usage parameter
 */
export interface VirtualNetworkSubnetUsageParameter {
  /**
   * Virtual network resource id.
   */
  virtualNetworkArmResourceId?: string;
}

/**
 * Delegated subnet usage data.
 */
export interface DelegatedSubnetUsage {
  /**
   * name of the subnet
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subnetName?: string;
  /**
   * Number of used delegated subnets
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly usage?: number;
}

/**
 * Virtual network subnet usage data.
 */
export interface VirtualNetworkSubnetUsageResult {
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly delegatedSubnetsUsage?: DelegatedSubnetUsage[];
}

/**
 * storage size in MB capability
 */
export interface StorageMBCapability {
  /**
   * storage MB name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * supported IOPS
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedIops?: number;
  /**
   * storage size in MB
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly storageSizeMB?: number;
}

/**
 * Vcores capability
 */
export interface VcoreCapability {
  /**
   * vCore name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * supported vCores
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly vCores?: number;
  /**
   * supported IOPS
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedIops?: number;
  /**
   * supported memory per vCore in MB
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedMemoryPerVcoreMB?: number;
}

/**
 * Server version capabilities.
 */
export interface ServerVersionCapability {
  /**
   * server version
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedVcores?: VcoreCapability[];
}

/**
 * storage edition capability
 */
export interface StorageEditionCapability {
  /**
   * storage edition name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedStorageMB?: StorageMBCapability[];
}

/**
 * Server edition capabilities.
 */
export interface ServerEditionCapability {
  /**
   * Server edition name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedStorageEditions?: StorageEditionCapability[];
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedServerVersions?: ServerVersionCapability[];
}

/**
 * Location capabilities.
 */
export interface CapabilityProperties {
  /**
   * zone name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly zone?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedFlexibleServerEditions?: ServerEditionCapability[];
}

/**
 * Storage Profile properties of a server
 */
export interface StorageProfile {
  /**
   * Backup retention days for the server.
   */
  backupRetentionDays?: number;
  /**
   * Max storage allowed for a server.
   */
  storageMB?: number;
  /**
   * Geo Backup redundancy option. Possible values include: 'Enabled', 'Disabled'
   */
  geoRedundantBackup?: GeoRedundantBackupOption;
}

/**
 * Maintenance window of a server.
 */
export interface MaintenanceWindow {
  /**
   * indicates whether custom window is enabled or disabled
   */
  customWindow?: string;
  /**
   * start hour for maintenance window
   */
  startHour?: number;
  /**
   * start minute for maintenance window
   */
  startMinute?: number;
  /**
   * day of week for maintenance window
   */
  dayOfWeek?: number;
}

/**
 * An interface representing ServerPropertiesDelegatedSubnetArguments.
 */
export interface ServerPropertiesDelegatedSubnetArguments {
  /**
   * delegated subnet arm resource id.
   */
  subnetArmResourceId?: string;
}

/**
 * An interface representing ServerPropertiesPrivateDnsZoneArguments.
 */
export interface ServerPropertiesPrivateDnsZoneArguments {
  /**
   * private dns zone arm resource id.
   */
  privateDnsZoneArmResourceId?: string;
}

/**
 * Identity for the resource.
 */
export interface Identity {
  /**
   * The principal ID of resource identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The tenant ID of resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
  /**
   * The identity type. Possible values include: 'SystemAssigned'
   */
  type?: ResourceIdentityType;
}

/**
 * Represents a server.
 */
export interface Server extends TrackedResource {
  /**
   * The Azure Active Directory identity of the server.
   */
  identity?: Identity;
  /**
   * The SKU (pricing tier) of the server.
   */
  sku?: Sku;
  /**
   * The administrator's login name of a server. Can only be specified when the server is being
   * created (and is required for creation).
   */
  administratorLogin?: string;
  /**
   * The administrator login password (required for server creation).
   */
  administratorLoginPassword?: string;
  /**
   * PostgreSQL Server version. Possible values include: '12', '11'
   */
  version?: ServerVersion;
  /**
   * A state of a server that is visible to user. Possible values include: 'Ready', 'Dropping',
   * 'Disabled', 'Starting', 'Stopping', 'Stopped', 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: ServerState;
  /**
   * A state of a HA server that is visible to user. Possible values include: 'NotEnabled',
   * 'CreatingStandby', 'ReplicatingData', 'FailingOver', 'Healthy', 'RemovingStandby'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly haState?: ServerHAState;
  /**
   * The fully qualified domain name of a server.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly fullyQualifiedDomainName?: string;
  /**
   * The display name of a server.
   */
  displayName?: string;
  /**
   * Storage profile of a server.
   */
  storageProfile?: StorageProfile;
  /**
   * public network access is enabled or not. Possible values include: 'Enabled', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly publicNetworkAccess?: ServerPublicNetworkAccessState;
  /**
   * Maintenance window of a server.
   */
  maintenanceWindow?: MaintenanceWindow;
  /**
   * stand by count value can be either enabled or disabled. Possible values include: 'Enabled',
   * 'Disabled'
   */
  haEnabled?: HAEnabledEnum;
  /**
   * The source PostgreSQL server name to restore from.
   */
  sourceServerName?: string;
  /**
   * The subscription id of source PostgreSQL server name to restore from.
   */
  sourceSubscriptionId?: string;
  /**
   * The resource group name of source PostgreSQL server name to restore from.
   */
  sourceResourceGroupName?: string;
  /**
   * Restore point creation time (ISO8601 format), specifying the time to restore from.
   */
  pointInTimeUTC?: Date;
  /**
   * availability Zone information of the server.
   */
  availabilityZone?: string;
  /**
   * availability Zone information of the server.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly standbyAvailabilityZone?: string;
  /**
   * Status showing whether the data encryption is enabled with customer-managed keys.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly byokEnforcement?: string;
  delegatedSubnetArguments?: ServerPropertiesDelegatedSubnetArguments;
  privateDnsZoneArguments?: ServerPropertiesPrivateDnsZoneArguments;
  /**
   * The mode to create a new PostgreSQL server. Possible values include: 'Default',
   * 'PointInTimeRestore', 'GeoRestore'
   */
  createMode?: CreateMode;
  /**
   * Application-specific metadata in the form of key-value pairs.
   */
  serverTags?: { [propertyName: string]: string };
}

/**
 * Represents a server to be updated.
 */
export interface ServerForUpdate {
  /**
   * The location the resource resides in.
   */
  location?: string;
  /**
   * The SKU (pricing tier) of the server.
   */
  sku?: Sku;
  /**
   * The password of the administrator login.
   */
  administratorLoginPassword?: string;
  /**
   * Storage profile of a server.
   */
  storageProfile?: StorageProfile;
  /**
   * stand by count value can be either enabled or disabled. Possible values include: 'Enabled',
   * 'Disabled'
   */
  haEnabled?: HAEnabledEnum;
  /**
   * Maintenance window of a server.
   */
  maintenanceWindow?: MaintenanceWindow;
  /**
   * Application-specific metadata in the form of key-value pairs.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Represents a server firewall rule.
 */
export interface FirewallRule extends ProxyResource {
  /**
   * The start IP address of the server firewall rule. Must be IPv4 format.
   */
  startIpAddress: string;
  /**
   * The end IP address of the server firewall rule. Must be IPv4 format.
   */
  endIpAddress: string;
}

/**
 * Represents a Configuration.
 */
export interface Configuration extends ProxyResource {
  /**
   * Value of the configuration.
   */
  value?: string;
  /**
   * Description of the configuration.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Default value of the configuration.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly defaultValue?: string;
  /**
   * Data type of the configuration. Possible values include: 'Boolean', 'Numeric', 'Integer',
   * 'Enumeration'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataType?: ConfigurationDataType;
  /**
   * Allowed values of the configuration.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly allowedValues?: string;
  /**
   * Source of the configuration.
   */
  source?: string;
}

/**
 * Display metadata associated with the operation.
 */
export interface OperationDisplay {
  /**
   * Operation resource provider name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: string;
  /**
   * Resource on which the operation is performed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resource?: string;
  /**
   * Localized friendly name for the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operation?: string;
  /**
   * Operation description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
}

/**
 * REST API operation definition.
 */
export interface Operation {
  /**
   * The name of the operation being performed on this particular object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The localized display information for this particular operation or action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly display?: OperationDisplay;
  /**
   * Indicates whether the operation is a data action
   */
  isDataAction?: boolean;
  /**
   * The intended executor of the operation. Possible values include: 'NotSpecified', 'user',
   * 'system'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly origin?: OperationOrigin;
  /**
   * Additional descriptions for the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly properties?: { [propertyName: string]: any };
}

/**
 * A list of resource provider operations.
 */
export interface OperationListResult {
  /**
   * Collection of available operation details
   */
  value?: Operation[];
  /**
   * URL client should use to fetch the next page (per server side paging).
   * It's null for now, added for future use.
   */
  nextLink?: string;
}

/**
 * Request from client to check resource name availability.
 */
export interface NameAvailabilityRequest {
  /**
   * Resource name to verify.
   */
  name: string;
  /**
   * Resource type used for verification.
   */
  type?: string;
}

/**
 * Represents a resource name availability.
 */
export interface NameAvailability {
  /**
   * Error Message.
   */
  message?: string;
  /**
   * Indicates whether the resource name is available.
   */
  nameAvailable?: boolean;
  /**
   * name of the PostgreSQL server.
   */
  name?: string;
  /**
   * type of the server
   */
  type?: string;
}

/**
 * An interface representing ResourceModelWithAllowedPropertySetIdentity.
 */
export interface ResourceModelWithAllowedPropertySetIdentity extends Identity {
}

/**
 * An interface representing ResourceModelWithAllowedPropertySetSku.
 */
export interface ResourceModelWithAllowedPropertySetSku extends Sku {
}

/**
 * Plan for the resource.
 */
export interface Plan {
  /**
   * A user defined name of the 3rd Party Artifact that is being procured.
   */
  name: string;
  /**
   * The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
   */
  publisher: string;
  /**
   * The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID
   * specified for the artifact at the time of Data Market onboarding.
   */
  product: string;
  /**
   * A publisher provided promotion code as provisioned in Data Market for the said
   * product/artifact.
   */
  promotionCode?: string;
  /**
   * The version of the desired product/artifact.
   */
  version?: string;
}

/**
 * An interface representing ResourceModelWithAllowedPropertySetPlan.
 */
export interface ResourceModelWithAllowedPropertySetPlan extends Plan {
}

/**
 * The resource model definition containing the full set of allowed properties for a resource.
 * Except properties bag, there cannot be a top level property outside of this set.
 */
export interface ResourceModelWithAllowedPropertySet extends BaseResource {
  /**
   * Fully qualified resource ID for the resource. Ex -
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
   * "Microsoft.Storage/storageAccounts"
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The geo-location where the resource lives
   */
  location?: string;
  /**
   * The fully qualified resource ID of the resource that manages this resource. Indicates if this
   * resource is managed by another Azure resource. If this is present, complete mode deployment
   * will not delete the resource if it is removed from the template since it is managed by another
   * resource.
   */
  managedBy?: string;
  /**
   * Metadata used by portal/tooling/etc to render different UX experiences for resources of the
   * same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource
   * provider must validate and persist this value.
   */
  kind?: string;
  /**
   * The etag field is *not* required. If it is provided in the response body, it must also be
   * provided as a header per the normal etag convention.  Entity tags are used for comparing two
   * or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag
   * (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range
   * (section 14.27) header fields.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly etag?: string;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  identity?: ResourceModelWithAllowedPropertySetIdentity;
  sku?: ResourceModelWithAllowedPropertySetSku;
  plan?: ResourceModelWithAllowedPropertySetPlan;
}

/**
 * An interface representing PostgreSQLFlexibleManagementClientOptions.
 */
export interface PostgreSQLFlexibleManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * A List of databases.
 * @extends Array<Database>
 */
export interface DatabaseListResult extends Array<Database> {
  /**
   * The link used to get the next page of databases.
   */
  nextLink?: string;
}

/**
 * @interface
 * A list of servers.
 * @extends Array<Server>
 */
export interface ServerListResult extends Array<Server> {
  /**
   * The link used to get the next page of operations.
   */
  nextLink?: string;
}

/**
 * @interface
 * A list of firewall rules.
 * @extends Array<FirewallRule>
 */
export interface FirewallRuleListResult extends Array<FirewallRule> {
  /**
   * The link used to get the next page of operations.
   */
  nextLink?: string;
}

/**
 * @interface
 * A list of server configurations.
 * @extends Array<Configuration>
 */
export interface ConfigurationListResult extends Array<Configuration> {
  /**
   * The link used to get the next page of operations.
   */
  nextLink?: string;
}

/**
 * @interface
 * location capability
 * @extends Array<CapabilityProperties>
 */
export interface CapabilitiesListResult extends Array<CapabilityProperties> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for SkuTier.
 * Possible values include: 'Burstable', 'GeneralPurpose', 'MemoryOptimized'
 * @readonly
 * @enum {string}
 */
export type SkuTier = 'Burstable' | 'GeneralPurpose' | 'MemoryOptimized';

/**
 * Defines values for ServerVersion.
 * Possible values include: '12', '11'
 * @readonly
 * @enum {string}
 */
export type ServerVersion = '12' | '11';

/**
 * Defines values for ServerState.
 * Possible values include: 'Ready', 'Dropping', 'Disabled', 'Starting', 'Stopping', 'Stopped',
 * 'Updating'
 * @readonly
 * @enum {string}
 */
export type ServerState = 'Ready' | 'Dropping' | 'Disabled' | 'Starting' | 'Stopping' | 'Stopped' | 'Updating';

/**
 * Defines values for ServerHAState.
 * Possible values include: 'NotEnabled', 'CreatingStandby', 'ReplicatingData', 'FailingOver',
 * 'Healthy', 'RemovingStandby'
 * @readonly
 * @enum {string}
 */
export type ServerHAState = 'NotEnabled' | 'CreatingStandby' | 'ReplicatingData' | 'FailingOver' | 'Healthy' | 'RemovingStandby';

/**
 * Defines values for GeoRedundantBackupOption.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type GeoRedundantBackupOption = 'Enabled' | 'Disabled';

/**
 * Defines values for ServerPublicNetworkAccessState.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type ServerPublicNetworkAccessState = 'Enabled' | 'Disabled';

/**
 * Defines values for HAEnabledEnum.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type HAEnabledEnum = 'Enabled' | 'Disabled';

/**
 * Defines values for CreateMode.
 * Possible values include: 'Default', 'PointInTimeRestore', 'GeoRestore'
 * @readonly
 * @enum {string}
 */
export type CreateMode = 'Default' | 'PointInTimeRestore' | 'GeoRestore';

/**
 * Defines values for ResourceIdentityType.
 * Possible values include: 'SystemAssigned'
 * @readonly
 * @enum {string}
 */
export type ResourceIdentityType = 'SystemAssigned';

/**
 * Defines values for ConfigurationDataType.
 * Possible values include: 'Boolean', 'Numeric', 'Integer', 'Enumeration'
 * @readonly
 * @enum {string}
 */
export type ConfigurationDataType = 'Boolean' | 'Numeric' | 'Integer' | 'Enumeration';

/**
 * Defines values for OperationOrigin.
 * Possible values include: 'NotSpecified', 'user', 'system'
 * @readonly
 * @enum {string}
 */
export type OperationOrigin = 'NotSpecified' | 'user' | 'system';

/**
 * Defines values for Body.
 * Possible values include: 'PostgreSQL', 'PostgreSQLCitus', 'MySQL', 'MariaDb', 'Oracle'
 * @readonly
 * @enum {string}
 */
export type Body = 'PostgreSQL' | 'PostgreSQLCitus' | 'MySQL' | 'MariaDb' | 'Oracle';

/**
 * Contains response data for the create operation.
 */
export type DatabasesCreateResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatabasesGetResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type DatabasesListByServerResponse = DatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseListResult;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type DatabasesBeginCreateResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type DatabasesListByServerNextResponse = DatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseListResult;
    };
};

/**
 * Contains response data for the execute operation.
 */
export type GetPrivateDnsZoneSuffixExecuteResponse = {
  /**
   * The parsed response body.
   */
  body: string;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ServersCreateResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ServersUpdateResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServersGetResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ServersListByResourceGroupResponse = ServerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ServersListResponse = ServerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerListResult;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type ServersBeginCreateResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ServersBeginUpdateResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type ServersListByResourceGroupNextResponse = ServerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ServersListNextResponse = ServerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type FirewallRulesCreateOrUpdateResponse = FirewallRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FirewallRule;
    };
};

/**
 * Contains response data for the get operation.
 */
export type FirewallRulesGetResponse = FirewallRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FirewallRule;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type FirewallRulesListByServerResponse = FirewallRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FirewallRuleListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type FirewallRulesBeginCreateOrUpdateResponse = FirewallRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FirewallRule;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type FirewallRulesListByServerNextResponse = FirewallRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FirewallRuleListResult;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ConfigurationsListByServerResponse = ConfigurationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConfigurationListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ConfigurationsGetResponse = Configuration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Configuration;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ConfigurationsUpdateResponse = Configuration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Configuration;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ConfigurationsBeginUpdateResponse = Configuration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Configuration;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type ConfigurationsListByServerNextResponse = ConfigurationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConfigurationListResult;
    };
};

/**
 * Contains response data for the execute operation.
 */
export type CheckNameAvailabilityExecuteResponse = NameAvailability & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NameAvailability;
    };
};

/**
 * Contains response data for the execute operation.
 */
export type LocationBasedCapabilitiesExecuteResponse = CapabilitiesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CapabilitiesListResult;
    };
};

/**
 * Contains response data for the executeNext operation.
 */
export type LocationBasedCapabilitiesExecuteNextResponse = CapabilitiesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CapabilitiesListResult;
    };
};

/**
 * Contains response data for the execute operation.
 */
export type VirtualNetworkSubnetUsageExecuteResponse = VirtualNetworkSubnetUsageResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkSubnetUsageResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RecoverableServersGetResponse = RecoverableServerResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoverableServerResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};
