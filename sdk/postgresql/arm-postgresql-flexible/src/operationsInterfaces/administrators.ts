/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  ActiveDirectoryAdministrator,
  AdministratorsListByServerOptionalParams,
  ActiveDirectoryAdministratorAdd,
  AdministratorsCreateOptionalParams,
  AdministratorsCreateResponse,
  AdministratorsDeleteOptionalParams,
  AdministratorsGetOptionalParams,
  AdministratorsGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Administrators. */
export interface Administrators {
  /**
   * List all the AAD administrators for a given server.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param options The options parameters.
   */
  listByServer(
    resourceGroupName: string,
    serverName: string,
    options?: AdministratorsListByServerOptionalParams
  ): PagedAsyncIterableIterator<ActiveDirectoryAdministrator>;
  /**
   * Creates a new server.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param objectId Guid of the objectId for the administrator.
   * @param parameters The required parameters for adding an active directory administrator for a server.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    serverName: string,
    objectId: string,
    parameters: ActiveDirectoryAdministratorAdd,
    options?: AdministratorsCreateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<AdministratorsCreateResponse>,
      AdministratorsCreateResponse
    >
  >;
  /**
   * Creates a new server.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param objectId Guid of the objectId for the administrator.
   * @param parameters The required parameters for adding an active directory administrator for a server.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    serverName: string,
    objectId: string,
    parameters: ActiveDirectoryAdministratorAdd,
    options?: AdministratorsCreateOptionalParams
  ): Promise<AdministratorsCreateResponse>;
  /**
   * Deletes an Active Directory Administrator associated with the server.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param objectId Guid of the objectId for the administrator.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    serverName: string,
    objectId: string,
    options?: AdministratorsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes an Active Directory Administrator associated with the server.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param objectId Guid of the objectId for the administrator.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    serverName: string,
    objectId: string,
    options?: AdministratorsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Gets information about a server.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param objectId Guid of the objectId for the administrator.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serverName: string,
    objectId: string,
    options?: AdministratorsGetOptionalParams
  ): Promise<AdministratorsGetResponse>;
}
