/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import type { PagedAsyncIterableIterator } from "@azure/core-paging";
import type { SimplePollerLike, OperationState } from "@azure/core-lro";
import type {
  SessionResource,
  TuningOptionEnum,
  TuningConfigurationListSessionsOptionalParams,
  SessionDetailsResource,
  TuningConfigurationListSessionDetailsOptionalParams,
  TuningConfigurationEnableOptionalParams,
  TuningConfigurationEnableResponse,
  TuningConfigurationDisableOptionalParams,
  TuningConfigurationDisableResponse,
  ConfigTuningRequestParameter,
  TuningConfigurationStartSessionOptionalParams,
  TuningConfigurationStartSessionResponse,
  TuningConfigurationStopSessionOptionalParams,
  TuningConfigurationStopSessionResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a TuningConfiguration. */
export interface TuningConfiguration {
  /**
   * Gets up the config tuning session status.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param tuningOption The name of the tuning option.
   * @param options The options parameters.
   */
  listSessions(
    resourceGroupName: string,
    serverName: string,
    tuningOption: TuningOptionEnum,
    options?: TuningConfigurationListSessionsOptionalParams,
  ): PagedAsyncIterableIterator<SessionResource>;
  /**
   * Gets the session details of a config tuning session.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param tuningOption The name of the tuning option.
   * @param sessionId Guid of the objectId for the session.
   * @param options The options parameters.
   */
  listSessionDetails(
    resourceGroupName: string,
    serverName: string,
    tuningOption: TuningOptionEnum,
    sessionId: string,
    options?: TuningConfigurationListSessionDetailsOptionalParams,
  ): PagedAsyncIterableIterator<SessionDetailsResource>;
  /**
   * Enables the config tuning.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param tuningOption The name of the tuning option.
   * @param options The options parameters.
   */
  beginEnable(
    resourceGroupName: string,
    serverName: string,
    tuningOption: TuningOptionEnum,
    options?: TuningConfigurationEnableOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<TuningConfigurationEnableResponse>,
      TuningConfigurationEnableResponse
    >
  >;
  /**
   * Enables the config tuning.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param tuningOption The name of the tuning option.
   * @param options The options parameters.
   */
  beginEnableAndWait(
    resourceGroupName: string,
    serverName: string,
    tuningOption: TuningOptionEnum,
    options?: TuningConfigurationEnableOptionalParams,
  ): Promise<TuningConfigurationEnableResponse>;
  /**
   * Disables the config tuning.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param tuningOption The name of the tuning option.
   * @param options The options parameters.
   */
  beginDisable(
    resourceGroupName: string,
    serverName: string,
    tuningOption: TuningOptionEnum,
    options?: TuningConfigurationDisableOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<TuningConfigurationDisableResponse>,
      TuningConfigurationDisableResponse
    >
  >;
  /**
   * Disables the config tuning.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param tuningOption The name of the tuning option.
   * @param options The options parameters.
   */
  beginDisableAndWait(
    resourceGroupName: string,
    serverName: string,
    tuningOption: TuningOptionEnum,
    options?: TuningConfigurationDisableOptionalParams,
  ): Promise<TuningConfigurationDisableResponse>;
  /**
   * Starts up the config tuning session.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param tuningOption The name of the tuning option.
   * @param configTuningRequest The parameters for tuning request.
   * @param options The options parameters.
   */
  beginStartSession(
    resourceGroupName: string,
    serverName: string,
    tuningOption: TuningOptionEnum,
    configTuningRequest: ConfigTuningRequestParameter,
    options?: TuningConfigurationStartSessionOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<TuningConfigurationStartSessionResponse>,
      TuningConfigurationStartSessionResponse
    >
  >;
  /**
   * Starts up the config tuning session.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param tuningOption The name of the tuning option.
   * @param configTuningRequest The parameters for tuning request.
   * @param options The options parameters.
   */
  beginStartSessionAndWait(
    resourceGroupName: string,
    serverName: string,
    tuningOption: TuningOptionEnum,
    configTuningRequest: ConfigTuningRequestParameter,
    options?: TuningConfigurationStartSessionOptionalParams,
  ): Promise<TuningConfigurationStartSessionResponse>;
  /**
   * Stops the config tuning session.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param tuningOption The name of the tuning option.
   * @param options The options parameters.
   */
  beginStopSession(
    resourceGroupName: string,
    serverName: string,
    tuningOption: TuningOptionEnum,
    options?: TuningConfigurationStopSessionOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<TuningConfigurationStopSessionResponse>,
      TuningConfigurationStopSessionResponse
    >
  >;
  /**
   * Stops the config tuning session.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param tuningOption The name of the tuning option.
   * @param options The options parameters.
   */
  beginStopSessionAndWait(
    resourceGroupName: string,
    serverName: string,
    tuningOption: TuningOptionEnum,
    options?: TuningConfigurationStopSessionOptionalParams,
  ): Promise<TuningConfigurationStopSessionResponse>;
}
