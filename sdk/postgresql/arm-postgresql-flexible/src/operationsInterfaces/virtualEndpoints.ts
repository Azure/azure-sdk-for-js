/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  VirtualEndpointResource,
  VirtualEndpointsListByServerOptionalParams,
  VirtualEndpointsCreateOptionalParams,
  VirtualEndpointsCreateResponse,
  VirtualEndpointResourceForPatch,
  VirtualEndpointsUpdateOptionalParams,
  VirtualEndpointsUpdateResponse,
  VirtualEndpointsDeleteOptionalParams,
  VirtualEndpointsDeleteResponse,
  VirtualEndpointsGetOptionalParams,
  VirtualEndpointsGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a VirtualEndpoints. */
export interface VirtualEndpoints {
  /**
   * List all the servers in a given resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param options The options parameters.
   */
  listByServer(
    resourceGroupName: string,
    serverName: string,
    options?: VirtualEndpointsListByServerOptionalParams
  ): PagedAsyncIterableIterator<VirtualEndpointResource>;
  /**
   * Creates a new virtual endpoint for PostgreSQL flexible server.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param virtualEndpointName The name of the virtual endpoint.
   * @param parameters The required parameters for creating or updating virtual endpoints.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    serverName: string,
    virtualEndpointName: string,
    parameters: VirtualEndpointResource,
    options?: VirtualEndpointsCreateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<VirtualEndpointsCreateResponse>,
      VirtualEndpointsCreateResponse
    >
  >;
  /**
   * Creates a new virtual endpoint for PostgreSQL flexible server.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param virtualEndpointName The name of the virtual endpoint.
   * @param parameters The required parameters for creating or updating virtual endpoints.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    serverName: string,
    virtualEndpointName: string,
    parameters: VirtualEndpointResource,
    options?: VirtualEndpointsCreateOptionalParams
  ): Promise<VirtualEndpointsCreateResponse>;
  /**
   * Updates an existing virtual endpoint. The request body can contain one to many of the properties
   * present in the normal virtual endpoint definition.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param virtualEndpointName The name of the virtual endpoint.
   * @param parameters The required parameters for updating a server.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    serverName: string,
    virtualEndpointName: string,
    parameters: VirtualEndpointResourceForPatch,
    options?: VirtualEndpointsUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<VirtualEndpointsUpdateResponse>,
      VirtualEndpointsUpdateResponse
    >
  >;
  /**
   * Updates an existing virtual endpoint. The request body can contain one to many of the properties
   * present in the normal virtual endpoint definition.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param virtualEndpointName The name of the virtual endpoint.
   * @param parameters The required parameters for updating a server.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    serverName: string,
    virtualEndpointName: string,
    parameters: VirtualEndpointResourceForPatch,
    options?: VirtualEndpointsUpdateOptionalParams
  ): Promise<VirtualEndpointsUpdateResponse>;
  /**
   * Deletes a virtual endpoint.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param virtualEndpointName The name of the virtual endpoint.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    serverName: string,
    virtualEndpointName: string,
    options?: VirtualEndpointsDeleteOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<VirtualEndpointsDeleteResponse>,
      VirtualEndpointsDeleteResponse
    >
  >;
  /**
   * Deletes a virtual endpoint.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param virtualEndpointName The name of the virtual endpoint.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    serverName: string,
    virtualEndpointName: string,
    options?: VirtualEndpointsDeleteOptionalParams
  ): Promise<VirtualEndpointsDeleteResponse>;
  /**
   * Gets information about a virtual endpoint.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param virtualEndpointName The name of the virtual endpoint.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serverName: string,
    virtualEndpointName: string,
    options?: VirtualEndpointsGetOptionalParams
  ): Promise<VirtualEndpointsGetResponse>;
}
