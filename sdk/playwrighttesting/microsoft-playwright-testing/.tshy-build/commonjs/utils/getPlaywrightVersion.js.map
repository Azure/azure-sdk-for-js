{"version":3,"file":"getPlaywrightVersion.js","sourceRoot":"","sources":["../../../src/utils/getPlaywrightVersion.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;;AAElC,2DAAwD;AACxD,yDAAsE;AACtE,2DAA8C;AAC9C,mDAAiD;AAE1C,MAAM,oBAAoB,GAAG,GAAW,EAAE;IAC/C,IAAI,OAAO,CAAC,GAAG,CAAC,2CAA4B,CAAC,sBAAsB,CAAC,EAAE,CAAC;QACrE,OAAO,OAAO,CAAC,GAAG,CAAC,2CAA4B,CAAC,sBAAsB,CAAE,CAAC;IAC3E,CAAC;IAED,MAAM,cAAc,GAAG,IAAA,qCAAiB,GAAE,CAAC;IAC3C,MAAM,OAAO,GAAG,cAAc,CAAC,UAAU,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;IACrE,MAAM,MAAM,GAAG,IAAA,6BAAQ,EAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC;IACnD,MAAM,OAAO,GAAG,cAAc,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;IAC5D,OAAO,CAAC,GAAG,CAAC,2CAA4B,CAAC,sBAAsB,CAAC,GAAG,OAAO,CAAC;IAC3E,sBAAU,CAAC,IAAI,CACb,mCAAmC,OAAO,CAAC,GAAG,CAAC,2CAA4B,CAAC,sBAAsB,CAAC,EAAE,CACtG,CAAC;IACF,OAAO,OAAO,CAAC,GAAG,CAAC,2CAA4B,CAAC,sBAAsB,CAAE,CAAC;AAC3E,CAAC,CAAC;AAdW,QAAA,oBAAoB,wBAc/B","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { getPackageManager } from \"./packageManager.js\";\nimport { InternalEnvironmentVariables } from \"../common/constants.js\";\nimport { execSync } from \"node:child_process\";\nimport { coreLogger } from \"../common/logger.js\";\n\nexport const getPlaywrightVersion = (): string => {\n  if (process.env[InternalEnvironmentVariables.MPT_PLAYWRIGHT_VERSION]) {\n    return process.env[InternalEnvironmentVariables.MPT_PLAYWRIGHT_VERSION]!;\n  }\n\n  const packageManager = getPackageManager();\n  const command = packageManager.runCommand(\"playwright\", \"--version\");\n  const stdout = execSync(command).toString().trim();\n  const version = packageManager.getVersionFromStdout(stdout);\n  process.env[InternalEnvironmentVariables.MPT_PLAYWRIGHT_VERSION] = version;\n  coreLogger.info(\n    `Playwright version being used - ${process.env[InternalEnvironmentVariables.MPT_PLAYWRIGHT_VERSION]}`,\n  );\n  return process.env[InternalEnvironmentVariables.MPT_PLAYWRIGHT_VERSION]!;\n};\n"]}