{"version":3,"file":"reporterUtils.js","sourceRoot":"","sources":["../../../src/utils/reporterUtils.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  FullResult,\n  Location,\n  TestCase,\n  TestResult,\n  TestStep,\n  FullConfig,\n  Suite,\n} from \"@playwright/test/reporter\";\nimport { exec } from \"node:child_process\";\nimport { reporterLogger } from \"../common/logger.js\";\nimport { createHash, randomUUID } from \"node:crypto\";\nimport type { IBackOffOptions } from \"../common/types.js\";\nimport fs from \"node:fs\";\nimport path from \"node:path\";\nimport { Constants } from \"../common/constants.js\";\nimport type { EnvironmentVariables } from \"../common/environmentVariables.js\";\nimport type { DedupedStep, RawTestStep } from \"../common/types.js\";\nimport { TokenType } from \"../model/mptTokenDetails.js\";\nimport type { UploadMetadata } from \"../model/shard.js\";\nimport { Shard, TestRunStatus } from \"../model/shard.js\";\nimport type { RawTestResult } from \"../model/testResult.js\";\nimport { TestResult as MPTTestResult } from \"../model/testResult.js\";\nimport type { TestRunConfig } from \"../model/testRun.js\";\nimport { TestRun } from \"../model/testRun.js\";\nimport type { CIInfo } from \"./cIInfoProvider.js\";\nimport { CI_PROVIDERS } from \"./cIInfoProvider.js\";\nimport { CIInfoProvider } from \"./cIInfoProvider.js\";\nimport type { StorageUri } from \"../model/storageUri.js\";\nimport { getPackageVersion } from \"./utils.js\";\nclass ReporterUtils {\n  private envVariables: EnvironmentVariables;\n\n  private config: FullConfig;\n  totalTests: number;\n  failedTests: number;\n  skippedTests: number;\n  passedTests: number;\n  flakyTests: number;\n  startTime: number;\n\n  // eslint-disable-next-line @azure/azure-sdk/ts-use-interface-parameters\n  constructor(envVariables: EnvironmentVariables, config: FullConfig, _: Suite) {\n    this.config = config;\n    this.envVariables = envVariables;\n    this.startTime = Date.now();\n\n    this.totalTests = 0;\n    this.failedTests = 0;\n    this.skippedTests = 0;\n    this.passedTests = 0;\n    this.flakyTests = 0;\n  }\n\n  public async getTestRunObject(ciInfo: CIInfo): Promise<TestRun> {\n    const testRun = new TestRun();\n    const runName = this.envVariables.runName || (await this.getRunName(ciInfo));\n    testRun.testRunId = this.envVariables.runId;\n    testRun.displayName = ReporterUtils.isNullOrEmpty(runName) ? this.envVariables.runId : runName;\n    testRun.creatorName = this.envVariables.userName;\n    testRun.creatorId = this.envVariables.userId!;\n    testRun.startTime = ReporterUtils.timestampToRFC3339(this.startTime);\n    testRun.ciConfig = {\n      ciProviderName: ciInfo.provider!,\n      branch: ciInfo.branch!,\n      author: ciInfo.author!,\n      commitId: ciInfo.commitId!,\n      revisionUrl: ciInfo.revisionUrl!,\n    };\n    testRun.testRunConfig = this.getTestRunConfig();\n    testRun.cloudReportingEnabled = \"true\";\n    return testRun;\n  }\n\n  public getTestRunShardStartObject(): Shard {\n    const shard = new Shard();\n    if (this.config.shard !== null && this.config.shard !== undefined) {\n      this.envVariables.shardId = this.config.shard.current.toString();\n    } else {\n      this.envVariables.shardId = \"1\";\n    }\n    shard.shardId = this.envVariables.shardId;\n    shard.summary = {\n      startTime: ReporterUtils.timestampToRFC3339(this.startTime),\n    };\n    shard.uploadCompleted = false;\n    return shard;\n  }\n\n  public getTestRunShardEndObject(\n    result: FullResult,\n    // eslint-disable-next-line @azure/azure-sdk/ts-use-interface-parameters\n    shard: Shard,\n    errorMessages: string[],\n    attachmentMetadata: UploadMetadata,\n    workers: number,\n  ): Shard {\n    shard.shardId = this.envVariables.shardId ?? \"1\";\n    shard.summary.totalTime = result.duration;\n    shard.summary.endTime = ReporterUtils.timestampToRFC3339(Date.now());\n    shard.summary.status = TestRunStatus.CLIENT_COMPLETE;\n    shard.summary.errorMessages = errorMessages;\n    shard.summary.uploadMetadata = attachmentMetadata;\n    shard.uploadCompleted = true;\n    shard.workers = workers;\n    return shard;\n  }\n\n  public getOSName(result: TestResult, data: string): string {\n    try {\n      for (const attachment of result.attachments) {\n        if (attachment.name === data) {\n          const match = attachment?.contentType?.match(/charset=(.*)/);\n          const charset = match && match.length > 1 ? match[1] : \"utf-8\";\n          return attachment.body?.toString((charset as any) || \"utf-8\").toUpperCase() || \"\";\n        }\n      }\n    } catch (error) {\n      reporterLogger.error(`Error in fetching OS -  ${error}`);\n    }\n    return \"\";\n  }\n\n  public getTestResultObject(test: TestCase, result: TestResult, jobName: string): MPTTestResult {\n    switch (test.outcome()) {\n      case \"skipped\":\n        this.skippedTests++;\n        this.totalTests++;\n        break;\n      case \"expected\":\n        this.passedTests++;\n        this.totalTests++;\n        break;\n      case \"unexpected\":\n        if (result.retry === test.retries) {\n          this.failedTests++;\n          this.totalTests++;\n        }\n        break;\n      case \"flaky\":\n        this.totalTests++;\n        this.flakyTests++;\n        break;\n      default:\n        break;\n    }\n\n    const testResult = new MPTTestResult();\n    testResult.runId = this.envVariables.runId;\n    testResult.shardId = this.envVariables.runId + \"_\" + this.envVariables.shardId;\n    testResult.accountId = this.envVariables.accountId!;\n    testResult.suiteId = ReporterUtils.calculateSha1(`${test.parent.title}-${test.location.file}`);\n    testResult.testId = testResult.suiteId.concat(`-${ReporterUtils.calculateSha1(test.title)}`);\n    testResult.testCombinationId = test.id;\n    testResult.testExecutionId = randomUUID();\n    testResult.testTitle = test.title;\n    testResult.suiteTitle = this.extractRootParentTitle(test.parent)!;\n    testResult.fileName = test.location.file;\n    testResult.status = this.getTestStatus(test, result);\n    testResult.lineNumber = test.location.line;\n    testResult.retry = result.retry ? result.retry : 0;\n    let browserName = test.parent.project()?.use.browserName?.toLowerCase();\n    if (!browserName) {\n      browserName = test.parent.project()?.use.defaultBrowserType?.toLowerCase();\n    }\n    testResult.webTestConfig = {\n      jobName: jobName,\n      projectName: test.parent.project()!.name,\n      browserType: browserName ? browserName.toUpperCase() : \"\",\n      os: this.getOSName(result, Constants.OS),\n    };\n    testResult.annotations = this.extractTestAnnotations(test.annotations);\n    testResult.tags = this.extractTestTags(test);\n    testResult.resultsSummary = {\n      status: result.status.toUpperCase(),\n      duration: result.duration,\n      startTime: result.startTime.toISOString().replace(/\\.\\d+Z$/, \"Z\"),\n      attachmentsMetadata: this.getAttachmentStatus(result),\n    };\n    testResult.artifactsPath = result.attachments\n      .filter((attachment) => attachment?.path !== null && attachment?.path !== undefined) // Filter attachments with defined and non-null path property\n      .map(\n        (attachment) =>\n          `${testResult.testExecutionId}/${ReporterUtils.getFileRelativePath(attachment.path!)}`,\n      );\n    return testResult;\n  }\n\n  public generateMarkdownSummary(testRunUrl: string): void {\n    try {\n      if (CIInfoProvider.getCIProvider() === CI_PROVIDERS.GITHUB) {\n        const markdownContent = `\n#### Microsoft Playwright Testing run summary\n\n#### Results:\n  \n![pass](https://img.shields.io/badge/status-passed-brightgreen) **Passed:** ${this.passedTests}\n  \n![fail](https://img.shields.io/badge/status-failed-red) **Failed:** ${this.failedTests}\n  \n![flaky](https://img.shields.io/badge/status-flaky-yellow) **Flaky:** ${this.flakyTests}\n  \n![skipped](https://img.shields.io/badge/status-skipped-lightgrey) **Skipped:** ${this.skippedTests}\n  \n#### For more details, visit the [service dashboard](${testRunUrl}).\n    `;\n        fs.writeFileSync(process.env[\"GITHUB_STEP_SUMMARY\"]!, markdownContent);\n      }\n    } catch (err) {\n      reporterLogger.error(`\\nCould not generate markdown summary - ${err}`);\n    }\n  }\n\n  public getRawTestResultObject(result: TestResult): RawTestResult {\n    const rawTestResult: RawTestResult = {\n      steps: this.dedupeSteps(result.steps).map((step) => this.serializeTestStep(step)),\n      errors: this.getTestError(result),\n      stdErr: result.stderr ? JSON.stringify(result.stderr, null, 2) : \"\",\n      stdOut: result.stdout ? JSON.stringify(result.stdout, null, 2) : \"\",\n    };\n    return rawTestResult;\n  }\n\n  public static getRunId(cIInfo: CIInfo): string {\n    if (cIInfo === null || cIInfo.provider === CI_PROVIDERS.DEFAULT) {\n      return randomUUID();\n    }\n\n    const concatString = `${cIInfo.provider}-${cIInfo.repo}-${cIInfo.runId}-${cIInfo.runAttempt}`;\n    const runId = ReporterUtils.calculateSha1(concatString);\n    return runId;\n  }\n\n  public static calculateSha1(buffer: Buffer | string): string {\n    const hash = createHash(\"sha1\");\n    hash.update(buffer);\n    return hash.digest(\"hex\");\n  }\n\n  /*\n  public static getTokenDetails(accessToken: string) {\n    let tokenDetails = new MPTTokenDetails();\n    try {\n      const token = accessToken.split('.')[1];\n      const _token = Buffer.from(token, 'base64');\n      tokenDetails = JSON.parse(_token.toString());\n    } catch (err) {\n      throw err;\n    }\n    return tokenDetails;\n  }\n  */\n\n  public static getTokenDetails<T>(accessToken: string, tokenType: TokenType): T {\n    const token = accessToken.split(\".\")[1]!;\n    const _token = Buffer.from(token, \"base64\");\n    const tokenDetails = JSON.parse(_token.toString());\n\n    switch (tokenType) {\n      case TokenType.MPT:\n        return tokenDetails as T;\n      case TokenType.ENTRA:\n        return tokenDetails as T;\n      default:\n        throw new Error(\"Unsupported token type\");\n    }\n  }\n\n  public static hasAudienceClaim(token: string): boolean {\n    try {\n      // Split the token into its three parts\n      const parts = token.split(\".\");\n      if (parts.length !== 3) {\n        throw new Error(\"Invalid token format\");\n      }\n\n      // Base64 decode the payload\n      const payload = parts[1]!;\n      const decodedPayload = Buffer.from(payload, \"base64\");\n\n      // Parse the decoded payload as JSON\n      const payloadObject = JSON.parse(decodedPayload.toString());\n\n      // Check if the payload has an 'aud' claim\n      return \"aud\" in payloadObject;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  public static timestampToRFC3339(timestamp: number): string {\n    const date = new Date(timestamp);\n    const dateString = date.toISOString().replace(/\\.\\d+Z$/, \"Z\");\n    return dateString;\n  }\n\n  public static getFileRelativePath(filePath: string): string {\n    if (filePath) {\n      let parts = filePath.split(\"/\");\n\n      if (parts.length > 1) {\n        return parts[parts.length - 1]!;\n      }\n\n      parts = filePath.split(\"\\\\\");\n\n      if (parts.length > 1) {\n        return parts[parts.length - 1]!;\n      }\n    }\n\n    return filePath;\n  }\n\n  public static getReporterBackOffOptions: Partial<IBackOffOptions> = {\n    numOfAttempts: 3,\n    jitter: \"full\",\n    retry: (error) => {\n      if (error.response) {\n        const status = error.response.status;\n        if (Constants.NON_RETRYABLE_STATUS_CODES.includes(status)) {\n          return false;\n        }\n      }\n      return true;\n    },\n  };\n\n  // eslint-disable-next-line @azure/azure-sdk/ts-use-interface-parameters\n  public static isTimeGreaterThanCurrentPlus10Minutes(sasUri: StorageUri): boolean {\n    try {\n      const url = new URL(sasUri.uri);\n      const params = new URLSearchParams(url.search);\n      const expiryTime = params.get(\"se\"); // 'se' is the query parameter for the expiry time\n      if (expiryTime) {\n        const timestampFromIsoString = new Date(expiryTime).getTime();\n        const currentTimestampPlus10Minutes = Date.now() + 10 * 60 * 1000;\n        const isSasValidityGreaterThanCurrentTimePlus10Minutes =\n          timestampFromIsoString > currentTimestampPlus10Minutes;\n        if (!isSasValidityGreaterThanCurrentTimePlus10Minutes) {\n          reporterLogger.info(\n            `Sas rotation required because close to expiry, SasUriValidTillTime: ${timestampFromIsoString}, CurrentTime: ${currentTimestampPlus10Minutes}`,\n          );\n        }\n        return isSasValidityGreaterThanCurrentTimePlus10Minutes;\n      }\n      reporterLogger.error(`Sas rotation required because expiry param not found.`);\n      return false;\n    } catch (error) {\n      reporterLogger.error(`Sas rotation required because of ${error}.`);\n      return false;\n    }\n  }\n\n  public static getFileSize(attachmentPath: string): number {\n    try {\n      const stats = fs.statSync(attachmentPath);\n      return stats.size;\n    } catch (error) {\n      return 0;\n    }\n  }\n\n  public static getBufferSize(attachmentBody: Buffer): number {\n    try {\n      const fileSizeInBytes = attachmentBody.length;\n      return fileSizeInBytes;\n    } catch (error) {\n      return 0;\n    }\n  }\n\n  public redactAccessToken(info: string | undefined): string {\n    if (!info || ReporterUtils.isNullOrEmpty(this.envVariables.accessToken)) {\n      return \"\";\n    }\n    const accessTokenRegex = new RegExp(this.envVariables.accessToken, \"g\");\n    return info.replace(accessTokenRegex, Constants.DEFAULT_REDACTED_MESSAGE);\n  }\n  public static getRegionFromAccountID(accountId: string): string | undefined {\n    if (accountId.includes(\"_\")) {\n      return accountId.split(\"_\")[0]!;\n    } else {\n      return;\n    } // Handling for older workspaces without region in id\n  }\n\n  public progressBar(current: number, total: number): void {\n    const width = 40;\n    const percent = current / total;\n    const completed = Math.round(width * percent);\n    const remaining = width - completed;\n\n    if (current % Math.round(total / 5) === 0 || current === total) {\n      process.stdout.write(\"\\r\");\n      process.stdout.write(\n        `[${\"=\".repeat(completed)}${\" \".repeat(remaining)}] ${Math.round(percent * 100)}%`,\n      );\n    }\n  }\n\n  private getTestRunConfig(): TestRunConfig {\n    const testRunConfig: TestRunConfig = {\n      workers: this.getWorkers(),\n      pwVersion: this.config.version,\n      timeout: this.config.globalTimeout,\n      repeatEach: this.config.projects[0].repeatEach,\n      retries: this.config.projects[0].retries,\n      shards: this.config.shard ? this.config.shard : { total: 1 },\n      testFramework: {\n        name: Constants.TEST_FRAMEWORK_NAME,\n        version: this.config.version,\n        runnerName: Constants.TEST_FRAMEWORK_RUNNERNAME,\n      },\n      testType: Constants.TEST_TYPE,\n      testSdkLanguage: Constants.TEST_SDK_LANGUAGE,\n      reporterPackageVersion: getPackageVersion(),\n    };\n    return testRunConfig;\n  }\n\n  private relativeLocation(location: Location | undefined): Location | undefined {\n    if (!location) {\n      return undefined;\n    }\n    const file = this.toPosixPath(path.relative(this.config.rootDir, location.file));\n    return {\n      file,\n      line: location.line,\n      column: location.column,\n    };\n  }\n\n  private extractTestTags(input: TestCase): string[] {\n    let tags: string[] = [];\n    if (\"tags\" in input && Array.isArray(input.tags) && input.tags.length > 0) {\n      tags = input.tags.map((tag) => tag.slice(1));\n      return tags;\n    }\n\n    // Check if the input string contains tags directly\n    const regex = /@(\\w+)/g;\n    const matches = input.title.match(regex);\n    if (matches) {\n      tags = tags.concat(matches.map((match) => match.slice(1)));\n    }\n\n    // Try parsing the input string as a JavaScript object\n    try {\n      const obj = JSON.parse(`{${input}}`);\n      if (obj.tag && Array.isArray(obj.tag)) {\n        tags = tags.concat(obj.tag);\n      }\n    } catch (error) {\n      // Ignore parsing errors\n    }\n    return tags;\n  }\n\n  private extractTestAnnotations(annotations: TestCase[\"annotations\"]): string[] {\n    const result = annotations.map((annotation) => {\n      if (annotation.type && annotation.description) {\n        return `${annotation.type}: ${annotation.description}`;\n      }\n      return annotation.type;\n    });\n    return result;\n  }\n\n  private toPosixPath(aPath: string): string {\n    return aPath.split(path.sep).join(path.posix.sep);\n  }\n\n  private getAttachmentStatus(testResult: TestResult): string {\n    let attachmentStatus: string = \"\";\n    for (const attachment of testResult.attachments) {\n      if (attachment.contentType.includes(\"image\")) {\n        if (attachmentStatus !== \"\") {\n          attachmentStatus += \",\";\n        }\n        attachmentStatus += \"image\";\n      } else if (attachment.contentType.includes(\"video\")) {\n        if (attachmentStatus !== \"\") {\n          attachmentStatus += \",\";\n        }\n        attachmentStatus += \"video\";\n      } else if (attachment.contentType === \"application/zip\") {\n        if (attachmentStatus !== \"\") {\n          attachmentStatus += \",\";\n        }\n        attachmentStatus += \"trace\";\n      } else if (attachment.contentType === \"text/plain\") {\n        if (attachmentStatus !== \"\") {\n          attachmentStatus += \",\";\n        }\n        attachmentStatus += \"txt\";\n      }\n    }\n    return attachmentStatus;\n  }\n\n  private dedupeSteps(steps: TestStep[]): DedupedStep[] {\n    const result: DedupedStep[] = [];\n    let lastResult = undefined;\n    for (const step of steps) {\n      const canDedupe =\n        !step.error && step.duration >= 0 && step.location?.file && !step.steps.length;\n      const lastStep = lastResult?.step;\n      if (\n        canDedupe &&\n        lastResult &&\n        lastStep &&\n        step.category === lastStep.category &&\n        step.title === lastStep.title &&\n        step.location?.file === lastStep.location?.file &&\n        step.location?.line === lastStep.location?.line &&\n        step.location?.column === lastStep.location?.column\n      ) {\n        ++lastResult.count;\n        lastResult.duration += step.duration;\n        continue;\n      }\n      lastResult = { step, count: 1, duration: step.duration };\n      result.push(lastResult);\n      if (!canDedupe) {\n        lastResult = undefined;\n      }\n    }\n    return result;\n  }\n\n  private serializeTestStep(dedupedStep: DedupedStep): RawTestStep {\n    const { step, duration, count } = dedupedStep;\n    const result: RawTestStep = {\n      title: step.title,\n      category: step.category,\n      startTime: step.startTime.toISOString(),\n      duration,\n      error: step.error ? step.error.message : undefined,\n      location: this.relativeLocation(step.location),\n      steps: this.dedupeSteps(step.steps).map((subStep) => this.serializeTestStep(subStep)),\n      count: count,\n    };\n    return result;\n  }\n\n  private getTestStatus(test: TestCase, result: TestResult): string {\n    if (test.expectedStatus === result.status) {\n      if (result.status === \"skipped\") {\n        return \"SKIPPED\";\n      } else {\n        return \"PASSED\";\n      }\n    } else if (result.status === \"interrupted\") {\n      return \"SKIPPED\";\n    } else {\n      return \"FAILED\";\n    }\n  }\n\n  private extractRootParentTitle(suite: Suite): string | undefined {\n    // Traverse through the parent properties until reaching the root parent\n    let currentSuite: Suite | undefined = suite;\n    let depthCount: number = 0;\n    let suiteTitle: string = currentSuite.title;\n    const projectName = currentSuite.project()!.name;\n    while (currentSuite?.parent && !ReporterUtils.isNullOrEmpty(currentSuite.parent.title)) {\n      if (depthCount > 10 || currentSuite.parent.title === projectName) {\n        break;\n      }\n      suiteTitle = suiteTitle + \" > \" + currentSuite.parent.title;\n      currentSuite = currentSuite.parent;\n      depthCount++;\n    }\n    return suiteTitle;\n  }\n\n  private async getRunName(ciInfo: CIInfo): Promise<string> {\n    if (\n      ciInfo.provider === CI_PROVIDERS.GITHUB &&\n      process.env[\"GITHUB_EVENT_NAME\"] === \"pull_request\"\n    ) {\n      const prNumber: string = `${process.env[\"GITHUB_REF_NAME\"]?.split(\"/\")[0]}`;\n      const prLink: string = `${process.env[\"GITHUB_REPOSITORY\"]}/pull/${prNumber}`;\n      return `PR# ${prNumber} on Repo: ${process.env[\"GITHUB_REPOSITORY\"]} (${prLink})`;\n    }\n\n    let gitCommitMessage: string | null = null;\n    try {\n      const gitVersion = await this.runCommand(Constants.GIT_VERSION_COMMAND);\n      if (ReporterUtils.isNullOrEmpty(gitVersion)) {\n        throw new Error(\"Git is not installed on the machine\");\n      }\n      const isInsideWorkTree = await this.runCommand(Constants.GIT_REV_PARSE);\n      if (isInsideWorkTree !== \"true\") {\n        throw new Error(\"Not inside a git repository\");\n      }\n      gitCommitMessage = await this.runCommand(Constants.GIT_COMMIT_MESSAGE_COMMAND);\n      return gitCommitMessage;\n    } catch (err) {\n      reporterLogger.error(`\\nError in getting git commit message: ${err}.`);\n      return \"\";\n    }\n  }\n\n  private async runCommand(command: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n      exec(command, (error, stdout, stderr) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n        if (stderr) {\n          reject(new Error(stderr));\n          return;\n        }\n        resolve(stdout.trim());\n      });\n    });\n  }\n\n  public static isNullOrEmpty(str: string | null | undefined): boolean {\n    return !str || str.trim() === \"\";\n  }\n\n  private getTestError(result: TestResult): string {\n    if (!result.errors || result.errors.length === 0) return \"\";\n    const errorMessages: { message: string }[] = [];\n    result.errors.forEach((error) => {\n      if (error.message) errorMessages.push({ message: error.message });\n      if (error.snippet && error.location) {\n        errorMessages.push({\n          message: error.snippet + \"\\n\\n\" + this.getReadableLineLocation(error.location),\n        });\n      } else if (error.snippet) errorMessages.push({ message: error.snippet });\n    });\n    return JSON.stringify(errorMessages, null, 2);\n  }\n\n  private getReadableLineLocation(location: Location): string {\n    return `at ${location.file}:${location.line}:${location.column}`;\n  }\n\n  private getWorkers(): number {\n    if (\n      this.config.metadata &&\n      \"actualWorkers\" in this.config.metadata &&\n      typeof this.config.metadata.actualWorkers === \"number\"\n    ) {\n      return this.config.metadata.actualWorkers;\n    }\n    return this.config.workers;\n  }\n}\n\nexport default ReporterUtils;\n"]}