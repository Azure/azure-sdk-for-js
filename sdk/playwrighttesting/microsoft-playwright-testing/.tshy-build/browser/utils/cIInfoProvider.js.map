{"version":3,"file":"cIInfoProvider.js","sourceRoot":"","sources":["../../../src/utils/cIInfoProvider.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport enum CI_PROVIDERS {\n  GITHUB = \"GITHUB\",\n  ADO = \"ADO\",\n  DEFAULT = \"DEFAULT\",\n  // Add more CI providers as needed\n}\n\nexport type CIInfo = {\n  provider: CI_PROVIDERS | null;\n  repo: string | null;\n  branch: string | null;\n  author: string | null;\n  commitId: string | null;\n  revisionUrl: string | null;\n  runId: string | null;\n  runAttempt: number | null;\n  jobName: string | null;\n};\n\nexport class CIInfoProvider {\n  private static isGitHubActions(): boolean {\n    return process.env[\"GITHUB_ACTIONS\"] === \"true\";\n  }\n\n  static getCIProvider(): string | null {\n    if (CIInfoProvider.isGitHubActions()) {\n      return CI_PROVIDERS.GITHUB;\n    } else if (CIInfoProvider.isAzureDevOps()) {\n      return CI_PROVIDERS.ADO;\n    } else {\n      return CI_PROVIDERS.DEFAULT;\n    }\n  }\n\n  static getCIInfo(): CIInfo {\n    const ciProvider = CIInfoProvider.getCIProvider();\n    if (ciProvider === CI_PROVIDERS.GITHUB) {\n      // Logic to get GitHub Actions CIInfo\n      return {\n        provider: CI_PROVIDERS.GITHUB,\n        repo: process.env[\"GITHUB_REPOSITORY_ID\"] || null,\n        branch: this.getGHBranchName() || null,\n        author: process.env[\"GITHUB_ACTOR\"] || null,\n        commitId: process.env[\"GITHUB_SHA\"] || null,\n        revisionUrl: process.env[\"GITHUB_SERVER_URL\"]\n          ? `${process.env[\"GITHUB_SERVER_URL\"]}/${process.env[\"GITHUB_REPOSITORY\"]}/commit/${process.env[\"GITHUB_SHA\"]}`\n          : null,\n        runId: process.env[\"GITHUB_RUN_ID\"] || null,\n        runAttempt: process.env[\"GITHUB_RUN_ATTEMPT\"]\n          ? parseInt(process.env[\"GITHUB_RUN_ATTEMPT\"], 10)\n          : null,\n        jobName: process.env[\"GITHUB_JOB\"] || null,\n      };\n    } else if (ciProvider === CI_PROVIDERS.ADO) {\n      // Logic to get Azure DevOps CIInfo\n      return {\n        provider: CI_PROVIDERS.ADO,\n        repo: process.env[\"BUILD_REPOSITORY_ID\"] || null,\n        branch: process.env[\"BUILD_SOURCEBRANCH\"] || null,\n        author: process.env[\"BUILD_REQUESTEDFOR\"] || null,\n        commitId: process.env[\"BUILD_SOURCEVERSION\"] || null,\n        revisionUrl: process.env[\"SYSTEM_TEAMFOUNDATIONCOLLECTIONURI\"]\n          ? `${process.env[\"SYSTEM_TEAMFOUNDATIONCOLLECTIONURI\"]}${process.env[\"SYSTEM_TEAMPROJECT\"]}/_git/${process.env[\"BUILD_REPOSITORY_NAME\"]}/commit/${process.env[\"BUILD_SOURCEVERSION\"]}`\n          : null,\n        runId: this.getADORunId() || null,\n        runAttempt: process.env[\"RELEASE_ATTEMPTNUMBER\"]\n          ? parseInt(process.env[\"RELEASE_ATTEMPTNUMBER\"], 10)\n          : parseInt(process.env[\"SYSTEM_JOBATTEMPT\"] ?? \"\", 10),\n        jobName:\n          process.env[\"SYSTEM_JOBDISPLAYNAME\"] || process.env[\"RELEASE_DEPLOYMENTID\"] || null,\n      };\n    } else {\n      // Handle unsupported CI provider\n      return {\n        provider: CI_PROVIDERS.DEFAULT,\n        repo: process.env[\"REPO\"] ?? null,\n        branch: process.env[\"BRANCH\"] ?? null,\n        author: process.env[\"AUTHOR\"] ?? null,\n        commitId: process.env[\"COMMIT_ID\"] ?? null,\n        revisionUrl: process.env[\"REVISION_URL\"] ?? null,\n        runId: process.env[\"RUN_ID\"] ?? null,\n        runAttempt: process.env[\"RUN_ATTEMPT\"] ? parseInt(process.env[\"RUN_ATTEMPT\"], 10) : null,\n        jobName: process.env[\"JOB_ID\"] ?? null,\n      };\n    }\n  }\n\n  private static isAzureDevOps(): boolean {\n    return (\n      process.env[\"AZURE_HTTP_USER_AGENT\"] !== undefined && process.env[\"TF_BUILD\"] !== undefined\n    );\n  }\n\n  private static getADORunId(): string | null {\n    if (process.env[\"RELEASE_DEFINITIONID\"] && process.env[\"RELEASE_DEPLOYMENTID\"]) {\n      return `${process.env[\"RELEASE_DEFINITIONID\"]}-${process.env[\"RELEASE_DEPLOYMENTID\"]}`;\n    } else if (process.env[\"SYSTEM_DEFINITIONID\"] && process.env[\"SYSTEM_JOBID\"]) {\n      return `${process.env[\"SYSTEM_DEFINITIONID\"]}-${process.env[\"SYSTEM_JOBID\"]}`;\n    }\n    return null;\n  }\n\n  private static getGHBranchName(): string {\n    if (\n      process.env[\"GITHUB_EVENT_NAME\"] === \"pull_request\" ||\n      process.env[\"GITHUB_EVENT_NAME\"] === \"pull_request_target\"\n    ) {\n      return process.env[\"GITHUB_HEAD_REF\"]!;\n    } else {\n      return process.env[\"GITHUB_REF_NAME\"]!;\n    }\n  }\n}\n"]}