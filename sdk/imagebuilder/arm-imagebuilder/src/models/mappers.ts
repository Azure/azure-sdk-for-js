/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const ImageTemplateSource: msRest.CompositeMapper = {
  serializedName: "ImageTemplateSource",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    uberParent: "ImageTemplateSource",
    className: "ImageTemplateSource",
    modelProperties: {
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageTemplateCustomizer: msRest.CompositeMapper = {
  serializedName: "ImageTemplateCustomizer",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    uberParent: "ImageTemplateCustomizer",
    className: "ImageTemplateCustomizer",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageTemplateDistributor: msRest.CompositeMapper = {
  serializedName: "ImageTemplateDistributor",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    uberParent: "ImageTemplateDistributor",
    className: "ImageTemplateDistributor",
    modelProperties: {
      runOutputName: {
        required: true,
        serializedName: "runOutputName",
        constraints: {
          Pattern: /^[A-Za-z0-9-_.]{1,64}$/
        },
        type: {
          name: "String"
        }
      },
      artifactTags: {
        serializedName: "artifactTags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProvisioningError: msRest.CompositeMapper = {
  serializedName: "ProvisioningError",
  type: {
    name: "Composite",
    className: "ProvisioningError",
    modelProperties: {
      provisioningErrorCode: {
        serializedName: "provisioningErrorCode",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageTemplateLastRunStatus: msRest.CompositeMapper = {
  serializedName: "ImageTemplateLastRunStatus",
  type: {
    name: "Composite",
    className: "ImageTemplateLastRunStatus",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      runState: {
        serializedName: "runState",
        type: {
          name: "Enum",
          allowedValues: [
            "Running",
            "Canceling",
            "Succeeded",
            "PartiallySucceeded",
            "Failed",
            "Canceled"
          ]
        }
      },
      runSubState: {
        serializedName: "runSubState",
        type: {
          name: "Enum",
          allowedValues: [
            "Queued",
            "Building",
            "Customizing",
            "Distributing"
          ]
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualNetworkConfig: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkConfig",
  type: {
    name: "Composite",
    className: "VirtualNetworkConfig",
    modelProperties: {
      subnetId: {
        serializedName: "subnetId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageTemplateVmProfile: msRest.CompositeMapper = {
  serializedName: "ImageTemplateVmProfile",
  type: {
    name: "Composite",
    className: "ImageTemplateVmProfile",
    modelProperties: {
      vmSize: {
        serializedName: "vmSize",
        defaultValue: '',
        type: {
          name: "String"
        }
      },
      osDiskSizeGB: {
        serializedName: "osDiskSizeGB",
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      vnetConfig: {
        serializedName: "vnetConfig",
        type: {
          name: "Composite",
          className: "VirtualNetworkConfig"
        }
      }
    }
  }
};

export const ImageTemplateIdentityUserAssignedIdentitiesValue: msRest.CompositeMapper = {
  serializedName: "ImageTemplateIdentity_userAssignedIdentitiesValue",
  type: {
    name: "Composite",
    className: "ImageTemplateIdentityUserAssignedIdentitiesValue",
    modelProperties: {
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      clientId: {
        readOnly: true,
        serializedName: "clientId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageTemplateIdentity: msRest.CompositeMapper = {
  serializedName: "ImageTemplateIdentity",
  type: {
    name: "Composite",
    className: "ImageTemplateIdentity",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "Enum",
          allowedValues: [
            "UserAssigned",
            "None"
          ]
        }
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "ImageTemplateIdentityUserAssignedIdentitiesValue"
            }
          }
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ImageTemplate: msRest.CompositeMapper = {
  serializedName: "ImageTemplate",
  type: {
    name: "Composite",
    className: "ImageTemplate",
    modelProperties: {
      ...Resource.type.modelProperties,
      source: {
        required: true,
        serializedName: "properties.source",
        type: {
          name: "Composite",
          className: "ImageTemplateSource"
        }
      },
      customize: {
        serializedName: "properties.customize",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ImageTemplateCustomizer"
            }
          }
        }
      },
      distribute: {
        required: true,
        serializedName: "properties.distribute",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ImageTemplateDistributor"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "Enum",
          allowedValues: [
            "Creating",
            "Updating",
            "Succeeded",
            "Failed",
            "Deleting"
          ]
        }
      },
      provisioningError: {
        readOnly: true,
        serializedName: "properties.provisioningError",
        type: {
          name: "Composite",
          className: "ProvisioningError"
        }
      },
      lastRunStatus: {
        readOnly: true,
        serializedName: "properties.lastRunStatus",
        type: {
          name: "Composite",
          className: "ImageTemplateLastRunStatus"
        }
      },
      buildTimeoutInMinutes: {
        serializedName: "properties.buildTimeoutInMinutes",
        defaultValue: 0,
        constraints: {
          InclusiveMaximum: 960,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      vmProfile: {
        serializedName: "properties.vmProfile",
        type: {
          name: "Composite",
          className: "ImageTemplateVmProfile"
        }
      },
      identity: {
        required: true,
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ImageTemplateIdentity"
        }
      }
    }
  }
};

export const PlatformImagePurchasePlan: msRest.CompositeMapper = {
  serializedName: "PlatformImagePurchasePlan",
  type: {
    name: "Composite",
    className: "PlatformImagePurchasePlan",
    modelProperties: {
      planName: {
        required: true,
        serializedName: "planName",
        type: {
          name: "String"
        }
      },
      planProduct: {
        required: true,
        serializedName: "planProduct",
        type: {
          name: "String"
        }
      },
      planPublisher: {
        required: true,
        serializedName: "planPublisher",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageTemplatePlatformImageSource: msRest.CompositeMapper = {
  serializedName: "PlatformImage",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ImageTemplateSource.type.polymorphicDiscriminator,
    uberParent: "ImageTemplateSource",
    className: "ImageTemplatePlatformImageSource",
    modelProperties: {
      ...ImageTemplateSource.type.modelProperties,
      publisher: {
        serializedName: "publisher",
        type: {
          name: "String"
        }
      },
      offer: {
        serializedName: "offer",
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      planInfo: {
        serializedName: "planInfo",
        type: {
          name: "Composite",
          className: "PlatformImagePurchasePlan"
        }
      }
    }
  }
};

export const ImageTemplateManagedImageSource: msRest.CompositeMapper = {
  serializedName: "ManagedImage",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ImageTemplateSource.type.polymorphicDiscriminator,
    uberParent: "ImageTemplateSource",
    className: "ImageTemplateManagedImageSource",
    modelProperties: {
      ...ImageTemplateSource.type.modelProperties,
      imageId: {
        required: true,
        serializedName: "imageId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageTemplateSharedImageVersionSource: msRest.CompositeMapper = {
  serializedName: "SharedImageVersion",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ImageTemplateSource.type.polymorphicDiscriminator,
    uberParent: "ImageTemplateSource",
    className: "ImageTemplateSharedImageVersionSource",
    modelProperties: {
      ...ImageTemplateSource.type.modelProperties,
      imageVersionId: {
        required: true,
        serializedName: "imageVersionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageTemplateShellCustomizer: msRest.CompositeMapper = {
  serializedName: "Shell",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ImageTemplateCustomizer.type.polymorphicDiscriminator,
    uberParent: "ImageTemplateCustomizer",
    className: "ImageTemplateShellCustomizer",
    modelProperties: {
      ...ImageTemplateCustomizer.type.modelProperties,
      scriptUri: {
        serializedName: "scriptUri",
        type: {
          name: "String"
        }
      },
      sha256Checksum: {
        serializedName: "sha256Checksum",
        defaultValue: '',
        type: {
          name: "String"
        }
      },
      inline: {
        serializedName: "inline",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ImageTemplateRestartCustomizer: msRest.CompositeMapper = {
  serializedName: "WindowsRestart",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ImageTemplateCustomizer.type.polymorphicDiscriminator,
    uberParent: "ImageTemplateCustomizer",
    className: "ImageTemplateRestartCustomizer",
    modelProperties: {
      ...ImageTemplateCustomizer.type.modelProperties,
      restartCommand: {
        serializedName: "restartCommand",
        type: {
          name: "String"
        }
      },
      restartCheckCommand: {
        serializedName: "restartCheckCommand",
        type: {
          name: "String"
        }
      },
      restartTimeout: {
        serializedName: "restartTimeout",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageTemplateWindowsUpdateCustomizer: msRest.CompositeMapper = {
  serializedName: "WindowsUpdate",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ImageTemplateCustomizer.type.polymorphicDiscriminator,
    uberParent: "ImageTemplateCustomizer",
    className: "ImageTemplateWindowsUpdateCustomizer",
    modelProperties: {
      ...ImageTemplateCustomizer.type.modelProperties,
      searchCriteria: {
        serializedName: "searchCriteria",
        type: {
          name: "String"
        }
      },
      filters: {
        serializedName: "filters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      updateLimit: {
        serializedName: "updateLimit",
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ImageTemplatePowerShellCustomizer: msRest.CompositeMapper = {
  serializedName: "PowerShell",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ImageTemplateCustomizer.type.polymorphicDiscriminator,
    uberParent: "ImageTemplateCustomizer",
    className: "ImageTemplatePowerShellCustomizer",
    modelProperties: {
      ...ImageTemplateCustomizer.type.modelProperties,
      scriptUri: {
        serializedName: "scriptUri",
        type: {
          name: "String"
        }
      },
      sha256Checksum: {
        serializedName: "sha256Checksum",
        defaultValue: '',
        type: {
          name: "String"
        }
      },
      inline: {
        serializedName: "inline",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      runElevated: {
        serializedName: "runElevated",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      runAsSystem: {
        serializedName: "runAsSystem",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      validExitCodes: {
        serializedName: "validExitCodes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      }
    }
  }
};

export const ImageTemplateFileCustomizer: msRest.CompositeMapper = {
  serializedName: "File",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ImageTemplateCustomizer.type.polymorphicDiscriminator,
    uberParent: "ImageTemplateCustomizer",
    className: "ImageTemplateFileCustomizer",
    modelProperties: {
      ...ImageTemplateCustomizer.type.modelProperties,
      sourceUri: {
        serializedName: "sourceUri",
        type: {
          name: "String"
        }
      },
      sha256Checksum: {
        serializedName: "sha256Checksum",
        defaultValue: '',
        type: {
          name: "String"
        }
      },
      destination: {
        serializedName: "destination",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageTemplateManagedImageDistributor: msRest.CompositeMapper = {
  serializedName: "ManagedImage",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ImageTemplateDistributor.type.polymorphicDiscriminator,
    uberParent: "ImageTemplateDistributor",
    className: "ImageTemplateManagedImageDistributor",
    modelProperties: {
      ...ImageTemplateDistributor.type.modelProperties,
      imageId: {
        required: true,
        serializedName: "imageId",
        type: {
          name: "String"
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageTemplateSharedImageDistributor: msRest.CompositeMapper = {
  serializedName: "SharedImage",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ImageTemplateDistributor.type.polymorphicDiscriminator,
    uberParent: "ImageTemplateDistributor",
    className: "ImageTemplateSharedImageDistributor",
    modelProperties: {
      ...ImageTemplateDistributor.type.modelProperties,
      galleryImageId: {
        required: true,
        serializedName: "galleryImageId",
        type: {
          name: "String"
        }
      },
      replicationRegions: {
        required: true,
        serializedName: "replicationRegions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      excludeFromLatest: {
        serializedName: "excludeFromLatest",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      storageAccountType: {
        serializedName: "storageAccountType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageTemplateVhdDistributor: msRest.CompositeMapper = {
  serializedName: "VHD",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ImageTemplateDistributor.type.polymorphicDiscriminator,
    uberParent: "ImageTemplateDistributor",
    className: "ImageTemplateVhdDistributor",
    modelProperties: {
      ...ImageTemplateDistributor.type.modelProperties
    }
  }
};

export const ImageTemplateUpdateParameters: msRest.CompositeMapper = {
  serializedName: "ImageTemplateUpdateParameters",
  type: {
    name: "Composite",
    className: "ImageTemplateUpdateParameters",
    modelProperties: {
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ImageTemplateIdentity"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const SubResource: msRest.CompositeMapper = {
  serializedName: "SubResource",
  type: {
    name: "Composite",
    className: "SubResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RunOutput: msRest.CompositeMapper = {
  serializedName: "RunOutput",
  type: {
    name: "Composite",
    className: "RunOutput",
    modelProperties: {
      ...SubResource.type.modelProperties,
      artifactId: {
        serializedName: "properties.artifactId",
        type: {
          name: "String"
        }
      },
      artifactUri: {
        serializedName: "properties.artifactUri",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "Enum",
          allowedValues: [
            "Creating",
            "Updating",
            "Succeeded",
            "Failed",
            "Deleting"
          ]
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "Operation_display",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Object"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ApiErrorBase: msRest.CompositeMapper = {
  serializedName: "ApiErrorBase",
  type: {
    name: "Composite",
    className: "ApiErrorBase",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InnerError: msRest.CompositeMapper = {
  serializedName: "InnerError",
  type: {
    name: "Composite",
    className: "InnerError",
    modelProperties: {
      exceptionType: {
        serializedName: "exceptionType",
        type: {
          name: "String"
        }
      },
      errorDetail: {
        serializedName: "errorDetail",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiError: msRest.CompositeMapper = {
  serializedName: "ApiError",
  type: {
    name: "Composite",
    className: "ApiError",
    modelProperties: {
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApiErrorBase"
            }
          }
        }
      },
      innerError: {
        serializedName: "innerError",
        type: {
          name: "Composite",
          className: "InnerError"
        }
      },
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageTemplateListResult: msRest.CompositeMapper = {
  serializedName: "ImageTemplateListResult",
  type: {
    name: "Composite",
    className: "ImageTemplateListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ImageTemplate"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RunOutputCollection: msRest.CompositeMapper = {
  serializedName: "RunOutputCollection",
  type: {
    name: "Composite",
    className: "RunOutputCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RunOutput"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const discriminators = {
  'ImageTemplateSource' : ImageTemplateSource,
  'ImageTemplateCustomizer' : ImageTemplateCustomizer,
  'ImageTemplateDistributor' : ImageTemplateDistributor,
  'ImageTemplateSource.PlatformImage' : ImageTemplatePlatformImageSource,
  'ImageTemplateSource.ManagedImage' : ImageTemplateManagedImageSource,
  'ImageTemplateSource.SharedImageVersion' : ImageTemplateSharedImageVersionSource,
  'ImageTemplateCustomizer.Shell' : ImageTemplateShellCustomizer,
  'ImageTemplateCustomizer.WindowsRestart' : ImageTemplateRestartCustomizer,
  'ImageTemplateCustomizer.WindowsUpdate' : ImageTemplateWindowsUpdateCustomizer,
  'ImageTemplateCustomizer.PowerShell' : ImageTemplatePowerShellCustomizer,
  'ImageTemplateCustomizer.File' : ImageTemplateFileCustomizer,
  'ImageTemplateDistributor.ManagedImage' : ImageTemplateManagedImageDistributor,
  'ImageTemplateDistributor.SharedImage' : ImageTemplateSharedImageDistributor,
  'ImageTemplateDistributor.VHD' : ImageTemplateVhdDistributor

};
