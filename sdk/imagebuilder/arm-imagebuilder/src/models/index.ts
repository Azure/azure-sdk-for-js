/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export type ImageTemplateSourceUnion =
  | ImageTemplateSource
  | ImageTemplatePlatformImageSource
  | ImageTemplateManagedImageSource
  | ImageTemplateSharedImageVersionSource;
export type ImageTemplateCustomizerUnion =
  | ImageTemplateCustomizer
  | ImageTemplateShellCustomizer
  | ImageTemplateRestartCustomizer
  | ImageTemplateWindowsUpdateCustomizer
  | ImageTemplatePowerShellCustomizer
  | ImageTemplateFileCustomizer;
export type ImageTemplateInVMValidatorUnion =
  | ImageTemplateInVMValidator
  | ImageTemplateShellValidator
  | ImageTemplatePowerShellValidator;
export type ImageTemplateDistributorUnion =
  | ImageTemplateDistributor
  | ImageTemplateManagedImageDistributor
  | ImageTemplateSharedImageDistributor
  | ImageTemplateVhdDistributor;

/** The result of List image templates operation */
export interface ImageTemplateListResult {
  /** An array of image templates */
  value?: ImageTemplate[];
  /** The continuation token. */
  nextLink?: string;
}

/** Describes a virtual machine image source for building, customizing and distributing */
export interface ImageTemplateSource {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "PlatformImage" | "ManagedImage" | "SharedImageVersion";
}

/** Describes a unit of image customization */
export interface ImageTemplateCustomizer {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "Shell" | "WindowsRestart" | "WindowsUpdate" | "PowerShell" | "File";
  /** Friendly Name to provide context on what this customization step does */
  name?: string;
}

/** Configuration options and list of validations to be performed on the resulting image. */
export interface ImageTemplatePropertiesValidate {
  /** If validation fails and this field is set to false, output image(s) will not be distributed. This is the default behavior. If validation fails and this field is set to true, output image(s) will still be distributed. Please use this option with caution as it may result in bad images being distributed for use. In either case (true or false), the end to end image run will be reported as having failed in case of a validation failure. [Note: This field has no effect if validation succeeds.] */
  continueDistributeOnFailure?: boolean;
  /** If this field is set to true, the image specified in the 'source' section will directly be validated. No separate build will be run to generate and then validate a customized image. */
  sourceValidationOnly?: boolean;
  /** List of validations to be performed. */
  inVMValidations?: ImageTemplateInVMValidatorUnion[];
}

/** Describes a unit of in-VM validation of image */
export interface ImageTemplateInVMValidator {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "Shell" | "PowerShell";
  /** Friendly Name to provide context on what this validation step does */
  name?: string;
}

/** Generic distribution object */
export interface ImageTemplateDistributor {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "ManagedImage" | "SharedImage" | "VHD";
  /** The name to be used for the associated RunOutput. */
  runOutputName: string;
  /** Tags that will be applied to the artifact once it has been created/updated by the distributor. */
  artifactTags?: { [propertyName: string]: string };
}

/** Describes the error happened when create or update an image template */
export interface ProvisioningError {
  /** Error code of the provisioning failure */
  provisioningErrorCode?: ProvisioningErrorCode;
  /** Verbose error message about the provisioning failure */
  message?: string;
}

/** Describes the latest status of running an image template */
export interface ImageTemplateLastRunStatus {
  /** Start time of the last run (UTC) */
  startTime?: Date;
  /** End time of the last run (UTC) */
  endTime?: Date;
  /** State of the last run */
  runState?: RunState;
  /** Sub-state of the last run */
  runSubState?: RunSubState;
  /** Verbose information about the last run state */
  message?: string;
}

/** Describes the virtual machines used to build and validate images */
export interface ImageTemplateVmProfile {
  /** Size of the virtual machine used to build, customize and capture images. Omit or specify empty string to use the default (Standard_D1_v2 for Gen1 images and Standard_D2ds_v4 for Gen2 images). */
  vmSize?: string;
  /** Size of the OS disk in GB. Omit or specify 0 to use Azure's default OS disk size. */
  osDiskSizeGB?: number;
  /** Optional array of resource IDs of user assigned managed identities to be configured on the build VM and validation VM. This may include the identity of the image template. */
  userAssignedIdentities?: string[];
  /** Optional configuration of the virtual network to use to deploy the build VM and validation VM in. Omit if no specific virtual network needs to be used. */
  vnetConfig?: VirtualNetworkConfig;
}

/** Virtual Network configuration. */
export interface VirtualNetworkConfig {
  /** Resource id of a pre-existing subnet. */
  subnetId?: string;
  /** Size of the proxy virtual machine used to pass traffic to the build VM and validation VM. Omit or specify empty string to use the default (Standard_A1_v2). */
  proxyVmSize?: string;
}

/** Identity for the image template. */
export interface ImageTemplateIdentity {
  /** The type of identity used for the image template. The type 'None' will remove any identities from the image template. */
  type?: ResourceIdentityType;
  /** The list of user identities associated with the image template. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'. */
  userAssignedIdentities?: {
    [propertyName: string]: ComponentsVrq145SchemasImagetemplateidentityPropertiesUserassignedidentitiesAdditionalproperties;
  };
}

export interface ComponentsVrq145SchemasImagetemplateidentityPropertiesUserassignedidentitiesAdditionalproperties {
  /**
   * The principal id of user assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The client id of user assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clientId?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** An error response from the Azure VM Image Builder service. */
export interface CloudError {
  /** Details about the error. */
  error?: CloudErrorBody;
}

/** An error response from the Azure VM Image Builder service. */
export interface CloudErrorBody {
  /** An identifier for the error. Codes are invariant and are intended to be consumed programmatically. */
  code?: string;
  /** A message describing the error, intended to be suitable for display in a user interface. */
  message?: string;
  /** The target of the particular error. For example, the name of the property in error. */
  target?: string;
  /** A list of additional details about the error. */
  details?: CloudErrorBody[];
}

/** Parameters for updating an image template. */
export interface ImageTemplateUpdateParameters {
  /** The identity of the image template, if configured. */
  identity?: ImageTemplateIdentity;
  /** The user-specified tags associated with the image template. */
  tags?: { [propertyName: string]: string };
}

/** The result of List run outputs operation */
export interface RunOutputCollection {
  /** An array of run outputs */
  value?: RunOutput[];
  /** The continuation token. */
  nextLink?: string;
}

/** Result of the request to list REST API operations. It contains a list of operations and a URL nextLink to get the next set of results. */
export interface OperationListResult {
  /** The list of operations supported by the resource provider. */
  value?: Operation[];
  /** The URL to get the next set of operation list results if there are any. */
  nextLink?: string;
}

/** A REST API operation */
export interface Operation {
  /** This is of the format {provider}/{resource}/{operation} */
  name?: string;
  /** The object that describes the operation. */
  display?: OperationDisplay;
  /** The intended executor of the operation. */
  origin?: string;
  /** Properties of the operation. */
  properties?: Record<string, unknown>;
  /** The flag that indicates whether the operation applies to data plane. */
  isDataAction?: boolean;
}

/** The object that describes the operation. */
export interface OperationDisplay {
  /** Friendly name of the resource provider. */
  provider?: string;
  /** For example: read, write, delete, or listKeys/action */
  operation?: string;
  /** The resource type on which the operation is performed. */
  resource?: string;
  /** The friendly name of the operation */
  description?: string;
}

/** Purchase plan configuration for platform image. */
export interface PlatformImagePurchasePlan {
  /** Name of the purchase plan. */
  planName: string;
  /** Product of the purchase plan. */
  planProduct: string;
  /** Publisher of the purchase plan. */
  planPublisher: string;
}

/** Describes an image source from [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages). */
export interface ImageTemplatePlatformImageSource extends ImageTemplateSource {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "PlatformImage";
  /** Image Publisher in [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages). */
  publisher?: string;
  /** Image offer from the [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages). */
  offer?: string;
  /** Image sku from the [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages). */
  sku?: string;
  /** Image version from the [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages). If 'latest' is specified here, the version is evaluated when the image build takes place, not when the template is submitted. */
  version?: string;
  /**
   * Image version from the [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages). This readonly field differs from 'version', only if the value specified in 'version' field is 'latest'.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly exactVersion?: string;
  /** Optional configuration of purchase plan for platform image. */
  planInfo?: PlatformImagePurchasePlan;
}

/** Describes an image source that is a managed image in customer subscription. This image must reside in the same subscription and region as the Image Builder template. */
export interface ImageTemplateManagedImageSource extends ImageTemplateSource {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "ManagedImage";
  /** ARM resource id of the managed image in customer subscription */
  imageId: string;
}

/** Describes an image source that is an image version in a shared image gallery. */
export interface ImageTemplateSharedImageVersionSource
  extends ImageTemplateSource {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "SharedImageVersion";
  /** ARM resource id of the image version in the shared image gallery */
  imageVersionId: string;
}

/** Runs a shell script during the customization phase (Linux). Corresponds to Packer shell provisioner. Exactly one of 'scriptUri' or 'inline' can be specified. */
export interface ImageTemplateShellCustomizer extends ImageTemplateCustomizer {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "Shell";
  /** URI of the shell script to be run for customizing. It can be a github link, SAS URI for Azure Storage, etc */
  scriptUri?: string;
  /** SHA256 checksum of the shell script provided in the scriptUri field */
  sha256Checksum?: string;
  /** Array of shell commands to execute */
  inline?: string[];
}

/** Reboots a VM and waits for it to come back online (Windows). Corresponds to Packer windows-restart provisioner */
export interface ImageTemplateRestartCustomizer
  extends ImageTemplateCustomizer {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "WindowsRestart";
  /** Command to execute the restart [Default: 'shutdown /r /f /t 0 /c "packer restart"'] */
  restartCommand?: string;
  /** Command to check if restart succeeded [Default: ''] */
  restartCheckCommand?: string;
  /** Restart timeout specified as a string of magnitude and unit, e.g. '5m' (5 minutes) or '2h' (2 hours) [Default: '5m'] */
  restartTimeout?: string;
}

/** Installs Windows Updates. Corresponds to Packer Windows Update Provisioner (https://github.com/rgl/packer-provisioner-windows-update) */
export interface ImageTemplateWindowsUpdateCustomizer
  extends ImageTemplateCustomizer {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "WindowsUpdate";
  /** Criteria to search updates. Omit or specify empty string to use the default (search all). Refer to above link for examples and detailed description of this field. */
  searchCriteria?: string;
  /** Array of filters to select updates to apply. Omit or specify empty array to use the default (no filter). Refer to above link for examples and detailed description of this field. */
  filters?: string[];
  /** Maximum number of updates to apply at a time. Omit or specify 0 to use the default (1000) */
  updateLimit?: number;
}

/** Runs the specified PowerShell on the VM (Windows). Corresponds to Packer powershell provisioner. Exactly one of 'scriptUri' or 'inline' can be specified. */
export interface ImageTemplatePowerShellCustomizer
  extends ImageTemplateCustomizer {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "PowerShell";
  /** URI of the PowerShell script to be run for customizing. It can be a github link, SAS URI for Azure Storage, etc */
  scriptUri?: string;
  /** SHA256 checksum of the power shell script provided in the scriptUri field above */
  sha256Checksum?: string;
  /** Array of PowerShell commands to execute */
  inline?: string[];
  /** If specified, the PowerShell script will be run with elevated privileges */
  runElevated?: boolean;
  /** If specified, the PowerShell script will be run with elevated privileges using the Local System user. Can only be true when the runElevated field above is set to true. */
  runAsSystem?: boolean;
  /** Valid exit codes for the PowerShell script. [Default: 0] */
  validExitCodes?: number[];
}

/** Uploads files to VMs (Linux, Windows). Corresponds to Packer file provisioner */
export interface ImageTemplateFileCustomizer extends ImageTemplateCustomizer {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "File";
  /** The URI of the file to be uploaded for customizing the VM. It can be a github link, SAS URI for Azure Storage, etc */
  sourceUri?: string;
  /** SHA256 checksum of the file provided in the sourceUri field above */
  sha256Checksum?: string;
  /** The absolute path to a file (with nested directory structures already created) where the file (from sourceUri) will be uploaded to in the VM */
  destination?: string;
}

/** Runs the specified shell script during the validation phase (Linux). Corresponds to Packer shell provisioner. Exactly one of 'scriptUri' or 'inline' can be specified. */
export interface ImageTemplateShellValidator
  extends ImageTemplateInVMValidator {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "Shell";
  /** URI of the shell script to be run for validation. It can be a github link, Azure Storage URI, etc */
  scriptUri?: string;
  /** SHA256 checksum of the shell script provided in the scriptUri field */
  sha256Checksum?: string;
  /** Array of shell commands to execute */
  inline?: string[];
}

/** Runs the specified PowerShell script during the validation phase (Windows). Corresponds to Packer powershell provisioner. Exactly one of 'scriptUri' or 'inline' can be specified. */
export interface ImageTemplatePowerShellValidator
  extends ImageTemplateInVMValidator {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "PowerShell";
  /** URI of the PowerShell script to be run for validation. It can be a github link, Azure Storage URI, etc */
  scriptUri?: string;
  /** SHA256 checksum of the power shell script provided in the scriptUri field above */
  sha256Checksum?: string;
  /** Array of PowerShell commands to execute */
  inline?: string[];
  /** If specified, the PowerShell script will be run with elevated privileges */
  runElevated?: boolean;
  /** If specified, the PowerShell script will be run with elevated privileges using the Local System user. Can only be true when the runElevated field above is set to true. */
  runAsSystem?: boolean;
  /** Valid exit codes for the PowerShell script. [Default: 0] */
  validExitCodes?: number[];
}

/** Distribute as a Managed Disk Image. */
export interface ImageTemplateManagedImageDistributor
  extends ImageTemplateDistributor {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "ManagedImage";
  /** Resource Id of the Managed Disk Image */
  imageId: string;
  /** Azure location for the image, should match if image already exists */
  location: string;
}

/** Distribute via Shared Image Gallery. */
export interface ImageTemplateSharedImageDistributor
  extends ImageTemplateDistributor {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "SharedImage";
  /** Resource Id of the Shared Image Gallery image */
  galleryImageId: string;
  /** A list of regions that the image will be replicated to */
  replicationRegions: string[];
  /** Flag that indicates whether created image version should be excluded from latest. Omit to use the default (false). */
  excludeFromLatest?: boolean;
  /** Storage account type to be used to store the shared image. Omit to use the default (Standard_LRS). */
  storageAccountType?: SharedImageStorageAccountType;
}

/** Distribute via VHD in a storage account. */
export interface ImageTemplateVhdDistributor extends ImageTemplateDistributor {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "VHD";
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** Image template is an ARM resource managed by Microsoft.VirtualMachineImages provider */
export interface ImageTemplate extends TrackedResource {
  /** The identity of the image template, if configured. */
  identity: ImageTemplateIdentity;
  /** Specifies the properties used to describe the source image. */
  source?: ImageTemplateSourceUnion;
  /** Specifies the properties used to describe the customization steps of the image, like Image source etc */
  customize?: ImageTemplateCustomizerUnion[];
  /** Configuration options and list of validations to be performed on the resulting image. */
  validate?: ImageTemplatePropertiesValidate;
  /** The distribution targets where the image output needs to go to. */
  distribute?: ImageTemplateDistributorUnion[];
  /**
   * Provisioning state of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Provisioning error, if any
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningError?: ProvisioningError;
  /**
   * State of 'run' that is currently executing or was last executed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastRunStatus?: ImageTemplateLastRunStatus;
  /** Maximum duration to wait while building the image template (includes all customizations, validations, and distributions). Omit or specify 0 to use the default (4 hours). */
  buildTimeoutInMinutes?: number;
  /** Describes how virtual machine is set up to build images */
  vmProfile?: ImageTemplateVmProfile;
  /** The staging resource group id in the same subscription as the image template that will be used to build the image. If this field is empty, a resource group with a random name will be created. If the resource group specified in this field doesn't exist, it will be created with the same name. If the resource group specified exists, it must be empty and in the same region as the image template. The resource group created will be deleted during template deletion if this field is empty or the resource group specified doesn't exist, but if the resource group specified exists the resources created in the resource group will be deleted during template deletion and the resource group itself will remain. */
  stagingResourceGroup?: string;
  /**
   * The staging resource group id in the same subscription as the image template that will be used to build the image. This read-only field differs from 'stagingResourceGroup' only if the value specified in the 'stagingResourceGroup' field is empty.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly exactStagingResourceGroup?: string;
}

/** Represents an output that was created by running an image template. */
export interface RunOutput extends ProxyResource {
  /** The resource id of the artifact. */
  artifactId?: string;
  /** The location URI of the artifact. */
  artifactUri?: string;
  /**
   * Provisioning state of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** Known values of {@link ProvisioningErrorCode} that the service accepts. */
export enum KnownProvisioningErrorCode {
  /** BadSourceType */
  BadSourceType = "BadSourceType",
  /** BadPIRSource */
  BadPIRSource = "BadPIRSource",
  /** BadManagedImageSource */
  BadManagedImageSource = "BadManagedImageSource",
  /** BadSharedImageVersionSource */
  BadSharedImageVersionSource = "BadSharedImageVersionSource",
  /** BadCustomizerType */
  BadCustomizerType = "BadCustomizerType",
  /** UnsupportedCustomizerType */
  UnsupportedCustomizerType = "UnsupportedCustomizerType",
  /** NoCustomizerScript */
  NoCustomizerScript = "NoCustomizerScript",
  /** BadValidatorType */
  BadValidatorType = "BadValidatorType",
  /** UnsupportedValidatorType */
  UnsupportedValidatorType = "UnsupportedValidatorType",
  /** NoValidatorScript */
  NoValidatorScript = "NoValidatorScript",
  /** BadDistributeType */
  BadDistributeType = "BadDistributeType",
  /** BadSharedImageDistribute */
  BadSharedImageDistribute = "BadSharedImageDistribute",
  /** BadStagingResourceGroup */
  BadStagingResourceGroup = "BadStagingResourceGroup",
  /** ServerError */
  ServerError = "ServerError",
  /** Other */
  Other = "Other"
}

/**
 * Defines values for ProvisioningErrorCode. \
 * {@link KnownProvisioningErrorCode} can be used interchangeably with ProvisioningErrorCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BadSourceType** \
 * **BadPIRSource** \
 * **BadManagedImageSource** \
 * **BadSharedImageVersionSource** \
 * **BadCustomizerType** \
 * **UnsupportedCustomizerType** \
 * **NoCustomizerScript** \
 * **BadValidatorType** \
 * **UnsupportedValidatorType** \
 * **NoValidatorScript** \
 * **BadDistributeType** \
 * **BadSharedImageDistribute** \
 * **BadStagingResourceGroup** \
 * **ServerError** \
 * **Other**
 */
export type ProvisioningErrorCode = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link SharedImageStorageAccountType} that the service accepts. */
export enum KnownSharedImageStorageAccountType {
  /** StandardLRS */
  StandardLRS = "Standard_LRS",
  /** StandardZRS */
  StandardZRS = "Standard_ZRS"
}

/**
 * Defines values for SharedImageStorageAccountType. \
 * {@link KnownSharedImageStorageAccountType} can be used interchangeably with SharedImageStorageAccountType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Standard_LRS** \
 * **Standard_ZRS**
 */
export type SharedImageStorageAccountType = string;
/** Defines values for ProvisioningState. */
export type ProvisioningState =
  | "Creating"
  | "Updating"
  | "Succeeded"
  | "Failed"
  | "Deleting";
/** Defines values for RunState. */
export type RunState =
  | "Running"
  | "Canceling"
  | "Succeeded"
  | "PartiallySucceeded"
  | "Failed"
  | "Canceled";
/** Defines values for RunSubState. */
export type RunSubState =
  | "Queued"
  | "Building"
  | "Customizing"
  | "Validating"
  | "Distributing";
/** Defines values for ResourceIdentityType. */
export type ResourceIdentityType = "UserAssigned" | "None";

/** Optional parameters. */
export interface VirtualMachineImageTemplatesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type VirtualMachineImageTemplatesListResponse = ImageTemplateListResult;

/** Optional parameters. */
export interface VirtualMachineImageTemplatesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type VirtualMachineImageTemplatesListByResourceGroupResponse = ImageTemplateListResult;

/** Optional parameters. */
export interface VirtualMachineImageTemplatesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type VirtualMachineImageTemplatesCreateOrUpdateResponse = ImageTemplate;

/** Optional parameters. */
export interface VirtualMachineImageTemplatesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type VirtualMachineImageTemplatesUpdateResponse = ImageTemplate;

/** Optional parameters. */
export interface VirtualMachineImageTemplatesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type VirtualMachineImageTemplatesGetResponse = ImageTemplate;

/** Optional parameters. */
export interface VirtualMachineImageTemplatesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface VirtualMachineImageTemplatesRunOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface VirtualMachineImageTemplatesCancelOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface VirtualMachineImageTemplatesListRunOutputsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listRunOutputs operation. */
export type VirtualMachineImageTemplatesListRunOutputsResponse = RunOutputCollection;

/** Optional parameters. */
export interface VirtualMachineImageTemplatesGetRunOutputOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getRunOutput operation. */
export type VirtualMachineImageTemplatesGetRunOutputResponse = RunOutput;

/** Optional parameters. */
export interface VirtualMachineImageTemplatesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type VirtualMachineImageTemplatesListNextResponse = ImageTemplateListResult;

/** Optional parameters. */
export interface VirtualMachineImageTemplatesListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type VirtualMachineImageTemplatesListByResourceGroupNextResponse = ImageTemplateListResult;

/** Optional parameters. */
export interface VirtualMachineImageTemplatesListRunOutputsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listRunOutputsNext operation. */
export type VirtualMachineImageTemplatesListRunOutputsNextResponse = RunOutputCollection;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface ImageBuilderClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
