/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  BusinessProcess,
  BusinessProcessesListByApplicationOptionalParams,
  BusinessProcessesGetOptionalParams,
  BusinessProcessesGetResponse,
  BusinessProcessesCreateOrUpdateOptionalParams,
  BusinessProcessesCreateOrUpdateResponse,
  BusinessProcessUpdate,
  BusinessProcessesPatchOptionalParams,
  BusinessProcessesPatchResponse,
  BusinessProcessesDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a BusinessProcesses. */
export interface BusinessProcesses {
  /**
   * List BusinessProcess resources by Application
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param spaceName The name of the space
   * @param applicationName The name of the Application
   * @param options The options parameters.
   */
  listByApplication(
    resourceGroupName: string,
    spaceName: string,
    applicationName: string,
    options?: BusinessProcessesListByApplicationOptionalParams
  ): PagedAsyncIterableIterator<BusinessProcess>;
  /**
   * Get a BusinessProcess
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param spaceName The name of the space
   * @param applicationName The name of the Application
   * @param businessProcessName The name of the business process
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    spaceName: string,
    applicationName: string,
    businessProcessName: string,
    options?: BusinessProcessesGetOptionalParams
  ): Promise<BusinessProcessesGetResponse>;
  /**
   * Create a BusinessProcess
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param spaceName The name of the space
   * @param applicationName The name of the Application
   * @param businessProcessName The name of the business process
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    spaceName: string,
    applicationName: string,
    businessProcessName: string,
    resource: BusinessProcess,
    options?: BusinessProcessesCreateOrUpdateOptionalParams
  ): Promise<BusinessProcessesCreateOrUpdateResponse>;
  /**
   * Update a BusinessProcess
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param spaceName The name of the space
   * @param applicationName The name of the Application
   * @param businessProcessName The name of the business process
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  patch(
    resourceGroupName: string,
    spaceName: string,
    applicationName: string,
    businessProcessName: string,
    properties: BusinessProcessUpdate,
    options?: BusinessProcessesPatchOptionalParams
  ): Promise<BusinessProcessesPatchResponse>;
  /**
   * Delete a BusinessProcess
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param spaceName The name of the space
   * @param applicationName The name of the Application
   * @param businessProcessName The name of the business process
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    spaceName: string,
    applicationName: string,
    businessProcessName: string,
    options?: BusinessProcessesDeleteOptionalParams
  ): Promise<void>;
}
