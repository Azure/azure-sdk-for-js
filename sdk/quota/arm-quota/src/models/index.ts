/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * An interface representing OperationDisplay.
 */
export interface OperationDisplay {
  /**
   * Provider name.
   */
  provider?: string;
  /**
   * Resource name.
   */
  resource?: string;
  /**
   * Operation name.
   */
  operation?: string;
  /**
   * Operation description.
   */
  description?: string;
}

/**
 * An interface representing OperationResponse.
 */
export interface OperationResponse {
  name?: string;
  display?: OperationDisplay;
  origin?: string;
}

/**
 * Resource properties.
 */
export interface CommonResourceProperties {
  /**
   * Resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type. "Microsoft.Quota/quotaLimits"
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * Name of the resource provided by the resource Provider. When requesting quota, use this property
 * name.
 */
export interface ResourceName {
  /**
   * Resource name.
   */
  value?: string;
  /**
   * Resource display name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly localizedValue?: string;
}

/**
 * Quota properties for the specified resource.
 */
export interface QuotaProperties {
  /**
   * Quota limit.
   */
  limit?: number;
  /**
   * Usage information for the current resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentValue?: number;
  /**
   * The quota limit units, such as Count and Bytes. When requesting quota, use the **unit** value
   * returned in the GET response in the request body of your PUT operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: string;
  /**
   * Resource name provided by the resource provider. Use this property name when requesting quota.
   */
  name?: ResourceName;
  /**
   * Resource type name. Possible values include: 'standard', 'dedicated', 'lowPriority', 'shared',
   * 'serviceSpecific'
   */
  resourceType?: ResourceType;
  /**
   * The time period over which the quota usage values are summarized. For example:
   * *P1D (per one day)
   * *PT1M (per one minute)
   * *PT1S (per one second).
   * This parameter is optional because, for some resources like compute, the period is irrelevant.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly quotaPeriod?: string;
  /**
   * States if quota can be requested for this resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isQuotaApplicable?: boolean;
  /**
   * Additional properties for the specific resource provider.
   */
  properties?: any;
}

/**
 * Quota limit.
 */
export interface CurrentQuotaLimitBase extends BaseResource {
  /**
   * The resource Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The resource name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Quota properties for the specified resource.
   */
  properties?: QuotaProperties;
}

/**
 * Quota limits request response.
 */
export interface QuotaLimitsResponse {
  /**
   * List of quota limits with the quota request status.
   */
  value?: CurrentQuotaLimitBase[];
  /**
   * The URI used to fetch the next page of quota limits. When there are no more pages, this is
   * null.
   */
  nextLink?: string;
}

/**
 * Quota change requests information.
 */
export interface CreateGenericQuotaRequestParameters {
  /**
   * Quota change requests.
   */
  value?: CurrentQuotaLimitBase[];
}

/**
 * Request property.
 */
export interface SubRequest {
  /**
   * Resource quota limit.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly limit?: number;
  /**
   * Resource name.
   */
  name?: ResourceName;
  /**
   * Resource type for which the quota check was made.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceType?: string;
  /**
   * Quota limit units, such as Count and Bytes. When requesting quota, use the **unit** value
   * returned in the GET response in the request body of your PUT operation.
   */
  unit?: string;
  /**
   * The quota request status. Possible values include: 'Accepted', 'Invalid', 'Succeeded',
   * 'Failed', 'InProgress'
   */
  provisioningState?: QuotaRequestState;
  /**
   * User-friendly status message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * Quota request ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subRequestId?: string;
}

/**
 * Quota request response.
 */
export interface QuotaRequestOneResourceSubmitResponse extends BaseResource {
  /**
   * Quota request ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the quota request.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type. "Microsoft.Quota/ServiceLimitRequests"
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Quota request status. Possible values include: 'Accepted', 'Invalid', 'Succeeded', 'Failed',
   * 'InProgress'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: QuotaRequestState;
  /**
   * User-friendly status message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * Quota request submission time. The date conforms to the following ISO 8601 standard format:
   * yyyy-MM-ddTHH:mm:ssZ.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestSubmitTime?: Date;
  /**
   * Quota limit.
   */
  limit?: number;
  /**
   * Usage information for the current resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentValue?: number;
  /**
   * The quota limit units, such as Count and Bytes. When requesting quota, use the **unit** value
   * returned in the GET response in the request body of your PUT operation.
   */
  unit?: string;
  /**
   * Resource name provided by the resource provider. Use this property name when requesting quota.
   */
  name1?: ResourceName;
  /**
   * Resource type name. Possible values include: 'standard', 'dedicated', 'lowPriority', 'shared',
   * 'serviceSpecific'
   */
  resourceType?: ResourceType;
  /**
   * The time period over which the quota usage values are summarized. For example:
   * *P1D (per one day)
   * *PT1M (per one minute)
   * *PT1S (per one second).
   * This parameter is optional because, for some resources like compute, the period is irrelevant.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly quotaPeriod?: string;
  /**
   * States if quota can be requested for this resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isQuotaApplicable?: boolean;
  /**
   * Additional properties for the specific resource provider.
   */
  properties?: any;
}

/**
 * Quota request properties.
 */
export interface QuotaRequestProperties {
  /**
   * The quota request status. Possible values include: 'Accepted', 'Invalid', 'Succeeded',
   * 'Failed', 'InProgress'
   */
  provisioningState?: QuotaRequestState;
  /**
   * User-friendly status message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The quota request submission time. The date conforms to the following format specified by the
   * ISO 8601 standard: yyyy-MM-ddTHH:mm:ssZ
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestSubmitTime?: Date;
  /**
   * Quota request details.
   */
  value?: SubRequest[];
}

/**
 * Quota request response.
 */
export interface QuotaRequestSubmitResponse extends BaseResource {
  /**
   * Quota request ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Quota request name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The quota request details.
   */
  properties?: QuotaRequestProperties;
  /**
   * Resource type. "Microsoft.Quota/quotaLimits"
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * The quota request response with the quota request ID.
 */
export interface QuotaRequestSubmitResponse202 {
  /**
   * The quota request ID. To check the request status, use the **id** value in a [Quota Request
   * Status](https://docs.microsoft.com/en-us/rest/api/reserved-vm-instances/quotarequeststatus/get)
   * GET operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Operation ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Quota request status. Possible values include: 'Accepted', 'Invalid', 'Succeeded', 'Failed',
   * 'InProgress'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: QuotaRequestState;
  /**
   * User-friendly message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * Quota limit.
   */
  limit?: number;
  /**
   * Usage information for the current resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentValue?: number;
  /**
   * The quota limit units, such as Count and Bytes. When requesting quota, use the **unit** value
   * returned in the GET response in the request body of your PUT operation.
   */
  unit?: string;
  /**
   * Resource name provided by the resource provider. Use this property name when requesting quota.
   */
  name1?: ResourceName;
  /**
   * Resource type name. Possible values include: 'standard', 'dedicated', 'lowPriority', 'shared',
   * 'serviceSpecific'
   */
  resourceType?: ResourceType;
  /**
   * The time period over which the quota usage values are summarized. For example:
   * *P1D (per one day)
   * *PT1M (per one minute)
   * *PT1S (per one second).
   * This parameter is optional because, for some resources like compute, the period is irrelevant.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly quotaPeriod?: string;
  /**
   * Additional properties for the specific resource provider.
   */
  properties?: any;
}

/**
 * List of quota requests with details.
 */
export interface QuotaRequestDetails {
  /**
   * Quota request ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Quota request name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type. "Microsoft.Quota/quotaLimits"
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The quota request status. Possible values include: 'Accepted', 'Invalid', 'Succeeded',
   * 'Failed', 'InProgress'
   */
  provisioningState?: QuotaRequestState;
  /**
   * User-friendly status message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The quota request submission time. The date conforms to the following format specified by the
   * ISO 8601 standard: yyyy-MM-ddTHH:mm:ssZ
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestSubmitTime?: Date;
  /**
   * Quota request details.
   */
  value?: SubRequest[];
}

/**
 * Error details.
 */
export interface ServiceErrorDetail {
  /**
   * Error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * Error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
}

/**
 * API error details.
 */
export interface ServiceError {
  /**
   * Error code.
   */
  code?: string;
  /**
   * Error message.
   */
  message?: string;
  /**
   * List of error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: ServiceErrorDetail[];
}

/**
 * Error.
 */
export interface ExceptionResponse {
  /**
   * API error details.
   */
  error?: ServiceError;
}

/**
 * quotaBucket provider properties.
 */
export interface QuotaBucketProperties {
  /**
   * Property name.
   */
  name?: string;
  /**
   * Display name.
   */
  displayName?: string;
}

/**
 * Resource provider resource dimension.
 */
export interface ResourceProviderDimension {
  /**
   * Resource dimension name.
   */
  name?: string;
  /**
   * Display name.
   */
  displayName?: string;
}

/**
 * Resource query details.
 */
export interface ResourceQueryDetails {
  /**
   * Resource query type. Possible values include: 'ARG', 'RestAPI'
   */
  resourceQueryType?: ResourceQueryType;
  /**
   * Resource query method. Possible values include: 'GET', 'POST'
   */
  resourceQueryMethod?: ResourceQueryMethod;
  /**
   * Base URI for for resource query.
   */
  resourceQueryUri?: string;
  /**
   * Template to create the resource query.
   */
  resourceQueryPostTemplate?: string;
}

/**
 * Resource template details for the resource provider.
 */
export interface ResourceProviderTemplate {
  /**
   * Resource type.
   */
  resourceType?: string;
  /**
   * Resource query for dimension values.
   */
  resourceQuery?: ResourceQueryDetails;
  /**
   * Resource usages query.
   */
  resourceUsagesQuery?: ResourceQueryDetails;
  /**
   * Resource provider dimensions.
   */
  dimensions?: ResourceProviderDimension[];
}

/**
 * Resource provider information.
 */
export interface ResourceProviderInformation {
  /**
   * Resource provider name.
   */
  resourceProviderName?: string;
  /**
   * The resource provider templates
   */
  value?: ResourceProviderTemplate[];
}

/**
 * Resource providers list.
 */
export interface ResourceProvidersList {
  /**
   * Resource provider information.
   */
  value?: ResourceProviderInformation[];
}

/**
 * Quota type information.
 */
export interface QuotaTypeDimensionInformation {
  /**
   * Property name.
   */
  name?: string;
  /**
   * Display name.
   */
  displayName?: string;
  /**
   * Dimension ID.
   */
  id?: string;
}

/**
 * Quota template details.
 */
export interface QuotaTemplateDetails {
  /**
   * Resource type.
   */
  resourceType?: string;
  /**
   * Resource type
   */
  resourceType1?: string;
  /**
   * Quota type information.
   */
  value?: QuotaTypeDimensionInformation[];
}

/**
 * Quota templates details.
 */
export interface QuotaTemplatesDetails {
  /**
   * Quota templates information.
   */
  value?: QuotaTemplateDetails[];
}

/**
 * Optional Parameters.
 */
export interface QuotaRequestStatusListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * | Field                    | Supported operators
   * |---------------------|------------------------
   *
   * |requestSubmitTime | ge, le, eq, gt, lt
   * |provisioningState eq {QuotaRequestState}
   * |resourceName eq {resourceName}
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * The **Skiptoken** parameter is used only if a previous operation returned a partial result. If
   * a previous response contains a **nextLink** element, the value of the **nextLink** element
   * includes a **skiptoken** parameter that specifies a starting point to use for subsequent
   * calls.
   */
  skiptoken?: string;
}

/**
 * Optional Parameters.
 */
export interface QuotaRequestStatusListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * | Field                    | Supported operators
   * |---------------------|------------------------
   *
   * |requestSubmitTime | ge, le, eq, gt, lt
   * |provisioningState eq {QuotaRequestState}
   * |resourceName eq {resourceName}
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * The **Skiptoken** parameter is used only if a previous operation returned a partial result. If
   * a previous response contains a **nextLink** element, the value of the **nextLink** element
   * includes a **skiptoken** parameter that specifies a starting point to use for subsequent
   * calls.
   */
  skiptoken?: string;
}

/**
 * An interface representing AzureQuotaExtensionAPIOptions.
 */
export interface AzureQuotaExtensionAPIOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * Defines headers for Get operation.
 */
export interface QuotaGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for List operation.
 */
export interface QuotaListHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * @interface
 * Quota limits.
 * @extends Array<CurrentQuotaLimitBase>
 */
export interface QuotaLimits extends Array<CurrentQuotaLimitBase> {
  /**
   * The URI used to fetch the next page of quota limits. When there are no more pages, this is
   * null.
   */
  nextLink?: string;
}

/**
 * @interface
 * Quota request information.
 * @extends Array<QuotaRequestDetails>
 */
export interface QuotaRequestDetailsList extends Array<QuotaRequestDetails> {
  /**
   * The URI for fetching the next page of quota limits. When there are no more pages, this is
   * null.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the OperationList.
 * @extends Array<OperationResponse>
 */
export interface OperationList extends Array<OperationResponse> {
  /**
   * URL to get the next page of items.
   */
  nextLink?: string;
}

/**
 * Defines values for ResourceType.
 * Possible values include: 'standard', 'dedicated', 'lowPriority', 'shared', 'serviceSpecific'
 * @readonly
 * @enum {string}
 */
export type ResourceType = 'standard' | 'dedicated' | 'lowPriority' | 'shared' | 'serviceSpecific';

/**
 * Defines values for QuotaRequestState.
 * Possible values include: 'Accepted', 'Invalid', 'Succeeded', 'Failed', 'InProgress'
 * @readonly
 * @enum {string}
 */
export type QuotaRequestState = 'Accepted' | 'Invalid' | 'Succeeded' | 'Failed' | 'InProgress';

/**
 * Defines values for ResourceQueryType.
 * Possible values include: 'ARG', 'RestAPI'
 * @readonly
 * @enum {string}
 */
export type ResourceQueryType = 'ARG' | 'RestAPI';

/**
 * Defines values for ResourceQueryMethod.
 * Possible values include: 'GET', 'POST'
 * @readonly
 * @enum {string}
 */
export type ResourceQueryMethod = 'GET' | 'POST';

/**
 * Contains response data for the get operation.
 */
export type QuotaGetResponse = CurrentQuotaLimitBase & QuotaGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: QuotaGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CurrentQuotaLimitBase;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type QuotaCreateOrUpdateResponse = CurrentQuotaLimitBase & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CurrentQuotaLimitBase;
    };
};

/**
 * Contains response data for the update operation.
 */
export type QuotaUpdateResponse = CurrentQuotaLimitBase & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CurrentQuotaLimitBase;
    };
};

/**
 * Contains response data for the list operation.
 */
export type QuotaListResponse = QuotaLimits & QuotaListHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: QuotaListHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: QuotaLimits;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type QuotaBeginCreateOrUpdateResponse = CurrentQuotaLimitBase & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CurrentQuotaLimitBase;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type QuotaBeginUpdateResponse = CurrentQuotaLimitBase & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CurrentQuotaLimitBase;
    };
};

/**
 * Contains response data for the get operation.
 */
export type QuotaRequestStatusGetResponse = QuotaRequestDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: QuotaRequestDetails;
    };
};

/**
 * Contains response data for the list operation.
 */
export type QuotaRequestStatusListResponse = QuotaRequestDetailsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: QuotaRequestDetailsList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type QuotaRequestStatusListNextResponse = QuotaRequestDetailsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: QuotaRequestDetailsList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type QuotaResourceProvidersListResponse = ResourceProvidersList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceProvidersList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationListResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationListNextResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationList;
    };
};
