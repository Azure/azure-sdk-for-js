/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "OperationDisplay",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationResponse: msRest.CompositeMapper = {
  serializedName: "OperationResponse",
  type: {
    name: "Composite",
    className: "OperationResponse",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CommonResourceProperties: msRest.CompositeMapper = {
  serializedName: "CommonResourceProperties",
  type: {
    name: "Composite",
    className: "CommonResourceProperties",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UsagesObject: msRest.CompositeMapper = {
  serializedName: "UsagesObject",
  type: {
    name: "Composite",
    className: "UsagesObject",
    modelProperties: {
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "Number"
        }
      },
      usagesType: {
        serializedName: "usagesType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceName: msRest.CompositeMapper = {
  serializedName: "ResourceName",
  type: {
    name: "Composite",
    className: "ResourceName",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      localizedValue: {
        readOnly: true,
        serializedName: "localizedValue",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UsagesProperties: msRest.CompositeMapper = {
  serializedName: "UsagesProperties",
  type: {
    name: "Composite",
    className: "UsagesProperties",
    modelProperties: {
      usages: {
        serializedName: "usages",
        type: {
          name: "Composite",
          className: "UsagesObject"
        }
      },
      unit: {
        readOnly: true,
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "Composite",
          className: "ResourceName"
        }
      },
      resourceType: {
        serializedName: "resourceType",
        type: {
          name: "String"
        }
      },
      quotaPeriod: {
        readOnly: true,
        serializedName: "quotaPeriod",
        type: {
          name: "String"
        }
      },
      isQuotaApplicable: {
        readOnly: true,
        serializedName: "isQuotaApplicable",
        type: {
          name: "Boolean"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const CurrentUsagesBase: msRest.CompositeMapper = {
  serializedName: "CurrentUsagesBase",
  type: {
    name: "Composite",
    className: "CurrentUsagesBase",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "UsagesProperties"
        }
      }
    }
  }
};

export const LimitJsonObject: msRest.CompositeMapper = {
  serializedName: "LimitJsonObject",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "limitObjectType",
      clientName: "limitObjectType"
    },
    uberParent: "LimitJsonObject",
    className: "LimitJsonObject",
    modelProperties: {
      limitObjectType: {
        required: true,
        serializedName: "limitObjectType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QuotaProperties: msRest.CompositeMapper = {
  serializedName: "QuotaProperties",
  type: {
    name: "Composite",
    className: "QuotaProperties",
    modelProperties: {
      limit: {
        serializedName: "limit",
        type: {
          name: "Composite",
          className: "LimitJsonObject"
        }
      },
      unit: {
        readOnly: true,
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "Composite",
          className: "ResourceName"
        }
      },
      resourceType: {
        serializedName: "resourceType",
        type: {
          name: "String"
        }
      },
      quotaPeriod: {
        readOnly: true,
        serializedName: "quotaPeriod",
        type: {
          name: "String"
        }
      },
      isQuotaApplicable: {
        readOnly: true,
        serializedName: "isQuotaApplicable",
        type: {
          name: "Boolean"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const CurrentQuotaLimitBase: msRest.CompositeMapper = {
  serializedName: "CurrentQuotaLimitBase",
  type: {
    name: "Composite",
    className: "CurrentQuotaLimitBase",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "QuotaProperties"
        }
      }
    }
  }
};

export const QuotaLimitsResponse: msRest.CompositeMapper = {
  serializedName: "QuotaLimitsResponse",
  type: {
    name: "Composite",
    className: "QuotaLimitsResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CurrentQuotaLimitBase"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CreateGenericQuotaRequestParameters: msRest.CompositeMapper = {
  serializedName: "CreateGenericQuotaRequestParameters",
  type: {
    name: "Composite",
    className: "CreateGenericQuotaRequestParameters",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CurrentQuotaLimitBase"
            }
          }
        }
      }
    }
  }
};

export const SubRequest: msRest.CompositeMapper = {
  serializedName: "SubRequest",
  type: {
    name: "Composite",
    className: "SubRequest",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "Composite",
          className: "ResourceName"
        }
      },
      resourceType: {
        readOnly: true,
        serializedName: "resourceType",
        type: {
          name: "String"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      subRequestId: {
        readOnly: true,
        serializedName: "subRequestId",
        type: {
          name: "String"
        }
      },
      limit: {
        serializedName: "limit",
        type: {
          name: "Composite",
          className: "LimitJsonObject"
        }
      }
    }
  }
};

export const LimitObject: msRest.CompositeMapper = {
  serializedName: "LimitObject",
  type: {
    name: "Composite",
    className: "LimitObject",
    modelProperties: {
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "Number"
        }
      },
      limitObjectType: {
        serializedName: "limitObjectType",
        type: {
          name: "String"
        }
      },
      limitType: {
        serializedName: "limitType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LimitValue: msRest.CompositeMapper = {
  serializedName: "LimitValue",
  type: {
    name: "Composite",
    className: "LimitValue",
    modelProperties: {
      limitObjectType: {
        required: true,
        isConstant: true,
        serializedName: "limitObjectType",
        defaultValue: 'LimitValue',
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "Number"
        }
      },
      limitType: {
        serializedName: "limitType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceErrorDetail: msRest.CompositeMapper = {
  serializedName: "ServiceErrorDetail",
  type: {
    name: "Composite",
    className: "ServiceErrorDetail",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QuotaRequestOneResourceSubmitResponse: msRest.CompositeMapper = {
  serializedName: "QuotaRequestOneResourceSubmitResponse",
  type: {
    name: "Composite",
    className: "QuotaRequestOneResourceSubmitResponse",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "properties.message",
        type: {
          name: "String"
        }
      },
      requestSubmitTime: {
        readOnly: true,
        serializedName: "properties.requestSubmitTime",
        type: {
          name: "DateTime"
        }
      },
      limit: {
        serializedName: "properties.limit",
        type: {
          name: "Composite",
          className: "LimitObject"
        }
      },
      currentValue: {
        readOnly: true,
        serializedName: "properties.currentValue",
        type: {
          name: "Number"
        }
      },
      unit: {
        serializedName: "properties.unit",
        type: {
          name: "String"
        }
      },
      name1: {
        serializedName: "properties.name",
        type: {
          name: "Composite",
          className: "ResourceName"
        }
      },
      resourceType: {
        serializedName: "properties.resourceType",
        type: {
          name: "String"
        }
      },
      quotaPeriod: {
        readOnly: true,
        serializedName: "properties.quotaPeriod",
        type: {
          name: "String"
        }
      },
      isQuotaApplicable: {
        readOnly: true,
        serializedName: "properties.isQuotaApplicable",
        type: {
          name: "Boolean"
        }
      },
      error: {
        serializedName: "properties.error",
        type: {
          name: "Composite",
          className: "ServiceErrorDetail"
        }
      },
      properties: {
        serializedName: "properties.properties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const QuotaRequestProperties: msRest.CompositeMapper = {
  serializedName: "QuotaRequestProperties",
  type: {
    name: "Composite",
    className: "QuotaRequestProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ServiceErrorDetail"
        }
      },
      requestSubmitTime: {
        readOnly: true,
        serializedName: "requestSubmitTime",
        type: {
          name: "DateTime"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubRequest"
            }
          }
        }
      }
    }
  }
};

export const QuotaRequestSubmitResponse: msRest.CompositeMapper = {
  serializedName: "QuotaRequestSubmitResponse",
  type: {
    name: "Composite",
    className: "QuotaRequestSubmitResponse",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "QuotaRequestProperties"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QuotaRequestSubmitResponse202: msRest.CompositeMapper = {
  serializedName: "QuotaRequestSubmitResponse202",
  type: {
    name: "Composite",
    className: "QuotaRequestSubmitResponse202",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "properties.message",
        type: {
          name: "String"
        }
      },
      limit: {
        serializedName: "properties.limit",
        type: {
          name: "Composite",
          className: "LimitObject"
        }
      },
      unit: {
        serializedName: "properties.unit",
        type: {
          name: "String"
        }
      },
      name1: {
        serializedName: "properties.name",
        type: {
          name: "Composite",
          className: "ResourceName"
        }
      },
      resourceType: {
        serializedName: "properties.resourceType",
        type: {
          name: "String"
        }
      },
      quotaPeriod: {
        readOnly: true,
        serializedName: "properties.quotaPeriod",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties.properties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const QuotaRequestDetails: msRest.CompositeMapper = {
  serializedName: "QuotaRequestDetails",
  type: {
    name: "Composite",
    className: "QuotaRequestDetails",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "properties.message",
        type: {
          name: "String"
        }
      },
      error: {
        serializedName: "properties.error",
        type: {
          name: "Composite",
          className: "ServiceErrorDetail"
        }
      },
      requestSubmitTime: {
        readOnly: true,
        serializedName: "properties.requestSubmitTime",
        type: {
          name: "DateTime"
        }
      },
      value: {
        serializedName: "properties.value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubRequest"
            }
          }
        }
      }
    }
  }
};

export const ServiceError: msRest.CompositeMapper = {
  serializedName: "ServiceError",
  type: {
    name: "Composite",
    className: "ServiceError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      details: {
        readOnly: true,
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceErrorDetail"
            }
          }
        }
      }
    }
  }
};

export const ExceptionResponse: msRest.CompositeMapper = {
  serializedName: "ExceptionResponse",
  type: {
    name: "Composite",
    className: "ExceptionResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ServiceError"
        }
      }
    }
  }
};

export const UsagesGetHeaders: msRest.CompositeMapper = {
  serializedName: "usages-get-headers",
  type: {
    name: "Composite",
    className: "UsagesGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UsagesListHeaders: msRest.CompositeMapper = {
  serializedName: "usages-list-headers",
  type: {
    name: "Composite",
    className: "UsagesListHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QuotaGetHeaders: msRest.CompositeMapper = {
  serializedName: "quota-get-headers",
  type: {
    name: "Composite",
    className: "QuotaGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QuotaListHeaders: msRest.CompositeMapper = {
  serializedName: "quota-list-headers",
  type: {
    name: "Composite",
    className: "QuotaListHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UsagesLimits: msRest.CompositeMapper = {
  serializedName: "UsagesLimits",
  type: {
    name: "Composite",
    className: "UsagesLimits",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CurrentUsagesBase"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QuotaLimits: msRest.CompositeMapper = {
  serializedName: "QuotaLimits",
  type: {
    name: "Composite",
    className: "QuotaLimits",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CurrentQuotaLimitBase"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QuotaRequestDetailsList: msRest.CompositeMapper = {
  serializedName: "QuotaRequestDetailsList",
  type: {
    name: "Composite",
    className: "QuotaRequestDetailsList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "QuotaRequestDetails"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationList: msRest.CompositeMapper = {
  serializedName: "OperationList",
  type: {
    name: "Composite",
    className: "OperationList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationResponse"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const discriminators = {
  'LimitJsonObject' : LimitJsonObject

};
