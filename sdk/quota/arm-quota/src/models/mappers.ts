/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const GroupQuotasEntityBase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotasEntityBase",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String",
        },
      },
      additionalAttributes: {
        serializedName: "additionalAttributes",
        type: {
          name: "Composite",
          className: "AdditionalAttributes",
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AdditionalAttributes: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AdditionalAttributes",
    modelProperties: {
      groupId: {
        serializedName: "groupId",
        type: {
          name: "Composite",
          className: "GroupingId",
        },
      },
      environment: {
        serializedName: "environment",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GroupingId: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupingId",
    modelProperties: {
      groupingIdType: {
        serializedName: "groupingIdType",
        type: {
          name: "String",
        },
      },
      value: {
        serializedName: "value",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String",
        },
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String",
        },
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime",
        },
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String",
        },
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String",
        },
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const LROResponseProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LROResponseProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const GroupQuotasEntityBasePatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotasEntityBasePatch",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String",
        },
      },
      additionalAttributes: {
        serializedName: "additionalAttributes",
        type: {
          name: "Composite",
          className: "AdditionalAttributesPatch",
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AdditionalAttributesPatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AdditionalAttributesPatch",
    modelProperties: {
      groupId: {
        serializedName: "groupId",
        type: {
          name: "Composite",
          className: "GroupingId",
        },
      },
      environment: {
        serializedName: "environment",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GroupQuotaList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotaList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GroupQuotasEntity",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GroupQuotaSubscriptionIdProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotaSubscriptionIdProperties",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscriptionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GroupQuotaSubscriptionIdList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotaSubscriptionIdList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GroupQuotaSubscriptionId",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GroupQuotaSubscriptionRequestStatusList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotaSubscriptionRequestStatusList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GroupQuotaSubscriptionRequestStatus",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GroupQuotaSubscriptionRequestStatusProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotaSubscriptionRequestStatusProperties",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String",
        },
      },
      requestSubmitTime: {
        serializedName: "requestSubmitTime",
        type: {
          name: "DateTime",
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GroupQuotaDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotaDetails",
    modelProperties: {
      region: {
        serializedName: "region",
        type: {
          name: "String",
        },
      },
      limit: {
        serializedName: "limit",
        type: {
          name: "Number",
        },
      },
      comment: {
        serializedName: "comment",
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "Composite",
          className: "GroupQuotaDetailsName",
        },
      },
      unit: {
        serializedName: "unit",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      availableLimit: {
        serializedName: "availableLimit",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      allocatedToSubscriptions: {
        serializedName: "allocatedToSubscriptions",
        type: {
          name: "Composite",
          className: "AllocatedQuotaToSubscriptionList",
        },
      },
    },
  },
};

export const GroupQuotaDetailsName: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotaDetailsName",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      localizedValue: {
        serializedName: "localizedValue",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AllocatedQuotaToSubscriptionList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AllocatedQuotaToSubscriptionList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AllocatedToSubscription",
            },
          },
        },
      },
    },
  },
};

export const AllocatedToSubscription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AllocatedToSubscription",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String",
        },
      },
      quotaAllocated: {
        serializedName: "quotaAllocated",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GroupQuotaLimitList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotaLimitList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GroupQuotaLimit",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SubmittedResourceRequestStatusProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubmittedResourceRequestStatusProperties",
    modelProperties: {
      requestedResource: {
        serializedName: "requestedResource",
        type: {
          name: "Composite",
          className: "GroupQuotaRequestBase",
        },
      },
      requestSubmitTime: {
        serializedName: "requestSubmitTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      faultCode: {
        serializedName: "faultCode",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GroupQuotaRequestBase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotaRequestBase",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "GroupQuotaRequestBaseProperties",
        },
      },
    },
  },
};

export const GroupQuotaRequestBaseProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotaRequestBaseProperties",
    modelProperties: {
      limit: {
        serializedName: "limit",
        type: {
          name: "Number",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "Composite",
          className: "GroupQuotaRequestBasePropertiesName",
        },
      },
      region: {
        serializedName: "region",
        type: {
          name: "String",
        },
      },
      comments: {
        serializedName: "comments",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GroupQuotaRequestBasePropertiesName: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotaRequestBasePropertiesName",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      localizedValue: {
        serializedName: "localizedValue",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SubmittedResourceRequestStatusList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubmittedResourceRequestStatusList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubmittedResourceRequestStatus",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SubscriptionQuotaAllocationsList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubscriptionQuotaAllocationsList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubscriptionQuotaAllocations",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SubscriptionQuotaDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubscriptionQuotaDetails",
    modelProperties: {
      region: {
        serializedName: "region",
        type: {
          name: "String",
        },
      },
      limit: {
        serializedName: "limit",
        type: {
          name: "Number",
        },
      },
      shareableQuota: {
        serializedName: "shareableQuota",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "Composite",
          className: "SubscriptionQuotaDetailsName",
        },
      },
    },
  },
};

export const SubscriptionQuotaDetailsName: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubscriptionQuotaDetailsName",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      localizedValue: {
        serializedName: "localizedValue",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const QuotaAllocationRequestStatusProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaAllocationRequestStatusProperties",
    modelProperties: {
      requestedResource: {
        serializedName: "requestedResource",
        type: {
          name: "Composite",
          className: "QuotaAllocationRequestBase",
        },
      },
      requestSubmitTime: {
        serializedName: "requestSubmitTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      faultCode: {
        serializedName: "faultCode",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const QuotaAllocationRequestBase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaAllocationRequestBase",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "QuotaAllocationRequestBaseProperties",
        },
      },
    },
  },
};

export const QuotaAllocationRequestBaseProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaAllocationRequestBaseProperties",
    modelProperties: {
      limit: {
        serializedName: "limit",
        type: {
          name: "Number",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "Composite",
          className: "QuotaAllocationRequestBasePropertiesName",
        },
      },
      region: {
        serializedName: "region",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const QuotaAllocationRequestBasePropertiesName: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaAllocationRequestBasePropertiesName",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      localizedValue: {
        serializedName: "localizedValue",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const QuotaAllocationRequestStatusList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaAllocationRequestStatusList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "QuotaAllocationRequestStatus",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ResourceUsageList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceUsageList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResourceUsages",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GroupQuotaUsagesBase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotaUsagesBase",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "Composite",
          className: "GroupQuotaUsagesBaseName",
        },
      },
      limit: {
        serializedName: "limit",
        type: {
          name: "Number",
        },
      },
      usages: {
        serializedName: "usages",
        type: {
          name: "Number",
        },
      },
      unit: {
        serializedName: "unit",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GroupQuotaUsagesBaseName: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotaUsagesBaseName",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String",
        },
      },
      localizedValue: {
        serializedName: "localizedValue",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GroupQuotasEnforcementResponseProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotasEnforcementResponseProperties",
    modelProperties: {
      enforcementEnabled: {
        serializedName: "enforcementEnabled",
        type: {
          name: "String",
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      faultCode: {
        serializedName: "faultCode",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GroupQuotasEnforcementListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotasEnforcementListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GroupQuotasEnforcementResponse",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CurrentUsagesBase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CurrentUsagesBase",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "UsagesProperties",
        },
      },
    },
  },
};

export const UsagesProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UsagesProperties",
    modelProperties: {
      usages: {
        serializedName: "usages",
        type: {
          name: "Composite",
          className: "UsagesObject",
        },
      },
      unit: {
        serializedName: "unit",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "Composite",
          className: "ResourceName",
        },
      },
      resourceType: {
        serializedName: "resourceType",
        type: {
          name: "String",
        },
      },
      quotaPeriod: {
        serializedName: "quotaPeriod",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isQuotaApplicable: {
        serializedName: "isQuotaApplicable",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const UsagesObject: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UsagesObject",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Number",
        },
      },
      usagesType: {
        serializedName: "usagesType",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ResourceName: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceName",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String",
        },
      },
      localizedValue: {
        serializedName: "localizedValue",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ExceptionResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExceptionResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ServiceError",
        },
      },
    },
  },
};

export const ServiceError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceErrorDetail",
            },
          },
        },
      },
    },
  },
};

export const ServiceErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const UsagesLimits: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UsagesLimits",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CurrentUsagesBase",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CurrentQuotaLimitBase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CurrentQuotaLimitBase",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "QuotaProperties",
        },
      },
    },
  },
};

export const QuotaProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaProperties",
    modelProperties: {
      limit: {
        serializedName: "limit",
        type: {
          name: "Composite",
          className: "LimitJsonObject",
        },
      },
      unit: {
        serializedName: "unit",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "Composite",
          className: "ResourceName",
        },
      },
      resourceType: {
        serializedName: "resourceType",
        type: {
          name: "String",
        },
      },
      quotaPeriod: {
        serializedName: "quotaPeriod",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isQuotaApplicable: {
        serializedName: "isQuotaApplicable",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const LimitJsonObject: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LimitJsonObject",
    uberParent: "LimitJsonObject",
    polymorphicDiscriminator: {
      serializedName: "limitObjectType",
      clientName: "limitObjectType",
    },
    modelProperties: {
      limitObjectType: {
        serializedName: "limitObjectType",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const QuotaLimits: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaLimits",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CurrentQuotaLimitBase",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const QuotaRequestDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaRequestDetails",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "QuotaRequestProperties",
        },
      },
    },
  },
};

export const QuotaRequestProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaRequestProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ServiceErrorDetail",
        },
      },
      requestSubmitTime: {
        serializedName: "requestSubmitTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubRequest",
            },
          },
        },
      },
    },
  },
};

export const SubRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubRequest",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "Composite",
          className: "ResourceName",
        },
      },
      resourceType: {
        serializedName: "resourceType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String",
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      subRequestId: {
        serializedName: "subRequestId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      limit: {
        serializedName: "limit",
        type: {
          name: "Composite",
          className: "LimitJsonObject",
        },
      },
    },
  },
};

export const QuotaRequestDetailsList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaRequestDetailsList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "QuotaRequestDetails",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationResponse",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationResponse",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay",
        },
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String",
        },
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String",
        },
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SubscriptionQuotaAllocationRequestList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubscriptionQuotaAllocationRequestList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "QuotaAllocationRequestStatus",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SubscriptionGroupQuotaAssignment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubscriptionGroupQuotaAssignment",
    modelProperties: {
      groupQuotaId: {
        serializedName: "groupQuotaId",
        type: {
          name: "String",
        },
      },
      quotaAllocated: {
        serializedName: "quotaAllocated",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const SubscriptionQuotaAllocationsStatusList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubscriptionQuotaAllocationsStatusList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubmittedResourceRequestStatus",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ResourceBaseRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceBaseRequest",
    modelProperties: {
      resourceName: {
        serializedName: "resourceName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      limit: {
        serializedName: "limit",
        type: {
          name: "Number",
        },
      },
      unit: {
        serializedName: "unit",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const BillingAccountId: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingAccountId",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CommonResourceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommonResourceProperties",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const QuotaLimitsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaLimitsResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CurrentQuotaLimitBase",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CreateGenericQuotaRequestParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CreateGenericQuotaRequestParameters",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CurrentQuotaLimitBase",
            },
          },
        },
      },
    },
  },
};

export const QuotaRequestOneResourceSubmitResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaRequestOneResourceSubmitResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "QuotaRequestOneResourceProperties",
        },
      },
    },
  },
};

export const QuotaRequestOneResourceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaRequestOneResourceProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      requestSubmitTime: {
        serializedName: "requestSubmitTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      limit: {
        serializedName: "limit",
        type: {
          name: "Composite",
          className: "LimitObject",
        },
      },
      currentValue: {
        serializedName: "currentValue",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "Composite",
          className: "ResourceName",
        },
      },
      resourceType: {
        serializedName: "resourceType",
        type: {
          name: "String",
        },
      },
      quotaPeriod: {
        serializedName: "quotaPeriod",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isQuotaApplicable: {
        serializedName: "isQuotaApplicable",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ServiceErrorDetail",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const QuotaRequestSubmitResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaRequestSubmitResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "QuotaRequestProperties",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const QuotaRequestSubmitResponse202: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaRequestSubmitResponse202",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "QuotaRequestStatusDetails",
        },
      },
    },
  },
};

export const QuotaRequestStatusDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaRequestStatusDetails",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      limit: {
        serializedName: "limit",
        type: {
          name: "Composite",
          className: "LimitObject",
        },
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "Composite",
          className: "ResourceName",
        },
      },
      resourceType: {
        serializedName: "resourceType",
        type: {
          name: "String",
        },
      },
      quotaPeriod: {
        serializedName: "quotaPeriod",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties,
    },
  },
};

export const LimitObject: coreClient.CompositeMapper = {
  serializedName: "LimitValue",
  type: {
    name: "Composite",
    className: "LimitObject",
    uberParent: "LimitJsonObject",
    polymorphicDiscriminator: LimitJsonObject.type.polymorphicDiscriminator,
    modelProperties: {
      ...LimitJsonObject.type.modelProperties,
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Number",
        },
      },
      limitType: {
        serializedName: "limitType",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GroupQuotasEntity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotasEntity",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "GroupQuotasEntityBase",
        },
      },
    },
  },
};

export const LROResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LROResponse",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "LROResponseProperties",
        },
      },
    },
  },
};

export const GroupQuotasEntityPatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotasEntityPatch",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "GroupQuotasEntityBasePatch",
        },
      },
    },
  },
};

export const GroupQuotaSubscriptionId: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotaSubscriptionId",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "GroupQuotaSubscriptionIdProperties",
        },
      },
    },
  },
};

export const GroupQuotaSubscriptionRequestStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotaSubscriptionRequestStatus",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "GroupQuotaSubscriptionRequestStatusProperties",
        },
      },
    },
  },
};

export const GroupQuotaLimit: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotaLimit",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "GroupQuotaDetails",
        },
      },
    },
  },
};

export const SubmittedResourceRequestStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubmittedResourceRequestStatus",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SubmittedResourceRequestStatusProperties",
        },
      },
    },
  },
};

export const SubscriptionQuotaAllocations: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubscriptionQuotaAllocations",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SubscriptionQuotaDetails",
        },
      },
    },
  },
};

export const QuotaAllocationRequestStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaAllocationRequestStatus",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "QuotaAllocationRequestStatusProperties",
        },
      },
    },
  },
};

export const ResourceUsages: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceUsages",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "GroupQuotaUsagesBase",
        },
      },
    },
  },
};

export const GroupQuotasEnforcementResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotasEnforcementResponse",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "GroupQuotasEnforcementResponseProperties",
        },
      },
    },
  },
};

export const GroupQuotasCreateOrUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotasCreateOrUpdateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GroupQuotasUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotasUpdateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GroupQuotasDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotasDeleteHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GroupQuotaSubscriptionsCreateOrUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotaSubscriptionsCreateOrUpdateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GroupQuotaSubscriptionsUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotaSubscriptionsUpdateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GroupQuotaSubscriptionsDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotaSubscriptionsDeleteHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GroupQuotaLimitsRequestCreateOrUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotaLimitsRequestCreateOrUpdateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GroupQuotaLimitsRequestUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotaLimitsRequestUpdateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GroupQuotaSubscriptionAllocationRequestCreateOrUpdateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GroupQuotaSubscriptionAllocationRequestCreateOrUpdateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
        azureAsyncOperation: {
          serializedName: "azure-asyncoperation",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const GroupQuotaSubscriptionAllocationRequestUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotaSubscriptionAllocationRequestUpdateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GroupQuotaLocationSettingsCreateOrUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotaLocationSettingsCreateOrUpdateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GroupQuotaLocationSettingsUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupQuotaLocationSettingsUpdateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const UsagesGetHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UsagesGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const UsagesListHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UsagesListHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const UsagesListNextHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UsagesListNextHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const QuotaGetHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const QuotaListHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaListHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const QuotaListNextHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaListNextHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String",
        },
      },
    },
  },
};

export let discriminators = {
  LimitJsonObject: LimitJsonObject,
  "LimitJsonObject.LimitValue": LimitObject,
};
