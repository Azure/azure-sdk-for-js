/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/quotaRequestStatusMappers";
import * as Parameters from "../models/parameters";
import { AzureQuotaExtensionAPIContext } from "../azureQuotaExtensionAPIContext";

/** Class representing a QuotaRequestStatus. */
export class QuotaRequestStatus {
  private readonly client: AzureQuotaExtensionAPIContext;

  /**
   * Create a QuotaRequestStatus.
   * @param {AzureQuotaExtensionAPIContext} client Reference to the service client.
   */
  constructor(client: AzureQuotaExtensionAPIContext) {
    this.client = client;
  }

  /**
   * Gets the quota request details and status by quota request ID for the resources of the resource
   * provider at a specific location. The quota request ID **id** is returned in the response of the
   * PUT operation.
   * @param id Quota request ID.
   * @param scope The target Azure resource URI. For example,
   * `/subscriptions/9f6cce51-6baf-4de5-a3c4-6f58b85315b9/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.
   * This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added
   * after `/quotaLimits`, then it's the target Azure resource URI in the GET operation for the
   * specific resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.QuotaRequestStatusGetResponse>
   */
  get(id: string, scope: string, options?: msRest.RequestOptionsBase): Promise<Models.QuotaRequestStatusGetResponse>;
  /**
   * @param id Quota request ID.
   * @param scope The target Azure resource URI. For example,
   * `/subscriptions/9f6cce51-6baf-4de5-a3c4-6f58b85315b9/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.
   * This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added
   * after `/quotaLimits`, then it's the target Azure resource URI in the GET operation for the
   * specific resource.
   * @param callback The callback
   */
  get(id: string, scope: string, callback: msRest.ServiceCallback<Models.QuotaRequestDetails>): void;
  /**
   * @param id Quota request ID.
   * @param scope The target Azure resource URI. For example,
   * `/subscriptions/9f6cce51-6baf-4de5-a3c4-6f58b85315b9/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.
   * This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added
   * after `/quotaLimits`, then it's the target Azure resource URI in the GET operation for the
   * specific resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(id: string, scope: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.QuotaRequestDetails>): void;
  get(id: string, scope: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.QuotaRequestDetails>, callback?: msRest.ServiceCallback<Models.QuotaRequestDetails>): Promise<Models.QuotaRequestStatusGetResponse> {
    return this.client.sendOperationRequest(
      {
        id,
        scope,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.QuotaRequestStatusGetResponse>;
  }

  /**
   * For the specified location and resource provider, gets the current quota requests under the
   * subscription for a one year period ending at the time is made. Use the **oData** filter can be
   * used to select quota requests.
   * @param scope The target Azure resource URI. For example,
   * `/subscriptions/9f6cce51-6baf-4de5-a3c4-6f58b85315b9/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.
   * This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added
   * after `/quotaLimits`, then it's the target Azure resource URI in the GET operation for the
   * specific resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.QuotaRequestStatusListResponse>
   */
  list(scope: string, options?: Models.QuotaRequestStatusListOptionalParams): Promise<Models.QuotaRequestStatusListResponse>;
  /**
   * @param scope The target Azure resource URI. For example,
   * `/subscriptions/9f6cce51-6baf-4de5-a3c4-6f58b85315b9/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.
   * This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added
   * after `/quotaLimits`, then it's the target Azure resource URI in the GET operation for the
   * specific resource.
   * @param callback The callback
   */
  list(scope: string, callback: msRest.ServiceCallback<Models.QuotaRequestDetailsList>): void;
  /**
   * @param scope The target Azure resource URI. For example,
   * `/subscriptions/9f6cce51-6baf-4de5-a3c4-6f58b85315b9/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.
   * This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added
   * after `/quotaLimits`, then it's the target Azure resource URI in the GET operation for the
   * specific resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(scope: string, options: Models.QuotaRequestStatusListOptionalParams, callback: msRest.ServiceCallback<Models.QuotaRequestDetailsList>): void;
  list(scope: string, options?: Models.QuotaRequestStatusListOptionalParams | msRest.ServiceCallback<Models.QuotaRequestDetailsList>, callback?: msRest.ServiceCallback<Models.QuotaRequestDetailsList>): Promise<Models.QuotaRequestStatusListResponse> {
    return this.client.sendOperationRequest(
      {
        scope,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.QuotaRequestStatusListResponse>;
  }

  /**
   * For the specified location and resource provider, gets the current quota requests under the
   * subscription for a one year period ending at the time is made. Use the **oData** filter can be
   * used to select quota requests.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.QuotaRequestStatusListNextResponse>
   */
  listNext(nextPageLink: string, options?: Models.QuotaRequestStatusListNextOptionalParams): Promise<Models.QuotaRequestStatusListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.QuotaRequestDetailsList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: Models.QuotaRequestStatusListNextOptionalParams, callback: msRest.ServiceCallback<Models.QuotaRequestDetailsList>): void;
  listNext(nextPageLink: string, options?: Models.QuotaRequestStatusListNextOptionalParams | msRest.ServiceCallback<Models.QuotaRequestDetailsList>, callback?: msRest.ServiceCallback<Models.QuotaRequestDetailsList>): Promise<Models.QuotaRequestStatusListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.QuotaRequestStatusListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "{scope}/providers/Microsoft.Quota/quotaLimitsRequests/{id}",
  urlParameters: [
    Parameters.id,
    Parameters.scope
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.QuotaRequestDetails
    },
    default: {
      bodyMapper: Mappers.ExceptionResponse
    }
  },
  serializer
};

const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "{scope}/providers/Microsoft.Quota/quotaLimitsRequests",
  urlParameters: [
    Parameters.scope
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.filter,
    Parameters.top,
    Parameters.skiptoken
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.QuotaRequestDetailsList
    },
    default: {
      bodyMapper: Mappers.ExceptionResponse
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.filter,
    Parameters.top,
    Parameters.skiptoken
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.QuotaRequestDetailsList
    },
    default: {
      bodyMapper: Mappers.ExceptionResponse
    }
  },
  serializer
};
