/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/quotaResourceProvidersMappers";
import * as Parameters from "../models/parameters";
import { AzureQuotaExtensionAPIContext } from "../azureQuotaExtensionAPIContext";

/** Class representing a QuotaResourceProviders. */
export class QuotaResourceProviders {
  private readonly client: AzureQuotaExtensionAPIContext;

  /**
   * Create a QuotaResourceProviders.
   * @param {AzureQuotaExtensionAPIContext} client Reference to the service client.
   */
  constructor(client: AzureQuotaExtensionAPIContext) {
    this.client = client;
  }

  /**
   * Gets the list of current resource providers supported by the Microsoft.Quota resource provider.
   * For each resource provider, the resource templates the resource provider supports are be
   * provided.
   * For each resource template, the resource dimensions are listed. The resource dimensions are the
   * name-value pairs in the resource URI.
   * Example:Â Microsoft.Compute Resource Provider
   * The URI template is
   * '/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{locationId}/quotaBucket'.
   * The actual dimensions vary depending on the resource provider.
   * The resource dimensions are {subscriptions},{locations},{quotaBucket}.
   * @param [options] The optional parameters
   * @returns Promise<Models.QuotaResourceProvidersListResponse>
   */
  list(options?: msRest.RequestOptionsBase): Promise<Models.QuotaResourceProvidersListResponse>;
  /**
   * @param callback The callback
   */
  list(callback: msRest.ServiceCallback<Models.ResourceProvidersList>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceProvidersList>): void;
  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceProvidersList>, callback?: msRest.ServiceCallback<Models.ResourceProvidersList>): Promise<Models.QuotaResourceProvidersListResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listOperationSpec,
      callback) as Promise<Models.QuotaResourceProvidersListResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Quota/quotaLimitProviders",
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ResourceProvidersList
    },
    default: {
      bodyMapper: Mappers.ExceptionResponse
    }
  },
  serializer
};
