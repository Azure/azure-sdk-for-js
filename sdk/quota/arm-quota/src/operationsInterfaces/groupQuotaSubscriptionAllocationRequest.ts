/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  QuotaAllocationRequestStatus,
  GroupQuotaSubscriptionAllocationRequestListOptionalParams,
  GroupQuotaSubscriptionAllocationRequestGetOptionalParams,
  GroupQuotaSubscriptionAllocationRequestGetResponse,
  GroupQuotaSubscriptionAllocationRequestCreateOrUpdateOptionalParams,
  GroupQuotaSubscriptionAllocationRequestCreateOrUpdateResponse,
  GroupQuotaSubscriptionAllocationRequestUpdateOptionalParams,
  GroupQuotaSubscriptionAllocationRequestUpdateResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a GroupQuotaSubscriptionAllocationRequest. */
export interface GroupQuotaSubscriptionAllocationRequest {
  /**
   * Get all the quotaAllocationRequests for a resourceProvider/location. The filter paramter for
   * location is required.
   * @param managementGroupId Management Group Id.
   * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context
   *                       tenantId/MgId.
   * @param resourceProviderName The resource provider name, such as - Microsoft.Compute. Currently only
   *                             Microsoft.Compute resource provider supports this API.
   * @param filter | Field | Supported operators
   *               |---------------------|------------------------
   *
   *                location eq {location}
   *                Example: $filter=location eq eastus
   * @param options The options parameters.
   */
  list(
    managementGroupId: string,
    groupQuotaName: string,
    resourceProviderName: string,
    filter: string,
    options?: GroupQuotaSubscriptionAllocationRequestListOptionalParams,
  ): PagedAsyncIterableIterator<QuotaAllocationRequestStatus>;
  /**
   * Get the quota allocation request status for the subscriptionId by allocationId.
   * @param managementGroupId Management Group Id.
   * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context
   *                       tenantId/MgId.
   * @param allocationId Request Id.
   * @param options The options parameters.
   */
  get(
    managementGroupId: string,
    groupQuotaName: string,
    allocationId: string,
    options?: GroupQuotaSubscriptionAllocationRequestGetOptionalParams,
  ): Promise<GroupQuotaSubscriptionAllocationRequestGetResponse>;
  /**
   * Request to assign quota from group quota to a specific Subscription. The assign GroupQuota to
   * subscriptions or reduce the quota allocated to subscription to give back the unused quota ( quota >=
   * usages) to the groupQuota. So, this API can be used to assign Quota to subscriptions and assign back
   * unused quota to group quota, which can be assigned to another subscriptions in the GroupQuota.
   * @param managementGroupId Management Group Id.
   * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context
   *                       tenantId/MgId.
   * @param resourceProviderName The resource provider name, such as - Microsoft.Compute. Currently only
   *                             Microsoft.Compute resource provider supports this API.
   * @param resourceName Resource name.
   * @param allocateQuotaRequest Quota requests payload.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    managementGroupId: string,
    groupQuotaName: string,
    resourceProviderName: string,
    resourceName: string,
    allocateQuotaRequest: QuotaAllocationRequestStatus,
    options?: GroupQuotaSubscriptionAllocationRequestCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<GroupQuotaSubscriptionAllocationRequestCreateOrUpdateResponse>,
      GroupQuotaSubscriptionAllocationRequestCreateOrUpdateResponse
    >
  >;
  /**
   * Request to assign quota from group quota to a specific Subscription. The assign GroupQuota to
   * subscriptions or reduce the quota allocated to subscription to give back the unused quota ( quota >=
   * usages) to the groupQuota. So, this API can be used to assign Quota to subscriptions and assign back
   * unused quota to group quota, which can be assigned to another subscriptions in the GroupQuota.
   * @param managementGroupId Management Group Id.
   * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context
   *                       tenantId/MgId.
   * @param resourceProviderName The resource provider name, such as - Microsoft.Compute. Currently only
   *                             Microsoft.Compute resource provider supports this API.
   * @param resourceName Resource name.
   * @param allocateQuotaRequest Quota requests payload.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    managementGroupId: string,
    groupQuotaName: string,
    resourceProviderName: string,
    resourceName: string,
    allocateQuotaRequest: QuotaAllocationRequestStatus,
    options?: GroupQuotaSubscriptionAllocationRequestCreateOrUpdateOptionalParams,
  ): Promise<GroupQuotaSubscriptionAllocationRequestCreateOrUpdateResponse>;
  /**
   * Request to assign quota from group quota to a specific Subscription. The assign GroupQuota to
   * subscriptions or reduce the quota allocated to subscription to give back the unused quota ( quota >=
   * usages) to the groupQuota. So, this API can be used to assign Quota to subscriptions and assign back
   * unused quota to group quota, which can be assigned to another subscriptions in the GroupQuota. User
   * can collect unused quotas from multiple subscriptions within the groupQuota and assign the
   * groupQuota to the subscription, where it's needed.
   * @param managementGroupId Management Group Id.
   * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context
   *                       tenantId/MgId.
   * @param resourceProviderName The resource provider name, such as - Microsoft.Compute. Currently only
   *                             Microsoft.Compute resource provider supports this API.
   * @param resourceName Resource name.
   * @param allocateQuotaRequest Quota requests payload.
   * @param options The options parameters.
   */
  beginUpdate(
    managementGroupId: string,
    groupQuotaName: string,
    resourceProviderName: string,
    resourceName: string,
    allocateQuotaRequest: QuotaAllocationRequestStatus,
    options?: GroupQuotaSubscriptionAllocationRequestUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<GroupQuotaSubscriptionAllocationRequestUpdateResponse>,
      GroupQuotaSubscriptionAllocationRequestUpdateResponse
    >
  >;
  /**
   * Request to assign quota from group quota to a specific Subscription. The assign GroupQuota to
   * subscriptions or reduce the quota allocated to subscription to give back the unused quota ( quota >=
   * usages) to the groupQuota. So, this API can be used to assign Quota to subscriptions and assign back
   * unused quota to group quota, which can be assigned to another subscriptions in the GroupQuota. User
   * can collect unused quotas from multiple subscriptions within the groupQuota and assign the
   * groupQuota to the subscription, where it's needed.
   * @param managementGroupId Management Group Id.
   * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context
   *                       tenantId/MgId.
   * @param resourceProviderName The resource provider name, such as - Microsoft.Compute. Currently only
   *                             Microsoft.Compute resource provider supports this API.
   * @param resourceName Resource name.
   * @param allocateQuotaRequest Quota requests payload.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    managementGroupId: string,
    groupQuotaName: string,
    resourceProviderName: string,
    resourceName: string,
    allocateQuotaRequest: QuotaAllocationRequestStatus,
    options?: GroupQuotaSubscriptionAllocationRequestUpdateOptionalParams,
  ): Promise<GroupQuotaSubscriptionAllocationRequestUpdateResponse>;
}
