{"version":3,"file":"buffer-browser.mjs","sourceRoot":"","sources":["../../../src/utils/buffer-browser.mts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,KAAK,UAAU,iBAAiB,CAAC,IAAU;IACzC,IAAI,aAAa,IAAI,IAAI,EAAE,CAAC;QAC1B,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;IAC5B,CAAC;IACD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACrC,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAChC,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,MAAqB,CAAC,CAAC;QAC5D,MAAM,CAAC,OAAO,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC;QAC9B,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;AACL,CAAC;AAED;;;;;GAKG;AACH,MAAM,CAAC,KAAK,UAAU,mBAAmB,CACvC,KAA6C;IAE7C,IAAI,KAAK,KAAK,SAAS,EAAE,CAAC;QACxB,OAAO,KAAK,CAAC;IACf,CAAC;IAED,6FAA6F;IAC7F,IAAK,KAAa,CAAC,UAAU,KAAK,SAAS,EAAE,CAAC;QAC5C,OAAO,IAAI,UAAU,CAAC,MAAM,iBAAiB,CAAC,KAAa,CAAC,CAAC,CAAC;IAChE,CAAC;IAED,8FAA8F;IAC9F,OAAO,KAA4B,CAAC;AACtC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nasync function blobToArrayBuffer(blob: Blob): Promise<ArrayBuffer> {\n  if (\"arrayBuffer\" in blob) {\n    return blob.arrayBuffer();\n  }\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(reader.result as ArrayBuffer);\n    reader.onerror = () => reject;\n    reader.readAsArrayBuffer(blob);\n  });\n}\n\n/**\n * Converts an attestation input from Uint8Array/Buffer/Blob to Uint8Array.\n *\n * @param input - Input to attestation API.\n * @returns Promise which completes with the input data as a Uint8Array.\n */\nexport async function Uint8ArrayFromInput(\n  input: Uint8Array | Buffer | Blob | undefined,\n): Promise<Uint8Array | undefined> {\n  if (input === undefined) {\n    return input;\n  }\n\n  // If this is not a Uint8Array, assume it's a blob and retrieve an ArrayBuffer from the blob.\n  if ((input as any).byteLength === undefined) {\n    return new Uint8Array(await blobToArrayBuffer(input as Blob));\n  }\n\n  // We eliminated the 'Blob' case above, so we know this must be either a Buffer or Uint8Array.\n  return input as Uint8Array | Buffer;\n}\n"]}