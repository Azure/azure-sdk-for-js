{"version":3,"file":"buffer.js","sourceRoot":"","sources":["../../../src/utils/buffer.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;AAQlC,kDAaC;AAnBD;;;;;GAKG;AACI,KAAK,UAAU,mBAAmB,CACvC,KAA6C;IAE7C,IAAI,KAAK,KAAK,SAAS,EAAE,CAAC;QACxB,OAAO,KAAK,CAAC;IACf,CAAC;IAED,IAAK,KAAa,CAAC,UAAU,KAAK,SAAS,EAAE,CAAC;QAC5C,MAAM,SAAS,CAAC,8BAA8B,CAAC,CAAC;IAClD,CAAC;IAED,iGAAiG;IACjG,OAAO,KAAmB,CAAC;AAC7B,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Converts an attestation input from Uint8Array/Buffer/Blob to Uint8Array.\n *\n * @param input - Input to attestation API.\n * @returns Promise which completes with the input data as a Uint8Array.\n */\nexport async function Uint8ArrayFromInput(\n  input: Uint8Array | Buffer | Blob | undefined,\n): Promise<Uint8Array | undefined> {\n  if (input === undefined) {\n    return input;\n  }\n\n  if ((input as any).byteLength === undefined) {\n    throw TypeError(\"Blob is unsupported in node.\");\n  }\n\n  // We've eliminated the 'Blob' case above, so we know this must be either a Buffer or Uint8Array.\n  return input as Uint8Array;\n}\n"]}