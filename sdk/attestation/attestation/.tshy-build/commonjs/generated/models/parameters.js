"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.accept2 = exports.request2 = exports.request1 = exports.request = exports.policyCertificateToRemove = exports.policyCertificateToAdd = exports.contentType1 = exports.policyJws = exports.accept1 = exports.newAttestationPolicy = exports.contentType = exports.attestationType = exports.apiVersion = exports.instanceUrl = exports.accept = void 0;
const mappers_js_1 = require("../models/mappers.js");
exports.accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
exports.instanceUrl = {
    parameterPath: "instanceUrl",
    mapper: {
        serializedName: "instanceUrl",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
exports.apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2020-10-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
exports.attestationType = {
    parameterPath: "attestationType",
    mapper: {
        serializedName: "attestationType",
        required: true,
        type: {
            name: "String"
        }
    }
};
exports.contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "text/plain",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
exports.newAttestationPolicy = {
    parameterPath: "newAttestationPolicy",
    mapper: {
        serializedName: "newAttestationPolicy",
        required: true,
        type: {
            name: "String"
        }
    }
};
exports.accept1 = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
exports.policyJws = {
    parameterPath: "policyJws",
    mapper: {
        serializedName: "policyJws",
        required: true,
        type: {
            name: "String"
        }
    }
};
exports.contentType1 = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
exports.policyCertificateToAdd = {
    parameterPath: "policyCertificateToAdd",
    mapper: {
        constraints: {
            Pattern: new RegExp("[A-Za-z0-9_-]+\\.[A-Za-z0-9_-]*\\.[A-Za-z0-9_-]*")
        },
        serializedName: "policyCertificateToAdd",
        required: true,
        type: {
            name: "String"
        }
    }
};
exports.policyCertificateToRemove = {
    parameterPath: "policyCertificateToRemove",
    mapper: {
        constraints: {
            Pattern: new RegExp("[A-Za-z0-9_-]+\\.[A-Za-z0-9_-]*\\.[A-Za-z0-9_-]*")
        },
        serializedName: "policyCertificateToRemove",
        required: true,
        type: {
            name: "String"
        }
    }
};
exports.request = {
    parameterPath: "request",
    mapper: mappers_js_1.AttestOpenEnclaveRequest
};
exports.request1 = {
    parameterPath: "request",
    mapper: mappers_js_1.AttestSgxEnclaveRequest
};
exports.request2 = {
    parameterPath: "request",
    mapper: mappers_js_1.TpmAttestationRequest
};
exports.accept2 = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/jwk+json, application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
//# sourceMappingURL=parameters.js.map