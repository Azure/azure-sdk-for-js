{"version":3,"file":"policy.js","sourceRoot":"","sources":["../../../../src/generated/operationsInterfaces/policy.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  AttestationType,\n  PolicyGetOptionalParams,\n  PolicyGetResponse,\n  PolicySetModelOptionalParams,\n  PolicySetModelResponse,\n  PolicyResetOptionalParams,\n  PolicyResetResponse\n} from \"../models/index.js\";\n\n/** Interface representing a Policy. */\nexport interface Policy {\n  /**\n   * Retrieves the current policy for an attestation type.\n   * @param attestationType Specifies the trusted execution environment to be used to validate the\n   *                        evidence\n   * @param options The options parameters.\n   */\n  get(\n    attestationType: AttestationType,\n    options?: PolicyGetOptionalParams\n  ): Promise<PolicyGetResponse>;\n  /**\n   * Sets the policy for a given attestation type.\n   * @param attestationType Specifies the trusted execution environment to be used to validate the\n   *                        evidence\n   * @param newAttestationPolicy JWT Expressing the new policy whose body is a StoredAttestationPolicy\n   *                             object.\n   * @param options The options parameters.\n   */\n  set(\n    attestationType: AttestationType,\n    newAttestationPolicy: string,\n    options?: PolicySetModelOptionalParams\n  ): Promise<PolicySetModelResponse>;\n  /**\n   * Resets the attestation policy for the specified tenant and reverts to the default policy.\n   * @param attestationType Specifies the trusted execution environment to be used to validate the\n   *                        evidence\n   * @param policyJws JSON Web Signature with an empty policy document\n   * @param options The options parameters.\n   */\n  reset(\n    attestationType: AttestationType,\n    policyJws: string,\n    options?: PolicyResetOptionalParams\n  ): Promise<PolicyResetResponse>;\n}\n"]}