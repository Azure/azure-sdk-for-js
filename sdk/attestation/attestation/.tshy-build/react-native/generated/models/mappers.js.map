{"version":3,"file":"mappers.js","sourceRoot":"","sources":["../../../../src/generated/models/mappers.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const PolicyResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyResponse\",\n    modelProperties: {\n      token: {\n        constraints: {\n          Pattern: new RegExp(\n            \"[A-Za-z0-9_-]+\\\\.[A-Za-z0-9_-]*\\\\.[A-Za-z0-9_-]*\"\n          )\n        },\n        serializedName: \"token\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudError\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"CloudErrorBody\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudErrorBody: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudErrorBody\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PolicyCertificatesResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyCertificatesResponse\",\n    modelProperties: {\n      token: {\n        constraints: {\n          Pattern: new RegExp(\n            \"[A-Za-z0-9_-]+\\\\.[A-Za-z0-9_-]*\\\\.[A-Za-z0-9_-]*\"\n          )\n        },\n        serializedName: \"token\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PolicyCertificatesModifyResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyCertificatesModifyResponse\",\n    modelProperties: {\n      token: {\n        constraints: {\n          Pattern: new RegExp(\n            \"[A-Za-z0-9_-]+\\\\.[A-Za-z0-9_-]*\\\\.[A-Za-z0-9_-]*\"\n          )\n        },\n        serializedName: \"token\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AttestOpenEnclaveRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AttestOpenEnclaveRequest\",\n    modelProperties: {\n      report: {\n        serializedName: \"report\",\n        type: {\n          name: \"Base64Url\"\n        }\n      },\n      runtimeData: {\n        serializedName: \"runtimeData\",\n        type: {\n          name: \"Composite\",\n          className: \"RuntimeData\"\n        }\n      },\n      initTimeData: {\n        serializedName: \"initTimeData\",\n        type: {\n          name: \"Composite\",\n          className: \"InitTimeData\"\n        }\n      },\n      draftPolicyForAttestation: {\n        serializedName: \"draftPolicyForAttestation\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RuntimeData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RuntimeData\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Base64Url\"\n        }\n      },\n      dataType: {\n        serializedName: \"dataType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const InitTimeData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InitTimeData\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Base64Url\"\n        }\n      },\n      dataType: {\n        serializedName: \"dataType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AttestationResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AttestationResponse\",\n    modelProperties: {\n      token: {\n        constraints: {\n          Pattern: new RegExp(\n            \"[A-Za-z0-9_-]+\\\\.[A-Za-z0-9_-]*\\\\.[A-Za-z0-9_-]*\"\n          )\n        },\n        serializedName: \"token\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AttestSgxEnclaveRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AttestSgxEnclaveRequest\",\n    modelProperties: {\n      quote: {\n        serializedName: \"quote\",\n        type: {\n          name: \"Base64Url\"\n        }\n      },\n      runtimeData: {\n        serializedName: \"runtimeData\",\n        type: {\n          name: \"Composite\",\n          className: \"RuntimeData\"\n        }\n      },\n      initTimeData: {\n        serializedName: \"initTimeData\",\n        type: {\n          name: \"Composite\",\n          className: \"InitTimeData\"\n        }\n      },\n      draftPolicyForAttestation: {\n        serializedName: \"draftPolicyForAttestation\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TpmAttestationRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TpmAttestationRequest\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Base64Url\"\n        }\n      }\n    }\n  }\n};\n\nexport const TpmAttestationResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TpmAttestationResponse\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Base64Url\"\n        }\n      }\n    }\n  }\n};\n\nexport const JsonWebKeySet: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JsonWebKeySet\",\n    modelProperties: {\n      keys: {\n        serializedName: \"keys\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"JsonWebKey\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const JsonWebKey: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JsonWebKey\",\n    modelProperties: {\n      alg: {\n        serializedName: \"alg\",\n        type: {\n          name: \"String\"\n        }\n      },\n      crv: {\n        serializedName: \"crv\",\n        type: {\n          name: \"String\"\n        }\n      },\n      d: {\n        serializedName: \"d\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dp: {\n        serializedName: \"dp\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dq: {\n        serializedName: \"dq\",\n        type: {\n          name: \"String\"\n        }\n      },\n      e: {\n        serializedName: \"e\",\n        type: {\n          name: \"String\"\n        }\n      },\n      k: {\n        serializedName: \"k\",\n        type: {\n          name: \"String\"\n        }\n      },\n      kid: {\n        serializedName: \"kid\",\n        type: {\n          name: \"String\"\n        }\n      },\n      kty: {\n        serializedName: \"kty\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      n: {\n        serializedName: \"n\",\n        type: {\n          name: \"String\"\n        }\n      },\n      p: {\n        serializedName: \"p\",\n        type: {\n          name: \"String\"\n        }\n      },\n      q: {\n        serializedName: \"q\",\n        type: {\n          name: \"String\"\n        }\n      },\n      qi: {\n        serializedName: \"qi\",\n        type: {\n          name: \"String\"\n        }\n      },\n      use: {\n        serializedName: \"use\",\n        type: {\n          name: \"String\"\n        }\n      },\n      x: {\n        serializedName: \"x\",\n        type: {\n          name: \"String\"\n        }\n      },\n      x5C: {\n        serializedName: \"x5c\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      y: {\n        serializedName: \"y\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AttestationCertificateManagementBody: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AttestationCertificateManagementBody\",\n    modelProperties: {\n      policyCertificate: {\n        serializedName: \"policyCertificate\",\n        type: {\n          name: \"Composite\",\n          className: \"JsonWebKey\"\n        }\n      }\n    }\n  }\n};\n\nexport const PolicyCertificatesResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyCertificatesResult\",\n    modelProperties: {\n      policyCertificates: {\n        serializedName: \"x-ms-policy-certificates\",\n        type: {\n          name: \"Composite\",\n          className: \"JsonWebKeySet\"\n        }\n      }\n    }\n  }\n};\n\nexport const PolicyCertificatesModificationResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyCertificatesModificationResult\",\n    modelProperties: {\n      certificateThumbprint: {\n        serializedName: \"x-ms-certificate-thumbprint\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      certificateResolution: {\n        serializedName: \"x-ms-policycertificates-result\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StoredAttestationPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StoredAttestationPolicy\",\n    modelProperties: {\n      attestationPolicy: {\n        serializedName: \"AttestationPolicy\",\n        type: {\n          name: \"Base64Url\"\n        }\n      }\n    }\n  }\n};\n\nexport const PolicyResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyResult\",\n    modelProperties: {\n      policyResolution: {\n        serializedName: \"x-ms-policy-result\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      policyTokenHash: {\n        serializedName: \"x-ms-policy-token-hash\",\n        required: true,\n        type: {\n          name: \"Base64Url\"\n        }\n      },\n      policySigner: {\n        serializedName: \"x-ms-policy-signer\",\n        type: {\n          name: \"Composite\",\n          className: \"JsonWebKey\"\n        }\n      },\n      policy: {\n        constraints: {\n          Pattern: new RegExp(\n            \"[A-Za-z0-9_-]+\\\\.[A-Za-z0-9_-]*\\\\.[A-Za-z0-9_-]*\"\n          )\n        },\n        serializedName: \"x-ms-policy\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GeneratedAttestationResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GeneratedAttestationResult\",\n    modelProperties: {\n      jti: {\n        serializedName: \"jti\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      iss: {\n        serializedName: \"iss\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      iat: {\n        serializedName: \"iat\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      exp: {\n        serializedName: \"exp\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      nbf: {\n        serializedName: \"nbf\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      cnf: {\n        serializedName: \"cnf\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-ver\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      runtimeClaims: {\n        serializedName: \"x-ms-runtime\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      inittimeClaims: {\n        serializedName: \"x-ms-inittime\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      policyClaims: {\n        serializedName: \"x-ms-policy\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      verifierType: {\n        serializedName: \"x-ms-attestation-type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      policySigner: {\n        serializedName: \"x-ms-policy-signer\",\n        type: {\n          name: \"Composite\",\n          className: \"JsonWebKey\"\n        }\n      },\n      policyHash: {\n        serializedName: \"x-ms-policy-hash\",\n        required: true,\n        type: {\n          name: \"Base64Url\"\n        }\n      },\n      isDebuggable: {\n        serializedName: \"x-ms-sgx-is-debuggable\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      productId: {\n        serializedName: \"x-ms-sgx-product-id\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      mrEnclave: {\n        serializedName: \"x-ms-sgx-mrenclave\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      mrSigner: {\n        serializedName: \"x-ms-sgx-mrsigner\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      svn: {\n        serializedName: \"x-ms-sgx-svn\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      enclaveHeldData: {\n        serializedName: \"x-ms-sgx-ehd\",\n        type: {\n          name: \"Base64Url\"\n        }\n      },\n      sgxCollateral: {\n        serializedName: \"x-ms-sgx-collateral\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      deprecatedVersion: {\n        serializedName: \"ver\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deprecatedIsDebuggable: {\n        serializedName: \"is-debuggable\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      deprecatedSgxCollateral: {\n        serializedName: \"maa-attestationcollateral\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      deprecatedEnclaveHeldData: {\n        serializedName: \"aas-ehd\",\n        type: {\n          name: \"Base64Url\"\n        }\n      },\n      deprecatedEnclaveHeldData2: {\n        serializedName: \"maa-ehd\",\n        type: {\n          name: \"Base64Url\"\n        }\n      },\n      deprecatedProductId: {\n        serializedName: \"product-id\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      deprecatedMrEnclave: {\n        serializedName: \"sgx-mrenclave\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deprecatedMrSigner: {\n        serializedName: \"sgx-mrsigner\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deprecatedSvn: {\n        serializedName: \"svn\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      deprecatedTee: {\n        serializedName: \"tee\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deprecatedPolicySigner: {\n        serializedName: \"policy_signer\",\n        type: {\n          name: \"Composite\",\n          className: \"JsonWebKey\"\n        }\n      },\n      deprecatedPolicyHash: {\n        serializedName: \"policy_hash\",\n        type: {\n          name: \"Base64Url\"\n        }\n      },\n      deprecatedRpData: {\n        serializedName: \"rp_data\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n"]}