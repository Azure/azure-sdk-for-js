/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import { AttestationClient } from "../attestationClient";
import {
  AttestOpenEnclaveRequest,
  AttestationAttestOpenEnclaveResponse,
  AttestSgxEnclaveRequest,
  AttestationAttestSgxEnclaveResponse,
  AttestationAttestTpmResponse,
  TpmAttestationRequest
} from "../models";

/**
 * Class representing a Attestation.
 */
export class Attestation {
  private readonly client: AttestationClient;

  /**
   * Initialize a new instance of the class Attestation class.
   * @param client Reference to the service client
   */
  constructor(client: AttestationClient) {
    this.client = client;
  }

  /**
   * Processes an OpenEnclave report , producing an artifact. The type of artifact produced is dependent
   * upon attestation policy.
   * @param request Request object containing the quote
   * @param options The options parameters.
   */
  attestOpenEnclave(
    request: AttestOpenEnclaveRequest,
    options?: coreHttp.OperationOptions
  ): Promise<AttestationAttestOpenEnclaveResponse> {
    return this.client.BaseClient().attestation.attestOpenEnclave(request, options);
  }

  /**
   * Processes an SGX enclave quote, producing an artifact. The type of artifact produced is dependent
   * upon attestation policy.
   * @param request Request object containing the quote
   * @param options The options parameters.
   */
  attestSgxEnclave(
    request: AttestSgxEnclaveRequest,
    options?: coreHttp.OperationOptions
  ): Promise<AttestationAttestSgxEnclaveResponse> {
    return this.client.BaseClient().attestation.attestSgxEnclave(request, options);
  }

  attestTpm(
    request: TpmAttestationRequest,
    options?: coreHttp.OperationOptions
  ): Promise<AttestationAttestTpmResponse> {
    return this.client.BaseClient().attestation.attestTpm(request, options);
  }
}
