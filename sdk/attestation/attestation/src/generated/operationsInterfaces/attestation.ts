/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  AttestOpenEnclaveRequest,
  AttestationAttestOpenEnclaveOptionalParams,
  AttestationAttestOpenEnclaveResponse,
  AttestSgxEnclaveRequest,
  AttestationAttestSgxEnclaveOptionalParams,
  AttestationAttestSgxEnclaveResponse,
  TpmAttestationRequest,
  AttestationAttestTpmOptionalParams,
  AttestationAttestTpmResponse
} from "../models";

/** Interface representing a Attestation. */
export interface Attestation {
  /**
   * Processes an OpenEnclave report , producing an artifact. The type of artifact produced is dependent
   * upon attestation policy.
   * @param request Request object containing the quote
   * @param options The options parameters.
   */
  attestOpenEnclave(
    request: AttestOpenEnclaveRequest,
    options?: AttestationAttestOpenEnclaveOptionalParams
  ): Promise<AttestationAttestOpenEnclaveResponse>;
  /**
   * Processes an SGX enclave quote, producing an artifact. The type of artifact produced is dependent
   * upon attestation policy.
   * @param request Request object containing the quote
   * @param options The options parameters.
   */
  attestSgxEnclave(
    request: AttestSgxEnclaveRequest,
    options?: AttestationAttestSgxEnclaveOptionalParams
  ): Promise<AttestationAttestSgxEnclaveResponse>;
  /**
   * Processes attestation evidence from a VBS enclave, producing an attestation result. The attestation
   * result produced is dependent upon the attestation policy.
   * @param request Request object
   * @param options The options parameters.
   */
  attestTpm(
    request: TpmAttestationRequest,
    options?: AttestationAttestTpmOptionalParams
  ): Promise<AttestationAttestTpmResponse>;
}
