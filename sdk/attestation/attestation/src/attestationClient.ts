/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import {
  Policy,
  PolicyCertificates,
  Attestation,
  SigningCertificates,
  MetadataConfiguration
} from "./operations";
import { AttestationClientContext } from "./attestationClientContext";
import { AzureAttestationRestClient } from "./_generated/azureAttestationRestClient"
import { AttestationClientOptionalParams } from "./models";
import { AttestationSigner } from "./models/attestationSigner";

export class AttestationClient extends AttestationClientContext {
  /**
   * Initializes a new instance of the AttestationClient class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param instanceUrl The attestation instance base URI, for example https://mytenant.attest.azure.net.
   * @param options The parameter options
   */
  constructor(
    credentials: coreHttp.TokenCredential | coreHttp.ServiceClientCredentials,
    instanceUrl: string,
    options?: AttestationClientOptionalParams
  ) {
    super(credentials, instanceUrl, options);

    this._client = new AzureAttestationRestClient(credentials, instanceUrl, options);
    this.instanceUrl = instanceUrl;

    // Legacy compatibility classes functions which will be removed eventually.
    this.policy = new Policy(this);
    this.policyCertificates = new PolicyCertificates(this);
    this.attestation = new Attestation(this);
    this.signingCertificates = new SigningCertificates(this);
    this.metadataConfiguration = new MetadataConfiguration(this);
  }

  public BaseClient() : AzureAttestationRestClient
  {
    return this._client;
  }

  public async get_attestation_signers() : Promise<AttestationSigner[]>
  {
    let signingCertificates = await this._client.signingCertificates.get()
    let signers:AttestationSigner[] = new Array();
    signingCertificates.keys?.forEach(element => {
      signers.push(new AttestationSigner(element));
    });

    return signers;
  }
  
  private _client: AzureAttestationRestClient;

  instanceUrl: string;

  policy: Policy;
  policyCertificates: PolicyCertificates;
  attestation: Attestation;
  signingCertificates: SigningCertificates;
  metadataConfiguration: MetadataConfiguration;
}
