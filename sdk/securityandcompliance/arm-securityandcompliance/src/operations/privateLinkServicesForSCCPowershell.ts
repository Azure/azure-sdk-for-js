/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/privateLinkServicesForSCCPowershellMappers";
import * as Parameters from "../models/parameters";
import { SecurityAndComplianceAPIsContext } from "../securityAndComplianceAPIsContext";

/** Class representing a PrivateLinkServicesForSCCPowershell. */
export class PrivateLinkServicesForSCCPowershell {
  private readonly client: SecurityAndComplianceAPIsContext;

  /**
   * Create a PrivateLinkServicesForSCCPowershell.
   * @param {SecurityAndComplianceAPIsContext} client Reference to the service client.
   */
  constructor(client: SecurityAndComplianceAPIsContext) {
    this.client = client;
  }

  /**
   * Get the metadata of a privateLinkServicesForSCCPowershell resource.
   * @param resourceGroupName The name of the resource group that contains the service instance.
   * @param resourceName The name of the service instance.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateLinkServicesForSCCPowershellGetResponse>
   */
  get(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateLinkServicesForSCCPowershellGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group that contains the service instance.
   * @param resourceName The name of the service instance.
   * @param callback The callback
   */
  get(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.PrivateLinkServicesForSCCPowershellDescription>): void;
  /**
   * @param resourceGroupName The name of the resource group that contains the service instance.
   * @param resourceName The name of the service instance.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateLinkServicesForSCCPowershellDescription>): void;
  get(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateLinkServicesForSCCPowershellDescription>, callback?: msRest.ServiceCallback<Models.PrivateLinkServicesForSCCPowershellDescription>): Promise<Models.PrivateLinkServicesForSCCPowershellGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        resourceName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.PrivateLinkServicesForSCCPowershellGetResponse>;
  }

  /**
   * Create or update the metadata of a privateLinkServicesForSCCPowershell instance.
   * @param resourceGroupName The name of the resource group that contains the service instance.
   * @param resourceName The name of the service instance.
   * @param privateLinkServicesForSCCPowershellDescription The service instance metadata.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateLinkServicesForSCCPowershellCreateOrUpdateResponse>
   */
  createOrUpdate(resourceGroupName: string, resourceName: string, privateLinkServicesForSCCPowershellDescription: Models.PrivateLinkServicesForSCCPowershellDescription, options?: msRest.RequestOptionsBase): Promise<Models.PrivateLinkServicesForSCCPowershellCreateOrUpdateResponse> {
    return this.beginCreateOrUpdate(resourceGroupName,resourceName,privateLinkServicesForSCCPowershellDescription,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.PrivateLinkServicesForSCCPowershellCreateOrUpdateResponse>;
  }

  /**
   * Update the metadata of a privateLinkServicesForSCCPowershell instance.
   * @param resourceGroupName The name of the resource group that contains the service instance.
   * @param resourceName The name of the service instance.
   * @param servicePatchDescription The service instance metadata and security metadata.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateLinkServicesForSCCPowershellUpdateResponse>
   */
  update(resourceGroupName: string, resourceName: string, servicePatchDescription: Models.ServicesPatchDescription, options?: msRest.RequestOptionsBase): Promise<Models.PrivateLinkServicesForSCCPowershellUpdateResponse> {
    return this.beginUpdate(resourceGroupName,resourceName,servicePatchDescription,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.PrivateLinkServicesForSCCPowershellUpdateResponse>;
  }

  /**
   * Delete a service instance.
   * @param resourceGroupName The name of the resource group that contains the service instance.
   * @param resourceName The name of the service instance.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {
    return this.beginDeleteMethod(resourceGroupName,resourceName,options)
      .then(lroPoller => lroPoller.pollUntilFinished());
  }

  /**
   * Get all the privateLinkServicesForSCCPowershell instances in a subscription.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateLinkServicesForSCCPowershellListResponse>
   */
  list(options?: msRest.RequestOptionsBase): Promise<Models.PrivateLinkServicesForSCCPowershellListResponse>;
  /**
   * @param callback The callback
   */
  list(callback: msRest.ServiceCallback<Models.PrivateLinkServicesForSCCPowershellDescriptionListResult>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateLinkServicesForSCCPowershellDescriptionListResult>): void;
  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateLinkServicesForSCCPowershellDescriptionListResult>, callback?: msRest.ServiceCallback<Models.PrivateLinkServicesForSCCPowershellDescriptionListResult>): Promise<Models.PrivateLinkServicesForSCCPowershellListResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listOperationSpec,
      callback) as Promise<Models.PrivateLinkServicesForSCCPowershellListResponse>;
  }

  /**
   * Get all the service instances in a resource group.
   * @param resourceGroupName The name of the resource group that contains the service instance.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateLinkServicesForSCCPowershellListByResourceGroupResponse>
   */
  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateLinkServicesForSCCPowershellListByResourceGroupResponse>;
  /**
   * @param resourceGroupName The name of the resource group that contains the service instance.
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.PrivateLinkServicesForSCCPowershellDescriptionListResult>): void;
  /**
   * @param resourceGroupName The name of the resource group that contains the service instance.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateLinkServicesForSCCPowershellDescriptionListResult>): void;
  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateLinkServicesForSCCPowershellDescriptionListResult>, callback?: msRest.ServiceCallback<Models.PrivateLinkServicesForSCCPowershellDescriptionListResult>): Promise<Models.PrivateLinkServicesForSCCPowershellListByResourceGroupResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        options
      },
      listByResourceGroupOperationSpec,
      callback) as Promise<Models.PrivateLinkServicesForSCCPowershellListByResourceGroupResponse>;
  }

  /**
   * Create or update the metadata of a privateLinkServicesForSCCPowershell instance.
   * @param resourceGroupName The name of the resource group that contains the service instance.
   * @param resourceName The name of the service instance.
   * @param privateLinkServicesForSCCPowershellDescription The service instance metadata.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginCreateOrUpdate(resourceGroupName: string, resourceName: string, privateLinkServicesForSCCPowershellDescription: Models.PrivateLinkServicesForSCCPowershellDescription, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        resourceName,
        privateLinkServicesForSCCPowershellDescription,
        options
      },
      beginCreateOrUpdateOperationSpec,
      options);
  }

  /**
   * Update the metadata of a privateLinkServicesForSCCPowershell instance.
   * @param resourceGroupName The name of the resource group that contains the service instance.
   * @param resourceName The name of the service instance.
   * @param servicePatchDescription The service instance metadata and security metadata.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginUpdate(resourceGroupName: string, resourceName: string, servicePatchDescription: Models.ServicesPatchDescription, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        resourceName,
        servicePatchDescription,
        options
      },
      beginUpdateOperationSpec,
      options);
  }

  /**
   * Delete a service instance.
   * @param resourceGroupName The name of the resource group that contains the service instance.
   * @param resourceName The name of the service instance.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeleteMethod(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        resourceName,
        options
      },
      beginDeleteMethodOperationSpec,
      options);
  }

  /**
   * Get all the privateLinkServicesForSCCPowershell instances in a subscription.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateLinkServicesForSCCPowershellListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateLinkServicesForSCCPowershellListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.PrivateLinkServicesForSCCPowershellDescriptionListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateLinkServicesForSCCPowershellDescriptionListResult>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateLinkServicesForSCCPowershellDescriptionListResult>, callback?: msRest.ServiceCallback<Models.PrivateLinkServicesForSCCPowershellDescriptionListResult>): Promise<Models.PrivateLinkServicesForSCCPowershellListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.PrivateLinkServicesForSCCPowershellListNextResponse>;
  }

  /**
   * Get all the service instances in a resource group.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateLinkServicesForSCCPowershellListByResourceGroupNextResponse>
   */
  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateLinkServicesForSCCPowershellListByResourceGroupNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.PrivateLinkServicesForSCCPowershellDescriptionListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateLinkServicesForSCCPowershellDescriptionListResult>): void;
  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateLinkServicesForSCCPowershellDescriptionListResult>, callback?: msRest.ServiceCallback<Models.PrivateLinkServicesForSCCPowershellDescriptionListResult>): Promise<Models.PrivateLinkServicesForSCCPowershellListByResourceGroupNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByResourceGroupNextOperationSpec,
      callback) as Promise<Models.PrivateLinkServicesForSCCPowershellListByResourceGroupNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityAndCompliance/privateLinkServicesForSCCPowershell/{resourceName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateLinkServicesForSCCPowershellDescription
    },
    default: {
      bodyMapper: Mappers.ErrorDetails
    }
  },
  serializer
};

const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.SecurityAndCompliance/privateLinkServicesForSCCPowershell",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateLinkServicesForSCCPowershellDescriptionListResult
    },
    default: {
      bodyMapper: Mappers.ErrorDetails
    }
  },
  serializer
};

const listByResourceGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityAndCompliance/privateLinkServicesForSCCPowershell",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateLinkServicesForSCCPowershellDescriptionListResult
    },
    default: {
      bodyMapper: Mappers.ErrorDetails
    }
  },
  serializer
};

const beginCreateOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityAndCompliance/privateLinkServicesForSCCPowershell/{resourceName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "privateLinkServicesForSCCPowershellDescription",
    mapper: {
      ...Mappers.PrivateLinkServicesForSCCPowershellDescription,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.PrivateLinkServicesForSCCPowershellDescription
    },
    201: {
      bodyMapper: Mappers.PrivateLinkServicesForSCCPowershellDescription
    },
    default: {
      bodyMapper: Mappers.ErrorDetails
    }
  },
  serializer
};

const beginUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityAndCompliance/privateLinkServicesForSCCPowershell/{resourceName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "servicePatchDescription",
    mapper: {
      ...Mappers.ServicesPatchDescription,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.PrivateLinkServicesForSCCPowershellDescription
    },
    202: {
      bodyMapper: Mappers.PrivateLinkServicesForSCCPowershellDescription
    },
    default: {
      bodyMapper: Mappers.ErrorDetails
    }
  },
  serializer
};

const beginDeleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityAndCompliance/privateLinkServicesForSCCPowershell/{resourceName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    202: {},
    204: {},
    default: {
      bodyMapper: Mappers.ErrorDetails
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateLinkServicesForSCCPowershellDescriptionListResult
    },
    default: {
      bodyMapper: Mappers.ErrorDetails
    }
  },
  serializer
};

const listByResourceGroupNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateLinkServicesForSCCPowershellDescriptionListResult
    },
    default: {
      bodyMapper: Mappers.ErrorDetails
    }
  },
  serializer
};
