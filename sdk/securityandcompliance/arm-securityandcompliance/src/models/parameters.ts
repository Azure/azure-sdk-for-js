/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter
} from "@azure/core-client";
import {
  PrivateLinkServicesForEDMUploadDescription as PrivateLinkServicesForEDMUploadDescriptionMapper,
  ServicesPatchDescription as ServicesPatchDescriptionMapper,
  PrivateEndpointConnection as PrivateEndpointConnectionMapper,
  PrivateLinkServicesForM365ComplianceCenterDescription as PrivateLinkServicesForM365ComplianceCenterDescriptionMapper,
  PrivateLinkServicesForM365SecurityCenterDescription as PrivateLinkServicesForM365SecurityCenterDescriptionMapper,
  PrivateLinkServicesForO365ManagementActivityAPIDescription as PrivateLinkServicesForO365ManagementActivityAPIDescriptionMapper,
  PrivateLinkServicesForSCCPowershellDescription as PrivateLinkServicesForSCCPowershellDescriptionMapper,
  PrivateLinkServicesForMIPPolicySyncDescription as PrivateLinkServicesForMIPPolicySyncDescriptionMapper
} from "../models/mappers";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2021-03-08",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const locationName: OperationURLParameter = {
  parameterPath: "locationName",
  mapper: {
    serializedName: "locationName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const operationResultId: OperationURLParameter = {
  parameterPath: "operationResultId",
  mapper: {
    serializedName: "operationResultId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const resourceGroupName: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[-\\w\\._\\(\\)]+$"),
      MaxLength: 90,
      MinLength: 1
    },
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const resourceName: OperationURLParameter = {
  parameterPath: "resourceName",
  mapper: {
    constraints: {
      MaxLength: 24,
      MinLength: 3
    },
    serializedName: "resourceName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const privateLinkServicesForEDMUploadDescription: OperationParameter = {
  parameterPath: "privateLinkServicesForEDMUploadDescription",
  mapper: PrivateLinkServicesForEDMUploadDescriptionMapper
};

export const servicePatchDescription: OperationParameter = {
  parameterPath: "servicePatchDescription",
  mapper: ServicesPatchDescriptionMapper
};

export const privateEndpointConnectionName: OperationURLParameter = {
  parameterPath: "privateEndpointConnectionName",
  mapper: {
    serializedName: "privateEndpointConnectionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const properties: OperationParameter = {
  parameterPath: "properties",
  mapper: PrivateEndpointConnectionMapper
};

export const groupName: OperationURLParameter = {
  parameterPath: "groupName",
  mapper: {
    serializedName: "groupName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const privateLinkServicesForM365ComplianceCenterDescription: OperationParameter = {
  parameterPath: "privateLinkServicesForM365ComplianceCenterDescription",
  mapper: PrivateLinkServicesForM365ComplianceCenterDescriptionMapper
};

export const privateLinkServicesForM365SecurityCenterDescription: OperationParameter = {
  parameterPath: "privateLinkServicesForM365SecurityCenterDescription",
  mapper: PrivateLinkServicesForM365SecurityCenterDescriptionMapper
};

export const privateLinkServicesForO365ManagementActivityAPIDescription: OperationParameter = {
  parameterPath: "privateLinkServicesForO365ManagementActivityAPIDescription",
  mapper: PrivateLinkServicesForO365ManagementActivityAPIDescriptionMapper
};

export const privateLinkServicesForSCCPowershellDescription: OperationParameter = {
  parameterPath: "privateLinkServicesForSCCPowershellDescription",
  mapper: PrivateLinkServicesForSCCPowershellDescriptionMapper
};

export const privateLinkServicesForMIPPolicySyncDescription: OperationParameter = {
  parameterPath: "privateLinkServicesForMIPPolicySyncDescription",
  mapper: PrivateLinkServicesForMIPPolicySyncDescriptionMapper
};
