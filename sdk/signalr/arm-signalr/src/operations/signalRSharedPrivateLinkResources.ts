/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/signalRSharedPrivateLinkResourcesMappers";
import * as Parameters from "../models/parameters";
import { SignalRManagementClientContext } from "../signalRManagementClientContext";

/** Class representing a SignalRSharedPrivateLinkResources. */
export class SignalRSharedPrivateLinkResources {
  private readonly client: SignalRManagementClientContext;

  /**
   * Create a SignalRSharedPrivateLinkResources.
   * @param {SignalRManagementClientContext} client Reference to the service client.
   */
  constructor(client: SignalRManagementClientContext) {
    this.client = client;
  }

  /**
   * List shared private link resources
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param resourceName The name of the resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.SignalRSharedPrivateLinkResourcesListResponse>
   */
  list(
    resourceGroupName: string,
    resourceName: string,
    options?: msRest.RequestOptionsBase
  ): Promise<Models.SignalRSharedPrivateLinkResourcesListResponse>;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param resourceName The name of the resource.
   * @param callback The callback
   */
  list(
    resourceGroupName: string,
    resourceName: string,
    callback: msRest.ServiceCallback<Models.SharedPrivateLinkResourceList>
  ): void;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param resourceName The name of the resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(
    resourceGroupName: string,
    resourceName: string,
    options: msRest.RequestOptionsBase,
    callback: msRest.ServiceCallback<Models.SharedPrivateLinkResourceList>
  ): void;
  list(
    resourceGroupName: string,
    resourceName: string,
    options?:
      | msRest.RequestOptionsBase
      | msRest.ServiceCallback<Models.SharedPrivateLinkResourceList>,
    callback?: msRest.ServiceCallback<Models.SharedPrivateLinkResourceList>
  ): Promise<Models.SignalRSharedPrivateLinkResourcesListResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        resourceName,
        options
      },
      listOperationSpec,
      callback
    ) as Promise<Models.SignalRSharedPrivateLinkResourcesListResponse>;
  }

  /**
   * Get the specified shared private link resource
   * @param sharedPrivateLinkResourceName The name of the shared private link resource
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param resourceName The name of the resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.SignalRSharedPrivateLinkResourcesGetResponse>
   */
  get(
    sharedPrivateLinkResourceName: string,
    resourceGroupName: string,
    resourceName: string,
    options?: msRest.RequestOptionsBase
  ): Promise<Models.SignalRSharedPrivateLinkResourcesGetResponse>;
  /**
   * @param sharedPrivateLinkResourceName The name of the shared private link resource
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param resourceName The name of the resource.
   * @param callback The callback
   */
  get(
    sharedPrivateLinkResourceName: string,
    resourceGroupName: string,
    resourceName: string,
    callback: msRest.ServiceCallback<Models.SharedPrivateLinkResource>
  ): void;
  /**
   * @param sharedPrivateLinkResourceName The name of the shared private link resource
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param resourceName The name of the resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(
    sharedPrivateLinkResourceName: string,
    resourceGroupName: string,
    resourceName: string,
    options: msRest.RequestOptionsBase,
    callback: msRest.ServiceCallback<Models.SharedPrivateLinkResource>
  ): void;
  get(
    sharedPrivateLinkResourceName: string,
    resourceGroupName: string,
    resourceName: string,
    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SharedPrivateLinkResource>,
    callback?: msRest.ServiceCallback<Models.SharedPrivateLinkResource>
  ): Promise<Models.SignalRSharedPrivateLinkResourcesGetResponse> {
    return this.client.sendOperationRequest(
      {
        sharedPrivateLinkResourceName,
        resourceGroupName,
        resourceName,
        options
      },
      getOperationSpec,
      callback
    ) as Promise<Models.SignalRSharedPrivateLinkResourcesGetResponse>;
  }

  /**
   * Create or update a shared private link resource
   * @param sharedPrivateLinkResourceName The name of the shared private link resource
   * @param parameters The shared private link resource
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param resourceName The name of the resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.SignalRSharedPrivateLinkResourcesCreateOrUpdateResponse>
   */
  createOrUpdate(
    sharedPrivateLinkResourceName: string,
    parameters: Models.SharedPrivateLinkResource,
    resourceGroupName: string,
    resourceName: string,
    options?: msRest.RequestOptionsBase
  ): Promise<Models.SignalRSharedPrivateLinkResourcesCreateOrUpdateResponse> {
    return this.beginCreateOrUpdate(
      sharedPrivateLinkResourceName,
      parameters,
      resourceGroupName,
      resourceName,
      options
    ).then((lroPoller) => lroPoller.pollUntilFinished()) as Promise<
      Models.SignalRSharedPrivateLinkResourcesCreateOrUpdateResponse
    >;
  }

  /**
   * Delete the specified shared private link resource
   * @param sharedPrivateLinkResourceName The name of the shared private link resource
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param resourceName The name of the resource.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(
    sharedPrivateLinkResourceName: string,
    resourceGroupName: string,
    resourceName: string,
    options?: msRest.RequestOptionsBase
  ): Promise<msRest.RestResponse> {
    return this.beginDeleteMethod(
      sharedPrivateLinkResourceName,
      resourceGroupName,
      resourceName,
      options
    ).then((lroPoller) => lroPoller.pollUntilFinished());
  }

  /**
   * Create or update a shared private link resource
   * @param sharedPrivateLinkResourceName The name of the shared private link resource
   * @param parameters The shared private link resource
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param resourceName The name of the resource.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginCreateOrUpdate(
    sharedPrivateLinkResourceName: string,
    parameters: Models.SharedPrivateLinkResource,
    resourceGroupName: string,
    resourceName: string,
    options?: msRest.RequestOptionsBase
  ): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        sharedPrivateLinkResourceName,
        parameters,
        resourceGroupName,
        resourceName,
        options
      },
      beginCreateOrUpdateOperationSpec,
      options
    );
  }

  /**
   * Delete the specified shared private link resource
   * @param sharedPrivateLinkResourceName The name of the shared private link resource
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param resourceName The name of the resource.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeleteMethod(
    sharedPrivateLinkResourceName: string,
    resourceGroupName: string,
    resourceName: string,
    options?: msRest.RequestOptionsBase
  ): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        sharedPrivateLinkResourceName,
        resourceGroupName,
        resourceName,
        options
      },
      beginDeleteMethodOperationSpec,
      options
    );
  }

  /**
   * List shared private link resources
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.SignalRSharedPrivateLinkResourcesListNextResponse>
   */
  listNext(
    nextPageLink: string,
    options?: msRest.RequestOptionsBase
  ): Promise<Models.SignalRSharedPrivateLinkResourcesListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(
    nextPageLink: string,
    callback: msRest.ServiceCallback<Models.SharedPrivateLinkResourceList>
  ): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(
    nextPageLink: string,
    options: msRest.RequestOptionsBase,
    callback: msRest.ServiceCallback<Models.SharedPrivateLinkResourceList>
  ): void;
  listNext(
    nextPageLink: string,
    options?:
      | msRest.RequestOptionsBase
      | msRest.ServiceCallback<Models.SharedPrivateLinkResourceList>,
    callback?: msRest.ServiceCallback<Models.SharedPrivateLinkResourceList>
  ): Promise<Models.SignalRSharedPrivateLinkResourcesListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback
    ) as Promise<Models.SignalRSharedPrivateLinkResourcesListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path:
    "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}/sharedPrivateLinkResources",
  urlParameters: [Parameters.subscriptionId, Parameters.resourceGroupName, Parameters.resourceName],
  queryParameters: [Parameters.apiVersion],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.SharedPrivateLinkResourceList
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path:
    "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}/sharedPrivateLinkResources/{sharedPrivateLinkResourceName}",
  urlParameters: [
    Parameters.sharedPrivateLinkResourceName,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceName
  ],
  queryParameters: [Parameters.apiVersion],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.SharedPrivateLinkResource
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const beginCreateOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path:
    "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}/sharedPrivateLinkResources/{sharedPrivateLinkResourceName}",
  urlParameters: [
    Parameters.sharedPrivateLinkResourceName,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceName
  ],
  queryParameters: [Parameters.apiVersion],
  headerParameters: [Parameters.acceptLanguage],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.SharedPrivateLinkResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.SharedPrivateLinkResource
    },
    201: {
      bodyMapper: Mappers.SharedPrivateLinkResource
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const beginDeleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path:
    "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}/sharedPrivateLinkResources/{sharedPrivateLinkResourceName}",
  urlParameters: [
    Parameters.sharedPrivateLinkResourceName,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceName
  ],
  queryParameters: [Parameters.apiVersion],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {},
    202: {},
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [Parameters.nextPageLink],
  queryParameters: [Parameters.apiVersion],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.SharedPrivateLinkResourceList
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
