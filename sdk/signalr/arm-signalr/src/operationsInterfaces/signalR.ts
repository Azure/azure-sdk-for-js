/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  SignalRResource,
  SignalRListBySubscriptionOptionalParams,
  SignalRListByResourceGroupOptionalParams,
  NameAvailabilityParameters,
  SignalRCheckNameAvailabilityOptionalParams,
  SignalRCheckNameAvailabilityResponse,
  SignalRGetOptionalParams,
  SignalRGetResponse,
  SignalRCreateOrUpdateOptionalParams,
  SignalRCreateOrUpdateResponse,
  SignalRDeleteOptionalParams,
  SignalRUpdateOptionalParams,
  SignalRUpdateResponse,
  SignalRListKeysOptionalParams,
  SignalRListKeysResponse,
  RegenerateKeyParameters,
  SignalRRegenerateKeyOptionalParams,
  SignalRRegenerateKeyResponse,
  SignalRRestartOptionalParams,
  SignalRListSkusOptionalParams,
  SignalRListSkusResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SignalR. */
export interface SignalR {
  /**
   * Handles requests to list all resources in a subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: SignalRListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<SignalRResource>;
  /**
   * Handles requests to list all resources in a resource group.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: SignalRListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<SignalRResource>;
  /**
   * Checks that the resource name is valid and is not already in use.
   * @param location the region
   * @param parameters Parameters supplied to the operation.
   * @param options The options parameters.
   */
  checkNameAvailability(
    location: string,
    parameters: NameAvailabilityParameters,
    options?: SignalRCheckNameAvailabilityOptionalParams
  ): Promise<SignalRCheckNameAvailabilityResponse>;
  /**
   * Get the resource and its properties.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param resourceName The name of the resource.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    resourceName: string,
    options?: SignalRGetOptionalParams
  ): Promise<SignalRGetResponse>;
  /**
   * Create or update a resource.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param resourceName The name of the resource.
   * @param parameters Parameters for the create or update operation
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    resourceName: string,
    parameters: SignalRResource,
    options?: SignalRCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<SignalRCreateOrUpdateResponse>,
      SignalRCreateOrUpdateResponse
    >
  >;
  /**
   * Create or update a resource.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param resourceName The name of the resource.
   * @param parameters Parameters for the create or update operation
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    resourceName: string,
    parameters: SignalRResource,
    options?: SignalRCreateOrUpdateOptionalParams
  ): Promise<SignalRCreateOrUpdateResponse>;
  /**
   * Operation to delete a resource.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param resourceName The name of the resource.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    resourceName: string,
    options?: SignalRDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Operation to delete a resource.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param resourceName The name of the resource.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    resourceName: string,
    options?: SignalRDeleteOptionalParams
  ): Promise<void>;
  /**
   * Operation to update an exiting resource.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param resourceName The name of the resource.
   * @param parameters Parameters for the update operation
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    resourceName: string,
    parameters: SignalRResource,
    options?: SignalRUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<SignalRUpdateResponse>,
      SignalRUpdateResponse
    >
  >;
  /**
   * Operation to update an exiting resource.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param resourceName The name of the resource.
   * @param parameters Parameters for the update operation
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    resourceName: string,
    parameters: SignalRResource,
    options?: SignalRUpdateOptionalParams
  ): Promise<SignalRUpdateResponse>;
  /**
   * Get the access keys of the resource.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param resourceName The name of the resource.
   * @param options The options parameters.
   */
  listKeys(
    resourceGroupName: string,
    resourceName: string,
    options?: SignalRListKeysOptionalParams
  ): Promise<SignalRListKeysResponse>;
  /**
   * Regenerate the access key for the resource. PrimaryKey and SecondaryKey cannot be regenerated at the
   * same time.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param resourceName The name of the resource.
   * @param parameters Parameter that describes the Regenerate Key Operation.
   * @param options The options parameters.
   */
  beginRegenerateKey(
    resourceGroupName: string,
    resourceName: string,
    parameters: RegenerateKeyParameters,
    options?: SignalRRegenerateKeyOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<SignalRRegenerateKeyResponse>,
      SignalRRegenerateKeyResponse
    >
  >;
  /**
   * Regenerate the access key for the resource. PrimaryKey and SecondaryKey cannot be regenerated at the
   * same time.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param resourceName The name of the resource.
   * @param parameters Parameter that describes the Regenerate Key Operation.
   * @param options The options parameters.
   */
  beginRegenerateKeyAndWait(
    resourceGroupName: string,
    resourceName: string,
    parameters: RegenerateKeyParameters,
    options?: SignalRRegenerateKeyOptionalParams
  ): Promise<SignalRRegenerateKeyResponse>;
  /**
   * Operation to restart a resource.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param resourceName The name of the resource.
   * @param options The options parameters.
   */
  beginRestart(
    resourceGroupName: string,
    resourceName: string,
    options?: SignalRRestartOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Operation to restart a resource.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param resourceName The name of the resource.
   * @param options The options parameters.
   */
  beginRestartAndWait(
    resourceGroupName: string,
    resourceName: string,
    options?: SignalRRestartOptionalParams
  ): Promise<void>;
  /**
   * List all available skus of the resource.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param resourceName The name of the resource.
   * @param options The options parameters.
   */
  listSkus(
    resourceGroupName: string,
    resourceName: string,
    options?: SignalRListSkusOptionalParams
  ): Promise<SignalRListSkusResponse>;
}
