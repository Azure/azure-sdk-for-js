/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreAuth from "@azure/core-auth";
import {
  SolutionsImpl,
  ManagementAssociationsImpl,
  ManagementConfigurationsImpl,
  OperationsImpl
} from "./operations";
import {
  Solutions,
  ManagementAssociations,
  ManagementConfigurations,
  Operations
} from "./operationsInterfaces";
import { OperationsManagementClientContext } from "./operationsManagementClientContext";
import { OperationsManagementClientOptionalParams } from "./models";

export class OperationsManagementClient extends OperationsManagementClientContext {
  /**
   * Initializes a new instance of the OperationsManagementClient class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure
   *                       subscription. The subscription ID forms part of the URI for every service call.
   * @param providerName Provider name for the parent resource.
   * @param resourceType Resource type for the parent resource
   * @param resourceName Parent resource name.
   * @param options The parameter options
   */
  constructor(
    credentials: coreAuth.TokenCredential,
    subscriptionId: string,
    providerName: string,
    resourceType: string,
    resourceName: string,
    options?: OperationsManagementClientOptionalParams
  ) {
    super(
      credentials,
      subscriptionId,
      providerName,
      resourceType,
      resourceName,
      options
    );
    this.solutions = new SolutionsImpl(this);
    this.managementAssociations = new ManagementAssociationsImpl(this);
    this.managementConfigurations = new ManagementConfigurationsImpl(this);
    this.operations = new OperationsImpl(this);
  }

  solutions: Solutions;
  managementAssociations: ManagementAssociations;
  managementConfigurations: ManagementConfigurations;
  operations: Operations;
}
