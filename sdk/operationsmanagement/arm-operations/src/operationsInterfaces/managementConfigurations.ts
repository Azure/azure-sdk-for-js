/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  ManagementConfigurationsListBySubscriptionOptionalParams,
  ManagementConfigurationsListBySubscriptionResponse,
  ManagementConfiguration,
  ManagementConfigurationsCreateOrUpdateOptionalParams,
  ManagementConfigurationsCreateOrUpdateResponse,
  ManagementConfigurationsDeleteOptionalParams,
  ManagementConfigurationsGetOptionalParams,
  ManagementConfigurationsGetResponse
} from "../models";

/** Interface representing a ManagementConfigurations. */
export interface ManagementConfigurations {
  /**
   * Retrieves the ManagementConfigurations list.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: ManagementConfigurationsListBySubscriptionOptionalParams
  ): Promise<ManagementConfigurationsListBySubscriptionResponse>;
  /**
   * Creates or updates the ManagementConfiguration.
   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.
   * @param managementConfigurationName User Management Configuration Name.
   * @param parameters The parameters required to create OMS Solution.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    managementConfigurationName: string,
    parameters: ManagementConfiguration,
    options?: ManagementConfigurationsCreateOrUpdateOptionalParams
  ): Promise<ManagementConfigurationsCreateOrUpdateResponse>;
  /**
   * Deletes the ManagementConfiguration in the subscription.
   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.
   * @param managementConfigurationName User Management Configuration Name.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    managementConfigurationName: string,
    options?: ManagementConfigurationsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Retrieves the user ManagementConfiguration.
   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.
   * @param managementConfigurationName User Management Configuration Name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    managementConfigurationName: string,
    options?: ManagementConfigurationsGetOptionalParams
  ): Promise<ManagementConfigurationsGetResponse>;
}
