/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { ScheduledEvent } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { MaintenanceManagementClient } from "../maintenanceManagementClient";
import {
  ScheduledEventAcknowledgeOptionalParams,
  ScheduledEventAcknowledgeResponse,
} from "../models";

/** Class containing ScheduledEvent operations. */
export class ScheduledEventImpl implements ScheduledEvent {
  private readonly client: MaintenanceManagementClient;

  /**
   * Initialize a new instance of the class ScheduledEvent class.
   * @param client Reference to the service client
   */
  constructor(client: MaintenanceManagementClient) {
    this.client = client;
  }

  /**
   * Post Scheduled Event Acknowledgement
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceType Resource type
   * @param resourceName Resource Name
   * @param scheduledEventId Scheduled Event Id. This is a GUID-formatted string (e.g.
   *                         00000000-0000-0000-0000-000000000000)
   * @param options The options parameters.
   */
  acknowledge(
    resourceGroupName: string,
    resourceType: string,
    resourceName: string,
    scheduledEventId: string,
    options?: ScheduledEventAcknowledgeOptionalParams,
  ): Promise<ScheduledEventAcknowledgeResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        resourceType,
        resourceName,
        scheduledEventId,
        options,
      },
      acknowledgeOperationSpec,
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const acknowledgeOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Compute/{resourceType}/{resourceName}/providers/Microsoft.Maintenance/scheduledevents/{scheduledEventId}/acknowledge",
  httpMethod: "POST",
  responses: {
    200: {
      bodyMapper: Mappers.ScheduledEventApproveResponse,
    },
    default: {
      bodyMapper: Mappers.MaintenanceError,
    },
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceType,
    Parameters.resourceName,
    Parameters.scheduledEventId,
  ],
  headerParameters: [Parameters.accept],
  serializer,
};
