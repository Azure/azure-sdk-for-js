/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter,
} from "@azure/core-client";
import {
  ApplyUpdate as ApplyUpdateMapper,
  ConfigurationAssignment as ConfigurationAssignmentMapper,
  MaintenanceConfiguration as MaintenanceConfigurationMapper,
} from "../models/mappers";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String",
    },
  },
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "Uuid",
    },
  },
};

export const resourceGroupName: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    constraints: {
      MaxLength: 90,
      MinLength: 1,
    },
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resourceType: OperationURLParameter = {
  parameterPath: "resourceType",
  mapper: {
    serializedName: "resourceType",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resourceName: OperationURLParameter = {
  parameterPath: "resourceName",
  mapper: {
    serializedName: "resourceName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const scheduledEventId: OperationURLParameter = {
  parameterPath: "scheduledEventId",
  mapper: {
    serializedName: "scheduledEventId",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2023-10-01-preview",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String",
    },
  },
};

export const resourceGroupName1: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const providerName: OperationURLParameter = {
  parameterPath: "providerName",
  mapper: {
    serializedName: "providerName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resourceParentType: OperationURLParameter = {
  parameterPath: "resourceParentType",
  mapper: {
    serializedName: "resourceParentType",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resourceParentName: OperationURLParameter = {
  parameterPath: "resourceParentName",
  mapper: {
    serializedName: "resourceParentName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const applyUpdateName: OperationURLParameter = {
  parameterPath: "applyUpdateName",
  mapper: {
    serializedName: "applyUpdateName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String",
    },
  },
};

export const applyUpdate: OperationParameter = {
  parameterPath: "applyUpdate",
  mapper: ApplyUpdateMapper,
};

export const configurationAssignmentName: OperationURLParameter = {
  parameterPath: "configurationAssignmentName",
  mapper: {
    serializedName: "configurationAssignmentName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const configurationAssignment: OperationParameter = {
  parameterPath: "configurationAssignment",
  mapper: ConfigurationAssignmentMapper,
};

export const configuration: OperationParameter = {
  parameterPath: "configuration",
  mapper: MaintenanceConfigurationMapper,
};

export const configurationAssignmentName1: OperationURLParameter = {
  parameterPath: "configurationAssignmentName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^.+$"),
    },
    serializedName: "configurationAssignmentName",
    required: true,
    type: {
      name: "String",
    },
  },
};
