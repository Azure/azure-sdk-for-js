/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  MaintenanceConfiguration,
  MaintenanceConfigurationsListOptionalParams,
  MaintenanceConfigurationsGetOptionalParams,
  MaintenanceConfigurationsGetResponse,
  MaintenanceConfigurationsCreateOrUpdateOptionalParams,
  MaintenanceConfigurationsCreateOrUpdateResponse,
  MaintenanceConfigurationsDeleteOptionalParams,
  MaintenanceConfigurationsDeleteResponse,
  MaintenanceConfigurationsUpdateOptionalParams,
  MaintenanceConfigurationsUpdateResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a MaintenanceConfigurations. */
export interface MaintenanceConfigurations {
  /**
   * Get Configuration records within a subscription
   * @param options The options parameters.
   */
  list(
    options?: MaintenanceConfigurationsListOptionalParams,
  ): PagedAsyncIterableIterator<MaintenanceConfiguration>;
  /**
   * Get Configuration record
   * @param resourceGroupName Resource Group Name
   * @param resourceName Maintenance Configuration Name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    resourceName: string,
    options?: MaintenanceConfigurationsGetOptionalParams,
  ): Promise<MaintenanceConfigurationsGetResponse>;
  /**
   * Create or Update configuration record
   * @param resourceGroupName Resource Group Name
   * @param resourceName Maintenance Configuration Name
   * @param configuration The configuration
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    resourceName: string,
    configuration: MaintenanceConfiguration,
    options?: MaintenanceConfigurationsCreateOrUpdateOptionalParams,
  ): Promise<MaintenanceConfigurationsCreateOrUpdateResponse>;
  /**
   * Delete Configuration record
   * @param resourceGroupName Resource Group Name
   * @param resourceName Maintenance Configuration Name
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    resourceName: string,
    options?: MaintenanceConfigurationsDeleteOptionalParams,
  ): Promise<MaintenanceConfigurationsDeleteResponse>;
  /**
   * Patch configuration record
   * @param resourceGroupName Resource Group Name
   * @param resourceName Maintenance Configuration Name
   * @param configuration The configuration
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    resourceName: string,
    configuration: MaintenanceConfiguration,
    options?: MaintenanceConfigurationsUpdateOptionalParams,
  ): Promise<MaintenanceConfigurationsUpdateResponse>;
}
