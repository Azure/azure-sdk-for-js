/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ConfigurationAssignment,
  ConfigurationAssignmentsListParentOptionalParams,
  ConfigurationAssignmentsListOptionalParams,
  ConfigurationAssignmentsGetParentOptionalParams,
  ConfigurationAssignmentsGetParentResponse,
  ConfigurationAssignmentsCreateOrUpdateParentOptionalParams,
  ConfigurationAssignmentsCreateOrUpdateParentResponse,
  ConfigurationAssignmentsDeleteParentOptionalParams,
  ConfigurationAssignmentsDeleteParentResponse,
  ConfigurationAssignmentsGetOptionalParams,
  ConfigurationAssignmentsGetResponse,
  ConfigurationAssignmentsCreateOrUpdateOptionalParams,
  ConfigurationAssignmentsCreateOrUpdateResponse,
  ConfigurationAssignmentsDeleteOptionalParams,
  ConfigurationAssignmentsDeleteResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ConfigurationAssignments. */
export interface ConfigurationAssignments {
  /**
   * List configurationAssignments for resource.
   * @param resourceGroupName Resource group name
   * @param providerName Resource provider name
   * @param resourceParentType Resource parent type
   * @param resourceParentName Resource parent identifier
   * @param resourceType Resource type
   * @param resourceName Resource identifier
   * @param options The options parameters.
   */
  listParent(
    resourceGroupName: string,
    providerName: string,
    resourceParentType: string,
    resourceParentName: string,
    resourceType: string,
    resourceName: string,
    options?: ConfigurationAssignmentsListParentOptionalParams
  ): PagedAsyncIterableIterator<ConfigurationAssignment>;
  /**
   * List configurationAssignments for resource.
   * @param resourceGroupName Resource group name
   * @param providerName Resource provider name
   * @param resourceType Resource type
   * @param resourceName Resource identifier
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    providerName: string,
    resourceType: string,
    resourceName: string,
    options?: ConfigurationAssignmentsListOptionalParams
  ): PagedAsyncIterableIterator<ConfigurationAssignment>;
  /**
   * Get configuration assignment for resource..
   * @param resourceGroupName Resource group name
   * @param providerName Resource provider name
   * @param resourceParentType Resource parent type
   * @param resourceParentName Resource parent identifier
   * @param resourceType Resource type
   * @param resourceName Resource identifier
   * @param configurationAssignmentName Configuration assignment name
   * @param options The options parameters.
   */
  getParent(
    resourceGroupName: string,
    providerName: string,
    resourceParentType: string,
    resourceParentName: string,
    resourceType: string,
    resourceName: string,
    configurationAssignmentName: string,
    options?: ConfigurationAssignmentsGetParentOptionalParams
  ): Promise<ConfigurationAssignmentsGetParentResponse>;
  /**
   * Register configuration for resource.
   * @param resourceGroupName Resource group name
   * @param providerName Resource provider name
   * @param resourceParentType Resource parent type
   * @param resourceParentName Resource parent identifier
   * @param resourceType Resource type
   * @param resourceName Resource identifier
   * @param configurationAssignmentName Configuration assignment name
   * @param configurationAssignment The configurationAssignment
   * @param options The options parameters.
   */
  createOrUpdateParent(
    resourceGroupName: string,
    providerName: string,
    resourceParentType: string,
    resourceParentName: string,
    resourceType: string,
    resourceName: string,
    configurationAssignmentName: string,
    configurationAssignment: ConfigurationAssignment,
    options?: ConfigurationAssignmentsCreateOrUpdateParentOptionalParams
  ): Promise<ConfigurationAssignmentsCreateOrUpdateParentResponse>;
  /**
   * Unregister configuration for resource.
   * @param resourceGroupName Resource group name
   * @param providerName Resource provider name
   * @param resourceParentType Resource parent type
   * @param resourceParentName Resource parent identifier
   * @param resourceType Resource type
   * @param resourceName Resource identifier
   * @param configurationAssignmentName Unique configuration assignment name
   * @param options The options parameters.
   */
  deleteParent(
    resourceGroupName: string,
    providerName: string,
    resourceParentType: string,
    resourceParentName: string,
    resourceType: string,
    resourceName: string,
    configurationAssignmentName: string,
    options?: ConfigurationAssignmentsDeleteParentOptionalParams
  ): Promise<ConfigurationAssignmentsDeleteParentResponse>;
  /**
   * Get configuration assignment for resource..
   * @param resourceGroupName Resource group name
   * @param providerName Resource provider name
   * @param resourceType Resource type
   * @param resourceName Resource identifier
   * @param configurationAssignmentName Configuration assignment name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    providerName: string,
    resourceType: string,
    resourceName: string,
    configurationAssignmentName: string,
    options?: ConfigurationAssignmentsGetOptionalParams
  ): Promise<ConfigurationAssignmentsGetResponse>;
  /**
   * Register configuration for resource.
   * @param resourceGroupName Resource group name
   * @param providerName Resource provider name
   * @param resourceType Resource type
   * @param resourceName Resource identifier
   * @param configurationAssignmentName Configuration assignment name
   * @param configurationAssignment The configurationAssignment
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    providerName: string,
    resourceType: string,
    resourceName: string,
    configurationAssignmentName: string,
    configurationAssignment: ConfigurationAssignment,
    options?: ConfigurationAssignmentsCreateOrUpdateOptionalParams
  ): Promise<ConfigurationAssignmentsCreateOrUpdateResponse>;
  /**
   * Unregister configuration for resource.
   * @param resourceGroupName Resource group name
   * @param providerName Resource provider name
   * @param resourceType Resource type
   * @param resourceName Resource identifier
   * @param configurationAssignmentName Unique configuration assignment name
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    providerName: string,
    resourceType: string,
    resourceName: string,
    configurationAssignmentName: string,
    options?: ConfigurationAssignmentsDeleteOptionalParams
  ): Promise<ConfigurationAssignmentsDeleteResponse>;
}
