/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Job,
  JobsListOptionalParams,
  JobsGetOptionalParams,
  JobsGetResponse,
  JobsCreateOptionalParams,
  JobsCreateResponse,
  JobsDeleteOptionalParams,
  JobsUpdateOptionalParams,
  JobsUpdateResponse,
  JobsCancelJobOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Jobs. */
export interface Jobs {
  /**
   * Lists all of the Jobs for the Transform.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param transformName The Transform name.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    accountName: string,
    transformName: string,
    options?: JobsListOptionalParams
  ): PagedAsyncIterableIterator<Job>;
  /**
   * Gets a Job.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param transformName The Transform name.
   * @param jobName The Job name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    transformName: string,
    jobName: string,
    options?: JobsGetOptionalParams
  ): Promise<JobsGetResponse>;
  /**
   * Creates a Job.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param transformName The Transform name.
   * @param jobName The Job name.
   * @param parameters The request parameters
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    accountName: string,
    transformName: string,
    jobName: string,
    parameters: Job,
    options?: JobsCreateOptionalParams
  ): Promise<JobsCreateResponse>;
  /**
   * Deletes a Job.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param transformName The Transform name.
   * @param jobName The Job name.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    accountName: string,
    transformName: string,
    jobName: string,
    options?: JobsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Update is only supported for description and priority. Updating Priority will take effect when the
   * Job state is Queued or Scheduled and depending on the timing the priority update may be ignored.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param transformName The Transform name.
   * @param jobName The Job name.
   * @param parameters The request parameters
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    accountName: string,
    transformName: string,
    jobName: string,
    parameters: Job,
    options?: JobsUpdateOptionalParams
  ): Promise<JobsUpdateResponse>;
  /**
   * Cancel a Job.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param transformName The Transform name.
   * @param jobName The Job name.
   * @param options The options parameters.
   */
  cancelJob(
    resourceGroupName: string,
    accountName: string,
    transformName: string,
    jobName: string,
    options?: JobsCancelJobOptionalParams
  ): Promise<void>;
}
