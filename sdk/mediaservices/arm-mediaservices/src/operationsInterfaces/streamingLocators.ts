/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  StreamingLocator,
  StreamingLocatorsListOptionalParams,
  StreamingLocatorsGetOptionalParams,
  StreamingLocatorsGetResponse,
  StreamingLocatorsCreateOptionalParams,
  StreamingLocatorsCreateResponse,
  StreamingLocatorsDeleteOptionalParams,
  StreamingLocatorsListContentKeysOptionalParams,
  StreamingLocatorsListContentKeysResponse,
  StreamingLocatorsListPathsOptionalParams,
  StreamingLocatorsListPathsResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a StreamingLocators. */
export interface StreamingLocators {
  /**
   * Lists the Streaming Locators in the account
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    accountName: string,
    options?: StreamingLocatorsListOptionalParams
  ): PagedAsyncIterableIterator<StreamingLocator>;
  /**
   * Get the details of a Streaming Locator in the Media Services account
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param streamingLocatorName The Streaming Locator name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    streamingLocatorName: string,
    options?: StreamingLocatorsGetOptionalParams
  ): Promise<StreamingLocatorsGetResponse>;
  /**
   * Create a Streaming Locator in the Media Services account
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param streamingLocatorName The Streaming Locator name.
   * @param parameters The request parameters
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    accountName: string,
    streamingLocatorName: string,
    parameters: StreamingLocator,
    options?: StreamingLocatorsCreateOptionalParams
  ): Promise<StreamingLocatorsCreateResponse>;
  /**
   * Deletes a Streaming Locator in the Media Services account
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param streamingLocatorName The Streaming Locator name.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    accountName: string,
    streamingLocatorName: string,
    options?: StreamingLocatorsDeleteOptionalParams
  ): Promise<void>;
  /**
   * List Content Keys used by this Streaming Locator
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param streamingLocatorName The Streaming Locator name.
   * @param options The options parameters.
   */
  listContentKeys(
    resourceGroupName: string,
    accountName: string,
    streamingLocatorName: string,
    options?: StreamingLocatorsListContentKeysOptionalParams
  ): Promise<StreamingLocatorsListContentKeysResponse>;
  /**
   * List Paths supported by this Streaming Locator
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param streamingLocatorName The Streaming Locator name.
   * @param options The options parameters.
   */
  listPaths(
    resourceGroupName: string,
    accountName: string,
    streamingLocatorName: string,
    options?: StreamingLocatorsListPathsOptionalParams
  ): Promise<StreamingLocatorsListPathsResponse>;
}
