/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  StreamingPolicy,
  StreamingPoliciesListOptionalParams,
  StreamingPoliciesGetOptionalParams,
  StreamingPoliciesGetResponse,
  StreamingPoliciesCreateOptionalParams,
  StreamingPoliciesCreateResponse,
  StreamingPoliciesDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a StreamingPolicies. */
export interface StreamingPolicies {
  /**
   * Lists the Streaming Policies in the account
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    accountName: string,
    options?: StreamingPoliciesListOptionalParams
  ): PagedAsyncIterableIterator<StreamingPolicy>;
  /**
   * Get the details of a Streaming Policy in the Media Services account
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param streamingPolicyName The Streaming Policy name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    streamingPolicyName: string,
    options?: StreamingPoliciesGetOptionalParams
  ): Promise<StreamingPoliciesGetResponse>;
  /**
   * Create a Streaming Policy in the Media Services account
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param streamingPolicyName The Streaming Policy name.
   * @param parameters The request parameters
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    accountName: string,
    streamingPolicyName: string,
    parameters: StreamingPolicy,
    options?: StreamingPoliciesCreateOptionalParams
  ): Promise<StreamingPoliciesCreateResponse>;
  /**
   * Deletes a Streaming Policy in the Media Services account
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param streamingPolicyName The Streaming Policy name.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    accountName: string,
    streamingPolicyName: string,
    options?: StreamingPoliciesDeleteOptionalParams
  ): Promise<void>;
}
