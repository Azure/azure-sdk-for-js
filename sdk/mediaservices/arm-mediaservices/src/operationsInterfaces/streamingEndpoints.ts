/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  StreamingEndpoint,
  StreamingEndpointsListOptionalParams,
  StreamingEndpointsGetOptionalParams,
  StreamingEndpointsGetResponse,
  StreamingEndpointsCreateOptionalParams,
  StreamingEndpointsCreateResponse,
  StreamingEndpointsUpdateOptionalParams,
  StreamingEndpointsUpdateResponse,
  StreamingEndpointsDeleteOptionalParams,
  StreamingEndpointsSkusOptionalParams,
  StreamingEndpointsSkusResponse,
  StreamingEndpointsStartOptionalParams,
  StreamingEndpointsStopOptionalParams,
  StreamingEntityScaleUnit,
  StreamingEndpointsScaleOptionalParams,
  StreamingEndpointsAsyncOperationOptionalParams,
  StreamingEndpointsAsyncOperationResponse,
  StreamingEndpointsOperationLocationOptionalParams,
  StreamingEndpointsOperationLocationResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a StreamingEndpoints. */
export interface StreamingEndpoints {
  /**
   * Lists the streaming endpoints in the account.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    accountName: string,
    options?: StreamingEndpointsListOptionalParams
  ): PagedAsyncIterableIterator<StreamingEndpoint>;
  /**
   * Gets a streaming endpoint.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    streamingEndpointName: string,
    options?: StreamingEndpointsGetOptionalParams
  ): Promise<StreamingEndpointsGetResponse>;
  /**
   * Creates a streaming endpoint.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
   * @param parameters Streaming endpoint properties needed for creation.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    accountName: string,
    streamingEndpointName: string,
    parameters: StreamingEndpoint,
    options?: StreamingEndpointsCreateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<StreamingEndpointsCreateResponse>,
      StreamingEndpointsCreateResponse
    >
  >;
  /**
   * Creates a streaming endpoint.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
   * @param parameters Streaming endpoint properties needed for creation.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    accountName: string,
    streamingEndpointName: string,
    parameters: StreamingEndpoint,
    options?: StreamingEndpointsCreateOptionalParams
  ): Promise<StreamingEndpointsCreateResponse>;
  /**
   * Updates a existing streaming endpoint.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
   * @param parameters Streaming endpoint properties needed for creation.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    accountName: string,
    streamingEndpointName: string,
    parameters: StreamingEndpoint,
    options?: StreamingEndpointsUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<StreamingEndpointsUpdateResponse>,
      StreamingEndpointsUpdateResponse
    >
  >;
  /**
   * Updates a existing streaming endpoint.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
   * @param parameters Streaming endpoint properties needed for creation.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    accountName: string,
    streamingEndpointName: string,
    parameters: StreamingEndpoint,
    options?: StreamingEndpointsUpdateOptionalParams
  ): Promise<StreamingEndpointsUpdateResponse>;
  /**
   * Deletes a streaming endpoint.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    accountName: string,
    streamingEndpointName: string,
    options?: StreamingEndpointsDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Deletes a streaming endpoint.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    accountName: string,
    streamingEndpointName: string,
    options?: StreamingEndpointsDeleteOptionalParams
  ): Promise<void>;
  /**
   * List streaming endpoint supported skus.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
   * @param options The options parameters.
   */
  skus(
    resourceGroupName: string,
    accountName: string,
    streamingEndpointName: string,
    options?: StreamingEndpointsSkusOptionalParams
  ): Promise<StreamingEndpointsSkusResponse>;
  /**
   * Starts an existing streaming endpoint.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
   * @param options The options parameters.
   */
  beginStart(
    resourceGroupName: string,
    accountName: string,
    streamingEndpointName: string,
    options?: StreamingEndpointsStartOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Starts an existing streaming endpoint.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
   * @param options The options parameters.
   */
  beginStartAndWait(
    resourceGroupName: string,
    accountName: string,
    streamingEndpointName: string,
    options?: StreamingEndpointsStartOptionalParams
  ): Promise<void>;
  /**
   * Stops an existing streaming endpoint.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
   * @param options The options parameters.
   */
  beginStop(
    resourceGroupName: string,
    accountName: string,
    streamingEndpointName: string,
    options?: StreamingEndpointsStopOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Stops an existing streaming endpoint.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
   * @param options The options parameters.
   */
  beginStopAndWait(
    resourceGroupName: string,
    accountName: string,
    streamingEndpointName: string,
    options?: StreamingEndpointsStopOptionalParams
  ): Promise<void>;
  /**
   * Scales an existing streaming endpoint.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
   * @param parameters Streaming endpoint scale parameters
   * @param options The options parameters.
   */
  beginScale(
    resourceGroupName: string,
    accountName: string,
    streamingEndpointName: string,
    parameters: StreamingEntityScaleUnit,
    options?: StreamingEndpointsScaleOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Scales an existing streaming endpoint.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
   * @param parameters Streaming endpoint scale parameters
   * @param options The options parameters.
   */
  beginScaleAndWait(
    resourceGroupName: string,
    accountName: string,
    streamingEndpointName: string,
    parameters: StreamingEntityScaleUnit,
    options?: StreamingEndpointsScaleOptionalParams
  ): Promise<void>;
  /**
   * Get a streaming endpoint operation status.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param operationId The ID of an ongoing async operation.
   * @param options The options parameters.
   */
  asyncOperation(
    resourceGroupName: string,
    accountName: string,
    operationId: string,
    options?: StreamingEndpointsAsyncOperationOptionalParams
  ): Promise<StreamingEndpointsAsyncOperationResponse>;
  /**
   * Get a streaming endpoint operation status.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
   * @param operationId The ID of an ongoing async operation.
   * @param options The options parameters.
   */
  operationLocation(
    resourceGroupName: string,
    accountName: string,
    streamingEndpointName: string,
    operationId: string,
    options?: StreamingEndpointsOperationLocationOptionalParams
  ): Promise<StreamingEndpointsOperationLocationResponse>;
}
