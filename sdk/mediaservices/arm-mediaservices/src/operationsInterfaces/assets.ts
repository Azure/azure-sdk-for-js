/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Asset,
  AssetsListOptionalParams,
  AssetsGetOptionalParams,
  AssetsGetResponse,
  AssetsCreateOrUpdateOptionalParams,
  AssetsCreateOrUpdateResponse,
  AssetsDeleteOptionalParams,
  AssetsUpdateOptionalParams,
  AssetsUpdateResponse,
  ListContainerSasInput,
  AssetsListContainerSasOptionalParams,
  AssetsListContainerSasResponse,
  AssetsGetEncryptionKeyOptionalParams,
  AssetsGetEncryptionKeyResponse,
  AssetsListStreamingLocatorsOptionalParams,
  AssetsListStreamingLocatorsResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Assets. */
export interface Assets {
  /**
   * List Assets in the Media Services account with optional filtering and ordering
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    accountName: string,
    options?: AssetsListOptionalParams
  ): PagedAsyncIterableIterator<Asset>;
  /**
   * Get the details of an Asset in the Media Services account
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param assetName The Asset name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    assetName: string,
    options?: AssetsGetOptionalParams
  ): Promise<AssetsGetResponse>;
  /**
   * Creates or updates an Asset in the Media Services account
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param assetName The Asset name.
   * @param parameters The request parameters
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    accountName: string,
    assetName: string,
    parameters: Asset,
    options?: AssetsCreateOrUpdateOptionalParams
  ): Promise<AssetsCreateOrUpdateResponse>;
  /**
   * Deletes an Asset in the Media Services account
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param assetName The Asset name.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    accountName: string,
    assetName: string,
    options?: AssetsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Updates an existing Asset in the Media Services account
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param assetName The Asset name.
   * @param parameters The request parameters
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    accountName: string,
    assetName: string,
    parameters: Asset,
    options?: AssetsUpdateOptionalParams
  ): Promise<AssetsUpdateResponse>;
  /**
   * Lists storage container URLs with shared access signatures (SAS) for uploading and downloading Asset
   * content. The signatures are derived from the storage account keys.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param assetName The Asset name.
   * @param parameters The request parameters
   * @param options The options parameters.
   */
  listContainerSas(
    resourceGroupName: string,
    accountName: string,
    assetName: string,
    parameters: ListContainerSasInput,
    options?: AssetsListContainerSasOptionalParams
  ): Promise<AssetsListContainerSasResponse>;
  /**
   * Gets the Asset storage encryption keys used to decrypt content created by version 2 of the Media
   * Services API
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param assetName The Asset name.
   * @param options The options parameters.
   */
  getEncryptionKey(
    resourceGroupName: string,
    accountName: string,
    assetName: string,
    options?: AssetsGetEncryptionKeyOptionalParams
  ): Promise<AssetsGetEncryptionKeyResponse>;
  /**
   * Lists Streaming Locators which are associated with this asset.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param assetName The Asset name.
   * @param options The options parameters.
   */
  listStreamingLocators(
    resourceGroupName: string,
    accountName: string,
    assetName: string,
    options?: AssetsListStreamingLocatorsOptionalParams
  ): Promise<AssetsListStreamingLocatorsResponse>;
}
