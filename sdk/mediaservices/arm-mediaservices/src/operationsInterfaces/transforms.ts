/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Transform,
  TransformsListOptionalParams,
  TransformsGetOptionalParams,
  TransformsGetResponse,
  TransformsCreateOrUpdateOptionalParams,
  TransformsCreateOrUpdateResponse,
  TransformsDeleteOptionalParams,
  TransformsUpdateOptionalParams,
  TransformsUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Transforms. */
export interface Transforms {
  /**
   * Lists the Transforms in the account.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    accountName: string,
    options?: TransformsListOptionalParams
  ): PagedAsyncIterableIterator<Transform>;
  /**
   * Gets a Transform.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param transformName The Transform name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    transformName: string,
    options?: TransformsGetOptionalParams
  ): Promise<TransformsGetResponse>;
  /**
   * Creates or updates a new Transform.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param transformName The Transform name.
   * @param parameters The request parameters
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    accountName: string,
    transformName: string,
    parameters: Transform,
    options?: TransformsCreateOrUpdateOptionalParams
  ): Promise<TransformsCreateOrUpdateResponse>;
  /**
   * Deletes a Transform.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param transformName The Transform name.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    accountName: string,
    transformName: string,
    options?: TransformsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Updates a Transform.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param transformName The Transform name.
   * @param parameters The request parameters
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    accountName: string,
    transformName: string,
    parameters: Transform,
    options?: TransformsUpdateOptionalParams
  ): Promise<TransformsUpdateResponse>;
}
