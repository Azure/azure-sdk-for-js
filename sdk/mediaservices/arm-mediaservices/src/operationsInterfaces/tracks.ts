/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  AssetTrack,
  TracksListOptionalParams,
  TracksGetOptionalParams,
  TracksGetResponse,
  TracksCreateOrUpdateOptionalParams,
  TracksCreateOrUpdateResponse,
  TracksDeleteOptionalParams,
  TracksDeleteResponse,
  TracksUpdateOptionalParams,
  TracksUpdateResponse,
  TracksUpdateTrackDataOptionalParams,
  TracksUpdateTrackDataResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Tracks. */
export interface Tracks {
  /**
   * Lists the Tracks in the asset
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param assetName The Asset name.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    accountName: string,
    assetName: string,
    options?: TracksListOptionalParams
  ): PagedAsyncIterableIterator<AssetTrack>;
  /**
   * Get the details of a Track in the Asset
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param assetName The Asset name.
   * @param trackName The Asset Track name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    assetName: string,
    trackName: string,
    options?: TracksGetOptionalParams
  ): Promise<TracksGetResponse>;
  /**
   * Create or update a Track in the asset
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param assetName The Asset name.
   * @param trackName The Asset Track name.
   * @param parameters The request parameters
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    accountName: string,
    assetName: string,
    trackName: string,
    parameters: AssetTrack,
    options?: TracksCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<TracksCreateOrUpdateResponse>,
      TracksCreateOrUpdateResponse
    >
  >;
  /**
   * Create or update a Track in the asset
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param assetName The Asset name.
   * @param trackName The Asset Track name.
   * @param parameters The request parameters
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    accountName: string,
    assetName: string,
    trackName: string,
    parameters: AssetTrack,
    options?: TracksCreateOrUpdateOptionalParams
  ): Promise<TracksCreateOrUpdateResponse>;
  /**
   * Deletes a Track in the asset
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param assetName The Asset name.
   * @param trackName The Asset Track name.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    accountName: string,
    assetName: string,
    trackName: string,
    options?: TracksDeleteOptionalParams
  ): Promise<
    SimplePollerLike<OperationState<TracksDeleteResponse>, TracksDeleteResponse>
  >;
  /**
   * Deletes a Track in the asset
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param assetName The Asset name.
   * @param trackName The Asset Track name.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    accountName: string,
    assetName: string,
    trackName: string,
    options?: TracksDeleteOptionalParams
  ): Promise<TracksDeleteResponse>;
  /**
   * Updates an existing Track in the asset
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param assetName The Asset name.
   * @param trackName The Asset Track name.
   * @param parameters The request parameters
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    accountName: string,
    assetName: string,
    trackName: string,
    parameters: AssetTrack,
    options?: TracksUpdateOptionalParams
  ): Promise<
    SimplePollerLike<OperationState<TracksUpdateResponse>, TracksUpdateResponse>
  >;
  /**
   * Updates an existing Track in the asset
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param assetName The Asset name.
   * @param trackName The Asset Track name.
   * @param parameters The request parameters
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    accountName: string,
    assetName: string,
    trackName: string,
    parameters: AssetTrack,
    options?: TracksUpdateOptionalParams
  ): Promise<TracksUpdateResponse>;
  /**
   * Update the track data. Call this API after any changes are made to the track data stored in the
   * asset container. For example, you have modified the WebVTT captions file in the Azure blob storage
   * container for the asset, viewers will not see the new version of the captions unless this API is
   * called. Note, the changes may not be reflected immediately. CDN cache may also need to be purged if
   * applicable.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param assetName The Asset name.
   * @param trackName The Asset Track name.
   * @param options The options parameters.
   */
  beginUpdateTrackData(
    resourceGroupName: string,
    accountName: string,
    assetName: string,
    trackName: string,
    options?: TracksUpdateTrackDataOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<TracksUpdateTrackDataResponse>,
      TracksUpdateTrackDataResponse
    >
  >;
  /**
   * Update the track data. Call this API after any changes are made to the track data stored in the
   * asset container. For example, you have modified the WebVTT captions file in the Azure blob storage
   * container for the asset, viewers will not see the new version of the captions unless this API is
   * called. Note, the changes may not be reflected immediately. CDN cache may also need to be purged if
   * applicable.
   * @param resourceGroupName The name of the resource group within the Azure subscription.
   * @param accountName The Media Services account name.
   * @param assetName The Asset name.
   * @param trackName The Asset Track name.
   * @param options The options parameters.
   */
  beginUpdateTrackDataAndWait(
    resourceGroupName: string,
    accountName: string,
    assetName: string,
    trackName: string,
    options?: TracksUpdateTrackDataOptionalParams
  ): Promise<TracksUpdateTrackDataResponse>;
}
