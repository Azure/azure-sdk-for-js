/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  SqlManagedInstance,
  SqlManagedInstancesListOptionalParams,
  SqlManagedInstancesListByResourceGroupOptionalParams,
  SqlManagedInstancesGetOptionalParams,
  SqlManagedInstancesGetResponse,
  SqlManagedInstancesCreateOptionalParams,
  SqlManagedInstancesCreateResponse,
  SqlManagedInstancesDeleteOptionalParams,
  SqlManagedInstanceUpdate,
  SqlManagedInstancesUpdateOptionalParams,
  SqlManagedInstancesUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SqlManagedInstances. */
export interface SqlManagedInstances {
  /**
   * List sqlManagedInstance resources in the subscription
   * @param options The options parameters.
   */
  list(
    options?: SqlManagedInstancesListOptionalParams
  ): PagedAsyncIterableIterator<SqlManagedInstance>;
  /**
   * Gets all sqlManagedInstances in a resource group.
   * @param resourceGroupName The name of the Azure resource group
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: SqlManagedInstancesListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<SqlManagedInstance>;
  /**
   * Retrieves a SQL Managed Instance resource
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlManagedInstanceName Name of SQL Managed Instance
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    sqlManagedInstanceName: string,
    options?: SqlManagedInstancesGetOptionalParams
  ): Promise<SqlManagedInstancesGetResponse>;
  /**
   * Creates or replaces a SQL Managed Instance resource
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlManagedInstanceName Name of SQL Managed Instance
   * @param sqlManagedInstance The SQL Managed Instance to be created or updated.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    sqlManagedInstanceName: string,
    sqlManagedInstance: SqlManagedInstance,
    options?: SqlManagedInstancesCreateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<SqlManagedInstancesCreateResponse>,
      SqlManagedInstancesCreateResponse
    >
  >;
  /**
   * Creates or replaces a SQL Managed Instance resource
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlManagedInstanceName Name of SQL Managed Instance
   * @param sqlManagedInstance The SQL Managed Instance to be created or updated.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    sqlManagedInstanceName: string,
    sqlManagedInstance: SqlManagedInstance,
    options?: SqlManagedInstancesCreateOptionalParams
  ): Promise<SqlManagedInstancesCreateResponse>;
  /**
   * Deletes a SQL Managed Instance resource
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlManagedInstanceName Name of SQL Managed Instance
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    sqlManagedInstanceName: string,
    options?: SqlManagedInstancesDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes a SQL Managed Instance resource
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlManagedInstanceName Name of SQL Managed Instance
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    sqlManagedInstanceName: string,
    options?: SqlManagedInstancesDeleteOptionalParams
  ): Promise<void>;
  /**
   * Updates a SQL Managed Instance resource
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlManagedInstanceName Name of SQL Managed Instance
   * @param parameters The SQL Managed Instance.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    sqlManagedInstanceName: string,
    parameters: SqlManagedInstanceUpdate,
    options?: SqlManagedInstancesUpdateOptionalParams
  ): Promise<SqlManagedInstancesUpdateResponse>;
}
