/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  SqlServerInstance,
  SqlServerInstancesListOptionalParams,
  SqlServerInstancesListByResourceGroupOptionalParams,
  SqlServerInstancesGetOptionalParams,
  SqlServerInstancesGetResponse,
  SqlServerInstancesCreateOptionalParams,
  SqlServerInstancesCreateResponse,
  SqlServerInstancesDeleteOptionalParams,
  SqlServerInstanceUpdate,
  SqlServerInstancesUpdateOptionalParams,
  SqlServerInstancesUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SqlServerInstances. */
export interface SqlServerInstances {
  /**
   * List sqlServerInstance resources in the subscription
   * @param options The options parameters.
   */
  list(
    options?: SqlServerInstancesListOptionalParams
  ): PagedAsyncIterableIterator<SqlServerInstance>;
  /**
   * Gets all sqlServerInstances in a resource group.
   * @param resourceGroupName The name of the Azure resource group
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: SqlServerInstancesListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<SqlServerInstance>;
  /**
   * Retrieves a SQL Server Instance resource
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlServerInstanceName Name of SQL Server Instance
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    sqlServerInstanceName: string,
    options?: SqlServerInstancesGetOptionalParams
  ): Promise<SqlServerInstancesGetResponse>;
  /**
   * Creates or replaces a SQL Server Instance resource
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlServerInstanceName Name of SQL Server Instance
   * @param sqlServerInstance The SQL Server Instance to be created or updated.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    sqlServerInstanceName: string,
    sqlServerInstance: SqlServerInstance,
    options?: SqlServerInstancesCreateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<SqlServerInstancesCreateResponse>,
      SqlServerInstancesCreateResponse
    >
  >;
  /**
   * Creates or replaces a SQL Server Instance resource
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlServerInstanceName Name of SQL Server Instance
   * @param sqlServerInstance The SQL Server Instance to be created or updated.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    sqlServerInstanceName: string,
    sqlServerInstance: SqlServerInstance,
    options?: SqlServerInstancesCreateOptionalParams
  ): Promise<SqlServerInstancesCreateResponse>;
  /**
   * Deletes a SQL Server Instance resource
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlServerInstanceName Name of SQL Server Instance
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    sqlServerInstanceName: string,
    options?: SqlServerInstancesDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes a SQL Server Instance resource
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlServerInstanceName Name of SQL Server Instance
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    sqlServerInstanceName: string,
    options?: SqlServerInstancesDeleteOptionalParams
  ): Promise<void>;
  /**
   * Updates a SQL Server Instance resource
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlServerInstanceName Name of SQL Server Instance
   * @param parameters The SQL Server Instance.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    sqlServerInstanceName: string,
    parameters: SqlServerInstanceUpdate,
    options?: SqlServerInstancesUpdateOptionalParams
  ): Promise<SqlServerInstancesUpdateResponse>;
}
