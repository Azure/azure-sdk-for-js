/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter
} from "@azure/core-client";
import {
  SqlManagedInstance as SqlManagedInstanceMapper,
  SqlManagedInstanceUpdate as SqlManagedInstanceUpdateMapper,
  SqlServerInstance as SqlServerInstanceMapper,
  SqlServerInstanceUpdate as SqlServerInstanceUpdateMapper,
  DataControllerResource as DataControllerResourceMapper,
  DataControllerUpdate as DataControllerUpdateMapper,
  ActiveDirectoryConnectorResource as ActiveDirectoryConnectorResourceMapper,
  PostgresInstance as PostgresInstanceMapper,
  PostgresInstanceUpdate as PostgresInstanceUpdateMapper
} from "../models/mappers";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2022-03-01-preview",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const resourceGroupName: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const sqlManagedInstanceName: OperationURLParameter = {
  parameterPath: "sqlManagedInstanceName",
  mapper: {
    serializedName: "sqlManagedInstanceName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const sqlManagedInstance: OperationParameter = {
  parameterPath: "sqlManagedInstance",
  mapper: SqlManagedInstanceMapper
};

export const parameters: OperationParameter = {
  parameterPath: "parameters",
  mapper: SqlManagedInstanceUpdateMapper
};

export const sqlServerInstanceName: OperationURLParameter = {
  parameterPath: "sqlServerInstanceName",
  mapper: {
    serializedName: "sqlServerInstanceName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const sqlServerInstance: OperationParameter = {
  parameterPath: "sqlServerInstance",
  mapper: SqlServerInstanceMapper
};

export const parameters1: OperationParameter = {
  parameterPath: "parameters",
  mapper: SqlServerInstanceUpdateMapper
};

export const dataControllerResource: OperationParameter = {
  parameterPath: "dataControllerResource",
  mapper: DataControllerResourceMapper
};

export const dataControllerName: OperationURLParameter = {
  parameterPath: "dataControllerName",
  mapper: {
    serializedName: "dataControllerName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const dataControllerResource1: OperationParameter = {
  parameterPath: "dataControllerResource",
  mapper: DataControllerUpdateMapper
};

export const activeDirectoryConnectorResource: OperationParameter = {
  parameterPath: "activeDirectoryConnectorResource",
  mapper: ActiveDirectoryConnectorResourceMapper
};

export const activeDirectoryConnectorName: OperationURLParameter = {
  parameterPath: "activeDirectoryConnectorName",
  mapper: {
    serializedName: "activeDirectoryConnectorName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const postgresInstanceName: OperationURLParameter = {
  parameterPath: "postgresInstanceName",
  mapper: {
    serializedName: "postgresInstanceName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const resource: OperationParameter = {
  parameterPath: "resource",
  mapper: PostgresInstanceMapper
};

export const parameters2: OperationParameter = {
  parameterPath: "parameters",
  mapper: PostgresInstanceUpdateMapper
};
