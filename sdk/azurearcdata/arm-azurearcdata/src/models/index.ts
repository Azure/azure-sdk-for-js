/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** Result of the request to list Azure Data Services on Azure Arc operations. */
export interface OperationListResult {
  /**
   * Array of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * Link to retrieve next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Azure Data Services on Azure Arc operation definition. */
export interface Operation {
  /** The name of the operation being performed on this particular object. */
  name: string;
  /** The localized display information for this particular operation / action. */
  display: OperationDisplay;
  /**
   * The intended executor of the operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: OperationOrigin;
  /** Indicates whether the operation is a data action */
  isDataAction: boolean;
  /**
   * Additional descriptions for the operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly properties?: { [propertyName: string]: Record<string, unknown> };
}

/** Display metadata associated with the operation. */
export interface OperationDisplay {
  /** The localized friendly form of the resource provider name. */
  provider: string;
  /** The localized friendly form of the resource type related to this action/operation. */
  resource: string;
  /** The localized friendly name for the operation. */
  operation: string;
  /** The localized friendly description for the operation. */
  description: string;
}

/** An error response from the Azure Data on Azure Arc service. */
export interface ErrorResponse {
  /** null */
  error?: ErrorResponseBody;
}

/** An error response from the Batch service. */
export interface ErrorResponseBody {
  /** An identifier for the error. Codes are invariant and are intended to be consumed programmatically. */
  code?: string;
  /** A message describing the error, intended to be suitable for display in a user interface. */
  message?: string;
  /** The target of the particular error. For example, the name of the property in error. */
  target?: string;
  /** A list of additional details about the error. */
  details?: ErrorResponseBody[];
}

/** A list of SqlManagedInstance. */
export interface SqlManagedInstanceListResult {
  /**
   * Array of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: SqlManagedInstance[];
  /**
   * Link to retrieve next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Properties of sqlManagedInstance. */
export interface SqlManagedInstanceProperties {
  /** null */
  dataControllerId?: string;
  /** The instance admin user */
  admin?: string;
  /** The instance start time */
  startTime?: string;
  /** The instance end time */
  endTime?: string;
  /** The raw kubernetes information */
  k8SRaw?: SqlManagedInstanceK8SRaw;
  /** Username and password for basic authentication. */
  basicLoginInformation?: BasicLoginInformation;
  /** Last uploaded date from Kubernetes cluster. Defaults to current date time */
  lastUploadedDate?: Date;
  /**
   * The provisioning state of the Arc-enabled SQL Managed Instance resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /** Active Directory information related to this SQL Managed Instance. */
  activeDirectoryInformation?: ActiveDirectoryInformation;
  /** The license type to apply for this managed instance. */
  licenseType?: ArcSqlManagedInstanceLicenseType;
  /** If a CustomLocation is provided, this contains the ARM id of the connected cluster the custom location belongs to. */
  clusterId?: string;
  /** If a CustomLocation is provided, this contains the ARM id of the extension the custom location belongs to. */
  extensionId?: string;
}

/** The raw kubernetes information. */
export interface SqlManagedInstanceK8SRaw {
  /** Describes unknown properties. The value of an unknown property can be of "any" type. */
  [property: string]: any;
  /** The kubernetes spec information. */
  spec?: SqlManagedInstanceK8SSpec;
}

/** The kubernetes spec information. */
export interface SqlManagedInstanceK8SSpec {
  /** Describes unknown properties. The value of an unknown property can be of "any" type. */
  [property: string]: any;
  /** The kubernetes scheduling information. */
  scheduling?: K8SScheduling;
  /** This option specifies the number of SQL Managed Instance replicas that will be deployed in your Kubernetes cluster for high availability purposes. If sku.tier is BusinessCritical, allowed values are '2' or '3' with default of '3'. If sku.tier is GeneralPurpose, replicas must be '1'. */
  replicas?: number;
}

/** The kubernetes scheduling information. */
export interface K8SScheduling {
  /** Describes unknown properties. The value of an unknown property can be of "any" type. */
  [property: string]: any;
  /** The kubernetes scheduling options. It describes restrictions used to help Kubernetes select appropriate nodes to host the database service */
  default?: K8SSchedulingOptions;
}

/** The kubernetes scheduling options. It describes restrictions used to help Kubernetes select appropriate nodes to host the database service */
export interface K8SSchedulingOptions {
  /** Describes unknown properties. The value of an unknown property can be of "any" type. */
  [property: string]: any;
  /** The kubernetes resource limits and requests used to restrict or reserve resource usage. */
  resources?: K8SResourceRequirements;
}

/** The kubernetes resource limits and requests used to restrict or reserve resource usage. */
export interface K8SResourceRequirements {
  /** Describes unknown properties. The value of an unknown property can be of "any" type. */
  [property: string]: any;
  /** Requests for a kubernetes resource type (e.g 'cpu', 'memory'). The 'cpu' request must be less than or equal to 'cpu' limit. Default 'cpu' is 2, minimum is 1. Default 'memory' is '4Gi', minimum is '2Gi. If sku.tier is GeneralPurpose, maximum 'cpu' is 24 and maximum 'memory' is '128Gi'. */
  requests?: { [propertyName: string]: string };
  /** Limits for a kubernetes resource type (e.g 'cpu', 'memory'). The 'cpu' request must be less than or equal to 'cpu' limit. Default 'cpu' is 2, minimum is 1. Default 'memory' is '4Gi', minimum is '2Gi. If sku.tier is GeneralPurpose, maximum 'cpu' is 24 and maximum 'memory' is '128Gi'. */
  limits?: { [propertyName: string]: string };
}

/** Username and password for basic login authentication. */
export interface BasicLoginInformation {
  /** Login username. */
  username?: string;
  /** Login password. */
  password?: string;
}

/** Active Directory information that related to the resource. */
export interface ActiveDirectoryInformation {
  /** Keytab information that is used for the Sql Managed Instance when Active Directory authentication is used. */
  keytabInformation?: KeytabInformation;
}

/** Keytab used for authenticate with Active Directory. */
export interface KeytabInformation {
  /** A base64-encoded keytab. */
  keytab?: string;
}

/** The complex type of the extended location. */
export interface ExtendedLocation {
  /** The name of the extended location. */
  name?: string;
  /** The type of the extended location. */
  type?: ExtendedLocationTypes;
}

/** The resource model definition representing SKU for Azure Managed Instance - Azure Arc */
export interface SqlManagedInstanceSku {
  /** The name of the SKU. */
  name: "vCore";
  /** The pricing tier for the instance. */
  tier?: SqlManagedInstanceSkuTier;
  /** Whether dev/test is enabled. When the dev field is set to true, the resource is used for dev/test purpose. */
  dev?: boolean;
  /** The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. */
  size?: string;
  /** The SKU family */
  family?: string;
  /** The SKU capacity */
  capacity?: number;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** An update to a SQL Managed Instance. */
export interface SqlManagedInstanceUpdate {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** A list of SqlServerInstance. */
export interface SqlServerInstanceListResult {
  /**
   * Array of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: SqlServerInstance[];
  /**
   * Link to retrieve next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Properties of SqlServerInstance. */
export interface SqlServerInstanceProperties {
  /** SQL Server version. */
  version?: SqlVersion;
  /** SQL Server edition. */
  edition?: EditionType;
  /** ARM Resource id of the container resource (Azure Arc for Servers). */
  containerResourceId: string;
  /**
   * The time when the resource was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createTime?: string;
  /** The number of logical processors used by the SQL Server instance. */
  vCore?: string;
  /** The cloud connectivity status. */
  status: ConnectionStatus;
  /** SQL Server update level. */
  patchLevel?: string;
  /** SQL Server collation. */
  collation?: string;
  /** SQL Server current version. */
  currentVersion?: string;
  /** SQL Server instance name. */
  instanceName?: string;
  /** Dynamic TCP ports used by SQL Server. */
  tcpDynamicPorts?: string;
  /** Static TCP ports used by SQL Server. */
  tcpStaticPorts?: string;
  /** SQL Server product ID. */
  productId?: string;
  /** SQL Server license type. */
  licenseType?: ArcSqlServerLicenseType;
  /** Timestamp of last Azure Defender status update. */
  azureDefenderStatusLastUpdated?: Date;
  /** Status of Azure Defender. */
  azureDefenderStatus?: DefenderStatus;
  /**
   * The provisioning state of the Arc-enabled SQL Server resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /** Type of host for Azure Arc SQL Server */
  hostType?: HostType;
}

/** An update to a SQL Server Instance. */
export interface SqlServerInstanceUpdate {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** A list of data controllers. */
export interface PageOfDataControllerResource {
  /** Array of results. */
  value?: DataControllerResource[];
  /** Link to retrieve next page of results. */
  nextLink?: string;
}

/** The data controller properties. */
export interface DataControllerProperties {
  /** The infrastructure the data controller is running on. */
  infrastructure?: Infrastructure;
  /** Properties from the Kubernetes data controller */
  onPremiseProperty?: OnPremiseProperty;
  /** The raw kubernetes information */
  k8SRaw?: Record<string, unknown>;
  /** Properties on upload watermark.  Mostly timestamp for each upload data type */
  uploadWatermark?: UploadWatermark;
  /** Last uploaded date from Kubernetes cluster. Defaults to current date time */
  lastUploadedDate?: Date;
  /** Deprecated. Azure Arc Data Services data controller no longer expose any endpoint. All traffic are exposed through Kubernetes native API. */
  basicLoginInformation?: BasicLoginInformation;
  /** Login credential for metrics dashboard on the Kubernetes cluster. */
  metricsDashboardCredential?: BasicLoginInformation;
  /** Login credential for logs dashboard on the Kubernetes cluster. */
  logsDashboardCredential?: BasicLoginInformation;
  /** Log analytics workspace id and primary key */
  logAnalyticsWorkspaceConfig?: LogAnalyticsWorkspaceConfig;
  /** Deprecated. Service principal is deprecated in favor of Arc Kubernetes service extension managed identity. */
  uploadServicePrincipal?: UploadServicePrincipal;
  /**
   * The provisioning state of the Arc Data Controller resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /** If a CustomLocation is provided, this contains the ARM id of the connected cluster the custom location belongs to. */
  clusterId?: string;
  /** If a CustomLocation is provided, this contains the ARM id of the extension the custom location belongs to. */
  extensionId?: string;
}

/** Properties from the Kubernetes data controller */
export interface OnPremiseProperty {
  /** A globally unique ID identifying the associated Kubernetes cluster */
  id: string;
  /** Certificate that contains the Kubernetes cluster public key used to verify signing */
  publicSigningKey: string;
  /** Unique thumbprint returned to customer to verify the certificate being uploaded */
  signingCertificateThumbprint?: string;
}

/** Properties on upload watermark.  Mostly timestamp for each upload data type */
export interface UploadWatermark {
  /** Last uploaded date for metrics from kubernetes cluster. Defaults to current date time */
  metrics?: Date;
  /** Last uploaded date for logs from kubernetes cluster. Defaults to current date time */
  logs?: Date;
  /** Last uploaded date for usages from kubernetes cluster. Defaults to current date time */
  usages?: Date;
}

/** Log analytics workspace id and primary key */
export interface LogAnalyticsWorkspaceConfig {
  /** Azure Log Analytics workspace ID */
  workspaceId?: string;
  /** Primary key of the workspace */
  primaryKey?: string;
}

/** Service principal for uploading billing, metrics and logs. */
export interface UploadServicePrincipal {
  /** Client ID of the service principal for uploading data. */
  clientId?: string;
  /** Tenant ID of the service principal. */
  tenantId?: string;
  /** Authority for the service principal. Example: https://login.microsoftonline.com/ */
  authority?: string;
  /** Secret of the service principal */
  clientSecret?: string;
}

/** Used for updating a data controller resource. */
export interface DataControllerUpdate {
  /** Resource tags */
  tags?: { [propertyName: string]: string };
  /** The data controller's properties */
  properties?: DataControllerProperties;
}

/** A list of active directory connectors */
export interface ActiveDirectoryConnectorListResult {
  /**
   * Array of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: ActiveDirectoryConnectorResource[];
  /**
   * Link to retrieve next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** The properties of an Active Directory connector resource */
export interface ActiveDirectoryConnectorProperties {
  /** Username and password for domain service account authentication. */
  domainServiceAccountLoginInformation?: BasicLoginInformation;
  /**
   * The provisioning state of the Active Directory connector resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /** null */
  spec: ActiveDirectoryConnectorSpec;
  /** null */
  status?: ActiveDirectoryConnectorStatus;
}

/** The specifications of the AD Kubernetes resource. */
export interface ActiveDirectoryConnectorSpec {
  /** null */
  activeDirectory: ActiveDirectoryConnectorDomainDetails;
  /** null */
  dns: ActiveDirectoryConnectorDNSDetails;
}

/** Active Directory domain details */
export interface ActiveDirectoryConnectorDomainDetails {
  /** Name (uppercase) of the Active Directory domain that this AD connector will be associated with. */
  realm: string;
  /** NETBIOS name of the Active Directory domain. */
  netbiosDomainName?: string;
  /** The service account provisioning mode for this Active Directory connector. */
  serviceAccountProvisioning?: AccountProvisioningMode;
  /** The distinguished name of the Active Directory Organizational Unit. */
  ouDistinguishedName?: string;
  /** null */
  domainControllers: ActiveDirectoryDomainControllers;
}

/** Details about the Active Directory domain controllers associated with this AD connector instance */
export interface ActiveDirectoryDomainControllers {
  /** Information about the Primary Domain Controller (PDC) in the AD domain. */
  primaryDomainController?: ActiveDirectoryDomainController;
  /** null */
  secondaryDomainControllers?: ActiveDirectoryDomainController[];
}

/** Information about a domain controller in the AD domain. */
export interface ActiveDirectoryDomainController {
  /** Fully-qualified domain name of a domain controller in the AD domain. */
  hostname: string;
}

/** DNS server details */
export interface ActiveDirectoryConnectorDNSDetails {
  /** DNS domain name for which DNS lookups should be forwarded to the Active Directory DNS servers. */
  domainName?: string;
  /** List of Active Directory DNS server IP addresses. */
  nameserverIPAddresses: string[];
  /** Replica count for DNS proxy service. Default value is 1. */
  replicas?: number;
  /** Flag indicating whether to prefer Kubernetes DNS server response over AD DNS server response for IP address lookups. */
  preferK8SDnsForPtrLookups?: boolean;
}

/** The status of the Kubernetes custom resource. */
export interface ActiveDirectoryConnectorStatus {
  /** Describes unknown properties. The value of an unknown property can be of "any" type. */
  [property: string]: any;
  /** The time that the custom resource was last updated. */
  lastUpdateTime?: string;
  /** The version of the replicaSet associated with the AD connector custom resource. */
  observedGeneration?: number;
  /** The state of the AD connector custom resource. */
  state?: string;
}

/** A list of PostgresInstance. */
export interface PostgresInstanceListResult {
  /**
   * Array of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: PostgresInstance[];
  /**
   * Link to retrieve next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Postgres Instance properties. */
export interface PostgresInstanceProperties {
  /** The data controller id */
  dataControllerId?: string;
  /** The instance admin */
  admin?: string;
  /** Username and password for basic authentication. */
  basicLoginInformation?: BasicLoginInformation;
  /** The raw kubernetes information */
  k8SRaw?: Record<string, unknown>;
  /** Last uploaded date from Kubernetes cluster. Defaults to current date time */
  lastUploadedDate?: Date;
  /**
   * The provisioning state of the Azure Arc-enabled PostgreSQL instance.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** The resource model definition representing SKU for ARM resources */
export interface CommonSku {
  /** The name of the SKU.  It is typically a letter+number code */
  name: string;
  /** Whether dev/test is enabled. When the dev field is set to true, the resource is used for dev/test purpose. */
  dev?: boolean;
  /** The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. */
  size?: string;
  /** If the service has different generations of hardware, for the same SKU, then that can be captured here. */
  family?: string;
  /** If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted. */
  capacity?: number;
}

/** An update to a Postgres Instance. */
export interface PostgresInstanceUpdate {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** Postgres Instance properties. */
  properties?: PostgresInstanceProperties;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export type TrackedResource = Resource & {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
};

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export type ProxyResource = Resource & {};

/** The resource model definition representing SKU for Azure Database for PostgresSQL - Azure Arc */
export type PostgresInstanceSku = CommonSku & {
  /** This field is required to be implemented by the Resource Provider if the service has more than one tier. */
  tier?: "Hyperscale";
};

/** A SqlManagedInstance. */
export type SqlManagedInstance = TrackedResource & {
  /** null */
  properties: SqlManagedInstanceProperties;
  /** The extendedLocation of the resource. */
  extendedLocation?: ExtendedLocation;
  /** Resource sku. */
  sku?: SqlManagedInstanceSku;
};

/** A SqlServerInstance. */
export type SqlServerInstance = TrackedResource & {
  /** null */
  properties?: SqlServerInstanceProperties;
};

/** Data controller resource */
export type DataControllerResource = TrackedResource & {
  /** The extendedLocation of the resource. */
  extendedLocation?: ExtendedLocation;
  /** The data controller's properties */
  properties: DataControllerProperties;
};

/** A Postgres Instance. */
export type PostgresInstance = TrackedResource & {
  /** The extendedLocation of the resource. */
  extendedLocation?: ExtendedLocation;
  /** null */
  properties: PostgresInstanceProperties;
  /** Resource sku. */
  sku?: PostgresInstanceSku;
};

/** Active directory connector resource */
export type ActiveDirectoryConnectorResource = ProxyResource & {
  /** null */
  properties: ActiveDirectoryConnectorProperties;
};

/** Known values of {@link OperationOrigin} that the service accepts. */
export enum KnownOperationOrigin {
  User = "user",
  System = "system"
}

/**
 * Defines values for OperationOrigin. \
 * {@link KnownOperationOrigin} can be used interchangeably with OperationOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system**
 */
export type OperationOrigin = string;

/** Known values of {@link ArcSqlManagedInstanceLicenseType} that the service accepts. */
export enum KnownArcSqlManagedInstanceLicenseType {
  BasePrice = "BasePrice",
  LicenseIncluded = "LicenseIncluded",
  DisasterRecovery = "DisasterRecovery"
}

/**
 * Defines values for ArcSqlManagedInstanceLicenseType. \
 * {@link KnownArcSqlManagedInstanceLicenseType} can be used interchangeably with ArcSqlManagedInstanceLicenseType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BasePrice** \
 * **LicenseIncluded** \
 * **DisasterRecovery**
 */
export type ArcSqlManagedInstanceLicenseType = string;

/** Known values of {@link ExtendedLocationTypes} that the service accepts. */
export enum KnownExtendedLocationTypes {
  CustomLocation = "CustomLocation"
}

/**
 * Defines values for ExtendedLocationTypes. \
 * {@link KnownExtendedLocationTypes} can be used interchangeably with ExtendedLocationTypes,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **CustomLocation**
 */
export type ExtendedLocationTypes = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  User = "User",
  Application = "Application",
  ManagedIdentity = "ManagedIdentity",
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link SqlVersion} that the service accepts. */
export enum KnownSqlVersion {
  SQLServer2012 = "SQL Server 2012",
  SQLServer2014 = "SQL Server 2014",
  SQLServer2016 = "SQL Server 2016",
  SQLServer2017 = "SQL Server 2017",
  SQLServer2019 = "SQL Server 2019",
  SQLServer2022 = "SQL Server 2022",
  Unknown = "Unknown"
}

/**
 * Defines values for SqlVersion. \
 * {@link KnownSqlVersion} can be used interchangeably with SqlVersion,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SQL Server 2012** \
 * **SQL Server 2014** \
 * **SQL Server 2016** \
 * **SQL Server 2017** \
 * **SQL Server 2019** \
 * **SQL Server 2022** \
 * **Unknown**
 */
export type SqlVersion = string;

/** Known values of {@link EditionType} that the service accepts. */
export enum KnownEditionType {
  Evaluation = "Evaluation",
  Enterprise = "Enterprise",
  Standard = "Standard",
  Web = "Web",
  Developer = "Developer",
  Express = "Express"
}

/**
 * Defines values for EditionType. \
 * {@link KnownEditionType} can be used interchangeably with EditionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Evaluation** \
 * **Enterprise** \
 * **Standard** \
 * **Web** \
 * **Developer** \
 * **Express**
 */
export type EditionType = string;

/** Known values of {@link ConnectionStatus} that the service accepts. */
export enum KnownConnectionStatus {
  Connected = "Connected",
  Disconnected = "Disconnected",
  Registered = "Registered",
  Unknown = "Unknown"
}

/**
 * Defines values for ConnectionStatus. \
 * {@link KnownConnectionStatus} can be used interchangeably with ConnectionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Connected** \
 * **Disconnected** \
 * **Registered** \
 * **Unknown**
 */
export type ConnectionStatus = string;

/** Known values of {@link ArcSqlServerLicenseType} that the service accepts. */
export enum KnownArcSqlServerLicenseType {
  Paid = "Paid",
  Free = "Free",
  Hadr = "HADR",
  Undefined = "Undefined"
}

/**
 * Defines values for ArcSqlServerLicenseType. \
 * {@link KnownArcSqlServerLicenseType} can be used interchangeably with ArcSqlServerLicenseType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Paid** \
 * **Free** \
 * **HADR** \
 * **Undefined**
 */
export type ArcSqlServerLicenseType = string;

/** Known values of {@link DefenderStatus} that the service accepts. */
export enum KnownDefenderStatus {
  Protected = "Protected",
  Unprotected = "Unprotected",
  Unknown = "Unknown"
}

/**
 * Defines values for DefenderStatus. \
 * {@link KnownDefenderStatus} can be used interchangeably with DefenderStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Protected** \
 * **Unprotected** \
 * **Unknown**
 */
export type DefenderStatus = string;

/** Known values of {@link HostType} that the service accepts. */
export enum KnownHostType {
  VirtualMachine = "Virtual Machine",
  PhysicalServer = "Physical Server",
  AWSVirtualMachine = "AWS Virtual Machine",
  GCPVirtualMachine = "GCP Virtual Machine",
  Other = "Other"
}

/**
 * Defines values for HostType. \
 * {@link KnownHostType} can be used interchangeably with HostType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Virtual Machine** \
 * **Physical Server** \
 * **AWS Virtual Machine** \
 * **GCP Virtual Machine** \
 * **Other**
 */
export type HostType = string;

/** Known values of {@link AccountProvisioningMode} that the service accepts. */
export enum KnownAccountProvisioningMode {
  Automatic = "automatic",
  Manual = "manual"
}

/**
 * Defines values for AccountProvisioningMode. \
 * {@link KnownAccountProvisioningMode} can be used interchangeably with AccountProvisioningMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **automatic** \
 * **manual**
 */
export type AccountProvisioningMode = string;
/** Defines values for SqlManagedInstanceSkuTier. */
export type SqlManagedInstanceSkuTier = "GeneralPurpose" | "BusinessCritical";
/** Defines values for Infrastructure. */
export type Infrastructure =
  | "azure"
  | "gcp"
  | "aws"
  | "alibaba"
  | "onpremises"
  | "other";

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface SqlManagedInstancesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type SqlManagedInstancesListResponse = SqlManagedInstanceListResult;

/** Optional parameters. */
export interface SqlManagedInstancesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type SqlManagedInstancesListByResourceGroupResponse = SqlManagedInstanceListResult;

/** Optional parameters. */
export interface SqlManagedInstancesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SqlManagedInstancesGetResponse = SqlManagedInstance;

/** Optional parameters. */
export interface SqlManagedInstancesCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type SqlManagedInstancesCreateResponse = SqlManagedInstance;

/** Optional parameters. */
export interface SqlManagedInstancesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface SqlManagedInstancesUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type SqlManagedInstancesUpdateResponse = SqlManagedInstance;

/** Optional parameters. */
export interface SqlManagedInstancesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type SqlManagedInstancesListNextResponse = SqlManagedInstanceListResult;

/** Optional parameters. */
export interface SqlManagedInstancesListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type SqlManagedInstancesListByResourceGroupNextResponse = SqlManagedInstanceListResult;

/** Optional parameters. */
export interface SqlServerInstancesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type SqlServerInstancesListResponse = SqlServerInstanceListResult;

/** Optional parameters. */
export interface SqlServerInstancesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type SqlServerInstancesListByResourceGroupResponse = SqlServerInstanceListResult;

/** Optional parameters. */
export interface SqlServerInstancesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SqlServerInstancesGetResponse = SqlServerInstance;

/** Optional parameters. */
export interface SqlServerInstancesCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type SqlServerInstancesCreateResponse = SqlServerInstance;

/** Optional parameters. */
export interface SqlServerInstancesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface SqlServerInstancesUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type SqlServerInstancesUpdateResponse = SqlServerInstance;

/** Optional parameters. */
export interface SqlServerInstancesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type SqlServerInstancesListNextResponse = SqlServerInstanceListResult;

/** Optional parameters. */
export interface SqlServerInstancesListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type SqlServerInstancesListByResourceGroupNextResponse = SqlServerInstanceListResult;

/** Optional parameters. */
export interface DataControllersListInSubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listInSubscription operation. */
export type DataControllersListInSubscriptionResponse = PageOfDataControllerResource;

/** Optional parameters. */
export interface DataControllersListInGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listInGroup operation. */
export type DataControllersListInGroupResponse = PageOfDataControllerResource;

/** Optional parameters. */
export interface DataControllersPutDataControllerOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the putDataController operation. */
export type DataControllersPutDataControllerResponse = DataControllerResource;

/** Optional parameters. */
export interface DataControllersDeleteDataControllerOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface DataControllersGetDataControllerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getDataController operation. */
export type DataControllersGetDataControllerResponse = DataControllerResource;

/** Optional parameters. */
export interface DataControllersPatchDataControllerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the patchDataController operation. */
export type DataControllersPatchDataControllerResponse = DataControllerResource;

/** Optional parameters. */
export interface DataControllersListInSubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listInSubscriptionNext operation. */
export type DataControllersListInSubscriptionNextResponse = PageOfDataControllerResource;

/** Optional parameters. */
export interface DataControllersListInGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listInGroupNext operation. */
export type DataControllersListInGroupNextResponse = PageOfDataControllerResource;

/** Optional parameters. */
export interface ActiveDirectoryConnectorsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ActiveDirectoryConnectorsListResponse = ActiveDirectoryConnectorListResult;

/** Optional parameters. */
export interface ActiveDirectoryConnectorsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ActiveDirectoryConnectorsCreateResponse = ActiveDirectoryConnectorResource;

/** Optional parameters. */
export interface ActiveDirectoryConnectorsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ActiveDirectoryConnectorsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ActiveDirectoryConnectorsGetResponse = ActiveDirectoryConnectorResource;

/** Optional parameters. */
export interface ActiveDirectoryConnectorsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ActiveDirectoryConnectorsListNextResponse = ActiveDirectoryConnectorListResult;

/** Optional parameters. */
export interface PostgresInstancesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type PostgresInstancesListResponse = PostgresInstanceListResult;

/** Optional parameters. */
export interface PostgresInstancesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type PostgresInstancesListByResourceGroupResponse = PostgresInstanceListResult;

/** Optional parameters. */
export interface PostgresInstancesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PostgresInstancesGetResponse = PostgresInstance;

/** Optional parameters. */
export interface PostgresInstancesCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type PostgresInstancesCreateResponse = PostgresInstance;

/** Optional parameters. */
export interface PostgresInstancesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface PostgresInstancesUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type PostgresInstancesUpdateResponse = PostgresInstance;

/** Optional parameters. */
export interface PostgresInstancesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type PostgresInstancesListNextResponse = PostgresInstanceListResult;

/** Optional parameters. */
export interface PostgresInstancesListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type PostgresInstancesListByResourceGroupNextResponse = PostgresInstanceListResult;

/** Optional parameters. */
export interface AzureArcDataManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
