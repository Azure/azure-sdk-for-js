/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * The resource model definition representing SKU for ARM resources
 */
export interface CommonSku {
  /**
   * The name of the SKU.  It is typically a letter+number code
   */
  name: string;
  /**
   * Whether dev/test is enabled. When the dev field is set to true, the resource is used for
   * dev/test purpose. Default value: true.
   */
  dev?: boolean;
  /**
   * The SKU size. When the name field is the combination of tier and some other value, this would
   * be the standalone code.
   */
  size?: string;
  /**
   * If the service has different generations of hardware, for the same SKU, then that can be
   * captured here.
   */
  family?: string;
  /**
   * If the SKU supports scale out/in then the capacity integer should be included. If scale out/in
   * is not possible for the resource this may be omitted.
   */
  capacity?: number;
}

/**
 * The resource model definition representing SKU for Azure Managed Instance - Azure Arc
 */
export interface SqlManagedInstanceSku extends CommonSku {
  /**
   * This field is required to be implemented by the Resource Provider if the service has more than
   * one tier. Possible values include: 'GeneralPurpose', 'BusinessCritical'. Default value:
   * 'GeneralPurpose'.
   */
  tier?: SqlManagedInstanceSkuTier;
}

/**
 * The resource model definition representing SKU for Azure Database for PostgresSQL - Azure Arc
 */
export interface PostgresInstanceSku extends CommonSku {
  /**
   * This field is required to be implemented by the Resource Provider if the service has more than
   * one tier. Possible values include: 'Hyperscale'. Default value: 'Hyperscale'.
   */
  tier?: PostgresInstanceSkuTier;
}

/**
 * Identity for the resource.
 */
export interface Identity {
  /**
   * The principal ID of resource identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The tenant ID of resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
  /**
   * The identity type. Possible values include: 'SystemAssigned'
   */
  type?: ResourceIdentityType;
}

/**
 * Plan for the resource.
 */
export interface Plan {
  /**
   * A user defined name of the 3rd Party Artifact that is being procured.
   */
  name: string;
  /**
   * The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
   */
  publisher: string;
  /**
   * The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID
   * specified for the artifact at the time of Data Market onboarding.
   */
  product: string;
  /**
   * A publisher provided promotion code as provisioned in Data Market for the said
   * product/artifact.
   */
  promotionCode?: string;
  /**
   * The version of the desired product/artifact.
   */
  version?: string;
}

/**
 * Display metadata associated with the operation.
 */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name.
   */
  provider: string;
  /**
   * The localized friendly form of the resource type related to this action/operation.
   */
  resource: string;
  /**
   * The localized friendly name for the operation.
   */
  operation: string;
  /**
   * The localized friendly description for the operation.
   */
  description: string;
}

/**
 * Azure Data Services on Azure Arc operation definition.
 */
export interface Operation {
  /**
   * The name of the operation being performed on this particular object.
   */
  name: string;
  /**
   * The localized display information for this particular operation / action.
   */
  display: OperationDisplay;
  /**
   * The intended executor of the operation. Possible values include: 'user', 'system'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly origin?: OperationOrigin;
  /**
   * Indicates whether the operation is a data action
   */
  isDataAction: boolean;
  /**
   * Additional descriptions for the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly properties?: { [propertyName: string]: any };
}

/**
 * An interface representing Resource.
 */
export interface Resource extends BaseResource {
  /**
   * Fully qualified resource Id for the resource. Ex -
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the resource. Ex- Microsoft.Compute/virtualMachines or
   * Microsoft.Storage/storageAccounts.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * Read only system data
 */
export interface SystemData {
  /**
   * An identifier for the identity that created the resource
   */
  createdBy?: string;
  /**
   * The type of identity that created the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  createdByType?: IdentityType;
  /**
   * The timestamp of resource creation (UTC)
   */
  createdAt?: Date;
  /**
   * An identifier for the identity that last modified the resource
   */
  lastModifiedBy?: string;
  /**
   * The type of identity that last modified the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  lastModifiedByType?: IdentityType;
  /**
   * The timestamp of resource last modification (UTC)
   */
  lastModifiedAt?: Date;
}

/**
 * The resource model definition for a ARM tracked top level resource
 */
export interface TrackedResource extends Resource {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The geo-location where the resource lives
   */
  location: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
}

/**
 * The resource model definition for a ARM proxy resource. It will have everything other than
 * required location and tags
 */
export interface ProxyResource extends Resource {
}

/**
 * The complex type of the extended location.
 */
export interface ExtendedLocation {
  /**
   * The name of the extended location.
   */
  name?: string;
  /**
   * The type of the extended location. Possible values include: 'CustomLocation'
   */
  type?: ExtendedLocationTypes;
}

/**
 * Properties from the Kubernetes data controller
 */
export interface OnPremiseProperty {
  /**
   * A globally unique ID identifying the associated Kubernetes cluster
   */
  id: string;
  /**
   * Certificate that contains the Kubernetes cluster public key used to verify signing
   */
  publicSigningKey: string;
  /**
   * Unique thumbprint returned to customer to verify the certificate being uploaded
   */
  signingCertificateThumbprint?: string;
}

/**
 * Properties on upload watermark.  Mostly timestamp for each upload data type
 */
export interface UploadWatermark {
  /**
   * Last uploaded date for metrics from kubernetes cluster. Defaults to current date time
   */
  metrics?: Date;
  /**
   * Last uploaded date for logs from kubernetes cluster. Defaults to current date time
   */
  logs?: Date;
  /**
   * Last uploaded date for usages from kubernetes cluster. Defaults to current date time
   */
  usages?: Date;
}

/**
 * Username and password for basic login authentication.
 */
export interface BasicLoginInformation {
  /**
   * Login username.
   */
  username?: string;
  /**
   * Login password.
   */
  password?: string;
}

/**
 * Log analytics workspace id and primary key
 */
export interface LogAnalyticsWorkspaceConfig {
  /**
   * Azure Log Analytics workspace ID
   */
  workspaceId?: string;
  /**
   * Primary key of the workspace
   */
  primaryKey?: string;
}

/**
 * Service principal for uploading billing, metrics and logs.
 */
export interface UploadServicePrincipal {
  /**
   * Client ID of the service principal for uploading data.
   */
  clientId?: string;
  /**
   * Tenant ID of the service principal.
   */
  tenantId?: string;
  /**
   * Authority for the service principal. Example: https://login.microsoftonline.com/
   */
  authority?: string;
  /**
   * Secret of the service principal
   */
  clientSecret?: string;
}

/**
 * The data controller properties.
 */
export interface DataControllerProperties {
  onPremiseProperty?: OnPremiseProperty;
  /**
   * The raw kubernetes information
   */
  k8sRaw?: any;
  uploadWatermark?: UploadWatermark;
  /**
   * Last uploaded date from Kubernetes cluster. Defaults to current date time
   */
  lastUploadedDate?: Date;
  basicLoginInformation?: BasicLoginInformation;
  logAnalyticsWorkspaceConfig?: LogAnalyticsWorkspaceConfig;
  uploadServicePrincipal?: UploadServicePrincipal;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
}

/**
 * Data controller resource
 */
export interface DataControllerResource extends TrackedResource {
  /**
   * The extendedLocation of the resource.
   */
  extendedLocation?: ExtendedLocation;
  /**
   * The data controller's properties
   */
  properties: DataControllerProperties;
}

/**
 * Used for updating a data controller resource.
 */
export interface DataControllerUpdate {
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * An interface representing ResourceSku.
 */
export interface ResourceSku {
  capacity?: number;
  family?: string;
  name?: string;
  size?: string;
  tier?: string;
}

/**
 * Postgres Instance properties.
 */
export interface PostgresInstanceProperties {
  /**
   * The data controller id
   */
  dataControllerId?: string;
  /**
   * The instance admin
   */
  admin?: string;
  /**
   * Username and password for basic authentication.
   */
  basicLoginInformation?: BasicLoginInformation;
  /**
   * The raw kubernetes information
   */
  k8sRaw?: any;
  /**
   * Last uploaded date from Kubernetes cluster. Defaults to current date time
   */
  lastUploadedDate?: Date;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
}

/**
 * A Postgres Instance.
 */
export interface PostgresInstance extends TrackedResource {
  /**
   * The extendedLocation of the resource.
   */
  extendedLocation?: ExtendedLocation;
  /**
   * null
   */
  properties: PostgresInstanceProperties;
  /**
   * Resource sku.
   */
  sku?: PostgresInstanceSku;
}

/**
 * An update to a Postgres Instance.
 */
export interface PostgresInstanceUpdate {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  properties?: PostgresInstanceProperties;
}

/**
 * Properties of sqlManagedInstance.
 */
export interface SqlManagedInstanceProperties {
  /**
   * null
   */
  dataControllerId?: string;
  /**
   * The instance admin user
   */
  admin?: string;
  /**
   * The instance start time
   */
  startTime?: string;
  /**
   * The instance end time
   */
  endTime?: string;
  /**
   * The raw kubernetes information
   */
  k8sRaw?: any;
  /**
   * Username and password for basic authentication.
   */
  basicLoginInformation?: BasicLoginInformation;
  /**
   * Last uploaded date from Kubernetes cluster. Defaults to current date time
   */
  lastUploadedDate?: Date;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
}

/**
 * A SqlManagedInstance.
 */
export interface SqlManagedInstance extends TrackedResource {
  /**
   * null
   */
  properties: SqlManagedInstanceProperties;
  /**
   * The extendedLocation of the resource.
   */
  extendedLocation?: ExtendedLocation;
  /**
   * Resource sku.
   */
  sku?: SqlManagedInstanceSku;
}

/**
 * An update to a SQL Managed Instance.
 */
export interface SqlManagedInstanceUpdate {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Properties of SqlServerInstance.
 */
export interface SqlServerInstanceProperties {
  /**
   * SQL Server version.
   */
  version?: string;
  /**
   * SQL Server edition.
   */
  edition?: string;
  /**
   * ARM Resource id of the container resource (Azure Arc for Servers).
   */
  containerResourceId: string;
  /**
   * The time when the resource was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createTime?: string;
  /**
   * The number of logical processors used by the SQL Server instance.
   */
  vCore?: string;
  /**
   * The cloud connectivity status.
   */
  status: string;
  /**
   * SQL Server update level.
   */
  patchLevel?: string;
  /**
   * SQL Server collation.
   */
  collation?: string;
  /**
   * SQL Server current version.
   */
  currentVersion?: string;
  /**
   * SQL Server instance name.
   */
  instanceName?: string;
  /**
   * Dynamic TCP ports used by SQL Server.
   */
  tcpDynamicPorts?: string;
  /**
   * Static TCP ports used by SQL Server.
   */
  tcpStaticPorts?: string;
  /**
   * SQL Server product ID.
   */
  productId?: string;
  /**
   * SQL Server license type.
   */
  licenseType?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
}

/**
 * A SqlServerInstance.
 */
export interface SqlServerInstance extends TrackedResource {
  /**
   * null
   */
  properties?: SqlServerInstanceProperties;
}

/**
 * An update to a SQL Server Instance.
 */
export interface SqlServerInstanceUpdate {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * An error response from the Batch service.
 */
export interface ErrorResponseBody {
  /**
   * An identifier for the error. Codes are invariant and are intended to be consumed
   * programmatically.
   */
  code?: string;
  /**
   * A message describing the error, intended to be suitable for display in a user interface.
   */
  message?: string;
  /**
   * The target of the particular error. For example, the name of the property in error.
   */
  target?: string;
  /**
   * A list of additional details about the error.
   */
  details?: ErrorResponseBody[];
}

/**
 * An error response from the Azure Data on Azure Arc service.
 */
export interface ErrorResponse {
  /**
   * null
   */
  error?: ErrorResponseBody;
}

/**
 * Information about an error.
 */
export interface ODataError {
  /**
   * A language-independent error name.
   */
  code?: string;
  /**
   * The error message.
   */
  message?: string;
  /**
   * The target of the error (for example, the name of the property in error).
   */
  target?: string;
  /**
   * The error details.
   */
  details?: ODataError[];
}

/**
 * An interface representing AzureArcDataManagementClientOptions.
 */
export interface AzureArcDataManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * Result of the request to list Azure Data Services on Azure Arc operations.
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of SqlManagedInstance.
 * @extends Array<SqlManagedInstance>
 */
export interface SqlManagedInstanceListResult extends Array<SqlManagedInstance> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of SqlServerInstance.
 * @extends Array<SqlServerInstance>
 */
export interface SqlServerInstanceListResult extends Array<SqlServerInstance> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of PostgresInstance.
 * @extends Array<PostgresInstance>
 */
export interface PostgresInstanceListResult extends Array<PostgresInstance> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the PageOfDataControllerResource.
 * @extends Array<DataControllerResource>
 */
export interface PageOfDataControllerResource extends Array<DataControllerResource> {
  /**
   * Link to retrieve next page of results.
   */
  nextLink?: string;
}

/**
 * Defines values for SqlManagedInstanceSkuTier.
 * Possible values include: 'GeneralPurpose', 'BusinessCritical'
 * @readonly
 * @enum {string}
 */
export type SqlManagedInstanceSkuTier = 'GeneralPurpose' | 'BusinessCritical';

/**
 * Defines values for PostgresInstanceSkuTier.
 * Possible values include: 'Hyperscale'
 * @readonly
 * @enum {string}
 */
export type PostgresInstanceSkuTier = 'Hyperscale';

/**
 * Defines values for ResourceIdentityType.
 * Possible values include: 'SystemAssigned'
 * @readonly
 * @enum {string}
 */
export type ResourceIdentityType = 'SystemAssigned';

/**
 * Defines values for OperationOrigin.
 * Possible values include: 'user', 'system'
 * @readonly
 * @enum {string}
 */
export type OperationOrigin = 'user' | 'system';

/**
 * Defines values for IdentityType.
 * Possible values include: 'User', 'Application', 'ManagedIdentity', 'Key'
 * @readonly
 * @enum {string}
 */
export type IdentityType = 'User' | 'Application' | 'ManagedIdentity' | 'Key';

/**
 * Defines values for ExtendedLocationTypes.
 * Possible values include: 'CustomLocation'
 * @readonly
 * @enum {string}
 */
export type ExtendedLocationTypes = 'CustomLocation';

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type SqlManagedInstancesListResponse = SqlManagedInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlManagedInstanceListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type SqlManagedInstancesListByResourceGroupResponse = SqlManagedInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlManagedInstanceListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SqlManagedInstancesGetResponse = SqlManagedInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlManagedInstance;
    };
};

/**
 * Contains response data for the create operation.
 */
export type SqlManagedInstancesCreateResponse = SqlManagedInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlManagedInstance;
    };
};

/**
 * Contains response data for the update operation.
 */
export type SqlManagedInstancesUpdateResponse = SqlManagedInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlManagedInstance;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type SqlManagedInstancesBeginCreateResponse = SqlManagedInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlManagedInstance;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type SqlManagedInstancesListNextResponse = SqlManagedInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlManagedInstanceListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type SqlManagedInstancesListByResourceGroupNextResponse = SqlManagedInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlManagedInstanceListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type SqlServerInstancesListResponse = SqlServerInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlServerInstanceListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type SqlServerInstancesListByResourceGroupResponse = SqlServerInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlServerInstanceListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SqlServerInstancesGetResponse = SqlServerInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlServerInstance;
    };
};

/**
 * Contains response data for the create operation.
 */
export type SqlServerInstancesCreateResponse = SqlServerInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlServerInstance;
    };
};

/**
 * Contains response data for the update operation.
 */
export type SqlServerInstancesUpdateResponse = SqlServerInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlServerInstance;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type SqlServerInstancesBeginCreateResponse = SqlServerInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlServerInstance;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type SqlServerInstancesListNextResponse = SqlServerInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlServerInstanceListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type SqlServerInstancesListByResourceGroupNextResponse = SqlServerInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlServerInstanceListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type PostgresInstancesListResponse = PostgresInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PostgresInstanceListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type PostgresInstancesListByResourceGroupResponse = PostgresInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PostgresInstanceListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PostgresInstancesGetResponse = PostgresInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PostgresInstance;
    };
};

/**
 * Contains response data for the create operation.
 */
export type PostgresInstancesCreateResponse = PostgresInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PostgresInstance;
    };
};

/**
 * Contains response data for the update operation.
 */
export type PostgresInstancesUpdateResponse = PostgresInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PostgresInstance;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type PostgresInstancesBeginCreateResponse = PostgresInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PostgresInstance;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type PostgresInstancesListNextResponse = PostgresInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PostgresInstanceListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type PostgresInstancesListByResourceGroupNextResponse = PostgresInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PostgresInstanceListResult;
    };
};

/**
 * Contains response data for the listInSubscription operation.
 */
export type DataControllersListInSubscriptionResponse = PageOfDataControllerResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PageOfDataControllerResource;
    };
};

/**
 * Contains response data for the listInGroup operation.
 */
export type DataControllersListInGroupResponse = PageOfDataControllerResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PageOfDataControllerResource;
    };
};

/**
 * Contains response data for the putDataController operation.
 */
export type DataControllersPutDataControllerResponse = DataControllerResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataControllerResource;
    };
};

/**
 * Contains response data for the getDataController operation.
 */
export type DataControllersGetDataControllerResponse = DataControllerResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataControllerResource;
    };
};

/**
 * Contains response data for the patchDataController operation.
 */
export type DataControllersPatchDataControllerResponse = DataControllerResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataControllerResource;
    };
};

/**
 * Contains response data for the beginPutDataController operation.
 */
export type DataControllersBeginPutDataControllerResponse = DataControllerResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataControllerResource;
    };
};

/**
 * Contains response data for the listInSubscriptionNext operation.
 */
export type DataControllersListInSubscriptionNextResponse = PageOfDataControllerResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PageOfDataControllerResource;
    };
};

/**
 * Contains response data for the listInGroupNext operation.
 */
export type DataControllersListInGroupNextResponse = PageOfDataControllerResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PageOfDataControllerResource;
    };
};
