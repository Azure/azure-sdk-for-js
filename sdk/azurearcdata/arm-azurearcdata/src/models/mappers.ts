/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const CommonSku: msRest.CompositeMapper = {
  serializedName: "CommonSku",
  type: {
    name: "Composite",
    className: "CommonSku",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      dev: {
        serializedName: "dev",
        defaultValue: true,
        type: {
          name: "Boolean"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "String"
        }
      },
      family: {
        serializedName: "family",
        type: {
          name: "String"
        }
      },
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const SqlManagedInstanceSku: msRest.CompositeMapper = {
  serializedName: "SqlManagedInstanceSku",
  type: {
    name: "Composite",
    className: "SqlManagedInstanceSku",
    modelProperties: {
      name: {
        required: true,
        isConstant: true,
        serializedName: "name",
        defaultValue: 'vCore',
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "tier",
        defaultValue: 'GeneralPurpose',
        type: {
          name: "Enum",
          allowedValues: [
            "GeneralPurpose",
            "BusinessCritical"
          ]
        }
      },
      dev: {
        serializedName: "dev",
        defaultValue: true,
        type: {
          name: "Boolean"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "String"
        }
      },
      family: {
        serializedName: "family",
        type: {
          name: "String"
        }
      },
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Identity: msRest.CompositeMapper = {
  serializedName: "Identity",
  type: {
    name: "Composite",
    className: "Identity",
    modelProperties: {
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "Enum",
          allowedValues: [
            "SystemAssigned"
          ]
        }
      }
    }
  }
};

export const Plan: msRest.CompositeMapper = {
  serializedName: "Plan",
  type: {
    name: "Composite",
    className: "Plan",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      publisher: {
        required: true,
        serializedName: "publisher",
        type: {
          name: "String"
        }
      },
      product: {
        required: true,
        serializedName: "product",
        type: {
          name: "String"
        }
      },
      promotionCode: {
        serializedName: "promotionCode",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "OperationDisplay",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        required: true,
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        required: true,
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        required: true,
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        required: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        required: true,
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        readOnly: true,
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      isDataAction: {
        required: true,
        serializedName: "isDataAction",
        type: {
          name: "Boolean"
        }
      },
      properties: {
        readOnly: true,
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Object"
            }
          }
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SystemData: msRest.CompositeMapper = {
  serializedName: "SystemData",
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      systemData: {
        readOnly: true,
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const ExtendedLocation: msRest.CompositeMapper = {
  serializedName: "ExtendedLocation",
  type: {
    name: "Composite",
    className: "ExtendedLocation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OnPremiseProperty: msRest.CompositeMapper = {
  serializedName: "OnPremiseProperty",
  type: {
    name: "Composite",
    className: "OnPremiseProperty",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      publicSigningKey: {
        required: true,
        serializedName: "publicSigningKey",
        type: {
          name: "String"
        }
      },
      signingCertificateThumbprint: {
        serializedName: "signingCertificateThumbprint",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UploadWatermark: msRest.CompositeMapper = {
  serializedName: "UploadWatermark",
  type: {
    name: "Composite",
    className: "UploadWatermark",
    modelProperties: {
      metrics: {
        serializedName: "metrics",
        type: {
          name: "DateTime"
        }
      },
      logs: {
        serializedName: "logs",
        type: {
          name: "DateTime"
        }
      },
      usages: {
        serializedName: "usages",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const BasicLoginInformation: msRest.CompositeMapper = {
  serializedName: "BasicLoginInformation",
  type: {
    name: "Composite",
    className: "BasicLoginInformation",
    modelProperties: {
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogAnalyticsWorkspaceConfig: msRest.CompositeMapper = {
  serializedName: "LogAnalyticsWorkspaceConfig",
  type: {
    name: "Composite",
    className: "LogAnalyticsWorkspaceConfig",
    modelProperties: {
      workspaceId: {
        serializedName: "workspaceId",
        type: {
          name: "Uuid"
        }
      },
      primaryKey: {
        serializedName: "primaryKey",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UploadServicePrincipal: msRest.CompositeMapper = {
  serializedName: "UploadServicePrincipal",
  type: {
    name: "Composite",
    className: "UploadServicePrincipal",
    modelProperties: {
      clientId: {
        serializedName: "clientId",
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "Uuid"
        }
      },
      authority: {
        serializedName: "authority",
        type: {
          name: "String"
        }
      },
      clientSecret: {
        serializedName: "clientSecret",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataControllerProperties: msRest.CompositeMapper = {
  serializedName: "DataControllerProperties",
  type: {
    name: "Composite",
    className: "DataControllerProperties",
    modelProperties: {
      infrastructure: {
        serializedName: "infrastructure",
        defaultValue: 'other',
        type: {
          name: "Enum",
          allowedValues: [
            "azure",
            "gcp",
            "aws",
            "alibaba",
            "onpremises",
            "other"
          ]
        }
      },
      onPremiseProperty: {
        serializedName: "onPremiseProperty",
        type: {
          name: "Composite",
          className: "OnPremiseProperty"
        }
      },
      k8sRaw: {
        serializedName: "k8sRaw",
        type: {
          name: "Object"
        }
      },
      uploadWatermark: {
        serializedName: "uploadWatermark",
        type: {
          name: "Composite",
          className: "UploadWatermark"
        }
      },
      lastUploadedDate: {
        serializedName: "lastUploadedDate",
        type: {
          name: "DateTime"
        }
      },
      basicLoginInformation: {
        serializedName: "basicLoginInformation",
        type: {
          name: "Composite",
          className: "BasicLoginInformation"
        }
      },
      logAnalyticsWorkspaceConfig: {
        serializedName: "logAnalyticsWorkspaceConfig",
        type: {
          name: "Composite",
          className: "LogAnalyticsWorkspaceConfig"
        }
      },
      uploadServicePrincipal: {
        serializedName: "uploadServicePrincipal",
        type: {
          name: "Composite",
          className: "UploadServicePrincipal"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      clusterId: {
        serializedName: "clusterId",
        type: {
          name: "String"
        }
      },
      extensionId: {
        serializedName: "extensionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataControllerResource: msRest.CompositeMapper = {
  serializedName: "DataControllerResource",
  type: {
    name: "Composite",
    className: "DataControllerResource",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      extendedLocation: {
        serializedName: "extendedLocation",
        type: {
          name: "Composite",
          className: "ExtendedLocation"
        }
      },
      properties: {
        required: true,
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "DataControllerProperties"
        }
      }
    }
  }
};

export const DataControllerUpdate: msRest.CompositeMapper = {
  serializedName: "DataControllerUpdate",
  type: {
    name: "Composite",
    className: "DataControllerUpdate",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ResourceSku: msRest.CompositeMapper = {
  serializedName: "ResourceSku",
  type: {
    name: "Composite",
    className: "ResourceSku",
    modelProperties: {
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Number"
        }
      },
      family: {
        serializedName: "family",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "tier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const K8sResourceRequirements: msRest.CompositeMapper = {
  serializedName: "K8sResourceRequirements",
  type: {
    name: "Composite",
    className: "K8sResourceRequirements",
    modelProperties: {
      requests: {
        serializedName: "requests",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      limits: {
        serializedName: "limits",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    },
    additionalProperties: {
      type: {
        name: "Object"
      }
    }
  }
};

export const K8sSchedulingOptions: msRest.CompositeMapper = {
  serializedName: "K8sSchedulingOptions",
  type: {
    name: "Composite",
    className: "K8sSchedulingOptions",
    modelProperties: {
      resources: {
        serializedName: "resources",
        type: {
          name: "Composite",
          className: "K8sResourceRequirements",
          additionalProperties: {
            type: {
              name: "Object"
            }
          }
        }
      }
    },
    additionalProperties: {
      type: {
        name: "Object"
      }
    }
  }
};

export const K8sScheduling: msRest.CompositeMapper = {
  serializedName: "K8sScheduling",
  type: {
    name: "Composite",
    className: "K8sScheduling",
    modelProperties: {
      default: {
        serializedName: "default",
        type: {
          name: "Composite",
          className: "K8sSchedulingOptions",
          additionalProperties: {
            type: {
              name: "Object"
            }
          }
        }
      }
    },
    additionalProperties: {
      type: {
        name: "Object"
      }
    }
  }
};

export const SqlManagedInstanceK8sSpec: msRest.CompositeMapper = {
  serializedName: "SqlManagedInstanceK8sSpec",
  type: {
    name: "Composite",
    className: "SqlManagedInstanceK8sSpec",
    modelProperties: {
      scheduling: {
        serializedName: "scheduling",
        type: {
          name: "Composite",
          className: "K8sScheduling",
          additionalProperties: {
            type: {
              name: "Object"
            }
          }
        }
      },
      replicas: {
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      }
    },
    additionalProperties: {
      type: {
        name: "Object"
      }
    }
  }
};

export const SqlManagedInstanceK8sRaw: msRest.CompositeMapper = {
  serializedName: "SqlManagedInstanceK8sRaw",
  type: {
    name: "Composite",
    className: "SqlManagedInstanceK8sRaw",
    modelProperties: {
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "SqlManagedInstanceK8sSpec",
          additionalProperties: {
            type: {
              name: "Object"
            }
          }
        }
      }
    },
    additionalProperties: {
      type: {
        name: "Object"
      }
    }
  }
};

export const SqlManagedInstanceProperties: msRest.CompositeMapper = {
  serializedName: "SqlManagedInstanceProperties",
  type: {
    name: "Composite",
    className: "SqlManagedInstanceProperties",
    modelProperties: {
      dataControllerId: {
        serializedName: "dataControllerId",
        type: {
          name: "String"
        }
      },
      admin: {
        serializedName: "admin",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      k8sRaw: {
        serializedName: "k8sRaw",
        type: {
          name: "Composite",
          className: "SqlManagedInstanceK8sRaw",
          additionalProperties: {
            type: {
              name: "Object"
            }
          }
        }
      },
      basicLoginInformation: {
        serializedName: "basicLoginInformation",
        type: {
          name: "Composite",
          className: "BasicLoginInformation"
        }
      },
      lastUploadedDate: {
        serializedName: "lastUploadedDate",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      licenseType: {
        serializedName: "licenseType",
        defaultValue: 'BasePrice',
        type: {
          name: "Enum",
          allowedValues: [
            "BasePrice",
            "LicenseIncluded"
          ]
        }
      },
      clusterId: {
        serializedName: "clusterId",
        type: {
          name: "String"
        }
      },
      extensionId: {
        serializedName: "extensionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SqlManagedInstance: msRest.CompositeMapper = {
  serializedName: "SqlManagedInstance",
  type: {
    name: "Composite",
    className: "SqlManagedInstance",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      properties: {
        required: true,
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SqlManagedInstanceProperties"
        }
      },
      extendedLocation: {
        serializedName: "extendedLocation",
        type: {
          name: "Composite",
          className: "ExtendedLocation"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "SqlManagedInstanceSku"
        }
      }
    }
  }
};

export const SqlManagedInstanceUpdate: msRest.CompositeMapper = {
  serializedName: "SqlManagedInstanceUpdate",
  type: {
    name: "Composite",
    className: "SqlManagedInstanceUpdate",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const SqlServerInstanceProperties: msRest.CompositeMapper = {
  serializedName: "SqlServerInstanceProperties",
  type: {
    name: "Composite",
    className: "SqlServerInstanceProperties",
    modelProperties: {
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      edition: {
        serializedName: "edition",
        type: {
          name: "String"
        }
      },
      containerResourceId: {
        required: true,
        serializedName: "containerResourceId",
        type: {
          name: "String"
        }
      },
      createTime: {
        readOnly: true,
        serializedName: "createTime",
        type: {
          name: "String"
        }
      },
      vCore: {
        serializedName: "vCore",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      patchLevel: {
        serializedName: "patchLevel",
        type: {
          name: "String"
        }
      },
      collation: {
        serializedName: "collation",
        type: {
          name: "String"
        }
      },
      currentVersion: {
        serializedName: "currentVersion",
        type: {
          name: "String"
        }
      },
      instanceName: {
        serializedName: "instanceName",
        type: {
          name: "String"
        }
      },
      tcpDynamicPorts: {
        serializedName: "tcpDynamicPorts",
        type: {
          name: "String"
        }
      },
      tcpStaticPorts: {
        serializedName: "tcpStaticPorts",
        type: {
          name: "String"
        }
      },
      productId: {
        serializedName: "productId",
        type: {
          name: "String"
        }
      },
      licenseType: {
        serializedName: "licenseType",
        type: {
          name: "String"
        }
      },
      azureDefenderStatusLastUpdated: {
        serializedName: "azureDefenderStatusLastUpdated",
        type: {
          name: "DateTime"
        }
      },
      azureDefenderStatus: {
        serializedName: "azureDefenderStatus",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SqlServerInstance: msRest.CompositeMapper = {
  serializedName: "SqlServerInstance",
  type: {
    name: "Composite",
    className: "SqlServerInstance",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SqlServerInstanceProperties"
        }
      }
    }
  }
};

export const SqlServerInstanceUpdate: msRest.CompositeMapper = {
  serializedName: "SqlServerInstanceUpdate",
  type: {
    name: "Composite",
    className: "SqlServerInstanceUpdate",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ErrorResponseBody: msRest.CompositeMapper = {
  serializedName: "ErrorResponseBody",
  type: {
    name: "Composite",
    className: "ErrorResponseBody",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorResponseBody"
            }
          }
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorResponseBody"
        }
      }
    }
  }
};

export const ODataError: msRest.CompositeMapper = {
  serializedName: "ODataError",
  type: {
    name: "Composite",
    className: "ODataError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ODataError"
            }
          }
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SqlManagedInstanceListResult: msRest.CompositeMapper = {
  serializedName: "SqlManagedInstanceListResult",
  type: {
    name: "Composite",
    className: "SqlManagedInstanceListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlManagedInstance"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SqlServerInstanceListResult: msRest.CompositeMapper = {
  serializedName: "SqlServerInstanceListResult",
  type: {
    name: "Composite",
    className: "SqlServerInstanceListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlServerInstance"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PageOfDataControllerResource: msRest.CompositeMapper = {
  serializedName: "PageOfDataControllerResource",
  type: {
    name: "Composite",
    className: "PageOfDataControllerResource",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataControllerResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
