/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const acceptDateTime: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "acceptDateTime"
  ],
  mapper: {
    serializedName: "Accept-DateTime",
    type: {
      name: "DateTime"
    }
  }
};
export const acceptLanguage: coreHttp.OperationParameter = {
  parameterPath: "acceptLanguage",
  mapper: {
    serializedName: "accept-language",
    defaultValue: 'en-US',
    type: {
      name: "String"
    }
  }
};
export const fields: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "fields"
  ],
  mapper: {
    serializedName: "fields",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: coreHttp.QueryCollectionFormat.Csv
};
export const key0: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "key"
  ],
  mapper: {
    serializedName: "key",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: coreHttp.QueryCollectionFormat.Csv
};
export const key1: coreHttp.OperationURLParameter = {
  parameterPath: "key",
  mapper: {
    required: true,
    serializedName: "key",
    type: {
      name: "String"
    }
  }
};
export const label0: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "label"
  ],
  mapper: {
    serializedName: "label",
    constraints: {
      MaxItems: 5
    },
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: coreHttp.QueryCollectionFormat.Csv
};
export const label1: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "label"
  ],
  mapper: {
    serializedName: "label",
    defaultValue: '%00',
    type: {
      name: "String"
    }
  }
};
export const label2: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "label"
  ],
  mapper: {
    serializedName: "label",
    type: {
      name: "String"
    }
  }
};
export const name: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "name"
  ],
  mapper: {
    serializedName: "name",
    type: {
      name: "String"
    }
  }
};
export const nextPageLink: coreHttp.OperationURLParameter = {
  parameterPath: "nextPageLink",
  mapper: {
    required: true,
    serializedName: "nextLink",
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
