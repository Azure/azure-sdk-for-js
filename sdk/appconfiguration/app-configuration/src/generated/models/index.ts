/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/core-arm";
import * as coreHttp from "@azure/core-http";

export { BaseResource, CloudError };

/**
 * A configuration value
 */
export interface ConfigurationSetting {
  /**
   * Entity tag (etag) of the object
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly etag?: string;
  key?: string;
  label?: string;
  contentType?: string;
  value?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastModified?: Date;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly locked?: boolean;
  tags?: { [propertyName: string]: string };
}

/**
 * An interface representing Key.
 */
export interface Key {
  name: string;
}

/**
 * An interface representing Label.
 */
export interface Label {
  name: string;
}

/**
 * Optional Parameters.
 */
export interface ConfigurationClientListConfigurationSettingsOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Filter returned values based on their label. '*' can be used as wildcard in the beginning or
   * end of the filter
   */
  label?: string[];
  /**
   * Filter returned values based on their keys. '*' can be used as wildcard in the beginning or
   * end of the filter
   */
  key?: string[];
  /**
   * Obtain representation of the result related to past time.
   */
  acceptDateTime?: Date;
  /**
   * Specify which fields to return
   */
  fields?: string[];
}

/**
 * Optional Parameters.
 */
export interface ConfigurationClientGetConfigurationSettingOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Label of key to retreive. Default value: '%00'.
   */
  label?: string;
  /**
   * Obtain representation of the result related to past time.
   */
  acceptDateTime?: Date;
}

/**
 * Optional Parameters.
 */
export interface ConfigurationClientCreateOrUpdateConfigurationSettingOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Default value: '%00'.
   */
  label?: string;
}

/**
 * Optional Parameters.
 */
export interface ConfigurationClientDeleteConfigurationSettingOptionalParams extends coreHttp.RequestOptionsBase {
  label?: string;
}

/**
 * Optional Parameters.
 */
export interface ConfigurationClientListKeysOptionalParams extends coreHttp.RequestOptionsBase {
  name?: string;
  /**
   * Obtain representation of the result related to past time.
   */
  acceptDateTime?: Date;
}

/**
 * Optional Parameters.
 */
export interface ConfigurationClientListLabelsOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Obtain representation of the result related to past time.
   */
  acceptDateTime?: Date;
  /**
   * Specify which fields to return
   */
  fields?: string[];
  name?: string;
}

/**
 * Optional Parameters.
 */
export interface ConfigurationClientLockConfigurationSettingOptionalParams extends coreHttp.RequestOptionsBase {
  label?: string;
}

/**
 * Optional Parameters.
 */
export interface ConfigurationClientUnlockConfigurationSettingOptionalParams extends coreHttp.RequestOptionsBase {
  label?: string;
}

/**
 * Optional Parameters.
 */
export interface ConfigurationClientListRevisionsOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Filter returned values based on their label. '*' can be used as wildcard in the beginning or
   * end of the filter
   */
  label?: string[];
  /**
   * Filter returned values based on their keys. '*' can be used as wildcard in the beginning or
   * end of the filter
   */
  key?: string[];
  /**
   * Specify which fields to return
   */
  fields?: string[];
  /**
   * Obtain representation of the result related to past time.
   */
  acceptDateTime?: Date;
}

/**
 * Optional Parameters.
 */
export interface ConfigurationClientListConfigurationSettingsNextOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Obtain representation of the result related to past time.
   */
  acceptDateTime?: Date;
}

/**
 * Optional Parameters.
 */
export interface ConfigurationClientListRevisionsNextOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Obtain representation of the result related to past time.
   */
  acceptDateTime?: Date;
}

/**
 * An interface representing ConfigurationClientOptions.
 */
export interface ConfigurationClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * Defines headers for GetConfigurationSetting operation.
 */
export interface GetConfigurationSettingHeaders {
  /**
   * A UTC date/time value generated by the service the last time the resource was modified
   */
  lastModifiedHeader: string;
}

/**
 * @interface
 * An interface representing the ConfigurationSettingList.
 * @extends Array<ConfigurationSetting>
 */
export interface ConfigurationSettingList extends Array<ConfigurationSetting> {
  items?: ConfigurationSetting[];
}

/**
 * @interface
 * An interface representing the KeyList.
 * @extends Array<Key>
 */
export interface KeyList extends Array<Key> {
  items?: Key[];
}

/**
 * @interface
 * An interface representing the LabelList.
 * @extends Array<Label>
 */
export interface LabelList extends Array<Label> {
  items?: Label[];
}

/**
 * Contains response data for the listConfigurationSettings operation.
 */
export type ListConfigurationSettingsResponse = ConfigurationSettingList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConfigurationSettingList;
    };
};

/**
 * Contains response data for the getConfigurationSetting operation.
 */
export type GetConfigurationSettingResponse = ConfigurationSetting & GetConfigurationSettingHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetConfigurationSettingHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConfigurationSetting;
    };
};

/**
 * Contains response data for the createOrUpdateConfigurationSetting operation.
 */
export type CreateOrUpdateConfigurationSettingResponse = ConfigurationSetting & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConfigurationSetting;
    };
};

/**
 * Contains response data for the deleteConfigurationSetting operation.
 */
export type DeleteConfigurationSettingResponse = ConfigurationSetting & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConfigurationSetting;
    };
};

/**
 * Contains response data for the listKeys operation.
 */
export type ListKeysResponse = KeyList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: KeyList;
    };
};

/**
 * Contains response data for the listLabels operation.
 */
export type ListLabelsResponse = LabelList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LabelList;
    };
};

/**
 * Contains response data for the lockConfigurationSetting operation.
 */
export type LockConfigurationSettingResponse = ConfigurationSetting & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConfigurationSetting;
    };
};

/**
 * Contains response data for the unlockConfigurationSetting operation.
 */
export type UnlockConfigurationSettingResponse = ConfigurationSetting & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConfigurationSetting;
    };
};

/**
 * Contains response data for the listRevisions operation.
 */
export type ListRevisionsResponse = ConfigurationSettingList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConfigurationSettingList;
    };
};

/**
 * Contains response data for the listConfigurationSettingsNext operation.
 */
export type ListConfigurationSettingsNextResponse = ConfigurationSettingList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConfigurationSettingList;
    };
};

/**
 * Contains response data for the listRevisionsNext operation.
 */
export type ListRevisionsNextResponse = ConfigurationSettingList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConfigurationSettingList;
    };
};
