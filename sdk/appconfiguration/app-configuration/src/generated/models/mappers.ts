/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/core-arm";
import * as coreHttp from "@azure/core-http";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const ConfigurationSetting: coreHttp.CompositeMapper = {
  serializedName: "ConfigurationSetting",
  type: {
    name: "Composite",
    className: "ConfigurationSetting",
    modelProperties: {
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "content_type",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      lastModified: {
        readOnly: true,
        serializedName: "last_modified",
        type: {
          name: "DateTime"
        }
      },
      locked: {
        readOnly: true,
        serializedName: "locked",
        type: {
          name: "Boolean"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Key: coreHttp.CompositeMapper = {
  serializedName: "Key",
  type: {
    name: "Composite",
    className: "Key",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Label: coreHttp.CompositeMapper = {
  serializedName: "Label",
  type: {
    name: "Composite",
    className: "Label",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetConfigurationSettingHeaders: coreHttp.CompositeMapper = {
  serializedName: "getconfigurationsetting-headers",
  type: {
    name: "Composite",
    className: "GetConfigurationSettingHeaders",
    modelProperties: {
      lastModifiedHeader: {
        serializedName: "last-modified",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConfigurationSettingList: coreHttp.CompositeMapper = {
  serializedName: "ConfigurationSettingList",
  type: {
    name: "Composite",
    className: "ConfigurationSettingList",
    modelProperties: {
      items: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ConfigurationSetting"
            }
          }
        }
      }
    }
  }
};

export const KeyList: coreHttp.CompositeMapper = {
  serializedName: "KeyList",
  type: {
    name: "Composite",
    className: "KeyList",
    modelProperties: {
      items: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Key"
            }
          }
        }
      }
    }
  }
};

export const LabelList: coreHttp.CompositeMapper = {
  serializedName: "LabelList",
  type: {
    name: "Composite",
    className: "LabelList",
    modelProperties: {
      items: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Label"
            }
          }
        }
      }
    }
  }
};
