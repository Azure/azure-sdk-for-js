/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const acceptDatetime: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "acceptDatetime"
  ],
  mapper: {
    serializedName: "Accept-Datetime",
    type: {
      name: "String"
    }
  }
};
export const after: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "after"
  ],
  mapper: {
    serializedName: "After",
    type: {
      name: "String"
    }
  }
};
export const apiVersion: coreHttp.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    required: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};
export const ifMatch: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifNoneMatch: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const key0: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "key"
  ],
  mapper: {
    serializedName: "key",
    type: {
      name: "String"
    }
  }
};
export const key1: coreHttp.OperationURLParameter = {
  parameterPath: "key",
  mapper: {
    required: true,
    serializedName: "key",
    type: {
      name: "String"
    }
  }
};
export const label: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "label"
  ],
  mapper: {
    serializedName: "label",
    type: {
      name: "String"
    }
  }
};
export const name: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "name"
  ],
  mapper: {
    serializedName: "name",
    type: {
      name: "String"
    }
  }
};
export const select: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "select"
  ],
  mapper: {
    serializedName: "$Select",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: coreHttp.QueryCollectionFormat.Csv
};
export const syncToken: coreHttp.OperationParameter = {
  parameterPath: "syncToken",
  mapper: {
    serializedName: "Sync-Token",
    type: {
      name: "String"
    }
  }
};
