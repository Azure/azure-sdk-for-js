/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";
import * as coreHttpCompat from "@azure/core-http-compat";

/** The result of a list request. */
export interface KeyListResult {
  /** The collection value. */
  items?: Key[];
  /** The URI that can be used to request the next set of paged results. */
  nextLink?: string;
}

export interface Key {
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly name?: string;
}

/** Azure App Configuration error object. */
export interface ErrorModel {
  /** The type of the error. */
  type?: string;
  /** A brief summary of the error. */
  title?: string;
  /** The name of the parameter that resulted in the error. */
  name?: string;
  /** A detailed description of the error. */
  detail?: string;
  /** The HTTP status code that the error maps to. */
  status?: number;
}

/** The result of a list request. */
export interface KeyValueListResult {
  /** The collection value. */
  items?: KeyValue[];
  /** The URI that can be used to request the next set of paged results. */
  nextLink?: string;
}

export interface KeyValue {
  key: string;
  label?: string;
  contentType?: string;
  value?: string;
  lastModified?: Date;
  /** Dictionary of <string> */
  tags?: { [propertyName: string]: string };
  locked?: boolean;
  etag?: string;
}

/** The result of a list request. */
export interface LabelListResult {
  /** The collection value. */
  items?: Label[];
  /** The URI that can be used to request the next set of paged results. */
  nextLink?: string;
}

export interface Label {
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly name?: string;
}

/** Defines headers for AppConfiguration_getKeys operation. */
export interface AppConfigurationGetKeysHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
}

/** Defines headers for AppConfiguration_checkKeys operation. */
export interface AppConfigurationCheckKeysHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
}

/** Defines headers for AppConfiguration_getKeyValues operation. */
export interface AppConfigurationGetKeyValuesHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
}

/** Defines headers for AppConfiguration_checkKeyValues operation. */
export interface AppConfigurationCheckKeyValuesHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
}

/** Defines headers for AppConfiguration_getKeyValue operation. */
export interface AppConfigurationGetKeyValueHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
  /** An identifier representing the returned state of the resource. */
  eTag?: string;
  /** A UTC datetime that specifies the last time the resource was modified. */
  lastModified?: string;
}

/** Defines headers for AppConfiguration_putKeyValue operation. */
export interface AppConfigurationPutKeyValueHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
  /** An identifier representing the returned state of the resource. */
  eTag?: string;
}

/** Defines headers for AppConfiguration_deleteKeyValue operation. */
export interface AppConfigurationDeleteKeyValueHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
  /** An identifier representing the returned state of the resource. */
  eTag?: string;
}

/** Defines headers for AppConfiguration_checkKeyValue operation. */
export interface AppConfigurationCheckKeyValueHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
  /** An identifier representing the returned state of the resource. */
  eTag?: string;
  /** A UTC datetime that specifies the last time the resource was modified. */
  lastModified?: string;
}

/** Defines headers for AppConfiguration_getLabels operation. */
export interface AppConfigurationGetLabelsHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
}

/** Defines headers for AppConfiguration_checkLabels operation. */
export interface AppConfigurationCheckLabelsHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
}

/** Defines headers for AppConfiguration_putLock operation. */
export interface AppConfigurationPutLockHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
  /** An identifier representing the returned state of the resource. */
  eTag?: string;
}

/** Defines headers for AppConfiguration_deleteLock operation. */
export interface AppConfigurationDeleteLockHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
  /** An identifier representing the returned state of the resource. */
  eTag?: string;
}

/** Defines headers for AppConfiguration_getRevisions operation. */
export interface AppConfigurationGetRevisionsHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
}

/** Defines headers for AppConfiguration_checkRevisions operation. */
export interface AppConfigurationCheckRevisionsHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
}

/** Defines headers for AppConfiguration_getKeysNext operation. */
export interface AppConfigurationGetKeysNextHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
}

/** Defines headers for AppConfiguration_getKeyValuesNext operation. */
export interface AppConfigurationGetKeyValuesNextHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
}

/** Defines headers for AppConfiguration_getLabelsNext operation. */
export interface AppConfigurationGetLabelsNextHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
}

/** Defines headers for AppConfiguration_getRevisionsNext operation. */
export interface AppConfigurationGetRevisionsNextHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
}

/** Known values of {@link ApiVersion10} that the service accepts. */
export enum KnownApiVersion10 {
  /** Api Version '1.0' */
  One0 = "1.0"
}

/**
 * Defines values for ApiVersion10. \
 * {@link KnownApiVersion10} can be used interchangeably with ApiVersion10,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **1.0**: Api Version '1.0'
 */
export type ApiVersion10 = string;

/** Known values of {@link KeyValueFields} that the service accepts. */
export enum KnownKeyValueFields {
  Key = "key",
  Label = "label",
  ContentType = "content_type",
  Value = "value",
  LastModified = "last_modified",
  Tags = "tags",
  Locked = "locked",
  Etag = "etag"
}

/**
 * Defines values for KeyValueFields. \
 * {@link KnownKeyValueFields} can be used interchangeably with KeyValueFields,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **key** \
 * **label** \
 * **content_type** \
 * **value** \
 * **last_modified** \
 * **tags** \
 * **locked** \
 * **etag**
 */
export type KeyValueFields = string;

/** Known values of {@link LabelFields} that the service accepts. */
export enum KnownLabelFields {
  Name = "name"
}

/**
 * Defines values for LabelFields. \
 * {@link KnownLabelFields} can be used interchangeably with LabelFields,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **name**
 */
export type LabelFields = string;

/** Optional parameters. */
export interface GetKeysOptionalParams extends coreClient.OperationOptions {
  /** A filter for the name of the returned keys. */
  name?: string;
  /** Instructs the server to return elements that appear after the element referred to by the specified token. */
  after?: string;
  /** Requests the server to respond with the state of the resource at the specified time. */
  acceptDatetime?: string;
}

/** Contains response data for the getKeys operation. */
export type GetKeysResponse = AppConfigurationGetKeysHeaders & KeyListResult;

/** Optional parameters. */
export interface CheckKeysOptionalParams extends coreClient.OperationOptions {
  /** A filter for the name of the returned keys. */
  name?: string;
  /** Instructs the server to return elements that appear after the element referred to by the specified token. */
  after?: string;
  /** Requests the server to respond with the state of the resource at the specified time. */
  acceptDatetime?: string;
}

/** Contains response data for the checkKeys operation. */
export type CheckKeysResponse = AppConfigurationCheckKeysHeaders;

/** Optional parameters. */
export interface GetKeyValuesOptionalParams
  extends coreClient.OperationOptions {
  /** Instructs the server to return elements that appear after the element referred to by the specified token. */
  after?: string;
  /** Requests the server to respond with the state of the resource at the specified time. */
  acceptDatetime?: string;
  /** A filter used to match keys. */
  key?: string;
  /** A filter used to match labels */
  label?: string;
  /** Used to select what fields are present in the returned resource(s). */
  select?: KeyValueFields[];
}

/** Contains response data for the getKeyValues operation. */
export type GetKeyValuesResponse = AppConfigurationGetKeyValuesHeaders &
  KeyValueListResult;

/** Optional parameters. */
export interface CheckKeyValuesOptionalParams
  extends coreClient.OperationOptions {
  /** Instructs the server to return elements that appear after the element referred to by the specified token. */
  after?: string;
  /** Requests the server to respond with the state of the resource at the specified time. */
  acceptDatetime?: string;
  /** A filter used to match keys. */
  key?: string;
  /** A filter used to match labels */
  label?: string;
  /** Used to select what fields are present in the returned resource(s). */
  select?: KeyValueFields[];
}

/** Contains response data for the checkKeyValues operation. */
export type CheckKeyValuesResponse = AppConfigurationCheckKeyValuesHeaders;

/** Optional parameters. */
export interface GetKeyValueOptionalParams extends coreClient.OperationOptions {
  /** Requests the server to respond with the state of the resource at the specified time. */
  acceptDatetime?: string;
  /** The label of the key-value to retrieve. */
  label?: string;
  /** Used to select what fields are present in the returned resource(s). */
  select?: KeyValueFields[];
  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */
  ifMatch?: string;
  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */
  ifNoneMatch?: string;
}

/** Contains response data for the getKeyValue operation. */
export type GetKeyValueResponse = AppConfigurationGetKeyValueHeaders & KeyValue;

/** Optional parameters. */
export interface PutKeyValueOptionalParams extends coreClient.OperationOptions {
  /** The label of the key-value to create. */
  label?: string;
  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */
  ifMatch?: string;
  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */
  ifNoneMatch?: string;
  /** The key-value to create. */
  entity?: KeyValue;
}

/** Contains response data for the putKeyValue operation. */
export type PutKeyValueResponse = AppConfigurationPutKeyValueHeaders & KeyValue;

/** Optional parameters. */
export interface DeleteKeyValueOptionalParams
  extends coreClient.OperationOptions {
  /** The label of the key-value to delete. */
  label?: string;
  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */
  ifMatch?: string;
}

/** Contains response data for the deleteKeyValue operation. */
export type DeleteKeyValueResponse = AppConfigurationDeleteKeyValueHeaders &
  KeyValue;

/** Optional parameters. */
export interface CheckKeyValueOptionalParams
  extends coreClient.OperationOptions {
  /** Requests the server to respond with the state of the resource at the specified time. */
  acceptDatetime?: string;
  /** The label of the key-value to retrieve. */
  label?: string;
  /** Used to select what fields are present in the returned resource(s). */
  select?: KeyValueFields[];
  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */
  ifMatch?: string;
  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */
  ifNoneMatch?: string;
}

/** Contains response data for the checkKeyValue operation. */
export type CheckKeyValueResponse = AppConfigurationCheckKeyValueHeaders;

/** Optional parameters. */
export interface GetLabelsOptionalParams extends coreClient.OperationOptions {
  /** A filter for the name of the returned labels. */
  name?: string;
  /** Instructs the server to return elements that appear after the element referred to by the specified token. */
  after?: string;
  /** Requests the server to respond with the state of the resource at the specified time. */
  acceptDatetime?: string;
  /** Used to select what fields are present in the returned resource(s). */
  select?: LabelFields[];
}

/** Contains response data for the getLabels operation. */
export type GetLabelsResponse = AppConfigurationGetLabelsHeaders &
  LabelListResult;

/** Optional parameters. */
export interface CheckLabelsOptionalParams extends coreClient.OperationOptions {
  /** A filter for the name of the returned labels. */
  name?: string;
  /** Instructs the server to return elements that appear after the element referred to by the specified token. */
  after?: string;
  /** Requests the server to respond with the state of the resource at the specified time. */
  acceptDatetime?: string;
  /** Used to select what fields are present in the returned resource(s). */
  select?: LabelFields[];
}

/** Contains response data for the checkLabels operation. */
export type CheckLabelsResponse = AppConfigurationCheckLabelsHeaders;

/** Optional parameters. */
export interface PutLockOptionalParams extends coreClient.OperationOptions {
  /** The label, if any, of the key-value to lock. */
  label?: string;
  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */
  ifMatch?: string;
  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */
  ifNoneMatch?: string;
}

/** Contains response data for the putLock operation. */
export type PutLockResponse = AppConfigurationPutLockHeaders & KeyValue;

/** Optional parameters. */
export interface DeleteLockOptionalParams extends coreClient.OperationOptions {
  /** The label, if any, of the key-value to unlock. */
  label?: string;
  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */
  ifMatch?: string;
  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */
  ifNoneMatch?: string;
}

/** Contains response data for the deleteLock operation. */
export type DeleteLockResponse = AppConfigurationDeleteLockHeaders & KeyValue;

/** Optional parameters. */
export interface GetRevisionsOptionalParams
  extends coreClient.OperationOptions {
  /** Instructs the server to return elements that appear after the element referred to by the specified token. */
  after?: string;
  /** Requests the server to respond with the state of the resource at the specified time. */
  acceptDatetime?: string;
  /** A filter used to match keys. */
  key?: string;
  /** A filter used to match labels */
  label?: string;
  /** Used to select what fields are present in the returned resource(s). */
  select?: KeyValueFields[];
}

/** Contains response data for the getRevisions operation. */
export type GetRevisionsResponse = AppConfigurationGetRevisionsHeaders &
  KeyValueListResult;

/** Optional parameters. */
export interface CheckRevisionsOptionalParams
  extends coreClient.OperationOptions {
  /** Instructs the server to return elements that appear after the element referred to by the specified token. */
  after?: string;
  /** Requests the server to respond with the state of the resource at the specified time. */
  acceptDatetime?: string;
  /** A filter used to match keys. */
  key?: string;
  /** A filter used to match labels */
  label?: string;
  /** Used to select what fields are present in the returned resource(s). */
  select?: KeyValueFields[];
}

/** Contains response data for the checkRevisions operation. */
export type CheckRevisionsResponse = AppConfigurationCheckRevisionsHeaders;

/** Optional parameters. */
export interface GetKeysNextOptionalParams extends coreClient.OperationOptions {
  /** A filter for the name of the returned keys. */
  name?: string;
  /** Instructs the server to return elements that appear after the element referred to by the specified token. */
  after?: string;
  /** Requests the server to respond with the state of the resource at the specified time. */
  acceptDatetime?: string;
}

/** Contains response data for the getKeysNext operation. */
export type GetKeysNextResponse = AppConfigurationGetKeysNextHeaders &
  KeyListResult;

/** Optional parameters. */
export interface GetKeyValuesNextOptionalParams
  extends coreClient.OperationOptions {
  /** Instructs the server to return elements that appear after the element referred to by the specified token. */
  after?: string;
  /** Requests the server to respond with the state of the resource at the specified time. */
  acceptDatetime?: string;
  /** A filter used to match keys. */
  key?: string;
  /** A filter used to match labels */
  label?: string;
  /** Used to select what fields are present in the returned resource(s). */
  select?: KeyValueFields[];
}

/** Contains response data for the getKeyValuesNext operation. */
export type GetKeyValuesNextResponse = AppConfigurationGetKeyValuesNextHeaders &
  KeyValueListResult;

/** Optional parameters. */
export interface GetLabelsNextOptionalParams
  extends coreClient.OperationOptions {
  /** A filter for the name of the returned labels. */
  name?: string;
  /** Instructs the server to return elements that appear after the element referred to by the specified token. */
  after?: string;
  /** Requests the server to respond with the state of the resource at the specified time. */
  acceptDatetime?: string;
  /** Used to select what fields are present in the returned resource(s). */
  select?: LabelFields[];
}

/** Contains response data for the getLabelsNext operation. */
export type GetLabelsNextResponse = AppConfigurationGetLabelsNextHeaders &
  LabelListResult;

/** Optional parameters. */
export interface GetRevisionsNextOptionalParams
  extends coreClient.OperationOptions {
  /** Instructs the server to return elements that appear after the element referred to by the specified token. */
  after?: string;
  /** Requests the server to respond with the state of the resource at the specified time. */
  acceptDatetime?: string;
  /** A filter used to match keys. */
  key?: string;
  /** A filter used to match labels */
  label?: string;
  /** Used to select what fields are present in the returned resource(s). */
  select?: KeyValueFields[];
}

/** Contains response data for the getRevisionsNext operation. */
export type GetRevisionsNextResponse = AppConfigurationGetRevisionsNextHeaders &
  KeyValueListResult;

/** Optional parameters. */
export interface AppConfigurationOptionalParams
  extends coreHttpCompat.ExtendedServiceClientOptions {
  /** Used to guarantee real-time consistency between requests. */
  syncToken?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
