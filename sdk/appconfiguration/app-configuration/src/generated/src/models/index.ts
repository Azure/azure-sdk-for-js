/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { ServiceClientOptions } from "@azure/core-http";
import * as coreHttp from "@azure/core-http";

/**
 * An interface representing Key.
 */
export interface Key {
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
}

/**
 * An interface representing KeyValue.
 */
export interface KeyValue {
  key: string;
  label?: string;
  contentType?: string;
  value?: string;
  lastModified?: Date;
  tags?: { [propertyName: string]: string };
  locked?: boolean;
  etag?: string;
}

/**
 * An interface representing Label.
 */
export interface Label {
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
}

/**
 * Azure App Configuration error object.
 */
export interface ErrorModel {
  /**
   * The type of the error.
   */
  type?: string;
  /**
   * A brief summary of the error.
   */
  title?: string;
  /**
   * The name of the parameter that resulted in the error.
   */
  name?: string;
  /**
   * A detailed description of the error.
   */
  detail?: string;
  /**
   * The HTTP status code that the error maps to.
   */
  status?: number;
}

/**
 * The result of a list request.
 */
export interface KeyListResult {
  /**
   * The collection value.
   */
  items?: Key[];
  /**
   * The URI that can be used to request the next set of paged results.
   */
  nextLink?: string;
}

/**
 * The result of a list request.
 */
export interface KeyValueListResult {
  /**
   * The collection value.
   */
  items?: KeyValue[];
  /**
   * The URI that can be used to request the next set of paged results.
   */
  nextLink?: string;
}

/**
 * The result of a list request.
 */
export interface LabelListResult {
  /**
   * The collection value.
   */
  items?: Label[];
  /**
   * The URI that can be used to request the next set of paged results.
   */
  nextLink?: string;
}

/**
 * An interface representing AppConfigurationOptions.
 */
export interface AppConfigurationOptions extends ServiceClientOptions {
  /**
   * Used to guarantee real-time consistency between requests.
   */
  syncToken?: string;
  baseUri?: string;
}

/**
 * Optional Parameters.
 */
export interface AppConfigurationGetKeysOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * A filter for the name of the returned keys.
   */
  name?: string;
  /**
   * Instructs the server to return elements that appear after the element referred to by the
   * specified token.
   */
  after?: string;
  /**
   * Requests the server to respond with the state of the resource at the specified time.
   */
  acceptDatetime?: string;
}

/**
 * Optional Parameters.
 */
export interface AppConfigurationCheckKeysOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * A filter for the name of the returned keys.
   */
  name?: string;
  /**
   * Instructs the server to return elements that appear after the element referred to by the
   * specified token.
   */
  after?: string;
  /**
   * Requests the server to respond with the state of the resource at the specified time.
   */
  acceptDatetime?: string;
}

/**
 * Optional Parameters.
 */
export interface AppConfigurationGetKeyValuesOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * A filter used to match keys.
   */
  key?: string;
  /**
   * A filter used to match labels
   */
  label?: string;
  /**
   * Instructs the server to return elements that appear after the element referred to by the
   * specified token.
   */
  after?: string;
  /**
   * Requests the server to respond with the state of the resource at the specified time.
   */
  acceptDatetime?: string;
  /**
   * Used to select what fields are present in the returned resource(s).
   */
  select?: string[];
}

/**
 * Optional Parameters.
 */
export interface AppConfigurationCheckKeyValuesOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * A filter used to match keys.
   */
  key?: string;
  /**
   * A filter used to match labels
   */
  label?: string;
  /**
   * Instructs the server to return elements that appear after the element referred to by the
   * specified token.
   */
  after?: string;
  /**
   * Requests the server to respond with the state of the resource at the specified time.
   */
  acceptDatetime?: string;
  /**
   * Used to select what fields are present in the returned resource(s).
   */
  select?: string[];
}

/**
 * Optional Parameters.
 */
export interface AppConfigurationGetKeyValueOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * The label of the key-value to retrieve.
   */
  label?: string;
  /**
   * Requests the server to respond with the state of the resource at the specified time.
   */
  acceptDatetime?: string;
  /**
   * Used to perform an operation only if the targeted resource's etag matches the value provided.
   */
  ifMatch?: string;
  /**
   * Used to perform an operation only if the targeted resource's etag does not match the value
   * provided.
   */
  ifNoneMatch?: string;
  /**
   * Used to select what fields are present in the returned resource(s).
   */
  select?: string[];
}

/**
 * Optional Parameters.
 */
export interface AppConfigurationPutKeyValueOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * The label of the key-value to create.
   */
  label?: string;
  /**
   * The key-value to create.
   */
  entity?: KeyValue;
  /**
   * Used to perform an operation only if the targeted resource's etag matches the value provided.
   */
  ifMatch?: string;
  /**
   * Used to perform an operation only if the targeted resource's etag does not match the value
   * provided.
   */
  ifNoneMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface AppConfigurationDeleteKeyValueOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * The label of the key-value to delete.
   */
  label?: string;
  /**
   * Used to perform an operation only if the targeted resource's etag matches the value provided.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface AppConfigurationCheckKeyValueOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * The label of the key-value to retrieve.
   */
  label?: string;
  /**
   * Requests the server to respond with the state of the resource at the specified time.
   */
  acceptDatetime?: string;
  /**
   * Used to perform an operation only if the targeted resource's etag matches the value provided.
   */
  ifMatch?: string;
  /**
   * Used to perform an operation only if the targeted resource's etag does not match the value
   * provided.
   */
  ifNoneMatch?: string;
  /**
   * Used to select what fields are present in the returned resource(s).
   */
  select?: string[];
}

/**
 * Optional Parameters.
 */
export interface AppConfigurationGetLabelsOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * A filter for the name of the returned labels.
   */
  name?: string;
  /**
   * Instructs the server to return elements that appear after the element referred to by the
   * specified token.
   */
  after?: string;
  /**
   * Requests the server to respond with the state of the resource at the specified time.
   */
  acceptDatetime?: string;
  /**
   * Used to select what fields are present in the returned resource(s).
   */
  select?: string[];
}

/**
 * Optional Parameters.
 */
export interface AppConfigurationCheckLabelsOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * A filter for the name of the returned labels.
   */
  name?: string;
  /**
   * Instructs the server to return elements that appear after the element referred to by the
   * specified token.
   */
  after?: string;
  /**
   * Requests the server to respond with the state of the resource at the specified time.
   */
  acceptDatetime?: string;
  /**
   * Used to select what fields are present in the returned resource(s).
   */
  select?: string[];
}

/**
 * Optional Parameters.
 */
export interface AppConfigurationPutLockOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * The label, if any, of the key-value to lock.
   */
  label?: string;
  /**
   * Used to perform an operation only if the targeted resource's etag matches the value provided.
   */
  ifMatch?: string;
  /**
   * Used to perform an operation only if the targeted resource's etag does not match the value
   * provided.
   */
  ifNoneMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface AppConfigurationDeleteLockOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * The label, if any, of the key-value to unlock.
   */
  label?: string;
  /**
   * Used to perform an operation only if the targeted resource's etag matches the value provided.
   */
  ifMatch?: string;
  /**
   * Used to perform an operation only if the targeted resource's etag does not match the value
   * provided.
   */
  ifNoneMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface AppConfigurationGetRevisionsOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * A filter used to match keys.
   */
  key?: string;
  /**
   * A filter used to match labels
   */
  label?: string;
  /**
   * Instructs the server to return elements that appear after the element referred to by the
   * specified token.
   */
  after?: string;
  /**
   * Requests the server to respond with the state of the resource at the specified time.
   */
  acceptDatetime?: string;
  /**
   * Used to select what fields are present in the returned resource(s).
   */
  select?: string[];
}

/**
 * Optional Parameters.
 */
export interface AppConfigurationCheckRevisionsOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * A filter used to match keys.
   */
  key?: string;
  /**
   * A filter used to match labels
   */
  label?: string;
  /**
   * Instructs the server to return elements that appear after the element referred to by the
   * specified token.
   */
  after?: string;
  /**
   * Requests the server to respond with the state of the resource at the specified time.
   */
  acceptDatetime?: string;
  /**
   * Used to select what fields are present in the returned resource(s).
   */
  select?: string[];
}

/**
 * Defines headers for GetKeys operation.
 */
export interface GetKeysHeaders {
  /**
   * Enables real-time consistency between requests by providing the returned value in the next
   * request made to the server.
   */
  syncToken?: string;
}

/**
 * Defines headers for CheckKeys operation.
 */
export interface CheckKeysHeaders {
  /**
   * Enables real-time consistency between requests by providing the returned value in the next
   * request made to the server.
   */
  syncToken?: string;
}

/**
 * Defines headers for GetKeyValues operation.
 */
export interface GetKeyValuesHeaders {
  /**
   * Enables real-time consistency between requests by providing the returned value in the next
   * request made to the server.
   */
  syncToken?: string;
}

/**
 * Defines headers for CheckKeyValues operation.
 */
export interface CheckKeyValuesHeaders {
  /**
   * Enables real-time consistency between requests by providing the returned value in the next
   * request made to the server.
   */
  syncToken?: string;
}

/**
 * Defines headers for GetKeyValue operation.
 */
export interface GetKeyValueHeaders {
  /**
   * Enables real-time consistency between requests by providing the returned value in the next
   * request made to the server.
   */
  syncToken?: string;
  /**
   * An identifier representing the returned state of the resource.
   */
  eTag?: string;
  /**
   * A UTC datetime that specifies the last time the resource was modified.
   */
  lastModifiedHeader?: string;
}

/**
 * Defines headers for PutKeyValue operation.
 */
export interface PutKeyValueHeaders {
  /**
   * Enables real-time consistency between requests by providing the returned value in the next
   * request made to the server.
   */
  syncToken?: string;
  /**
   * An identifier representing the returned state of the resource.
   */
  eTag?: string;
}

/**
 * Defines headers for DeleteKeyValue operation.
 */
export interface DeleteKeyValueHeaders {
  /**
   * Enables real-time consistency between requests by providing the returned value in the next
   * request made to the server.
   */
  syncToken?: string;
  /**
   * An identifier representing the returned state of the resource.
   */
  eTag?: string;
}

/**
 * Defines headers for CheckKeyValue operation.
 */
export interface CheckKeyValueHeaders {
  /**
   * Enables real-time consistency between requests by providing the returned value in the next
   * request made to the server.
   */
  syncToken?: string;
  /**
   * An identifier representing the returned state of the resource.
   */
  eTag?: string;
  /**
   * A UTC datetime that specifies the last time the resource was modified.
   */
  lastModified?: string;
}

/**
 * Defines headers for GetLabels operation.
 */
export interface GetLabelsHeaders {
  /**
   * Enables real-time consistency between requests by providing the returned value in the next
   * request made to the server.
   */
  syncToken?: string;
}

/**
 * Defines headers for CheckLabels operation.
 */
export interface CheckLabelsHeaders {
  /**
   * Enables real-time consistency between requests by providing the returned value in the next
   * request made to the server.
   */
  syncToken?: string;
}

/**
 * Defines headers for PutLock operation.
 */
export interface PutLockHeaders {
  /**
   * Enables real-time consistency between requests by providing the returned value in the next
   * request made to the server.
   */
  syncToken?: string;
  /**
   * An identifier representing the returned state of the resource.
   */
  eTag?: string;
}

/**
 * Defines headers for DeleteLock operation.
 */
export interface DeleteLockHeaders {
  /**
   * Enables real-time consistency between requests by providing the returned value in the next
   * request made to the server.
   */
  syncToken?: string;
  /**
   * An identifier representing the returned state of the resource.
   */
  eTag?: string;
}

/**
 * Defines headers for GetRevisions operation.
 */
export interface GetRevisionsHeaders {
  /**
   * Enables real-time consistency between requests by providing the returned value in the next
   * request made to the server.
   */
  syncToken?: string;
}

/**
 * Defines headers for CheckRevisions operation.
 */
export interface CheckRevisionsHeaders {
  /**
   * Enables real-time consistency between requests by providing the returned value in the next
   * request made to the server.
   */
  syncToken?: string;
}

/**
 * Contains response data for the getKeys operation.
 */
export type GetKeysResponse = KeyListResult & GetKeysHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetKeysHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: KeyListResult;
    };
};

/**
 * Contains response data for the checkKeys operation.
 */
export type CheckKeysResponse = CheckKeysHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CheckKeysHeaders;
    };
};

/**
 * Contains response data for the getKeyValues operation.
 */
export type GetKeyValuesResponse = KeyValueListResult & GetKeyValuesHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetKeyValuesHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: KeyValueListResult;
    };
};

/**
 * Contains response data for the checkKeyValues operation.
 */
export type CheckKeyValuesResponse = CheckKeyValuesHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CheckKeyValuesHeaders;
    };
};

/**
 * Contains response data for the getKeyValue operation.
 */
export type GetKeyValueResponse = KeyValue & GetKeyValueHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetKeyValueHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: KeyValue;
    };
};

/**
 * Contains response data for the putKeyValue operation.
 */
export type PutKeyValueResponse = KeyValue & PutKeyValueHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: PutKeyValueHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: KeyValue;
    };
};

/**
 * Contains response data for the deleteKeyValue operation.
 */
export type DeleteKeyValueResponse = KeyValue & DeleteKeyValueHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DeleteKeyValueHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: KeyValue;
    };
};

/**
 * Contains response data for the checkKeyValue operation.
 */
export type CheckKeyValueResponse = CheckKeyValueHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CheckKeyValueHeaders;
    };
};

/**
 * Contains response data for the getLabels operation.
 */
export type GetLabelsResponse = LabelListResult & GetLabelsHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetLabelsHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LabelListResult;
    };
};

/**
 * Contains response data for the checkLabels operation.
 */
export type CheckLabelsResponse = CheckLabelsHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CheckLabelsHeaders;
    };
};

/**
 * Contains response data for the putLock operation.
 */
export type PutLockResponse = KeyValue & PutLockHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: PutLockHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: KeyValue;
    };
};

/**
 * Contains response data for the deleteLock operation.
 */
export type DeleteLockResponse = KeyValue & DeleteLockHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DeleteLockHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: KeyValue;
    };
};

/**
 * Contains response data for the getRevisions operation.
 */
export type GetRevisionsResponse = KeyValueListResult & GetRevisionsHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetRevisionsHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: KeyValueListResult;
    };
};

/**
 * Contains response data for the checkRevisions operation.
 */
export type CheckRevisionsResponse = CheckRevisionsHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CheckRevisionsHeaders;
    };
};
