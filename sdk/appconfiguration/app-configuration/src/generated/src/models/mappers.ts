/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";


export const Key: coreHttp.CompositeMapper = {
  serializedName: "Key",
  type: {
    name: "Composite",
    className: "Key",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const KeyValue: coreHttp.CompositeMapper = {
  serializedName: "KeyValue",
  type: {
    name: "Composite",
    className: "KeyValue",
    modelProperties: {
      key: {
        required: true,
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "content_type",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      lastModified: {
        serializedName: "last_modified",
        type: {
          name: "DateTime"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      locked: {
        serializedName: "locked",
        type: {
          name: "Boolean"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Label: coreHttp.CompositeMapper = {
  serializedName: "Label",
  type: {
    name: "Composite",
    className: "Label",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorModel: coreHttp.CompositeMapper = {
  serializedName: "Error",
  type: {
    name: "Composite",
    className: "ErrorModel",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      title: {
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      detail: {
        serializedName: "detail",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const KeyListResult: coreHttp.CompositeMapper = {
  serializedName: "KeyListResult",
  type: {
    name: "Composite",
    className: "KeyListResult",
    modelProperties: {
      items: {
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Key"
            }
          }
        }
      },
      nextLink: {
        serializedName: "@nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const KeyValueListResult: coreHttp.CompositeMapper = {
  serializedName: "KeyValueListResult",
  type: {
    name: "Composite",
    className: "KeyValueListResult",
    modelProperties: {
      items: {
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KeyValue"
            }
          }
        }
      },
      nextLink: {
        serializedName: "@nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LabelListResult: coreHttp.CompositeMapper = {
  serializedName: "LabelListResult",
  type: {
    name: "Composite",
    className: "LabelListResult",
    modelProperties: {
      items: {
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Label"
            }
          }
        }
      },
      nextLink: {
        serializedName: "@nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetKeysHeaders: coreHttp.CompositeMapper = {
  serializedName: "getkeys-headers",
  type: {
    name: "Composite",
    className: "GetKeysHeaders",
    modelProperties: {
      syncToken: {
        serializedName: "sync-token",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CheckKeysHeaders: coreHttp.CompositeMapper = {
  serializedName: "checkkeys-headers",
  type: {
    name: "Composite",
    className: "CheckKeysHeaders",
    modelProperties: {
      syncToken: {
        serializedName: "sync-token",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetKeyValuesHeaders: coreHttp.CompositeMapper = {
  serializedName: "getkeyvalues-headers",
  type: {
    name: "Composite",
    className: "GetKeyValuesHeaders",
    modelProperties: {
      syncToken: {
        serializedName: "sync-token",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CheckKeyValuesHeaders: coreHttp.CompositeMapper = {
  serializedName: "checkkeyvalues-headers",
  type: {
    name: "Composite",
    className: "CheckKeyValuesHeaders",
    modelProperties: {
      syncToken: {
        serializedName: "sync-token",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetKeyValueHeaders: coreHttp.CompositeMapper = {
  serializedName: "getkeyvalue-headers",
  type: {
    name: "Composite",
    className: "GetKeyValueHeaders",
    modelProperties: {
      syncToken: {
        serializedName: "sync-token",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      lastModifiedHeader: {
        serializedName: "last-modified",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PutKeyValueHeaders: coreHttp.CompositeMapper = {
  serializedName: "putkeyvalue-headers",
  type: {
    name: "Composite",
    className: "PutKeyValueHeaders",
    modelProperties: {
      syncToken: {
        serializedName: "sync-token",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeleteKeyValueHeaders: coreHttp.CompositeMapper = {
  serializedName: "deletekeyvalue-headers",
  type: {
    name: "Composite",
    className: "DeleteKeyValueHeaders",
    modelProperties: {
      syncToken: {
        serializedName: "sync-token",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CheckKeyValueHeaders: coreHttp.CompositeMapper = {
  serializedName: "checkkeyvalue-headers",
  type: {
    name: "Composite",
    className: "CheckKeyValueHeaders",
    modelProperties: {
      syncToken: {
        serializedName: "sync-token",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      lastModified: {
        serializedName: "last-modified",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetLabelsHeaders: coreHttp.CompositeMapper = {
  serializedName: "getlabels-headers",
  type: {
    name: "Composite",
    className: "GetLabelsHeaders",
    modelProperties: {
      syncToken: {
        serializedName: "sync-token",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CheckLabelsHeaders: coreHttp.CompositeMapper = {
  serializedName: "checklabels-headers",
  type: {
    name: "Composite",
    className: "CheckLabelsHeaders",
    modelProperties: {
      syncToken: {
        serializedName: "sync-token",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PutLockHeaders: coreHttp.CompositeMapper = {
  serializedName: "putlock-headers",
  type: {
    name: "Composite",
    className: "PutLockHeaders",
    modelProperties: {
      syncToken: {
        serializedName: "sync-token",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeleteLockHeaders: coreHttp.CompositeMapper = {
  serializedName: "deletelock-headers",
  type: {
    name: "Composite",
    className: "DeleteLockHeaders",
    modelProperties: {
      syncToken: {
        serializedName: "sync-token",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetRevisionsHeaders: coreHttp.CompositeMapper = {
  serializedName: "getrevisions-headers",
  type: {
    name: "Composite",
    className: "GetRevisionsHeaders",
    modelProperties: {
      syncToken: {
        serializedName: "sync-token",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CheckRevisionsHeaders: coreHttp.CompositeMapper = {
  serializedName: "checkrevisions-headers",
  type: {
    name: "Composite",
    className: "CheckRevisionsHeaders",
    modelProperties: {
      syncToken: {
        serializedName: "sync-token",
        type: {
          name: "String"
        }
      }
    }
  }
};
