/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** The result of a request to list configuration stores. */
export interface ConfigurationStoreListResult {
  /** The collection value. */
  value?: ConfigurationStore[];
  /** The URI that can be used to request the next set of paged results. */
  nextLink?: string;
}

/** An identity that can be associated with a resource. */
export interface ResourceIdentity {
  /** The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities. */
  type?: IdentityType;
  /** The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'. */
  userAssignedIdentities?: { [propertyName: string]: UserIdentity };
  /**
   * The principal id of the identity. This property will only be provided for a system-assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The tenant id associated with the resource's identity. This property will only be provided for a system-assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
}

/** A resource identity that is managed by the user of the service. */
export interface UserIdentity {
  /**
   * The principal ID of the user-assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The client ID of the user-assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clientId?: string;
}

/** The encryption settings for a configuration store. */
export interface EncryptionProperties {
  /** Key vault properties. */
  keyVaultProperties?: KeyVaultProperties;
}

/** Settings concerning key vault encryption for a configuration store. */
export interface KeyVaultProperties {
  /** The URI of the key vault key used to encrypt data. */
  keyIdentifier?: string;
  /** The client id of the identity which will be used to access key vault. */
  identityClientId?: string;
}

/** A reference to a related private endpoint connection. */
export interface PrivateEndpointConnectionReference {
  /**
   * The resource ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The provisioning status of the private endpoint connection.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** The resource of private endpoint. */
  privateEndpoint?: PrivateEndpoint;
  /** A collection of information about the state of the connection between service consumer and provider. */
  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;
}

/** Private endpoint which a connection belongs to. */
export interface PrivateEndpoint {
  /** The resource Id for private endpoint */
  id?: string;
}

/** The state of a private link service connection. */
export interface PrivateLinkServiceConnectionState {
  /** The private link service connection status. */
  status?: ConnectionStatus;
  /** The private link service connection description. */
  description?: string;
  /**
   * Any action that is required beyond basic workflow (approve/ reject/ disconnect)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionsRequired?: ActionsRequired;
}

/** Describes a configuration store SKU. */
export interface Sku {
  /** The SKU name of the configuration store. */
  name: string;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message. */
export interface ErrorResponse {
  /** The details of the error. */
  error?: ErrorDetails;
}

/** The details of the error. */
export interface ErrorDetails {
  /**
   * Error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * Error message indicating why the operation failed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** The parameters for updating a configuration store. */
export interface ConfigurationStoreUpdateParameters {
  /** The managed identity information for the configuration store. */
  identity?: ResourceIdentity;
  /** The SKU of the configuration store. */
  sku?: Sku;
  /** The ARM resource tags. */
  tags?: { [propertyName: string]: string };
  /** The encryption settings of the configuration store. */
  encryption?: EncryptionProperties;
  /** Disables all authentication methods other than AAD authentication. */
  disableLocalAuth?: boolean;
  /** Control permission for data plane traffic coming from public networks while private endpoint is enabled. */
  publicNetworkAccess?: PublicNetworkAccess;
  /** Property specifying whether protection against purge is enabled for this configuration store. */
  enablePurgeProtection?: boolean;
}

/** Parameters used for checking whether a resource name is available. */
export interface CheckNameAvailabilityParameters {
  /** The name to check for availability. */
  name: string;
  /** The resource type to check for name availability. */
  type: ConfigurationResourceType;
}

/** The result of a request to check the availability of a resource name. */
export interface NameAvailabilityStatus {
  /**
   * The value indicating whether the resource name is available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nameAvailable?: boolean;
  /**
   * If any, the error message that provides more detail for the reason that the name is not available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * If any, the reason that the name is not available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reason?: string;
}

/** The result of a request to list API keys. */
export interface ApiKeyListResult {
  /** The collection value. */
  value?: ApiKey[];
  /** The URI that can be used to request the next set of paged results. */
  nextLink?: string;
}

/** An API key used for authenticating with a configuration store endpoint. */
export interface ApiKey {
  /**
   * The key ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * A name for the key describing its usage.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The value of the key that is used for authentication purposes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: string;
  /**
   * A connection string that can be used by supporting clients for authentication.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly connectionString?: string;
  /**
   * The last time any of the key's properties were modified.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastModified?: Date;
  /**
   * Whether this key can only be used for read operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly readOnly?: boolean;
}

/** The parameters used to regenerate an API key. */
export interface RegenerateKeyParameters {
  /** The id of the key to regenerate. */
  id?: string;
}

/** The result of a request to list configuration store operations. */
export interface OperationDefinitionListResult {
  /** The collection value. */
  value?: OperationDefinition[];
  /** The URI that can be used to request the next set of paged results. */
  nextLink?: string;
}

/** The definition of a configuration store operation. */
export interface OperationDefinition {
  /** Operation name: {provider}/{resource}/{operation}. */
  name?: string;
  /** Indicates whether the operation is a data action */
  isDataAction?: boolean;
  /** The display information for the configuration store operation. */
  display?: OperationDefinitionDisplay;
  /** Origin of the operation */
  origin?: string;
  /** Properties of the operation */
  properties?: OperationProperties;
}

/** The display information for a configuration store operation. */
export interface OperationDefinitionDisplay {
  /**
   * The resource provider name: Microsoft App Configuration."
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /** The resource on which the operation is performed. */
  resource?: string;
  /** The operation that users can perform. */
  operation?: string;
  /** The description for the operation. */
  description?: string;
}

/** Extra Operation properties */
export interface OperationProperties {
  /** Service specifications of the operation */
  serviceSpecification?: ServiceSpecification;
}

/** Service specification payload */
export interface ServiceSpecification {
  /** Specifications of the Log for Azure Monitoring */
  logSpecifications?: LogSpecification[];
  /** Specifications of the Metrics for Azure Monitoring */
  metricSpecifications?: MetricSpecification[];
}

/** Specifications of the Log for Azure Monitoring */
export interface LogSpecification {
  /** Name of the log */
  name?: string;
  /** Localized friendly display name of the log */
  displayName?: string;
  /** Blob duration of the log */
  blobDuration?: string;
}

/** Specifications of the Metrics for Azure Monitoring */
export interface MetricSpecification {
  /** Name of the metric */
  name?: string;
  /** Localized friendly display name of the metric */
  displayName?: string;
  /** Localized friendly description of the metric */
  displayDescription?: string;
  /** Unit that makes sense for the metric */
  unit?: string;
  /** Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count. */
  aggregationType?: string;
  /** Internal metric name. */
  internalMetricName?: string;
  /** Dimensions of the metric */
  dimensions?: MetricDimension[];
  /** Optional. If set to true, then zero will be returned for time duration where no metric is emitted/published. */
  fillGapWithZero?: boolean;
}

/** Specifications of the Dimension of metrics */
export interface MetricDimension {
  /** Name of the dimension */
  name?: string;
  /** Localized friendly display name of the dimension */
  displayName?: string;
  /** Internal name of the dimension. */
  internalName?: string;
}

/** A list of private endpoint connections */
export interface PrivateEndpointConnectionListResult {
  /** The collection value. */
  value?: PrivateEndpointConnection[];
  /** The URI that can be used to request the next set of paged results. */
  nextLink?: string;
}

/** A private endpoint connection */
export interface PrivateEndpointConnection {
  /**
   * The resource ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The provisioning status of the private endpoint connection.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** The resource of private endpoint. */
  privateEndpoint?: PrivateEndpoint;
  /** A collection of information about the state of the connection between service consumer and provider. */
  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;
}

/** A list of private link resources. */
export interface PrivateLinkResourceListResult {
  /** The collection value. */
  value?: PrivateLinkResource[];
  /** The URI that can be used to request the next set of paged results. */
  nextLink?: string;
}

/** A resource that supports private link capabilities. */
export interface PrivateLinkResource {
  /**
   * The resource ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The private link resource group id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly groupId?: string;
  /**
   * The private link resource required member names.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly requiredMembers?: string[];
  /**
   * The list of required DNS zone names of the private link resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly requiredZoneNames?: string[];
}

/** The key-value resource along with all resource properties. */
export interface KeyValue {
  /**
   * The resource ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The primary identifier of a key-value.
   * The key is used in unison with the label to uniquely identify a key-value.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly key?: string;
  /**
   * A value used to group key-values.
   * The label is used in unison with the key to uniquely identify a key-value.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly label?: string;
  /** The value of the key-value. */
  value?: string;
  /**
   * The content type of the key-value's value.
   * Providing a proper content-type can enable transformations of values when they are retrieved by applications.
   */
  contentType?: string;
  /**
   * An ETag indicating the state of a key-value within a configuration store.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly eTag?: string;
  /**
   * The last time a modifying operation was performed on the given key-value.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastModified?: Date;
  /**
   * A value indicating whether the key-value is locked.
   * A locked key-value may not be modified until it is unlocked.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly locked?: boolean;
  /** A dictionary of tags that can help identify what a key-value may be applicable for. */
  tags?: { [propertyName: string]: string };
}

/** List of deleted configuration stores */
export interface DeletedConfigurationStoreListResult {
  /** The list of deleted configuration store. */
  value?: DeletedConfigurationStore[];
  /** The URL to get the next set of deleted configuration stores. */
  nextLink?: string;
}

/** Deleted configuration store information with extended details. */
export interface DeletedConfigurationStore {
  /**
   * The resource ID for the deleted configuration store.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the configuration store.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The resource type of the configuration store.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The resource id of the original configuration store.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly configurationStoreId?: string;
  /**
   * The location of the original configuration store.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly location?: string;
  /**
   * The deleted date.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly deletionDate?: Date;
  /**
   * The scheduled purged date.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly scheduledPurgeDate?: Date;
  /**
   * Tags of the original configuration store.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tags?: { [propertyName: string]: string };
  /**
   * Purge protection status of the original configuration store.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly purgeProtectionEnabled?: boolean;
}

/** The result of a request to list replicas. */
export interface ReplicaListResult {
  /** The collection value. */
  value?: Replica[];
  /** The URI that can be used to request the next set of paged results. */
  nextLink?: string;
}

/** The replica resource. */
export interface Replica {
  /**
   * The resource ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the replica.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** The location of the replica. */
  location?: string;
  /**
   * Resource system metadata.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /**
   * The URI of the replica where the replica API will be available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endpoint?: string;
  /**
   * The provisioning state of the replica.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ReplicaProvisioningState;
}

/** The result of a request to list key-values. */
export interface KeyValueListResult {
  /** The collection value. */
  value?: KeyValue[];
  /** The URI that can be used to request the next set of paged results. */
  nextLink?: string;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** The configuration store along with all resource properties. The Configuration Store will have all information to begin utilizing it. */
export interface ConfigurationStore extends TrackedResource {
  /** The managed identity information, if configured. */
  identity?: ResourceIdentity;
  /** The sku of the configuration store. */
  sku: Sku;
  /**
   * Resource system metadata.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /**
   * The provisioning state of the configuration store.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The creation date of configuration store.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creationDate?: Date;
  /**
   * The DNS endpoint where the configuration store API will be available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endpoint?: string;
  /** The encryption settings of the configuration store. */
  encryption?: EncryptionProperties;
  /**
   * The list of private endpoint connections that are set up for this resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateEndpointConnections?: PrivateEndpointConnectionReference[];
  /** Control permission for data plane traffic coming from public networks while private endpoint is enabled. */
  publicNetworkAccess?: PublicNetworkAccess;
  /** Disables all authentication methods other than AAD authentication. */
  disableLocalAuth?: boolean;
  /** The amount of time in days that the configuration store will be retained when it is soft deleted. */
  softDeleteRetentionInDays?: number;
  /** Property specifying whether protection against purge is enabled for this configuration store. */
  enablePurgeProtection?: boolean;
  /** Indicates whether the configuration store need to be recovered. */
  createMode?: CreateMode;
}

/** Defines headers for Replicas_delete operation. */
export interface ReplicasDeleteHeaders {
  /** URL to query for status of the operation. */
  azureAsyncOperation?: string;
}

/** Known values of {@link IdentityType} that the service accepts. */
export enum KnownIdentityType {
  /** None */
  None = "None",
  /** SystemAssigned */
  SystemAssigned = "SystemAssigned",
  /** UserAssigned */
  UserAssigned = "UserAssigned",
  /** SystemAssignedUserAssigned */
  SystemAssignedUserAssigned = "SystemAssigned, UserAssigned"
}

/**
 * Defines values for IdentityType. \
 * {@link KnownIdentityType} can be used interchangeably with IdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **SystemAssigned** \
 * **UserAssigned** \
 * **SystemAssigned, UserAssigned**
 */
export type IdentityType = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Creating */
  Creating = "Creating",
  /** Updating */
  Updating = "Updating",
  /** Deleting */
  Deleting = "Deleting",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **Updating** \
 * **Deleting** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled**
 */
export type ProvisioningState = string;

/** Known values of {@link ConnectionStatus} that the service accepts. */
export enum KnownConnectionStatus {
  /** Pending */
  Pending = "Pending",
  /** Approved */
  Approved = "Approved",
  /** Rejected */
  Rejected = "Rejected",
  /** Disconnected */
  Disconnected = "Disconnected"
}

/**
 * Defines values for ConnectionStatus. \
 * {@link KnownConnectionStatus} can be used interchangeably with ConnectionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Approved** \
 * **Rejected** \
 * **Disconnected**
 */
export type ConnectionStatus = string;

/** Known values of {@link ActionsRequired} that the service accepts. */
export enum KnownActionsRequired {
  /** None */
  None = "None",
  /** Recreate */
  Recreate = "Recreate"
}

/**
 * Defines values for ActionsRequired. \
 * {@link KnownActionsRequired} can be used interchangeably with ActionsRequired,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **Recreate**
 */
export type ActionsRequired = string;

/** Known values of {@link PublicNetworkAccess} that the service accepts. */
export enum KnownPublicNetworkAccess {
  /** Enabled */
  Enabled = "Enabled",
  /** Disabled */
  Disabled = "Disabled"
}

/**
 * Defines values for PublicNetworkAccess. \
 * {@link KnownPublicNetworkAccess} can be used interchangeably with PublicNetworkAccess,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export type PublicNetworkAccess = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link ConfigurationResourceType} that the service accepts. */
export enum KnownConfigurationResourceType {
  /** MicrosoftAppConfigurationConfigurationStores */
  MicrosoftAppConfigurationConfigurationStores = "Microsoft.AppConfiguration/configurationStores"
}

/**
 * Defines values for ConfigurationResourceType. \
 * {@link KnownConfigurationResourceType} can be used interchangeably with ConfigurationResourceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Microsoft.AppConfiguration\/configurationStores**
 */
export type ConfigurationResourceType = string;

/** Known values of {@link ReplicaProvisioningState} that the service accepts. */
export enum KnownReplicaProvisioningState {
  /** Creating */
  Creating = "Creating",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Deleting */
  Deleting = "Deleting",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled"
}

/**
 * Defines values for ReplicaProvisioningState. \
 * {@link KnownReplicaProvisioningState} can be used interchangeably with ReplicaProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **Succeeded** \
 * **Deleting** \
 * **Failed** \
 * **Canceled**
 */
export type ReplicaProvisioningState = string;
/** Defines values for CreateMode. */
export type CreateMode = "Recover" | "Default";

/** Optional parameters. */
export interface ConfigurationStoresListOptionalParams
  extends coreClient.OperationOptions {
  /** A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */
  skipToken?: string;
}

/** Contains response data for the list operation. */
export type ConfigurationStoresListResponse = ConfigurationStoreListResult;

/** Optional parameters. */
export interface ConfigurationStoresListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {
  /** A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */
  skipToken?: string;
}

/** Contains response data for the listByResourceGroup operation. */
export type ConfigurationStoresListByResourceGroupResponse = ConfigurationStoreListResult;

/** Optional parameters. */
export interface ConfigurationStoresGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ConfigurationStoresGetResponse = ConfigurationStore;

/** Optional parameters. */
export interface ConfigurationStoresCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ConfigurationStoresCreateResponse = ConfigurationStore;

/** Optional parameters. */
export interface ConfigurationStoresDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ConfigurationStoresUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type ConfigurationStoresUpdateResponse = ConfigurationStore;

/** Optional parameters. */
export interface ConfigurationStoresListKeysOptionalParams
  extends coreClient.OperationOptions {
  /** A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */
  skipToken?: string;
}

/** Contains response data for the listKeys operation. */
export type ConfigurationStoresListKeysResponse = ApiKeyListResult;

/** Optional parameters. */
export interface ConfigurationStoresRegenerateKeyOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the regenerateKey operation. */
export type ConfigurationStoresRegenerateKeyResponse = ApiKey;

/** Optional parameters. */
export interface ConfigurationStoresListDeletedOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listDeleted operation. */
export type ConfigurationStoresListDeletedResponse = DeletedConfigurationStoreListResult;

/** Optional parameters. */
export interface ConfigurationStoresGetDeletedOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getDeleted operation. */
export type ConfigurationStoresGetDeletedResponse = DeletedConfigurationStore;

/** Optional parameters. */
export interface ConfigurationStoresPurgeDeletedOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ConfigurationStoresListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ConfigurationStoresListNextResponse = ConfigurationStoreListResult;

/** Optional parameters. */
export interface ConfigurationStoresListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type ConfigurationStoresListByResourceGroupNextResponse = ConfigurationStoreListResult;

/** Optional parameters. */
export interface ConfigurationStoresListKeysNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listKeysNext operation. */
export type ConfigurationStoresListKeysNextResponse = ApiKeyListResult;

/** Optional parameters. */
export interface ConfigurationStoresListDeletedNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listDeletedNext operation. */
export type ConfigurationStoresListDeletedNextResponse = DeletedConfigurationStoreListResult;

/** Optional parameters. */
export interface OperationsCheckNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkNameAvailability operation. */
export type OperationsCheckNameAvailabilityResponse = NameAvailabilityStatus;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {
  /** A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */
  skipToken?: string;
}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationDefinitionListResult;

/** Optional parameters. */
export interface OperationsRegionalCheckNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the regionalCheckNameAvailability operation. */
export type OperationsRegionalCheckNameAvailabilityResponse = NameAvailabilityStatus;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationDefinitionListResult;

/** Optional parameters. */
export interface PrivateEndpointConnectionsListByConfigurationStoreOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByConfigurationStore operation. */
export type PrivateEndpointConnectionsListByConfigurationStoreResponse = PrivateEndpointConnectionListResult;

/** Optional parameters. */
export interface PrivateEndpointConnectionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;

/** Optional parameters. */
export interface PrivateEndpointConnectionsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type PrivateEndpointConnectionsCreateOrUpdateResponse = PrivateEndpointConnection;

/** Optional parameters. */
export interface PrivateEndpointConnectionsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface PrivateEndpointConnectionsListByConfigurationStoreNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByConfigurationStoreNext operation. */
export type PrivateEndpointConnectionsListByConfigurationStoreNextResponse = PrivateEndpointConnectionListResult;

/** Optional parameters. */
export interface PrivateLinkResourcesListByConfigurationStoreOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByConfigurationStore operation. */
export type PrivateLinkResourcesListByConfigurationStoreResponse = PrivateLinkResourceListResult;

/** Optional parameters. */
export interface PrivateLinkResourcesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PrivateLinkResourcesGetResponse = PrivateLinkResource;

/** Optional parameters. */
export interface PrivateLinkResourcesListByConfigurationStoreNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByConfigurationStoreNext operation. */
export type PrivateLinkResourcesListByConfigurationStoreNextResponse = PrivateLinkResourceListResult;

/** Optional parameters. */
export interface KeyValuesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type KeyValuesGetResponse = KeyValue;

/** Optional parameters. */
export interface KeyValuesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** The parameters for creating a key-value. */
  keyValueParameters?: KeyValue;
}

/** Contains response data for the createOrUpdate operation. */
export type KeyValuesCreateOrUpdateResponse = KeyValue;

/** Optional parameters. */
export interface KeyValuesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ReplicasListByConfigurationStoreOptionalParams
  extends coreClient.OperationOptions {
  /** A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */
  skipToken?: string;
}

/** Contains response data for the listByConfigurationStore operation. */
export type ReplicasListByConfigurationStoreResponse = ReplicaListResult;

/** Optional parameters. */
export interface ReplicasGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ReplicasGetResponse = Replica;

/** Optional parameters. */
export interface ReplicasCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ReplicasCreateResponse = Replica;

/** Optional parameters. */
export interface ReplicasDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ReplicasListByConfigurationStoreNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByConfigurationStoreNext operation. */
export type ReplicasListByConfigurationStoreNextResponse = ReplicaListResult;

/** Optional parameters. */
export interface AppConfigurationManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
