/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

export interface ManagedGrafanaListResponse {
  value?: ManagedGrafana[];
  nextLink?: string;
}

/** The grafana resource type. */
export interface ManagedGrafana {
  /**
   * ARM id of the grafana resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Name of the grafana resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the grafana resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** The Sku of the grafana resource. */
  sku?: ResourceSku;
  /** Properties specific to the grafana resource. */
  properties?: ManagedGrafanaProperties;
  /** The managed identity of the grafana resource. */
  identity?: ManagedServiceIdentity;
  /**
   * The system meta data relating to this grafana resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** The tags for grafana resource. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the grafana resource lives */
  location?: string;
}

export interface ResourceSku {
  name: string;
}

/** Properties specific to the grafana resource. */
export interface ManagedGrafanaProperties {
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The Grafana software version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly grafanaVersion?: string;
  /**
   * The endpoint of the Grafana instance.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endpoint?: string;
  /** Indicate the state for enable or disable traffic over the public interface. */
  publicNetworkAccess?: PublicNetworkAccess;
  /** The zone redundancy setting of the Grafana instance. */
  zoneRedundancy?: ZoneRedundancy;
  /** The api key setting of the Grafana instance. */
  apiKey?: ApiKey;
  /** Whether a Grafana instance uses deterministic outbound IPs. */
  deterministicOutboundIP?: DeterministicOutboundIP;
  /**
   * List of outbound IPs if deterministicOutboundIP is enabled.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly outboundIPs?: string[];
  /**
   * The private endpoint connections of the Grafana instance.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateEndpointConnections?: PrivateEndpointConnection[];
  /** Scope for dns deterministic name hash calculation. */
  autoGeneratedDomainNameLabelScope?: AutoGeneratedDomainNameLabelScope;
  /** GrafanaIntegrations is a bundled observability experience (e.g. pre-configured data source, tailored Grafana dashboards, alerting defaults) for common monitoring scenarios. */
  grafanaIntegrations?: GrafanaIntegrations;
  /** Enterprise settings of a Grafana instance */
  enterpriseConfigurations?: EnterpriseConfigurations;
  /** Server configurations of a Grafana instance */
  grafanaConfigurations?: GrafanaConfigurations;
  /** Installed plugin list of the Grafana instance. Key is plugin id, value is plugin definition. */
  grafanaPlugins?: { [propertyName: string]: GrafanaPlugin };
  /** The major Grafana software version to target. */
  grafanaMajorVersion?: string;
}

/** The Private Endpoint resource. */
export interface PrivateEndpoint {
  /**
   * The ARM identifier for Private Endpoint
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
}

/** A collection of information about the state of the connection between service consumer and provider. */
export interface PrivateLinkServiceConnectionState {
  /** Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service. */
  status?: PrivateEndpointServiceConnectionStatus;
  /** The reason for approval/rejection of the connection. */
  description?: string;
  /** A message indicating if changes on the service provider require any updates on the consumer. */
  actionsRequired?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** GrafanaIntegrations is a bundled observability experience (e.g. pre-configured data source, tailored Grafana dashboards, alerting defaults) for common monitoring scenarios. */
export interface GrafanaIntegrations {
  azureMonitorWorkspaceIntegrations?: AzureMonitorWorkspaceIntegration[];
}

/** Integrations for Azure Monitor Workspace. */
export interface AzureMonitorWorkspaceIntegration {
  /** The resource Id of the connected Azure Monitor Workspace. */
  azureMonitorWorkspaceResourceId?: string;
}

/** Enterprise settings of a Grafana instance */
export interface EnterpriseConfigurations {
  /** The Plan Id of the Azure Marketplace subscription for the Enterprise plugins */
  marketplacePlanId?: string;
  /** The AutoRenew setting of the Enterprise subscription */
  marketplaceAutoRenew?: MarketplaceAutoRenew;
}

/** Server configurations of a Grafana instance */
export interface GrafanaConfigurations {
  /**
   * Email server settings.
   * https://grafana.com/docs/grafana/v9.0/setup-grafana/configure-grafana/#smtp
   */
  smtp?: Smtp;
}

/**
 * Email server settings.
 * https://grafana.com/docs/grafana/v9.0/setup-grafana/configure-grafana/#smtp
 */
export interface Smtp {
  /** Enable this to allow Grafana to send email. Default is false */
  enabled?: boolean;
  /** SMTP server hostname with port, e.g. test.email.net:587 */
  host?: string;
  /** User of SMTP auth */
  user?: string;
  /** Password of SMTP auth. If the password contains # or ;, then you have to wrap it with triple quotes */
  password?: string;
  /**
   * Address used when sending out emails
   * https://pkg.go.dev/net/mail#Address
   */
  fromAddress?: string;
  /**
   * Name to be used when sending out emails. Default is "Azure Managed Grafana Notification"
   * https://pkg.go.dev/net/mail#Address
   */
  fromName?: string;
  /**
   * The StartTLSPolicy setting of the SMTP configuration
   * https://pkg.go.dev/github.com/go-mail/mail#StartTLSPolicy
   */
  startTLSPolicy?: StartTLSPolicy;
  /**
   * Verify SSL for SMTP server. Default is false
   * https://pkg.go.dev/crypto/tls#Config
   */
  skipVerify?: boolean;
}

/** Plugin of Grafana */
export interface GrafanaPlugin {
  /**
   * Grafana plugin id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly pluginId?: string;
}

/** Managed service identity (system assigned and/or user assigned identities) */
export interface ManagedServiceIdentity {
  /**
   * The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed). */
  type: ManagedServiceIdentityType;
  /** The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests. */
  userAssignedIdentities?: { [propertyName: string]: UserAssignedIdentity };
}

/** User assigned identity properties */
export interface UserAssignedIdentity {
  /**
   * The principal ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The client ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clientId?: string;
}

/** The parameters for a PATCH request to a grafana resource. */
export interface ManagedGrafanaUpdateParameters {
  sku?: ResourceSku;
  /** The managed identity of the grafana resource. */
  identity?: ManagedServiceIdentity;
  /** The new tags of the grafana resource. */
  tags?: { [propertyName: string]: string };
  /** Properties specific to the managed grafana resource. */
  properties?: ManagedGrafanaPropertiesUpdateParameters;
}

/** The properties parameters for a PATCH request to a grafana resource. */
export interface ManagedGrafanaPropertiesUpdateParameters {
  /** The zone redundancy setting of the Grafana instance. */
  zoneRedundancy?: ZoneRedundancy;
  /** The api key setting of the Grafana instance. */
  apiKey?: ApiKey;
  /** Whether a Grafana instance uses deterministic outbound IPs. */
  deterministicOutboundIP?: DeterministicOutboundIP;
  /** Indicate the state for enable or disable traffic over the public interface. */
  publicNetworkAccess?: PublicNetworkAccess;
  /** GrafanaIntegrations is a bundled observability experience (e.g. pre-configured data source, tailored Grafana dashboards, alerting defaults) for common monitoring scenarios. */
  grafanaIntegrations?: GrafanaIntegrations;
  /** Enterprise settings of a Grafana instance */
  enterpriseConfigurations?: EnterpriseConfigurations;
  /** Server configurations of a Grafana instance */
  grafanaConfigurations?: GrafanaConfigurations;
  /** Update of Grafana plugin. Key is plugin id, value is plugin definition. If plugin definition is null, plugin with given plugin id will be removed. Otherwise, given plugin will be installed. */
  grafanaPlugins?: { [propertyName: string]: GrafanaPlugin };
  /** The major Grafana software version to target. */
  grafanaMajorVersion?: string;
}

/** List of private endpoint connection associated with the specified storage account */
export interface PrivateEndpointConnectionListResult {
  /** Array of private endpoint connections */
  value?: PrivateEndpointConnection[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** A list of private link resources */
export interface PrivateLinkResourceListResult {
  /** Array of private link resources */
  value?: PrivateLinkResource[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Enterprise details of a Grafana instance */
export interface EnterpriseDetails {
  /** SaaS subscription details of a Grafana instance */
  saasSubscriptionDetails?: SaasSubscriptionDetails;
  /** The allocation details of the per subscription free trial slot of the subscription. */
  marketplaceTrialQuota?: MarketplaceTrialQuota;
}

/** SaaS subscription details of a Grafana instance */
export interface SaasSubscriptionDetails {
  /** The plan Id of the SaaS subscription. */
  planId?: string;
  /** The offer Id of the SaaS subscription. */
  offerId?: string;
  /** The publisher Id of the SaaS subscription. */
  publisherId?: string;
  /** The billing term of the SaaS Subscription. */
  term?: SubscriptionTerm;
}

/** The current billing term of the SaaS Subscription. */
export interface SubscriptionTerm {
  /** The unit of the billing term. */
  termUnit?: string;
  /** The date and time in UTC of when the billing term starts. */
  startDate?: Date;
  /** The date and time in UTC of when the billing term ends. */
  endDate?: Date;
}

/** The allocation details of the per subscription free trial slot of the subscription. */
export interface MarketplaceTrialQuota {
  /** Available enterprise promotion for the subscription */
  availablePromotion?: AvailablePromotion;
  /** Resource Id of the Grafana resource which is doing the trial. */
  grafanaResourceId?: string;
  /** The date and time in UTC of when the trial starts. */
  trialStartAt?: Date;
  /** The date and time in UTC of when the trial ends. */
  trialEndAt?: Date;
}

export interface GrafanaAvailablePluginListResponse {
  value?: GrafanaAvailablePlugin[];
  nextLink?: string;
}

/** Available plugins of grafana */
export interface GrafanaAvailablePlugin {
  /**
   * Grafana plugin id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly pluginId?: string;
  /**
   * Grafana plugin display name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
}

/** The list of managed private endpoints of a grafana resource */
export interface ManagedPrivateEndpointModelListResponse {
  value?: ManagedPrivateEndpointModel[];
  nextLink?: string;
}

/** The state of managed private endpoint connection. */
export interface ManagedPrivateEndpointConnectionState {
  /**
   * The approval/rejection status of managed private endpoint connection.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: ManagedPrivateEndpointConnectionStatus;
  /**
   * Gets or sets the reason for approval/rejection of the connection.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** The parameters for a PATCH request to a managed private endpoint. */
export interface ManagedPrivateEndpointUpdateParameters {
  /** The new tags of the managed private endpoint. */
  tags?: { [propertyName: string]: string };
}

/** The Private Endpoint Connection resource. */
export interface PrivateEndpointConnection extends Resource {
  /** The resource of private end point. */
  privateEndpoint?: PrivateEndpoint;
  /** A collection of information about the state of the connection between service consumer and provider. */
  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;
  /** The private endpoint connection group ids. */
  groupIds?: string[];
  /**
   * The provisioning state of the private endpoint connection resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: PrivateEndpointConnectionProvisioningState;
}

/** A private link resource */
export interface PrivateLinkResource extends Resource {
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The private link resource group id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly groupId?: string;
  /**
   * The private link resource required member names.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly requiredMembers?: string[];
  /** The private link resource Private link DNS zone name. */
  requiredZoneNames?: string[];
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** The managed private endpoint resource type. */
export interface ManagedPrivateEndpointModel extends TrackedResource {
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** The ARM resource ID of the resource for which the managed private endpoint is pointing to. */
  privateLinkResourceId?: string;
  /** The region of the resource to which the managed private endpoint is pointing to. */
  privateLinkResourceRegion?: string;
  /** The group Ids of the managed private endpoint. */
  groupIds?: string[];
  /** User input request message of the managed private endpoint. */
  requestMessage?: string;
  /**
   * The state of managed private endpoint connection.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly connectionState?: ManagedPrivateEndpointConnectionState;
  /** The URL of the data store behind the private link service. It would be the URL in the Grafana data source configuration page without the protocol and port. */
  privateLinkServiceUrl?: string;
  /**
   * The private IP of private endpoint after approval. This property is empty before connection is approved.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateLinkServicePrivateIP?: string;
}

/** Defines headers for Grafana_create operation. */
export interface GrafanaCreateHeaders {
  /** Operation URI for long running operation. */
  azureAsyncOperation?: string;
}

/** Defines headers for Grafana_update operation. */
export interface GrafanaUpdateHeaders {
  /** Operation URI for long running operation. */
  azureAsyncOperation?: string;
}

/** Defines headers for Grafana_delete operation. */
export interface GrafanaDeleteHeaders {
  /** Operation URI for long running operation. */
  azureAsyncOperation?: string;
}

/** Defines headers for PrivateEndpointConnections_approve operation. */
export interface PrivateEndpointConnectionsApproveHeaders {
  /** Operation URI for long running operation. */
  azureAsyncOperation?: string;
}

/** Defines headers for PrivateEndpointConnections_delete operation. */
export interface PrivateEndpointConnectionsDeleteHeaders {
  /** Operation URI for long running operation. */
  azureAsyncOperation?: string;
}

/** Defines headers for ManagedPrivateEndpoints_refresh operation. */
export interface ManagedPrivateEndpointsRefreshHeaders {
  /** Operation URI for long running operation. */
  azureAsyncOperation?: string;
}

/** Defines headers for ManagedPrivateEndpoints_create operation. */
export interface ManagedPrivateEndpointsCreateHeaders {
  /** Operation URI for long running operation. */
  azureAsyncOperation?: string;
}

/** Defines headers for ManagedPrivateEndpoints_update operation. */
export interface ManagedPrivateEndpointsUpdateHeaders {
  /** Operation URI for long running operation. */
  azureAsyncOperation?: string;
}

/** Defines headers for ManagedPrivateEndpoints_delete operation. */
export interface ManagedPrivateEndpointsDeleteHeaders {
  /** Operation URI for long running operation. */
  azureAsyncOperation?: string;
}

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system"
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Accepted */
  Accepted = "Accepted",
  /** Creating */
  Creating = "Creating",
  /** Updating */
  Updating = "Updating",
  /** Deleting */
  Deleting = "Deleting",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
  /** Deleted */
  Deleted = "Deleted",
  /** NotSpecified */
  NotSpecified = "NotSpecified"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Accepted** \
 * **Creating** \
 * **Updating** \
 * **Deleting** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Deleted** \
 * **NotSpecified**
 */
export type ProvisioningState = string;

/** Known values of {@link PublicNetworkAccess} that the service accepts. */
export enum KnownPublicNetworkAccess {
  /** Enabled */
  Enabled = "Enabled",
  /** Disabled */
  Disabled = "Disabled"
}

/**
 * Defines values for PublicNetworkAccess. \
 * {@link KnownPublicNetworkAccess} can be used interchangeably with PublicNetworkAccess,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export type PublicNetworkAccess = string;

/** Known values of {@link ZoneRedundancy} that the service accepts. */
export enum KnownZoneRedundancy {
  /** Disabled */
  Disabled = "Disabled",
  /** Enabled */
  Enabled = "Enabled"
}

/**
 * Defines values for ZoneRedundancy. \
 * {@link KnownZoneRedundancy} can be used interchangeably with ZoneRedundancy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Enabled**
 */
export type ZoneRedundancy = string;

/** Known values of {@link ApiKey} that the service accepts. */
export enum KnownApiKey {
  /** Disabled */
  Disabled = "Disabled",
  /** Enabled */
  Enabled = "Enabled"
}

/**
 * Defines values for ApiKey. \
 * {@link KnownApiKey} can be used interchangeably with ApiKey,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Enabled**
 */
export type ApiKey = string;

/** Known values of {@link DeterministicOutboundIP} that the service accepts. */
export enum KnownDeterministicOutboundIP {
  /** Disabled */
  Disabled = "Disabled",
  /** Enabled */
  Enabled = "Enabled"
}

/**
 * Defines values for DeterministicOutboundIP. \
 * {@link KnownDeterministicOutboundIP} can be used interchangeably with DeterministicOutboundIP,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Enabled**
 */
export type DeterministicOutboundIP = string;

/** Known values of {@link PrivateEndpointServiceConnectionStatus} that the service accepts. */
export enum KnownPrivateEndpointServiceConnectionStatus {
  /** Pending */
  Pending = "Pending",
  /** Approved */
  Approved = "Approved",
  /** Rejected */
  Rejected = "Rejected"
}

/**
 * Defines values for PrivateEndpointServiceConnectionStatus. \
 * {@link KnownPrivateEndpointServiceConnectionStatus} can be used interchangeably with PrivateEndpointServiceConnectionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Approved** \
 * **Rejected**
 */
export type PrivateEndpointServiceConnectionStatus = string;

/** Known values of {@link PrivateEndpointConnectionProvisioningState} that the service accepts. */
export enum KnownPrivateEndpointConnectionProvisioningState {
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Creating */
  Creating = "Creating",
  /** Deleting */
  Deleting = "Deleting",
  /** Failed */
  Failed = "Failed"
}

/**
 * Defines values for PrivateEndpointConnectionProvisioningState. \
 * {@link KnownPrivateEndpointConnectionProvisioningState} can be used interchangeably with PrivateEndpointConnectionProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Creating** \
 * **Deleting** \
 * **Failed**
 */
export type PrivateEndpointConnectionProvisioningState = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link AutoGeneratedDomainNameLabelScope} that the service accepts. */
export enum KnownAutoGeneratedDomainNameLabelScope {
  /** TenantReuse */
  TenantReuse = "TenantReuse"
}

/**
 * Defines values for AutoGeneratedDomainNameLabelScope. \
 * {@link KnownAutoGeneratedDomainNameLabelScope} can be used interchangeably with AutoGeneratedDomainNameLabelScope,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **TenantReuse**
 */
export type AutoGeneratedDomainNameLabelScope = string;

/** Known values of {@link MarketplaceAutoRenew} that the service accepts. */
export enum KnownMarketplaceAutoRenew {
  /** Disabled */
  Disabled = "Disabled",
  /** Enabled */
  Enabled = "Enabled"
}

/**
 * Defines values for MarketplaceAutoRenew. \
 * {@link KnownMarketplaceAutoRenew} can be used interchangeably with MarketplaceAutoRenew,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Enabled**
 */
export type MarketplaceAutoRenew = string;

/** Known values of {@link StartTLSPolicy} that the service accepts. */
export enum KnownStartTLSPolicy {
  /** OpportunisticStartTLS */
  OpportunisticStartTLS = "OpportunisticStartTLS",
  /** MandatoryStartTLS */
  MandatoryStartTLS = "MandatoryStartTLS",
  /** NoStartTLS */
  NoStartTLS = "NoStartTLS"
}

/**
 * Defines values for StartTLSPolicy. \
 * {@link KnownStartTLSPolicy} can be used interchangeably with StartTLSPolicy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **OpportunisticStartTLS** \
 * **MandatoryStartTLS** \
 * **NoStartTLS**
 */
export type StartTLSPolicy = string;

/** Known values of {@link ManagedServiceIdentityType} that the service accepts. */
export enum KnownManagedServiceIdentityType {
  /** None */
  None = "None",
  /** SystemAssigned */
  SystemAssigned = "SystemAssigned",
  /** UserAssigned */
  UserAssigned = "UserAssigned",
  /** SystemAssignedUserAssigned */
  SystemAssignedUserAssigned = "SystemAssigned,UserAssigned"
}

/**
 * Defines values for ManagedServiceIdentityType. \
 * {@link KnownManagedServiceIdentityType} can be used interchangeably with ManagedServiceIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **SystemAssigned** \
 * **UserAssigned** \
 * **SystemAssigned,UserAssigned**
 */
export type ManagedServiceIdentityType = string;

/** Known values of {@link AvailablePromotion} that the service accepts. */
export enum KnownAvailablePromotion {
  /** None */
  None = "None",
  /** FreeTrial */
  FreeTrial = "FreeTrial"
}

/**
 * Defines values for AvailablePromotion. \
 * {@link KnownAvailablePromotion} can be used interchangeably with AvailablePromotion,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **FreeTrial**
 */
export type AvailablePromotion = string;

/** Known values of {@link ManagedPrivateEndpointConnectionStatus} that the service accepts. */
export enum KnownManagedPrivateEndpointConnectionStatus {
  /** Pending */
  Pending = "Pending",
  /** Approved */
  Approved = "Approved",
  /** Rejected */
  Rejected = "Rejected",
  /** Disconnected */
  Disconnected = "Disconnected"
}

/**
 * Defines values for ManagedPrivateEndpointConnectionStatus. \
 * {@link KnownManagedPrivateEndpointConnectionStatus} can be used interchangeably with ManagedPrivateEndpointConnectionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Approved** \
 * **Rejected** \
 * **Disconnected**
 */
export type ManagedPrivateEndpointConnectionStatus = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface GrafanaListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type GrafanaListResponse = ManagedGrafanaListResponse;

/** Optional parameters. */
export interface GrafanaListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type GrafanaListByResourceGroupResponse = ManagedGrafanaListResponse;

/** Optional parameters. */
export interface GrafanaGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type GrafanaGetResponse = ManagedGrafana;

/** Optional parameters. */
export interface GrafanaCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type GrafanaCreateResponse = ManagedGrafana;

/** Optional parameters. */
export interface GrafanaUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type GrafanaUpdateResponse = ManagedGrafana;

/** Optional parameters. */
export interface GrafanaDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface GrafanaCheckEnterpriseDetailsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkEnterpriseDetails operation. */
export type GrafanaCheckEnterpriseDetailsResponse = EnterpriseDetails;

/** Optional parameters. */
export interface GrafanaFetchAvailablePluginsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the fetchAvailablePlugins operation. */
export type GrafanaFetchAvailablePluginsResponse = GrafanaAvailablePluginListResponse;

/** Optional parameters. */
export interface GrafanaListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type GrafanaListNextResponse = ManagedGrafanaListResponse;

/** Optional parameters. */
export interface GrafanaListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type GrafanaListByResourceGroupNextResponse = ManagedGrafanaListResponse;

/** Optional parameters. */
export interface PrivateEndpointConnectionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;

/** Optional parameters. */
export interface PrivateEndpointConnectionsApproveOptionalParams
  extends coreClient.OperationOptions {
  /** The Private Endpoint Connection resource. */
  body?: PrivateEndpointConnection;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the approve operation. */
export type PrivateEndpointConnectionsApproveResponse = PrivateEndpointConnectionsApproveHeaders &
  PrivateEndpointConnection;

/** Optional parameters. */
export interface PrivateEndpointConnectionsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type PrivateEndpointConnectionsDeleteResponse = PrivateEndpointConnectionsDeleteHeaders;

/** Optional parameters. */
export interface PrivateEndpointConnectionsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type PrivateEndpointConnectionsListResponse = PrivateEndpointConnectionListResult;

/** Optional parameters. */
export interface PrivateEndpointConnectionsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type PrivateEndpointConnectionsListNextResponse = PrivateEndpointConnectionListResult;

/** Optional parameters. */
export interface PrivateLinkResourcesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type PrivateLinkResourcesListResponse = PrivateLinkResourceListResult;

/** Optional parameters. */
export interface PrivateLinkResourcesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PrivateLinkResourcesGetResponse = PrivateLinkResource;

/** Optional parameters. */
export interface PrivateLinkResourcesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type PrivateLinkResourcesListNextResponse = PrivateLinkResourceListResult;

/** Optional parameters. */
export interface ManagedPrivateEndpointsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ManagedPrivateEndpointsListResponse = ManagedPrivateEndpointModelListResponse;

/** Optional parameters. */
export interface ManagedPrivateEndpointsRefreshOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ManagedPrivateEndpointsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ManagedPrivateEndpointsGetResponse = ManagedPrivateEndpointModel;

/** Optional parameters. */
export interface ManagedPrivateEndpointsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ManagedPrivateEndpointsCreateResponse = ManagedPrivateEndpointModel;

/** Optional parameters. */
export interface ManagedPrivateEndpointsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type ManagedPrivateEndpointsUpdateResponse = ManagedPrivateEndpointModel;

/** Optional parameters. */
export interface ManagedPrivateEndpointsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ManagedPrivateEndpointsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ManagedPrivateEndpointsListNextResponse = ManagedPrivateEndpointModelListResponse;

/** Optional parameters. */
export interface DashboardManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
