/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** A list of REST API operations supported by Microsoft.Dashboard provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the Microsoft.Dashboard provider.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: OperationResult[];
  /**
   * URL to get the next set of operation list results if there are any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** A Microsoft.Dashboard REST API operation. */
export interface OperationResult {
  /**
   * Operation name, i.e., {provider}/{resource}/{operation}.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Indicates whether the operation applies to data-plane. Set "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, i.e., Microsoft.Dashboard.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation, e.g., 'grafana'.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * Operation type, e.g., read, write, delete, etc.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * Description of the operation, e.g., 'Read grafana'.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

export interface ManagedGrafanaListResponse {
  value?: ManagedGrafana[];
  nextLink?: string;
}

/** The grafana resource type. */
export interface ManagedGrafana {
  /**
   * ARM id of the grafana resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Name of the grafana resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the grafana resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** The Sku of the grafana resource. */
  sku?: ResourceSku;
  /** Properties specific to the grafana resource. */
  properties?: ManagedGrafanaProperties;
  /** The managed identity of the grafana resource. */
  identity?: ManagedIdentity;
  /**
   * The system meta data relating to this grafana resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** The tags for grafana resource. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the grafana resource lives */
  location?: string;
}

export interface ResourceSku {
  name: string;
}

/** Properties specific to the grafana resource. */
export interface ManagedGrafanaProperties {
  /** Provisioning state of the resource. */
  provisioningState?: ProvisioningState;
  /**
   * The Grafana software version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly grafanaVersion?: string;
  /**
   * The endpoint of the Grafana instance.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endpoint?: string;
  zoneRedundancy?: ZoneRedundancy;
  autoGeneratedDomainNameLabelScope?: AutoGeneratedDomainNameLabelScope;
}

/** The managed identity of a resource. */
export interface ManagedIdentity {
  /** The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the resource. */
  type?: IdentityType;
  /**
   * The principal id of the system assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The tenant id of the system assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** Dictionary of user assigned identities. */
  userAssignedIdentities?: { [propertyName: string]: UserAssignedIdentity };
}

export interface UserAssignedIdentity {
  /**
   * The principal id of user assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The client id of user assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clientId?: string;
}

export interface SystemData {
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  createdAt?: Date;
  lastModifiedBy?: string;
  lastModifiedByType?: LastModifiedByType;
  lastModifiedAt?: Date;
}

/** The parameters for a PATCH request to a grafana resource. */
export interface ManagedGrafanaUpdateParameters {
  /** The managed identity of the grafana resource. */
  identity?: ManagedIdentity;
  /** The new tags of the grafana resource. */
  tags?: { [propertyName: string]: string };
}

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  User = "user",
  System = "system",
  UserSystem = "user,system"
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  Internal = "Internal"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  Accepted = "Accepted",
  Creating = "Creating",
  Updating = "Updating",
  Deleting = "Deleting",
  Succeeded = "Succeeded",
  Failed = "Failed",
  Canceled = "Canceled",
  Deleted = "Deleted",
  NotSpecified = "NotSpecified"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Accepted** \
 * **Creating** \
 * **Updating** \
 * **Deleting** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Deleted** \
 * **NotSpecified**
 */
export type ProvisioningState = string;

/** Known values of {@link ZoneRedundancy} that the service accepts. */
export enum KnownZoneRedundancy {
  Disabled = "Disabled",
  Enabled = "Enabled"
}

/**
 * Defines values for ZoneRedundancy. \
 * {@link KnownZoneRedundancy} can be used interchangeably with ZoneRedundancy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Enabled**
 */
export type ZoneRedundancy = string;

/** Known values of {@link AutoGeneratedDomainNameLabelScope} that the service accepts. */
export enum KnownAutoGeneratedDomainNameLabelScope {
  TenantReuse = "TenantReuse"
}

/**
 * Defines values for AutoGeneratedDomainNameLabelScope. \
 * {@link KnownAutoGeneratedDomainNameLabelScope} can be used interchangeably with AutoGeneratedDomainNameLabelScope,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **TenantReuse**
 */
export type AutoGeneratedDomainNameLabelScope = string;

/** Known values of {@link IdentityType} that the service accepts. */
export enum KnownIdentityType {
  None = "None",
  SystemAssigned = "SystemAssigned"
}

/**
 * Defines values for IdentityType. \
 * {@link KnownIdentityType} can be used interchangeably with IdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **SystemAssigned**
 */
export type IdentityType = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  User = "User",
  Application = "Application",
  ManagedIdentity = "ManagedIdentity",
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link LastModifiedByType} that the service accepts. */
export enum KnownLastModifiedByType {
  User = "User",
  Application = "Application",
  ManagedIdentity = "ManagedIdentity",
  Key = "Key"
}

/**
 * Defines values for LastModifiedByType. \
 * {@link KnownLastModifiedByType} can be used interchangeably with LastModifiedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type LastModifiedByType = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface GrafanaListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type GrafanaListResponse = ManagedGrafanaListResponse;

/** Optional parameters. */
export interface GrafanaListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type GrafanaListByResourceGroupResponse = ManagedGrafanaListResponse;

/** Optional parameters. */
export interface GrafanaGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type GrafanaGetResponse = ManagedGrafana;

/** Optional parameters. */
export interface GrafanaCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type GrafanaCreateResponse = ManagedGrafana;

/** Optional parameters. */
export interface GrafanaUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type GrafanaUpdateResponse = ManagedGrafana;

/** Optional parameters. */
export interface GrafanaDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface GrafanaListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type GrafanaListNextResponse = ManagedGrafanaListResponse;

/** Optional parameters. */
export interface GrafanaListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type GrafanaListByResourceGroupNextResponse = ManagedGrafanaListResponse;

/** Optional parameters. */
export interface DashboardManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
