/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      }
    }
  }
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const ManagedGrafanaListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedGrafanaListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagedGrafana"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedGrafana: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedGrafana",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "ResourceSku"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ManagedGrafanaProperties"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ManagedServiceIdentity"
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceSku: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceSku",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedGrafanaProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedGrafanaProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      grafanaVersion: {
        serializedName: "grafanaVersion",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      endpoint: {
        serializedName: "endpoint",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      publicNetworkAccess: {
        defaultValue: "Enabled",
        serializedName: "publicNetworkAccess",
        type: {
          name: "String"
        }
      },
      zoneRedundancy: {
        defaultValue: "Disabled",
        serializedName: "zoneRedundancy",
        type: {
          name: "String"
        }
      },
      apiKey: {
        defaultValue: "Disabled",
        serializedName: "apiKey",
        type: {
          name: "String"
        }
      },
      deterministicOutboundIP: {
        defaultValue: "Disabled",
        serializedName: "deterministicOutboundIP",
        type: {
          name: "String"
        }
      },
      outboundIPs: {
        serializedName: "outboundIPs",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      privateEndpointConnections: {
        serializedName: "privateEndpointConnections",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnection"
            }
          }
        }
      },
      autoGeneratedDomainNameLabelScope: {
        serializedName: "autoGeneratedDomainNameLabelScope",
        type: {
          name: "String"
        }
      },
      grafanaIntegrations: {
        serializedName: "grafanaIntegrations",
        type: {
          name: "Composite",
          className: "GrafanaIntegrations"
        }
      },
      enterpriseConfigurations: {
        serializedName: "enterpriseConfigurations",
        type: {
          name: "Composite",
          className: "EnterpriseConfigurations"
        }
      },
      grafanaConfigurations: {
        serializedName: "grafanaConfigurations",
        type: {
          name: "Composite",
          className: "GrafanaConfigurations"
        }
      },
      grafanaPlugins: {
        serializedName: "grafanaPlugins",
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "GrafanaPlugin" } }
        }
      },
      grafanaMajorVersion: {
        serializedName: "grafanaMajorVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpoint: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpoint",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateLinkServiceConnectionState: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateLinkServiceConnectionState",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      actionsRequired: {
        serializedName: "actionsRequired",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const GrafanaIntegrations: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GrafanaIntegrations",
    modelProperties: {
      azureMonitorWorkspaceIntegrations: {
        serializedName: "azureMonitorWorkspaceIntegrations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureMonitorWorkspaceIntegration"
            }
          }
        }
      }
    }
  }
};

export const AzureMonitorWorkspaceIntegration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureMonitorWorkspaceIntegration",
    modelProperties: {
      azureMonitorWorkspaceResourceId: {
        serializedName: "azureMonitorWorkspaceResourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EnterpriseConfigurations: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EnterpriseConfigurations",
    modelProperties: {
      marketplacePlanId: {
        serializedName: "marketplacePlanId",
        type: {
          name: "String"
        }
      },
      marketplaceAutoRenew: {
        serializedName: "marketplaceAutoRenew",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GrafanaConfigurations: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GrafanaConfigurations",
    modelProperties: {
      smtp: {
        serializedName: "smtp",
        type: {
          name: "Composite",
          className: "Smtp"
        }
      }
    }
  }
};

export const Smtp: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Smtp",
    modelProperties: {
      enabled: {
        defaultValue: false,
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      host: {
        serializedName: "host",
        type: {
          name: "String"
        }
      },
      user: {
        serializedName: "user",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        type: {
          name: "String"
        }
      },
      fromAddress: {
        serializedName: "fromAddress",
        type: {
          name: "String"
        }
      },
      fromName: {
        serializedName: "fromName",
        type: {
          name: "String"
        }
      },
      startTLSPolicy: {
        serializedName: "startTLSPolicy",
        type: {
          name: "String"
        }
      },
      skipVerify: {
        serializedName: "skipVerify",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const GrafanaPlugin: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GrafanaPlugin",
    modelProperties: {
      pluginId: {
        serializedName: "pluginId",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedServiceIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedServiceIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "UserAssignedIdentity" }
          }
        }
      }
    }
  }
};

export const UserAssignedIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserAssignedIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      clientId: {
        serializedName: "clientId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const ManagedGrafanaUpdateParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedGrafanaUpdateParameters",
    modelProperties: {
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "ResourceSku"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ManagedServiceIdentity"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ManagedGrafanaPropertiesUpdateParameters"
        }
      }
    }
  }
};

export const ManagedGrafanaPropertiesUpdateParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedGrafanaPropertiesUpdateParameters",
    modelProperties: {
      zoneRedundancy: {
        defaultValue: "Disabled",
        serializedName: "zoneRedundancy",
        type: {
          name: "String"
        }
      },
      apiKey: {
        defaultValue: "Disabled",
        serializedName: "apiKey",
        type: {
          name: "String"
        }
      },
      deterministicOutboundIP: {
        defaultValue: "Disabled",
        serializedName: "deterministicOutboundIP",
        type: {
          name: "String"
        }
      },
      publicNetworkAccess: {
        defaultValue: "Enabled",
        serializedName: "publicNetworkAccess",
        type: {
          name: "String"
        }
      },
      grafanaIntegrations: {
        serializedName: "grafanaIntegrations",
        type: {
          name: "Composite",
          className: "GrafanaIntegrations"
        }
      },
      enterpriseConfigurations: {
        serializedName: "enterpriseConfigurations",
        type: {
          name: "Composite",
          className: "EnterpriseConfigurations"
        }
      },
      grafanaConfigurations: {
        serializedName: "grafanaConfigurations",
        type: {
          name: "Composite",
          className: "GrafanaConfigurations"
        }
      },
      grafanaPlugins: {
        serializedName: "grafanaPlugins",
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "GrafanaPlugin" } }
        }
      },
      grafanaMajorVersion: {
        serializedName: "grafanaMajorVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointConnectionListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpointConnectionListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnection"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateLinkResourceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateLinkResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateLinkResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EnterpriseDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EnterpriseDetails",
    modelProperties: {
      saasSubscriptionDetails: {
        serializedName: "saasSubscriptionDetails",
        type: {
          name: "Composite",
          className: "SaasSubscriptionDetails"
        }
      },
      marketplaceTrialQuota: {
        serializedName: "marketplaceTrialQuota",
        type: {
          name: "Composite",
          className: "MarketplaceTrialQuota"
        }
      }
    }
  }
};

export const SaasSubscriptionDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SaasSubscriptionDetails",
    modelProperties: {
      planId: {
        serializedName: "planId",
        type: {
          name: "String"
        }
      },
      offerId: {
        serializedName: "offerId",
        type: {
          name: "String"
        }
      },
      publisherId: {
        serializedName: "publisherId",
        type: {
          name: "String"
        }
      },
      term: {
        serializedName: "term",
        type: {
          name: "Composite",
          className: "SubscriptionTerm"
        }
      }
    }
  }
};

export const SubscriptionTerm: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubscriptionTerm",
    modelProperties: {
      termUnit: {
        serializedName: "termUnit",
        type: {
          name: "String"
        }
      },
      startDate: {
        serializedName: "startDate",
        type: {
          name: "DateTime"
        }
      },
      endDate: {
        serializedName: "endDate",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const MarketplaceTrialQuota: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MarketplaceTrialQuota",
    modelProperties: {
      availablePromotion: {
        defaultValue: "None",
        serializedName: "availablePromotion",
        type: {
          name: "String"
        }
      },
      grafanaResourceId: {
        serializedName: "grafanaResourceId",
        type: {
          name: "String"
        }
      },
      trialStartAt: {
        serializedName: "trialStartAt",
        type: {
          name: "DateTime"
        }
      },
      trialEndAt: {
        serializedName: "trialEndAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const GrafanaAvailablePluginListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GrafanaAvailablePluginListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GrafanaAvailablePlugin"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GrafanaAvailablePlugin: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GrafanaAvailablePlugin",
    modelProperties: {
      pluginId: {
        serializedName: "pluginId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedPrivateEndpointModelListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedPrivateEndpointModelListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagedPrivateEndpointModel"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedPrivateEndpointConnectionState: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedPrivateEndpointConnectionState",
    modelProperties: {
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedPrivateEndpointUpdateParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedPrivateEndpointUpdateParameters",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const PrivateEndpointConnection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpointConnection",
    modelProperties: {
      ...Resource.type.modelProperties,
      privateEndpoint: {
        serializedName: "properties.privateEndpoint",
        type: {
          name: "Composite",
          className: "PrivateEndpoint"
        }
      },
      privateLinkServiceConnectionState: {
        serializedName: "properties.privateLinkServiceConnectionState",
        type: {
          name: "Composite",
          className: "PrivateLinkServiceConnectionState"
        }
      },
      groupIds: {
        serializedName: "properties.groupIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateLinkResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateLinkResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      groupId: {
        serializedName: "properties.groupId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      requiredMembers: {
        serializedName: "properties.requiredMembers",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      requiredZoneNames: {
        serializedName: "properties.requiredZoneNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedPrivateEndpointModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedPrivateEndpointModel",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      privateLinkResourceId: {
        serializedName: "properties.privateLinkResourceId",
        type: {
          name: "String"
        }
      },
      privateLinkResourceRegion: {
        serializedName: "properties.privateLinkResourceRegion",
        type: {
          name: "String"
        }
      },
      groupIds: {
        serializedName: "properties.groupIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      requestMessage: {
        serializedName: "properties.requestMessage",
        type: {
          name: "String"
        }
      },
      connectionState: {
        serializedName: "properties.connectionState",
        type: {
          name: "Composite",
          className: "ManagedPrivateEndpointConnectionState"
        }
      },
      privateLinkServiceUrl: {
        serializedName: "properties.privateLinkServiceUrl",
        type: {
          name: "String"
        }
      },
      privateLinkServicePrivateIP: {
        serializedName: "properties.privateLinkServicePrivateIP",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GrafanaCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GrafanaCreateHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GrafanaUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GrafanaUpdateHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GrafanaDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GrafanaDeleteHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointConnectionsApproveHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpointConnectionsApproveHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointConnectionsDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpointConnectionsDeleteHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedPrivateEndpointsRefreshHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedPrivateEndpointsRefreshHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedPrivateEndpointsCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedPrivateEndpointsCreateHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedPrivateEndpointsUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedPrivateEndpointsUpdateHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedPrivateEndpointsDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedPrivateEndpointsDeleteHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      }
    }
  }
};
