/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter
} from "@azure/core-client";
import {
  ReportResource as ReportResourceMapper,
  ReportResourcePatch as ReportResourcePatchMapper,
  SnapshotDownloadRequest as SnapshotDownloadRequestMapper
} from "../models/mappers";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2022-11-16-preview",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const skipToken: OperationQueryParameter = {
  parameterPath: ["options", "skipToken"],
  mapper: {
    serializedName: "$skipToken",
    type: {
      name: "String"
    }
  }
};

export const top: OperationQueryParameter = {
  parameterPath: ["options", "top"],
  mapper: {
    constraints: {
      InclusiveMaximum: 100,
      InclusiveMinimum: 1
    },
    serializedName: "$top",
    type: {
      name: "Number"
    }
  }
};

export const select: OperationQueryParameter = {
  parameterPath: ["options", "select"],
  mapper: {
    constraints: {
      MinLength: 1
    },
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};

export const offerGuid: OperationQueryParameter = {
  parameterPath: ["options", "offerGuid"],
  mapper: {
    constraints: {
      MinLength: 1
    },
    serializedName: "offerGuid",
    type: {
      name: "String"
    }
  }
};

export const reportCreatorTenantId: OperationQueryParameter = {
  parameterPath: ["options", "reportCreatorTenantId"],
  mapper: {
    constraints: {
      MinLength: 1
    },
    serializedName: "reportCreatorTenantId",
    type: {
      name: "String"
    }
  }
};

export const reportName: OperationURLParameter = {
  parameterPath: "reportName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[-a-zA-Z0-9_]+$")
    },
    serializedName: "reportName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const parameters: OperationParameter = {
  parameterPath: "parameters",
  mapper: ReportResourceMapper
};

export const parameters1: OperationParameter = {
  parameterPath: "parameters",
  mapper: ReportResourcePatchMapper
};

export const snapshotName: OperationURLParameter = {
  parameterPath: "snapshotName",
  mapper: {
    serializedName: "snapshotName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters2: OperationParameter = {
  parameterPath: "parameters",
  mapper: SnapshotDownloadRequestMapper
};
