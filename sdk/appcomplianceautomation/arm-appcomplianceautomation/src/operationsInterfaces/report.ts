/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  ReportResource,
  ReportListOptionalParams,
  ReportGetOptionalParams,
  ReportGetResponse,
  ReportCreateOrUpdateOptionalParams,
  ReportCreateOrUpdateResponse,
  ReportResourcePatch,
  ReportUpdateOptionalParams,
  ReportUpdateResponse,
  ReportDeleteOptionalParams,
  ReportDeleteResponse,
  CheckNameAvailabilityRequest,
  ReportNestedResourceCheckNameAvailabilityOptionalParams,
  ReportNestedResourceCheckNameAvailabilityResponse,
  ReportFixOptionalParams,
  ReportFixResponse,
  ReportGetScopingQuestionsOptionalParams,
  ReportGetScopingQuestionsResponse,
  SyncCertRecordRequest,
  ReportSyncCertRecordOptionalParams,
  ReportSyncCertRecordResponse,
  ReportVerifyOptionalParams,
  ReportVerifyResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Report. */
export interface Report {
  /**
   * Get the AppComplianceAutomation report list for the tenant.
   * @param options The options parameters.
   */
  list(
    options?: ReportListOptionalParams,
  ): PagedAsyncIterableIterator<ReportResource>;
  /**
   * Get the AppComplianceAutomation report and its properties.
   * @param reportName Report Name.
   * @param options The options parameters.
   */
  get(
    reportName: string,
    options?: ReportGetOptionalParams,
  ): Promise<ReportGetResponse>;
  /**
   * Create a new AppComplianceAutomation report or update an exiting AppComplianceAutomation report.
   * @param reportName Report Name.
   * @param properties Parameters for the create or update operation
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    reportName: string,
    properties: ReportResource,
    options?: ReportCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ReportCreateOrUpdateResponse>,
      ReportCreateOrUpdateResponse
    >
  >;
  /**
   * Create a new AppComplianceAutomation report or update an exiting AppComplianceAutomation report.
   * @param reportName Report Name.
   * @param properties Parameters for the create or update operation
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    reportName: string,
    properties: ReportResource,
    options?: ReportCreateOrUpdateOptionalParams,
  ): Promise<ReportCreateOrUpdateResponse>;
  /**
   * Update an exiting AppComplianceAutomation report.
   * @param reportName Report Name.
   * @param properties Parameters for the create or update operation
   * @param options The options parameters.
   */
  beginUpdate(
    reportName: string,
    properties: ReportResourcePatch,
    options?: ReportUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<OperationState<ReportUpdateResponse>, ReportUpdateResponse>
  >;
  /**
   * Update an exiting AppComplianceAutomation report.
   * @param reportName Report Name.
   * @param properties Parameters for the create or update operation
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    reportName: string,
    properties: ReportResourcePatch,
    options?: ReportUpdateOptionalParams,
  ): Promise<ReportUpdateResponse>;
  /**
   * Delete an AppComplianceAutomation report.
   * @param reportName Report Name.
   * @param options The options parameters.
   */
  beginDelete(
    reportName: string,
    options?: ReportDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<OperationState<ReportDeleteResponse>, ReportDeleteResponse>
  >;
  /**
   * Delete an AppComplianceAutomation report.
   * @param reportName Report Name.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    reportName: string,
    options?: ReportDeleteOptionalParams,
  ): Promise<ReportDeleteResponse>;
  /**
   * Checks the report's nested resource name availability, e.g: Webhooks, Evidences, Snapshots.
   * @param reportName Report Name.
   * @param body NameAvailabilityRequest object.
   * @param options The options parameters.
   */
  nestedResourceCheckNameAvailability(
    reportName: string,
    body: CheckNameAvailabilityRequest,
    options?: ReportNestedResourceCheckNameAvailabilityOptionalParams,
  ): Promise<ReportNestedResourceCheckNameAvailabilityResponse>;
  /**
   * Fix the AppComplianceAutomation report error. e.g: App Compliance Automation Tool service
   * unregistered, automation removed.
   * @param reportName Report Name.
   * @param options The options parameters.
   */
  beginFix(
    reportName: string,
    options?: ReportFixOptionalParams,
  ): Promise<
    SimplePollerLike<OperationState<ReportFixResponse>, ReportFixResponse>
  >;
  /**
   * Fix the AppComplianceAutomation report error. e.g: App Compliance Automation Tool service
   * unregistered, automation removed.
   * @param reportName Report Name.
   * @param options The options parameters.
   */
  beginFixAndWait(
    reportName: string,
    options?: ReportFixOptionalParams,
  ): Promise<ReportFixResponse>;
  /**
   * Fix the AppComplianceAutomation report error. e.g: App Compliance Automation Tool service
   * unregistered, automation removed.
   * @param reportName Report Name.
   * @param options The options parameters.
   */
  getScopingQuestions(
    reportName: string,
    options?: ReportGetScopingQuestionsOptionalParams,
  ): Promise<ReportGetScopingQuestionsResponse>;
  /**
   * Synchronize attestation record from app compliance.
   * @param reportName Report Name.
   * @param body Parameters for synchronize certification record operation
   * @param options The options parameters.
   */
  beginSyncCertRecord(
    reportName: string,
    body: SyncCertRecordRequest,
    options?: ReportSyncCertRecordOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ReportSyncCertRecordResponse>,
      ReportSyncCertRecordResponse
    >
  >;
  /**
   * Synchronize attestation record from app compliance.
   * @param reportName Report Name.
   * @param body Parameters for synchronize certification record operation
   * @param options The options parameters.
   */
  beginSyncCertRecordAndWait(
    reportName: string,
    body: SyncCertRecordRequest,
    options?: ReportSyncCertRecordOptionalParams,
  ): Promise<ReportSyncCertRecordResponse>;
  /**
   * Verify the AppComplianceAutomation report health status.
   * @param reportName Report Name.
   * @param options The options parameters.
   */
  beginVerify(
    reportName: string,
    options?: ReportVerifyOptionalParams,
  ): Promise<
    SimplePollerLike<OperationState<ReportVerifyResponse>, ReportVerifyResponse>
  >;
  /**
   * Verify the AppComplianceAutomation report health status.
   * @param reportName Report Name.
   * @param options The options parameters.
   */
  beginVerifyAndWait(
    reportName: string,
    options?: ReportVerifyOptionalParams,
  ): Promise<ReportVerifyResponse>;
}
