/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  EvidenceResource,
  EvidenceListByReportOptionalParams,
  EvidenceGetOptionalParams,
  EvidenceGetResponse,
  EvidenceCreateOrUpdateOptionalParams,
  EvidenceCreateOrUpdateResponse,
  EvidenceDeleteOptionalParams,
  EvidenceFileDownloadRequest,
  EvidenceDownloadOptionalParams,
  EvidenceDownloadResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Evidence. */
export interface Evidence {
  /**
   * Returns a paginated list of evidences for a specified report.
   * @param reportName Report Name.
   * @param options The options parameters.
   */
  listByReport(
    reportName: string,
    options?: EvidenceListByReportOptionalParams,
  ): PagedAsyncIterableIterator<EvidenceResource>;
  /**
   * Get the evidence metadata
   * @param reportName Report Name.
   * @param evidenceName The evidence name.
   * @param options The options parameters.
   */
  get(
    reportName: string,
    evidenceName: string,
    options?: EvidenceGetOptionalParams,
  ): Promise<EvidenceGetResponse>;
  /**
   * Create or Update an evidence a specified report
   * @param reportName Report Name.
   * @param evidenceName The evidence name.
   * @param properties Parameters for the create or update operation
   * @param options The options parameters.
   */
  createOrUpdate(
    reportName: string,
    evidenceName: string,
    properties: EvidenceResource,
    options?: EvidenceCreateOrUpdateOptionalParams,
  ): Promise<EvidenceCreateOrUpdateResponse>;
  /**
   * Delete an existent evidence from a specified report
   * @param reportName Report Name.
   * @param evidenceName The evidence name.
   * @param options The options parameters.
   */
  delete(
    reportName: string,
    evidenceName: string,
    options?: EvidenceDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Download evidence file.
   * @param reportName Report Name.
   * @param evidenceName The evidence name.
   * @param body Parameters for the query operation
   * @param options The options parameters.
   */
  download(
    reportName: string,
    evidenceName: string,
    body: EvidenceFileDownloadRequest,
    options?: EvidenceDownloadOptionalParams,
  ): Promise<EvidenceDownloadResponse>;
}
