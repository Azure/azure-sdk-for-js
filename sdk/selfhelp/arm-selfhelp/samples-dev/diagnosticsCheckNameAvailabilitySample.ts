/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import {
  CheckNameAvailabilityRequest,
  DiagnosticsCheckNameAvailabilityOptionalParams,
  HelpRP
} from "@azure/arm-selfhelp";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";

dotenv.config();

/**
 * This sample demonstrates how to This API is used to check the uniqueness of a resource name used for a diagnostic check.
 *
 * @summary This API is used to check the uniqueness of a resource name used for a diagnostic check.
 * x-ms-original-file: specification/help/resource-manager/Microsoft.Help/preview/2023-01-01-preview/examples/CheckNameAvailabilityForDiagnosticWhenNameIsAvailable.json
 */
async function exampleWhenNameIsAvailableForADiagnosticResource() {
  const scope = "subscriptions/0d0fcd2e-c4fd-4349-8497-200edb3923c6";
  const checkNameAvailabilityRequest: CheckNameAvailabilityRequest = {
    name: "sampleName",
    type: "Microsoft.Help/diagnostics"
  };
  const options: DiagnosticsCheckNameAvailabilityOptionalParams = {
    checkNameAvailabilityRequest
  };
  const credential = new DefaultAzureCredential();
  const client = new HelpRP(credential);
  const result = await client.diagnostics.checkNameAvailability(scope, options);
  console.log(result);
}

/**
 * This sample demonstrates how to This API is used to check the uniqueness of a resource name used for a diagnostic check.
 *
 * @summary This API is used to check the uniqueness of a resource name used for a diagnostic check.
 * x-ms-original-file: specification/help/resource-manager/Microsoft.Help/preview/2023-01-01-preview/examples/CheckNameAvailabilityForDiagnosticWhenNameIsNotAvailable.json
 */
async function exampleWhenNameIsNotAvailableForADiagnosticResource() {
  const scope = "subscriptions/0d0fcd2e-c4fd-4349-8497-200edb3923c6";
  const checkNameAvailabilityRequest: CheckNameAvailabilityRequest = {
    name: "sampleName",
    type: "Microsoft.Help/diagnostics"
  };
  const options: DiagnosticsCheckNameAvailabilityOptionalParams = {
    checkNameAvailabilityRequest
  };
  const credential = new DefaultAzureCredential();
  const client = new HelpRP(credential);
  const result = await client.diagnostics.checkNameAvailability(scope, options);
  console.log(result);
}

async function main() {
  exampleWhenNameIsAvailableForADiagnosticResource();
  exampleWhenNameIsNotAvailableForADiagnosticResource();
}

main().catch(console.error);
