/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  ReservationOrderResponse,
  ReservationOrderListOptionalParams,
  PurchaseRequest,
  ReservationOrderCalculateOptionalParams,
  ReservationOrderCalculateResponse,
  ReservationOrderPurchaseOptionalParams,
  ReservationOrderPurchaseResponse,
  ReservationOrderGetOptionalParams,
  ReservationOrderGetResponse,
  ChangeDirectoryRequest,
  ReservationOrderChangeDirectoryOptionalParams,
  ReservationOrderChangeDirectoryResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ReservationOrder. */
export interface ReservationOrder {
  /**
   * List of all the `ReservationOrder`s that the user has access to in the current tenant.
   * @param options The options parameters.
   */
  list(
    options?: ReservationOrderListOptionalParams
  ): PagedAsyncIterableIterator<ReservationOrderResponse>;
  /**
   * Calculate price for placing a `ReservationOrder`.
   * @param body Information needed for calculate or purchase reservation
   * @param options The options parameters.
   */
  calculate(
    body: PurchaseRequest,
    options?: ReservationOrderCalculateOptionalParams
  ): Promise<ReservationOrderCalculateResponse>;
  /**
   * Purchase `ReservationOrder` and create resource under the specified URI.
   * @param reservationOrderId Order Id of the reservation
   * @param body Information needed for calculate or purchase reservation
   * @param options The options parameters.
   */
  beginPurchase(
    reservationOrderId: string,
    body: PurchaseRequest,
    options?: ReservationOrderPurchaseOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<ReservationOrderPurchaseResponse>,
      ReservationOrderPurchaseResponse
    >
  >;
  /**
   * Purchase `ReservationOrder` and create resource under the specified URI.
   * @param reservationOrderId Order Id of the reservation
   * @param body Information needed for calculate or purchase reservation
   * @param options The options parameters.
   */
  beginPurchaseAndWait(
    reservationOrderId: string,
    body: PurchaseRequest,
    options?: ReservationOrderPurchaseOptionalParams
  ): Promise<ReservationOrderPurchaseResponse>;
  /**
   * Get the details of the `ReservationOrder`.
   * @param reservationOrderId Order Id of the reservation
   * @param options The options parameters.
   */
  get(
    reservationOrderId: string,
    options?: ReservationOrderGetOptionalParams
  ): Promise<ReservationOrderGetResponse>;
  /**
   * Change directory (tenant) of `ReservationOrder` and all `Reservation` under it to specified tenant
   * id
   * @param reservationOrderId Order Id of the reservation
   * @param body Information needed to change directory of reservation order
   * @param options The options parameters.
   */
  changeDirectory(
    reservationOrderId: string,
    body: ChangeDirectoryRequest,
    options?: ReservationOrderChangeDirectoryOptionalParams
  ): Promise<ReservationOrderChangeDirectoryResponse>;
}
