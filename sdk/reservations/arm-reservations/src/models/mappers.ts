/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const AvailableScopeRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvailableScopeRequest",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "AvailableScopeRequestProperties"
        }
      }
    }
  }
};

export const AvailableScopeRequestProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvailableScopeRequestProperties",
    modelProperties: {
      scopes: {
        serializedName: "scopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AvailableScopeProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvailableScopeProperties",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SubscriptionScopeProperties"
        }
      }
    }
  }
};

export const SubscriptionScopeProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubscriptionScopeProperties",
    modelProperties: {
      scopes: {
        serializedName: "scopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ScopeProperties"
            }
          }
        }
      }
    }
  }
};

export const ScopeProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScopeProperties",
    modelProperties: {
      scope: {
        serializedName: "scope",
        type: {
          name: "String"
        }
      },
      valid: {
        serializedName: "valid",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ErrorModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorModel",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ExtendedErrorInfo"
        }
      }
    }
  }
};

export const ExtendedErrorInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExtendedErrorInfo",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CatalogsResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CatalogsResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Catalog"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      totalItems: {
        serializedName: "totalItems",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Catalog: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Catalog",
    modelProperties: {
      resourceType: {
        serializedName: "resourceType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      billingPlans: {
        serializedName: "billingPlans",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Sequence", element: { type: { name: "String" } } }
          }
        }
      },
      terms: {
        serializedName: "terms",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      locations: {
        serializedName: "locations",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      skuProperties: {
        serializedName: "skuProperties",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SkuProperty"
            }
          }
        }
      },
      msrp: {
        serializedName: "msrp",
        type: {
          name: "Composite",
          className: "CatalogMsrp"
        }
      },
      restrictions: {
        serializedName: "restrictions",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SkuRestriction"
            }
          }
        }
      },
      tier: {
        serializedName: "tier",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      capabilities: {
        serializedName: "capabilities",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SkuCapability"
            }
          }
        }
      }
    }
  }
};

export const SkuProperty: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SkuProperty",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CatalogMsrp: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CatalogMsrp",
    modelProperties: {
      p1Y: {
        serializedName: "p1Y",
        type: {
          name: "Composite",
          className: "Price"
        }
      },
      p3Y: {
        serializedName: "p3Y",
        type: {
          name: "Composite",
          className: "Price"
        }
      },
      p5Y: {
        serializedName: "p5Y",
        type: {
          name: "Composite",
          className: "Price"
        }
      }
    }
  }
};

export const Price: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Price",
    modelProperties: {
      currencyCode: {
        serializedName: "currencyCode",
        type: {
          name: "String"
        }
      },
      amount: {
        serializedName: "amount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const SkuRestriction: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SkuRestriction",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      reasonCode: {
        serializedName: "reasonCode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SkuCapability: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SkuCapability",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppliedReservations: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppliedReservations",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      reservationOrderIds: {
        serializedName: "properties.reservationOrderIds",
        type: {
          name: "Composite",
          className: "AppliedReservationList"
        }
      }
    }
  }
};

export const AppliedReservationList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppliedReservationList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PurchaseRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PurchaseRequest",
    modelProperties: {
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "SkuName"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      reservedResourceType: {
        serializedName: "properties.reservedResourceType",
        type: {
          name: "String"
        }
      },
      billingScopeId: {
        serializedName: "properties.billingScopeId",
        type: {
          name: "String"
        }
      },
      term: {
        serializedName: "properties.term",
        type: {
          name: "String"
        }
      },
      billingPlan: {
        serializedName: "properties.billingPlan",
        type: {
          name: "String"
        }
      },
      quantity: {
        serializedName: "properties.quantity",
        type: {
          name: "Number"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      appliedScopeType: {
        serializedName: "properties.appliedScopeType",
        type: {
          name: "String"
        }
      },
      appliedScopes: {
        serializedName: "properties.appliedScopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      appliedScopeProperties: {
        serializedName: "properties.appliedScopeProperties",
        type: {
          name: "Composite",
          className: "AppliedScopeProperties"
        }
      },
      renew: {
        defaultValue: false,
        serializedName: "properties.renew",
        type: {
          name: "Boolean"
        }
      },
      reservedResourceProperties: {
        serializedName: "properties.reservedResourceProperties",
        type: {
          name: "Composite",
          className: "PurchaseRequestPropertiesReservedResourceProperties"
        }
      },
      reviewDateTime: {
        serializedName: "properties.reviewDateTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const SkuName: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SkuName",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppliedScopeProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppliedScopeProperties",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      managementGroupId: {
        serializedName: "managementGroupId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroupId: {
        serializedName: "resourceGroupId",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PurchaseRequestPropertiesReservedResourceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PurchaseRequestPropertiesReservedResourceProperties",
    modelProperties: {
      instanceFlexibility: {
        serializedName: "instanceFlexibility",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CalculatePriceResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CalculatePriceResponse",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "CalculatePriceResponseProperties"
        }
      }
    }
  }
};

export const CalculatePriceResponseProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CalculatePriceResponseProperties",
    modelProperties: {
      billingCurrencyTotal: {
        serializedName: "billingCurrencyTotal",
        type: {
          name: "Composite",
          className: "CalculatePriceResponsePropertiesBillingCurrencyTotal"
        }
      },
      netTotal: {
        serializedName: "netTotal",
        type: {
          name: "Number"
        }
      },
      taxTotal: {
        serializedName: "taxTotal",
        type: {
          name: "Number"
        }
      },
      grandTotal: {
        serializedName: "grandTotal",
        type: {
          name: "Number"
        }
      },
      isTaxIncluded: {
        serializedName: "isTaxIncluded",
        type: {
          name: "Boolean"
        }
      },
      isBillingPartnerManaged: {
        serializedName: "isBillingPartnerManaged",
        type: {
          name: "Boolean"
        }
      },
      reservationOrderId: {
        serializedName: "reservationOrderId",
        type: {
          name: "String"
        }
      },
      skuTitle: {
        serializedName: "skuTitle",
        type: {
          name: "String"
        }
      },
      skuDescription: {
        serializedName: "skuDescription",
        type: {
          name: "String"
        }
      },
      pricingCurrencyTotal: {
        serializedName: "pricingCurrencyTotal",
        type: {
          name: "Composite",
          className: "CalculatePriceResponsePropertiesPricingCurrencyTotal"
        }
      },
      paymentSchedule: {
        serializedName: "paymentSchedule",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PaymentDetail"
            }
          }
        }
      }
    }
  }
};

export const CalculatePriceResponsePropertiesBillingCurrencyTotal: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CalculatePriceResponsePropertiesBillingCurrencyTotal",
    modelProperties: {
      currencyCode: {
        serializedName: "currencyCode",
        type: {
          name: "String"
        }
      },
      amount: {
        serializedName: "amount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CalculatePriceResponsePropertiesPricingCurrencyTotal: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CalculatePriceResponsePropertiesPricingCurrencyTotal",
    modelProperties: {
      currencyCode: {
        serializedName: "currencyCode",
        type: {
          name: "String"
        }
      },
      amount: {
        serializedName: "amount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PaymentDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PaymentDetail",
    modelProperties: {
      dueDate: {
        serializedName: "dueDate",
        type: {
          name: "Date"
        }
      },
      paymentDate: {
        serializedName: "paymentDate",
        type: {
          name: "Date"
        }
      },
      pricingCurrencyTotal: {
        serializedName: "pricingCurrencyTotal",
        type: {
          name: "Composite",
          className: "Price"
        }
      },
      billingCurrencyTotal: {
        serializedName: "billingCurrencyTotal",
        type: {
          name: "Composite",
          className: "Price"
        }
      },
      billingAccount: {
        serializedName: "billingAccount",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      extendedStatusInfo: {
        serializedName: "extendedStatusInfo",
        type: {
          name: "Composite",
          className: "ExtendedStatusInfo"
        }
      }
    }
  }
};

export const ExtendedStatusInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExtendedStatusInfo",
    modelProperties: {
      statusCode: {
        serializedName: "statusCode",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReservationOrderList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReservationOrderList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReservationOrderResponse"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReservationOrderResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReservationOrderResponse",
    modelProperties: {
      etag: {
        serializedName: "etag",
        type: {
          name: "Number"
        }
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      requestDateTime: {
        serializedName: "properties.requestDateTime",
        type: {
          name: "DateTime"
        }
      },
      createdDateTime: {
        serializedName: "properties.createdDateTime",
        type: {
          name: "DateTime"
        }
      },
      expiryDate: {
        serializedName: "properties.expiryDate",
        type: {
          name: "Date"
        }
      },
      expiryDateTime: {
        serializedName: "properties.expiryDateTime",
        type: {
          name: "DateTime"
        }
      },
      benefitStartTime: {
        serializedName: "properties.benefitStartTime",
        type: {
          name: "DateTime"
        }
      },
      originalQuantity: {
        serializedName: "properties.originalQuantity",
        type: {
          name: "Number"
        }
      },
      term: {
        serializedName: "properties.term",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      billingPlan: {
        serializedName: "properties.billingPlan",
        type: {
          name: "String"
        }
      },
      planInformation: {
        serializedName: "properties.planInformation",
        type: {
          name: "Composite",
          className: "ReservationOrderBillingPlanInformation"
        }
      },
      reservations: {
        serializedName: "properties.reservations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReservationResponse"
            }
          }
        }
      },
      reviewDateTime: {
        serializedName: "properties.reviewDateTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ReservationOrderBillingPlanInformation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReservationOrderBillingPlanInformation",
    modelProperties: {
      pricingCurrencyTotal: {
        serializedName: "pricingCurrencyTotal",
        type: {
          name: "Composite",
          className: "Price"
        }
      },
      startDate: {
        serializedName: "startDate",
        type: {
          name: "Date"
        }
      },
      nextPaymentDueDate: {
        serializedName: "nextPaymentDueDate",
        type: {
          name: "Date"
        }
      },
      transactions: {
        serializedName: "transactions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PaymentDetail"
            }
          }
        }
      }
    }
  }
};

export const ReservationsProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReservationsProperties",
    modelProperties: {
      reservedResourceType: {
        serializedName: "reservedResourceType",
        type: {
          name: "String"
        }
      },
      instanceFlexibility: {
        serializedName: "instanceFlexibility",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      appliedScopes: {
        serializedName: "appliedScopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      appliedScopeType: {
        serializedName: "appliedScopeType",
        type: {
          name: "String"
        }
      },
      archived: {
        serializedName: "archived",
        type: {
          name: "Boolean"
        }
      },
      capabilities: {
        serializedName: "capabilities",
        type: {
          name: "String"
        }
      },
      quantity: {
        serializedName: "quantity",
        type: {
          name: "Number"
        }
      },
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      effectiveDateTime: {
        serializedName: "effectiveDateTime",
        type: {
          name: "DateTime"
        }
      },
      benefitStartTime: {
        serializedName: "benefitStartTime",
        type: {
          name: "DateTime"
        }
      },
      lastUpdatedDateTime: {
        serializedName: "lastUpdatedDateTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      expiryDate: {
        serializedName: "expiryDate",
        type: {
          name: "Date"
        }
      },
      expiryDateTime: {
        serializedName: "expiryDateTime",
        type: {
          name: "DateTime"
        }
      },
      reviewDateTime: {
        serializedName: "reviewDateTime",
        type: {
          name: "DateTime"
        }
      },
      skuDescription: {
        serializedName: "skuDescription",
        type: {
          name: "String"
        }
      },
      extendedStatusInfo: {
        serializedName: "extendedStatusInfo",
        type: {
          name: "Composite",
          className: "ExtendedStatusInfo"
        }
      },
      billingPlan: {
        serializedName: "billingPlan",
        type: {
          name: "String"
        }
      },
      displayProvisioningState: {
        serializedName: "displayProvisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      provisioningSubState: {
        serializedName: "provisioningSubState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      purchaseDate: {
        serializedName: "purchaseDate",
        type: {
          name: "Date"
        }
      },
      purchaseDateTime: {
        serializedName: "purchaseDateTime",
        type: {
          name: "DateTime"
        }
      },
      splitProperties: {
        serializedName: "splitProperties",
        type: {
          name: "Composite",
          className: "ReservationSplitProperties"
        }
      },
      mergeProperties: {
        serializedName: "mergeProperties",
        type: {
          name: "Composite",
          className: "ReservationMergeProperties"
        }
      },
      swapProperties: {
        serializedName: "swapProperties",
        type: {
          name: "Composite",
          className: "ReservationSwapProperties"
        }
      },
      appliedScopeProperties: {
        serializedName: "appliedScopeProperties",
        type: {
          name: "Composite",
          className: "AppliedScopeProperties"
        }
      },
      billingScopeId: {
        serializedName: "billingScopeId",
        type: {
          name: "String"
        }
      },
      renew: {
        defaultValue: false,
        serializedName: "renew",
        type: {
          name: "Boolean"
        }
      },
      renewSource: {
        serializedName: "renewSource",
        type: {
          name: "String"
        }
      },
      renewDestination: {
        serializedName: "renewDestination",
        type: {
          name: "String"
        }
      },
      renewProperties: {
        serializedName: "renewProperties",
        type: {
          name: "Composite",
          className: "RenewPropertiesResponse"
        }
      },
      term: {
        serializedName: "term",
        type: {
          name: "String"
        }
      },
      userFriendlyAppliedScopeType: {
        serializedName: "userFriendlyAppliedScopeType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      userFriendlyRenewState: {
        serializedName: "userFriendlyRenewState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      utilization: {
        serializedName: "utilization",
        type: {
          name: "Composite",
          className: "ReservationsPropertiesUtilization"
        }
      }
    }
  }
};

export const ReservationSplitProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReservationSplitProperties",
    modelProperties: {
      splitDestinations: {
        serializedName: "splitDestinations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      splitSource: {
        serializedName: "splitSource",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReservationMergeProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReservationMergeProperties",
    modelProperties: {
      mergeDestination: {
        serializedName: "mergeDestination",
        type: {
          name: "String"
        }
      },
      mergeSources: {
        serializedName: "mergeSources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ReservationSwapProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReservationSwapProperties",
    modelProperties: {
      swapSource: {
        serializedName: "swapSource",
        type: {
          name: "String"
        }
      },
      swapDestination: {
        serializedName: "swapDestination",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RenewPropertiesResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RenewPropertiesResponse",
    modelProperties: {
      purchaseProperties: {
        serializedName: "purchaseProperties",
        type: {
          name: "Composite",
          className: "PurchaseRequest"
        }
      },
      pricingCurrencyTotal: {
        serializedName: "pricingCurrencyTotal",
        type: {
          name: "Composite",
          className: "RenewPropertiesResponsePricingCurrencyTotal"
        }
      },
      billingCurrencyTotal: {
        serializedName: "billingCurrencyTotal",
        type: {
          name: "Composite",
          className: "RenewPropertiesResponseBillingCurrencyTotal"
        }
      }
    }
  }
};

export const RenewPropertiesResponsePricingCurrencyTotal: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RenewPropertiesResponsePricingCurrencyTotal",
    modelProperties: {
      currencyCode: {
        serializedName: "currencyCode",
        type: {
          name: "String"
        }
      },
      amount: {
        serializedName: "amount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const RenewPropertiesResponseBillingCurrencyTotal: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RenewPropertiesResponseBillingCurrencyTotal",
    modelProperties: {
      currencyCode: {
        serializedName: "currencyCode",
        type: {
          name: "String"
        }
      },
      amount: {
        serializedName: "amount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ReservationsPropertiesUtilization: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReservationsPropertiesUtilization",
    modelProperties: {
      trend: {
        serializedName: "trend",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      aggregates: {
        serializedName: "aggregates",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReservationUtilizationAggregates"
            }
          }
        }
      }
    }
  }
};

export const ReservationUtilizationAggregates: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReservationUtilizationAggregates",
    modelProperties: {
      grain: {
        serializedName: "grain",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      grainUnit: {
        serializedName: "grainUnit",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      valueUnit: {
        serializedName: "valueUnit",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const SplitRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SplitRequest",
    modelProperties: {
      quantities: {
        serializedName: "properties.quantities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      },
      reservationId: {
        serializedName: "properties.reservationId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MergeRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MergeRequest",
    modelProperties: {
      sources: {
        serializedName: "properties.sources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ReservationList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReservationList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReservationResponse"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Patch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Patch",
    modelProperties: {
      appliedScopeType: {
        serializedName: "properties.appliedScopeType",
        type: {
          name: "String"
        }
      },
      appliedScopes: {
        serializedName: "properties.appliedScopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      appliedScopeProperties: {
        serializedName: "properties.appliedScopeProperties",
        type: {
          name: "Composite",
          className: "AppliedScopeProperties"
        }
      },
      instanceFlexibility: {
        serializedName: "properties.instanceFlexibility",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      },
      renew: {
        defaultValue: false,
        serializedName: "properties.renew",
        type: {
          name: "Boolean"
        }
      },
      renewProperties: {
        serializedName: "properties.renewProperties",
        type: {
          name: "Composite",
          className: "PatchPropertiesRenewProperties"
        }
      },
      reviewDateTime: {
        serializedName: "properties.reviewDateTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const PatchPropertiesRenewProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PatchPropertiesRenewProperties",
    modelProperties: {
      purchaseProperties: {
        serializedName: "purchaseProperties",
        type: {
          name: "Composite",
          className: "PurchaseRequest"
        }
      }
    }
  }
};

export const OperationList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationResponse"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationResponse",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        type: {
          name: "Boolean"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CalculateRefundRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CalculateRefundRequest",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "CalculateRefundRequestProperties"
        }
      }
    }
  }
};

export const CalculateRefundRequestProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CalculateRefundRequestProperties",
    modelProperties: {
      scope: {
        serializedName: "scope",
        type: {
          name: "String"
        }
      },
      reservationToReturn: {
        serializedName: "reservationToReturn",
        type: {
          name: "Composite",
          className: "ReservationToReturn"
        }
      }
    }
  }
};

export const ReservationToReturn: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReservationToReturn",
    modelProperties: {
      reservationId: {
        serializedName: "reservationId",
        type: {
          name: "String"
        }
      },
      quantity: {
        serializedName: "quantity",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CalculateRefundResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CalculateRefundResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "RefundResponseProperties"
        }
      }
    }
  }
};

export const RefundResponseProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RefundResponseProperties",
    modelProperties: {
      sessionId: {
        serializedName: "sessionId",
        type: {
          name: "String"
        }
      },
      quantity: {
        serializedName: "quantity",
        type: {
          name: "Number"
        }
      },
      billingRefundAmount: {
        serializedName: "billingRefundAmount",
        type: {
          name: "Composite",
          className: "Price"
        }
      },
      pricingRefundAmount: {
        serializedName: "pricingRefundAmount",
        type: {
          name: "Composite",
          className: "Price"
        }
      },
      policyResult: {
        serializedName: "policyResult",
        type: {
          name: "Composite",
          className: "RefundPolicyResult"
        }
      },
      billingInformation: {
        serializedName: "billingInformation",
        type: {
          name: "Composite",
          className: "RefundBillingInformation"
        }
      }
    }
  }
};

export const RefundPolicyResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RefundPolicyResult",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "RefundPolicyResultProperty"
        }
      }
    }
  }
};

export const RefundPolicyResultProperty: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RefundPolicyResultProperty",
    modelProperties: {
      consumedRefundsTotal: {
        serializedName: "consumedRefundsTotal",
        type: {
          name: "Composite",
          className: "Price"
        }
      },
      maxRefundLimit: {
        serializedName: "maxRefundLimit",
        type: {
          name: "Composite",
          className: "Price"
        }
      },
      policyErrors: {
        serializedName: "policyErrors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RefundPolicyError"
            }
          }
        }
      }
    }
  }
};

export const RefundPolicyError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RefundPolicyError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RefundBillingInformation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RefundBillingInformation",
    modelProperties: {
      billingPlan: {
        serializedName: "billingPlan",
        type: {
          name: "String"
        }
      },
      completedTransactions: {
        serializedName: "completedTransactions",
        type: {
          name: "Number"
        }
      },
      totalTransactions: {
        serializedName: "totalTransactions",
        type: {
          name: "Number"
        }
      },
      billingCurrencyTotalPaidAmount: {
        serializedName: "billingCurrencyTotalPaidAmount",
        type: {
          name: "Composite",
          className: "Price"
        }
      },
      billingCurrencyProratedAmount: {
        serializedName: "billingCurrencyProratedAmount",
        type: {
          name: "Composite",
          className: "Price"
        }
      },
      billingCurrencyRemainingCommitmentAmount: {
        serializedName: "billingCurrencyRemainingCommitmentAmount",
        type: {
          name: "Composite",
          className: "Price"
        }
      }
    }
  }
};

export const RefundRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RefundRequest",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "RefundRequestProperties"
        }
      }
    }
  }
};

export const RefundRequestProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RefundRequestProperties",
    modelProperties: {
      sessionId: {
        serializedName: "sessionId",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "String"
        }
      },
      reservationToReturn: {
        serializedName: "reservationToReturn",
        type: {
          name: "Composite",
          className: "ReservationToReturn"
        }
      },
      returnReason: {
        serializedName: "returnReason",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RefundResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RefundResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "RefundResponseProperties"
        }
      }
    }
  }
};

export const CalculateExchangeRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CalculateExchangeRequest",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "CalculateExchangeRequestProperties"
        }
      }
    }
  }
};

export const CalculateExchangeRequestProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CalculateExchangeRequestProperties",
    modelProperties: {
      reservationsToPurchase: {
        serializedName: "reservationsToPurchase",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PurchaseRequest"
            }
          }
        }
      },
      savingsPlansToPurchase: {
        serializedName: "savingsPlansToPurchase",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SavingsPlanPurchaseRequest"
            }
          }
        }
      },
      reservationsToExchange: {
        serializedName: "reservationsToExchange",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReservationToReturn"
            }
          }
        }
      }
    }
  }
};

export const SavingsPlanPurchaseRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SavingsPlanPurchaseRequest",
    modelProperties: {
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "SkuName"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      billingScopeId: {
        serializedName: "properties.billingScopeId",
        type: {
          name: "String"
        }
      },
      term: {
        serializedName: "properties.term",
        type: {
          name: "String"
        }
      },
      billingPlan: {
        serializedName: "properties.billingPlan",
        type: {
          name: "String"
        }
      },
      appliedScopeType: {
        serializedName: "properties.appliedScopeType",
        type: {
          name: "String"
        }
      },
      appliedScopeProperties: {
        serializedName: "properties.appliedScopeProperties",
        type: {
          name: "Composite",
          className: "AppliedScopeProperties"
        }
      },
      commitment: {
        serializedName: "properties.commitment",
        type: {
          name: "Composite",
          className: "Commitment"
        }
      }
    }
  }
};

export const CalculateExchangeOperationResultResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CalculateExchangeOperationResultResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "CalculateExchangeResponseProperties"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "OperationResultError"
        }
      }
    }
  }
};

export const CalculateExchangeResponseProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CalculateExchangeResponseProperties",
    modelProperties: {
      sessionId: {
        serializedName: "sessionId",
        type: {
          name: "String"
        }
      },
      netPayable: {
        serializedName: "netPayable",
        type: {
          name: "Composite",
          className: "Price"
        }
      },
      refundsTotal: {
        serializedName: "refundsTotal",
        type: {
          name: "Composite",
          className: "Price"
        }
      },
      purchasesTotal: {
        serializedName: "purchasesTotal",
        type: {
          name: "Composite",
          className: "Price"
        }
      },
      reservationsToPurchase: {
        serializedName: "reservationsToPurchase",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReservationToPurchaseCalculateExchange"
            }
          }
        }
      },
      savingsPlansToPurchase: {
        serializedName: "savingsPlansToPurchase",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SavingsPlanToPurchaseCalculateExchange"
            }
          }
        }
      },
      reservationsToExchange: {
        serializedName: "reservationsToExchange",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReservationToExchange"
            }
          }
        }
      },
      policyResult: {
        serializedName: "policyResult",
        type: {
          name: "Composite",
          className: "ExchangePolicyErrors"
        }
      }
    }
  }
};

export const ReservationToPurchaseCalculateExchange: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReservationToPurchaseCalculateExchange",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "PurchaseRequest"
        }
      },
      billingCurrencyTotal: {
        serializedName: "billingCurrencyTotal",
        type: {
          name: "Composite",
          className: "Price"
        }
      }
    }
  }
};

export const SavingsPlanToPurchaseCalculateExchange: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SavingsPlanToPurchaseCalculateExchange",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SavingsPlanPurchaseRequest"
        }
      },
      billingCurrencyTotal: {
        serializedName: "billingCurrencyTotal",
        type: {
          name: "Composite",
          className: "Price"
        }
      }
    }
  }
};

export const ReservationToExchange: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReservationToExchange",
    modelProperties: {
      reservationId: {
        serializedName: "reservationId",
        type: {
          name: "String"
        }
      },
      quantity: {
        serializedName: "quantity",
        type: {
          name: "Number"
        }
      },
      billingRefundAmount: {
        serializedName: "billingRefundAmount",
        type: {
          name: "Composite",
          className: "Price"
        }
      },
      billingInformation: {
        serializedName: "billingInformation",
        type: {
          name: "Composite",
          className: "BillingInformation"
        }
      }
    }
  }
};

export const BillingInformation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingInformation",
    modelProperties: {
      billingCurrencyTotalPaidAmount: {
        serializedName: "billingCurrencyTotalPaidAmount",
        type: {
          name: "Composite",
          className: "Price"
        }
      },
      billingCurrencyProratedAmount: {
        serializedName: "billingCurrencyProratedAmount",
        type: {
          name: "Composite",
          className: "Price"
        }
      },
      billingCurrencyRemainingCommitmentAmount: {
        serializedName: "billingCurrencyRemainingCommitmentAmount",
        type: {
          name: "Composite",
          className: "Price"
        }
      }
    }
  }
};

export const ExchangePolicyErrors: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExchangePolicyErrors",
    modelProperties: {
      policyErrors: {
        serializedName: "policyErrors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExchangePolicyError"
            }
          }
        }
      }
    }
  }
};

export const ExchangePolicyError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExchangePolicyError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationResultError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationResultError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExchangeRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExchangeRequest",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ExchangeRequestProperties"
        }
      }
    }
  }
};

export const ExchangeRequestProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExchangeRequestProperties",
    modelProperties: {
      sessionId: {
        serializedName: "sessionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExchangeOperationResultResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExchangeOperationResultResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ExchangeResponseProperties"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "OperationResultError"
        }
      }
    }
  }
};

export const ExchangeResponseProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExchangeResponseProperties",
    modelProperties: {
      sessionId: {
        serializedName: "sessionId",
        type: {
          name: "String"
        }
      },
      netPayable: {
        serializedName: "netPayable",
        type: {
          name: "Composite",
          className: "Price"
        }
      },
      refundsTotal: {
        serializedName: "refundsTotal",
        type: {
          name: "Composite",
          className: "Price"
        }
      },
      purchasesTotal: {
        serializedName: "purchasesTotal",
        type: {
          name: "Composite",
          className: "Price"
        }
      },
      reservationsToPurchase: {
        serializedName: "reservationsToPurchase",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReservationToPurchaseExchange"
            }
          }
        }
      },
      savingsPlansToPurchase: {
        serializedName: "savingsPlansToPurchase",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SavingsPlanToPurchaseExchange"
            }
          }
        }
      },
      reservationsToExchange: {
        serializedName: "reservationsToExchange",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReservationToReturnForExchange"
            }
          }
        }
      },
      policyResult: {
        serializedName: "policyResult",
        type: {
          name: "Composite",
          className: "ExchangePolicyErrors"
        }
      }
    }
  }
};

export const ReservationToPurchaseExchange: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReservationToPurchaseExchange",
    modelProperties: {
      reservationOrderId: {
        serializedName: "reservationOrderId",
        type: {
          name: "String"
        }
      },
      reservationId: {
        serializedName: "reservationId",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "PurchaseRequest"
        }
      },
      billingCurrencyTotal: {
        serializedName: "billingCurrencyTotal",
        type: {
          name: "Composite",
          className: "Price"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SavingsPlanToPurchaseExchange: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SavingsPlanToPurchaseExchange",
    modelProperties: {
      savingsPlanOrderId: {
        serializedName: "savingsPlanOrderId",
        type: {
          name: "String"
        }
      },
      savingsPlanId: {
        serializedName: "savingsPlanId",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SavingsPlanPurchaseRequest"
        }
      },
      billingCurrencyTotal: {
        serializedName: "billingCurrencyTotal",
        type: {
          name: "Composite",
          className: "Price"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReservationToReturnForExchange: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReservationToReturnForExchange",
    modelProperties: {
      reservationId: {
        serializedName: "reservationId",
        type: {
          name: "String"
        }
      },
      quantity: {
        serializedName: "quantity",
        type: {
          name: "Number"
        }
      },
      billingRefundAmount: {
        serializedName: "billingRefundAmount",
        type: {
          name: "Composite",
          className: "Price"
        }
      },
      billingInformation: {
        serializedName: "billingInformation",
        type: {
          name: "Composite",
          className: "BillingInformation"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReservationsListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReservationsListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReservationResponse"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      summary: {
        serializedName: "summary",
        type: {
          name: "Composite",
          className: "ReservationSummary"
        }
      }
    }
  }
};

export const ReservationSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReservationSummary",
    modelProperties: {
      succeededCount: {
        serializedName: "succeededCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      failedCount: {
        serializedName: "failedCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      expiringCount: {
        serializedName: "expiringCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      expiredCount: {
        serializedName: "expiredCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      pendingCount: {
        serializedName: "pendingCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      cancelledCount: {
        serializedName: "cancelledCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      processingCount: {
        serializedName: "processingCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      warningCount: {
        serializedName: "warningCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      noBenefitCount: {
        serializedName: "noBenefitCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetails"
        }
      }
    }
  }
};

export const ErrorDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetails",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ChangeDirectoryRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ChangeDirectoryRequest",
    modelProperties: {
      destinationTenantId: {
        serializedName: "destinationTenantId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ChangeDirectoryResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ChangeDirectoryResponse",
    modelProperties: {
      reservationOrder: {
        serializedName: "reservationOrder",
        type: {
          name: "Composite",
          className: "ChangeDirectoryResult"
        }
      },
      reservations: {
        serializedName: "reservations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ChangeDirectoryResult"
            }
          }
        }
      }
    }
  }
};

export const ChangeDirectoryResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ChangeDirectoryResult",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      isSucceeded: {
        serializedName: "isSucceeded",
        type: {
          name: "Boolean"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CurrentQuotaLimitBase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CurrentQuotaLimitBase",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "QuotaProperties"
        }
      }
    }
  }
};

export const QuotaProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaProperties",
    modelProperties: {
      limit: {
        serializedName: "limit",
        type: {
          name: "Number"
        }
      },
      currentValue: {
        serializedName: "currentValue",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "Composite",
          className: "ResourceName"
        }
      },
      resourceType: {
        serializedName: "resourceType",
        type: {
          name: "String"
        }
      },
      quotaPeriod: {
        serializedName: "quotaPeriod",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const ResourceName: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceName",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      localizedValue: {
        serializedName: "localizedValue",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExceptionResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExceptionResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ServiceError"
        }
      }
    }
  }
};

export const ServiceError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceErrorDetail"
            }
          }
        }
      }
    }
  }
};

export const ServiceErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QuotaRequestSubmitResponse201: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaRequestSubmitResponse201",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "properties.message",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QuotaLimits: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaLimits",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CurrentQuotaLimitBase"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QuotaRequestDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaRequestDetails",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "properties.message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      requestSubmitTime: {
        serializedName: "properties.requestSubmitTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      value: {
        serializedName: "properties.value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubRequest"
            }
          }
        }
      }
    }
  }
};

export const QuotaRequestProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaRequestProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      requestSubmitTime: {
        serializedName: "requestSubmitTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubRequest"
            }
          }
        }
      }
    }
  }
};

export const SubRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubRequest",
    modelProperties: {
      limit: {
        serializedName: "limit",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "Composite",
          className: "ResourceName"
        }
      },
      resourceType: {
        serializedName: "resourceType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      subRequestId: {
        serializedName: "subRequestId",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QuotaRequestDetailsList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaRequestDetailsList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "QuotaRequestDetails"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CurrentQuotaLimit: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CurrentQuotaLimit",
    modelProperties: {
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "properties.message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "quotaInformation.id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "quotaInformation.name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "quotaInformation.type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "quotaInformation.properties",
        type: {
          name: "Composite",
          className: "QuotaProperties"
        }
      }
    }
  }
};

export const QuotaLimitsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaLimitsResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CurrentQuotaLimit"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CreateGenericQuotaRequestParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CreateGenericQuotaRequestParameters",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CurrentQuotaLimitBase"
            }
          }
        }
      }
    }
  }
};

export const QuotaRequestOneResourceSubmitResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaRequestOneResourceSubmitResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "properties.message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      requestSubmitTime: {
        serializedName: "properties.requestSubmitTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      idPropertiesId: {
        serializedName: "properties.properties.id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      namePropertiesName: {
        serializedName: "properties.properties.name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      typePropertiesType: {
        serializedName: "properties.properties.type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties.properties.properties",
        type: {
          name: "Composite",
          className: "QuotaProperties"
        }
      }
    }
  }
};

export const QuotaRequestSubmitResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaRequestSubmitResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "QuotaRequestProperties"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Commitment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Commitment",
    modelProperties: {
      ...Price.type.modelProperties,
      grain: {
        serializedName: "grain",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const ReservationResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReservationResponse",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "Number"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "SkuName"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ReservationsProperties"
        }
      },
      kind: {
        defaultValue: "Microsoft.Compute",
        isConstant: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReservationSplitHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReservationSplitHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ReservationMergeHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReservationMergeHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ReservationUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReservationUpdateHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ReservationOrderPurchaseHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReservationOrderPurchaseHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ReturnPostHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReturnPostHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CalculateExchangePostHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CalculateExchangePostHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ExchangePostHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExchangePostHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const QuotaGetHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QuotaListHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaListHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QuotaListNextHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaListNextHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};
