/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CalculateRefund } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { AzureReservationAPI } from "../azureReservationAPI";
import {
  CalculateRefundRequest,
  CalculateRefundPostOptionalParams,
  CalculateRefundPostResponse
} from "../models";

/** Class containing CalculateRefund operations. */
export class CalculateRefundImpl implements CalculateRefund {
  private readonly client: AzureReservationAPI;

  /**
   * Initialize a new instance of the class CalculateRefund class.
   * @param client Reference to the service client
   */
  constructor(client: AzureReservationAPI) {
    this.client = client;
  }

  /**
   * Calculate price for returning `Reservations` if there are no policy errors.
   *
   * @param reservationOrderId Order Id of the reservation
   * @param body Information needed for calculating refund of a reservation.
   * @param options The options parameters.
   */
  post(
    reservationOrderId: string,
    body: CalculateRefundRequest,
    options?: CalculateRefundPostOptionalParams
  ): Promise<CalculateRefundPostResponse> {
    return this.client.sendOperationRequest(
      { reservationOrderId, body, options },
      postOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const postOperationSpec: coreClient.OperationSpec = {
  path:
    "/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/calculateRefund",
  httpMethod: "POST",
  responses: {
    200: {
      bodyMapper: Mappers.CalculateRefundResponse
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  requestBody: Parameters.body5,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.$host, Parameters.reservationOrderId],
  headerParameters: [Parameters.contentType, Parameters.accept],
  mediaType: "json",
  serializer
};
