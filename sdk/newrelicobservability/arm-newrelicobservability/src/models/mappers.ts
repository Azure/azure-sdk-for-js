/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      }
    }
  }
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const AccountsListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccountsListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccountResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const NewRelicMonitorResourceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NewRelicMonitorResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NewRelicMonitorResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NewRelicAccountProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NewRelicAccountProperties",
    modelProperties: {
      userId: {
        serializedName: "userId",
        type: {
          name: "String"
        }
      },
      accountInfo: {
        serializedName: "accountInfo",
        type: {
          name: "Composite",
          className: "AccountInfo"
        }
      },
      organizationInfo: {
        serializedName: "organizationInfo",
        type: {
          name: "Composite",
          className: "OrganizationInfo"
        }
      },
      singleSignOnProperties: {
        serializedName: "singleSignOnProperties",
        type: {
          name: "Composite",
          className: "NewRelicSingleSignOnProperties"
        }
      }
    }
  }
};

export const AccountInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccountInfo",
    modelProperties: {
      accountId: {
        serializedName: "accountId",
        type: {
          name: "String"
        }
      },
      ingestionKey: {
        serializedName: "ingestionKey",
        type: {
          name: "String"
        }
      },
      region: {
        serializedName: "region",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OrganizationInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OrganizationInfo",
    modelProperties: {
      organizationId: {
        serializedName: "organizationId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NewRelicSingleSignOnProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NewRelicSingleSignOnProperties",
    modelProperties: {
      singleSignOnState: {
        serializedName: "singleSignOnState",
        type: {
          name: "String"
        }
      },
      enterpriseAppId: {
        serializedName: "enterpriseAppId",
        type: {
          name: "String"
        }
      },
      singleSignOnUrl: {
        serializedName: "singleSignOnUrl",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserInfo",
    modelProperties: {
      firstName: {
        constraints: {
          MaxLength: 50
        },
        serializedName: "firstName",
        type: {
          name: "String"
        }
      },
      lastName: {
        constraints: {
          MaxLength: 50
        },
        serializedName: "lastName",
        type: {
          name: "String"
        }
      },
      emailAddress: {
        constraints: {
          Pattern: new RegExp(
            "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"
          )
        },
        serializedName: "emailAddress",
        type: {
          name: "String"
        }
      },
      phoneNumber: {
        constraints: {
          MaxLength: 40
        },
        serializedName: "phoneNumber",
        type: {
          name: "String"
        }
      },
      country: {
        serializedName: "country",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PlanData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PlanData",
    modelProperties: {
      usageType: {
        serializedName: "usageType",
        type: {
          name: "String"
        }
      },
      billingCycle: {
        serializedName: "billingCycle",
        type: {
          name: "String"
        }
      },
      planDetails: {
        serializedName: "planDetails",
        type: {
          name: "String"
        }
      },
      effectiveDate: {
        serializedName: "effectiveDate",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ManagedServiceIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedServiceIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "UserAssignedIdentity" }
          }
        }
      }
    }
  }
};

export const UserAssignedIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserAssignedIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      clientId: {
        serializedName: "clientId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const OrganizationsListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OrganizationsListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OrganizationResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PlanDataListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PlanDataListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PlanDataResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NewRelicMonitorResourceUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NewRelicMonitorResourceUpdate",
    modelProperties: {
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ManagedServiceIdentity"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      newRelicAccountProperties: {
        serializedName: "properties.newRelicAccountProperties",
        type: {
          name: "Composite",
          className: "NewRelicAccountProperties"
        }
      },
      userInfo: {
        serializedName: "properties.userInfo",
        type: {
          name: "Composite",
          className: "UserInfo"
        }
      },
      planData: {
        serializedName: "properties.planData",
        type: {
          name: "Composite",
          className: "PlanData"
        }
      },
      orgCreationSource: {
        serializedName: "properties.orgCreationSource",
        type: {
          name: "String"
        }
      },
      accountCreationSource: {
        serializedName: "properties.accountCreationSource",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetricsRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetricsRequest",
    modelProperties: {
      userEmail: {
        constraints: {
          Pattern: new RegExp(
            "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"
          )
        },
        serializedName: "userEmail",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetricRules: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetricRules",
    modelProperties: {
      sendMetrics: {
        serializedName: "sendMetrics",
        type: {
          name: "String"
        }
      },
      filteringTags: {
        serializedName: "filteringTags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FilteringTag"
            }
          }
        }
      },
      userEmail: {
        constraints: {
          Pattern: new RegExp(
            "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"
          )
        },
        serializedName: "userEmail",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FilteringTag: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FilteringTag",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      action: {
        serializedName: "action",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetricsStatusRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetricsStatusRequest",
    modelProperties: {
      azureResourceIds: {
        serializedName: "azureResourceIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      userEmail: {
        constraints: {
          Pattern: new RegExp(
            "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"
          )
        },
        serializedName: "userEmail",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetricsStatusResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetricsStatusResponse",
    modelProperties: {
      azureResourceIds: {
        serializedName: "azureResourceIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AppServicesGetRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppServicesGetRequest",
    modelProperties: {
      azureResourceIds: {
        serializedName: "azureResourceIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      userEmail: {
        constraints: {
          Pattern: new RegExp(
            "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"
          )
        },
        serializedName: "userEmail",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppServicesListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppServicesListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AppServiceInfo"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppServiceInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppServiceInfo",
    modelProperties: {
      azureResourceId: {
        serializedName: "azureResourceId",
        type: {
          name: "String"
        }
      },
      agentVersion: {
        serializedName: "agentVersion",
        type: {
          name: "String"
        }
      },
      agentStatus: {
        serializedName: "agentStatus",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SwitchBillingRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SwitchBillingRequest",
    modelProperties: {
      azureResourceId: {
        serializedName: "azureResourceId",
        type: {
          name: "String"
        }
      },
      organizationId: {
        serializedName: "organizationId",
        type: {
          name: "String"
        }
      },
      planData: {
        serializedName: "planData",
        type: {
          name: "Composite",
          className: "PlanData"
        }
      },
      userEmail: {
        constraints: {
          Pattern: new RegExp(
            "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"
          )
        },
        serializedName: "userEmail",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HostsGetRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HostsGetRequest",
    modelProperties: {
      vmIds: {
        serializedName: "vmIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      userEmail: {
        constraints: {
          Pattern: new RegExp(
            "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"
          )
        },
        serializedName: "userEmail",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VMHostsListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VMHostsListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VMInfo"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VMInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VMInfo",
    modelProperties: {
      vmId: {
        serializedName: "vmId",
        type: {
          name: "String"
        }
      },
      agentVersion: {
        serializedName: "agentVersion",
        type: {
          name: "String"
        }
      },
      agentStatus: {
        serializedName: "agentStatus",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MonitoredResourceListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitoredResourceListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MonitoredResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MonitoredResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitoredResource",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      sendingMetrics: {
        serializedName: "sendingMetrics",
        type: {
          name: "String"
        }
      },
      reasonForMetricsStatus: {
        serializedName: "reasonForMetricsStatus",
        type: {
          name: "String"
        }
      },
      sendingLogs: {
        serializedName: "sendingLogs",
        type: {
          name: "String"
        }
      },
      reasonForLogsStatus: {
        serializedName: "reasonForLogsStatus",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TagRuleListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TagRuleListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TagRule"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogRules: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogRules",
    modelProperties: {
      sendAadLogs: {
        serializedName: "sendAadLogs",
        type: {
          name: "String"
        }
      },
      sendSubscriptionLogs: {
        serializedName: "sendSubscriptionLogs",
        type: {
          name: "String"
        }
      },
      sendActivityLogs: {
        serializedName: "sendActivityLogs",
        type: {
          name: "String"
        }
      },
      filteringTags: {
        serializedName: "filteringTags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FilteringTag"
            }
          }
        }
      }
    }
  }
};

export const TagRuleUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TagRuleUpdate",
    modelProperties: {
      logRules: {
        serializedName: "properties.logRules",
        type: {
          name: "Composite",
          className: "LogRules"
        }
      },
      metricRules: {
        serializedName: "properties.metricRules",
        type: {
          name: "Composite",
          className: "MetricRules"
        }
      }
    }
  }
};

export const VMExtensionPayload: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VMExtensionPayload",
    modelProperties: {
      ingestionKey: {
        serializedName: "ingestionKey",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppServicesGetParameter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppServicesGetParameter",
    modelProperties: {
      request: {
        serializedName: "request",
        type: {
          name: "Composite",
          className: "AppServicesGetRequest"
        }
      }
    }
  }
};

export const SwitchBillingParameter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SwitchBillingParameter",
    modelProperties: {
      request: {
        serializedName: "request",
        type: {
          name: "Composite",
          className: "SwitchBillingRequest"
        }
      }
    }
  }
};

export const HostsGetParameter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HostsGetParameter",
    modelProperties: {
      request: {
        serializedName: "request",
        type: {
          name: "Composite",
          className: "HostsGetRequest"
        }
      }
    }
  }
};

export const MetricsRequestParameter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetricsRequestParameter",
    modelProperties: {
      request: {
        serializedName: "request",
        type: {
          name: "Composite",
          className: "MetricsRequest"
        }
      }
    }
  }
};

export const MetricsStatusRequestParameter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetricsStatusRequestParameter",
    modelProperties: {
      request: {
        serializedName: "request",
        type: {
          name: "Composite",
          className: "MetricsStatusRequest"
        }
      }
    }
  }
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccountResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccountResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      organizationId: {
        serializedName: "properties.organizationId",
        type: {
          name: "String"
        }
      },
      accountId: {
        serializedName: "properties.accountId",
        type: {
          name: "String"
        }
      },
      accountName: {
        serializedName: "properties.accountName",
        type: {
          name: "String"
        }
      },
      region: {
        serializedName: "properties.region",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OrganizationResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OrganizationResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      organizationId: {
        serializedName: "properties.organizationId",
        type: {
          name: "String"
        }
      },
      organizationName: {
        serializedName: "properties.organizationName",
        type: {
          name: "String"
        }
      },
      billingSource: {
        serializedName: "properties.billingSource",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PlanDataResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PlanDataResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      planData: {
        serializedName: "properties.planData",
        type: {
          name: "Composite",
          className: "PlanData"
        }
      },
      orgCreationSource: {
        serializedName: "properties.orgCreationSource",
        type: {
          name: "String"
        }
      },
      accountCreationSource: {
        serializedName: "properties.accountCreationSource",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TagRule: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TagRule",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      logRules: {
        serializedName: "properties.logRules",
        type: {
          name: "Composite",
          className: "LogRules"
        }
      },
      metricRules: {
        serializedName: "properties.metricRules",
        type: {
          name: "Composite",
          className: "MetricRules"
        }
      }
    }
  }
};

export const NewRelicMonitorResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NewRelicMonitorResource",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ManagedServiceIdentity"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      monitoringStatus: {
        serializedName: "properties.monitoringStatus",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      marketplaceSubscriptionStatus: {
        serializedName: "properties.marketplaceSubscriptionStatus",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      marketplaceSubscriptionId: {
        serializedName: "properties.marketplaceSubscriptionId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      newRelicAccountProperties: {
        serializedName: "properties.newRelicAccountProperties",
        type: {
          name: "Composite",
          className: "NewRelicAccountProperties"
        }
      },
      userInfo: {
        serializedName: "properties.userInfo",
        type: {
          name: "Composite",
          className: "UserInfo"
        }
      },
      planData: {
        serializedName: "properties.planData",
        type: {
          name: "Composite",
          className: "PlanData"
        }
      },
      liftrResourceCategory: {
        serializedName: "properties.liftrResourceCategory",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      liftrResourcePreference: {
        serializedName: "properties.liftrResourcePreference",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      orgCreationSource: {
        serializedName: "properties.orgCreationSource",
        type: {
          name: "String"
        }
      },
      accountCreationSource: {
        serializedName: "properties.accountCreationSource",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MonitorsCreateOrUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitorsCreateOrUpdateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const MonitorsDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitorsDeleteHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TagRulesCreateOrUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TagRulesCreateOrUpdateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TagRulesDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TagRulesDeleteHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      }
    }
  }
};
