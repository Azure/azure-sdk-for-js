/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  Backup,
  BackupsListByDeviceOptionalParams,
  BackupsDeleteOptionalParams,
  CloneRequest,
  BackupsCloneOptionalParams,
  BackupsRestoreOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Backups. */
export interface Backups {
  /**
   * Retrieves all the backups in a device.
   * @param deviceName The device name
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  listByDevice(
    deviceName: string,
    resourceGroupName: string,
    managerName: string,
    options?: BackupsListByDeviceOptionalParams
  ): PagedAsyncIterableIterator<Backup>;
  /**
   * Deletes the backup.
   * @param deviceName The device name
   * @param backupName The backup name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  beginDelete(
    deviceName: string,
    backupName: string,
    resourceGroupName: string,
    managerName: string,
    options?: BackupsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes the backup.
   * @param deviceName The device name
   * @param backupName The backup name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    deviceName: string,
    backupName: string,
    resourceGroupName: string,
    managerName: string,
    options?: BackupsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Clones the backup element as a new volume.
   * @param deviceName The device name
   * @param backupName The backup name.
   * @param backupElementName The backup element name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param parameters The clone request object.
   * @param options The options parameters.
   */
  beginClone(
    deviceName: string,
    backupName: string,
    backupElementName: string,
    resourceGroupName: string,
    managerName: string,
    parameters: CloneRequest,
    options?: BackupsCloneOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Clones the backup element as a new volume.
   * @param deviceName The device name
   * @param backupName The backup name.
   * @param backupElementName The backup element name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param parameters The clone request object.
   * @param options The options parameters.
   */
  beginCloneAndWait(
    deviceName: string,
    backupName: string,
    backupElementName: string,
    resourceGroupName: string,
    managerName: string,
    parameters: CloneRequest,
    options?: BackupsCloneOptionalParams
  ): Promise<void>;
  /**
   * Restores the backup on the device.
   * @param deviceName The device name
   * @param backupName The backupSet name
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  beginRestore(
    deviceName: string,
    backupName: string,
    resourceGroupName: string,
    managerName: string,
    options?: BackupsRestoreOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Restores the backup on the device.
   * @param deviceName The device name
   * @param backupName The backupSet name
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  beginRestoreAndWait(
    deviceName: string,
    backupName: string,
    resourceGroupName: string,
    managerName: string,
    options?: BackupsRestoreOptionalParams
  ): Promise<void>;
}
