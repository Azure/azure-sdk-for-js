/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  BackupSchedule,
  BackupSchedulesListByBackupPolicyOptionalParams,
  BackupSchedulesGetOptionalParams,
  BackupSchedulesGetResponse,
  BackupSchedulesCreateOrUpdateOptionalParams,
  BackupSchedulesCreateOrUpdateResponse,
  BackupSchedulesDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a BackupSchedules. */
export interface BackupSchedules {
  /**
   * Gets all the backup schedules in a backup policy.
   * @param deviceName The device name
   * @param backupPolicyName The backup policy name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  listByBackupPolicy(
    deviceName: string,
    backupPolicyName: string,
    resourceGroupName: string,
    managerName: string,
    options?: BackupSchedulesListByBackupPolicyOptionalParams
  ): PagedAsyncIterableIterator<BackupSchedule>;
  /**
   * Gets the properties of the specified backup schedule name.
   * @param deviceName The device name
   * @param backupPolicyName The backup policy name.
   * @param backupScheduleName The name of the backup schedule to be fetched
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  get(
    deviceName: string,
    backupPolicyName: string,
    backupScheduleName: string,
    resourceGroupName: string,
    managerName: string,
    options?: BackupSchedulesGetOptionalParams
  ): Promise<BackupSchedulesGetResponse>;
  /**
   * Creates or updates the backup schedule.
   * @param deviceName The device name
   * @param backupPolicyName The backup policy name.
   * @param backupScheduleName The backup schedule name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param parameters The backup schedule.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    deviceName: string,
    backupPolicyName: string,
    backupScheduleName: string,
    resourceGroupName: string,
    managerName: string,
    parameters: BackupSchedule,
    options?: BackupSchedulesCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<BackupSchedulesCreateOrUpdateResponse>,
      BackupSchedulesCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates the backup schedule.
   * @param deviceName The device name
   * @param backupPolicyName The backup policy name.
   * @param backupScheduleName The backup schedule name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param parameters The backup schedule.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    deviceName: string,
    backupPolicyName: string,
    backupScheduleName: string,
    resourceGroupName: string,
    managerName: string,
    parameters: BackupSchedule,
    options?: BackupSchedulesCreateOrUpdateOptionalParams
  ): Promise<BackupSchedulesCreateOrUpdateResponse>;
  /**
   * Deletes the backup schedule.
   * @param deviceName The device name
   * @param backupPolicyName The backup policy name.
   * @param backupScheduleName The name the backup schedule.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  beginDelete(
    deviceName: string,
    backupPolicyName: string,
    backupScheduleName: string,
    resourceGroupName: string,
    managerName: string,
    options?: BackupSchedulesDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes the backup schedule.
   * @param deviceName The device name
   * @param backupPolicyName The backup policy name.
   * @param backupScheduleName The name the backup schedule.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    deviceName: string,
    backupPolicyName: string,
    backupScheduleName: string,
    resourceGroupName: string,
    managerName: string,
    options?: BackupSchedulesDeleteOptionalParams
  ): Promise<void>;
}
