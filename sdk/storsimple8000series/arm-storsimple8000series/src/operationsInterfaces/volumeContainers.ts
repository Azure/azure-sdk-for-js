/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  VolumeContainer,
  VolumeContainersListByDeviceOptionalParams,
  Metrics,
  VolumeContainersListMetricsOptionalParams,
  MetricDefinition,
  VolumeContainersListMetricDefinitionOptionalParams,
  VolumeContainersGetOptionalParams,
  VolumeContainersGetResponse,
  VolumeContainersCreateOrUpdateOptionalParams,
  VolumeContainersCreateOrUpdateResponse,
  VolumeContainersDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a VolumeContainers. */
export interface VolumeContainers {
  /**
   * Gets all the volume containers in a device.
   * @param deviceName The device name
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  listByDevice(
    deviceName: string,
    resourceGroupName: string,
    managerName: string,
    options?: VolumeContainersListByDeviceOptionalParams
  ): PagedAsyncIterableIterator<VolumeContainer>;
  /**
   * Gets the metrics for the specified volume container.
   * @param deviceName The device name
   * @param volumeContainerName The volume container name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param filter OData Filter options
   * @param options The options parameters.
   */
  listMetrics(
    deviceName: string,
    volumeContainerName: string,
    resourceGroupName: string,
    managerName: string,
    filter: string,
    options?: VolumeContainersListMetricsOptionalParams
  ): PagedAsyncIterableIterator<Metrics>;
  /**
   * Gets the metric definitions for the specified volume container.
   * @param deviceName The device name
   * @param volumeContainerName The volume container name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  listMetricDefinition(
    deviceName: string,
    volumeContainerName: string,
    resourceGroupName: string,
    managerName: string,
    options?: VolumeContainersListMetricDefinitionOptionalParams
  ): PagedAsyncIterableIterator<MetricDefinition>;
  /**
   * Gets the properties of the specified volume container name.
   * @param deviceName The device name
   * @param volumeContainerName The name of the volume container.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  get(
    deviceName: string,
    volumeContainerName: string,
    resourceGroupName: string,
    managerName: string,
    options?: VolumeContainersGetOptionalParams
  ): Promise<VolumeContainersGetResponse>;
  /**
   * Creates or updates the volume container.
   * @param deviceName The device name
   * @param volumeContainerName The name of the volume container.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param parameters The volume container to be added or updated.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    deviceName: string,
    volumeContainerName: string,
    resourceGroupName: string,
    managerName: string,
    parameters: VolumeContainer,
    options?: VolumeContainersCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<VolumeContainersCreateOrUpdateResponse>,
      VolumeContainersCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates the volume container.
   * @param deviceName The device name
   * @param volumeContainerName The name of the volume container.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param parameters The volume container to be added or updated.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    deviceName: string,
    volumeContainerName: string,
    resourceGroupName: string,
    managerName: string,
    parameters: VolumeContainer,
    options?: VolumeContainersCreateOrUpdateOptionalParams
  ): Promise<VolumeContainersCreateOrUpdateResponse>;
  /**
   * Deletes the volume container.
   * @param deviceName The device name
   * @param volumeContainerName The name of the volume container.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  beginDelete(
    deviceName: string,
    volumeContainerName: string,
    resourceGroupName: string,
    managerName: string,
    options?: VolumeContainersDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes the volume container.
   * @param deviceName The device name
   * @param volumeContainerName The name of the volume container.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    deviceName: string,
    volumeContainerName: string,
    resourceGroupName: string,
    managerName: string,
    options?: VolumeContainersDeleteOptionalParams
  ): Promise<void>;
}
