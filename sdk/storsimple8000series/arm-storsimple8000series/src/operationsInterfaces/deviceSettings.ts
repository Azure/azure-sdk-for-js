/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  DeviceSettingsGetAlertSettingsOptionalParams,
  DeviceSettingsGetAlertSettingsResponse,
  AlertSettings,
  DeviceSettingsCreateOrUpdateAlertSettingsOptionalParams,
  DeviceSettingsCreateOrUpdateAlertSettingsResponse,
  DeviceSettingsGetNetworkSettingsOptionalParams,
  DeviceSettingsGetNetworkSettingsResponse,
  NetworkSettingsPatch,
  DeviceSettingsUpdateNetworkSettingsOptionalParams,
  DeviceSettingsUpdateNetworkSettingsResponse,
  DeviceSettingsGetSecuritySettingsOptionalParams,
  DeviceSettingsGetSecuritySettingsResponse,
  SecuritySettingsPatch,
  DeviceSettingsUpdateSecuritySettingsOptionalParams,
  DeviceSettingsUpdateSecuritySettingsResponse,
  DeviceSettingsSyncRemotemanagementCertificateOptionalParams,
  DeviceSettingsGetTimeSettingsOptionalParams,
  DeviceSettingsGetTimeSettingsResponse,
  TimeSettings,
  DeviceSettingsCreateOrUpdateTimeSettingsOptionalParams,
  DeviceSettingsCreateOrUpdateTimeSettingsResponse
} from "../models";

/** Interface representing a DeviceSettings. */
export interface DeviceSettings {
  /**
   * Gets the alert settings of the specified device.
   * @param deviceName The device name
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  getAlertSettings(
    deviceName: string,
    resourceGroupName: string,
    managerName: string,
    options?: DeviceSettingsGetAlertSettingsOptionalParams
  ): Promise<DeviceSettingsGetAlertSettingsResponse>;
  /**
   * Creates or updates the alert settings of the specified device.
   * @param deviceName The device name
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param parameters The alert settings to be added or updated.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAlertSettings(
    deviceName: string,
    resourceGroupName: string,
    managerName: string,
    parameters: AlertSettings,
    options?: DeviceSettingsCreateOrUpdateAlertSettingsOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<DeviceSettingsCreateOrUpdateAlertSettingsResponse>,
      DeviceSettingsCreateOrUpdateAlertSettingsResponse
    >
  >;
  /**
   * Creates or updates the alert settings of the specified device.
   * @param deviceName The device name
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param parameters The alert settings to be added or updated.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAlertSettingsAndWait(
    deviceName: string,
    resourceGroupName: string,
    managerName: string,
    parameters: AlertSettings,
    options?: DeviceSettingsCreateOrUpdateAlertSettingsOptionalParams
  ): Promise<DeviceSettingsCreateOrUpdateAlertSettingsResponse>;
  /**
   * Gets the network settings of the specified device.
   * @param deviceName The device name
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  getNetworkSettings(
    deviceName: string,
    resourceGroupName: string,
    managerName: string,
    options?: DeviceSettingsGetNetworkSettingsOptionalParams
  ): Promise<DeviceSettingsGetNetworkSettingsResponse>;
  /**
   * Updates the network settings on the specified device.
   * @param deviceName The device name
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param parameters The network settings to be updated.
   * @param options The options parameters.
   */
  beginUpdateNetworkSettings(
    deviceName: string,
    resourceGroupName: string,
    managerName: string,
    parameters: NetworkSettingsPatch,
    options?: DeviceSettingsUpdateNetworkSettingsOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<DeviceSettingsUpdateNetworkSettingsResponse>,
      DeviceSettingsUpdateNetworkSettingsResponse
    >
  >;
  /**
   * Updates the network settings on the specified device.
   * @param deviceName The device name
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param parameters The network settings to be updated.
   * @param options The options parameters.
   */
  beginUpdateNetworkSettingsAndWait(
    deviceName: string,
    resourceGroupName: string,
    managerName: string,
    parameters: NetworkSettingsPatch,
    options?: DeviceSettingsUpdateNetworkSettingsOptionalParams
  ): Promise<DeviceSettingsUpdateNetworkSettingsResponse>;
  /**
   * Returns the Security properties of the specified device name.
   * @param deviceName The device name
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  getSecuritySettings(
    deviceName: string,
    resourceGroupName: string,
    managerName: string,
    options?: DeviceSettingsGetSecuritySettingsOptionalParams
  ): Promise<DeviceSettingsGetSecuritySettingsResponse>;
  /**
   * Patch Security properties of the specified device name.
   * @param deviceName The device name
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param parameters The security settings properties to be patched.
   * @param options The options parameters.
   */
  beginUpdateSecuritySettings(
    deviceName: string,
    resourceGroupName: string,
    managerName: string,
    parameters: SecuritySettingsPatch,
    options?: DeviceSettingsUpdateSecuritySettingsOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<DeviceSettingsUpdateSecuritySettingsResponse>,
      DeviceSettingsUpdateSecuritySettingsResponse
    >
  >;
  /**
   * Patch Security properties of the specified device name.
   * @param deviceName The device name
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param parameters The security settings properties to be patched.
   * @param options The options parameters.
   */
  beginUpdateSecuritySettingsAndWait(
    deviceName: string,
    resourceGroupName: string,
    managerName: string,
    parameters: SecuritySettingsPatch,
    options?: DeviceSettingsUpdateSecuritySettingsOptionalParams
  ): Promise<DeviceSettingsUpdateSecuritySettingsResponse>;
  /**
   * sync Remote management Certificate between appliance and Service
   * @param deviceName The device name
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  beginSyncRemotemanagementCertificate(
    deviceName: string,
    resourceGroupName: string,
    managerName: string,
    options?: DeviceSettingsSyncRemotemanagementCertificateOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * sync Remote management Certificate between appliance and Service
   * @param deviceName The device name
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  beginSyncRemotemanagementCertificateAndWait(
    deviceName: string,
    resourceGroupName: string,
    managerName: string,
    options?: DeviceSettingsSyncRemotemanagementCertificateOptionalParams
  ): Promise<void>;
  /**
   * Gets the time settings of the specified device.
   * @param deviceName The device name
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  getTimeSettings(
    deviceName: string,
    resourceGroupName: string,
    managerName: string,
    options?: DeviceSettingsGetTimeSettingsOptionalParams
  ): Promise<DeviceSettingsGetTimeSettingsResponse>;
  /**
   * Creates or updates the time settings of the specified device.
   * @param deviceName The device name
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param parameters The time settings to be added or updated.
   * @param options The options parameters.
   */
  beginCreateOrUpdateTimeSettings(
    deviceName: string,
    resourceGroupName: string,
    managerName: string,
    parameters: TimeSettings,
    options?: DeviceSettingsCreateOrUpdateTimeSettingsOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<DeviceSettingsCreateOrUpdateTimeSettingsResponse>,
      DeviceSettingsCreateOrUpdateTimeSettingsResponse
    >
  >;
  /**
   * Creates or updates the time settings of the specified device.
   * @param deviceName The device name
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param parameters The time settings to be added or updated.
   * @param options The options parameters.
   */
  beginCreateOrUpdateTimeSettingsAndWait(
    deviceName: string,
    resourceGroupName: string,
    managerName: string,
    parameters: TimeSettings,
    options?: DeviceSettingsCreateOrUpdateTimeSettingsOptionalParams
  ): Promise<DeviceSettingsCreateOrUpdateTimeSettingsResponse>;
}
