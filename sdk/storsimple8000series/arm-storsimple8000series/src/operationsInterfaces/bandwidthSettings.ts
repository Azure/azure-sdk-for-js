/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  BandwidthSetting,
  BandwidthSettingsListByManagerOptionalParams,
  BandwidthSettingsGetOptionalParams,
  BandwidthSettingsGetResponse,
  BandwidthSettingsCreateOrUpdateOptionalParams,
  BandwidthSettingsCreateOrUpdateResponse,
  BandwidthSettingsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a BandwidthSettings. */
export interface BandwidthSettings {
  /**
   * Retrieves all the bandwidth setting in a manager.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  listByManager(
    resourceGroupName: string,
    managerName: string,
    options?: BandwidthSettingsListByManagerOptionalParams
  ): PagedAsyncIterableIterator<BandwidthSetting>;
  /**
   * Returns the properties of the specified bandwidth setting name.
   * @param bandwidthSettingName The name of bandwidth setting to be fetched.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  get(
    bandwidthSettingName: string,
    resourceGroupName: string,
    managerName: string,
    options?: BandwidthSettingsGetOptionalParams
  ): Promise<BandwidthSettingsGetResponse>;
  /**
   * Creates or updates the bandwidth setting
   * @param bandwidthSettingName The bandwidth setting name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param parameters The bandwidth setting to be added or updated.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    bandwidthSettingName: string,
    resourceGroupName: string,
    managerName: string,
    parameters: BandwidthSetting,
    options?: BandwidthSettingsCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<BandwidthSettingsCreateOrUpdateResponse>,
      BandwidthSettingsCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates the bandwidth setting
   * @param bandwidthSettingName The bandwidth setting name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param parameters The bandwidth setting to be added or updated.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    bandwidthSettingName: string,
    resourceGroupName: string,
    managerName: string,
    parameters: BandwidthSetting,
    options?: BandwidthSettingsCreateOrUpdateOptionalParams
  ): Promise<BandwidthSettingsCreateOrUpdateResponse>;
  /**
   * Deletes the bandwidth setting
   * @param bandwidthSettingName The name of the bandwidth setting.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  beginDelete(
    bandwidthSettingName: string,
    resourceGroupName: string,
    managerName: string,
    options?: BandwidthSettingsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes the bandwidth setting
   * @param bandwidthSettingName The name of the bandwidth setting.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    bandwidthSettingName: string,
    resourceGroupName: string,
    managerName: string,
    options?: BandwidthSettingsDeleteOptionalParams
  ): Promise<void>;
}
