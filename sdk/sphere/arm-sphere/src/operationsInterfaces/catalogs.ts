/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  Catalog,
  CatalogsListBySubscriptionOptionalParams,
  CatalogsListByResourceGroupOptionalParams,
  Deployment,
  CatalogsListDeploymentsOptionalParams,
  DeviceGroup,
  ListDeviceGroupsRequest,
  CatalogsListDeviceGroupsOptionalParams,
  DeviceInsight,
  CatalogsListDeviceInsightsOptionalParams,
  Device,
  CatalogsListDevicesOptionalParams,
  CatalogsGetOptionalParams,
  CatalogsGetResponse,
  CatalogsCreateOrUpdateOptionalParams,
  CatalogsCreateOrUpdateResponse,
  CatalogUpdate,
  CatalogsUpdateOptionalParams,
  CatalogsUpdateResponse,
  CatalogsDeleteOptionalParams,
  CatalogsCountDevicesOptionalParams,
  CatalogsCountDevicesResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Catalogs. */
export interface Catalogs {
  /**
   * List Catalog resources by subscription ID
   * @param options The options parameters.
   */
  listBySubscription(
    options?: CatalogsListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<Catalog>;
  /**
   * List Catalog resources by resource group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: CatalogsListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<Catalog>;
  /**
   * Lists deployments for catalog.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param catalogName Name of catalog
   * @param options The options parameters.
   */
  listDeployments(
    resourceGroupName: string,
    catalogName: string,
    options?: CatalogsListDeploymentsOptionalParams
  ): PagedAsyncIterableIterator<Deployment>;
  /**
   * List the device groups for the catalog.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param catalogName Name of catalog
   * @param listDeviceGroupsRequest List device groups for catalog.
   * @param options The options parameters.
   */
  listDeviceGroups(
    resourceGroupName: string,
    catalogName: string,
    listDeviceGroupsRequest: ListDeviceGroupsRequest,
    options?: CatalogsListDeviceGroupsOptionalParams
  ): PagedAsyncIterableIterator<DeviceGroup>;
  /**
   * Lists device insights for catalog.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param catalogName Name of catalog
   * @param options The options parameters.
   */
  listDeviceInsights(
    resourceGroupName: string,
    catalogName: string,
    options?: CatalogsListDeviceInsightsOptionalParams
  ): PagedAsyncIterableIterator<DeviceInsight>;
  /**
   * Lists devices for catalog.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param catalogName Name of catalog
   * @param options The options parameters.
   */
  listDevices(
    resourceGroupName: string,
    catalogName: string,
    options?: CatalogsListDevicesOptionalParams
  ): PagedAsyncIterableIterator<Device>;
  /**
   * Get a Catalog
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param catalogName Name of catalog
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    catalogName: string,
    options?: CatalogsGetOptionalParams
  ): Promise<CatalogsGetResponse>;
  /**
   * Create a Catalog
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param catalogName Name of catalog
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    catalogName: string,
    resource: Catalog,
    options?: CatalogsCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<CatalogsCreateOrUpdateResponse>,
      CatalogsCreateOrUpdateResponse
    >
  >;
  /**
   * Create a Catalog
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param catalogName Name of catalog
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    catalogName: string,
    resource: Catalog,
    options?: CatalogsCreateOrUpdateOptionalParams
  ): Promise<CatalogsCreateOrUpdateResponse>;
  /**
   * Update a Catalog
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param catalogName Name of catalog
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    catalogName: string,
    properties: CatalogUpdate,
    options?: CatalogsUpdateOptionalParams
  ): Promise<CatalogsUpdateResponse>;
  /**
   * Delete a Catalog
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param catalogName Name of catalog
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    catalogName: string,
    options?: CatalogsDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete a Catalog
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param catalogName Name of catalog
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    catalogName: string,
    options?: CatalogsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Counts devices in catalog.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param catalogName Name of catalog
   * @param options The options parameters.
   */
  countDevices(
    resourceGroupName: string,
    catalogName: string,
    options?: CatalogsCountDevicesOptionalParams
  ): Promise<CatalogsCountDevicesResponse>;
}
