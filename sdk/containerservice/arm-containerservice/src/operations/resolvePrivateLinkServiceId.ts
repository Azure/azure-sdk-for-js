/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/resolvePrivateLinkServiceIdMappers";
import * as Parameters from "../models/parameters";
import { ContainerServiceClientContext } from "../containerServiceClientContext";

/** Class representing a ResolvePrivateLinkServiceId. */
export class ResolvePrivateLinkServiceId {
  private readonly client: ContainerServiceClientContext;

  /**
   * Create a ResolvePrivateLinkServiceId.
   * @param {ContainerServiceClientContext} client Reference to the service client.
   */
  constructor(client: ContainerServiceClientContext) {
    this.client = client;
  }

  /**
   * Gets the private link service ID the specified managed cluster.
   * @summary Gets the private link service ID for the specified managed cluster.
   * @param resourceGroupName The name of the resource group.
   * @param resourceName The name of the managed cluster resource.
   * @param parameters Parameters (name, groupId) supplied in order to resolve a private link service
   * ID.
   * @param [options] The optional parameters
   * @returns Promise<Models.ResolvePrivateLinkServiceIdPOSTResponse>
   */
  pOST(resourceGroupName: string, resourceName: string, parameters: Models.PrivateLinkResource, options?: msRest.RequestOptionsBase): Promise<Models.ResolvePrivateLinkServiceIdPOSTResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param resourceName The name of the managed cluster resource.
   * @param parameters Parameters (name, groupId) supplied in order to resolve a private link service
   * ID.
   * @param callback The callback
   */
  pOST(resourceGroupName: string, resourceName: string, parameters: Models.PrivateLinkResource, callback: msRest.ServiceCallback<Models.PrivateLinkResource>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param resourceName The name of the managed cluster resource.
   * @param parameters Parameters (name, groupId) supplied in order to resolve a private link service
   * ID.
   * @param options The optional parameters
   * @param callback The callback
   */
  pOST(resourceGroupName: string, resourceName: string, parameters: Models.PrivateLinkResource, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateLinkResource>): void;
  pOST(resourceGroupName: string, resourceName: string, parameters: Models.PrivateLinkResource, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateLinkResource>, callback?: msRest.ServiceCallback<Models.PrivateLinkResource>): Promise<Models.ResolvePrivateLinkServiceIdPOSTResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        resourceName,
        parameters,
        options
      },
      pOSTOperationSpec,
      callback) as Promise<Models.ResolvePrivateLinkServiceIdPOSTResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const pOSTOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/resolvePrivateLinkServiceId",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.PrivateLinkResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.PrivateLinkResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
