/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";

export const acceptLanguage: msRest.OperationParameter = {
  parameterPath: "acceptLanguage",
  mapper: {
    serializedName: "accept-language",
    defaultValue: 'en-US',
    type: {
      name: "String"
    }
  }
};
export const agentPoolName: msRest.OperationURLParameter = {
  parameterPath: "agentPoolName",
  mapper: {
    required: true,
    serializedName: "agentPoolName",
    type: {
      name: "String"
    }
  }
};
export const apiVersion: msRest.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    required: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};
export const commandId: msRest.OperationURLParameter = {
  parameterPath: "commandId",
  mapper: {
    required: true,
    serializedName: "commandId",
    type: {
      name: "String"
    }
  }
};
export const configName: msRest.OperationURLParameter = {
  parameterPath: "configName",
  mapper: {
    required: true,
    serializedName: "configName",
    type: {
      name: "String"
    }
  }
};
export const location: msRest.OperationURLParameter = {
  parameterPath: "location",
  mapper: {
    required: true,
    serializedName: "location",
    type: {
      name: "String"
    }
  }
};
export const nextPageLink: msRest.OperationURLParameter = {
  parameterPath: "nextPageLink",
  mapper: {
    required: true,
    serializedName: "nextLink",
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const privateEndpointConnectionName: msRest.OperationURLParameter = {
  parameterPath: "privateEndpointConnectionName",
  mapper: {
    required: true,
    serializedName: "privateEndpointConnectionName",
    type: {
      name: "String"
    }
  }
};
export const resourceGroupName: msRest.OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    required: true,
    serializedName: "resourceGroupName",
    constraints: {
      MinLength: 1
    },
    type: {
      name: "String"
    }
  }
};
export const resourceName: msRest.OperationURLParameter = {
  parameterPath: "resourceName",
  mapper: {
    required: true,
    serializedName: "resourceName",
    constraints: {
      MaxLength: 63,
      MinLength: 1,
      Pattern: /^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$/
    },
    type: {
      name: "String"
    }
  }
};
export const resourceType: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "resourceType"
  ],
  mapper: {
    serializedName: "resource-type",
    type: {
      name: "String"
    }
  }
};
export const roleName: msRest.OperationURLParameter = {
  parameterPath: "roleName",
  mapper: {
    required: true,
    serializedName: "roleName",
    type: {
      name: "String"
    }
  }
};
export const subscriptionId: msRest.OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    required: true,
    serializedName: "subscriptionId",
    type: {
      name: "String"
    }
  }
};
