/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Describes the properties of a Operation value.
 */
export interface OperationValue {
  /**
   * The origin of the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly origin?: string;
  /**
   * The name of the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The display name of the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operation?: string;
  /**
   * The display name of the resource the operation applies to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resource?: string;
  /**
   * The description of the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * The resource provider for the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: string;
}

/**
 * The Resource model definition.
 */
export interface Resource extends BaseResource {
  /**
   * Resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource location
   */
  location: string;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Reference to another subresource.
 */
export interface SubResource extends BaseResource {
  /**
   * Resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within a resource group. This name can be used to
   * access the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * Tags object for patch operations.
 */
export interface TagsObject {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Information about a service principal identity for the cluster to use for manipulating Azure
 * APIs.
 */
export interface ManagedClusterServicePrincipalProfile {
  /**
   * The ID for the service principal.
   */
  clientId: string;
  /**
   * The secret password associated with the service principal in plain text.
   */
  secret?: string;
}

/**
 * Profile for the container service master.
 */
export interface ContainerServiceMasterProfile {
  /**
   * Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The
   * default value is 1. Default value: 1.
   */
  count?: number;
  /**
   * DNS prefix to be used to create the FQDN for the master pool.
   */
  dnsPrefix: string;
  /**
   * Size of agent VMs. Possible values include: 'Standard_A1', 'Standard_A10', 'Standard_A11',
   * 'Standard_A1_v2', 'Standard_A2', 'Standard_A2_v2', 'Standard_A2m_v2', 'Standard_A3',
   * 'Standard_A4', 'Standard_A4_v2', 'Standard_A4m_v2', 'Standard_A5', 'Standard_A6',
   * 'Standard_A7', 'Standard_A8', 'Standard_A8_v2', 'Standard_A8m_v2', 'Standard_A9',
   * 'Standard_B2ms', 'Standard_B2s', 'Standard_B4ms', 'Standard_B8ms', 'Standard_D1',
   * 'Standard_D11', 'Standard_D11_v2', 'Standard_D11_v2_Promo', 'Standard_D12', 'Standard_D12_v2',
   * 'Standard_D12_v2_Promo', 'Standard_D13', 'Standard_D13_v2', 'Standard_D13_v2_Promo',
   * 'Standard_D14', 'Standard_D14_v2', 'Standard_D14_v2_Promo', 'Standard_D15_v2',
   * 'Standard_D16_v3', 'Standard_D16s_v3', 'Standard_D1_v2', 'Standard_D2', 'Standard_D2_v2',
   * 'Standard_D2_v2_Promo', 'Standard_D2_v3', 'Standard_D2s_v3', 'Standard_D3', 'Standard_D32_v3',
   * 'Standard_D32s_v3', 'Standard_D3_v2', 'Standard_D3_v2_Promo', 'Standard_D4', 'Standard_D4_v2',
   * 'Standard_D4_v2_Promo', 'Standard_D4_v3', 'Standard_D4s_v3', 'Standard_D5_v2',
   * 'Standard_D5_v2_Promo', 'Standard_D64_v3', 'Standard_D64s_v3', 'Standard_D8_v3',
   * 'Standard_D8s_v3', 'Standard_DS1', 'Standard_DS11', 'Standard_DS11_v2',
   * 'Standard_DS11_v2_Promo', 'Standard_DS12', 'Standard_DS12_v2', 'Standard_DS12_v2_Promo',
   * 'Standard_DS13', 'Standard_DS13-2_v2', 'Standard_DS13-4_v2', 'Standard_DS13_v2',
   * 'Standard_DS13_v2_Promo', 'Standard_DS14', 'Standard_DS14-4_v2', 'Standard_DS14-8_v2',
   * 'Standard_DS14_v2', 'Standard_DS14_v2_Promo', 'Standard_DS15_v2', 'Standard_DS1_v2',
   * 'Standard_DS2', 'Standard_DS2_v2', 'Standard_DS2_v2_Promo', 'Standard_DS3', 'Standard_DS3_v2',
   * 'Standard_DS3_v2_Promo', 'Standard_DS4', 'Standard_DS4_v2', 'Standard_DS4_v2_Promo',
   * 'Standard_DS5_v2', 'Standard_DS5_v2_Promo', 'Standard_E16_v3', 'Standard_E16s_v3',
   * 'Standard_E2_v3', 'Standard_E2s_v3', 'Standard_E32-16s_v3', 'Standard_E32-8s_v3',
   * 'Standard_E32_v3', 'Standard_E32s_v3', 'Standard_E4_v3', 'Standard_E4s_v3',
   * 'Standard_E64-16s_v3', 'Standard_E64-32s_v3', 'Standard_E64_v3', 'Standard_E64s_v3',
   * 'Standard_E8_v3', 'Standard_E8s_v3', 'Standard_F1', 'Standard_F16', 'Standard_F16s',
   * 'Standard_F16s_v2', 'Standard_F1s', 'Standard_F2', 'Standard_F2s', 'Standard_F2s_v2',
   * 'Standard_F32s_v2', 'Standard_F4', 'Standard_F4s', 'Standard_F4s_v2', 'Standard_F64s_v2',
   * 'Standard_F72s_v2', 'Standard_F8', 'Standard_F8s', 'Standard_F8s_v2', 'Standard_G1',
   * 'Standard_G2', 'Standard_G3', 'Standard_G4', 'Standard_G5', 'Standard_GS1', 'Standard_GS2',
   * 'Standard_GS3', 'Standard_GS4', 'Standard_GS4-4', 'Standard_GS4-8', 'Standard_GS5',
   * 'Standard_GS5-16', 'Standard_GS5-8', 'Standard_H16', 'Standard_H16m', 'Standard_H16mr',
   * 'Standard_H16r', 'Standard_H8', 'Standard_H8m', 'Standard_L16s', 'Standard_L32s',
   * 'Standard_L4s', 'Standard_L8s', 'Standard_M128-32ms', 'Standard_M128-64ms', 'Standard_M128ms',
   * 'Standard_M128s', 'Standard_M64-16ms', 'Standard_M64-32ms', 'Standard_M64ms', 'Standard_M64s',
   * 'Standard_NC12', 'Standard_NC12s_v2', 'Standard_NC12s_v3', 'Standard_NC24', 'Standard_NC24r',
   * 'Standard_NC24rs_v2', 'Standard_NC24rs_v3', 'Standard_NC24s_v2', 'Standard_NC24s_v3',
   * 'Standard_NC6', 'Standard_NC6s_v2', 'Standard_NC6s_v3', 'Standard_ND12s', 'Standard_ND24rs',
   * 'Standard_ND24s', 'Standard_ND6s', 'Standard_NV12', 'Standard_NV24', 'Standard_NV6'
   */
  vmSize: ContainerServiceVMSizeTypes;
  /**
   * OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent
   * pool. If you specify 0, it will apply the default osDisk size according to the vmSize
   * specified.
   */
  osDiskSizeGB?: number;
  /**
   * VNet SubnetID specifies the VNet's subnet identifier.
   */
  vnetSubnetID?: string;
  /**
   * FirstConsecutiveStaticIP used to specify the first static ip of masters. Default value:
   * '10.240.255.5'.
   */
  firstConsecutiveStaticIP?: string;
  /**
   * Storage profile specifies what kind of storage used. Choose from StorageAccount and
   * ManagedDisks. Leave it empty, we will choose for you based on the orchestrator choice.
   * Possible values include: 'StorageAccount', 'ManagedDisks'
   */
  storageProfile?: ContainerServiceStorageProfileTypes;
  /**
   * FQDN for the master pool.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly fqdn?: string;
}

/**
 * Settings for upgrading an agentpool
 */
export interface AgentPoolUpgradeSettings {
  /**
   * The maximum number or percentage of nodes that are surged during upgrade. This can either be
   * set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is
   * the percentage of the total agent pool size at the time of the upgrade. For percentages,
   * fractional nodes are rounded up. If not specified, the default is 1. For more information,
   * including best practices, see:
   * https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade
   */
  maxSurge?: string;
}

/**
 * Describes the Power State of the cluster
 */
export interface PowerState {
  /**
   * Tells whether the cluster is Running or Stopped. Possible values include: 'Running', 'Stopped'
   */
  code?: Code;
}

/**
 * See [AKS custom node
 * configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.
 * @summary Kubelet configurations of agent nodes.
 */
export interface KubeletConfig {
  /**
   * The CPU Manager policy to use. The default is 'none'. See [Kubernetes CPU management
   * policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies)
   * for more information. Allowed values are 'none' and 'static'.
   */
  cpuManagerPolicy?: string;
  /**
   * If CPU CFS quota enforcement is enabled for containers that specify CPU limits. The default is
   * true.
   */
  cpuCfsQuota?: boolean;
  /**
   * The CPU CFS quota period value. The default is '100ms.' Valid values are a sequence of decimal
   * numbers with an optional fraction and a unit suffix. For example: '300ms', '2h45m'. Supported
   * units are 'ns', 'us', 'ms', 's', 'm', and 'h'.
   */
  cpuCfsQuotaPeriod?: string;
  /**
   * The percent of disk usage after which image garbage collection is always run. To disable image
   * garbage collection, set to 100. The default is 85%
   */
  imageGcHighThreshold?: number;
  /**
   * The percent of disk usage before which image garbage collection is never run. This cannot be
   * set higher than imageGcHighThreshold. The default is 80%
   */
  imageGcLowThreshold?: number;
  /**
   * The Topology Manager policy to use. For more information see [Kubernetes Topology
   * Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager). The default is
   * 'none'. Allowed values are 'none', 'best-effort', 'restricted', and 'single-numa-node'.
   */
  topologyManagerPolicy?: string;
  /**
   * Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in `*`).
   */
  allowedUnsafeSysctls?: string[];
  /**
   * If set to true it will make the Kubelet fail to start if swap is enabled on the node.
   */
  failSwapOn?: boolean;
  /**
   * The maximum size (e.g. 10Mi) of container log file before it is rotated.
   */
  containerLogMaxSizeMB?: number;
  /**
   * The maximum number of container log files that can be present for a container. The number must
   * be ≥ 2.
   */
  containerLogMaxFiles?: number;
  /**
   * The maximum number of processes per pod.
   */
  podMaxPids?: number;
}

/**
 * Sysctl settings for Linux agent nodes.
 */
export interface SysctlConfig {
  /**
   * Sysctl setting net.core.somaxconn.
   */
  netCoreSomaxconn?: number;
  /**
   * Sysctl setting net.core.netdev_max_backlog.
   */
  netCoreNetdevMaxBacklog?: number;
  /**
   * Sysctl setting net.core.rmem_default.
   */
  netCoreRmemDefault?: number;
  /**
   * Sysctl setting net.core.rmem_max.
   */
  netCoreRmemMax?: number;
  /**
   * Sysctl setting net.core.wmem_default.
   */
  netCoreWmemDefault?: number;
  /**
   * Sysctl setting net.core.wmem_max.
   */
  netCoreWmemMax?: number;
  /**
   * Sysctl setting net.core.optmem_max.
   */
  netCoreOptmemMax?: number;
  /**
   * Sysctl setting net.ipv4.tcp_max_syn_backlog.
   */
  netIpv4TcpMaxSynBacklog?: number;
  /**
   * Sysctl setting net.ipv4.tcp_max_tw_buckets.
   */
  netIpv4TcpMaxTwBuckets?: number;
  /**
   * Sysctl setting net.ipv4.tcp_fin_timeout.
   */
  netIpv4TcpFinTimeout?: number;
  /**
   * Sysctl setting net.ipv4.tcp_keepalive_time.
   */
  netIpv4TcpKeepaliveTime?: number;
  /**
   * Sysctl setting net.ipv4.tcp_keepalive_probes.
   */
  netIpv4TcpKeepaliveProbes?: number;
  /**
   * Sysctl setting net.ipv4.tcp_keepalive_intvl.
   */
  netIpv4TcpkeepaliveIntvl?: number;
  /**
   * Sysctl setting net.ipv4.tcp_tw_reuse.
   */
  netIpv4TcpTwReuse?: boolean;
  /**
   * Sysctl setting net.ipv4.ip_local_port_range.
   */
  netIpv4IpLocalPortRange?: string;
  /**
   * Sysctl setting net.ipv4.neigh.default.gc_thresh1.
   */
  netIpv4NeighDefaultGcThresh1?: number;
  /**
   * Sysctl setting net.ipv4.neigh.default.gc_thresh2.
   */
  netIpv4NeighDefaultGcThresh2?: number;
  /**
   * Sysctl setting net.ipv4.neigh.default.gc_thresh3.
   */
  netIpv4NeighDefaultGcThresh3?: number;
  /**
   * Sysctl setting net.netfilter.nf_conntrack_max.
   */
  netNetfilterNfConntrackMax?: number;
  /**
   * Sysctl setting net.netfilter.nf_conntrack_buckets.
   */
  netNetfilterNfConntrackBuckets?: number;
  /**
   * Sysctl setting fs.inotify.max_user_watches.
   */
  fsInotifyMaxUserWatches?: number;
  /**
   * Sysctl setting fs.file-max.
   */
  fsFileMax?: number;
  /**
   * Sysctl setting fs.aio-max-nr.
   */
  fsAioMaxNr?: number;
  /**
   * Sysctl setting fs.nr_open.
   */
  fsNrOpen?: number;
  /**
   * Sysctl setting kernel.threads-max.
   */
  kernelThreadsMax?: number;
  /**
   * Sysctl setting vm.max_map_count.
   */
  vmMaxMapCount?: number;
  /**
   * Sysctl setting vm.swappiness.
   */
  vmSwappiness?: number;
  /**
   * Sysctl setting vm.vfs_cache_pressure.
   */
  vmVfsCachePressure?: number;
}

/**
 * See [AKS custom node
 * configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.
 * @summary OS configurations of Linux agent nodes.
 */
export interface LinuxOSConfig {
  /**
   * Sysctl settings for Linux agent nodes.
   */
  sysctls?: SysctlConfig;
  /**
   * Whether transparent hugepages are enabled. Valid values are 'always', 'madvise', and 'never'.
   * The default is 'always'. For more information see [Transparent
   * Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
   */
  transparentHugePageEnabled?: string;
  /**
   * Whether the kernel should make aggressive use of memory compaction to make more hugepages
   * available. Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The
   * default is 'madvise'. For more information see [Transparent
   * Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
   */
  transparentHugePageDefrag?: string;
  /**
   * The size in MB of a swap file that will be created on each node.
   */
  swapFileSizeMB?: number;
}

/**
 * Data used when creating a target resource from a source resource.
 */
export interface CreationData {
  /**
   * This is the ARM ID of the source object to be used to create the target object.
   */
  sourceResourceId?: string;
}

/**
 * Properties for the container service agent pool profile.
 */
export interface ManagedClusterAgentPoolProfileProperties {
  /**
   * Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to
   * 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools.
   * The default value is 1.
   */
  count?: number;
  /**
   * The size of the agent pool VMs. VM size availability varies by region. If a node contains
   * insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more
   * details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions
   */
  vmSize?: string;
  osDiskSizeGB?: number;
  /**
   * Possible values include: 'Managed', 'Ephemeral'
   */
  osDiskType?: OSDiskType;
  /**
   * Possible values include: 'OS', 'Temporary'
   */
  kubeletDiskType?: KubeletDiskType;
  /**
   * Possible values include: 'OCIContainer', 'WasmWasi'
   */
  workloadRuntime?: WorkloadRuntime;
  /**
   * The ID of the subnet which agent pool nodes and optionally pods will join on startup. If this
   * is not specified, a VNET and subnet will be generated and used. If no podSubnetID is
   * specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the
   * form:
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
   */
  vnetSubnetID?: string;
  /**
   * The ID of the subnet which pods will join when launched. If omitted, pod IPs are statically
   * assigned on the node subnet (see vnetSubnetID for more details). This is of the form:
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
   */
  podSubnetID?: string;
  /**
   * The maximum number of pods that can run on a node.
   */
  maxPods?: number;
  /**
   * Possible values include: 'Linux', 'Windows'. Default value: 'Linux'.
   */
  osType?: OSType;
  /**
   * Possible values include: 'Ubuntu', 'CBLMariner'
   */
  osSKU?: OSSKU;
  /**
   * The maximum number of nodes for auto-scaling
   */
  maxCount?: number;
  /**
   * The minimum number of nodes for auto-scaling
   */
  minCount?: number;
  /**
   * Whether to enable auto-scaler
   */
  enableAutoScaling?: boolean;
  /**
   * The scale down mode to use when scaling the Agent Pool. This also effects the cluster
   * autoscaler behavior. If not specified, it defaults to Delete. Possible values include:
   * 'Delete', 'Deallocate'
   */
  scaleDownMode?: ScaleDownMode;
  /**
   * Possible values include: 'VirtualMachineScaleSets', 'AvailabilitySet'
   */
  type?: AgentPoolType;
  /**
   * Possible values include: 'System', 'User'
   */
  mode?: AgentPoolMode;
  /**
   * The version of Kubernetes running on the Agent Pool. As a best practice, you should upgrade
   * all node pools in an AKS cluster to the same Kubernetes version. The node pool version must
   * have the same major version as the control plane. The node pool minor version must be within
   * two minor versions of the control plane version. The node pool version cannot be greater than
   * the control plane version. For more information see [upgrading a node
   * pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
   */
  orchestratorVersion?: string;
  /**
   * The version of node image
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nodeImageVersion?: string;
  /**
   * Settings for upgrading the agentpool
   */
  upgradeSettings?: AgentPoolUpgradeSettings;
  /**
   * The current deployment or provisioning state.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * Whether the Agent Pool is running or stopped. When an Agent Pool is first created it is
   * initially Running. The Agent Pool can be stopped by setting this field to Stopped. A stopped
   * Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only be
   * stopped if it is Running and provisioning state is Succeeded
   */
  powerState?: PowerState;
  /**
   * The list of Availability zones to use for nodes. This can only be specified if the
   * AgentPoolType property is 'VirtualMachineScaleSets'.
   */
  availabilityZones?: string[];
  /**
   * Whether each node is allocated its own public IP. Some scenarios may require nodes in a node
   * pool to receive their own dedicated public IP addresses. A common scenario is for gaming
   * workloads, where a console needs to make a direct connection to a cloud virtual machine to
   * minimize hops. For more information see [assigning a public IP per
   * node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools).
   * The default is false.
   */
  enableNodePublicIP?: boolean;
  /**
   * The public IP prefix ID which VM nodes should use IPs from. This is of the form:
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
   */
  nodePublicIPPrefixID?: string;
  /**
   * The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'. Possible
   * values include: 'Spot', 'Regular'. Default value: 'Regular'.
   */
  scaleSetPriority?: ScaleSetPriority;
  /**
   * The Virtual Machine Scale Set eviction policy to use. This cannot be specified unless the
   * scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'. Possible values
   * include: 'Delete', 'Deallocate'. Default value: 'Delete'.
   */
  scaleSetEvictionPolicy?: ScaleSetEvictionPolicy;
  /**
   * The max price (in US Dollars) you are willing to pay for spot instances. Possible values are
   * any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
   * Possible values are any decimal value greater than zero or -1 which indicates the willingness
   * to pay any on-demand price. For more details on spot pricing, see [spot VMs
   * pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
   */
  spotMaxPrice?: number;
  /**
   * The tags to be persisted on the agent pool virtual machine scale set.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The node labels to be persisted across all nodes in agent pool.
   */
  nodeLabels?: { [propertyName: string]: string };
  /**
   * The taints added to new nodes during node pool create and scale. For example,
   * key=value:NoSchedule.
   */
  nodeTaints?: string[];
  /**
   * The ID for Proximity Placement Group.
   */
  proximityPlacementGroupID?: string;
  /**
   * The Kubelet configuration on the agent pool nodes.
   */
  kubeletConfig?: KubeletConfig;
  /**
   * The OS configuration of Linux agent nodes.
   */
  linuxOSConfig?: LinuxOSConfig;
  /**
   * Whether to enable host based OS and data drive encryption. This is only supported on certain
   * VM sizes and in certain Azure regions. For more information, see:
   * https://docs.microsoft.com/azure/aks/enable-host-encryption
   */
  enableEncryptionAtHost?: boolean;
  /**
   * Whether to enable UltraSSD
   */
  enableUltraSSD?: boolean;
  /**
   * Whether to use a FIPS-enabled OS. See [Add a FIPS-enabled node
   * pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview)
   * for more details.
   */
  enableFIPS?: boolean;
  /**
   * GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.
   * Possible values include: 'MIG1g', 'MIG2g', 'MIG3g', 'MIG4g', 'MIG7g'
   */
  gpuInstanceProfile?: GPUInstanceProfile;
  /**
   * CreationData to be used to specify the source Snapshot ID if the node pool will be
   * created/upgraded using a snapshot.
   */
  creationData?: CreationData;
}

/**
 * Profile for the container service agent pool.
 */
export interface ManagedClusterAgentPoolProfile extends ManagedClusterAgentPoolProfileProperties {
  /**
   * Unique name of the agent pool profile in the context of the subscription and resource group.
   * Windows agent pool names must be 6 characters or less.
   */
  name: string;
}

/**
 * Agent Pool.
 */
export interface AgentPool extends SubResource {
  /**
   * Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to
   * 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools.
   * The default value is 1.
   */
  count?: number;
  /**
   * The size of the agent pool VMs. VM size availability varies by region. If a node contains
   * insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more
   * details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions
   */
  vmSize?: string;
  osDiskSizeGB?: number;
  /**
   * Possible values include: 'Managed', 'Ephemeral'
   */
  osDiskType?: OSDiskType;
  /**
   * Possible values include: 'OS', 'Temporary'
   */
  kubeletDiskType?: KubeletDiskType;
  /**
   * Possible values include: 'OCIContainer', 'WasmWasi'
   */
  workloadRuntime?: WorkloadRuntime;
  /**
   * The ID of the subnet which agent pool nodes and optionally pods will join on startup. If this
   * is not specified, a VNET and subnet will be generated and used. If no podSubnetID is
   * specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the
   * form:
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
   */
  vnetSubnetID?: string;
  /**
   * The ID of the subnet which pods will join when launched. If omitted, pod IPs are statically
   * assigned on the node subnet (see vnetSubnetID for more details). This is of the form:
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
   */
  podSubnetID?: string;
  /**
   * The maximum number of pods that can run on a node.
   */
  maxPods?: number;
  /**
   * Possible values include: 'Linux', 'Windows'. Default value: 'Linux'.
   */
  osType?: OSType;
  /**
   * Possible values include: 'Ubuntu', 'CBLMariner'
   */
  osSKU?: OSSKU;
  /**
   * The maximum number of nodes for auto-scaling
   */
  maxCount?: number;
  /**
   * The minimum number of nodes for auto-scaling
   */
  minCount?: number;
  /**
   * Whether to enable auto-scaler
   */
  enableAutoScaling?: boolean;
  /**
   * The scale down mode to use when scaling the Agent Pool. This also effects the cluster
   * autoscaler behavior. If not specified, it defaults to Delete. Possible values include:
   * 'Delete', 'Deallocate'
   */
  scaleDownMode?: ScaleDownMode;
  /**
   * Possible values include: 'VirtualMachineScaleSets', 'AvailabilitySet'
   */
  agentPoolType?: AgentPoolType;
  /**
   * Possible values include: 'System', 'User'
   */
  mode?: AgentPoolMode;
  /**
   * The version of Kubernetes running on the Agent Pool. As a best practice, you should upgrade
   * all node pools in an AKS cluster to the same Kubernetes version. The node pool version must
   * have the same major version as the control plane. The node pool minor version must be within
   * two minor versions of the control plane version. The node pool version cannot be greater than
   * the control plane version. For more information see [upgrading a node
   * pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
   */
  orchestratorVersion?: string;
  /**
   * The version of node image
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nodeImageVersion?: string;
  /**
   * Settings for upgrading the agentpool
   */
  upgradeSettings?: AgentPoolUpgradeSettings;
  /**
   * The current deployment or provisioning state.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * Whether the Agent Pool is running or stopped. When an Agent Pool is first created it is
   * initially Running. The Agent Pool can be stopped by setting this field to Stopped. A stopped
   * Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only be
   * stopped if it is Running and provisioning state is Succeeded
   */
  powerState?: PowerState;
  /**
   * The list of Availability zones to use for nodes. This can only be specified if the
   * AgentPoolType property is 'VirtualMachineScaleSets'.
   */
  availabilityZones?: string[];
  /**
   * Whether each node is allocated its own public IP. Some scenarios may require nodes in a node
   * pool to receive their own dedicated public IP addresses. A common scenario is for gaming
   * workloads, where a console needs to make a direct connection to a cloud virtual machine to
   * minimize hops. For more information see [assigning a public IP per
   * node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools).
   * The default is false.
   */
  enableNodePublicIP?: boolean;
  /**
   * The public IP prefix ID which VM nodes should use IPs from. This is of the form:
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
   */
  nodePublicIPPrefixID?: string;
  /**
   * The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'. Possible
   * values include: 'Spot', 'Regular'. Default value: 'Regular'.
   */
  scaleSetPriority?: ScaleSetPriority;
  /**
   * The Virtual Machine Scale Set eviction policy to use. This cannot be specified unless the
   * scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'. Possible values
   * include: 'Delete', 'Deallocate'. Default value: 'Delete'.
   */
  scaleSetEvictionPolicy?: ScaleSetEvictionPolicy;
  /**
   * The max price (in US Dollars) you are willing to pay for spot instances. Possible values are
   * any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
   * Possible values are any decimal value greater than zero or -1 which indicates the willingness
   * to pay any on-demand price. For more details on spot pricing, see [spot VMs
   * pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
   */
  spotMaxPrice?: number;
  /**
   * The tags to be persisted on the agent pool virtual machine scale set.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The node labels to be persisted across all nodes in agent pool.
   */
  nodeLabels?: { [propertyName: string]: string };
  /**
   * The taints added to new nodes during node pool create and scale. For example,
   * key=value:NoSchedule.
   */
  nodeTaints?: string[];
  /**
   * The ID for Proximity Placement Group.
   */
  proximityPlacementGroupID?: string;
  /**
   * The Kubelet configuration on the agent pool nodes.
   */
  kubeletConfig?: KubeletConfig;
  /**
   * The OS configuration of Linux agent nodes.
   */
  linuxOSConfig?: LinuxOSConfig;
  /**
   * Whether to enable host based OS and data drive encryption. This is only supported on certain
   * VM sizes and in certain Azure regions. For more information, see:
   * https://docs.microsoft.com/azure/aks/enable-host-encryption
   */
  enableEncryptionAtHost?: boolean;
  /**
   * Whether to enable UltraSSD
   */
  enableUltraSSD?: boolean;
  /**
   * Whether to use a FIPS-enabled OS. See [Add a FIPS-enabled node
   * pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview)
   * for more details.
   */
  enableFIPS?: boolean;
  /**
   * GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.
   * Possible values include: 'MIG1g', 'MIG2g', 'MIG3g', 'MIG4g', 'MIG7g'
   */
  gpuInstanceProfile?: GPUInstanceProfile;
  /**
   * CreationData to be used to specify the source Snapshot ID if the node pool will be
   * created/upgraded using a snapshot.
   */
  creationData?: CreationData;
}

/**
 * Windows gMSA Profile in the managed cluster.
 */
export interface WindowsGmsaProfile {
  /**
   * Whether to enable Windows gMSA. Specifies whether to enable Windows gMSA in the managed
   * cluster.
   */
  enabled?: boolean;
  /**
   * Specifies the DNS server for Windows gMSA. <br><br> Set it to empty if you have configured the
   * DNS server in the vnet which is used to create the managed cluster.
   */
  dnsServer?: string;
  /**
   * Specifies the root domain name for Windows gMSA. <br><br> Set it to empty if you have
   * configured the DNS server in the vnet which is used to create the managed cluster.
   */
  rootDomainName?: string;
}

/**
 * Profile for Windows VMs in the managed cluster.
 */
export interface ManagedClusterWindowsProfile {
  /**
   * Specifies the name of the administrator account. <br><br> **Restriction:** Cannot end in "."
   * <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2",
   * "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup",
   * "console", "david", "guest", "john", "owner", "root", "server", "sql", "support",
   * "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length:** 1
   * character <br><br> **Max-length:** 20 characters
   */
  adminUsername: string;
  /**
   * Specifies the password of the administrator account. <br><br> **Minimum-length:** 8 characters
   * <br><br> **Max-length:** 123 characters <br><br> **Complexity requirements:** 3 out of 4
   * conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br>
   * Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:**
   * "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!",
   * "Password1", "Password22", "iloveyou!"
   */
  adminPassword?: string;
  /**
   * The license type to use for Windows VMs. See [Azure Hybrid User
   * Benefits](https://azure.microsoft.com/pricing/hybrid-benefit/faq/) for more details. Possible
   * values include: 'None', 'Windows_Server'
   */
  licenseType?: LicenseType;
  /**
   * Whether to enable CSI proxy. For more details on CSI proxy, see the [CSI proxy GitHub
   * repo](https://github.com/kubernetes-csi/csi-proxy).
   */
  enableCSIProxy?: boolean;
  /**
   * The Windows gMSA Profile in the Managed Cluster.
   */
  gmsaProfile?: WindowsGmsaProfile;
}

/**
 * Contains information about SSH certificate public key data.
 */
export interface ContainerServiceSshPublicKey {
  /**
   * Certificate public key used to authenticate with VMs through SSH. The certificate must be in
   * PEM format with or without headers.
   */
  keyData: string;
}

/**
 * SSH configuration for Linux-based VMs running on Azure.
 */
export interface ContainerServiceSshConfiguration {
  /**
   * The list of SSH public keys used to authenticate with Linux-based VMs. A maximum of 1 key may
   * be specified.
   */
  publicKeys: ContainerServiceSshPublicKey[];
}

/**
 * Profile for Linux VMs in the container service cluster.
 */
export interface ContainerServiceLinuxProfile {
  /**
   * The administrator username to use for Linux VMs.
   */
  adminUsername: string;
  /**
   * The SSH configuration for Linux-based VMs running on Azure.
   */
  ssh: ContainerServiceSshConfiguration;
}

/**
 * Desired managed outbound IPs for the cluster load balancer.
 */
export interface ManagedClusterLoadBalancerProfileManagedOutboundIPs {
  /**
   * The desired number of outbound IPs created/managed by Azure for the cluster load balancer.
   * Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. Default
   * value: 1.
   */
  count?: number;
}

/**
 * A reference to an Azure resource.
 */
export interface ResourceReference {
  /**
   * The fully qualified Azure resource id.
   */
  id?: string;
}

/**
 * Desired outbound IP Prefix resources for the cluster load balancer.
 */
export interface ManagedClusterLoadBalancerProfileOutboundIPPrefixes {
  /**
   * A list of public IP prefix resources.
   */
  publicIPPrefixes?: ResourceReference[];
}

/**
 * Desired outbound IP resources for the cluster load balancer.
 */
export interface ManagedClusterLoadBalancerProfileOutboundIPs {
  /**
   * A list of public IP resources.
   */
  publicIPs?: ResourceReference[];
}

/**
 * Profile of the managed cluster load balancer.
 */
export interface ManagedClusterLoadBalancerProfile {
  /**
   * Desired managed outbound IPs for the cluster load balancer.
   */
  managedOutboundIPs?: ManagedClusterLoadBalancerProfileManagedOutboundIPs;
  /**
   * Desired outbound IP Prefix resources for the cluster load balancer.
   */
  outboundIPPrefixes?: ManagedClusterLoadBalancerProfileOutboundIPPrefixes;
  /**
   * Desired outbound IP resources for the cluster load balancer.
   */
  outboundIPs?: ManagedClusterLoadBalancerProfileOutboundIPs;
  /**
   * The effective outbound IP resources of the cluster load balancer.
   */
  effectiveOutboundIPs?: ResourceReference[];
  /**
   * The desired number of allocated SNAT ports per VM. Allowed values are in the range of 0 to
   * 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.
   * Default value: 0.
   */
  allocatedOutboundPorts?: number;
  /**
   * Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120
   * (inclusive). The default value is 30 minutes. Default value: 30.
   */
  idleTimeoutInMinutes?: number;
  /**
   * Enable multiple standard load balancers per AKS cluster or not.
   */
  enableMultipleStandardLoadBalancers?: boolean;
}

/**
 * Profile of the managed outbound IP resources of the managed cluster.
 */
export interface ManagedClusterManagedOutboundIPProfile {
  /**
   * The desired number of outbound IPs created/managed by Azure. Allowed values must be in the
   * range of 1 to 16 (inclusive). The default value is 1. Default value: 1.
   */
  count?: number;
}

/**
 * Profile of the managed cluster NAT gateway.
 */
export interface ManagedClusterNATGatewayProfile {
  /**
   * Profile of the managed outbound IP resources of the cluster NAT gateway.
   */
  managedOutboundIPProfile?: ManagedClusterManagedOutboundIPProfile;
  /**
   * The effective outbound IP resources of the cluster NAT gateway.
   */
  effectiveOutboundIPs?: ResourceReference[];
  /**
   * Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120
   * (inclusive). The default value is 4 minutes. Default value: 4.
   */
  idleTimeoutInMinutes?: number;
}

/**
 * Profile of network configuration.
 */
export interface ContainerServiceNetworkProfile {
  /**
   * Network plugin used for building the Kubernetes network. Possible values include: 'azure',
   * 'kubenet'. Default value: 'kubenet'.
   */
  networkPlugin?: NetworkPlugin;
  /**
   * Network policy used for building the Kubernetes network. Possible values include: 'calico',
   * 'azure'
   */
  networkPolicy?: NetworkPolicy;
  /**
   * The network mode Azure CNI is configured with. This cannot be specified if networkPlugin is
   * anything other than 'azure'. Possible values include: 'transparent', 'bridge'
   */
  networkMode?: NetworkMode;
  /**
   * A CIDR notation IP range from which to assign pod IPs when kubenet is used. Default value:
   * '10.244.0.0/16'.
   */
  podCidr?: string;
  /**
   * A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with
   * any Subnet IP ranges. Default value: '10.0.0.0/16'.
   */
  serviceCidr?: string;
  /**
   * An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service
   * address range specified in serviceCidr. Default value: '10.0.0.10'.
   */
  dnsServiceIP?: string;
  /**
   * A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any
   * Subnet IP ranges or the Kubernetes service address range. Default value: '172.17.0.1/16'.
   */
  dockerBridgeCidr?: string;
  /**
   * The outbound (egress) routing method. This can only be set at cluster creation time and cannot
   * be changed later. For more information see [egress outbound
   * type](https://docs.microsoft.com/azure/aks/egress-outboundtype). Possible values include:
   * 'loadBalancer', 'userDefinedRouting', 'managedNATGateway', 'userAssignedNATGateway'. Default
   * value: 'loadBalancer'.
   */
  outboundType?: OutboundType;
  /**
   * The load balancer sku for the managed cluster. The default is 'standard'. See [Azure Load
   * Balancer SKUs](https://docs.microsoft.com/azure/load-balancer/skus) for more information about
   * the differences between load balancer SKUs. Possible values include: 'standard', 'basic'
   */
  loadBalancerSku?: LoadBalancerSku;
  /**
   * Profile of the cluster load balancer.
   */
  loadBalancerProfile?: ManagedClusterLoadBalancerProfile;
  /**
   * Profile of the cluster NAT gateway.
   */
  natGatewayProfile?: ManagedClusterNATGatewayProfile;
}

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
export interface SystemData {
  /**
   * The identity that created the resource.
   */
  createdBy?: string;
  /**
   * The type of identity that created the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  createdByType?: CreatedByType;
  /**
   * The UTC timestamp of resource creation.
   */
  createdAt?: Date;
  /**
   * The identity that last modified the resource.
   */
  lastModifiedBy?: string;
  /**
   * The type of identity that last modified the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  lastModifiedByType?: CreatedByType;
  /**
   * The type of identity that last modified the resource.
   */
  lastModifiedAt?: Date;
}

/**
 * Time in a week.
 */
export interface TimeInWeek {
  /**
   * The day of the week. Possible values include: 'Sunday', 'Monday', 'Tuesday', 'Wednesday',
   * 'Thursday', 'Friday', 'Saturday'
   */
  day?: WeekDay;
  /**
   * A list of hours in the day used to identify a time range. Each integer hour represents a time
   * range beginning at 0m after the hour ending at the next hour (non-inclusive). 0 corresponds to
   * 00:00 UTC, 23 corresponds to 23:00 UTC. Specifying [0, 1] means the 00:00 - 02:00 UTC time
   * range.
   */
  hourSlots?: number[];
}

/**
 * For example, between 2021-05-25T13:00:00Z and 2021-05-25T14:00:00Z.
 * @summary A time range.
 */
export interface TimeSpan {
  /**
   * The start of a time span
   */
  start?: Date;
  /**
   * The end of a time span
   */
  end?: Date;
}

/**
 * See [planned maintenance](https://docs.microsoft.com/azure/aks/planned-maintenance) for more
 * information about planned maintenance.
 * @summary Planned maintenance configuration, used to configure when updates can be deployed to a
 * Managed Cluster.
 */
export interface MaintenanceConfiguration extends SubResource {
  /**
   * The system metadata relating to this resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
  /**
   * Time slots during the week when planned maintenance is allowed to proceed. If two array
   * entries specify the same day of the week, the applied configuration is the union of times in
   * both entries.
   */
  timeInWeek?: TimeInWeek[];
  /**
   * Time slots on which upgrade is not allowed.
   */
  notAllowedTime?: TimeSpan[];
}

/**
 * A run command request
 */
export interface RunCommandRequest {
  /**
   * The command to run.
   */
  command: string;
  /**
   * A base64 encoded zip file containing the files required by the command.
   */
  context?: string;
  /**
   * AuthToken issued for AKS AAD Server App.
   */
  clusterToken?: string;
}

/**
 * run command result.
 */
export interface RunCommandResult {
  /**
   * The command id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * provisioning State
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * The exit code of the command
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly exitCode?: number;
  /**
   * The time when the command started.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startedAt?: Date;
  /**
   * The time when the command finished.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly finishedAt?: Date;
  /**
   * The command output.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly logs?: string;
  /**
   * An explanation of why provisioningState is set to failed (if so).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reason?: string;
}

/**
 * Profile for diagnostics on the container service VMs.
 */
export interface ContainerServiceVMDiagnostics {
  /**
   * Whether the VM diagnostic agent is provisioned on the VM.
   */
  enabled: boolean;
  /**
   * The URI of the storage account where diagnostics are stored.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly storageUri?: string;
}

/**
 * Profile for diagnostics on the container service cluster.
 */
export interface ContainerServiceDiagnosticsProfile {
  /**
   * Profile for diagnostics on the container service VMs.
   */
  vmDiagnostics: ContainerServiceVMDiagnostics;
}

/**
 * The SKU of a Managed Cluster.
 */
export interface ManagedClusterSKU {
  /**
   * The name of a managed cluster SKU. Possible values include: 'Basic'
   */
  name?: ManagedClusterSKUName;
  /**
   * The tier of a managed cluster SKU. If not specified, the default is 'Free'. See [uptime
   * SLA](https://docs.microsoft.com/azure/aks/uptime-sla) for more details. Possible values
   * include: 'Paid', 'Free'
   */
  tier?: ManagedClusterSKUTier;
}

/**
 * The complex type of the extended location.
 */
export interface ExtendedLocation {
  /**
   * The name of the extended location.
   */
  name?: string;
  /**
   * The type of the extended location. Possible values include: 'EdgeZone'
   */
  type?: ExtendedLocationTypes;
}

/**
 * An interface representing ManagedClusterIdentityUserAssignedIdentitiesValue.
 */
export interface ManagedClusterIdentityUserAssignedIdentitiesValue {
  /**
   * The principal id of user assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The client id of user assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly clientId?: string;
}

/**
 * Identity for the managed cluster.
 */
export interface ManagedClusterIdentity {
  /**
   * The principal id of the system assigned identity which is used by master components.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The tenant id of the system assigned identity which is used by master components.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
  /**
   * The type of identity used for the managed cluster. For more information see [use managed
   * identities in AKS](https://docs.microsoft.com/azure/aks/use-managed-identity). Possible values
   * include: 'SystemAssigned', 'UserAssigned', 'None'
   */
  type?: ResourceIdentityType;
  /**
   * The user identity associated with the managed cluster. This identity will be used in control
   * plane. Only one user assigned identity is allowed. The keys must be ARM resource IDs in the
   * form:
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
   */
  userAssignedIdentities?: { [propertyName: string]: ManagedClusterIdentityUserAssignedIdentitiesValue };
}

/**
 * Details about a user assigned identity.
 */
export interface UserAssignedIdentity {
  /**
   * The resource ID of the user assigned identity.
   */
  resourceId?: string;
  /**
   * The client ID of the user assigned identity.
   */
  clientId?: string;
  /**
   * The object ID of the user assigned identity.
   */
  objectId?: string;
}

/**
 * Information of user assigned identity used by this add-on.
 */
export interface ManagedClusterAddonProfileIdentity extends UserAssignedIdentity {
}

/**
 * A Kubernetes add-on profile for a managed cluster.
 */
export interface ManagedClusterAddonProfile {
  /**
   * Whether the add-on is enabled or not.
   */
  enabled: boolean;
  /**
   * Key-value pairs for configuring an add-on.
   */
  config?: { [propertyName: string]: string };
  /**
   * Information of user assigned identity used by this add-on.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly identity?: ManagedClusterAddonProfileIdentity;
}

/**
 * An error response from the pod identity provisioning.
 */
export interface ManagedClusterPodIdentityProvisioningErrorBody {
  /**
   * An identifier for the error. Codes are invariant and are intended to be consumed
   * programmatically.
   */
  code?: string;
  /**
   * A message describing the error, intended to be suitable for display in a user interface.
   */
  message?: string;
  /**
   * The target of the particular error. For example, the name of the property in error.
   */
  target?: string;
  /**
   * A list of additional details about the error.
   */
  details?: ManagedClusterPodIdentityProvisioningErrorBody[];
}

/**
 * An error response from the pod identity provisioning.
 */
export interface ManagedClusterPodIdentityProvisioningError {
  /**
   * Details about the error.
   */
  error?: ManagedClusterPodIdentityProvisioningErrorBody;
}

/**
 * An interface representing ManagedClusterPodIdentityProvisioningInfo.
 */
export interface ManagedClusterPodIdentityProvisioningInfo {
  /**
   * Pod identity assignment error (if any).
   */
  error?: ManagedClusterPodIdentityProvisioningError;
}

/**
 * Details about the pod identity assigned to the Managed Cluster.
 */
export interface ManagedClusterPodIdentity {
  /**
   * The name of the pod identity.
   */
  name: string;
  /**
   * The namespace of the pod identity.
   */
  namespace: string;
  /**
   * The binding selector to use for the AzureIdentityBinding resource.
   */
  bindingSelector?: string;
  /**
   * The user assigned identity details.
   */
  identity: UserAssignedIdentity;
  /**
   * The current provisioning state of the pod identity. Possible values include: 'Assigned',
   * 'Updating', 'Deleting', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ManagedClusterPodIdentityProvisioningState;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningInfo?: ManagedClusterPodIdentityProvisioningInfo;
}

/**
 * See [disable AAD Pod Identity for a specific
 * Pod/Application](https://azure.github.io/aad-pod-identity/docs/configure/application_exception/)
 * for more details.
 * @summary A pod identity exception, which allows pods with certain labels to access the Azure
 * Instance Metadata Service (IMDS) endpoint without being intercepted by the node-managed identity
 * (NMI) server.
 */
export interface ManagedClusterPodIdentityException {
  /**
   * The name of the pod identity exception.
   */
  name: string;
  /**
   * The namespace of the pod identity exception.
   */
  namespace: string;
  /**
   * The pod labels to match.
   */
  podLabels: { [propertyName: string]: string };
}

/**
 * See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for
 * more details on pod identity integration.
 * @summary The pod identity profile of the Managed Cluster.
 */
export interface ManagedClusterPodIdentityProfile {
  /**
   * Whether the pod identity addon is enabled.
   */
  enabled?: boolean;
  /**
   * Whether pod identity is allowed to run on clusters with Kubenet networking. Running in Kubenet
   * is disabled by default due to the security related nature of AAD Pod Identity and the risks of
   * IP spoofing. See [using Kubenet network plugin with AAD Pod
   * Identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity#using-kubenet-network-plugin-with-azure-active-directory-pod-managed-identities)
   * for more information.
   */
  allowNetworkPluginKubenet?: boolean;
  /**
   * The pod identities to use in the cluster.
   */
  userAssignedIdentities?: ManagedClusterPodIdentity[];
  /**
   * The pod identity exceptions to allow.
   */
  userAssignedIdentityExceptions?: ManagedClusterPodIdentityException[];
}

/**
 * For more details see [managed AAD on AKS](https://docs.microsoft.com/azure/aks/managed-aad).
 * @summary AADProfile specifies attributes for Azure Active Directory integration.
 */
export interface ManagedClusterAADProfile {
  /**
   * Whether to enable managed AAD.
   */
  managed?: boolean;
  /**
   * Whether to enable Azure RBAC for Kubernetes authorization.
   */
  enableAzureRBAC?: boolean;
  /**
   * The list of AAD group object IDs that will have admin role of the cluster.
   */
  adminGroupObjectIDs?: string[];
  /**
   * The client AAD application ID.
   */
  clientAppID?: string;
  /**
   * The server AAD application ID.
   */
  serverAppID?: string;
  /**
   * The server AAD application secret.
   */
  serverAppSecret?: string;
  /**
   * The AAD tenant ID to use for authentication. If not specified, will use the tenant of the
   * deployment subscription.
   */
  tenantID?: string;
}

/**
 * Auto upgrade profile for a managed cluster.
 */
export interface ManagedClusterAutoUpgradeProfile {
  /**
   * The upgrade channel for auto upgrade. The default is 'none'. For more information see [setting
   * the AKS cluster auto-upgrade
   * channel](https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel).
   * Possible values include: 'rapid', 'stable', 'patch', 'node-image', 'none'
   */
  upgradeChannel?: UpgradeChannel;
}

/**
 * Parameters to be applied to the cluster-autoscaler when enabled
 */
export interface ManagedClusterPropertiesAutoScalerProfile {
  /**
   * Detects similar node pools and balances the number of nodes between them. Valid values are
   * 'true' and 'false'
   */
  balanceSimilarNodeGroups?: string;
  /**
   * The expander to use when scaling up. If not specified, the default is 'random'. See
   * [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders)
   * for more information. Possible values include: 'least-waste', 'most-pods', 'priority',
   * 'random'
   */
  expander?: Expander;
  /**
   * The maximum number of empty nodes that can be deleted at the same time. This must be a
   * positive integer. The default is 10.
   */
  maxEmptyBulkDelete?: string;
  /**
   * The maximum number of seconds the cluster autoscaler waits for pod termination when trying to
   * scale down a node. The default is 600.
   */
  maxGracefulTerminationSec?: string;
  /**
   * The maximum time the autoscaler waits for a node to be provisioned. The default is '15m'.
   * Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is
   * supported.
   */
  maxNodeProvisionTime?: string;
  /**
   * The maximum percentage of unready nodes in the cluster. After this percentage is exceeded,
   * cluster autoscaler halts operations. The default is 45. The maximum is 100 and the minimum is
   * 0.
   */
  maxTotalUnreadyPercentage?: string;
  /**
   * Ignore unscheduled pods before they're a certain age. For scenarios like burst/batch scale
   * where you don't want CA to act before the kubernetes scheduler could schedule all the pods,
   * you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'.
   * Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours,
   * etc).
   */
  newPodScaleUpDelay?: string;
  /**
   * The number of allowed unready nodes, irrespective of max-total-unready-percentage. This must
   * be an integer. The default is 3.
   */
  okTotalUnreadyCount?: string;
  /**
   * How often cluster is reevaluated for scale up or down. The default is '10'. Values must be an
   * integer number of seconds.
   */
  scanInterval?: string;
  /**
   * How long after scale up that scale down evaluation resumes. The default is '10m'. Values must
   * be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
   */
  scaleDownDelayAfterAdd?: string;
  /**
   * How long after node deletion that scale down evaluation resumes. The default is the
   * scan-interval. Values must be an integer followed by an 'm'. No unit of time other than
   * minutes (m) is supported.
   */
  scaleDownDelayAfterDelete?: string;
  /**
   * How long after scale down failure that scale down evaluation resumes. The default is '3m'.
   * Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is
   * supported.
   */
  scaleDownDelayAfterFailure?: string;
  /**
   * How long a node should be unneeded before it is eligible for scale down. The default is '10m'.
   * Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is
   * supported.
   */
  scaleDownUnneededTime?: string;
  /**
   * How long an unready node should be unneeded before it is eligible for scale down. The default
   * is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m)
   * is supported.
   */
  scaleDownUnreadyTime?: string;
  /**
   * Node utilization level, defined as sum of requested resources divided by capacity, below which
   * a node can be considered for scale down. The default is '0.5'.
   */
  scaleDownUtilizationThreshold?: string;
  /**
   * If cluster autoscaler will skip deleting nodes with pods with local storage, for example,
   * EmptyDir or HostPath. The default is true.
   */
  skipNodesWithLocalStorage?: string;
  /**
   * If cluster autoscaler will skip deleting nodes with pods from kube-system (except for
   * DaemonSet or mirror pods). The default is true.
   */
  skipNodesWithSystemPods?: string;
}

/**
 * Access profile for managed cluster API server.
 */
export interface ManagedClusterAPIServerAccessProfile {
  /**
   * The IP ranges authorized to access the Kubernetes API server. IP ranges are specified in CIDR
   * format, e.g. 137.117.106.88/29. This feature is not compatible with clusters that use Public
   * IP Per Node, or clusters that are using a Basic Load Balancer. For more information see [API
   * server authorized IP
   * ranges](https://docs.microsoft.com/azure/aks/api-server-authorized-ip-ranges).
   */
  authorizedIPRanges?: string[];
  /**
   * Whether to create the cluster as a private cluster or not. For more details, see [Creating a
   * private AKS cluster](https://docs.microsoft.com/azure/aks/private-clusters).
   */
  enablePrivateCluster?: boolean;
  /**
   * The private DNS zone mode for the cluster. The default is System. For more details see
   * [configure private DNS
   * zone](https://docs.microsoft.com/azure/aks/private-clusters#configure-private-dns-zone).
   * Allowed values are 'system' and 'none'.
   */
  privateDNSZone?: string;
  /**
   * Whether to create additional public FQDN for private cluster or not.
   */
  enablePrivateClusterPublicFQDN?: boolean;
  /**
   * Whether to disable run command for the cluster or not.
   */
  disableRunCommand?: boolean;
}

/**
 * A private link resource
 */
export interface PrivateLinkResource {
  /**
   * The ID of the private link resource.
   */
  id?: string;
  /**
   * The name of the private link resource.
   */
  name?: string;
  /**
   * The resource type.
   */
  type?: string;
  /**
   * The group ID of the resource.
   */
  groupId?: string;
  /**
   * The RequiredMembers of the resource
   */
  requiredMembers?: string[];
  /**
   * The private link service ID of the resource, this field is exposed only to NRP internally.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly privateLinkServiceID?: string;
}

/**
 * Cluster HTTP proxy configuration.
 */
export interface ManagedClusterHTTPProxyConfig {
  /**
   * The HTTP proxy server endpoint to use.
   */
  httpProxy?: string;
  /**
   * The HTTPS proxy server endpoint to use.
   */
  httpsProxy?: string;
  /**
   * The endpoints that should not go through proxy.
   */
  noProxy?: string[];
  /**
   * Alternative CA cert to use for connecting to proxy servers.
   */
  trustedCa?: string;
}

/**
 * Azure Defender settings for the security profile.
 */
export interface ManagedClusterSecurityProfileAzureDefender {
  /**
   * Whether to enable Azure Defender
   */
  enabled?: boolean;
  /**
   * Resource ID of the Log Analytics workspace to be associated with Azure Defender.  When Azure
   * Defender is enabled, this field is required and must be a valid workspace resource ID. When
   * Azure Defender is disabled, leave the field empty.
   */
  logAnalyticsWorkspaceResourceId?: string;
}

/**
 * Security profile for the container service cluster.
 */
export interface ManagedClusterSecurityProfile {
  /**
   * Azure Defender settings for the security profile.
   */
  azureDefender?: ManagedClusterSecurityProfileAzureDefender;
}

/**
 * Managed cluster.
 */
export interface ManagedCluster extends Resource {
  /**
   * The managed cluster SKU.
   */
  sku?: ManagedClusterSKU;
  /**
   * The extended location of the Virtual Machine.
   */
  extendedLocation?: ExtendedLocation;
  /**
   * The identity of the managed cluster, if configured.
   */
  identity?: ManagedClusterIdentity;
  /**
   * The current provisioning state.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * The Power State of the cluster.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly powerState?: PowerState;
  /**
   * The max number of agent pools for the managed cluster.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maxAgentPools?: number;
  /**
   * The version of Kubernetes the Managed Cluster is running. When you upgrade a supported AKS
   * cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed
   * sequentially by major version number. For example, upgrades between 1.14.x -> 1.15.x or 1.15.x
   * -> 1.16.x are allowed, however 1.14.x -> 1.16.x is not allowed. See [upgrading an AKS
   * cluster](https://docs.microsoft.com/azure/aks/upgrade-cluster) for more details.
   */
  kubernetesVersion?: string;
  /**
   * The DNS prefix of the Managed Cluster. This cannot be updated once the Managed Cluster has
   * been created.
   */
  dnsPrefix?: string;
  /**
   * The FQDN subdomain of the private cluster with custom private dns zone. This cannot be updated
   * once the Managed Cluster has been created.
   */
  fqdnSubdomain?: string;
  /**
   * The FQDN of the master pool.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly fqdn?: string;
  /**
   * The FQDN of private cluster.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly privateFQDN?: string;
  /**
   * The special FQDN used by the Azure Portal to access the Managed Cluster. This FQDN is for use
   * only by the Azure Portal and should not be used by other clients. The Azure Portal requires
   * certain Cross-Origin Resource Sharing (CORS) headers to be sent in some responses, which
   * Kubernetes APIServer doesn't handle by default. This special FQDN supports CORS, allowing the
   * Azure Portal to function properly.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly azurePortalFQDN?: string;
  /**
   * The agent pool properties.
   */
  agentPoolProfiles?: ManagedClusterAgentPoolProfile[];
  /**
   * The profile for Linux VMs in the Managed Cluster.
   */
  linuxProfile?: ContainerServiceLinuxProfile;
  /**
   * The profile for Windows VMs in the Managed Cluster.
   */
  windowsProfile?: ManagedClusterWindowsProfile;
  /**
   * Information about a service principal identity for the cluster to use for manipulating Azure
   * APIs.
   */
  servicePrincipalProfile?: ManagedClusterServicePrincipalProfile;
  /**
   * The profile of managed cluster add-on.
   */
  addonProfiles?: { [propertyName: string]: ManagedClusterAddonProfile };
  /**
   * The pod identity profile of the Managed Cluster. See [use AAD pod
   * identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on
   * AAD pod identity integration.
   */
  podIdentityProfile?: ManagedClusterPodIdentityProfile;
  /**
   * The name of the resource group containing agent pool nodes.
   */
  nodeResourceGroup?: string;
  /**
   * Whether to enable Kubernetes Role-Based Access Control.
   */
  enableRBAC?: boolean;
  /**
   * (DEPRECATING) Whether to enable Kubernetes pod security policy (preview). This feature is set
   * for removal on October 15th, 2020. Learn more at aka.ms/aks/azpodpolicy.
   */
  enablePodSecurityPolicy?: boolean;
  /**
   * The network configuration profile.
   */
  networkProfile?: ContainerServiceNetworkProfile;
  /**
   * The Azure Active Directory configuration.
   */
  aadProfile?: ManagedClusterAADProfile;
  /**
   * The auto upgrade configuration.
   */
  autoUpgradeProfile?: ManagedClusterAutoUpgradeProfile;
  /**
   * Parameters to be applied to the cluster-autoscaler when enabled
   */
  autoScalerProfile?: ManagedClusterPropertiesAutoScalerProfile;
  /**
   * The access profile for managed cluster API server.
   */
  apiServerAccessProfile?: ManagedClusterAPIServerAccessProfile;
  /**
   * The Resource ID of the disk encryption set to use for enabling encryption at rest. This is of
   * the form:
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}'
   */
  diskEncryptionSetID?: string;
  /**
   * Identities associated with the cluster.
   */
  identityProfile?: { [propertyName: string]: UserAssignedIdentity };
  /**
   * Private link resources associated with the cluster.
   */
  privateLinkResources?: PrivateLinkResource[];
  /**
   * If local accounts should be disabled on the Managed Cluster. If set to true, getting static
   * credentials will be disabled for this cluster. This must only be used on Managed Clusters that
   * are AAD enabled. For more details see [disable local
   * accounts](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts-preview).
   */
  disableLocalAccounts?: boolean;
  /**
   * Configurations for provisioning the cluster with HTTP proxy servers.
   */
  httpProxyConfig?: ManagedClusterHTTPProxyConfig;
  /**
   * Security profile for the managed cluster.
   */
  securityProfile?: ManagedClusterSecurityProfile;
  /**
   * Whether the cluster can be accessed through public network or not. Default value is 'Enabled'
   * (case insensitive). Could be set to 'Disabled' to enable private cluster. Possible values
   * include: 'Enabled', 'Disabled'
   */
  publicNetworkAccess?: PublicNetworkAccess;
}

/**
 * Managed cluster Access Profile.
 */
export interface ManagedClusterAccessProfile extends Resource {
  /**
   * Base64-encoded Kubernetes configuration file.
   */
  kubeConfig?: Uint8Array;
}

/**
 * An interface representing ManagedClusterPoolUpgradeProfileUpgradesItem.
 */
export interface ManagedClusterPoolUpgradeProfileUpgradesItem {
  /**
   * The Kubernetes version (major.minor.patch).
   */
  kubernetesVersion?: string;
  /**
   * Whether the Kubernetes version is currently in preview.
   */
  isPreview?: boolean;
}

/**
 * The list of available upgrade versions.
 */
export interface ManagedClusterPoolUpgradeProfile {
  /**
   * The Kubernetes version (major.minor.patch).
   */
  kubernetesVersion: string;
  /**
   * The Agent Pool name.
   */
  name?: string;
  /**
   * Possible values include: 'Linux', 'Windows'. Default value: 'Linux'.
   */
  osType: OSType;
  /**
   * List of orchestrator types and versions available for upgrade.
   */
  upgrades?: ManagedClusterPoolUpgradeProfileUpgradesItem[];
}

/**
 * The list of available upgrades for compute pools.
 */
export interface ManagedClusterUpgradeProfile {
  /**
   * The ID of the upgrade profile.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the upgrade profile.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the upgrade profile.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The list of available upgrade versions for the control plane.
   */
  controlPlaneProfile: ManagedClusterPoolUpgradeProfile;
  /**
   * The list of available upgrade versions for agent pools.
   */
  agentPoolProfiles: ManagedClusterPoolUpgradeProfile[];
}

/**
 * An interface representing AgentPoolUpgradeProfilePropertiesUpgradesItem.
 */
export interface AgentPoolUpgradeProfilePropertiesUpgradesItem {
  /**
   * The Kubernetes version (major.minor.patch).
   */
  kubernetesVersion?: string;
  /**
   * Whether the Kubernetes version is currently in preview.
   */
  isPreview?: boolean;
}

/**
 * The list of available upgrades for an agent pool.
 */
export interface AgentPoolUpgradeProfile {
  /**
   * The ID of the agent pool upgrade profile.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the agent pool upgrade profile.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the agent pool upgrade profile.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The Kubernetes version (major.minor.patch).
   */
  kubernetesVersion: string;
  /**
   * Possible values include: 'Linux', 'Windows'. Default value: 'Linux'.
   */
  osType: OSType;
  /**
   * List of orchestrator types and versions available for upgrade.
   */
  upgrades?: AgentPoolUpgradeProfilePropertiesUpgradesItem[];
  /**
   * The latest AKS supported node image version.
   */
  latestNodeImageVersion?: string;
}

/**
 * An interface representing AgentPoolAvailableVersionsPropertiesAgentPoolVersionsItem.
 */
export interface AgentPoolAvailableVersionsPropertiesAgentPoolVersionsItem {
  /**
   * Whether this version is the default agent pool version.
   */
  default?: boolean;
  /**
   * The Kubernetes version (major.minor.patch).
   */
  kubernetesVersion?: string;
  /**
   * Whether Kubernetes version is currently in preview.
   */
  isPreview?: boolean;
}

/**
 * The list of available versions for an agent pool.
 */
export interface AgentPoolAvailableVersions {
  /**
   * The ID of the agent pool version list.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the agent pool version list.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the agent pool version list.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * List of versions available for agent pool.
   */
  agentPoolVersions?: AgentPoolAvailableVersionsPropertiesAgentPoolVersionsItem[];
}

/**
 * The credential result response.
 */
export interface CredentialResult {
  /**
   * The name of the credential.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Base64-encoded Kubernetes configuration file.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: Uint8Array;
}

/**
 * The list credential result response.
 */
export interface CredentialResults {
  /**
   * Base64-encoded Kubernetes configuration file.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kubeconfigs?: CredentialResult[];
}

/**
 * Private endpoint which a connection belongs to.
 */
export interface PrivateEndpoint {
  /**
   * The resource ID of the private endpoint
   */
  id?: string;
}

/**
 * The state of a private link service connection.
 */
export interface PrivateLinkServiceConnectionState {
  /**
   * The private link service connection status. Possible values include: 'Pending', 'Approved',
   * 'Rejected', 'Disconnected'
   */
  status?: ConnectionStatus;
  /**
   * The private link service connection description.
   */
  description?: string;
}

/**
 * A private endpoint connection
 */
export interface PrivateEndpointConnection extends BaseResource {
  /**
   * The ID of the private endpoint connection.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the private endpoint connection.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The current provisioning state. Possible values include: 'Succeeded', 'Creating', 'Deleting',
   * 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: PrivateEndpointConnectionProvisioningState;
  /**
   * The resource of private endpoint.
   */
  privateEndpoint?: PrivateEndpoint;
  /**
   * A collection of information about the state of the connection between service consumer and
   * provider.
   */
  privateLinkServiceConnectionState: PrivateLinkServiceConnectionState;
}

/**
 * A list of private endpoint connections
 */
export interface PrivateEndpointConnectionListResult {
  /**
   * The collection value.
   */
  value?: PrivateEndpointConnection[];
}

/**
 * A list of private link resources
 */
export interface PrivateLinkResourcesListResult {
  /**
   * The collection value.
   */
  value?: PrivateLinkResource[];
}

/**
 * OS option property.
 */
export interface OSOptionProperty {
  /**
   * The OS type.
   */
  osType: string;
  /**
   * Whether the image is FIPS-enabled.
   */
  enableFipsImage: boolean;
}

/**
 * The OS option profile.
 */
export interface OSOptionProfile {
  /**
   * The ID of the OS option resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the OS option resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the OS option resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The list of OS options.
   */
  osOptionPropertyList: OSOptionProperty[];
}

/**
 * connect information from the AKS agent nodes to a single endpoint.
 */
export interface EndpointDetail {
  /**
   * An IP Address that Domain Name currently resolves to.
   */
  ipAddress?: string;
  /**
   * The port an endpoint is connected to.
   */
  port?: number;
  /**
   * The protocol used for connection
   */
  protocol?: string;
  /**
   * Description of the detail
   */
  description?: string;
}

/**
 * A domain name that AKS agent nodes are reaching at.
 */
export interface EndpointDependency {
  /**
   * The domain name of the dependency.
   */
  domainName?: string;
  /**
   * The Ports and Protocols used when connecting to domainName.
   */
  endpointDetails?: EndpointDetail[];
}

/**
 * Egress endpoints which AKS agent nodes connect to for common purpose.
 */
export interface OutboundEnvironmentEndpoint {
  /**
   * The category of endpoints accessed by the AKS agent node, e.g. azure-resource-management,
   * apiserver, etc.
   */
  category?: string;
  /**
   * The endpoints that AKS agent nodes connect to
   */
  endpoints?: EndpointDependency[];
}

/**
 * A node pool snapshot resource.
 */
export interface Snapshot extends Resource {
  /**
   * The system metadata relating to this snapshot.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
  /**
   * CreationData to be used to specify the source agent pool resource ID to create this snapshot.
   */
  creationData?: CreationData;
  /**
   * Possible values include: 'NodePool'. Default value: 'NodePool'.
   */
  snapshotType?: SnapshotType;
  /**
   * The version of Kubernetes.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kubernetesVersion?: string;
  /**
   * The version of node image.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nodeImageVersion?: string;
  /**
   * Possible values include: 'Linux', 'Windows'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**.
   * Default value: 'Linux'.
   */
  readonly osType?: OSType;
  /**
   * Possible values include: 'Ubuntu', 'CBLMariner'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly osSku?: OSSKU;
  /**
   * The size of the VM.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly vmSize?: string;
  /**
   * Whether to use a FIPS-enabled OS.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly enableFIPS?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ManagedClustersGetOSOptionsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The resource type for which the OS options needs to be returned
   */
  resourceType?: string;
}

/**
 * Optional Parameters.
 */
export interface ManagedClustersListClusterAdminCredentialsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * server fqdn type for credentials to be returned
   */
  serverFqdn?: string;
}

/**
 * Optional Parameters.
 */
export interface ManagedClustersListClusterUserCredentialsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * server fqdn type for credentials to be returned
   */
  serverFqdn?: string;
}

/**
 * Optional Parameters.
 */
export interface ManagedClustersListClusterMonitoringUserCredentialsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * server fqdn type for credentials to be returned
   */
  serverFqdn?: string;
}

/**
 * An interface representing ContainerServiceClientOptions.
 */
export interface ContainerServiceClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * The List Operation response.
 * @extends Array<OperationValue>
 */
export interface OperationListResult extends Array<OperationValue> {
}

/**
 * @interface
 * The response from the List Managed Clusters operation.
 * @extends Array<ManagedCluster>
 */
export interface ManagedClusterListResult extends Array<ManagedCluster> {
  /**
   * The URL to get the next set of managed cluster results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of OutboundEnvironmentEndpoint
 * @extends Array<OutboundEnvironmentEndpoint>
 */
export interface OutboundEnvironmentEndpointCollection extends Array<OutboundEnvironmentEndpoint> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * The response from the List maintenance configurations operation.
 * @extends Array<MaintenanceConfiguration>
 */
export interface MaintenanceConfigurationListResult extends Array<MaintenanceConfiguration> {
  /**
   * The URL to get the next set of maintenance configuration results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * The response from the List Agent Pools operation.
 * @extends Array<AgentPool>
 */
export interface AgentPoolListResult extends Array<AgentPool> {
  /**
   * The URL to get the next set of agent pool results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * The response from the List Snapshots operation.
 * @extends Array<Snapshot>
 */
export interface SnapshotListResult extends Array<Snapshot> {
  /**
   * The URL to get the next set of snapshot results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for ContainerServiceStorageProfileTypes.
 * Possible values include: 'StorageAccount', 'ManagedDisks'
 * @readonly
 * @enum {string}
 */
export type ContainerServiceStorageProfileTypes = 'StorageAccount' | 'ManagedDisks';

/**
 * Defines values for ContainerServiceVMSizeTypes.
 * Possible values include: 'Standard_A1', 'Standard_A10', 'Standard_A11', 'Standard_A1_v2',
 * 'Standard_A2', 'Standard_A2_v2', 'Standard_A2m_v2', 'Standard_A3', 'Standard_A4',
 * 'Standard_A4_v2', 'Standard_A4m_v2', 'Standard_A5', 'Standard_A6', 'Standard_A7', 'Standard_A8',
 * 'Standard_A8_v2', 'Standard_A8m_v2', 'Standard_A9', 'Standard_B2ms', 'Standard_B2s',
 * 'Standard_B4ms', 'Standard_B8ms', 'Standard_D1', 'Standard_D11', 'Standard_D11_v2',
 * 'Standard_D11_v2_Promo', 'Standard_D12', 'Standard_D12_v2', 'Standard_D12_v2_Promo',
 * 'Standard_D13', 'Standard_D13_v2', 'Standard_D13_v2_Promo', 'Standard_D14', 'Standard_D14_v2',
 * 'Standard_D14_v2_Promo', 'Standard_D15_v2', 'Standard_D16_v3', 'Standard_D16s_v3',
 * 'Standard_D1_v2', 'Standard_D2', 'Standard_D2_v2', 'Standard_D2_v2_Promo', 'Standard_D2_v3',
 * 'Standard_D2s_v3', 'Standard_D3', 'Standard_D32_v3', 'Standard_D32s_v3', 'Standard_D3_v2',
 * 'Standard_D3_v2_Promo', 'Standard_D4', 'Standard_D4_v2', 'Standard_D4_v2_Promo',
 * 'Standard_D4_v3', 'Standard_D4s_v3', 'Standard_D5_v2', 'Standard_D5_v2_Promo',
 * 'Standard_D64_v3', 'Standard_D64s_v3', 'Standard_D8_v3', 'Standard_D8s_v3', 'Standard_DS1',
 * 'Standard_DS11', 'Standard_DS11_v2', 'Standard_DS11_v2_Promo', 'Standard_DS12',
 * 'Standard_DS12_v2', 'Standard_DS12_v2_Promo', 'Standard_DS13', 'Standard_DS13-2_v2',
 * 'Standard_DS13-4_v2', 'Standard_DS13_v2', 'Standard_DS13_v2_Promo', 'Standard_DS14',
 * 'Standard_DS14-4_v2', 'Standard_DS14-8_v2', 'Standard_DS14_v2', 'Standard_DS14_v2_Promo',
 * 'Standard_DS15_v2', 'Standard_DS1_v2', 'Standard_DS2', 'Standard_DS2_v2',
 * 'Standard_DS2_v2_Promo', 'Standard_DS3', 'Standard_DS3_v2', 'Standard_DS3_v2_Promo',
 * 'Standard_DS4', 'Standard_DS4_v2', 'Standard_DS4_v2_Promo', 'Standard_DS5_v2',
 * 'Standard_DS5_v2_Promo', 'Standard_E16_v3', 'Standard_E16s_v3', 'Standard_E2_v3',
 * 'Standard_E2s_v3', 'Standard_E32-16s_v3', 'Standard_E32-8s_v3', 'Standard_E32_v3',
 * 'Standard_E32s_v3', 'Standard_E4_v3', 'Standard_E4s_v3', 'Standard_E64-16s_v3',
 * 'Standard_E64-32s_v3', 'Standard_E64_v3', 'Standard_E64s_v3', 'Standard_E8_v3',
 * 'Standard_E8s_v3', 'Standard_F1', 'Standard_F16', 'Standard_F16s', 'Standard_F16s_v2',
 * 'Standard_F1s', 'Standard_F2', 'Standard_F2s', 'Standard_F2s_v2', 'Standard_F32s_v2',
 * 'Standard_F4', 'Standard_F4s', 'Standard_F4s_v2', 'Standard_F64s_v2', 'Standard_F72s_v2',
 * 'Standard_F8', 'Standard_F8s', 'Standard_F8s_v2', 'Standard_G1', 'Standard_G2', 'Standard_G3',
 * 'Standard_G4', 'Standard_G5', 'Standard_GS1', 'Standard_GS2', 'Standard_GS3', 'Standard_GS4',
 * 'Standard_GS4-4', 'Standard_GS4-8', 'Standard_GS5', 'Standard_GS5-16', 'Standard_GS5-8',
 * 'Standard_H16', 'Standard_H16m', 'Standard_H16mr', 'Standard_H16r', 'Standard_H8',
 * 'Standard_H8m', 'Standard_L16s', 'Standard_L32s', 'Standard_L4s', 'Standard_L8s',
 * 'Standard_M128-32ms', 'Standard_M128-64ms', 'Standard_M128ms', 'Standard_M128s',
 * 'Standard_M64-16ms', 'Standard_M64-32ms', 'Standard_M64ms', 'Standard_M64s', 'Standard_NC12',
 * 'Standard_NC12s_v2', 'Standard_NC12s_v3', 'Standard_NC24', 'Standard_NC24r',
 * 'Standard_NC24rs_v2', 'Standard_NC24rs_v3', 'Standard_NC24s_v2', 'Standard_NC24s_v3',
 * 'Standard_NC6', 'Standard_NC6s_v2', 'Standard_NC6s_v3', 'Standard_ND12s', 'Standard_ND24rs',
 * 'Standard_ND24s', 'Standard_ND6s', 'Standard_NV12', 'Standard_NV24', 'Standard_NV6'
 * @readonly
 * @enum {string}
 */
export type ContainerServiceVMSizeTypes = 'Standard_A1' | 'Standard_A10' | 'Standard_A11' | 'Standard_A1_v2' | 'Standard_A2' | 'Standard_A2_v2' | 'Standard_A2m_v2' | 'Standard_A3' | 'Standard_A4' | 'Standard_A4_v2' | 'Standard_A4m_v2' | 'Standard_A5' | 'Standard_A6' | 'Standard_A7' | 'Standard_A8' | 'Standard_A8_v2' | 'Standard_A8m_v2' | 'Standard_A9' | 'Standard_B2ms' | 'Standard_B2s' | 'Standard_B4ms' | 'Standard_B8ms' | 'Standard_D1' | 'Standard_D11' | 'Standard_D11_v2' | 'Standard_D11_v2_Promo' | 'Standard_D12' | 'Standard_D12_v2' | 'Standard_D12_v2_Promo' | 'Standard_D13' | 'Standard_D13_v2' | 'Standard_D13_v2_Promo' | 'Standard_D14' | 'Standard_D14_v2' | 'Standard_D14_v2_Promo' | 'Standard_D15_v2' | 'Standard_D16_v3' | 'Standard_D16s_v3' | 'Standard_D1_v2' | 'Standard_D2' | 'Standard_D2_v2' | 'Standard_D2_v2_Promo' | 'Standard_D2_v3' | 'Standard_D2s_v3' | 'Standard_D3' | 'Standard_D32_v3' | 'Standard_D32s_v3' | 'Standard_D3_v2' | 'Standard_D3_v2_Promo' | 'Standard_D4' | 'Standard_D4_v2' | 'Standard_D4_v2_Promo' | 'Standard_D4_v3' | 'Standard_D4s_v3' | 'Standard_D5_v2' | 'Standard_D5_v2_Promo' | 'Standard_D64_v3' | 'Standard_D64s_v3' | 'Standard_D8_v3' | 'Standard_D8s_v3' | 'Standard_DS1' | 'Standard_DS11' | 'Standard_DS11_v2' | 'Standard_DS11_v2_Promo' | 'Standard_DS12' | 'Standard_DS12_v2' | 'Standard_DS12_v2_Promo' | 'Standard_DS13' | 'Standard_DS13-2_v2' | 'Standard_DS13-4_v2' | 'Standard_DS13_v2' | 'Standard_DS13_v2_Promo' | 'Standard_DS14' | 'Standard_DS14-4_v2' | 'Standard_DS14-8_v2' | 'Standard_DS14_v2' | 'Standard_DS14_v2_Promo' | 'Standard_DS15_v2' | 'Standard_DS1_v2' | 'Standard_DS2' | 'Standard_DS2_v2' | 'Standard_DS2_v2_Promo' | 'Standard_DS3' | 'Standard_DS3_v2' | 'Standard_DS3_v2_Promo' | 'Standard_DS4' | 'Standard_DS4_v2' | 'Standard_DS4_v2_Promo' | 'Standard_DS5_v2' | 'Standard_DS5_v2_Promo' | 'Standard_E16_v3' | 'Standard_E16s_v3' | 'Standard_E2_v3' | 'Standard_E2s_v3' | 'Standard_E32-16s_v3' | 'Standard_E32-8s_v3' | 'Standard_E32_v3' | 'Standard_E32s_v3' | 'Standard_E4_v3' | 'Standard_E4s_v3' | 'Standard_E64-16s_v3' | 'Standard_E64-32s_v3' | 'Standard_E64_v3' | 'Standard_E64s_v3' | 'Standard_E8_v3' | 'Standard_E8s_v3' | 'Standard_F1' | 'Standard_F16' | 'Standard_F16s' | 'Standard_F16s_v2' | 'Standard_F1s' | 'Standard_F2' | 'Standard_F2s' | 'Standard_F2s_v2' | 'Standard_F32s_v2' | 'Standard_F4' | 'Standard_F4s' | 'Standard_F4s_v2' | 'Standard_F64s_v2' | 'Standard_F72s_v2' | 'Standard_F8' | 'Standard_F8s' | 'Standard_F8s_v2' | 'Standard_G1' | 'Standard_G2' | 'Standard_G3' | 'Standard_G4' | 'Standard_G5' | 'Standard_GS1' | 'Standard_GS2' | 'Standard_GS3' | 'Standard_GS4' | 'Standard_GS4-4' | 'Standard_GS4-8' | 'Standard_GS5' | 'Standard_GS5-16' | 'Standard_GS5-8' | 'Standard_H16' | 'Standard_H16m' | 'Standard_H16mr' | 'Standard_H16r' | 'Standard_H8' | 'Standard_H8m' | 'Standard_L16s' | 'Standard_L32s' | 'Standard_L4s' | 'Standard_L8s' | 'Standard_M128-32ms' | 'Standard_M128-64ms' | 'Standard_M128ms' | 'Standard_M128s' | 'Standard_M64-16ms' | 'Standard_M64-32ms' | 'Standard_M64ms' | 'Standard_M64s' | 'Standard_NC12' | 'Standard_NC12s_v2' | 'Standard_NC12s_v3' | 'Standard_NC24' | 'Standard_NC24r' | 'Standard_NC24rs_v2' | 'Standard_NC24rs_v3' | 'Standard_NC24s_v2' | 'Standard_NC24s_v3' | 'Standard_NC6' | 'Standard_NC6s_v2' | 'Standard_NC6s_v3' | 'Standard_ND12s' | 'Standard_ND24rs' | 'Standard_ND24s' | 'Standard_ND6s' | 'Standard_NV12' | 'Standard_NV24' | 'Standard_NV6';

/**
 * Defines values for OSDiskType.
 * Possible values include: 'Managed', 'Ephemeral'
 * @readonly
 * @enum {string}
 */
export type OSDiskType = 'Managed' | 'Ephemeral';

/**
 * Defines values for KubeletDiskType.
 * Possible values include: 'OS', 'Temporary'
 * @readonly
 * @enum {string}
 */
export type KubeletDiskType = 'OS' | 'Temporary';

/**
 * Defines values for WorkloadRuntime.
 * Possible values include: 'OCIContainer', 'WasmWasi'
 * @readonly
 * @enum {string}
 */
export type WorkloadRuntime = 'OCIContainer' | 'WasmWasi';

/**
 * Defines values for OSType.
 * Possible values include: 'Linux', 'Windows'
 * @readonly
 * @enum {string}
 */
export type OSType = 'Linux' | 'Windows';

/**
 * Defines values for OSSKU.
 * Possible values include: 'Ubuntu', 'CBLMariner'
 * @readonly
 * @enum {string}
 */
export type OSSKU = 'Ubuntu' | 'CBLMariner';

/**
 * Defines values for ScaleDownMode.
 * Possible values include: 'Delete', 'Deallocate'
 * @readonly
 * @enum {string}
 */
export type ScaleDownMode = 'Delete' | 'Deallocate';

/**
 * Defines values for AgentPoolType.
 * Possible values include: 'VirtualMachineScaleSets', 'AvailabilitySet'
 * @readonly
 * @enum {string}
 */
export type AgentPoolType = 'VirtualMachineScaleSets' | 'AvailabilitySet';

/**
 * Defines values for AgentPoolMode.
 * Possible values include: 'System', 'User'
 * @readonly
 * @enum {string}
 */
export type AgentPoolMode = 'System' | 'User';

/**
 * Defines values for Code.
 * Possible values include: 'Running', 'Stopped'
 * @readonly
 * @enum {string}
 */
export type Code = 'Running' | 'Stopped';

/**
 * Defines values for ScaleSetPriority.
 * Possible values include: 'Spot', 'Regular'
 * @readonly
 * @enum {string}
 */
export type ScaleSetPriority = 'Spot' | 'Regular';

/**
 * Defines values for ScaleSetEvictionPolicy.
 * Possible values include: 'Delete', 'Deallocate'
 * @readonly
 * @enum {string}
 */
export type ScaleSetEvictionPolicy = 'Delete' | 'Deallocate';

/**
 * Defines values for GPUInstanceProfile.
 * Possible values include: 'MIG1g', 'MIG2g', 'MIG3g', 'MIG4g', 'MIG7g'
 * @readonly
 * @enum {string}
 */
export type GPUInstanceProfile = 'MIG1g' | 'MIG2g' | 'MIG3g' | 'MIG4g' | 'MIG7g';

/**
 * Defines values for LicenseType.
 * Possible values include: 'None', 'Windows_Server'
 * @readonly
 * @enum {string}
 */
export type LicenseType = 'None' | 'Windows_Server';

/**
 * Defines values for NetworkPlugin.
 * Possible values include: 'azure', 'kubenet'
 * @readonly
 * @enum {string}
 */
export type NetworkPlugin = 'azure' | 'kubenet';

/**
 * Defines values for NetworkPolicy.
 * Possible values include: 'calico', 'azure'
 * @readonly
 * @enum {string}
 */
export type NetworkPolicy = 'calico' | 'azure';

/**
 * Defines values for NetworkMode.
 * Possible values include: 'transparent', 'bridge'
 * @readonly
 * @enum {string}
 */
export type NetworkMode = 'transparent' | 'bridge';

/**
 * Defines values for OutboundType.
 * Possible values include: 'loadBalancer', 'userDefinedRouting', 'managedNATGateway',
 * 'userAssignedNATGateway'
 * @readonly
 * @enum {string}
 */
export type OutboundType = 'loadBalancer' | 'userDefinedRouting' | 'managedNATGateway' | 'userAssignedNATGateway';

/**
 * Defines values for LoadBalancerSku.
 * Possible values include: 'standard', 'basic'
 * @readonly
 * @enum {string}
 */
export type LoadBalancerSku = 'standard' | 'basic';

/**
 * Defines values for CreatedByType.
 * Possible values include: 'User', 'Application', 'ManagedIdentity', 'Key'
 * @readonly
 * @enum {string}
 */
export type CreatedByType = 'User' | 'Application' | 'ManagedIdentity' | 'Key';

/**
 * Defines values for WeekDay.
 * Possible values include: 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday',
 * 'Saturday'
 * @readonly
 * @enum {string}
 */
export type WeekDay = 'Sunday' | 'Monday' | 'Tuesday' | 'Wednesday' | 'Thursday' | 'Friday' | 'Saturday';

/**
 * Defines values for ManagedClusterSKUName.
 * Possible values include: 'Basic'
 * @readonly
 * @enum {string}
 */
export type ManagedClusterSKUName = 'Basic';

/**
 * Defines values for ManagedClusterSKUTier.
 * Possible values include: 'Paid', 'Free'
 * @readonly
 * @enum {string}
 */
export type ManagedClusterSKUTier = 'Paid' | 'Free';

/**
 * Defines values for ExtendedLocationTypes.
 * Possible values include: 'EdgeZone'
 * @readonly
 * @enum {string}
 */
export type ExtendedLocationTypes = 'EdgeZone';

/**
 * Defines values for ResourceIdentityType.
 * Possible values include: 'SystemAssigned', 'UserAssigned', 'None'
 * @readonly
 * @enum {string}
 */
export type ResourceIdentityType = 'SystemAssigned' | 'UserAssigned' | 'None';

/**
 * Defines values for ManagedClusterPodIdentityProvisioningState.
 * Possible values include: 'Assigned', 'Updating', 'Deleting', 'Failed'
 * @readonly
 * @enum {string}
 */
export type ManagedClusterPodIdentityProvisioningState = 'Assigned' | 'Updating' | 'Deleting' | 'Failed';

/**
 * Defines values for UpgradeChannel.
 * Possible values include: 'rapid', 'stable', 'patch', 'node-image', 'none'
 * @readonly
 * @enum {string}
 */
export type UpgradeChannel = 'rapid' | 'stable' | 'patch' | 'node-image' | 'none';

/**
 * Defines values for Expander.
 * Possible values include: 'least-waste', 'most-pods', 'priority', 'random'
 * @readonly
 * @enum {string}
 */
export type Expander = 'least-waste' | 'most-pods' | 'priority' | 'random';

/**
 * Defines values for PublicNetworkAccess.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type PublicNetworkAccess = 'Enabled' | 'Disabled';

/**
 * Defines values for PrivateEndpointConnectionProvisioningState.
 * Possible values include: 'Succeeded', 'Creating', 'Deleting', 'Failed'
 * @readonly
 * @enum {string}
 */
export type PrivateEndpointConnectionProvisioningState = 'Succeeded' | 'Creating' | 'Deleting' | 'Failed';

/**
 * Defines values for ConnectionStatus.
 * Possible values include: 'Pending', 'Approved', 'Rejected', 'Disconnected'
 * @readonly
 * @enum {string}
 */
export type ConnectionStatus = 'Pending' | 'Approved' | 'Rejected' | 'Disconnected';

/**
 * Defines values for SnapshotType.
 * Possible values include: 'NodePool'
 * @readonly
 * @enum {string}
 */
export type SnapshotType = 'NodePool';

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the getOSOptions operation.
 */
export type ManagedClustersGetOSOptionsResponse = OSOptionProfile & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OSOptionProfile;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ManagedClustersListResponse = ManagedClusterListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedClusterListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ManagedClustersListByResourceGroupResponse = ManagedClusterListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedClusterListResult;
    };
};

/**
 * Contains response data for the getUpgradeProfile operation.
 */
export type ManagedClustersGetUpgradeProfileResponse = ManagedClusterUpgradeProfile & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedClusterUpgradeProfile;
    };
};

/**
 * Contains response data for the getAccessProfile operation.
 */
export type ManagedClustersGetAccessProfileResponse = ManagedClusterAccessProfile & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedClusterAccessProfile;
    };
};

/**
 * Contains response data for the listClusterAdminCredentials operation.
 */
export type ManagedClustersListClusterAdminCredentialsResponse = CredentialResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CredentialResults;
    };
};

/**
 * Contains response data for the listClusterUserCredentials operation.
 */
export type ManagedClustersListClusterUserCredentialsResponse = CredentialResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CredentialResults;
    };
};

/**
 * Contains response data for the listClusterMonitoringUserCredentials operation.
 */
export type ManagedClustersListClusterMonitoringUserCredentialsResponse = CredentialResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CredentialResults;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedClustersGetResponse = ManagedCluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedCluster;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedClustersCreateOrUpdateResponse = ManagedCluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedCluster;
    };
};

/**
 * Contains response data for the updateTags operation.
 */
export type ManagedClustersUpdateTagsResponse = ManagedCluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedCluster;
    };
};

/**
 * Contains response data for the runCommand operation.
 */
export type ManagedClustersRunCommandResponse = RunCommandResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RunCommandResult;
    };
};

/**
 * Contains response data for the getCommandResult operation.
 */
export type ManagedClustersGetCommandResultResponse = RunCommandResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RunCommandResult;
    };
};

/**
 * Contains response data for the listOutboundNetworkDependenciesEndpoints operation.
 */
export type ManagedClustersListOutboundNetworkDependenciesEndpointsResponse = OutboundEnvironmentEndpointCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OutboundEnvironmentEndpointCollection;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ManagedClustersBeginCreateOrUpdateResponse = ManagedCluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedCluster;
    };
};

/**
 * Contains response data for the beginUpdateTags operation.
 */
export type ManagedClustersBeginUpdateTagsResponse = ManagedCluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedCluster;
    };
};

/**
 * Contains response data for the beginRunCommand operation.
 */
export type ManagedClustersBeginRunCommandResponse = RunCommandResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RunCommandResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ManagedClustersListNextResponse = ManagedClusterListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedClusterListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type ManagedClustersListByResourceGroupNextResponse = ManagedClusterListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedClusterListResult;
    };
};

/**
 * Contains response data for the listOutboundNetworkDependenciesEndpointsNext operation.
 */
export type ManagedClustersListOutboundNetworkDependenciesEndpointsNextResponse = OutboundEnvironmentEndpointCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OutboundEnvironmentEndpointCollection;
    };
};

/**
 * Contains response data for the listByManagedCluster operation.
 */
export type MaintenanceConfigurationsListByManagedClusterResponse = MaintenanceConfigurationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MaintenanceConfigurationListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type MaintenanceConfigurationsGetResponse = MaintenanceConfiguration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MaintenanceConfiguration;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type MaintenanceConfigurationsCreateOrUpdateResponse = MaintenanceConfiguration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MaintenanceConfiguration;
    };
};

/**
 * Contains response data for the listByManagedClusterNext operation.
 */
export type MaintenanceConfigurationsListByManagedClusterNextResponse = MaintenanceConfigurationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MaintenanceConfigurationListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type AgentPoolsListResponse = AgentPoolListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AgentPoolListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AgentPoolsGetResponse = AgentPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AgentPool;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type AgentPoolsCreateOrUpdateResponse = AgentPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AgentPool;
    };
};

/**
 * Contains response data for the getUpgradeProfile operation.
 */
export type AgentPoolsGetUpgradeProfileResponse = AgentPoolUpgradeProfile & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AgentPoolUpgradeProfile;
    };
};

/**
 * Contains response data for the getAvailableAgentPoolVersions operation.
 */
export type AgentPoolsGetAvailableAgentPoolVersionsResponse = AgentPoolAvailableVersions & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AgentPoolAvailableVersions;
    };
};

/**
 * Contains response data for the upgradeNodeImageVersion operation.
 */
export type AgentPoolsUpgradeNodeImageVersionResponse = AgentPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AgentPool;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type AgentPoolsBeginCreateOrUpdateResponse = AgentPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AgentPool;
    };
};

/**
 * Contains response data for the beginUpgradeNodeImageVersion operation.
 */
export type AgentPoolsBeginUpgradeNodeImageVersionResponse = AgentPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AgentPool;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type AgentPoolsListNextResponse = AgentPoolListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AgentPoolListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type PrivateEndpointConnectionsListResponse = PrivateEndpointConnectionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnectionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnection;
    };
};

/**
 * Contains response data for the update operation.
 */
export type PrivateEndpointConnectionsUpdateResponse = PrivateEndpointConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type PrivateLinkResourcesListResponse = PrivateLinkResourcesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkResourcesListResult;
    };
};

/**
 * Contains response data for the pOST operation.
 */
export type ResolvePrivateLinkServiceIdPOSTResponse = PrivateLinkResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type SnapshotsListResponse = SnapshotListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SnapshotListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type SnapshotsListByResourceGroupResponse = SnapshotListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SnapshotListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SnapshotsGetResponse = Snapshot & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Snapshot;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SnapshotsCreateOrUpdateResponse = Snapshot & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Snapshot;
    };
};

/**
 * Contains response data for the updateTags operation.
 */
export type SnapshotsUpdateTagsResponse = Snapshot & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Snapshot;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type SnapshotsListNextResponse = SnapshotListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SnapshotListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type SnapshotsListByResourceGroupNextResponse = SnapshotListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SnapshotListResult;
    };
};
