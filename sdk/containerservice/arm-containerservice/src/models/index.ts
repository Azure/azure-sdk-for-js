/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** The List Operation response. */
export interface OperationListResult {
  /**
   * The list of operations
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: OperationValue[];
}

/** Describes the properties of a Operation value. */
export interface OperationValue {
  /**
   * The origin of the operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: string;
  /**
   * The name of the operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The display name of the operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The display name of the resource the operation applies to.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The description of the operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
  /**
   * The resource provider for the operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
}

/** An error response from the Container service. */
export interface CloudError {
  /** Details about the error. */
  error?: CloudErrorBody;
}

/** An error response from the Container service. */
export interface CloudErrorBody {
  /** An identifier for the error. Codes are invariant and are intended to be consumed programmatically. */
  code?: string;
  /** A message describing the error, intended to be suitable for display in a user interface. */
  message?: string;
  /** The target of the particular error. For example, the name of the property in error. */
  target?: string;
  /** A list of additional details about the error. */
  details?: CloudErrorBody[];
}

/** Hold values properties, which is array of KubernetesVersion */
export interface KubernetesVersionListResult {
  /** Array of AKS supported Kubernetes versions. */
  values?: KubernetesVersion[];
}

/** Kubernetes version profile for given major.minor release. */
export interface KubernetesVersion {
  /** major.minor version of Kubernetes release */
  version?: string;
  /** Capabilities on this Kubernetes version. */
  capabilities?: KubernetesVersionCapabilities;
  /** Whether this version is default. */
  isDefault?: boolean;
  /** Whether this version is in preview mode. */
  isPreview?: boolean;
  /** Patch versions of Kubernetes release */
  patchVersions?: { [propertyName: string]: KubernetesPatchVersion };
}

/** Capabilities on this Kubernetes version. */
export interface KubernetesVersionCapabilities {
  supportPlan?: KubernetesSupportPlan[];
}

/** Kubernetes patch version profile */
export interface KubernetesPatchVersion {
  /** Possible upgrade path for given patch version */
  upgrades?: string[];
}

/** The response from the List Managed Clusters operation. */
export interface ManagedClusterListResult {
  /** The list of managed clusters. */
  value?: ManagedCluster[];
  /**
   * The URL to get the next set of managed cluster results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** The SKU of a Managed Cluster. */
export interface ManagedClusterSKU {
  /** The name of a managed cluster SKU. */
  name?: ManagedClusterSKUName;
  /** If not specified, the default is 'Free'. See [AKS Pricing Tier](https://learn.microsoft.com/azure/aks/free-standard-pricing-tiers) for more details. */
  tier?: ManagedClusterSKUTier;
}

/** The complex type of the extended location. */
export interface ExtendedLocation {
  /** The name of the extended location. */
  name?: string;
  /** The type of the extended location. */
  type?: ExtendedLocationTypes;
}

/** Identity for the managed cluster. */
export interface ManagedClusterIdentity {
  /**
   * The principal id of the system assigned identity which is used by master components.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The tenant id of the system assigned identity which is used by master components.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** For more information see [use managed identities in AKS](https://docs.microsoft.com/azure/aks/use-managed-identity). */
  type?: ResourceIdentityType;
  /** The delegated identity resources assigned to this managed cluster. This can only be set by another Azure Resource Provider, and managed cluster only accept one delegated identity resource. Internal use only. */
  delegatedResources?: { [propertyName: string]: DelegatedResource };
  /** The keys must be ARM resource IDs in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'. */
  userAssignedIdentities?: {
    [propertyName: string]: ManagedServiceIdentityUserAssignedIdentitiesValue;
  };
}

/** Delegated resource properties - internal use only. */
export interface DelegatedResource {
  /** The ARM resource id of the delegated resource - internal use only. */
  resourceId?: string;
  /** The tenant id of the delegated resource - internal use only. */
  tenantId?: string;
  /** The delegation id of the referral delegation (optional) - internal use only. */
  referralResource?: string;
  /** The source resource location - internal use only. */
  location?: string;
}

export interface ManagedServiceIdentityUserAssignedIdentitiesValue {
  /**
   * The principal id of user assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The client id of user assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clientId?: string;
}

/** Describes the Power State of the cluster */
export interface PowerState {
  /** Tells whether the cluster is Running or Stopped */
  code?: Code;
}

/** Data used when creating a target resource from a source resource. */
export interface CreationData {
  /** This is the ARM ID of the source object to be used to create the target object. */
  sourceResourceId?: string;
}

/** Properties for the container service agent pool profile. */
export interface ManagedClusterAgentPoolProfileProperties {
  /**
   * Unique read-only string used to implement optimistic concurrency. The eTag value will change when the resource is updated. Specify an if-match or if-none-match header with the eTag value for a subsequent request to enable optimistic concurrency per the normal etag convention.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly eTag?: string;
  /** Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1. */
  count?: number;
  /** VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions */
  vmSize?: string;
  /** OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified. */
  osDiskSizeGB?: number;
  /** The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os). */
  osDiskType?: OSDiskType;
  /** Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage. */
  kubeletDiskType?: KubeletDiskType;
  /** Determines the type of workload a node can run. */
  workloadRuntime?: WorkloadRuntime;
  /** A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It must not be specified for Windows nodes. It must be a static string (i.e., will be printed raw and not be executed as a script). */
  messageOfTheDay?: string;
  /** If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName} */
  vnetSubnetID?: string;
  /** If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName} */
  podSubnetID?: string;
  /** The IP allocation mode for pods in the agent pool. Must be used with podSubnetId. The default is 'DynamicIndividual'. */
  podIPAllocationMode?: PodIPAllocationMode;
  /** The maximum number of pods that can run on a node. */
  maxPods?: number;
  /** The operating system type. The default is Linux. */
  osType?: OSType;
  /** Specifies the OS SKU used by the agent pool. If not specified, the default is Ubuntu if OSType=Linux or Windows2019 if OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is deprecated. */
  osSKU?: Ossku;
  /** The maximum number of nodes for auto-scaling */
  maxCount?: number;
  /** The minimum number of nodes for auto-scaling */
  minCount?: number;
  /** Whether to enable auto-scaler */
  enableAutoScaling?: boolean;
  /** This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete. */
  scaleDownMode?: ScaleDownMode;
  /** The type of Agent Pool. */
  type?: AgentPoolType;
  /** A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools */
  mode?: AgentPoolMode;
  /** Both patch version <major.minor.patch> and <major.minor> are supported. When <major.minor> is specified, the latest supported patch version is chosen automatically. Updating the agent pool with the same <major.minor> once it has been created will not trigger an upgrade, even if a newer patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool). */
  orchestratorVersion?: string;
  /**
   * If orchestratorVersion was a fully specified version <major.minor.patch>, this field will be exactly equal to it. If orchestratorVersion was <major.minor>, this field will contain the full <major.minor.patch> version being used.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly currentOrchestratorVersion?: string;
  /**
   * The version of node image
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nodeImageVersion?: string;
  /** Settings for upgrading the agentpool */
  upgradeSettings?: AgentPoolUpgradeSettings;
  /**
   * The current deployment or provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /** When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only be stopped if it is Running and provisioning state is Succeeded */
  powerState?: PowerState;
  /** The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'. */
  availabilityZones?: string[];
  /** Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The default is false. */
  enableNodePublicIP?: boolean;
  /** When set to true, AKS adds a label to the node indicating that the feature is enabled and deploys a daemonset along with host services to sync custom certificate authorities from user-provided list of base64 encoded certificates into node trust stores. Defaults to false. */
  enableCustomCATrust?: boolean;
  /** This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName} */
  nodePublicIPPrefixID?: string;
  /** The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'. */
  scaleSetPriority?: ScaleSetPriority;
  /** This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'. */
  scaleSetEvictionPolicy?: ScaleSetEvictionPolicy;
  /** Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing) */
  spotMaxPrice?: number;
  /** The tags to be persisted on the agent pool virtual machine scale set. */
  tags?: { [propertyName: string]: string };
  /** The node labels to be persisted across all nodes in agent pool. */
  nodeLabels?: { [propertyName: string]: string };
  /** The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule. */
  nodeTaints?: string[];
  /** These taints will not be reconciled by AKS and can be removed with a kubectl call. This field can be modified after node pool is created, but nodes will not be recreated with new taints until another operation that requires recreation (e.g. node image upgrade) happens. These taints allow for required configuration to run before the node is ready to accept workloads, for example 'key1=value1:NoSchedule' that then can be removed with `kubectl taint nodes node1 key1=value1:NoSchedule-` */
  nodeInitializationTaints?: string[];
  /** The ID for Proximity Placement Group. */
  proximityPlacementGroupID?: string;
  /** The Kubelet configuration on the agent pool nodes. */
  kubeletConfig?: KubeletConfig;
  /** The OS configuration of Linux agent nodes. */
  linuxOSConfig?: LinuxOSConfig;
  /** This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption */
  enableEncryptionAtHost?: boolean;
  /** Whether to enable UltraSSD */
  enableUltraSSD?: boolean;
  /** See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more details. */
  enableFips?: boolean;
  /** GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU. */
  gpuInstanceProfile?: GPUInstanceProfile;
  /** CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using a snapshot. */
  creationData?: CreationData;
  /** AKS will associate the specified agent pool with the Capacity Reservation Group. */
  capacityReservationGroupID?: string;
  /** This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}. For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts). */
  hostGroupID?: string;
  /** The Windows agent pool's specific profile. */
  windowsProfile?: AgentPoolWindowsProfile;
  /** Network-related settings of an agent pool. */
  networkProfile?: AgentPoolNetworkProfile;
  /** The security settings of an agent pool. */
  securityProfile?: AgentPoolSecurityProfile;
  /** The GPU settings of an agent pool. */
  gpuProfile?: AgentPoolGPUProfile;
  /** Configuration for using artifact streaming on AKS. */
  artifactStreamingProfile?: AgentPoolArtifactStreamingProfile;
  /** Specifications on VirtualMachines agent pool. */
  virtualMachinesProfile?: VirtualMachinesProfile;
  /** The status of nodes in a VirtualMachines agent pool. */
  virtualMachineNodesStatus?: VirtualMachineNodes[];
  /** Profile specific to a managed agent pool in Gateway mode. This field cannot be set if agent pool mode is not Gateway. */
  gatewayProfile?: AgentPoolGatewayProfile;
}

/** Settings for upgrading an agentpool */
export interface AgentPoolUpgradeSettings {
  /** This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified, the default is 1. For more information, including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade */
  maxSurge?: string;
  /** The amount of time (in minutes) to wait on eviction of pods and graceful termination per node. This eviction wait time honors waiting on pod disruption budgets. If this time is exceeded, the upgrade fails. If not specified, the default is 30 minutes. */
  drainTimeoutInMinutes?: number;
  /** The amount of time (in minutes) to wait after draining a node and before reimaging it and moving on to next node. If not specified, the default is 0 minutes. */
  nodeSoakDurationInMinutes?: number;
  /** Defines the behavior for undrainable nodes during upgrade. The most common cause of undrainable nodes is Pod Disruption Budgets (PDBs), but other issues, such as pod termination grace period is exceeding the remaining per-node drain timeout or pod is still being in a running state, can also cause undrainable nodes. */
  undrainableNodeBehavior?: UndrainableNodeBehavior;
}

/** See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details. */
export interface KubeletConfig {
  /** The default is 'none'. See [Kubernetes CPU management policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies) for more information. Allowed values are 'none' and 'static'. */
  cpuManagerPolicy?: string;
  /** The default is true. */
  cpuCfsQuota?: boolean;
  /** The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'. */
  cpuCfsQuotaPeriod?: string;
  /** To disable image garbage collection, set to 100. The default is 85% */
  imageGcHighThreshold?: number;
  /** This cannot be set higher than imageGcHighThreshold. The default is 80% */
  imageGcLowThreshold?: number;
  /** For more information see [Kubernetes Topology Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager). The default is 'none'. Allowed values are 'none', 'best-effort', 'restricted', and 'single-numa-node'. */
  topologyManagerPolicy?: string;
  /** Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in `*`). */
  allowedUnsafeSysctls?: string[];
  /** If set to true it will make the Kubelet fail to start if swap is enabled on the node. */
  failSwapOn?: boolean;
  /** The maximum size (e.g. 10Mi) of container log file before it is rotated. */
  containerLogMaxSizeMB?: number;
  /** The maximum number of container log files that can be present for a container. The number must be ≥ 2. */
  containerLogMaxFiles?: number;
  /** The maximum number of processes per pod. */
  podMaxPids?: number;
}

/** See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details. */
export interface LinuxOSConfig {
  /** Sysctl settings for Linux agent nodes. */
  sysctls?: SysctlConfig;
  /** Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge). */
  transparentHugePageEnabled?: string;
  /** Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is 'madvise'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge). */
  transparentHugePageDefrag?: string;
  /** The size in MB of a swap file that will be created on each node. */
  swapFileSizeMB?: number;
}

/** Sysctl settings for Linux agent nodes. */
export interface SysctlConfig {
  /** Sysctl setting net.core.somaxconn. */
  netCoreSomaxconn?: number;
  /** Sysctl setting net.core.netdev_max_backlog. */
  netCoreNetdevMaxBacklog?: number;
  /** Sysctl setting net.core.rmem_default. */
  netCoreRmemDefault?: number;
  /** Sysctl setting net.core.rmem_max. */
  netCoreRmemMax?: number;
  /** Sysctl setting net.core.wmem_default. */
  netCoreWmemDefault?: number;
  /** Sysctl setting net.core.wmem_max. */
  netCoreWmemMax?: number;
  /** Sysctl setting net.core.optmem_max. */
  netCoreOptmemMax?: number;
  /** Sysctl setting net.ipv4.tcp_max_syn_backlog. */
  netIpv4TcpMaxSynBacklog?: number;
  /** Sysctl setting net.ipv4.tcp_max_tw_buckets. */
  netIpv4TcpMaxTwBuckets?: number;
  /** Sysctl setting net.ipv4.tcp_fin_timeout. */
  netIpv4TcpFinTimeout?: number;
  /** Sysctl setting net.ipv4.tcp_keepalive_time. */
  netIpv4TcpKeepaliveTime?: number;
  /** Sysctl setting net.ipv4.tcp_keepalive_probes. */
  netIpv4TcpKeepaliveProbes?: number;
  /** Sysctl setting net.ipv4.tcp_keepalive_intvl. */
  netIpv4TcpkeepaliveIntvl?: number;
  /** Sysctl setting net.ipv4.tcp_tw_reuse. */
  netIpv4TcpTwReuse?: boolean;
  /** Sysctl setting net.ipv4.ip_local_port_range. */
  netIpv4IpLocalPortRange?: string;
  /** Sysctl setting net.ipv4.neigh.default.gc_thresh1. */
  netIpv4NeighDefaultGcThresh1?: number;
  /** Sysctl setting net.ipv4.neigh.default.gc_thresh2. */
  netIpv4NeighDefaultGcThresh2?: number;
  /** Sysctl setting net.ipv4.neigh.default.gc_thresh3. */
  netIpv4NeighDefaultGcThresh3?: number;
  /** Sysctl setting net.netfilter.nf_conntrack_max. */
  netNetfilterNfConntrackMax?: number;
  /** Sysctl setting net.netfilter.nf_conntrack_buckets. */
  netNetfilterNfConntrackBuckets?: number;
  /** Sysctl setting fs.inotify.max_user_watches. */
  fsInotifyMaxUserWatches?: number;
  /** Sysctl setting fs.file-max. */
  fsFileMax?: number;
  /** Sysctl setting fs.aio-max-nr. */
  fsAioMaxNr?: number;
  /** Sysctl setting fs.nr_open. */
  fsNrOpen?: number;
  /** Sysctl setting kernel.threads-max. */
  kernelThreadsMax?: number;
  /** Sysctl setting vm.max_map_count. */
  vmMaxMapCount?: number;
  /** Sysctl setting vm.swappiness. */
  vmSwappiness?: number;
  /** Sysctl setting vm.vfs_cache_pressure. */
  vmVfsCachePressure?: number;
}

/** The Windows agent pool's specific profile. */
export interface AgentPoolWindowsProfile {
  /** The default value is false. Outbound NAT can only be disabled if the cluster outboundType is NAT Gateway and the Windows agent pool does not have node public IP enabled. */
  disableOutboundNat?: boolean;
}

/** Network settings of an agent pool. */
export interface AgentPoolNetworkProfile {
  /** IPTags of instance-level public IPs. */
  nodePublicIPTags?: IPTag[];
  /** The port ranges that are allowed to access. The specified ranges are allowed to overlap. */
  allowedHostPorts?: PortRange[];
  /** The IDs of the application security groups which agent pool will associate when created. */
  applicationSecurityGroups?: string[];
}

/** Contains the IPTag associated with the object. */
export interface IPTag {
  /** The IP tag type. Example: RoutingPreference. */
  ipTagType?: string;
  /** The value of the IP tag associated with the public IP. Example: Internet. */
  tag?: string;
}

/** The port range. */
export interface PortRange {
  /** The minimum port that is included in the range. It should be ranged from 1 to 65535, and be less than or equal to portEnd. */
  portStart?: number;
  /** The maximum port that is included in the range. It should be ranged from 1 to 65535, and be greater than or equal to portStart. */
  portEnd?: number;
  /** The network protocol of the port. */
  protocol?: Protocol;
}

/** The security settings of an agent pool. */
export interface AgentPoolSecurityProfile {
  /** SSH access method of an agent pool. */
  sshAccess?: AgentPoolSSHAccess;
  /** vTPM is a Trusted Launch feature for configuring a dedicated secure vault for keys and measurements held locally on the node. For more details, see aka.ms/aks/trustedlaunch. If not specified, the default is false. */
  enableVtpm?: boolean;
  /** Secure Boot is a feature of Trusted Launch which ensures that only signed operating systems and drivers can boot. For more details, see aka.ms/aks/trustedlaunch.  If not specified, the default is false. */
  enableSecureBoot?: boolean;
}

export interface AgentPoolGPUProfile {
  /** The default value is true when the vmSize of the agent pool contains a GPU, false otherwise. GPU Driver Installation can only be set true when VM has an associated GPU resource. Setting this field to false prevents automatic GPU driver installation. In that case, in order for the GPU to be usable, the user must perform GPU driver installation themselves. */
  installGPUDriver?: boolean;
  /** Specify the type of GPU driver to install when creating Windows agent pools. If not provided, AKS selects the driver based on system compatibility. This cannot be changed once the AgentPool has been created. This cannot be set on Linux AgentPools. For Linux AgentPools, the driver is selected based on system compatibility. */
  driverType?: DriverType;
}

export interface AgentPoolArtifactStreamingProfile {
  /** Artifact streaming speeds up the cold-start of containers on a node through on-demand image loading. To use this feature, container images must also enable artifact streaming on ACR. If not specified, the default is false. */
  enabled?: boolean;
}

/** Specifications on VirtualMachines agent pool. */
export interface VirtualMachinesProfile {
  /** Specifications on how to scale a VirtualMachines agent pool. */
  scale?: ScaleProfile;
}

/** Specifications on how to scale a VirtualMachines agent pool. */
export interface ScaleProfile {
  /** Specifications on how to scale the VirtualMachines agent pool to a fixed size. */
  manual?: ManualScaleProfile[];
  /** Specifications on how to auto-scale the VirtualMachines agent pool within a predefined size range. Currently, at most one AutoScaleProfile is allowed. */
  autoscale?: AutoScaleProfile[];
}

/** Specifications on number of machines. */
export interface ManualScaleProfile {
  /** The list of allowed vm sizes e.g. ['Standard_E4s_v3', 'Standard_E16s_v3', 'Standard_D16s_v5']. AKS will use the first available one when scaling. If a VM size is unavailable (e.g. due to quota or regional capacity reasons), AKS will use the next size. */
  sizes?: string[];
  /** Number of nodes. */
  count?: number;
}

/** Specifications on auto-scaling. */
export interface AutoScaleProfile {
  /** The list of allowed vm sizes e.g. ['Standard_E4s_v3', 'Standard_E16s_v3', 'Standard_D16s_v5']. AKS will use the first available one when auto scaling. If a VM size is unavailable (e.g. due to quota or regional capacity reasons), AKS will use the next size. */
  sizes?: string[];
  /** The minimum number of nodes of the specified sizes. */
  minCount?: number;
  /** The maximum number of nodes of the specified sizes. */
  maxCount?: number;
}

/** Current status on a group of nodes of the same vm size. */
export interface VirtualMachineNodes {
  /** The VM size of the agents used to host this group of nodes. */
  size?: string;
  /** Number of nodes. */
  count?: number;
}

/** Profile of the managed cluster gateway agent pool. */
export interface AgentPoolGatewayProfile {
  /** The Gateway agent pool associates one public IPPrefix for each static egress gateway to provide public egress. The size of Public IPPrefix should be selected by the user. Each node in the agent pool is assigned with one IP from the IPPrefix. The IPPrefix size thus serves as a cap on the size of the Gateway agent pool. Due to Azure public IPPrefix size limitation, the valid value range is [28, 31] (/31 = 2 nodes/IPs, /30 = 4 nodes/IPs, /29 = 8 nodes/IPs, /28 = 16 nodes/IPs). The default value is 31. */
  publicIPPrefixSize?: number;
}

/** Profile for Linux VMs in the container service cluster. */
export interface ContainerServiceLinuxProfile {
  /** The administrator username to use for Linux VMs. */
  adminUsername: string;
  /** The SSH configuration for Linux-based VMs running on Azure. */
  ssh: ContainerServiceSshConfiguration;
}

/** SSH configuration for Linux-based VMs running on Azure. */
export interface ContainerServiceSshConfiguration {
  /** The list of SSH public keys used to authenticate with Linux-based VMs. A maximum of 1 key may be specified. */
  publicKeys: ContainerServiceSshPublicKey[];
}

/** Contains information about SSH certificate public key data. */
export interface ContainerServiceSshPublicKey {
  /** Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers. */
  keyData: string;
}

/** Profile for Windows VMs in the managed cluster. */
export interface ManagedClusterWindowsProfile {
  /** Specifies the name of the administrator account. <br><br> **Restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length:** 1 character <br><br> **Max-length:** 20 characters */
  adminUsername: string;
  /** Specifies the password of the administrator account. <br><br> **Minimum-length:** 8 characters <br><br> **Max-length:** 123 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" */
  adminPassword?: string;
  /** The license type to use for Windows VMs. See [Azure Hybrid User Benefits](https://azure.microsoft.com/pricing/hybrid-benefit/faq/) for more details. */
  licenseType?: LicenseType;
  /** For more details on CSI proxy, see the [CSI proxy GitHub repo](https://github.com/kubernetes-csi/csi-proxy). */
  enableCSIProxy?: boolean;
  /** The Windows gMSA Profile in the Managed Cluster. */
  gmsaProfile?: WindowsGmsaProfile;
}

/** Windows gMSA Profile in the managed cluster. */
export interface WindowsGmsaProfile {
  /** Specifies whether to enable Windows gMSA in the managed cluster. */
  enabled?: boolean;
  /** Specifies the DNS server for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the vnet which is used to create the managed cluster. */
  dnsServer?: string;
  /** Specifies the root domain name for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the vnet which is used to create the managed cluster. */
  rootDomainName?: string;
}

/** Information about a service principal identity for the cluster to use for manipulating Azure APIs. */
export interface ManagedClusterServicePrincipalProfile {
  /** The ID for the service principal. */
  clientId: string;
  /** The secret password associated with the service principal in plain text. */
  secret?: string;
}

/** A Kubernetes add-on profile for a managed cluster. */
export interface ManagedClusterAddonProfile {
  /** Whether the add-on is enabled or not. */
  enabled: boolean;
  /** Key-value pairs for configuring an add-on. */
  config?: { [propertyName: string]: string };
  /**
   * Information of user assigned identity used by this add-on.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly identity?: ManagedClusterAddonProfileIdentity;
}

/** Details about a user assigned identity. */
export interface UserAssignedIdentity {
  /** The resource ID of the user assigned identity. */
  resourceId?: string;
  /** The client ID of the user assigned identity. */
  clientId?: string;
  /** The object ID of the user assigned identity. */
  objectId?: string;
}

/** See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on pod identity integration. */
export interface ManagedClusterPodIdentityProfile {
  /** Whether the pod identity addon is enabled. */
  enabled?: boolean;
  /** Running in Kubenet is disabled by default due to the security related nature of AAD Pod Identity and the risks of IP spoofing. See [using Kubenet network plugin with AAD Pod Identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity#using-kubenet-network-plugin-with-azure-active-directory-pod-managed-identities) for more information. */
  allowNetworkPluginKubenet?: boolean;
  /** The pod identities to use in the cluster. */
  userAssignedIdentities?: ManagedClusterPodIdentity[];
  /** The pod identity exceptions to allow. */
  userAssignedIdentityExceptions?: ManagedClusterPodIdentityException[];
}

/** Details about the pod identity assigned to the Managed Cluster. */
export interface ManagedClusterPodIdentity {
  /** The name of the pod identity. */
  name: string;
  /** The namespace of the pod identity. */
  namespace: string;
  /** The binding selector to use for the AzureIdentityBinding resource. */
  bindingSelector?: string;
  /** The user assigned identity details. */
  identity: UserAssignedIdentity;
  /**
   * The current provisioning state of the pod identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ManagedClusterPodIdentityProvisioningState;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly provisioningInfo?: ManagedClusterPodIdentityProvisioningInfo;
}

export interface ManagedClusterPodIdentityProvisioningInfo {
  /** Pod identity assignment error (if any). */
  error?: ManagedClusterPodIdentityProvisioningError;
}

/** An error response from the pod identity provisioning. */
export interface ManagedClusterPodIdentityProvisioningError {
  /** Details about the error. */
  error?: ManagedClusterPodIdentityProvisioningErrorBody;
}

/** An error response from the pod identity provisioning. */
export interface ManagedClusterPodIdentityProvisioningErrorBody {
  /** An identifier for the error. Codes are invariant and are intended to be consumed programmatically. */
  code?: string;
  /** A message describing the error, intended to be suitable for display in a user interface. */
  message?: string;
  /** The target of the particular error. For example, the name of the property in error. */
  target?: string;
  /** A list of additional details about the error. */
  details?: ManagedClusterPodIdentityProvisioningErrorBody[];
}

/** See [disable AAD Pod Identity for a specific Pod/Application](https://azure.github.io/aad-pod-identity/docs/configure/application_exception/) for more details. */
export interface ManagedClusterPodIdentityException {
  /** The name of the pod identity exception. */
  name: string;
  /** The namespace of the pod identity exception. */
  namespace: string;
  /** The pod labels to match. */
  podLabels: { [propertyName: string]: string };
}

/** The OIDC issuer profile of the Managed Cluster. */
export interface ManagedClusterOidcIssuerProfile {
  /**
   * The OIDC issuer url of the Managed Cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly issuerURL?: string;
  /** Whether the OIDC issuer is enabled. */
  enabled?: boolean;
}

/** Node resource group lockdown profile for a managed cluster. */
export interface ManagedClusterNodeResourceGroupProfile {
  /** The restriction level applied to the cluster's node resource group */
  restrictionLevel?: RestrictionLevel;
}

/** Profile of network configuration. */
export interface ContainerServiceNetworkProfile {
  /** Network plugin used for building the Kubernetes network. */
  networkPlugin?: NetworkPlugin;
  /** Network plugin mode used for building the Kubernetes network. */
  networkPluginMode?: NetworkPluginMode;
  /** Network policy used for building the Kubernetes network. */
  networkPolicy?: NetworkPolicy;
  /** This cannot be specified if networkPlugin is anything other than 'azure'. */
  networkMode?: NetworkMode;
  /** Network dataplane used in the Kubernetes cluster. */
  networkDataplane?: NetworkDataplane;
  /** A CIDR notation IP range from which to assign pod IPs when kubenet is used. */
  podCidr?: string;
  /** A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges. */
  serviceCidr?: string;
  /** An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr. */
  dnsServiceIP?: string;
  /** This can only be set at cluster creation time and cannot be changed later. For more information see [egress outbound type](https://docs.microsoft.com/azure/aks/egress-outboundtype). */
  outboundType?: OutboundType;
  /** The default is 'standard'. See [Azure Load Balancer SKUs](https://docs.microsoft.com/azure/load-balancer/skus) for more information about the differences between load balancer SKUs. */
  loadBalancerSku?: LoadBalancerSku;
  /** Profile of the cluster load balancer. */
  loadBalancerProfile?: ManagedClusterLoadBalancerProfile;
  /** Profile of the cluster NAT gateway. */
  natGatewayProfile?: ManagedClusterNATGatewayProfile;
  /** The profile for Static Egress Gateway addon. For more details about Static Egress Gateway, see https://aka.ms/aks/static-egress-gateway. */
  staticEgressGatewayProfile?: ManagedClusterStaticEgressGatewayProfile;
  /** One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking. */
  podCidrs?: string[];
  /** One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking. They must not overlap with any Subnet IP ranges. */
  serviceCidrs?: string[];
  /** IP families are used to determine single-stack or dual-stack clusters. For single-stack, the expected value is IPv4. For dual-stack, the expected values are IPv4 and IPv6. */
  ipFamilies?: IpFamily[];
  /** Defines access to special link local addresses (Azure Instance Metadata Service, aka IMDS) for pods with hostNetwork=false. if not specified, the default is 'IMDS'. */
  podLinkLocalAccess?: PodLinkLocalAccess;
  /** Holds configuration customizations for kube-proxy. Any values not defined will use the kube-proxy defaulting behavior. See https://v<version>.docs.kubernetes.io/docs/reference/command-line-tools-reference/kube-proxy/ where <version> is represented by a <major version>-<minor version> string. Kubernetes version 1.23 would be '1-23'. */
  kubeProxyConfig?: ContainerServiceNetworkProfileKubeProxyConfig;
  /** Advanced Networking profile for enabling observability on a cluster. Note that enabling advanced networking features may incur additional costs. For more information see aka.ms/aksadvancednetworking. */
  advancedNetworking?: AdvancedNetworking;
}

/** Profile of the managed cluster load balancer. */
export interface ManagedClusterLoadBalancerProfile {
  /** Desired managed outbound IPs for the cluster load balancer. */
  managedOutboundIPs?: ManagedClusterLoadBalancerProfileManagedOutboundIPs;
  /** Desired outbound IP Prefix resources for the cluster load balancer. */
  outboundIPPrefixes?: ManagedClusterLoadBalancerProfileOutboundIPPrefixes;
  /** Desired outbound IP resources for the cluster load balancer. */
  outboundIPs?: ManagedClusterLoadBalancerProfileOutboundIPs;
  /** The effective outbound IP resources of the cluster load balancer. */
  effectiveOutboundIPs?: ResourceReference[];
  /** The desired number of allocated SNAT ports per VM. Allowed values are in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports. */
  allocatedOutboundPorts?: number;
  /** Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 30 minutes. */
  idleTimeoutInMinutes?: number;
  /** Enable multiple standard load balancers per AKS cluster or not. */
  enableMultipleStandardLoadBalancers?: boolean;
  /** The type of the managed inbound Load Balancer BackendPool. */
  backendPoolType?: BackendPoolType;
  /** The health probing behavior for External Traffic Policy Cluster services. */
  clusterServiceLoadBalancerHealthProbeMode?: ClusterServiceLoadBalancerHealthProbeMode;
}

/** Desired managed outbound IPs for the cluster load balancer. */
export interface ManagedClusterLoadBalancerProfileManagedOutboundIPs {
  /** The desired number of IPv4 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. */
  count?: number;
  /** The desired number of IPv6 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 0 for single-stack and 1 for dual-stack. */
  countIPv6?: number;
}

/** Desired outbound IP Prefix resources for the cluster load balancer. */
export interface ManagedClusterLoadBalancerProfileOutboundIPPrefixes {
  /** A list of public IP prefix resources. */
  publicIPPrefixes?: ResourceReference[];
}

/** A reference to an Azure resource. */
export interface ResourceReference {
  /** The fully qualified Azure resource id. */
  id?: string;
}

/** Desired outbound IP resources for the cluster load balancer. */
export interface ManagedClusterLoadBalancerProfileOutboundIPs {
  /** A list of public IP resources. */
  publicIPs?: ResourceReference[];
}

/** Profile of the managed cluster NAT gateway. */
export interface ManagedClusterNATGatewayProfile {
  /** Profile of the managed outbound IP resources of the cluster NAT gateway. */
  managedOutboundIPProfile?: ManagedClusterManagedOutboundIPProfile;
  /** The effective outbound IP resources of the cluster NAT gateway. */
  effectiveOutboundIPs?: ResourceReference[];
  /** Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 4 minutes. */
  idleTimeoutInMinutes?: number;
}

/** Profile of the managed outbound IP resources of the managed cluster. */
export interface ManagedClusterManagedOutboundIPProfile {
  /** The desired number of outbound IPs created/managed by Azure. Allowed values must be in the range of 1 to 16 (inclusive). The default value is 1. */
  count?: number;
}

/** The Static Egress Gateway addon configuration for the cluster. */
export interface ManagedClusterStaticEgressGatewayProfile {
  /** Indicates if Static Egress Gateway addon is enabled or not. */
  enabled?: boolean;
}

/** Holds configuration customizations for kube-proxy. Any values not defined will use the kube-proxy defaulting behavior. See https://v<version>.docs.kubernetes.io/docs/reference/command-line-tools-reference/kube-proxy/ where <version> is represented by a <major version>-<minor version> string. Kubernetes version 1.23 would be '1-23'. */
export interface ContainerServiceNetworkProfileKubeProxyConfig {
  /** Whether to enable on kube-proxy on the cluster (if no 'kubeProxyConfig' exists, kube-proxy is enabled in AKS by default without these customizations). */
  enabled?: boolean;
  /** Specify which proxy mode to use ('IPTABLES' or 'IPVS') */
  mode?: Mode;
  /** Holds configuration customizations for IPVS. May only be specified if 'mode' is set to 'IPVS'. */
  ipvsConfig?: ContainerServiceNetworkProfileKubeProxyConfigIpvsConfig;
}

/** Holds configuration customizations for IPVS. May only be specified if 'mode' is set to 'IPVS'. */
export interface ContainerServiceNetworkProfileKubeProxyConfigIpvsConfig {
  /** IPVS scheduler, for more information please see http://www.linuxvirtualserver.org/docs/scheduling.html. */
  scheduler?: IpvsScheduler;
  /** The timeout value used for idle IPVS TCP sessions in seconds. Must be a positive integer value. */
  tcpTimeoutSeconds?: number;
  /** The timeout value used for IPVS TCP sessions after receiving a FIN in seconds. Must be a positive integer value. */
  tcpFinTimeoutSeconds?: number;
  /** The timeout value used for IPVS UDP packets in seconds. Must be a positive integer value. */
  udpTimeoutSeconds?: number;
}

/** Advanced Networking profile for enabling observability on a cluster. Note that enabling advanced networking features may incur additional costs. For more information see aka.ms/aksadvancednetworking. */
export interface AdvancedNetworking {
  /** Observability profile to enable advanced network metrics and flow logs with historical contexts. */
  observability?: AdvancedNetworkingObservability;
  /** Security profile to enable security features on cilium based cluster. */
  security?: AdvancedNetworkingSecurity;
}

/** Observability profile to enable advanced network metrics and flow logs with historical contexts. */
export interface AdvancedNetworkingObservability {
  /** Indicates the enablement of Advanced Networking observability functionalities on clusters. */
  enabled?: boolean;
  /** Management of TLS certificates for querying network flow logs via the flow log endpoint for Advanced Networking observability clusters. If not specified, the default is Managed. For more information see aka.ms/acnstls. */
  tlsManagement?: TLSManagement;
}

/** Security profile to enable security features on cilium based cluster. */
export interface AdvancedNetworkingSecurity {
  /** FQDNFiltering profile to enable FQDN Policy filtering on cilium based cluster. */
  fqdnPolicy?: AdvancedNetworkingFqdnPolicy;
}

/** FQDNFiltering profile to enable FQDN Policy filtering on cilium based cluster. */
export interface AdvancedNetworkingFqdnPolicy {
  /** This feature allows user to configure network policy based on DNS (FQDN) names. It can be enabled only on cilium based clusters. If not specified, the default is false. */
  enabled?: boolean;
}

/** For more details see [managed AAD on AKS](https://docs.microsoft.com/azure/aks/managed-aad). */
export interface ManagedClusterAADProfile {
  /** Whether to enable managed AAD. */
  managed?: boolean;
  /** Whether to enable Azure RBAC for Kubernetes authorization. */
  enableAzureRbac?: boolean;
  /** The list of AAD group object IDs that will have admin role of the cluster. */
  adminGroupObjectIDs?: string[];
  /** (DEPRECATED) The client AAD application ID. Learn more at https://aka.ms/aks/aad-legacy. */
  clientAppID?: string;
  /** (DEPRECATED) The server AAD application ID. Learn more at https://aka.ms/aks/aad-legacy. */
  serverAppID?: string;
  /** (DEPRECATED) The server AAD application secret. Learn more at https://aka.ms/aks/aad-legacy. */
  serverAppSecret?: string;
  /** The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription. */
  tenantID?: string;
}

/** Auto upgrade profile for a managed cluster. */
export interface ManagedClusterAutoUpgradeProfile {
  /** For more information see [setting the AKS cluster auto-upgrade channel](https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel). */
  upgradeChannel?: UpgradeChannel;
  /** The default is Unmanaged, but may change to either NodeImage or SecurityPatch at GA. */
  nodeOSUpgradeChannel?: NodeOSUpgradeChannel;
}

/** Settings for upgrading a cluster. */
export interface ClusterUpgradeSettings {
  /** Settings for overrides. */
  overrideSettings?: UpgradeOverrideSettings;
}

/** Settings for overrides when upgrading a cluster. */
export interface UpgradeOverrideSettings {
  /** Whether to force upgrade the cluster. Note that this option instructs upgrade operation to bypass upgrade protections such as checking for deprecated API usage. Enable this option only with caution. */
  forceUpgrade?: boolean;
  /** Until when the overrides are effective. Note that this only matches the start time of an upgrade, and the effectiveness won't change once an upgrade starts even if the `until` expires as upgrade proceeds. This field is not set by default. It must be set for the overrides to take effect. */
  until?: Date;
}

/** Parameters to be applied to the cluster-autoscaler when enabled */
export interface ManagedClusterPropertiesAutoScalerProfile {
  /** Valid values are 'true' and 'false' */
  balanceSimilarNodeGroups?: string;
  /** If set to true, all daemonset pods on empty nodes will be evicted before deletion of the node. If the daemonset pod cannot be evicted another node will be chosen for scaling. If set to false, the node will be deleted without ensuring that daemonset pods are deleted or evicted. */
  daemonsetEvictionForEmptyNodes?: boolean;
  /** If set to true, all daemonset pods on occupied nodes will be evicted before deletion of the node. If the daemonset pod cannot be evicted another node will be chosen for scaling. If set to false, the node will be deleted without ensuring that daemonset pods are deleted or evicted. */
  daemonsetEvictionForOccupiedNodes?: boolean;
  /** If set to true, the resources used by daemonset will be taken into account when making scaling down decisions. */
  ignoreDaemonsetsUtilization?: boolean;
  /** Available values are: 'least-waste', 'most-pods', 'priority', 'random'. */
  expander?: Expander;
  /** The default is 10. */
  maxEmptyBulkDelete?: string;
  /** The default is 600. */
  maxGracefulTerminationSec?: string;
  /** The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported. */
  maxNodeProvisionTime?: string;
  /** The default is 45. The maximum is 100 and the minimum is 0. */
  maxTotalUnreadyPercentage?: string;
  /** For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc). */
  newPodScaleUpDelay?: string;
  /** This must be an integer. The default is 3. */
  okTotalUnreadyCount?: string;
  /** The default is '10'. Values must be an integer number of seconds. */
  scanInterval?: string;
  /** The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported. */
  scaleDownDelayAfterAdd?: string;
  /** The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported. */
  scaleDownDelayAfterDelete?: string;
  /** The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported. */
  scaleDownDelayAfterFailure?: string;
  /** The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported. */
  scaleDownUnneededTime?: string;
  /** The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported. */
  scaleDownUnreadyTime?: string;
  /** The default is '0.5'. */
  scaleDownUtilizationThreshold?: string;
  /** The default is true. */
  skipNodesWithLocalStorage?: string;
  /** The default is true. */
  skipNodesWithSystemPods?: string;
}

/** Access profile for managed cluster API server. */
export interface ManagedClusterAPIServerAccessProfile {
  /** IP ranges are specified in CIDR format, e.g. 137.117.106.88/29. This feature is not compatible with clusters that use Public IP Per Node, or clusters that are using a Basic Load Balancer. For more information see [API server authorized IP ranges](https://docs.microsoft.com/azure/aks/api-server-authorized-ip-ranges). */
  authorizedIPRanges?: string[];
  /** For more details, see [Creating a private AKS cluster](https://docs.microsoft.com/azure/aks/private-clusters). */
  enablePrivateCluster?: boolean;
  /** The default is System. For more details see [configure private DNS zone](https://docs.microsoft.com/azure/aks/private-clusters#configure-private-dns-zone). Allowed values are 'system' and 'none'. */
  privateDNSZone?: string;
  /** Whether to create additional public FQDN for private cluster or not. */
  enablePrivateClusterPublicFqdn?: boolean;
  /** Whether to disable run command for the cluster or not. */
  disableRunCommand?: boolean;
  /** Whether to enable apiserver vnet integration for the cluster or not. */
  enableVnetIntegration?: boolean;
  /** It is required when: 1. creating a new cluster with BYO Vnet; 2. updating an existing cluster to enable apiserver vnet integration. */
  subnetId?: string;
}

/** A private link resource */
export interface PrivateLinkResource {
  /** The ID of the private link resource. */
  id?: string;
  /** The name of the private link resource. */
  name?: string;
  /** The resource type. */
  type?: string;
  /** The group ID of the resource. */
  groupId?: string;
  /** The RequiredMembers of the resource */
  requiredMembers?: string[];
  /**
   * The private link service ID of the resource, this field is exposed only to NRP internally.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateLinkServiceID?: string;
}

/** Cluster HTTP proxy configuration. */
export interface ManagedClusterHttpProxyConfig {
  /** The HTTP proxy server endpoint to use. */
  httpProxy?: string;
  /** The HTTPS proxy server endpoint to use. */
  httpsProxy?: string;
  /** The endpoints that should not go through proxy. */
  noProxy?: string[];
  /**
   * A read-only list of all endpoints for which traffic should not be sent to the proxy. This list is a superset of noProxy and values injected by AKS.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly effectiveNoProxy?: string[];
  /** Alternative CA cert to use for connecting to proxy servers. */
  trustedCa?: string;
}

/** Security profile for the container service cluster. */
export interface ManagedClusterSecurityProfile {
  /** Microsoft Defender settings for the security profile. */
  defender?: ManagedClusterSecurityProfileDefender;
  /** Azure Key Vault [key management service](https://kubernetes.io/docs/tasks/administer-cluster/kms-provider/) settings for the security profile. */
  azureKeyVaultKms?: AzureKeyVaultKms;
  /** Workload identity settings for the security profile. Workload identity enables Kubernetes applications to access Azure cloud resources securely with Azure AD. See https://aka.ms/aks/wi for more details. */
  workloadIdentity?: ManagedClusterSecurityProfileWorkloadIdentity;
  /** Image Cleaner settings for the security profile. */
  imageCleaner?: ManagedClusterSecurityProfileImageCleaner;
  /** Image integrity is a feature that works with Azure Policy to verify image integrity by signature. This will not have any effect unless Azure Policy is applied to enforce image signatures. See https://aka.ms/aks/image-integrity for how to use this feature via policy. */
  imageIntegrity?: ManagedClusterSecurityProfileImageIntegrity;
  /** [Node Restriction](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#noderestriction) settings for the security profile. */
  nodeRestriction?: ManagedClusterSecurityProfileNodeRestriction;
  /** A list of up to 10 base64 encoded CAs that will be added to the trust store on nodes with the Custom CA Trust feature enabled. For more information see [Custom CA Trust Certificates](https://learn.microsoft.com/en-us/azure/aks/custom-certificate-authority) */
  customCATrustCertificates?: Uint8Array[];
}

/** Microsoft Defender settings for the security profile. */
export interface ManagedClusterSecurityProfileDefender {
  /** Resource ID of the Log Analytics workspace to be associated with Microsoft Defender. When Microsoft Defender is enabled, this field is required and must be a valid workspace resource ID. When Microsoft Defender is disabled, leave the field empty. */
  logAnalyticsWorkspaceResourceId?: string;
  /** Microsoft Defender threat detection for Cloud settings for the security profile. */
  securityMonitoring?: ManagedClusterSecurityProfileDefenderSecurityMonitoring;
}

/** Microsoft Defender settings for the security profile threat detection. */
export interface ManagedClusterSecurityProfileDefenderSecurityMonitoring {
  /** Whether to enable Defender threat detection */
  enabled?: boolean;
}

/** Azure Key Vault key management service settings for the security profile. */
export interface AzureKeyVaultKms {
  /** Whether to enable Azure Key Vault key management service. The default is false. */
  enabled?: boolean;
  /** Identifier of Azure Key Vault key. See [key identifier format](https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name) for more details. When Azure Key Vault key management service is enabled, this field is required and must be a valid key identifier. When Azure Key Vault key management service is disabled, leave the field empty. */
  keyId?: string;
  /** Network access of key vault. The possible values are `Public` and `Private`. `Public` means the key vault allows public access from all networks. `Private` means the key vault disables public access and enables private link. The default value is `Public`. */
  keyVaultNetworkAccess?: KeyVaultNetworkAccessTypes;
  /** Resource ID of key vault. When keyVaultNetworkAccess is `Private`, this field is required and must be a valid resource ID. When keyVaultNetworkAccess is `Public`, leave the field empty. */
  keyVaultResourceId?: string;
}

/** Workload identity settings for the security profile. */
export interface ManagedClusterSecurityProfileWorkloadIdentity {
  /** Whether to enable workload identity. */
  enabled?: boolean;
}

/** Image Cleaner removes unused images from nodes, freeing up disk space and helping to reduce attack surface area. Here are settings for the security profile. */
export interface ManagedClusterSecurityProfileImageCleaner {
  /** Whether to enable Image Cleaner on AKS cluster. */
  enabled?: boolean;
  /** Image Cleaner scanning interval in hours. */
  intervalHours?: number;
}

/** Image integrity related settings for the security profile. */
export interface ManagedClusterSecurityProfileImageIntegrity {
  /** Whether to enable image integrity. The default value is false. */
  enabled?: boolean;
}

/** Node Restriction settings for the security profile. */
export interface ManagedClusterSecurityProfileNodeRestriction {
  /** Whether to enable Node Restriction */
  enabled?: boolean;
}

/** Storage profile for the container service cluster. */
export interface ManagedClusterStorageProfile {
  /** AzureDisk CSI Driver settings for the storage profile. */
  diskCSIDriver?: ManagedClusterStorageProfileDiskCSIDriver;
  /** AzureFile CSI Driver settings for the storage profile. */
  fileCSIDriver?: ManagedClusterStorageProfileFileCSIDriver;
  /** Snapshot Controller settings for the storage profile. */
  snapshotController?: ManagedClusterStorageProfileSnapshotController;
  /** AzureBlob CSI Driver settings for the storage profile. */
  blobCSIDriver?: ManagedClusterStorageProfileBlobCSIDriver;
}

/** AzureDisk CSI Driver settings for the storage profile. */
export interface ManagedClusterStorageProfileDiskCSIDriver {
  /** Whether to enable AzureDisk CSI Driver. The default value is true. */
  enabled?: boolean;
  /** The version of AzureDisk CSI Driver. The default value is v1. */
  version?: string;
}

/** AzureFile CSI Driver settings for the storage profile. */
export interface ManagedClusterStorageProfileFileCSIDriver {
  /** Whether to enable AzureFile CSI Driver. The default value is true. */
  enabled?: boolean;
}

/** Snapshot Controller settings for the storage profile. */
export interface ManagedClusterStorageProfileSnapshotController {
  /** Whether to enable Snapshot Controller. The default value is true. */
  enabled?: boolean;
}

/** AzureBlob CSI Driver settings for the storage profile. */
export interface ManagedClusterStorageProfileBlobCSIDriver {
  /** Whether to enable AzureBlob CSI Driver. The default value is false. */
  enabled?: boolean;
}

/** Ingress profile for the container service cluster. */
export interface ManagedClusterIngressProfile {
  /** Web App Routing settings for the ingress profile. */
  webAppRouting?: ManagedClusterIngressProfileWebAppRouting;
}

/** Web App Routing settings for the ingress profile. */
export interface ManagedClusterIngressProfileWebAppRouting {
  /** Whether to enable Web App Routing. */
  enabled?: boolean;
  /** Resource IDs of the DNS zones to be associated with the Web App Routing add-on. Used only when Web App Routing is enabled. Public and private DNS zones can be in different resource groups, but all public DNS zones must be in the same resource group and all private DNS zones must be in the same resource group. */
  dnsZoneResourceIds?: string[];
  /** Configuration for the default NginxIngressController. See more at https://learn.microsoft.com/en-us/azure/aks/app-routing-nginx-configuration#the-default-nginx-ingress-controller. */
  nginx?: ManagedClusterIngressProfileNginx;
  /**
   * Managed identity of the Web Application Routing add-on. This is the identity that should be granted permissions, for example, to manage the associated Azure DNS resource and get certificates from Azure Key Vault. See [this overview of the add-on](https://learn.microsoft.com/en-us/azure/aks/web-app-routing?tabs=with-osm) for more instructions.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly identity?: UserAssignedIdentity;
}

export interface ManagedClusterIngressProfileNginx {
  /** Ingress type for the default NginxIngressController custom resource */
  defaultIngressControllerType?: NginxIngressControllerType;
}

/** Workload Auto-scaler profile for the managed cluster. */
export interface ManagedClusterWorkloadAutoScalerProfile {
  /** KEDA (Kubernetes Event-driven Autoscaling) settings for the workload auto-scaler profile. */
  keda?: ManagedClusterWorkloadAutoScalerProfileKeda;
  verticalPodAutoscaler?: ManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler;
}

/** KEDA (Kubernetes Event-driven Autoscaling) settings for the workload auto-scaler profile. */
export interface ManagedClusterWorkloadAutoScalerProfileKeda {
  /** Whether to enable KEDA. */
  enabled: boolean;
}

export interface ManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler {
  /** Whether to enable VPA add-on in cluster. Default value is false. */
  enabled: boolean;
  /** Whether VPA add-on is enabled and configured to scale AKS-managed add-ons. */
  addonAutoscaling?: AddonAutoscaling;
}

/** Prometheus addon profile for the container service cluster */
export interface ManagedClusterAzureMonitorProfile {
  /** Metrics profile for the prometheus service addon */
  metrics?: ManagedClusterAzureMonitorProfileMetrics;
  /** Azure Monitor Container Insights Profile for Kubernetes Events, Inventory and Container stdout & stderr logs etc. See aka.ms/AzureMonitorContainerInsights for an overview. */
  containerInsights?: ManagedClusterAzureMonitorProfileContainerInsights;
  /** Application Monitoring Profile for Kubernetes Application Container. Collects application logs, metrics and traces through auto-instrumentation of the application using Azure Monitor OpenTelemetry based SDKs. See aka.ms/AzureMonitorApplicationMonitoring for an overview. */
  appMonitoring?: ManagedClusterAzureMonitorProfileAppMonitoring;
}

/** Metrics profile for the prometheus service addon */
export interface ManagedClusterAzureMonitorProfileMetrics {
  /** Whether to enable the Prometheus collector */
  enabled: boolean;
  /** Kube State Metrics for prometheus addon profile for the container service cluster */
  kubeStateMetrics?: ManagedClusterAzureMonitorProfileKubeStateMetrics;
}

/** Kube State Metrics for prometheus addon profile for the container service cluster */
export interface ManagedClusterAzureMonitorProfileKubeStateMetrics {
  /** Comma-separated list of Kubernetes annotations keys that will be used in the resource's labels metric. */
  metricLabelsAllowlist?: string;
  /** Comma-separated list of additional Kubernetes label keys that will be used in the resource's labels metric. */
  metricAnnotationsAllowList?: string;
}

/** Azure Monitor Container Insights Profile for Kubernetes Events, Inventory and Container stdout & stderr logs etc. See aka.ms/AzureMonitorContainerInsights for an overview. */
export interface ManagedClusterAzureMonitorProfileContainerInsights {
  /** Indicates if Azure Monitor Container Insights Logs Addon is enabled or not. */
  enabled?: boolean;
  /** Fully Qualified ARM Resource Id of Azure Log Analytics Workspace for storing Azure Monitor Container Insights Logs. */
  logAnalyticsWorkspaceResourceId?: string;
  /** The syslog host port. If not specified, the default port is 28330. */
  syslogPort?: number;
  /** Indicates whether custom metrics collection has to be disabled or not. If not specified the default is false. No custom metrics will be emitted if this field is false but the container insights enabled field is false */
  disableCustomMetrics?: boolean;
  /** Indicates whether prometheus metrics scraping is disabled or not. If not specified the default is false. No prometheus metrics will be emitted if this field is false but the container insights enabled field is false */
  disablePrometheusMetricsScraping?: boolean;
}

/** Application Monitoring Profile for Kubernetes Application Container. Collects application logs, metrics and traces through auto-instrumentation of the application using Azure Monitor OpenTelemetry based SDKs. See aka.ms/AzureMonitorApplicationMonitoring for an overview. */
export interface ManagedClusterAzureMonitorProfileAppMonitoring {
  /** Application Monitoring Auto Instrumentation for Kubernetes Application Container. Deploys web hook to auto-instrument Azure Monitor OpenTelemetry based SDKs to collect OpenTelemetry metrics, logs and traces of the application. See aka.ms/AzureMonitorApplicationMonitoring for an overview. */
  autoInstrumentation?: ManagedClusterAzureMonitorProfileAppMonitoringAutoInstrumentation;
  /** Application Monitoring Open Telemetry Metrics Profile for Kubernetes Application Container Metrics. Collects OpenTelemetry metrics of the application using Azure Monitor OpenTelemetry based SDKs. See aka.ms/AzureMonitorApplicationMonitoring for an overview. */
  openTelemetryMetrics?: ManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryMetrics;
  /** Application Monitoring Open Telemetry Metrics Profile for Kubernetes Application Container Logs and Traces. Collects OpenTelemetry logs and traces of the application using Azure Monitor OpenTelemetry based SDKs. See aka.ms/AzureMonitorApplicationMonitoring for an overview. */
  openTelemetryLogs?: ManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryLogs;
}

/** Application Monitoring Auto Instrumentation for Kubernetes Application Container. Deploys web hook to auto-instrument Azure Monitor OpenTelemetry based SDKs to collect OpenTelemetry metrics, logs and traces of the application. See aka.ms/AzureMonitorApplicationMonitoring for an overview. */
export interface ManagedClusterAzureMonitorProfileAppMonitoringAutoInstrumentation {
  /** Indicates if Application Monitoring Auto Instrumentation is enabled or not. */
  enabled?: boolean;
}

/** Application Monitoring Open Telemetry Metrics Profile for Kubernetes Application Container Metrics. Collects OpenTelemetry metrics of the application using Azure Monitor OpenTelemetry based SDKs. See aka.ms/AzureMonitorApplicationMonitoring for an overview. */
export interface ManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryMetrics {
  /** Indicates if Application Monitoring Open Telemetry Metrics is enabled or not. */
  enabled?: boolean;
  /** The Open Telemetry host port for Open Telemetry metrics. If not specified, the default port is 28333. */
  port?: number;
}

/** Application Monitoring Open Telemetry Metrics Profile for Kubernetes Application Container Logs and Traces. Collects OpenTelemetry logs and traces of the application using Azure Monitor OpenTelemetry based SDKs. See aka.ms/AzureMonitorApplicationMonitoring for an overview. */
export interface ManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryLogs {
  /** Indicates if Application Monitoring Open Telemetry Logs and traces is enabled or not. */
  enabled?: boolean;
  /** The Open Telemetry host port for Open Telemetry logs and traces. If not specified, the default port is 28331. */
  port?: number;
}

/** The Safeguards profile. */
export interface SafeguardsProfile {
  /**
   * List of namespaces specified by AKS to be excluded from Safeguards
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemExcludedNamespaces?: string[];
  /** The version of constraints to use */
  version?: string;
  /** The Safeguards level to be used. By default, Safeguards is enabled for all namespaces except those that AKS excludes via systemExcludedNamespaces */
  level: Level;
  /** List of namespaces excluded from Safeguards checks */
  excludedNamespaces?: string[];
}

/** Service mesh profile for a managed cluster. */
export interface ServiceMeshProfile {
  /** Mode of the service mesh. */
  mode: ServiceMeshMode;
  /** Istio service mesh configuration. */
  istio?: IstioServiceMesh;
}

/** Istio service mesh configuration. */
export interface IstioServiceMesh {
  /** Istio components configuration. */
  components?: IstioComponents;
  /** Istio Service Mesh Certificate Authority (CA) configuration. For now, we only support plugin certificates as described here https://aka.ms/asm-plugin-ca */
  certificateAuthority?: IstioCertificateAuthority;
  /** The list of revisions of the Istio control plane. When an upgrade is not in progress, this holds one value. When canary upgrade is in progress, this can only hold two consecutive values. For more information, see: https://learn.microsoft.com/en-us/azure/aks/istio-upgrade */
  revisions?: string[];
}

/** Istio components configuration. */
export interface IstioComponents {
  /** Istio ingress gateways. */
  ingressGateways?: IstioIngressGateway[];
  /** Istio egress gateways. */
  egressGateways?: IstioEgressGateway[];
}

/** Istio ingress gateway configuration. For now, we support up to one external ingress gateway named `aks-istio-ingressgateway-external` and one internal ingress gateway named `aks-istio-ingressgateway-internal`. */
export interface IstioIngressGateway {
  /** Mode of an ingress gateway. */
  mode: IstioIngressGatewayMode;
  /** Whether to enable the ingress gateway. */
  enabled: boolean;
}

/** Istio egress gateway configuration. */
export interface IstioEgressGateway {
  /** Whether to enable the egress gateway. */
  enabled: boolean;
}

/** Istio Service Mesh Certificate Authority (CA) configuration. For now, we only support plugin certificates as described here https://aka.ms/asm-plugin-ca */
export interface IstioCertificateAuthority {
  /** Plugin certificates information for Service Mesh. */
  plugin?: IstioPluginCertificateAuthority;
}

/** Plugin certificates information for Service Mesh. */
export interface IstioPluginCertificateAuthority {
  /** The resource ID of the Key Vault. */
  keyVaultId?: string;
  /** Intermediate certificate object name in Azure Key Vault. */
  certObjectName?: string;
  /** Intermediate certificate private key object name in Azure Key Vault. */
  keyObjectName?: string;
  /** Root certificate object name in Azure Key Vault. */
  rootCertObjectName?: string;
  /** Certificate chain object name in Azure Key Vault. */
  certChainObjectName?: string;
}

/** The metrics profile for the ManagedCluster. */
export interface ManagedClusterMetricsProfile {
  /** The cost analysis configuration for the cluster */
  costAnalysis?: ManagedClusterCostAnalysis;
}

/** The cost analysis configuration for the cluster */
export interface ManagedClusterCostAnalysis {
  /** The Managed Cluster sku.tier must be set to 'Standard' or 'Premium' to enable this feature. Enabling this will add Kubernetes Namespace and Deployment details to the Cost Analysis views in the Azure portal. If not specified, the default is false. For more information see aka.ms/aks/docs/cost-analysis. */
  enabled?: boolean;
}

/** When enabling the operator, a set of AKS managed CRDs and controllers will be installed in the cluster. The operator automates the deployment of OSS models for inference and/or training purposes. It provides a set of preset models and enables distributed inference against them. */
export interface ManagedClusterAIToolchainOperatorProfile {
  /** Indicates if AI toolchain operator  enabled or not. */
  enabled?: boolean;
}

export interface ManagedClusterNodeProvisioningProfile {
  /** Once the mode it set to Auto, it cannot be changed back to Manual. */
  mode?: NodeProvisioningMode;
}

/** The bootstrap profile. */
export interface ManagedClusterBootstrapProfile {
  /** The source where the artifacts are downloaded from. */
  artifactSource?: ArtifactSource;
  /** The resource Id of Azure Container Registry. The registry must have private network access, premium SKU and zone redundancy. */
  containerRegistryId?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** The list of available upgrades for compute pools. */
export interface ManagedClusterUpgradeProfile {
  /**
   * The ID of the upgrade profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the upgrade profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the upgrade profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** The list of available upgrade versions for the control plane. */
  controlPlaneProfile: ManagedClusterPoolUpgradeProfile;
  /** The list of available upgrade versions for agent pools. */
  agentPoolProfiles: ManagedClusterPoolUpgradeProfile[];
}

/** The list of available upgrade versions. */
export interface ManagedClusterPoolUpgradeProfile {
  /** The Kubernetes version (major.minor.patch). */
  kubernetesVersion: string;
  /** The Agent Pool name. */
  name?: string;
  /** The operating system type. The default is Linux. */
  osType: OSType;
  /** List of orchestrator types and versions available for upgrade. */
  upgrades?: ManagedClusterPoolUpgradeProfileUpgradesItem[];
  /** List of components grouped by kubernetes major.minor version. */
  componentsByReleases?: ComponentsByRelease[];
}

export interface ManagedClusterPoolUpgradeProfileUpgradesItem {
  /** The Kubernetes version (major.minor.patch). */
  kubernetesVersion?: string;
  /** Whether the Kubernetes version is currently in preview. */
  isPreview?: boolean;
}

/** components of given Kubernetes version. */
export interface ComponentsByRelease {
  /** The Kubernetes version (major.minor). */
  kubernetesVersion?: string;
  /** components of current or upgraded Kubernetes version in the cluster. */
  components?: Component[];
}

export interface Component {
  /** Component name. */
  name?: string;
  /** Component version. */
  version?: string;
  /** If upgraded component version contains breaking changes from the current version. To see a detailed description of what the breaking changes are, visit https://learn.microsoft.com/azure/aks/supported-kubernetes-versions?tabs=azure-cli#aks-components-breaking-changes-by-version. */
  hasBreakingChanges?: boolean;
}

/** The list credential result response. */
export interface CredentialResults {
  /**
   * Base64-encoded Kubernetes configuration file.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly kubeconfigs?: CredentialResult[];
}

/** The credential result response. */
export interface CredentialResult {
  /**
   * The name of the credential.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Base64-encoded Kubernetes configuration file.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Uint8Array;
}

/** Tags object for patch operations. */
export interface TagsObject {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** The response from the List maintenance configurations operation. */
export interface MaintenanceConfigurationListResult {
  /** The list of maintenance configurations. */
  value?: MaintenanceConfiguration[];
  /**
   * The URL to get the next set of maintenance configuration results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Time in a week. */
export interface TimeInWeek {
  /** The day of the week. */
  day?: WeekDay;
  /** Each integer hour represents a time range beginning at 0m after the hour ending at the next hour (non-inclusive). 0 corresponds to 00:00 UTC, 23 corresponds to 23:00 UTC. Specifying [0, 1] means the 00:00 - 02:00 UTC time range. */
  hourSlots?: number[];
}

/** For example, between 2021-05-25T13:00:00Z and 2021-05-25T14:00:00Z. */
export interface TimeSpan {
  /** The start of a time span */
  start?: Date;
  /** The end of a time span */
  end?: Date;
}

/** Maintenance window used to configure scheduled auto-upgrade for a Managed Cluster. */
export interface MaintenanceWindow {
  /** Recurrence schedule for the maintenance window. */
  schedule: Schedule;
  /** Length of maintenance window range from 4 to 24 hours. */
  durationHours: number;
  /** The UTC offset in format +/-HH:mm. For example, '+05:30' for IST and '-07:00' for PST. If not specified, the default is '+00:00'. */
  utcOffset?: string;
  /** The date the maintenance window activates. If the current date is before this date, the maintenance window is inactive and will not be used for upgrades. If not specified, the maintenance window will be active right away. */
  startDate?: Date;
  /** The start time of the maintenance window. Accepted values are from '00:00' to '23:59'. 'utcOffset' applies to this field. For example: '02:00' with 'utcOffset: +02:00' means UTC time '00:00'. */
  startTime: string;
  /** Date ranges on which upgrade is not allowed. 'utcOffset' applies to this field. For example, with 'utcOffset: +02:00' and 'dateSpan' being '2022-12-23' to '2023-01-03', maintenance will be blocked from '2022-12-22 22:00' to '2023-01-03 22:00' in UTC time. */
  notAllowedDates?: DateSpan[];
}

/** One and only one of the schedule types should be specified. Choose either 'daily', 'weekly', 'absoluteMonthly' or 'relativeMonthly' for your maintenance schedule. */
export interface Schedule {
  /** For schedules like: 'recur every day' or 'recur every 3 days'. */
  daily?: DailySchedule;
  /** For schedules like: 'recur every Monday' or 'recur every 3 weeks on Wednesday'. */
  weekly?: WeeklySchedule;
  /** For schedules like: 'recur every month on the 15th' or 'recur every 3 months on the 20th'. */
  absoluteMonthly?: AbsoluteMonthlySchedule;
  /** For schedules like: 'recur every month on the first Monday' or 'recur every 3 months on last Friday'. */
  relativeMonthly?: RelativeMonthlySchedule;
}

/** For schedules like: 'recur every day' or 'recur every 3 days'. */
export interface DailySchedule {
  /** Specifies the number of days between each set of occurrences. */
  intervalDays: number;
}

/** For schedules like: 'recur every Monday' or 'recur every 3 weeks on Wednesday'. */
export interface WeeklySchedule {
  /** Specifies the number of weeks between each set of occurrences. */
  intervalWeeks: number;
  /** Specifies on which day of the week the maintenance occurs. */
  dayOfWeek: WeekDay;
}

/** For schedules like: 'recur every month on the 15th' or 'recur every 3 months on the 20th'. */
export interface AbsoluteMonthlySchedule {
  /** Specifies the number of months between each set of occurrences. */
  intervalMonths: number;
  /** The date of the month. */
  dayOfMonth: number;
}

/** For schedules like: 'recur every month on the first Monday' or 'recur every 3 months on last Friday'. */
export interface RelativeMonthlySchedule {
  /** Specifies the number of months between each set of occurrences. */
  intervalMonths: number;
  /** Specifies on which instance of the allowed days specified in daysOfWeek the maintenance occurs. */
  weekIndex: Type;
  /** Specifies on which day of the week the maintenance occurs. */
  dayOfWeek: WeekDay;
}

/** For example, between '2022-12-23' and '2023-01-05'. */
export interface DateSpan {
  /** The start date of the date span. */
  start: Date;
  /** The end date of the date span. */
  end: Date;
}

/** Reference to another subresource. */
export interface SubResource {
  /**
   * Resource ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource that is unique within a resource group. This name can be used to access the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Resource type
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** The response from the List Agent Pools operation. */
export interface AgentPoolListResult {
  /** The list of agent pools. */
  value?: AgentPool[];
  /**
   * The URL to get the next set of agent pool results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** The list of available upgrades for an agent pool. */
export interface AgentPoolUpgradeProfile {
  /**
   * The ID of the agent pool upgrade profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the agent pool upgrade profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the agent pool upgrade profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** The Kubernetes version (major.minor.patch). */
  kubernetesVersion: string;
  /** The operating system type. The default is Linux. */
  osType: OSType;
  /** List of orchestrator types and versions available for upgrade. */
  upgrades?: AgentPoolUpgradeProfilePropertiesUpgradesItem[];
  /** List of components grouped by kubernetes major.minor version. */
  componentsByReleases?: ComponentsByRelease[];
  /** The latest AKS supported node image version. */
  latestNodeImageVersion?: string;
}

export interface AgentPoolUpgradeProfilePropertiesUpgradesItem {
  /** The Kubernetes version (major.minor.patch). */
  kubernetesVersion?: string;
  /** Whether the Kubernetes version is currently in preview. */
  isPreview?: boolean;
}

/** Specifies a list of machine names from the agent pool to be deleted. */
export interface AgentPoolDeleteMachinesParameter {
  /** The agent pool machine names. */
  machineNames: string[];
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** The response from the List Machines operation. */
export interface MachineListResult {
  /** The list of Machines in cluster. */
  value?: Machine[];
  /**
   * The URL to get the next set of machine results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** The properties of the machine */
export interface MachineProperties {
  /**
   * network properties of the machine
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly network?: MachineNetworkProperties;
  /**
   * Arm resource id of the machine. It can be used to GET underlying VM Instance
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceId?: string;
}

/** network properties of the machine */
export interface MachineNetworkProperties {
  /**
   * IPv4, IPv6 addresses of the machine
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ipAddresses?: MachineIpAddress[];
}

/** The machine IP address details. */
export interface MachineIpAddress {
  /**
   * To determine if address belongs IPv4 or IPv6 family
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly family?: IpFamily;
  /**
   * IPv4 or IPv6 address of the machine
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ip?: string;
}

/** The list of available versions for an agent pool. */
export interface AgentPoolAvailableVersions {
  /**
   * The ID of the agent pool version list.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the agent pool version list.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Type of the agent pool version list.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** List of versions available for agent pool. */
  agentPoolVersions?: AgentPoolAvailableVersionsPropertiesAgentPoolVersionsItem[];
}

export interface AgentPoolAvailableVersionsPropertiesAgentPoolVersionsItem {
  /** Whether this version is the default agent pool version. */
  default?: boolean;
  /** The Kubernetes version (major.minor.patch). */
  kubernetesVersion?: string;
  /** Whether Kubernetes version is currently in preview. */
  isPreview?: boolean;
}

/** A list of private endpoint connections */
export interface PrivateEndpointConnectionListResult {
  /** The collection value. */
  value?: PrivateEndpointConnection[];
}

/** A private endpoint connection */
export interface PrivateEndpointConnection {
  /**
   * The ID of the private endpoint connection.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the private endpoint connection.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The resource type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The current provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: PrivateEndpointConnectionProvisioningState;
  /** The resource of private endpoint. */
  privateEndpoint?: PrivateEndpoint;
  /** A collection of information about the state of the connection between service consumer and provider. */
  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;
}

/** Private endpoint which a connection belongs to. */
export interface PrivateEndpoint {
  /** The resource ID of the private endpoint */
  id?: string;
}

/** The state of a private link service connection. */
export interface PrivateLinkServiceConnectionState {
  /** The private link service connection status. */
  status?: ConnectionStatus;
  /** The private link service connection description. */
  description?: string;
}

/** A list of private link resources */
export interface PrivateLinkResourcesListResult {
  /** The collection value. */
  value?: PrivateLinkResource[];
}

/** A run command request */
export interface RunCommandRequest {
  /** The command to run. */
  command: string;
  /** A base64 encoded zip file containing the files required by the command. */
  context?: string;
  /** AuthToken issued for AKS AAD Server App. */
  clusterToken?: string;
}

/** run command result. */
export interface RunCommandResult {
  /**
   * The command id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * provisioning State
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /**
   * The exit code of the command
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly exitCode?: number;
  /**
   * The time when the command started.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startedAt?: Date;
  /**
   * The time when the command finished.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly finishedAt?: Date;
  /**
   * The command output.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly logs?: string;
  /**
   * An explanation of why provisioningState is set to failed (if so).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reason?: string;
}

/** Collection of OutboundEnvironmentEndpoint */
export interface OutboundEnvironmentEndpointCollection {
  /** Collection of resources. */
  value: OutboundEnvironmentEndpoint[];
  /**
   * Link to next page of resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Egress endpoints which AKS agent nodes connect to for common purpose. */
export interface OutboundEnvironmentEndpoint {
  /** The category of endpoints accessed by the AKS agent node, e.g. azure-resource-management, apiserver, etc. */
  category?: string;
  /** The endpoints that AKS agent nodes connect to */
  endpoints?: EndpointDependency[];
}

/** A domain name that AKS agent nodes are reaching at. */
export interface EndpointDependency {
  /** The domain name of the dependency. */
  domainName?: string;
  /** The Ports and Protocols used when connecting to domainName. */
  endpointDetails?: EndpointDetail[];
}

/** connect information from the AKS agent nodes to a single endpoint. */
export interface EndpointDetail {
  /** An IP Address that Domain Name currently resolves to. */
  ipAddress?: string;
  /** The port an endpoint is connected to. */
  port?: number;
  /** The protocol used for connection */
  protocol?: string;
  /** Description of the detail */
  description?: string;
}

/** The operations list. It contains an URL link to get the next set of results. */
export interface OperationStatusResultList {
  /**
   * List of operations
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: OperationStatusResult[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** The current status of an async operation. */
export interface OperationStatusResult {
  /** Fully qualified ID for the async operation. */
  id?: string;
  /**
   * Fully qualified ID of the resource against which the original async operation was started.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceId?: string;
  /** Name of the async operation. */
  name?: string;
  /** Operation status. */
  status: string;
  /** Percent of the operation that is complete. */
  percentComplete?: number;
  /** The start time of the operation. */
  startTime?: Date;
  /** The end time of the operation. */
  endTime?: Date;
  /** The operations list. */
  operations?: OperationStatusResult[];
  /** If present, details of the operation error. */
  error?: ErrorDetail;
}

/** The response from the List Snapshots operation. */
export interface SnapshotListResult {
  /** The list of snapshots. */
  value?: Snapshot[];
  /**
   * The URL to get the next set of snapshot results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** The response from the List Managed Cluster Snapshots operation. */
export interface ManagedClusterSnapshotListResult {
  /** The list of managed cluster snapshots. */
  value?: ManagedClusterSnapshot[];
  /**
   * The URL to get the next set of managed cluster snapshot results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** managed cluster properties for snapshot, these properties are read only. */
export interface ManagedClusterPropertiesForSnapshot {
  /** The current kubernetes version. */
  kubernetesVersion?: string;
  /** The current managed cluster sku. */
  sku?: ManagedClusterSKU;
  /** Whether the cluster has enabled Kubernetes Role-Based Access Control or not. */
  enableRbac?: boolean;
  /**
   * The current network profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkProfile?: NetworkProfileForSnapshot;
}

/** network profile for managed cluster snapshot, these properties are read only. */
export interface NetworkProfileForSnapshot {
  /** networkPlugin for managed cluster snapshot. */
  networkPlugin?: NetworkPlugin;
  /** NetworkPluginMode for managed cluster snapshot. */
  networkPluginMode?: NetworkPluginMode;
  /** networkPolicy for managed cluster snapshot. */
  networkPolicy?: NetworkPolicy;
  /** networkMode for managed cluster snapshot. */
  networkMode?: NetworkMode;
  /** loadBalancerSku for managed cluster snapshot. */
  loadBalancerSku?: LoadBalancerSku;
}

/** List of trusted access roles */
export interface TrustedAccessRoleListResult {
  /**
   * Role list
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: TrustedAccessRole[];
  /**
   * Link to next page of resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Trusted access role definition. */
export interface TrustedAccessRole {
  /**
   * Resource type of Azure resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceResourceType?: string;
  /**
   * Name of role, name is unique under a source resource type
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * List of rules for the role. This maps to 'rules' property of [Kubernetes Cluster Role](https://kubernetes.io/docs/reference/kubernetes-api/authorization-resources/cluster-role-v1/#ClusterRole).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly rules?: TrustedAccessRoleRule[];
}

/** Rule for trusted access role */
export interface TrustedAccessRoleRule {
  /**
   * List of allowed verbs
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly verbs?: string[];
  /**
   * List of allowed apiGroups
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly apiGroups?: string[];
  /**
   * List of allowed resources
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resources?: string[];
  /**
   * List of allowed names
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceNames?: string[];
  /**
   * List of allowed nonResourceURLs
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nonResourceURLs?: string[];
}

/** List of trusted access role bindings */
export interface TrustedAccessRoleBindingListResult {
  /** Role binding list */
  value?: TrustedAccessRoleBinding[];
  /**
   * Link to next page of resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Whether the version is default or not and support info. */
export interface GuardrailsAvailableVersionsProperties {
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly isDefaultVersion?: boolean;
  /**
   * Whether the version is preview or stable.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly support?: GuardrailsSupport;
}

/** Hold values properties, which is array of GuardrailsVersions */
export interface GuardrailsAvailableVersionsList {
  /** Array of AKS supported Guardrails versions. */
  value?: GuardrailsAvailableVersion[];
  /**
   * The URL to get the next Guardrails available version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Whether the version is default or not and support info. */
export interface SafeguardsAvailableVersionsProperties {
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly isDefaultVersion?: boolean;
  /**
   * Whether the version is preview or stable.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly support?: SafeguardsSupport;
}

/** Hold values properties, which is array of SafeguardsVersions */
export interface SafeguardsAvailableVersionsList {
  /** Array of AKS supported Safeguards versions. */
  value?: SafeguardsAvailableVersion[];
  /**
   * The URL to get the next Safeguards available version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Holds an array of MeshRevisionsProfiles */
export interface MeshRevisionProfileList {
  /** Array of service mesh add-on revision profiles for all supported mesh modes. */
  value?: MeshRevisionProfile[];
  /**
   * The URL to get the next set of mesh revision profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Mesh revision profile properties for a mesh */
export interface MeshRevisionProfileProperties {
  meshRevisions?: MeshRevision[];
}

/** Holds information on upgrades and compatibility for given major.minor mesh release. */
export interface MeshRevision {
  /** The revision of the mesh release. */
  revision?: string;
  /** List of revisions available for upgrade of a specific mesh revision */
  upgrades?: string[];
  /** List of items this revision of service mesh is compatible with, and their associated versions. */
  compatibleWith?: CompatibleVersions[];
}

/** Version information about a product/service that is compatible with a service mesh revision. */
export interface CompatibleVersions {
  /** The product/service name. */
  name?: string;
  /** Product/service versions compatible with a service mesh add-on revision. */
  versions?: string[];
}

/** Holds an array of MeshUpgradeProfiles */
export interface MeshUpgradeProfileList {
  /** Array of supported service mesh add-on upgrade profiles. */
  value?: MeshUpgradeProfile[];
  /**
   * The URL to get the next set of mesh upgrade profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** The response from the List Load Balancers operation. */
export interface LoadBalancerListResult {
  /** The list of Load Balancers. */
  value?: LoadBalancer[];
  /**
   * The URL to get the next set of load balancer results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects. */
export interface LabelSelector {
  /** matchLabels is an array of {key=value} pairs. A single {key=value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is `key`, the operator is `In`, and the values array contains only `value`. The requirements are ANDed. */
  matchLabels?: string[];
  /** matchExpressions is a list of label selector requirements. The requirements are ANDed. */
  matchExpressions?: LabelSelectorRequirement[];
}

/** A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values. */
export interface LabelSelectorRequirement {
  /** key is the label key that the selector applies to. */
  key?: string;
  /** operator represents a key's relationship to a set of values. Valid operators are In and NotIn */
  operator?: Operator;
  /** values is an array of string values, the values array must be non-empty. */
  values?: string[];
}

/** The names of the load balancers to rebalance. If set to empty, all load balancers will be rebalanced. */
export interface RebalanceLoadBalancersRequestBody {
  /** The load balancer names list. */
  loadBalancerNames?: string[];
}

/** Profile for the container service agent pool. */
export interface ManagedClusterAgentPoolProfile
  extends ManagedClusterAgentPoolProfileProperties {
  /** Windows agent pool names must be 6 characters or less. */
  name: string;
}

/** Information of user assigned identity used by this add-on. */
export interface ManagedClusterAddonProfileIdentity
  extends UserAssignedIdentity {}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** Defines binding between a resource and role */
export interface TrustedAccessRoleBinding extends Resource {
  /**
   * The current provisioning state of trusted access role binding.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: TrustedAccessRoleBindingProvisioningState;
  /** The ARM resource ID of source resource that trusted access is configured for. */
  sourceResourceId: string;
  /** A list of roles to bind, each item is a resource type qualified role name. For example: 'Microsoft.MachineLearningServices/workspaces/reader'. */
  roles: string[];
}

/** Available Guardrails Version */
export interface GuardrailsAvailableVersion extends Resource {
  /** Whether the version is default or not and support info. */
  properties: GuardrailsAvailableVersionsProperties;
}

/** Available Safeguards Version */
export interface SafeguardsAvailableVersion extends Resource {
  /** Whether the version is default or not and support info. */
  properties: SafeguardsAvailableVersionsProperties;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** See [planned maintenance](https://docs.microsoft.com/azure/aks/planned-maintenance) for more information about planned maintenance. */
export interface MaintenanceConfiguration extends SubResource {
  /**
   * The system metadata relating to this resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** If two array entries specify the same day of the week, the applied configuration is the union of times in both entries. */
  timeInWeek?: TimeInWeek[];
  /** Time slots on which upgrade is not allowed. */
  notAllowedTime?: TimeSpan[];
  /** Maintenance window for the maintenance configuration. */
  maintenanceWindow?: MaintenanceWindow;
}

/** Agent Pool. */
export interface AgentPool extends SubResource {
  /**
   * Unique read-only string used to implement optimistic concurrency. The eTag value will change when the resource is updated. Specify an if-match or if-none-match header with the eTag value for a subsequent request to enable optimistic concurrency per the normal etag convention.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly eTag?: string;
  /** Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1. */
  count?: number;
  /** VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions */
  vmSize?: string;
  /** OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified. */
  osDiskSizeGB?: number;
  /** The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os). */
  osDiskType?: OSDiskType;
  /** Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage. */
  kubeletDiskType?: KubeletDiskType;
  /** Determines the type of workload a node can run. */
  workloadRuntime?: WorkloadRuntime;
  /** A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It must not be specified for Windows nodes. It must be a static string (i.e., will be printed raw and not be executed as a script). */
  messageOfTheDay?: string;
  /** If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName} */
  vnetSubnetID?: string;
  /** If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName} */
  podSubnetID?: string;
  /** The IP allocation mode for pods in the agent pool. Must be used with podSubnetId. The default is 'DynamicIndividual'. */
  podIPAllocationMode?: PodIPAllocationMode;
  /** The maximum number of pods that can run on a node. */
  maxPods?: number;
  /** The operating system type. The default is Linux. */
  osType?: OSType;
  /** Specifies the OS SKU used by the agent pool. If not specified, the default is Ubuntu if OSType=Linux or Windows2019 if OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is deprecated. */
  osSKU?: Ossku;
  /** The maximum number of nodes for auto-scaling */
  maxCount?: number;
  /** The minimum number of nodes for auto-scaling */
  minCount?: number;
  /** Whether to enable auto-scaler */
  enableAutoScaling?: boolean;
  /** This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete. */
  scaleDownMode?: ScaleDownMode;
  /** The type of Agent Pool. */
  typePropertiesType?: AgentPoolType;
  /** A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools */
  mode?: AgentPoolMode;
  /** Both patch version <major.minor.patch> and <major.minor> are supported. When <major.minor> is specified, the latest supported patch version is chosen automatically. Updating the agent pool with the same <major.minor> once it has been created will not trigger an upgrade, even if a newer patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool). */
  orchestratorVersion?: string;
  /**
   * If orchestratorVersion was a fully specified version <major.minor.patch>, this field will be exactly equal to it. If orchestratorVersion was <major.minor>, this field will contain the full <major.minor.patch> version being used.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly currentOrchestratorVersion?: string;
  /**
   * The version of node image
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nodeImageVersion?: string;
  /** Settings for upgrading the agentpool */
  upgradeSettings?: AgentPoolUpgradeSettings;
  /**
   * The current deployment or provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /** When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only be stopped if it is Running and provisioning state is Succeeded */
  powerState?: PowerState;
  /** The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'. */
  availabilityZones?: string[];
  /** Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The default is false. */
  enableNodePublicIP?: boolean;
  /** When set to true, AKS adds a label to the node indicating that the feature is enabled and deploys a daemonset along with host services to sync custom certificate authorities from user-provided list of base64 encoded certificates into node trust stores. Defaults to false. */
  enableCustomCATrust?: boolean;
  /** This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName} */
  nodePublicIPPrefixID?: string;
  /** The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'. */
  scaleSetPriority?: ScaleSetPriority;
  /** This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'. */
  scaleSetEvictionPolicy?: ScaleSetEvictionPolicy;
  /** Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing) */
  spotMaxPrice?: number;
  /** The tags to be persisted on the agent pool virtual machine scale set. */
  tags?: { [propertyName: string]: string };
  /** The node labels to be persisted across all nodes in agent pool. */
  nodeLabels?: { [propertyName: string]: string };
  /** The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule. */
  nodeTaints?: string[];
  /** These taints will not be reconciled by AKS and can be removed with a kubectl call. This field can be modified after node pool is created, but nodes will not be recreated with new taints until another operation that requires recreation (e.g. node image upgrade) happens. These taints allow for required configuration to run before the node is ready to accept workloads, for example 'key1=value1:NoSchedule' that then can be removed with `kubectl taint nodes node1 key1=value1:NoSchedule-` */
  nodeInitializationTaints?: string[];
  /** The ID for Proximity Placement Group. */
  proximityPlacementGroupID?: string;
  /** The Kubelet configuration on the agent pool nodes. */
  kubeletConfig?: KubeletConfig;
  /** The OS configuration of Linux agent nodes. */
  linuxOSConfig?: LinuxOSConfig;
  /** This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption */
  enableEncryptionAtHost?: boolean;
  /** Whether to enable UltraSSD */
  enableUltraSSD?: boolean;
  /** See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more details. */
  enableFips?: boolean;
  /** GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU. */
  gpuInstanceProfile?: GPUInstanceProfile;
  /** CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using a snapshot. */
  creationData?: CreationData;
  /** AKS will associate the specified agent pool with the Capacity Reservation Group. */
  capacityReservationGroupID?: string;
  /** This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}. For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts). */
  hostGroupID?: string;
  /** The Windows agent pool's specific profile. */
  windowsProfile?: AgentPoolWindowsProfile;
  /** Network-related settings of an agent pool. */
  networkProfile?: AgentPoolNetworkProfile;
  /** The security settings of an agent pool. */
  securityProfile?: AgentPoolSecurityProfile;
  /** The GPU settings of an agent pool. */
  gpuProfile?: AgentPoolGPUProfile;
  /** Configuration for using artifact streaming on AKS. */
  artifactStreamingProfile?: AgentPoolArtifactStreamingProfile;
  /** Specifications on VirtualMachines agent pool. */
  virtualMachinesProfile?: VirtualMachinesProfile;
  /** The status of nodes in a VirtualMachines agent pool. */
  virtualMachineNodesStatus?: VirtualMachineNodes[];
  /** Profile specific to a managed agent pool in Gateway mode. This field cannot be set if agent pool mode is not Gateway. */
  gatewayProfile?: AgentPoolGatewayProfile;
}

/** A machine. Contains details about the underlying virtual machine. A machine may be visible here but not in kubectl get nodes; if so it may be because the machine has not been registered with the Kubernetes API Server yet. */
export interface Machine extends SubResource {
  /**
   * The properties of the machine
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly properties?: MachineProperties;
}

/** Mesh upgrade profile properties for a major.minor release. */
export interface MeshUpgradeProfileProperties extends MeshRevision {}

/** Managed cluster. */
export interface ManagedCluster extends TrackedResource {
  /**
   * Unique read-only string used to implement optimistic concurrency. The eTag value will change when the resource is updated. Specify an if-match or if-none-match header with the eTag value for a subsequent request to enable optimistic concurrency per the normal etag convention.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly eTag?: string;
  /** The managed cluster SKU. */
  sku?: ManagedClusterSKU;
  /** The extended location of the Virtual Machine. */
  extendedLocation?: ExtendedLocation;
  /** The identity of the managed cluster, if configured. */
  identity?: ManagedClusterIdentity;
  /** This is primarily used to expose different UI experiences in the portal for different kinds */
  kind?: string;
  /**
   * The current provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /**
   * The Power State of the cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly powerState?: PowerState;
  /** CreationData to be used to specify the source Snapshot ID if the cluster will be created/upgraded using a snapshot. */
  creationData?: CreationData;
  /**
   * The max number of agent pools for the managed cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maxAgentPools?: number;
  /** When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed sequentially by major version number. For example, upgrades between 1.14.x -> 1.15.x or 1.15.x -> 1.16.x are allowed, however 1.14.x -> 1.16.x is not allowed. See [upgrading an AKS cluster](https://docs.microsoft.com/azure/aks/upgrade-cluster) for more details. */
  kubernetesVersion?: string;
  /**
   * The version of Kubernetes the Managed Cluster is running.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly currentKubernetesVersion?: string;
  /** This cannot be updated once the Managed Cluster has been created. */
  dnsPrefix?: string;
  /** This cannot be updated once the Managed Cluster has been created. */
  fqdnSubdomain?: string;
  /**
   * The FQDN of the master pool.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fqdn?: string;
  /**
   * The FQDN of private cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateFqdn?: string;
  /**
   * The Azure Portal requires certain Cross-Origin Resource Sharing (CORS) headers to be sent in some responses, which Kubernetes APIServer doesn't handle by default. This special FQDN supports CORS, allowing the Azure Portal to function properly.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly azurePortalFqdn?: string;
  /** The agent pool properties. */
  agentPoolProfiles?: ManagedClusterAgentPoolProfile[];
  /** The profile for Linux VMs in the Managed Cluster. */
  linuxProfile?: ContainerServiceLinuxProfile;
  /** The profile for Windows VMs in the Managed Cluster. */
  windowsProfile?: ManagedClusterWindowsProfile;
  /** Information about a service principal identity for the cluster to use for manipulating Azure APIs. */
  servicePrincipalProfile?: ManagedClusterServicePrincipalProfile;
  /** The profile of managed cluster add-on. */
  addonProfiles?: { [propertyName: string]: ManagedClusterAddonProfile };
  /** See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on AAD pod identity integration. */
  podIdentityProfile?: ManagedClusterPodIdentityProfile;
  /** The OIDC issuer profile of the Managed Cluster. */
  oidcIssuerProfile?: ManagedClusterOidcIssuerProfile;
  /** The name of the resource group containing agent pool nodes. */
  nodeResourceGroup?: string;
  /** The node resource group configuration profile. */
  nodeResourceGroupProfile?: ManagedClusterNodeResourceGroupProfile;
  /** Whether to enable Kubernetes Role-Based Access Control. */
  enableRbac?: boolean;
  /** The support plan for the Managed Cluster. If unspecified, the default is 'KubernetesOfficial'. */
  supportPlan?: KubernetesSupportPlan;
  /** (DEPRECATED) Whether to enable Kubernetes pod security policy (preview). PodSecurityPolicy was deprecated in Kubernetes v1.21, and removed from Kubernetes in v1.25. Learn more at https://aka.ms/k8s/psp and https://aka.ms/aks/psp. */
  enablePodSecurityPolicy?: boolean;
  /** The default value is false. It can be enabled/disabled on creation and updating of the managed cluster. See [https://aka.ms/NamespaceARMResource](https://aka.ms/NamespaceARMResource) for more details on Namespace as a ARM Resource. */
  enableNamespaceResources?: boolean;
  /** The network configuration profile. */
  networkProfile?: ContainerServiceNetworkProfile;
  /** The Azure Active Directory configuration. */
  aadProfile?: ManagedClusterAADProfile;
  /** The auto upgrade configuration. */
  autoUpgradeProfile?: ManagedClusterAutoUpgradeProfile;
  /** Settings for upgrading a cluster. */
  upgradeSettings?: ClusterUpgradeSettings;
  /** Parameters to be applied to the cluster-autoscaler when enabled */
  autoScalerProfile?: ManagedClusterPropertiesAutoScalerProfile;
  /** The access profile for managed cluster API server. */
  apiServerAccessProfile?: ManagedClusterAPIServerAccessProfile;
  /** This is of the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}' */
  diskEncryptionSetID?: string;
  /** Identities associated with the cluster. */
  identityProfile?: { [propertyName: string]: UserAssignedIdentity };
  /** Private link resources associated with the cluster. */
  privateLinkResources?: PrivateLinkResource[];
  /** If set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters that are AAD enabled. For more details see [disable local accounts](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts-preview). */
  disableLocalAccounts?: boolean;
  /** Configurations for provisioning the cluster with HTTP proxy servers. */
  httpProxyConfig?: ManagedClusterHttpProxyConfig;
  /** Security profile for the managed cluster. */
  securityProfile?: ManagedClusterSecurityProfile;
  /** Storage profile for the managed cluster. */
  storageProfile?: ManagedClusterStorageProfile;
  /** Ingress profile for the managed cluster. */
  ingressProfile?: ManagedClusterIngressProfile;
  /** Allow or deny public network access for AKS */
  publicNetworkAccess?: PublicNetworkAccess;
  /** Workload Auto-scaler profile for the managed cluster. */
  workloadAutoScalerProfile?: ManagedClusterWorkloadAutoScalerProfile;
  /** Prometheus addon profile for the container service cluster */
  azureMonitorProfile?: ManagedClusterAzureMonitorProfile;
  /** The Safeguards profile holds all the safeguards information for a given cluster */
  safeguardsProfile?: SafeguardsProfile;
  /** Service mesh profile for a managed cluster. */
  serviceMeshProfile?: ServiceMeshProfile;
  /**
   * The resourceUID uniquely identifies ManagedClusters that reuse ARM ResourceIds (i.e: create, delete, create sequence)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceUID?: string;
  /** Optional cluster metrics configuration. */
  metricsProfile?: ManagedClusterMetricsProfile;
  /** AI toolchain operator settings that apply to the whole cluster. */
  aiToolchainOperatorProfile?: ManagedClusterAIToolchainOperatorProfile;
  /** Node provisioning settings that apply to the whole cluster. */
  nodeProvisioningProfile?: ManagedClusterNodeProvisioningProfile;
  /** Profile of the cluster bootstrap configuration. */
  bootstrapProfile?: ManagedClusterBootstrapProfile;
}

/** Managed cluster Access Profile. */
export interface ManagedClusterAccessProfile extends TrackedResource {
  /** Base64-encoded Kubernetes configuration file. */
  kubeConfig?: Uint8Array;
}

/** A node pool snapshot resource. */
export interface Snapshot extends TrackedResource {
  /** CreationData to be used to specify the source agent pool resource ID to create this snapshot. */
  creationData?: CreationData;
  /** The type of a snapshot. The default is NodePool. */
  snapshotType?: SnapshotType;
  /**
   * The version of Kubernetes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly kubernetesVersion?: string;
  /**
   * The version of node image.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nodeImageVersion?: string;
  /**
   * The operating system type. The default is Linux.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osType?: OSType;
  /**
   * Specifies the OS SKU used by the agent pool. If not specified, the default is Ubuntu if OSType=Linux or Windows2019 if OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is deprecated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osSku?: Ossku;
  /**
   * The size of the VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vmSize?: string;
  /**
   * Whether to use a FIPS-enabled OS.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly enableFips?: boolean;
}

/** A managed cluster snapshot resource. */
export interface ManagedClusterSnapshot extends TrackedResource {
  /** CreationData to be used to specify the source resource ID to create this snapshot. */
  creationData?: CreationData;
  /** The type of a snapshot. The default is NodePool. */
  snapshotType?: SnapshotType;
  /**
   * What the properties will be showed when getting managed cluster snapshot. Those properties are read-only.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly managedClusterPropertiesReadOnly?: ManagedClusterPropertiesForSnapshot;
}

/** Mesh revision profile for a mesh. */
export interface MeshRevisionProfile extends ProxyResource {
  /** Mesh revision profile properties for a mesh */
  properties?: MeshRevisionProfileProperties;
}

/** Upgrade profile for given mesh. */
export interface MeshUpgradeProfile extends ProxyResource {
  /** Mesh upgrade profile properties for a major.minor release. */
  properties?: MeshUpgradeProfileProperties;
}

/** The configurations regarding multiple standard load balancers. If not supplied, single load balancer mode will be used. Multiple standard load balancers mode will be used if at lease one configuration is supplied. There has to be a configuration named `kubernetes`. */
export interface LoadBalancer extends ProxyResource {
  /** Name of the public load balancer. There will be an internal load balancer created if needed, and the name will be `<name>-internal`. The internal lb shares the same configurations as the external one. The internal lbs are not needed to be included in LoadBalancer list. There must be a name of kubernetes in the list. */
  namePropertiesName?: string;
  /** Required field. A string value that must specify the ID of an existing agent pool. All nodes in the given pool will always be added to this load balancer. This agent pool must have at least one node and minCount>=1 for autoscaling operations. An agent pool can only be the primary pool for a single load balancer. */
  primaryAgentPoolName?: string;
  /** Whether to automatically place services on the load balancer. If not supplied, the default value is true. If set to false manually, both of the external and the internal load balancer will not be selected for services unless they explicitly target it. */
  allowServicePlacement?: boolean;
  /** Only services that must match this selector can be placed on this load balancer. */
  serviceLabelSelector?: LabelSelector;
  /** Services created in namespaces that match the selector can be placed on this load balancer. */
  serviceNamespaceSelector?: LabelSelector;
  /** Nodes that match this selector will be possible members of this load balancer. */
  nodeSelector?: LabelSelector;
  /**
   * The current provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** Defines headers for ManagedClusters_delete operation. */
export interface ManagedClustersDeleteHeaders {
  /** URL to query for status of the operation. */
  location?: string;
}

/** Defines headers for ManagedClusters_resetServicePrincipalProfile operation. */
export interface ManagedClustersResetServicePrincipalProfileHeaders {
  /** URL to query for status of the operation. */
  location?: string;
}

/** Defines headers for ManagedClusters_resetAADProfile operation. */
export interface ManagedClustersResetAADProfileHeaders {
  /** URL to query for status of the operation. */
  location?: string;
}

/** Defines headers for ManagedClusters_abortLatestOperation operation. */
export interface ManagedClustersAbortLatestOperationHeaders {
  /** URL to query for status of the operation. */
  location?: string;
  /** URL to query for status of the operation. */
  azureAsyncOperation?: string;
}

/** Defines headers for ManagedClusters_rotateClusterCertificates operation. */
export interface ManagedClustersRotateClusterCertificatesHeaders {
  /** URL to query for status of the operation. */
  location?: string;
}

/** Defines headers for ManagedClusters_rotateServiceAccountSigningKeys operation. */
export interface ManagedClustersRotateServiceAccountSigningKeysHeaders {
  /** URL to query for status of the operation. */
  location?: string;
}

/** Defines headers for ManagedClusters_stop operation. */
export interface ManagedClustersStopHeaders {
  /** URL to query for status of the operation. */
  location?: string;
}

/** Defines headers for ManagedClusters_start operation. */
export interface ManagedClustersStartHeaders {
  /** URL to query for status of the operation. */
  location?: string;
}

/** Defines headers for ManagedClusters_runCommand operation. */
export interface ManagedClustersRunCommandHeaders {
  /** URL to query for status of the operation. */
  location?: string;
}

/** Defines headers for ManagedClusters_getCommandResult operation. */
export interface ManagedClustersGetCommandResultHeaders {
  /** URL to query for status of the operation. */
  location?: string;
}

/** Defines headers for ManagedClusters_rebalanceLoadBalancers operation. */
export interface ManagedClustersRebalanceLoadBalancersHeaders {
  /** URL to query for status of the operation. */
  location?: string;
}

/** Defines headers for AgentPools_abortLatestOperation operation. */
export interface AgentPoolsAbortLatestOperationHeaders {
  /** URL to query for status of the operation. */
  location?: string;
  /** URL to query for status of the operation. */
  azureAsyncOperation?: string;
}

/** Defines headers for AgentPools_delete operation. */
export interface AgentPoolsDeleteHeaders {
  /** URL to query for status of the operation. */
  location?: string;
}

/** Defines headers for AgentPools_deleteMachines operation. */
export interface AgentPoolsDeleteMachinesHeaders {
  /** URL to query for status of the operation. */
  location?: string;
}

/** Defines headers for AgentPools_upgradeNodeImageVersion operation. */
export interface AgentPoolsUpgradeNodeImageVersionHeaders {
  /** URL to query for status of the operation. */
  azureAsyncOperation?: string;
}

/** Defines headers for TrustedAccessRoleBindings_delete operation. */
export interface TrustedAccessRoleBindingsDeleteHeaders {
  /** URL to query for status of the operation. */
  location?: string;
}

/** Defines headers for LoadBalancers_delete operation. */
export interface LoadBalancersDeleteHeaders {
  /** URL to query for status of the operation. */
  location?: string;
}

/** Known values of {@link KubernetesSupportPlan} that the service accepts. */
export enum KnownKubernetesSupportPlan {
  /** Support for the version is the same as for the open source Kubernetes offering. Official Kubernetes open source community support versions for 1 year after release. */
  KubernetesOfficial = "KubernetesOfficial",
  /** Support for the version extended past the KubernetesOfficial support of 1 year. AKS continues to patch CVEs for another 1 year, for a total of 2 years of support. */
  AKSLongTermSupport = "AKSLongTermSupport",
}

/**
 * Defines values for KubernetesSupportPlan. \
 * {@link KnownKubernetesSupportPlan} can be used interchangeably with KubernetesSupportPlan,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **KubernetesOfficial**: Support for the version is the same as for the open source Kubernetes offering. Official Kubernetes open source community support versions for 1 year after release. \
 * **AKSLongTermSupport**: Support for the version extended past the KubernetesOfficial support of 1 year. AKS continues to patch CVEs for another 1 year, for a total of 2 years of support.
 */
export type KubernetesSupportPlan = string;

/** Known values of {@link ManagedClusterSKUName} that the service accepts. */
export enum KnownManagedClusterSKUName {
  /** Base option for the AKS control plane. */
  Base = "Base",
  /** Automatic clusters are optimized to run most production workloads with configuration that follows AKS best practices and recommendations for cluster and workload setup, scalability, and security. For more details about Automatic clusters see aka.ms\/aks\/automatic. */
  Automatic = "Automatic",
}

/**
 * Defines values for ManagedClusterSKUName. \
 * {@link KnownManagedClusterSKUName} can be used interchangeably with ManagedClusterSKUName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Base**: Base option for the AKS control plane. \
 * **Automatic**: Automatic clusters are optimized to run most production workloads with configuration that follows AKS best practices and recommendations for cluster and workload setup, scalability, and security. For more details about Automatic clusters see aka.ms\/aks\/automatic.
 */
export type ManagedClusterSKUName = string;

/** Known values of {@link ManagedClusterSKUTier} that the service accepts. */
export enum KnownManagedClusterSKUTier {
  /** Cluster has premium capabilities in addition to all of the capabilities included in 'Standard'. Premium enables selection of LongTermSupport (aka.ms\/aks\/lts) for certain Kubernetes versions. */
  Premium = "Premium",
  /** Recommended for mission-critical and production workloads. Includes Kubernetes control plane autoscaling, workload-intensive testing, and up to 5,000 nodes per cluster. Guarantees 99.95% availability of the Kubernetes API server endpoint for clusters that use Availability Zones and 99.9% of availability for clusters that don't use Availability Zones. */
  Standard = "Standard",
  /** The cluster management is free, but charged for VM, storage, and networking usage. Best for experimenting, learning, simple testing, or workloads with fewer than 10 nodes. Not recommended for production use cases. */
  Free = "Free",
}

/**
 * Defines values for ManagedClusterSKUTier. \
 * {@link KnownManagedClusterSKUTier} can be used interchangeably with ManagedClusterSKUTier,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Premium**: Cluster has premium capabilities in addition to all of the capabilities included in 'Standard'. Premium enables selection of LongTermSupport (aka.ms\/aks\/lts) for certain Kubernetes versions. \
 * **Standard**: Recommended for mission-critical and production workloads. Includes Kubernetes control plane autoscaling, workload-intensive testing, and up to 5,000 nodes per cluster. Guarantees 99.95% availability of the Kubernetes API server endpoint for clusters that use Availability Zones and 99.9% of availability for clusters that don't use Availability Zones. \
 * **Free**: The cluster management is free, but charged for VM, storage, and networking usage. Best for experimenting, learning, simple testing, or workloads with fewer than 10 nodes. Not recommended for production use cases.
 */
export type ManagedClusterSKUTier = string;

/** Known values of {@link ExtendedLocationTypes} that the service accepts. */
export enum KnownExtendedLocationTypes {
  /** EdgeZone */
  EdgeZone = "EdgeZone",
}

/**
 * Defines values for ExtendedLocationTypes. \
 * {@link KnownExtendedLocationTypes} can be used interchangeably with ExtendedLocationTypes,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **EdgeZone**
 */
export type ExtendedLocationTypes = string;

/** Known values of {@link Code} that the service accepts. */
export enum KnownCode {
  /** The cluster is running. */
  Running = "Running",
  /** The cluster is stopped. */
  Stopped = "Stopped",
}

/**
 * Defines values for Code. \
 * {@link KnownCode} can be used interchangeably with Code,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Running**: The cluster is running. \
 * **Stopped**: The cluster is stopped.
 */
export type Code = string;

/** Known values of {@link OSDiskType} that the service accepts. */
export enum KnownOSDiskType {
  /** Azure replicates the operating system disk for a virtual machine to Azure storage to avoid data loss should the VM need to be relocated to another host. Since containers aren't designed to have local state persisted, this behavior offers limited value while providing some drawbacks, including slower node provisioning and higher read\/write latency. */
  Managed = "Managed",
  /** Ephemeral OS disks are stored only on the host machine, just like a temporary disk. This provides lower read\/write latency, along with faster node scaling and cluster upgrades. */
  Ephemeral = "Ephemeral",
}

/**
 * Defines values for OSDiskType. \
 * {@link KnownOSDiskType} can be used interchangeably with OSDiskType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Managed**: Azure replicates the operating system disk for a virtual machine to Azure storage to avoid data loss should the VM need to be relocated to another host. Since containers aren't designed to have local state persisted, this behavior offers limited value while providing some drawbacks, including slower node provisioning and higher read\/write latency. \
 * **Ephemeral**: Ephemeral OS disks are stored only on the host machine, just like a temporary disk. This provides lower read\/write latency, along with faster node scaling and cluster upgrades.
 */
export type OSDiskType = string;

/** Known values of {@link KubeletDiskType} that the service accepts. */
export enum KnownKubeletDiskType {
  /** Kubelet will use the OS disk for its data. */
  OS = "OS",
  /** Kubelet will use the temporary disk for its data. */
  Temporary = "Temporary",
}

/**
 * Defines values for KubeletDiskType. \
 * {@link KnownKubeletDiskType} can be used interchangeably with KubeletDiskType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **OS**: Kubelet will use the OS disk for its data. \
 * **Temporary**: Kubelet will use the temporary disk for its data.
 */
export type KubeletDiskType = string;

/** Known values of {@link WorkloadRuntime} that the service accepts. */
export enum KnownWorkloadRuntime {
  /** Nodes will use Kubelet to run standard OCI container workloads. */
  OCIContainer = "OCIContainer",
  /** Nodes will use Krustlet to run WASM workloads using the WASI provider (Preview). */
  WasmWasi = "WasmWasi",
  /** Nodes can use (Kata + Cloud Hypervisor + Hyper-V) to enable Nested VM-based pods (Preview). Due to the use Hyper-V, AKS node OS itself is a nested VM (the root OS) of Hyper-V. Thus it can only be used with VM series that support Nested Virtualization such as Dv3 series. */
  KataMshvVmIsolation = "KataMshvVmIsolation",
}

/**
 * Defines values for WorkloadRuntime. \
 * {@link KnownWorkloadRuntime} can be used interchangeably with WorkloadRuntime,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **OCIContainer**: Nodes will use Kubelet to run standard OCI container workloads. \
 * **WasmWasi**: Nodes will use Krustlet to run WASM workloads using the WASI provider (Preview). \
 * **KataMshvVmIsolation**: Nodes can use (Kata + Cloud Hypervisor + Hyper-V) to enable Nested VM-based pods (Preview). Due to the use Hyper-V, AKS node OS itself is a nested VM (the root OS) of Hyper-V. Thus it can only be used with VM series that support Nested Virtualization such as Dv3 series.
 */
export type WorkloadRuntime = string;

/** Known values of {@link PodIPAllocationMode} that the service accepts. */
export enum KnownPodIPAllocationMode {
  /** Each pod gets a single IP address assigned. This is better for maximizing a small to medium subnet of size \/16 or smaller. The Azure CNI cluster with dynamic IP allocation defaults to this mode if the customer does not explicitly specify a podIPAllocationMode */
  DynamicIndividual = "DynamicIndividual",
  /** Each node is statically allocated CIDR block(s) of size \/28 = 16 IPs per block to satisfy the maxPods per node. Number of CIDR blocks >= (maxPods \/ 16). The block, rather than a single IP, counts against the Azure Vnet Private IP limit of 65K. Therefore block mode is suitable for running larger workloads with more than the current limit of 65K pods in a cluster. This mode is better suited to scale with larger subnets of \/15 or bigger */
  StaticBlock = "StaticBlock",
}

/**
 * Defines values for PodIPAllocationMode. \
 * {@link KnownPodIPAllocationMode} can be used interchangeably with PodIPAllocationMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **DynamicIndividual**: Each pod gets a single IP address assigned. This is better for maximizing a small to medium subnet of size \/16 or smaller. The Azure CNI cluster with dynamic IP allocation defaults to this mode if the customer does not explicitly specify a podIPAllocationMode \
 * **StaticBlock**: Each node is statically allocated CIDR block(s) of size \/28 = 16 IPs per block to satisfy the maxPods per node. Number of CIDR blocks >= (maxPods \/ 16). The block, rather than a single IP, counts against the Azure Vnet Private IP limit of 65K. Therefore block mode is suitable for running larger workloads with more than the current limit of 65K pods in a cluster. This mode is better suited to scale with larger subnets of \/15 or bigger
 */
export type PodIPAllocationMode = string;

/** Known values of {@link OSType} that the service accepts. */
export enum KnownOSType {
  /** Use Linux. */
  Linux = "Linux",
  /** Use Windows. */
  Windows = "Windows",
}

/**
 * Defines values for OSType. \
 * {@link KnownOSType} can be used interchangeably with OSType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Linux**: Use Linux. \
 * **Windows**: Use Windows.
 */
export type OSType = string;

/** Known values of {@link Ossku} that the service accepts. */
export enum KnownOssku {
  /** Use Ubuntu as the OS for node images. */
  Ubuntu = "Ubuntu",
  /** Deprecated OSSKU. Microsoft recommends that new deployments choose 'AzureLinux' instead. */
  Mariner = "Mariner",
  /** Use AzureLinux as the OS for node images. Azure Linux is a container-optimized Linux distro built by Microsoft, visit https:\//aka.ms\/azurelinux for more information. */
  AzureLinux = "AzureLinux",
  /** Deprecated OSSKU. Microsoft recommends that new deployments choose 'AzureLinux' instead. */
  CBLMariner = "CBLMariner",
  /** Use Windows2019 as the OS for node images. Unsupported for system node pools. Windows2019 only supports Windows2019 containers; it cannot run Windows2022 containers and vice versa. */
  Windows2019 = "Windows2019",
  /** Use Windows2022 as the OS for node images. Unsupported for system node pools. Windows2022 only supports Windows2022 containers; it cannot run Windows2019 containers and vice versa. */
  Windows2022 = "Windows2022",
  /** Use Windows Annual Channel version as the OS for node images. Unsupported for system node pools. Details about supported container images and kubernetes versions under different AKS Annual Channel versions could be seen in https:\//aka.ms\/aks\/windows-annual-channel-details. */
  WindowsAnnual = "WindowsAnnual",
}

/**
 * Defines values for Ossku. \
 * {@link KnownOssku} can be used interchangeably with Ossku,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Ubuntu**: Use Ubuntu as the OS for node images. \
 * **Mariner**: Deprecated OSSKU. Microsoft recommends that new deployments choose 'AzureLinux' instead. \
 * **AzureLinux**: Use AzureLinux as the OS for node images. Azure Linux is a container-optimized Linux distro built by Microsoft, visit https:\/\/aka.ms\/azurelinux for more information. \
 * **CBLMariner**: Deprecated OSSKU. Microsoft recommends that new deployments choose 'AzureLinux' instead. \
 * **Windows2019**: Use Windows2019 as the OS for node images. Unsupported for system node pools. Windows2019 only supports Windows2019 containers; it cannot run Windows2022 containers and vice versa. \
 * **Windows2022**: Use Windows2022 as the OS for node images. Unsupported for system node pools. Windows2022 only supports Windows2022 containers; it cannot run Windows2019 containers and vice versa. \
 * **WindowsAnnual**: Use Windows Annual Channel version as the OS for node images. Unsupported for system node pools. Details about supported container images and kubernetes versions under different AKS Annual Channel versions could be seen in https:\/\/aka.ms\/aks\/windows-annual-channel-details.
 */
export type Ossku = string;

/** Known values of {@link ScaleDownMode} that the service accepts. */
export enum KnownScaleDownMode {
  /** Create new instances during scale up and remove instances during scale down. */
  Delete = "Delete",
  /** Attempt to start deallocated instances (if they exist) during scale up and deallocate instances during scale down. */
  Deallocate = "Deallocate",
}

/**
 * Defines values for ScaleDownMode. \
 * {@link KnownScaleDownMode} can be used interchangeably with ScaleDownMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Delete**: Create new instances during scale up and remove instances during scale down. \
 * **Deallocate**: Attempt to start deallocated instances (if they exist) during scale up and deallocate instances during scale down.
 */
export type ScaleDownMode = string;

/** Known values of {@link AgentPoolType} that the service accepts. */
export enum KnownAgentPoolType {
  /** Create an Agent Pool backed by a Virtual Machine Scale Set. */
  VirtualMachineScaleSets = "VirtualMachineScaleSets",
  /** Use of this is strongly discouraged. */
  AvailabilitySet = "AvailabilitySet",
  /** Create an Agent Pool backed by a Single Instance VM orchestration mode. */
  VirtualMachines = "VirtualMachines",
}

/**
 * Defines values for AgentPoolType. \
 * {@link KnownAgentPoolType} can be used interchangeably with AgentPoolType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **VirtualMachineScaleSets**: Create an Agent Pool backed by a Virtual Machine Scale Set. \
 * **AvailabilitySet**: Use of this is strongly discouraged. \
 * **VirtualMachines**: Create an Agent Pool backed by a Single Instance VM orchestration mode.
 */
export type AgentPoolType = string;

/** Known values of {@link AgentPoolMode} that the service accepts. */
export enum KnownAgentPoolMode {
  /** System agent pools are primarily for hosting critical system pods such as CoreDNS and metrics-server. System agent pools osType must be Linux. System agent pools VM SKU must have at least 2vCPUs and 4GB of memory. */
  System = "System",
  /** User agent pools are primarily for hosting your application pods. */
  User = "User",
  /** Gateway agent pools are dedicated to providing static egress IPs to pods. For more details, see https:\//aka.ms\/aks\/static-egress-gateway. */
  Gateway = "Gateway",
}

/**
 * Defines values for AgentPoolMode. \
 * {@link KnownAgentPoolMode} can be used interchangeably with AgentPoolMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **System**: System agent pools are primarily for hosting critical system pods such as CoreDNS and metrics-server. System agent pools osType must be Linux. System agent pools VM SKU must have at least 2vCPUs and 4GB of memory. \
 * **User**: User agent pools are primarily for hosting your application pods. \
 * **Gateway**: Gateway agent pools are dedicated to providing static egress IPs to pods. For more details, see https:\/\/aka.ms\/aks\/static-egress-gateway.
 */
export type AgentPoolMode = string;

/** Known values of {@link UndrainableNodeBehavior} that the service accepts. */
export enum KnownUndrainableNodeBehavior {
  /** AKS will cordon the blocked nodes and replace them with surge nodes during upgrade. The blocked nodes will be cordoned and replaced by surge nodes. The blocked nodes will have label 'kubernetes.azure.com\/upgrade-status:Quarantined'. A surge node will be retained for each blocked node. A best-effort attempt will be made to delete all other surge nodes. If there are enough surge nodes to replace blocked nodes, then the upgrade operation and the managed cluster will be in failed state. Otherwise, the upgrade operation and the managed cluster will be in canceled state. */
  Cordon = "Cordon",
  /** AKS will mark the blocked nodes schedulable, but the blocked nodes are not upgraded. A best-effort attempt will be made to delete all surge nodes. The upgrade operation and the managed cluster will be in failed state if there are any blocked nodes. */
  Schedule = "Schedule",
}

/**
 * Defines values for UndrainableNodeBehavior. \
 * {@link KnownUndrainableNodeBehavior} can be used interchangeably with UndrainableNodeBehavior,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Cordon**: AKS will cordon the blocked nodes and replace them with surge nodes during upgrade. The blocked nodes will be cordoned and replaced by surge nodes. The blocked nodes will have label 'kubernetes.azure.com\/upgrade-status:Quarantined'. A surge node will be retained for each blocked node. A best-effort attempt will be made to delete all other surge nodes. If there are enough surge nodes to replace blocked nodes, then the upgrade operation and the managed cluster will be in failed state. Otherwise, the upgrade operation and the managed cluster will be in canceled state. \
 * **Schedule**: AKS will mark the blocked nodes schedulable, but the blocked nodes are not upgraded. A best-effort attempt will be made to delete all surge nodes. The upgrade operation and the managed cluster will be in failed state if there are any blocked nodes.
 */
export type UndrainableNodeBehavior = string;

/** Known values of {@link ScaleSetPriority} that the service accepts. */
export enum KnownScaleSetPriority {
  /** Spot priority VMs will be used. There is no SLA for spot nodes. See [spot on AKS](https:\//docs.microsoft.com\/azure\/aks\/spot-node-pool) for more information. */
  Spot = "Spot",
  /** Regular VMs will be used. */
  Regular = "Regular",
}

/**
 * Defines values for ScaleSetPriority. \
 * {@link KnownScaleSetPriority} can be used interchangeably with ScaleSetPriority,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Spot**: Spot priority VMs will be used. There is no SLA for spot nodes. See [spot on AKS](https:\/\/docs.microsoft.com\/azure\/aks\/spot-node-pool) for more information. \
 * **Regular**: Regular VMs will be used.
 */
export type ScaleSetPriority = string;

/** Known values of {@link ScaleSetEvictionPolicy} that the service accepts. */
export enum KnownScaleSetEvictionPolicy {
  /** Nodes in the underlying Scale Set of the node pool are deleted when they're evicted. */
  Delete = "Delete",
  /** Nodes in the underlying Scale Set of the node pool are set to the stopped-deallocated state upon eviction. Nodes in the stopped-deallocated state count against your compute quota and can cause issues with cluster scaling or upgrading. */
  Deallocate = "Deallocate",
}

/**
 * Defines values for ScaleSetEvictionPolicy. \
 * {@link KnownScaleSetEvictionPolicy} can be used interchangeably with ScaleSetEvictionPolicy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Delete**: Nodes in the underlying Scale Set of the node pool are deleted when they're evicted. \
 * **Deallocate**: Nodes in the underlying Scale Set of the node pool are set to the stopped-deallocated state upon eviction. Nodes in the stopped-deallocated state count against your compute quota and can cause issues with cluster scaling or upgrading.
 */
export type ScaleSetEvictionPolicy = string;

/** Known values of {@link GPUInstanceProfile} that the service accepts. */
export enum KnownGPUInstanceProfile {
  /** MIG1G */
  MIG1G = "MIG1g",
  /** MIG2G */
  MIG2G = "MIG2g",
  /** MIG3G */
  MIG3G = "MIG3g",
  /** MIG4G */
  MIG4G = "MIG4g",
  /** MIG7G */
  MIG7G = "MIG7g",
}

/**
 * Defines values for GPUInstanceProfile. \
 * {@link KnownGPUInstanceProfile} can be used interchangeably with GPUInstanceProfile,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **MIG1g** \
 * **MIG2g** \
 * **MIG3g** \
 * **MIG4g** \
 * **MIG7g**
 */
export type GPUInstanceProfile = string;

/** Known values of {@link Protocol} that the service accepts. */
export enum KnownProtocol {
  /** TCP protocol. */
  TCP = "TCP",
  /** UDP protocol. */
  UDP = "UDP",
}

/**
 * Defines values for Protocol. \
 * {@link KnownProtocol} can be used interchangeably with Protocol,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **TCP**: TCP protocol. \
 * **UDP**: UDP protocol.
 */
export type Protocol = string;

/** Known values of {@link AgentPoolSSHAccess} that the service accepts. */
export enum KnownAgentPoolSSHAccess {
  /** Can SSH onto the node as a local user using private key. */
  LocalUser = "LocalUser",
  /** SSH service will be turned off on the node. */
  Disabled = "Disabled",
}

/**
 * Defines values for AgentPoolSSHAccess. \
 * {@link KnownAgentPoolSSHAccess} can be used interchangeably with AgentPoolSSHAccess,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **LocalUser**: Can SSH onto the node as a local user using private key. \
 * **Disabled**: SSH service will be turned off on the node.
 */
export type AgentPoolSSHAccess = string;

/** Known values of {@link DriverType} that the service accepts. */
export enum KnownDriverType {
  /** Install the GRID driver for the GPU, suitable for applications requiring virtualization support. */
  Grid = "GRID",
  /** Install the CUDA driver for the GPU, optimized for computational tasks in scientific computing and data-intensive applications. */
  Cuda = "CUDA",
}

/**
 * Defines values for DriverType. \
 * {@link KnownDriverType} can be used interchangeably with DriverType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **GRID**: Install the GRID driver for the GPU, suitable for applications requiring virtualization support. \
 * **CUDA**: Install the CUDA driver for the GPU, optimized for computational tasks in scientific computing and data-intensive applications.
 */
export type DriverType = string;

/** Known values of {@link LicenseType} that the service accepts. */
export enum KnownLicenseType {
  /** No additional licensing is applied. */
  None = "None",
  /** Enables Azure Hybrid User Benefits for Windows VMs. */
  WindowsServer = "Windows_Server",
}

/**
 * Defines values for LicenseType. \
 * {@link KnownLicenseType} can be used interchangeably with LicenseType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None**: No additional licensing is applied. \
 * **Windows_Server**: Enables Azure Hybrid User Benefits for Windows VMs.
 */
export type LicenseType = string;

/** Known values of {@link ManagedClusterPodIdentityProvisioningState} that the service accepts. */
export enum KnownManagedClusterPodIdentityProvisioningState {
  /** Assigned */
  Assigned = "Assigned",
  /** Canceled */
  Canceled = "Canceled",
  /** Deleting */
  Deleting = "Deleting",
  /** Failed */
  Failed = "Failed",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Updating */
  Updating = "Updating",
}

/**
 * Defines values for ManagedClusterPodIdentityProvisioningState. \
 * {@link KnownManagedClusterPodIdentityProvisioningState} can be used interchangeably with ManagedClusterPodIdentityProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Assigned** \
 * **Canceled** \
 * **Deleting** \
 * **Failed** \
 * **Succeeded** \
 * **Updating**
 */
export type ManagedClusterPodIdentityProvisioningState = string;

/** Known values of {@link RestrictionLevel} that the service accepts. */
export enum KnownRestrictionLevel {
  /** All RBAC permissions are allowed on the managed node resource group */
  Unrestricted = "Unrestricted",
  /** Only *\/read RBAC permissions allowed on the managed node resource group */
  ReadOnly = "ReadOnly",
}

/**
 * Defines values for RestrictionLevel. \
 * {@link KnownRestrictionLevel} can be used interchangeably with RestrictionLevel,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unrestricted**: All RBAC permissions are allowed on the managed node resource group \
 * **ReadOnly**: Only *\/read RBAC permissions allowed on the managed node resource group
 */
export type RestrictionLevel = string;

/** Known values of {@link NetworkPlugin} that the service accepts. */
export enum KnownNetworkPlugin {
  /** Use the Azure CNI network plugin. See [Azure CNI (advanced) networking](https:\//docs.microsoft.com\/azure\/aks\/concepts-network#azure-cni-advanced-networking) for more information. */
  Azure = "azure",
  /** Use the Kubenet network plugin. See [Kubenet (basic) networking](https:\//docs.microsoft.com\/azure\/aks\/concepts-network#kubenet-basic-networking) for more information. */
  Kubenet = "kubenet",
  /** Do not use a network plugin. A custom CNI will need to be installed after cluster creation for networking functionality. */
  None = "none",
}

/**
 * Defines values for NetworkPlugin. \
 * {@link KnownNetworkPlugin} can be used interchangeably with NetworkPlugin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **azure**: Use the Azure CNI network plugin. See [Azure CNI (advanced) networking](https:\/\/docs.microsoft.com\/azure\/aks\/concepts-network#azure-cni-advanced-networking) for more information. \
 * **kubenet**: Use the Kubenet network plugin. See [Kubenet (basic) networking](https:\/\/docs.microsoft.com\/azure\/aks\/concepts-network#kubenet-basic-networking) for more information. \
 * **none**: Do not use a network plugin. A custom CNI will need to be installed after cluster creation for networking functionality.
 */
export type NetworkPlugin = string;

/** Known values of {@link NetworkPluginMode} that the service accepts. */
export enum KnownNetworkPluginMode {
  /** Pods are given IPs from the PodCIDR address space but use Azure Routing Domains rather than Kubenet reference plugins host-local and bridge. */
  Overlay = "overlay",
}

/**
 * Defines values for NetworkPluginMode. \
 * {@link KnownNetworkPluginMode} can be used interchangeably with NetworkPluginMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **overlay**: Pods are given IPs from the PodCIDR address space but use Azure Routing Domains rather than Kubenet reference plugins host-local and bridge.
 */
export type NetworkPluginMode = string;

/** Known values of {@link NetworkPolicy} that the service accepts. */
export enum KnownNetworkPolicy {
  /** Network policies will not be enforced. This is the default value when NetworkPolicy is not specified. */
  None = "none",
  /** Use Calico network policies. See [differences between Azure and Calico policies](https:\//docs.microsoft.com\/azure\/aks\/use-network-policies#differences-between-azure-and-calico-policies-and-their-capabilities) for more information. */
  Calico = "calico",
  /** Use Azure network policies. See [differences between Azure and Calico policies](https:\//docs.microsoft.com\/azure\/aks\/use-network-policies#differences-between-azure-and-calico-policies-and-their-capabilities) for more information. */
  Azure = "azure",
  /** Use Cilium to enforce network policies. This requires networkDataplane to be 'cilium'. */
  Cilium = "cilium",
}

/**
 * Defines values for NetworkPolicy. \
 * {@link KnownNetworkPolicy} can be used interchangeably with NetworkPolicy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **none**: Network policies will not be enforced. This is the default value when NetworkPolicy is not specified. \
 * **calico**: Use Calico network policies. See [differences between Azure and Calico policies](https:\/\/docs.microsoft.com\/azure\/aks\/use-network-policies#differences-between-azure-and-calico-policies-and-their-capabilities) for more information. \
 * **azure**: Use Azure network policies. See [differences between Azure and Calico policies](https:\/\/docs.microsoft.com\/azure\/aks\/use-network-policies#differences-between-azure-and-calico-policies-and-their-capabilities) for more information. \
 * **cilium**: Use Cilium to enforce network policies. This requires networkDataplane to be 'cilium'.
 */
export type NetworkPolicy = string;

/** Known values of {@link NetworkMode} that the service accepts. */
export enum KnownNetworkMode {
  /** No bridge is created. Intra-VM Pod to Pod communication is through IP routes created by Azure CNI. See [Transparent Mode](https:\//docs.microsoft.com\/azure\/aks\/faq#transparent-mode) for more information. */
  Transparent = "transparent",
  /** This is no longer supported */
  Bridge = "bridge",
}

/**
 * Defines values for NetworkMode. \
 * {@link KnownNetworkMode} can be used interchangeably with NetworkMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **transparent**: No bridge is created. Intra-VM Pod to Pod communication is through IP routes created by Azure CNI. See [Transparent Mode](https:\/\/docs.microsoft.com\/azure\/aks\/faq#transparent-mode) for more information. \
 * **bridge**: This is no longer supported
 */
export type NetworkMode = string;

/** Known values of {@link NetworkDataplane} that the service accepts. */
export enum KnownNetworkDataplane {
  /** Use Azure network dataplane. */
  Azure = "azure",
  /** Use Cilium network dataplane. See [Azure CNI Powered by Cilium](https:\//learn.microsoft.com\/azure\/aks\/azure-cni-powered-by-cilium) for more information. */
  Cilium = "cilium",
}

/**
 * Defines values for NetworkDataplane. \
 * {@link KnownNetworkDataplane} can be used interchangeably with NetworkDataplane,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **azure**: Use Azure network dataplane. \
 * **cilium**: Use Cilium network dataplane. See [Azure CNI Powered by Cilium](https:\/\/learn.microsoft.com\/azure\/aks\/azure-cni-powered-by-cilium) for more information.
 */
export type NetworkDataplane = string;

/** Known values of {@link OutboundType} that the service accepts. */
export enum KnownOutboundType {
  /** The load balancer is used for egress through an AKS assigned public IP. This supports Kubernetes services of type 'loadBalancer'. For more information see [outbound type loadbalancer](https:\//docs.microsoft.com\/azure\/aks\/egress-outboundtype#outbound-type-of-loadbalancer). */
  LoadBalancer = "loadBalancer",
  /** Egress paths must be defined by the user. This is an advanced scenario and requires proper network configuration. For more information see [outbound type userDefinedRouting](https:\//docs.microsoft.com\/azure\/aks\/egress-outboundtype#outbound-type-of-userdefinedrouting). */
  UserDefinedRouting = "userDefinedRouting",
  /** The AKS-managed NAT gateway is used for egress. */
  ManagedNATGateway = "managedNATGateway",
  /** The user-assigned NAT gateway associated to the cluster subnet is used for egress. This is an advanced scenario and requires proper network configuration. */
  UserAssignedNATGateway = "userAssignedNATGateway",
  /** The AKS cluster is not set with any outbound-type. All AKS nodes follows Azure VM default outbound behavior. Please refer to https:\//azure.microsoft.com\/en-us\/updates\/default-outbound-access-for-vms-in-azure-will-be-retired-transition-to-a-new-method-of-internet-access\/ */
  None = "none",
}

/**
 * Defines values for OutboundType. \
 * {@link KnownOutboundType} can be used interchangeably with OutboundType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **loadBalancer**: The load balancer is used for egress through an AKS assigned public IP. This supports Kubernetes services of type 'loadBalancer'. For more information see [outbound type loadbalancer](https:\/\/docs.microsoft.com\/azure\/aks\/egress-outboundtype#outbound-type-of-loadbalancer). \
 * **userDefinedRouting**: Egress paths must be defined by the user. This is an advanced scenario and requires proper network configuration. For more information see [outbound type userDefinedRouting](https:\/\/docs.microsoft.com\/azure\/aks\/egress-outboundtype#outbound-type-of-userdefinedrouting). \
 * **managedNATGateway**: The AKS-managed NAT gateway is used for egress. \
 * **userAssignedNATGateway**: The user-assigned NAT gateway associated to the cluster subnet is used for egress. This is an advanced scenario and requires proper network configuration. \
 * **none**: The AKS cluster is not set with any outbound-type. All AKS nodes follows Azure VM default outbound behavior. Please refer to https:\/\/azure.microsoft.com\/en-us\/updates\/default-outbound-access-for-vms-in-azure-will-be-retired-transition-to-a-new-method-of-internet-access\/
 */
export type OutboundType = string;

/** Known values of {@link LoadBalancerSku} that the service accepts. */
export enum KnownLoadBalancerSku {
  /** Use a a standard Load Balancer. This is the recommended Load Balancer SKU. For more information about on working with the load balancer in the managed cluster, see the [standard Load Balancer](https:\//docs.microsoft.com\/azure\/aks\/load-balancer-standard) article. */
  Standard = "standard",
  /** Use a basic Load Balancer with limited functionality. */
  Basic = "basic",
}

/**
 * Defines values for LoadBalancerSku. \
 * {@link KnownLoadBalancerSku} can be used interchangeably with LoadBalancerSku,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **standard**: Use a a standard Load Balancer. This is the recommended Load Balancer SKU. For more information about on working with the load balancer in the managed cluster, see the [standard Load Balancer](https:\/\/docs.microsoft.com\/azure\/aks\/load-balancer-standard) article. \
 * **basic**: Use a basic Load Balancer with limited functionality.
 */
export type LoadBalancerSku = string;

/** Known values of {@link BackendPoolType} that the service accepts. */
export enum KnownBackendPoolType {
  /** The type of the managed inbound Load Balancer BackendPool. https:\//cloud-provider-azure.sigs.k8s.io\/topics\/loadbalancer\/#configure-load-balancer-backend. */
  NodeIPConfiguration = "NodeIPConfiguration",
  /** The type of the managed inbound Load Balancer BackendPool. https:\//cloud-provider-azure.sigs.k8s.io\/topics\/loadbalancer\/#configure-load-balancer-backend. */
  NodeIP = "NodeIP",
}

/**
 * Defines values for BackendPoolType. \
 * {@link KnownBackendPoolType} can be used interchangeably with BackendPoolType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NodeIPConfiguration**: The type of the managed inbound Load Balancer BackendPool. https:\/\/cloud-provider-azure.sigs.k8s.io\/topics\/loadbalancer\/#configure-load-balancer-backend. \
 * **NodeIP**: The type of the managed inbound Load Balancer BackendPool. https:\/\/cloud-provider-azure.sigs.k8s.io\/topics\/loadbalancer\/#configure-load-balancer-backend.
 */
export type BackendPoolType = string;

/** Known values of {@link ClusterServiceLoadBalancerHealthProbeMode} that the service accepts. */
export enum KnownClusterServiceLoadBalancerHealthProbeMode {
  /** Each External Traffic Policy Cluster service will have its own health probe targeting service nodePort. */
  ServiceNodePort = "ServiceNodePort",
  /** All External Traffic Policy Cluster services in a Standard Load Balancer will have a dedicated health probe targeting the backend nodes' kube-proxy health check port 10256. */
  Shared = "Shared",
}

/**
 * Defines values for ClusterServiceLoadBalancerHealthProbeMode. \
 * {@link KnownClusterServiceLoadBalancerHealthProbeMode} can be used interchangeably with ClusterServiceLoadBalancerHealthProbeMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ServiceNodePort**: Each External Traffic Policy Cluster service will have its own health probe targeting service nodePort. \
 * **Shared**: All External Traffic Policy Cluster services in a Standard Load Balancer will have a dedicated health probe targeting the backend nodes' kube-proxy health check port 10256.
 */
export type ClusterServiceLoadBalancerHealthProbeMode = string;

/** Known values of {@link IpFamily} that the service accepts. */
export enum KnownIpFamily {
  /** IPv4 family */
  IPv4 = "IPv4",
  /** IPv6 family */
  IPv6 = "IPv6",
}

/**
 * Defines values for IpFamily. \
 * {@link KnownIpFamily} can be used interchangeably with IpFamily,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **IPv4**: IPv4 family \
 * **IPv6**: IPv6 family
 */
export type IpFamily = string;

/** Known values of {@link PodLinkLocalAccess} that the service accepts. */
export enum KnownPodLinkLocalAccess {
  /** Pods with hostNetwork=false can access Azure Instance Metadata Service (IMDS) without restriction. */
  Imds = "IMDS",
  /** Pods with hostNetwork=false cannot access Azure Instance Metadata Service (IMDS). */
  None = "None",
}

/**
 * Defines values for PodLinkLocalAccess. \
 * {@link KnownPodLinkLocalAccess} can be used interchangeably with PodLinkLocalAccess,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **IMDS**: Pods with hostNetwork=false can access Azure Instance Metadata Service (IMDS) without restriction. \
 * **None**: Pods with hostNetwork=false cannot access Azure Instance Metadata Service (IMDS).
 */
export type PodLinkLocalAccess = string;

/** Known values of {@link Mode} that the service accepts. */
export enum KnownMode {
  /** IPTables proxy mode */
  Iptables = "IPTABLES",
  /** IPVS proxy mode. Must be using Kubernetes version >= 1.22. */
  Ipvs = "IPVS",
}

/**
 * Defines values for Mode. \
 * {@link KnownMode} can be used interchangeably with Mode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **IPTABLES**: IPTables proxy mode \
 * **IPVS**: IPVS proxy mode. Must be using Kubernetes version >= 1.22.
 */
export type Mode = string;

/** Known values of {@link IpvsScheduler} that the service accepts. */
export enum KnownIpvsScheduler {
  /** Round Robin */
  RoundRobin = "RoundRobin",
  /** Least Connection */
  LeastConnection = "LeastConnection",
}

/**
 * Defines values for IpvsScheduler. \
 * {@link KnownIpvsScheduler} can be used interchangeably with IpvsScheduler,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **RoundRobin**: Round Robin \
 * **LeastConnection**: Least Connection
 */
export type IpvsScheduler = string;

/** Known values of {@link TLSManagement} that the service accepts. */
export enum KnownTLSManagement {
  /** Disable TLS management of certificates. This leaves the flow log endpoint unencrypted. It is strongly recommended when using this option that you configure your own encryption on top, for example by putting the flow logs endpoint behind an ingress controller. */
  None = "None",
  /** Enable TLS and cert rotation is managed by Azure. */
  Managed = "Managed",
}

/**
 * Defines values for TLSManagement. \
 * {@link KnownTLSManagement} can be used interchangeably with TLSManagement,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None**: Disable TLS management of certificates. This leaves the flow log endpoint unencrypted. It is strongly recommended when using this option that you configure your own encryption on top, for example by putting the flow logs endpoint behind an ingress controller. \
 * **Managed**: Enable TLS and cert rotation is managed by Azure.
 */
export type TLSManagement = string;

/** Known values of {@link UpgradeChannel} that the service accepts. */
export enum KnownUpgradeChannel {
  /** Automatically upgrade the cluster to the latest supported patch release on the latest supported minor version. In cases where the cluster is at a version of Kubernetes that is at an N-2 minor version where N is the latest supported minor version, the cluster first upgrades to the latest supported patch version on N-1 minor version. For example, if a cluster is running version 1.17.7 and versions 1.17.9, 1.18.4, 1.18.6, and 1.19.1 are available, your cluster first is upgraded to 1.18.6, then is upgraded to 1.19.1. */
  Rapid = "rapid",
  /** Automatically upgrade the cluster to the latest supported patch release on minor version N-1, where N is the latest supported minor version. For example, if a cluster is running version 1.17.7 and versions 1.17.9, 1.18.4, 1.18.6, and 1.19.1 are available, your cluster is upgraded to 1.18.6. */
  Stable = "stable",
  /** Automatically upgrade the cluster to the latest supported patch version when it becomes available while keeping the minor version the same. For example, if a cluster is running version 1.17.7 and versions 1.17.9, 1.18.4, 1.18.6, and 1.19.1 are available, your cluster is upgraded to 1.17.9. */
  Patch = "patch",
  /** Automatically upgrade the node image to the latest version available. Consider using nodeOSUpgradeChannel instead as that allows you to configure node OS patching separate from Kubernetes version patching */
  NodeImage = "node-image",
  /** Disables auto-upgrades and keeps the cluster at its current version of Kubernetes. */
  None = "none",
}

/**
 * Defines values for UpgradeChannel. \
 * {@link KnownUpgradeChannel} can be used interchangeably with UpgradeChannel,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **rapid**: Automatically upgrade the cluster to the latest supported patch release on the latest supported minor version. In cases where the cluster is at a version of Kubernetes that is at an N-2 minor version where N is the latest supported minor version, the cluster first upgrades to the latest supported patch version on N-1 minor version. For example, if a cluster is running version 1.17.7 and versions 1.17.9, 1.18.4, 1.18.6, and 1.19.1 are available, your cluster first is upgraded to 1.18.6, then is upgraded to 1.19.1. \
 * **stable**: Automatically upgrade the cluster to the latest supported patch release on minor version N-1, where N is the latest supported minor version. For example, if a cluster is running version 1.17.7 and versions 1.17.9, 1.18.4, 1.18.6, and 1.19.1 are available, your cluster is upgraded to 1.18.6. \
 * **patch**: Automatically upgrade the cluster to the latest supported patch version when it becomes available while keeping the minor version the same. For example, if a cluster is running version 1.17.7 and versions 1.17.9, 1.18.4, 1.18.6, and 1.19.1 are available, your cluster is upgraded to 1.17.9. \
 * **node-image**: Automatically upgrade the node image to the latest version available. Consider using nodeOSUpgradeChannel instead as that allows you to configure node OS patching separate from Kubernetes version patching \
 * **none**: Disables auto-upgrades and keeps the cluster at its current version of Kubernetes.
 */
export type UpgradeChannel = string;

/** Known values of {@link NodeOSUpgradeChannel} that the service accepts. */
export enum KnownNodeOSUpgradeChannel {
  /** No attempt to update your machines OS will be made either by OS or by rolling VHDs. This means you are responsible for your security updates */
  None = "None",
  /** OS updates will be applied automatically through the OS built-in patching infrastructure. Newly scaled in machines will be unpatched initially, and will be patched at some later time by the OS's infrastructure. Behavior of this option depends on the OS in question. Ubuntu and Mariner apply security patches through unattended upgrade roughly once a day around 06:00 UTC. Windows does not apply security patches automatically and so for them this option is equivalent to None till further notice */
  Unmanaged = "Unmanaged",
  /** AKS downloads and updates the nodes with tested security updates. These updates honor the maintenance window settings and produce a new VHD that is used on new nodes. On some occasions it's not possible to apply the updates in place, in such cases the existing nodes will also be re-imaged to the newly produced VHD in order to apply the changes. This option incurs an extra cost of hosting the new Security Patch VHDs in your resource group for just in time consumption. */
  SecurityPatch = "SecurityPatch",
  /** AKS will update the nodes with a newly patched VHD containing security fixes and bugfixes on a weekly cadence. With the VHD update machines will be rolling reimaged to that VHD following maintenance windows and surge settings. No extra VHD cost is incurred when choosing this option as AKS hosts the images. */
  NodeImage = "NodeImage",
}

/**
 * Defines values for NodeOSUpgradeChannel. \
 * {@link KnownNodeOSUpgradeChannel} can be used interchangeably with NodeOSUpgradeChannel,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None**: No attempt to update your machines OS will be made either by OS or by rolling VHDs. This means you are responsible for your security updates \
 * **Unmanaged**: OS updates will be applied automatically through the OS built-in patching infrastructure. Newly scaled in machines will be unpatched initially, and will be patched at some later time by the OS's infrastructure. Behavior of this option depends on the OS in question. Ubuntu and Mariner apply security patches through unattended upgrade roughly once a day around 06:00 UTC. Windows does not apply security patches automatically and so for them this option is equivalent to None till further notice \
 * **SecurityPatch**: AKS downloads and updates the nodes with tested security updates. These updates honor the maintenance window settings and produce a new VHD that is used on new nodes. On some occasions it's not possible to apply the updates in place, in such cases the existing nodes will also be re-imaged to the newly produced VHD in order to apply the changes. This option incurs an extra cost of hosting the new Security Patch VHDs in your resource group for just in time consumption. \
 * **NodeImage**: AKS will update the nodes with a newly patched VHD containing security fixes and bugfixes on a weekly cadence. With the VHD update machines will be rolling reimaged to that VHD following maintenance windows and surge settings. No extra VHD cost is incurred when choosing this option as AKS hosts the images.
 */
export type NodeOSUpgradeChannel = string;

/** Known values of {@link Expander} that the service accepts. */
export enum KnownExpander {
  /** Selects the node group that will have the least idle CPU (if tied, unused memory) after scale-up. This is useful when you have different classes of nodes, for example, high CPU or high memory nodes, and only want to expand those when there are pending pods that need a lot of those resources. */
  LeastWaste = "least-waste",
  /** Selects the node group that would be able to schedule the most pods when scaling up. This is useful when you are using nodeSelector to make sure certain pods land on certain nodes. Note that this won't cause the autoscaler to select bigger nodes vs. smaller, as it can add multiple smaller nodes at once. */
  MostPods = "most-pods",
  /** Selects the node group that has the highest priority assigned by the user. It's configuration is described in more details [here](https:\//github.com\/kubernetes\/autoscaler\/blob\/master\/cluster-autoscaler\/expander\/priority\/readme.md). */
  Priority = "priority",
  /** Used when you don't have a particular need for the node groups to scale differently. */
  Random = "random",
}

/**
 * Defines values for Expander. \
 * {@link KnownExpander} can be used interchangeably with Expander,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **least-waste**: Selects the node group that will have the least idle CPU (if tied, unused memory) after scale-up. This is useful when you have different classes of nodes, for example, high CPU or high memory nodes, and only want to expand those when there are pending pods that need a lot of those resources. \
 * **most-pods**: Selects the node group that would be able to schedule the most pods when scaling up. This is useful when you are using nodeSelector to make sure certain pods land on certain nodes. Note that this won't cause the autoscaler to select bigger nodes vs. smaller, as it can add multiple smaller nodes at once. \
 * **priority**: Selects the node group that has the highest priority assigned by the user. It's configuration is described in more details [here](https:\/\/github.com\/kubernetes\/autoscaler\/blob\/master\/cluster-autoscaler\/expander\/priority\/readme.md). \
 * **random**: Used when you don't have a particular need for the node groups to scale differently.
 */
export type Expander = string;

/** Known values of {@link KeyVaultNetworkAccessTypes} that the service accepts. */
export enum KnownKeyVaultNetworkAccessTypes {
  /** Public */
  Public = "Public",
  /** Private */
  Private = "Private",
}

/**
 * Defines values for KeyVaultNetworkAccessTypes. \
 * {@link KnownKeyVaultNetworkAccessTypes} can be used interchangeably with KeyVaultNetworkAccessTypes,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Public** \
 * **Private**
 */
export type KeyVaultNetworkAccessTypes = string;

/** Known values of {@link NginxIngressControllerType} that the service accepts. */
export enum KnownNginxIngressControllerType {
  /** The default NginxIngressController will be created. Users can edit the default NginxIngressController Custom Resource to configure load balancer annotations. */
  AnnotationControlled = "AnnotationControlled",
  /** The default NginxIngressController will be created and the operator will provision an external loadbalancer with it. Any annotation to make the default loadbalancer internal will be overwritten. */
  External = "External",
  /** The default NginxIngressController will be created and the operator will provision an internal loadbalancer with it. Any annotation to make the default loadbalancer external will be overwritten. */
  Internal = "Internal",
  /** The default Ingress Controller will not be created. It will not be deleted by the system if it exists. Users should delete the default NginxIngressController Custom Resource manually if desired. */
  None = "None",
}

/**
 * Defines values for NginxIngressControllerType. \
 * {@link KnownNginxIngressControllerType} can be used interchangeably with NginxIngressControllerType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AnnotationControlled**: The default NginxIngressController will be created. Users can edit the default NginxIngressController Custom Resource to configure load balancer annotations. \
 * **External**: The default NginxIngressController will be created and the operator will provision an external loadbalancer with it. Any annotation to make the default loadbalancer internal will be overwritten. \
 * **Internal**: The default NginxIngressController will be created and the operator will provision an internal loadbalancer with it. Any annotation to make the default loadbalancer external will be overwritten. \
 * **None**: The default Ingress Controller will not be created. It will not be deleted by the system if it exists. Users should delete the default NginxIngressController Custom Resource manually if desired.
 */
export type NginxIngressControllerType = string;

/** Known values of {@link PublicNetworkAccess} that the service accepts. */
export enum KnownPublicNetworkAccess {
  /** Inbound\/Outbound to the managedCluster is allowed. */
  Enabled = "Enabled",
  /** Inbound traffic to managedCluster is disabled, traffic from managedCluster is allowed. */
  Disabled = "Disabled",
  /** Inbound\/Outbound traffic is managed by Microsoft.Network\/NetworkSecurityPerimeters. */
  SecuredByPerimeter = "SecuredByPerimeter",
}

/**
 * Defines values for PublicNetworkAccess. \
 * {@link KnownPublicNetworkAccess} can be used interchangeably with PublicNetworkAccess,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled**: Inbound\/Outbound to the managedCluster is allowed. \
 * **Disabled**: Inbound traffic to managedCluster is disabled, traffic from managedCluster is allowed. \
 * **SecuredByPerimeter**: Inbound\/Outbound traffic is managed by Microsoft.Network\/NetworkSecurityPerimeters.
 */
export type PublicNetworkAccess = string;

/** Known values of {@link AddonAutoscaling} that the service accepts. */
export enum KnownAddonAutoscaling {
  /** Feature to autoscale AKS-managed add-ons is enabled. The default VPA update mode is Initial mode. */
  Enabled = "Enabled",
  /** Feature to autoscale AKS-managed add-ons is disabled. */
  Disabled = "Disabled",
}

/**
 * Defines values for AddonAutoscaling. \
 * {@link KnownAddonAutoscaling} can be used interchangeably with AddonAutoscaling,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled**: Feature to autoscale AKS-managed add-ons is enabled. The default VPA update mode is Initial mode. \
 * **Disabled**: Feature to autoscale AKS-managed add-ons is disabled.
 */
export type AddonAutoscaling = string;

/** Known values of {@link Level} that the service accepts. */
export enum KnownLevel {
  /** Off */
  Off = "Off",
  /** Warning */
  Warning = "Warning",
  /** Enforcement */
  Enforcement = "Enforcement",
}

/**
 * Defines values for Level. \
 * {@link KnownLevel} can be used interchangeably with Level,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Off** \
 * **Warning** \
 * **Enforcement**
 */
export type Level = string;

/** Known values of {@link ServiceMeshMode} that the service accepts. */
export enum KnownServiceMeshMode {
  /** Istio deployed as an AKS addon. */
  Istio = "Istio",
  /** Mesh is disabled. */
  Disabled = "Disabled",
}

/**
 * Defines values for ServiceMeshMode. \
 * {@link KnownServiceMeshMode} can be used interchangeably with ServiceMeshMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Istio**: Istio deployed as an AKS addon. \
 * **Disabled**: Mesh is disabled.
 */
export type ServiceMeshMode = string;

/** Known values of {@link IstioIngressGatewayMode} that the service accepts. */
export enum KnownIstioIngressGatewayMode {
  /** The ingress gateway is assigned a public IP address and is publicly accessible. */
  External = "External",
  /** The ingress gateway is assigned an internal IP address and cannot is accessed publicly. */
  Internal = "Internal",
}

/**
 * Defines values for IstioIngressGatewayMode. \
 * {@link KnownIstioIngressGatewayMode} can be used interchangeably with IstioIngressGatewayMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **External**: The ingress gateway is assigned a public IP address and is publicly accessible. \
 * **Internal**: The ingress gateway is assigned an internal IP address and cannot is accessed publicly.
 */
export type IstioIngressGatewayMode = string;

/** Known values of {@link NodeProvisioningMode} that the service accepts. */
export enum KnownNodeProvisioningMode {
  /** Nodes are provisioned manually by the user */
  Manual = "Manual",
  /** Nodes are provisioned automatically by AKS using Karpenter. Fixed size Node Pools can still be created, but autoscaling Node Pools cannot be. (See aka.ms\/aks\/nap for more details). */
  Auto = "Auto",
}

/**
 * Defines values for NodeProvisioningMode. \
 * {@link KnownNodeProvisioningMode} can be used interchangeably with NodeProvisioningMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Manual**: Nodes are provisioned manually by the user \
 * **Auto**: Nodes are provisioned automatically by AKS using Karpenter. Fixed size Node Pools can still be created, but autoscaling Node Pools cannot be. (See aka.ms\/aks\/nap for more details).
 */
export type NodeProvisioningMode = string;

/** Known values of {@link ArtifactSource} that the service accepts. */
export enum KnownArtifactSource {
  /** pull images from Azure Container Registry with cache */
  Cache = "Cache",
  /** pull images from Microsoft Artifact Registry */
  Direct = "Direct",
}

/**
 * Defines values for ArtifactSource. \
 * {@link KnownArtifactSource} can be used interchangeably with ArtifactSource,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Cache**: pull images from Azure Container Registry with cache \
 * **Direct**: pull images from Microsoft Artifact Registry
 */
export type ArtifactSource = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key",
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link Format} that the service accepts. */
export enum KnownFormat {
  /** Return azure auth-provider kubeconfig. This format is deprecated in v1.22 and will be fully removed in v1.26. See: https:\//aka.ms\/k8s\/changes-1-26. */
  Azure = "azure",
  /** Return exec format kubeconfig. This format requires kubelogin binary in the path. */
  Exec = "exec",
}

/**
 * Defines values for Format. \
 * {@link KnownFormat} can be used interchangeably with Format,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **azure**: Return azure auth-provider kubeconfig. This format is deprecated in v1.22 and will be fully removed in v1.26. See: https:\/\/aka.ms\/k8s\/changes-1-26. \
 * **exec**: Return exec format kubeconfig. This format requires kubelogin binary in the path.
 */
export type Format = string;

/** Known values of {@link WeekDay} that the service accepts. */
export enum KnownWeekDay {
  /** Sunday */
  Sunday = "Sunday",
  /** Monday */
  Monday = "Monday",
  /** Tuesday */
  Tuesday = "Tuesday",
  /** Wednesday */
  Wednesday = "Wednesday",
  /** Thursday */
  Thursday = "Thursday",
  /** Friday */
  Friday = "Friday",
  /** Saturday */
  Saturday = "Saturday",
}

/**
 * Defines values for WeekDay. \
 * {@link KnownWeekDay} can be used interchangeably with WeekDay,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Sunday** \
 * **Monday** \
 * **Tuesday** \
 * **Wednesday** \
 * **Thursday** \
 * **Friday** \
 * **Saturday**
 */
export type WeekDay = string;

/** Known values of {@link Type} that the service accepts. */
export enum KnownType {
  /** First. */
  First = "First",
  /** Second. */
  Second = "Second",
  /** Third. */
  Third = "Third",
  /** Fourth. */
  Fourth = "Fourth",
  /** Last. */
  Last = "Last",
}

/**
 * Defines values for Type. \
 * {@link KnownType} can be used interchangeably with Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **First**: First. \
 * **Second**: Second. \
 * **Third**: Third. \
 * **Fourth**: Fourth. \
 * **Last**: Last.
 */
export type Type = string;

/** Known values of {@link PrivateEndpointConnectionProvisioningState} that the service accepts. */
export enum KnownPrivateEndpointConnectionProvisioningState {
  /** Canceled */
  Canceled = "Canceled",
  /** Creating */
  Creating = "Creating",
  /** Deleting */
  Deleting = "Deleting",
  /** Failed */
  Failed = "Failed",
  /** Succeeded */
  Succeeded = "Succeeded",
}

/**
 * Defines values for PrivateEndpointConnectionProvisioningState. \
 * {@link KnownPrivateEndpointConnectionProvisioningState} can be used interchangeably with PrivateEndpointConnectionProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Canceled** \
 * **Creating** \
 * **Deleting** \
 * **Failed** \
 * **Succeeded**
 */
export type PrivateEndpointConnectionProvisioningState = string;

/** Known values of {@link ConnectionStatus} that the service accepts. */
export enum KnownConnectionStatus {
  /** Pending */
  Pending = "Pending",
  /** Approved */
  Approved = "Approved",
  /** Rejected */
  Rejected = "Rejected",
  /** Disconnected */
  Disconnected = "Disconnected",
}

/**
 * Defines values for ConnectionStatus. \
 * {@link KnownConnectionStatus} can be used interchangeably with ConnectionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Approved** \
 * **Rejected** \
 * **Disconnected**
 */
export type ConnectionStatus = string;

/** Known values of {@link SnapshotType} that the service accepts. */
export enum KnownSnapshotType {
  /** The snapshot is a snapshot of a node pool. */
  NodePool = "NodePool",
  /** The snapshot is a snapshot of a managed cluster. */
  ManagedCluster = "ManagedCluster",
}

/**
 * Defines values for SnapshotType. \
 * {@link KnownSnapshotType} can be used interchangeably with SnapshotType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NodePool**: The snapshot is a snapshot of a node pool. \
 * **ManagedCluster**: The snapshot is a snapshot of a managed cluster.
 */
export type SnapshotType = string;

/** Known values of {@link TrustedAccessRoleBindingProvisioningState} that the service accepts. */
export enum KnownTrustedAccessRoleBindingProvisioningState {
  /** Canceled */
  Canceled = "Canceled",
  /** Deleting */
  Deleting = "Deleting",
  /** Failed */
  Failed = "Failed",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Updating */
  Updating = "Updating",
}

/**
 * Defines values for TrustedAccessRoleBindingProvisioningState. \
 * {@link KnownTrustedAccessRoleBindingProvisioningState} can be used interchangeably with TrustedAccessRoleBindingProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Canceled** \
 * **Deleting** \
 * **Failed** \
 * **Succeeded** \
 * **Updating**
 */
export type TrustedAccessRoleBindingProvisioningState = string;

/** Known values of {@link GuardrailsSupport} that the service accepts. */
export enum KnownGuardrailsSupport {
  /** The version is preview. It is not recommended to use preview versions on critical production clusters. The preview version may not support all use-cases. */
  Preview = "Preview",
  /** The version is stable and can be used on critical production clusters. */
  Stable = "Stable",
}

/**
 * Defines values for GuardrailsSupport. \
 * {@link KnownGuardrailsSupport} can be used interchangeably with GuardrailsSupport,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Preview**: The version is preview. It is not recommended to use preview versions on critical production clusters. The preview version may not support all use-cases. \
 * **Stable**: The version is stable and can be used on critical production clusters.
 */
export type GuardrailsSupport = string;

/** Known values of {@link SafeguardsSupport} that the service accepts. */
export enum KnownSafeguardsSupport {
  /** The version is preview. It is not recommended to use preview versions on critical production clusters. The preview version may not support all use-cases. */
  Preview = "Preview",
  /** The version is stable and can be used on critical production clusters. */
  Stable = "Stable",
}

/**
 * Defines values for SafeguardsSupport. \
 * {@link KnownSafeguardsSupport} can be used interchangeably with SafeguardsSupport,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Preview**: The version is preview. It is not recommended to use preview versions on critical production clusters. The preview version may not support all use-cases. \
 * **Stable**: The version is stable and can be used on critical production clusters.
 */
export type SafeguardsSupport = string;

/** Known values of {@link Operator} that the service accepts. */
export enum KnownOperator {
  /** The value of the key should be in the given list. */
  In = "In",
  /** The value of the key should not be in the given list. */
  NotIn = "NotIn",
  /** The value of the key should exist. */
  Exists = "Exists",
  /** The value of the key should not exist. */
  DoesNotExist = "DoesNotExist",
}

/**
 * Defines values for Operator. \
 * {@link KnownOperator} can be used interchangeably with Operator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **In**: The value of the key should be in the given list. \
 * **NotIn**: The value of the key should not be in the given list. \
 * **Exists**: The value of the key should exist. \
 * **DoesNotExist**: The value of the key should not exist.
 */
export type Operator = string;
/** Defines values for ResourceIdentityType. */
export type ResourceIdentityType = "SystemAssigned" | "UserAssigned" | "None";

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface ManagedClustersListKubernetesVersionsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listKubernetesVersions operation. */
export type ManagedClustersListKubernetesVersionsResponse =
  KubernetesVersionListResult;

/** Optional parameters. */
export interface ManagedClustersListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ManagedClustersListResponse = ManagedClusterListResult;

/** Optional parameters. */
export interface ManagedClustersListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type ManagedClustersListByResourceGroupResponse =
  ManagedClusterListResult;

/** Optional parameters. */
export interface ManagedClustersGetUpgradeProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getUpgradeProfile operation. */
export type ManagedClustersGetUpgradeProfileResponse =
  ManagedClusterUpgradeProfile;

/** Optional parameters. */
export interface ManagedClustersGetAccessProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getAccessProfile operation. */
export type ManagedClustersGetAccessProfileResponse =
  ManagedClusterAccessProfile;

/** Optional parameters. */
export interface ManagedClustersListClusterAdminCredentialsOptionalParams
  extends coreClient.OperationOptions {
  /** server fqdn type for credentials to be returned */
  serverFqdn?: string;
}

/** Contains response data for the listClusterAdminCredentials operation. */
export type ManagedClustersListClusterAdminCredentialsResponse =
  CredentialResults;

/** Optional parameters. */
export interface ManagedClustersListClusterUserCredentialsOptionalParams
  extends coreClient.OperationOptions {
  /** server fqdn type for credentials to be returned */
  serverFqdn?: string;
  /** Only apply to AAD clusters, specifies the format of returned kubeconfig. Format 'azure' will return azure auth-provider kubeconfig; format 'exec' will return exec format kubeconfig, which requires kubelogin binary in the path. */
  format?: Format;
}

/** Contains response data for the listClusterUserCredentials operation. */
export type ManagedClustersListClusterUserCredentialsResponse =
  CredentialResults;

/** Optional parameters. */
export interface ManagedClustersListClusterMonitoringUserCredentialsOptionalParams
  extends coreClient.OperationOptions {
  /** server fqdn type for credentials to be returned */
  serverFqdn?: string;
}

/** Contains response data for the listClusterMonitoringUserCredentials operation. */
export type ManagedClustersListClusterMonitoringUserCredentialsResponse =
  CredentialResults;

/** Optional parameters. */
export interface ManagedClustersGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ManagedClustersGetResponse = ManagedCluster;

/** Optional parameters. */
export interface ManagedClustersCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** The request should only proceed if an entity matches this string. */
  ifMatch?: string;
  /** The request should only proceed if no entity matches this string. */
  ifNoneMatch?: string;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ManagedClustersCreateOrUpdateResponse = ManagedCluster;

/** Optional parameters. */
export interface ManagedClustersUpdateTagsOptionalParams
  extends coreClient.OperationOptions {
  /** The request should only proceed if an entity matches this string. */
  ifMatch?: string;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the updateTags operation. */
export type ManagedClustersUpdateTagsResponse = ManagedCluster;

/** Optional parameters. */
export interface ManagedClustersDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** The request should only proceed if an entity matches this string. */
  ifMatch?: string;
  /** ignore-pod-disruption-budget=true to delete those pods on a node without considering Pod Disruption Budget */
  ignorePodDisruptionBudget?: boolean;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type ManagedClustersDeleteResponse = ManagedClustersDeleteHeaders;

/** Optional parameters. */
export interface ManagedClustersResetServicePrincipalProfileOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ManagedClustersResetAADProfileOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ManagedClustersAbortLatestOperationOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the abortLatestOperation operation. */
export type ManagedClustersAbortLatestOperationResponse =
  ManagedClustersAbortLatestOperationHeaders;

/** Optional parameters. */
export interface ManagedClustersRotateClusterCertificatesOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the rotateClusterCertificates operation. */
export type ManagedClustersRotateClusterCertificatesResponse =
  ManagedClustersRotateClusterCertificatesHeaders;

/** Optional parameters. */
export interface ManagedClustersRotateServiceAccountSigningKeysOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the rotateServiceAccountSigningKeys operation. */
export type ManagedClustersRotateServiceAccountSigningKeysResponse =
  ManagedClustersRotateServiceAccountSigningKeysHeaders;

/** Optional parameters. */
export interface ManagedClustersStopOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the stop operation. */
export type ManagedClustersStopResponse = ManagedClustersStopHeaders;

/** Optional parameters. */
export interface ManagedClustersStartOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the start operation. */
export type ManagedClustersStartResponse = ManagedClustersStartHeaders;

/** Optional parameters. */
export interface ManagedClustersRunCommandOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the runCommand operation. */
export type ManagedClustersRunCommandResponse = RunCommandResult;

/** Optional parameters. */
export interface ManagedClustersGetCommandResultOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getCommandResult operation. */
export type ManagedClustersGetCommandResultResponse = RunCommandResult;

/** Optional parameters. */
export interface ManagedClustersListOutboundNetworkDependenciesEndpointsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listOutboundNetworkDependenciesEndpoints operation. */
export type ManagedClustersListOutboundNetworkDependenciesEndpointsResponse =
  OutboundEnvironmentEndpointCollection;

/** Optional parameters. */
export interface ManagedClustersGetGuardrailsVersionsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getGuardrailsVersions operation. */
export type ManagedClustersGetGuardrailsVersionsResponse =
  GuardrailsAvailableVersion;

/** Optional parameters. */
export interface ManagedClustersListGuardrailsVersionsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listGuardrailsVersions operation. */
export type ManagedClustersListGuardrailsVersionsResponse =
  GuardrailsAvailableVersionsList;

/** Optional parameters. */
export interface ManagedClustersGetSafeguardsVersionsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getSafeguardsVersions operation. */
export type ManagedClustersGetSafeguardsVersionsResponse =
  SafeguardsAvailableVersion;

/** Optional parameters. */
export interface ManagedClustersListSafeguardsVersionsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listSafeguardsVersions operation. */
export type ManagedClustersListSafeguardsVersionsResponse =
  SafeguardsAvailableVersionsList;

/** Optional parameters. */
export interface ManagedClustersListMeshRevisionProfilesOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listMeshRevisionProfiles operation. */
export type ManagedClustersListMeshRevisionProfilesResponse =
  MeshRevisionProfileList;

/** Optional parameters. */
export interface ManagedClustersGetMeshRevisionProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getMeshRevisionProfile operation. */
export type ManagedClustersGetMeshRevisionProfileResponse = MeshRevisionProfile;

/** Optional parameters. */
export interface ManagedClustersListMeshUpgradeProfilesOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listMeshUpgradeProfiles operation. */
export type ManagedClustersListMeshUpgradeProfilesResponse =
  MeshUpgradeProfileList;

/** Optional parameters. */
export interface ManagedClustersGetMeshUpgradeProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getMeshUpgradeProfile operation. */
export type ManagedClustersGetMeshUpgradeProfileResponse = MeshUpgradeProfile;

/** Optional parameters. */
export interface ManagedClustersRebalanceLoadBalancersOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the rebalanceLoadBalancers operation. */
export type ManagedClustersRebalanceLoadBalancersResponse =
  ManagedClustersRebalanceLoadBalancersHeaders;

/** Optional parameters. */
export interface ManagedClustersListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ManagedClustersListNextResponse = ManagedClusterListResult;

/** Optional parameters. */
export interface ManagedClustersListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type ManagedClustersListByResourceGroupNextResponse =
  ManagedClusterListResult;

/** Optional parameters. */
export interface ManagedClustersListOutboundNetworkDependenciesEndpointsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listOutboundNetworkDependenciesEndpointsNext operation. */
export type ManagedClustersListOutboundNetworkDependenciesEndpointsNextResponse =
  OutboundEnvironmentEndpointCollection;

/** Optional parameters. */
export interface ManagedClustersListGuardrailsVersionsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listGuardrailsVersionsNext operation. */
export type ManagedClustersListGuardrailsVersionsNextResponse =
  GuardrailsAvailableVersionsList;

/** Optional parameters. */
export interface ManagedClustersListSafeguardsVersionsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listSafeguardsVersionsNext operation. */
export type ManagedClustersListSafeguardsVersionsNextResponse =
  SafeguardsAvailableVersionsList;

/** Optional parameters. */
export interface ManagedClustersListMeshRevisionProfilesNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listMeshRevisionProfilesNext operation. */
export type ManagedClustersListMeshRevisionProfilesNextResponse =
  MeshRevisionProfileList;

/** Optional parameters. */
export interface ManagedClustersListMeshUpgradeProfilesNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listMeshUpgradeProfilesNext operation. */
export type ManagedClustersListMeshUpgradeProfilesNextResponse =
  MeshUpgradeProfileList;

/** Optional parameters. */
export interface MaintenanceConfigurationsListByManagedClusterOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByManagedCluster operation. */
export type MaintenanceConfigurationsListByManagedClusterResponse =
  MaintenanceConfigurationListResult;

/** Optional parameters. */
export interface MaintenanceConfigurationsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type MaintenanceConfigurationsGetResponse = MaintenanceConfiguration;

/** Optional parameters. */
export interface MaintenanceConfigurationsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type MaintenanceConfigurationsCreateOrUpdateResponse =
  MaintenanceConfiguration;

/** Optional parameters. */
export interface MaintenanceConfigurationsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface MaintenanceConfigurationsListByManagedClusterNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByManagedClusterNext operation. */
export type MaintenanceConfigurationsListByManagedClusterNextResponse =
  MaintenanceConfigurationListResult;

/** Optional parameters. */
export interface AgentPoolsAbortLatestOperationOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the abortLatestOperation operation. */
export type AgentPoolsAbortLatestOperationResponse =
  AgentPoolsAbortLatestOperationHeaders;

/** Optional parameters. */
export interface AgentPoolsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type AgentPoolsListResponse = AgentPoolListResult;

/** Optional parameters. */
export interface AgentPoolsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AgentPoolsGetResponse = AgentPool;

/** Optional parameters. */
export interface AgentPoolsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** The request should only proceed if an entity matches this string. */
  ifMatch?: string;
  /** The request should only proceed if no entity matches this string. */
  ifNoneMatch?: string;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type AgentPoolsCreateOrUpdateResponse = AgentPool;

/** Optional parameters. */
export interface AgentPoolsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** The request should only proceed if an entity matches this string. */
  ifMatch?: string;
  /** ignore-pod-disruption-budget=true to delete those pods on a node without considering Pod Disruption Budget */
  ignorePodDisruptionBudget?: boolean;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type AgentPoolsDeleteResponse = AgentPoolsDeleteHeaders;

/** Optional parameters. */
export interface AgentPoolsGetUpgradeProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getUpgradeProfile operation. */
export type AgentPoolsGetUpgradeProfileResponse = AgentPoolUpgradeProfile;

/** Optional parameters. */
export interface AgentPoolsDeleteMachinesOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the deleteMachines operation. */
export type AgentPoolsDeleteMachinesResponse = AgentPoolsDeleteMachinesHeaders;

/** Optional parameters. */
export interface AgentPoolsGetAvailableAgentPoolVersionsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getAvailableAgentPoolVersions operation. */
export type AgentPoolsGetAvailableAgentPoolVersionsResponse =
  AgentPoolAvailableVersions;

/** Optional parameters. */
export interface AgentPoolsUpgradeNodeImageVersionOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface AgentPoolsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type AgentPoolsListNextResponse = AgentPoolListResult;

/** Optional parameters. */
export interface MachinesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type MachinesListResponse = MachineListResult;

/** Optional parameters. */
export interface MachinesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type MachinesGetResponse = Machine;

/** Optional parameters. */
export interface MachinesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type MachinesListNextResponse = MachineListResult;

/** Optional parameters. */
export interface PrivateEndpointConnectionsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type PrivateEndpointConnectionsListResponse =
  PrivateEndpointConnectionListResult;

/** Optional parameters. */
export interface PrivateEndpointConnectionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;

/** Optional parameters. */
export interface PrivateEndpointConnectionsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type PrivateEndpointConnectionsUpdateResponse =
  PrivateEndpointConnection;

/** Optional parameters. */
export interface PrivateEndpointConnectionsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface PrivateLinkResourcesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type PrivateLinkResourcesListResponse = PrivateLinkResourcesListResult;

/** Optional parameters. */
export interface ResolvePrivateLinkServiceIdPostOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the post operation. */
export type ResolvePrivateLinkServiceIdPostResponse = PrivateLinkResource;

/** Optional parameters. */
export interface OperationStatusResultListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationStatusResultListResponse = OperationStatusResultList;

/** Optional parameters. */
export interface OperationStatusResultGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type OperationStatusResultGetResponse = OperationStatusResult;

/** Optional parameters. */
export interface OperationStatusResultGetByAgentPoolOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByAgentPool operation. */
export type OperationStatusResultGetByAgentPoolResponse = OperationStatusResult;

/** Optional parameters. */
export interface OperationStatusResultListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationStatusResultListNextResponse = OperationStatusResultList;

/** Optional parameters. */
export interface SnapshotsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type SnapshotsListResponse = SnapshotListResult;

/** Optional parameters. */
export interface SnapshotsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type SnapshotsListByResourceGroupResponse = SnapshotListResult;

/** Optional parameters. */
export interface SnapshotsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SnapshotsGetResponse = Snapshot;

/** Optional parameters. */
export interface SnapshotsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type SnapshotsCreateOrUpdateResponse = Snapshot;

/** Optional parameters. */
export interface SnapshotsUpdateTagsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the updateTags operation. */
export type SnapshotsUpdateTagsResponse = Snapshot;

/** Optional parameters. */
export interface SnapshotsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface SnapshotsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type SnapshotsListNextResponse = SnapshotListResult;

/** Optional parameters. */
export interface SnapshotsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type SnapshotsListByResourceGroupNextResponse = SnapshotListResult;

/** Optional parameters. */
export interface ManagedClusterSnapshotsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ManagedClusterSnapshotsListResponse =
  ManagedClusterSnapshotListResult;

/** Optional parameters. */
export interface ManagedClusterSnapshotsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type ManagedClusterSnapshotsListByResourceGroupResponse =
  ManagedClusterSnapshotListResult;

/** Optional parameters. */
export interface ManagedClusterSnapshotsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ManagedClusterSnapshotsGetResponse = ManagedClusterSnapshot;

/** Optional parameters. */
export interface ManagedClusterSnapshotsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type ManagedClusterSnapshotsCreateOrUpdateResponse =
  ManagedClusterSnapshot;

/** Optional parameters. */
export interface ManagedClusterSnapshotsUpdateTagsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the updateTags operation. */
export type ManagedClusterSnapshotsUpdateTagsResponse = ManagedClusterSnapshot;

/** Optional parameters. */
export interface ManagedClusterSnapshotsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ManagedClusterSnapshotsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ManagedClusterSnapshotsListNextResponse =
  ManagedClusterSnapshotListResult;

/** Optional parameters. */
export interface ManagedClusterSnapshotsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type ManagedClusterSnapshotsListByResourceGroupNextResponse =
  ManagedClusterSnapshotListResult;

/** Optional parameters. */
export interface TrustedAccessRolesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type TrustedAccessRolesListResponse = TrustedAccessRoleListResult;

/** Optional parameters. */
export interface TrustedAccessRolesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type TrustedAccessRolesListNextResponse = TrustedAccessRoleListResult;

/** Optional parameters. */
export interface TrustedAccessRoleBindingsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type TrustedAccessRoleBindingsListResponse =
  TrustedAccessRoleBindingListResult;

/** Optional parameters. */
export interface TrustedAccessRoleBindingsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type TrustedAccessRoleBindingsGetResponse = TrustedAccessRoleBinding;

/** Optional parameters. */
export interface TrustedAccessRoleBindingsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type TrustedAccessRoleBindingsCreateOrUpdateResponse =
  TrustedAccessRoleBinding;

/** Optional parameters. */
export interface TrustedAccessRoleBindingsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type TrustedAccessRoleBindingsDeleteResponse =
  TrustedAccessRoleBindingsDeleteHeaders;

/** Optional parameters. */
export interface TrustedAccessRoleBindingsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type TrustedAccessRoleBindingsListNextResponse =
  TrustedAccessRoleBindingListResult;

/** Optional parameters. */
export interface LoadBalancersListByManagedClusterOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByManagedCluster operation. */
export type LoadBalancersListByManagedClusterResponse = LoadBalancerListResult;

/** Optional parameters. */
export interface LoadBalancersGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type LoadBalancersGetResponse = LoadBalancer;

/** Optional parameters. */
export interface LoadBalancersCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Name of the public load balancer. There will be an internal load balancer created if needed, and the name will be `<name>-internal`. The internal lb shares the same configurations as the external one. The internal lbs are not needed to be included in LoadBalancer list. There must be a name of kubernetes in the list. */
  name?: string;
  /** Required field. A string value that must specify the ID of an existing agent pool. All nodes in the given pool will always be added to this load balancer. This agent pool must have at least one node and minCount>=1 for autoscaling operations. An agent pool can only be the primary pool for a single load balancer. */
  primaryAgentPoolName?: string;
  /** Whether to automatically place services on the load balancer. If not supplied, the default value is true. If set to false manually, both of the external and the internal load balancer will not be selected for services unless they explicitly target it. */
  allowServicePlacement?: boolean;
  /** Only services that must match this selector can be placed on this load balancer. */
  serviceLabelSelector?: LabelSelector;
  /** Services created in namespaces that match the selector can be placed on this load balancer. */
  serviceNamespaceSelector?: LabelSelector;
  /** Nodes that match this selector will be possible members of this load balancer. */
  nodeSelector?: LabelSelector;
}

/** Contains response data for the createOrUpdate operation. */
export type LoadBalancersCreateOrUpdateResponse = LoadBalancer;

/** Optional parameters. */
export interface LoadBalancersDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type LoadBalancersDeleteResponse = LoadBalancersDeleteHeaders;

/** Optional parameters. */
export interface LoadBalancersListByManagedClusterNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByManagedClusterNext operation. */
export type LoadBalancersListByManagedClusterNextResponse =
  LoadBalancerListResult;

/** Optional parameters. */
export interface ContainerServiceClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
