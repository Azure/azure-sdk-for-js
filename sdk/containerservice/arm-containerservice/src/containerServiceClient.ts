/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreAuth from "@azure/core-auth";
import {
  OperationsImpl,
  ManagedClustersImpl,
  MaintenanceConfigurationsImpl,
  AgentPoolsImpl,
  PrivateEndpointConnectionsImpl,
  PrivateLinkResourcesImpl,
  ResolvePrivateLinkServiceIdImpl,
  SnapshotsImpl
} from "./operations";
import {
  Operations,
  ManagedClusters,
  MaintenanceConfigurations,
  AgentPools,
  PrivateEndpointConnections,
  PrivateLinkResources,
  ResolvePrivateLinkServiceId,
  Snapshots
} from "./operationsInterfaces";
import { ContainerServiceClientContext } from "./containerServiceClientContext";
import { ContainerServiceClientOptionalParams } from "./models";

export class ContainerServiceClient extends ContainerServiceClientContext {
  /**
   * Initializes a new instance of the ContainerServiceClient class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.
   *                       The subscription ID forms part of the URI for every service call.
   * @param options The parameter options
   */
  constructor(
    credentials: coreAuth.TokenCredential,
    subscriptionId: string,
    options?: ContainerServiceClientOptionalParams
  ) {
    super(credentials, subscriptionId, options);
    this.operations = new OperationsImpl(this);
    this.managedClusters = new ManagedClustersImpl(this);
    this.maintenanceConfigurations = new MaintenanceConfigurationsImpl(this);
    this.agentPools = new AgentPoolsImpl(this);
    this.privateEndpointConnections = new PrivateEndpointConnectionsImpl(this);
    this.privateLinkResources = new PrivateLinkResourcesImpl(this);
    this.resolvePrivateLinkServiceId = new ResolvePrivateLinkServiceIdImpl(
      this
    );
    this.snapshots = new SnapshotsImpl(this);
  }

  operations: Operations;
  managedClusters: ManagedClusters;
  maintenanceConfigurations: MaintenanceConfigurations;
  agentPools: AgentPools;
  privateEndpointConnections: PrivateEndpointConnections;
  privateLinkResources: PrivateLinkResources;
  resolvePrivateLinkServiceId: ResolvePrivateLinkServiceId;
  snapshots: Snapshots;
}
