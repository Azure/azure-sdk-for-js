// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import type { PagedAsyncIterableIterator } from "@azure/core-paging";
import type { SimplePollerLike, OperationState } from "@azure/core-lro";
import type {
  JWTAuthenticator,
  JWTAuthenticatorsListByManagedClusterOptionalParams,
  JWTAuthenticatorsGetOptionalParams,
  JWTAuthenticatorsGetResponse,
  JWTAuthenticatorsCreateOrUpdateOptionalParams,
  JWTAuthenticatorsCreateOrUpdateResponse,
  JWTAuthenticatorsDeleteOptionalParams,
  JWTAuthenticatorsDeleteResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a JWTAuthenticators. */
export interface JWTAuthenticators {
  /**
   * Gets a list of JWT authenticators in the specified managed cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param options The options parameters.
   */
  listByManagedCluster(
    resourceGroupName: string,
    resourceName: string,
    options?: JWTAuthenticatorsListByManagedClusterOptionalParams,
  ): PagedAsyncIterableIterator<JWTAuthenticator>;
  /**
   * Gets the specified JWT authenticator of a managed cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param jwtAuthenticatorName The name of the JWT authenticator.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    resourceName: string,
    jwtAuthenticatorName: string,
    options?: JWTAuthenticatorsGetOptionalParams,
  ): Promise<JWTAuthenticatorsGetResponse>;
  /**
   * Creates or updates JWT authenticator in the managed cluster and updates the managed cluster to apply
   * the settings.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param jwtAuthenticatorName The name of the JWT authenticator.
   * @param parameters The JWT authenticator to create or update.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    resourceName: string,
    jwtAuthenticatorName: string,
    parameters: JWTAuthenticator,
    options?: JWTAuthenticatorsCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<JWTAuthenticatorsCreateOrUpdateResponse>,
      JWTAuthenticatorsCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates JWT authenticator in the managed cluster and updates the managed cluster to apply
   * the settings.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param jwtAuthenticatorName The name of the JWT authenticator.
   * @param parameters The JWT authenticator to create or update.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    resourceName: string,
    jwtAuthenticatorName: string,
    parameters: JWTAuthenticator,
    options?: JWTAuthenticatorsCreateOrUpdateOptionalParams,
  ): Promise<JWTAuthenticatorsCreateOrUpdateResponse>;
  /**
   * Deletes a JWT authenticator and updates the managed cluster to apply the settings.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param jwtAuthenticatorName The name of the JWT authenticator.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    resourceName: string,
    jwtAuthenticatorName: string,
    options?: JWTAuthenticatorsDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<JWTAuthenticatorsDeleteResponse>,
      JWTAuthenticatorsDeleteResponse
    >
  >;
  /**
   * Deletes a JWT authenticator and updates the managed cluster to apply the settings.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param jwtAuthenticatorName The name of the JWT authenticator.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    resourceName: string,
    jwtAuthenticatorName: string,
    options?: JWTAuthenticatorsDeleteOptionalParams,
  ): Promise<JWTAuthenticatorsDeleteResponse>;
}
