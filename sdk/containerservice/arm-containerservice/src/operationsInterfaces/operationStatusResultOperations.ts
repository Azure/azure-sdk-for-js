/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  OperationStatusResult,
  OperationStatusResultListOptionalParams,
  OperationStatusResultGetOptionalParams,
  OperationStatusResultGetResponse,
  OperationStatusResultGetByAgentPoolOptionalParams,
  OperationStatusResultGetByAgentPoolResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a OperationStatusResultOperations. */
export interface OperationStatusResultOperations {
  /**
   * Gets a list of operations in the specified managedCluster
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    resourceName: string,
    options?: OperationStatusResultListOptionalParams,
  ): PagedAsyncIterableIterator<OperationStatusResult>;
  /**
   * Get the status of a specific operation in the specified managed cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param operationId The ID of an ongoing async operation.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    resourceName: string,
    operationId: string,
    options?: OperationStatusResultGetOptionalParams,
  ): Promise<OperationStatusResultGetResponse>;
  /**
   * Get the status of a specific operation in the specified agent pool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param agentPoolName The name of the agent pool.
   * @param operationId The ID of an ongoing async operation.
   * @param options The options parameters.
   */
  getByAgentPool(
    resourceGroupName: string,
    resourceName: string,
    agentPoolName: string,
    operationId: string,
    options?: OperationStatusResultGetByAgentPoolOptionalParams,
  ): Promise<OperationStatusResultGetByAgentPoolResponse>;
}
