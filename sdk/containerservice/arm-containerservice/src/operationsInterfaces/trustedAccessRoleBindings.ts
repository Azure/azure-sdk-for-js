/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  TrustedAccessRoleBinding,
  TrustedAccessRoleBindingsListOptionalParams,
  TrustedAccessRoleBindingsGetOptionalParams,
  TrustedAccessRoleBindingsGetResponse,
  TrustedAccessRoleBindingsCreateOrUpdateOptionalParams,
  TrustedAccessRoleBindingsCreateOrUpdateResponse,
  TrustedAccessRoleBindingsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a TrustedAccessRoleBindings. */
export interface TrustedAccessRoleBindings {
  /**
   * List trusted access role bindings.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    resourceName: string,
    options?: TrustedAccessRoleBindingsListOptionalParams
  ): PagedAsyncIterableIterator<TrustedAccessRoleBinding>;
  /**
   * Get a trusted access role binding.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param trustedAccessRoleBindingName The name of trusted access role binding.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    resourceName: string,
    trustedAccessRoleBindingName: string,
    options?: TrustedAccessRoleBindingsGetOptionalParams
  ): Promise<TrustedAccessRoleBindingsGetResponse>;
  /**
   * Create or update a trusted access role binding
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param trustedAccessRoleBindingName The name of trusted access role binding.
   * @param trustedAccessRoleBinding A trusted access role binding
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    resourceName: string,
    trustedAccessRoleBindingName: string,
    trustedAccessRoleBinding: TrustedAccessRoleBinding,
    options?: TrustedAccessRoleBindingsCreateOrUpdateOptionalParams
  ): Promise<TrustedAccessRoleBindingsCreateOrUpdateResponse>;
  /**
   * Delete a trusted access role binding.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param trustedAccessRoleBindingName The name of trusted access role binding.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    resourceName: string,
    trustedAccessRoleBindingName: string,
    options?: TrustedAccessRoleBindingsDeleteOptionalParams
  ): Promise<void>;
}
