/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  LoadBalancer,
  LoadBalancersListByManagedClusterOptionalParams,
  LoadBalancersGetOptionalParams,
  LoadBalancersGetResponse,
  LoadBalancersCreateOrUpdateOptionalParams,
  LoadBalancersCreateOrUpdateResponse,
  LoadBalancersDeleteOptionalParams,
  LoadBalancersDeleteResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a LoadBalancers. */
export interface LoadBalancers {
  /**
   * Gets a list of load balancers in the specified managed cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param options The options parameters.
   */
  listByManagedCluster(
    resourceGroupName: string,
    resourceName: string,
    options?: LoadBalancersListByManagedClusterOptionalParams,
  ): PagedAsyncIterableIterator<LoadBalancer>;
  /**
   * Gets the specified load balancer.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param loadBalancerName The name of the load balancer.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    resourceName: string,
    loadBalancerName: string,
    options?: LoadBalancersGetOptionalParams,
  ): Promise<LoadBalancersGetResponse>;
  /**
   * Creates or updates a load balancer in the specified managed cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param loadBalancerName The name of the load balancer.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    resourceName: string,
    loadBalancerName: string,
    options?: LoadBalancersCreateOrUpdateOptionalParams,
  ): Promise<LoadBalancersCreateOrUpdateResponse>;
  /**
   * Deletes a load balancer in the specified managed cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param loadBalancerName The name of the load balancer.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    resourceName: string,
    loadBalancerName: string,
    options?: LoadBalancersDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LoadBalancersDeleteResponse>,
      LoadBalancersDeleteResponse
    >
  >;
  /**
   * Deletes a load balancer in the specified managed cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param loadBalancerName The name of the load balancer.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    resourceName: string,
    loadBalancerName: string,
    options?: LoadBalancersDeleteOptionalParams,
  ): Promise<LoadBalancersDeleteResponse>;
}
