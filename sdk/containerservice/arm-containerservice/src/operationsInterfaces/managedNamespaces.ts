/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import type { PagedAsyncIterableIterator } from "@azure/core-paging";
import type { SimplePollerLike, OperationState } from "@azure/core-lro";
import type {
  ManagedNamespace,
  ManagedNamespacesListByManagedClusterOptionalParams,
  ManagedNamespacesGetOptionalParams,
  ManagedNamespacesGetResponse,
  ManagedNamespacesCreateOrUpdateOptionalParams,
  ManagedNamespacesCreateOrUpdateResponse,
  ManagedNamespacesDeleteOptionalParams,
  ManagedNamespacesDeleteResponse,
  TagsObject,
  ManagedNamespacesUpdateOptionalParams,
  ManagedNamespacesUpdateResponse,
  ManagedNamespacesListCredentialOptionalParams,
  ManagedNamespacesListCredentialResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ManagedNamespaces. */
export interface ManagedNamespaces {
  /**
   * Gets a list of managed namespaces in the specified managed cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param options The options parameters.
   */
  listByManagedCluster(
    resourceGroupName: string,
    resourceName: string,
    options?: ManagedNamespacesListByManagedClusterOptionalParams,
  ): PagedAsyncIterableIterator<ManagedNamespace>;
  /**
   * Gets the specified namespace of a managed cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param managedNamespaceName The name of the managed namespace.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    resourceName: string,
    managedNamespaceName: string,
    options?: ManagedNamespacesGetOptionalParams,
  ): Promise<ManagedNamespacesGetResponse>;
  /**
   * Creates or updates a managed namespace in the specified managed cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param managedNamespaceName The name of the managed namespace.
   * @param parameters The namespace to create or update.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    resourceName: string,
    managedNamespaceName: string,
    parameters: ManagedNamespace,
    options?: ManagedNamespacesCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ManagedNamespacesCreateOrUpdateResponse>,
      ManagedNamespacesCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a managed namespace in the specified managed cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param managedNamespaceName The name of the managed namespace.
   * @param parameters The namespace to create or update.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    resourceName: string,
    managedNamespaceName: string,
    parameters: ManagedNamespace,
    options?: ManagedNamespacesCreateOrUpdateOptionalParams,
  ): Promise<ManagedNamespacesCreateOrUpdateResponse>;
  /**
   * Deletes a namespace.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param managedNamespaceName The name of the managed namespace.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    resourceName: string,
    managedNamespaceName: string,
    options?: ManagedNamespacesDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ManagedNamespacesDeleteResponse>,
      ManagedNamespacesDeleteResponse
    >
  >;
  /**
   * Deletes a namespace.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param managedNamespaceName The name of the managed namespace.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    resourceName: string,
    managedNamespaceName: string,
    options?: ManagedNamespacesDeleteOptionalParams,
  ): Promise<ManagedNamespacesDeleteResponse>;
  /**
   * Updates tags on a managed namespace.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param managedNamespaceName The name of the managed namespace.
   * @param parameters Parameters supplied to the patch namespace operation, we only support patch tags
   *                   for now.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    resourceName: string,
    managedNamespaceName: string,
    parameters: TagsObject,
    options?: ManagedNamespacesUpdateOptionalParams,
  ): Promise<ManagedNamespacesUpdateResponse>;
  /**
   * Lists the credentials of a namespace.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param managedNamespaceName The name of the managed namespace.
   * @param options The options parameters.
   */
  listCredential(
    resourceGroupName: string,
    resourceName: string,
    managedNamespaceName: string,
    options?: ManagedNamespacesListCredentialOptionalParams,
  ): Promise<ManagedNamespacesListCredentialResponse>;
}
