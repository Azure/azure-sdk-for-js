// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import type { PagedAsyncIterableIterator } from "@azure/core-paging";
import type { SimplePollerLike, OperationState } from "@azure/core-lro";
import type {
  MeshMembership,
  MeshMembershipsListByManagedClusterOptionalParams,
  MeshMembershipsGetOptionalParams,
  MeshMembershipsGetResponse,
  MeshMembershipsCreateOrUpdateOptionalParams,
  MeshMembershipsCreateOrUpdateResponse,
  MeshMembershipsDeleteOptionalParams,
  MeshMembershipsDeleteResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a MeshMemberships. */
export interface MeshMemberships {
  /**
   * Lists mesh memberships in a managed cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param options The options parameters.
   */
  listByManagedCluster(
    resourceGroupName: string,
    resourceName: string,
    options?: MeshMembershipsListByManagedClusterOptionalParams,
  ): PagedAsyncIterableIterator<MeshMembership>;
  /**
   * Gets the mesh membership of a managed cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param meshMembershipName The name of the mesh membership.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    resourceName: string,
    meshMembershipName: string,
    options?: MeshMembershipsGetOptionalParams,
  ): Promise<MeshMembershipsGetResponse>;
  /**
   * Creates or updates the mesh membership of a managed cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param meshMembershipName The name of the mesh membership.
   * @param parameters The mesh membership to create or update.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    resourceName: string,
    meshMembershipName: string,
    parameters: MeshMembership,
    options?: MeshMembershipsCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<MeshMembershipsCreateOrUpdateResponse>,
      MeshMembershipsCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates the mesh membership of a managed cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param meshMembershipName The name of the mesh membership.
   * @param parameters The mesh membership to create or update.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    resourceName: string,
    meshMembershipName: string,
    parameters: MeshMembership,
    options?: MeshMembershipsCreateOrUpdateOptionalParams,
  ): Promise<MeshMembershipsCreateOrUpdateResponse>;
  /**
   * Deletes the mesh membership of a managed cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param meshMembershipName The name of the mesh membership.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    resourceName: string,
    meshMembershipName: string,
    options?: MeshMembershipsDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<OperationState<MeshMembershipsDeleteResponse>, MeshMembershipsDeleteResponse>
  >;
  /**
   * Deletes the mesh membership of a managed cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the managed cluster resource.
   * @param meshMembershipName The name of the mesh membership.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    resourceName: string,
    meshMembershipName: string,
    options?: MeshMembershipsDeleteOptionalParams,
  ): Promise<MeshMembershipsDeleteResponse>;
}
