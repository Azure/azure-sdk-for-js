/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter,
} from "@azure/core-client";
import {
  ApplicationTypeResource as ApplicationTypeResourceMapper,
  ApplicationTypeUpdateParameters as ApplicationTypeUpdateParametersMapper,
  ApplicationTypeVersionResource as ApplicationTypeVersionResourceMapper,
  ApplicationTypeVersionUpdateParameters as ApplicationTypeVersionUpdateParametersMapper,
  RuntimeResumeApplicationUpgradeParameters as RuntimeResumeApplicationUpgradeParametersMapper,
  ApplicationResource as ApplicationResourceMapper,
  ApplicationUpdateParameters as ApplicationUpdateParametersMapper,
  ServiceResource as ServiceResourceMapper,
  ServiceUpdateParameters as ServiceUpdateParametersMapper,
  ManagedCluster as ManagedClusterMapper,
  ManagedClusterUpdateParameters as ManagedClusterUpdateParametersMapper,
  NodeTypeActionParameters as NodeTypeActionParametersMapper,
  NodeType as NodeTypeMapper,
  NodeTypeUpdateParameters as NodeTypeUpdateParametersMapper,
} from "../models/mappers";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String",
    },
  },
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resourceGroupName: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const clusterName: OperationURLParameter = {
  parameterPath: "clusterName",
  mapper: {
    serializedName: "clusterName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const applicationTypeName: OperationURLParameter = {
  parameterPath: "applicationTypeName",
  mapper: {
    serializedName: "applicationTypeName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2024-06-01-preview",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String",
    },
  },
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String",
    },
  },
};

export const parameters: OperationParameter = {
  parameterPath: "parameters",
  mapper: ApplicationTypeResourceMapper,
};

export const parameters1: OperationParameter = {
  parameterPath: "parameters",
  mapper: ApplicationTypeUpdateParametersMapper,
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const version: OperationURLParameter = {
  parameterPath: "version",
  mapper: {
    serializedName: "version",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const parameters2: OperationParameter = {
  parameterPath: "parameters",
  mapper: ApplicationTypeVersionResourceMapper,
};

export const parameters3: OperationParameter = {
  parameterPath: "parameters",
  mapper: ApplicationTypeVersionUpdateParametersMapper,
};

export const applicationName: OperationURLParameter = {
  parameterPath: "applicationName",
  mapper: {
    serializedName: "applicationName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const parameters4: OperationParameter = {
  parameterPath: "parameters",
  mapper: RuntimeResumeApplicationUpgradeParametersMapper,
};

export const parameters5: OperationParameter = {
  parameterPath: "parameters",
  mapper: ApplicationResourceMapper,
};

export const parameters6: OperationParameter = {
  parameterPath: "parameters",
  mapper: ApplicationUpdateParametersMapper,
};

export const serviceName: OperationURLParameter = {
  parameterPath: "serviceName",
  mapper: {
    serializedName: "serviceName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const parameters7: OperationParameter = {
  parameterPath: "parameters",
  mapper: ServiceResourceMapper,
};

export const parameters8: OperationParameter = {
  parameterPath: "parameters",
  mapper: ServiceUpdateParametersMapper,
};

export const parameters9: OperationParameter = {
  parameterPath: "parameters",
  mapper: ManagedClusterMapper,
};

export const parameters10: OperationParameter = {
  parameterPath: "parameters",
  mapper: ManagedClusterUpdateParametersMapper,
};

export const location: OperationURLParameter = {
  parameterPath: "location",
  mapper: {
    serializedName: "location",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const clusterVersion: OperationURLParameter = {
  parameterPath: "clusterVersion",
  mapper: {
    serializedName: "clusterVersion",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const environment: OperationURLParameter = {
  parameterPath: "environment",
  mapper: {
    serializedName: "environment",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const vmSize: OperationURLParameter = {
  parameterPath: "vmSize",
  mapper: {
    serializedName: "vmSize",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const operationId: OperationURLParameter = {
  parameterPath: "operationId",
  mapper: {
    serializedName: "operationId",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const parameters11: OperationParameter = {
  parameterPath: "parameters",
  mapper: NodeTypeActionParametersMapper,
};

export const nodeTypeName: OperationURLParameter = {
  parameterPath: "nodeTypeName",
  mapper: {
    serializedName: "nodeTypeName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const parameters12: OperationParameter = {
  parameterPath: "parameters",
  mapper: NodeTypeMapper,
};

export const parameters13: OperationParameter = {
  parameterPath: "parameters",
  mapper: NodeTypeUpdateParametersMapper,
};
