/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { ManagedMaintenanceWindowStatusOperations } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { ServiceFabricManagedClustersManagementClient } from "../serviceFabricManagedClustersManagementClient";
import {
  ManagedMaintenanceWindowStatusGetOptionalParams,
  ManagedMaintenanceWindowStatusGetResponse,
} from "../models";

/** Class containing ManagedMaintenanceWindowStatusOperations operations. */
export class ManagedMaintenanceWindowStatusOperationsImpl
  implements ManagedMaintenanceWindowStatusOperations
{
  private readonly client: ServiceFabricManagedClustersManagementClient;

  /**
   * Initialize a new instance of the class ManagedMaintenanceWindowStatusOperations class.
   * @param client Reference to the service client
   */
  constructor(client: ServiceFabricManagedClustersManagementClient) {
    this.client = client;
  }

  /**
   * Action to get Maintenance Window Status of the Service Fabric Managed Clusters.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster resource.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    clusterName: string,
    options?: ManagedMaintenanceWindowStatusGetOptionalParams,
  ): Promise<ManagedMaintenanceWindowStatusGetResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, clusterName, options },
      getOperationSpec,
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/getMaintenanceWindowStatus",
  httpMethod: "POST",
  responses: {
    200: {
      bodyMapper: Mappers.ManagedMaintenanceWindowStatus,
    },
    default: {
      bodyMapper: Mappers.ErrorModel,
    },
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.clusterName,
  ],
  headerParameters: [Parameters.accept],
  serializer,
};
