/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** Lists of Appliances operations. */
export interface ApplianceOperationsList {
  /** Next page of operations. */
  nextLink?: string;
  /** Array of applianceOperation */
  value: ApplianceOperation[];
}

/** Appliances operation. */
export interface ApplianceOperation {
  /**
   * Is this Operation a data plane operation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /**
   * The name of the compute operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The origin of the compute operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: string;
  /**
   * The description of the operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
  /**
   * The display name of the compute operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The resource provider for the operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The display name of the resource the operation applies to.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** The List Appliances operation response. */
export interface ApplianceListResult {
  /**
   * The URL to use for getting the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of Appliances.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Appliance[];
}

/** Identity for the resource. */
export interface Identity {
  /**
   * The principal ID of resource identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The tenant ID of resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** The identity type. */
  type?: ResourceIdentityType;
}

/** Contains infrastructure information about the Appliance */
export interface AppliancePropertiesInfrastructureConfig {
  /** Information about the connected appliance. */
  provider?: Provider;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** The Appliances patchable resource definition. */
export interface PatchableAppliance {
  /** Resource tags */
  tags?: { [propertyName: string]: string };
}

/** The List Cluster Customer User Credential Results appliance. */
export interface ApplianceListClusterCustomerUserCredentialResults {
  /**
   * The list of appliance kubeconfigs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly kubeconfigs?: ApplianceCredentialKubeconfig[];
  /**
   * Map of Customer User Public and Private SSH Keys
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sshKeys?: { [propertyName: string]: SSHKey };
}

/** Cluster User Credential appliance. */
export interface ApplianceCredentialKubeconfig {
  /**
   * Name which contains the role of the kubeconfig.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: AccessProfileType;
  /**
   * Contains the kubeconfig value.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: string;
}

/** Appliance SSHKey definition. */
export interface SSHKey {
  /** User Private Key. */
  privateKey?: string;
  /** User Public Key. */
  publicKey?: string;
}

/** The List Cluster User Credential appliance. */
export interface ApplianceListCredentialResults {
  /**
   * Contains the REP (rendezvous endpoint) and “Listener” access token from notification service (NS).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hybridConnectionConfig?: HybridConnectionConfig;
  /**
   * The list of appliance kubeconfigs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly kubeconfigs?: ApplianceCredentialKubeconfig[];
}

/** Contains the REP (rendezvous endpoint) and “Listener” access token from notification service (NS). */
export interface HybridConnectionConfig {
  /**
   * Timestamp when this token will be expired.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expirationTime?: number;
  /**
   * Name of the connection
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hybridConnectionName?: string;
  /**
   * Name of the notification service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly relay?: string;
  /**
   * Listener access token
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly token?: string;
}

/** The Upgrade Graph for appliance. */
export interface UpgradeGraph {
  /**
   * The appliance resource path
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The release train name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /** The properties of supported version */
  properties?: UpgradeGraphProperties;
}

/** The Upgrade Graph Properties for appliance. */
export interface UpgradeGraphProperties {
  /**
   * The current appliance version
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly applianceVersion?: string;
  /**
   * This contains the current version and supported upgrade versions.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly supportedVersions?: SupportedVersion[];
}

/** The SupportedVersion object for appliance. */
export interface SupportedVersion {
  /**
   * This is the metadata of the supported newer version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly metadata?: SupportedVersionMetadata;
  /**
   * The newer version available for upgrade.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly version?: string;
}

/** The SupportedVersionMetadata object for appliance. */
export interface SupportedVersionMetadata {
  /**
   * The newer supported version catalog version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly catalogVersion?: SupportedVersionCatalogVersion;
}

/** The SupportedVersionCatalogVersion object for appliance. */
export interface SupportedVersionCatalogVersion {
  /**
   * The newer supported version catalog version data.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly data?: SupportedVersionCatalogVersionData;
  /**
   * The catalog version name for the version available for upgrade.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The catalog version namespace for the version available for upgrade.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly namespace?: string;
}

/** The SupportedVersionCatalogVersionData object for appliance. */
export interface SupportedVersionCatalogVersionData {
  /**
   * The image audience name for the version available for upgrade.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly audience?: string;
  /**
   * The image catalog name for the version available for upgrade.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly catalog?: string;
  /**
   * The image offer name for the version available for upgrade.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly offer?: string;
  /**
   * The image version for the version available for upgrade.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly version?: string;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** Appliances definition. */
export interface Appliance extends TrackedResource {
  /** Identity for the resource. */
  identity?: Identity;
  /**
   * Metadata pertaining to creation and last modification of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** Represents a supported Fabric/Infra. (AKSEdge etc...). */
  distro?: Distro;
  /** Contains infrastructure information about the Appliance */
  infrastructureConfig?: AppliancePropertiesInfrastructureConfig;
  /**
   * The current deployment or provisioning state, which only appears in the response.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /** Certificates pair used to download MSI certificate from HIS */
  publicKey?: string;
  /**
   * Appliance’s health and state of connection to on-prem
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: Status;
  /** Version of the Appliance */
  version?: string;
}

/** Known values of {@link ResourceIdentityType} that the service accepts. */
export enum KnownResourceIdentityType {
  /** SystemAssigned */
  SystemAssigned = "SystemAssigned",
  /** None */
  None = "None"
}

/**
 * Defines values for ResourceIdentityType. \
 * {@link KnownResourceIdentityType} can be used interchangeably with ResourceIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SystemAssigned** \
 * **None**
 */
export type ResourceIdentityType = string;

/** Known values of {@link Distro} that the service accepts. */
export enum KnownDistro {
  /** AKSEdge */
  AKSEdge = "AKSEdge"
}

/**
 * Defines values for Distro. \
 * {@link KnownDistro} can be used interchangeably with Distro,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AKSEdge**
 */
export type Distro = string;

/** Known values of {@link Provider} that the service accepts. */
export enum KnownProvider {
  /** VMWare */
  VMWare = "VMWare",
  /** HCI */
  HCI = "HCI",
  /** Scvmm */
  Scvmm = "SCVMM",
  /** KubeVirt */
  KubeVirt = "KubeVirt",
  /** OpenStack */
  OpenStack = "OpenStack"
}

/**
 * Defines values for Provider. \
 * {@link KnownProvider} can be used interchangeably with Provider,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **VMWare** \
 * **HCI** \
 * **SCVMM** \
 * **KubeVirt** \
 * **OpenStack**
 */
export type Provider = string;

/** Known values of {@link Status} that the service accepts. */
export enum KnownStatus {
  /** WaitingForHeartbeat */
  WaitingForHeartbeat = "WaitingForHeartbeat",
  /** Validating */
  Validating = "Validating",
  /** Connecting */
  Connecting = "Connecting",
  /** Connected */
  Connected = "Connected",
  /** Running */
  Running = "Running",
  /** PreparingForUpgrade */
  PreparingForUpgrade = "PreparingForUpgrade",
  /** UpgradePrerequisitesCompleted */
  UpgradePrerequisitesCompleted = "UpgradePrerequisitesCompleted",
  /** PreUpgrade */
  PreUpgrade = "PreUpgrade",
  /** UpdatingCloudOperator */
  UpdatingCloudOperator = "UpdatingCloudOperator",
  /** WaitingForCloudOperator */
  WaitingForCloudOperator = "WaitingForCloudOperator",
  /** UpdatingCapi */
  UpdatingCapi = "UpdatingCAPI",
  /** UpdatingCluster */
  UpdatingCluster = "UpdatingCluster",
  /** PostUpgrade */
  PostUpgrade = "PostUpgrade",
  /** UpgradeComplete */
  UpgradeComplete = "UpgradeComplete",
  /** UpgradeClusterExtensionFailedToDelete */
  UpgradeClusterExtensionFailedToDelete = "UpgradeClusterExtensionFailedToDelete",
  /** UpgradeFailed */
  UpgradeFailed = "UpgradeFailed",
  /** Offline */
  Offline = "Offline",
  /** None */
  None = "None"
}

/**
 * Defines values for Status. \
 * {@link KnownStatus} can be used interchangeably with Status,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **WaitingForHeartbeat** \
 * **Validating** \
 * **Connecting** \
 * **Connected** \
 * **Running** \
 * **PreparingForUpgrade** \
 * **UpgradePrerequisitesCompleted** \
 * **PreUpgrade** \
 * **UpdatingCloudOperator** \
 * **WaitingForCloudOperator** \
 * **UpdatingCAPI** \
 * **UpdatingCluster** \
 * **PostUpgrade** \
 * **UpgradeComplete** \
 * **UpgradeClusterExtensionFailedToDelete** \
 * **UpgradeFailed** \
 * **Offline** \
 * **None**
 */
export type Status = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link AccessProfileType} that the service accepts. */
export enum KnownAccessProfileType {
  /** ClusterUser */
  ClusterUser = "clusterUser",
  /** ClusterCustomerUser */
  ClusterCustomerUser = "clusterCustomerUser"
}

/**
 * Defines values for AccessProfileType. \
 * {@link KnownAccessProfileType} can be used interchangeably with AccessProfileType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **clusterUser** \
 * **clusterCustomerUser**
 */
export type AccessProfileType = string;

/** Known values of {@link SSHKeyType} that the service accepts. */
export enum KnownSSHKeyType {
  /** SSHCustomerUser */
  SSHCustomerUser = "SSHCustomerUser"
}

/**
 * Defines values for SSHKeyType. \
 * {@link KnownSSHKeyType} can be used interchangeably with SSHKeyType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SSHCustomerUser**
 */
export type SSHKeyType = string;

/** Optional parameters. */
export interface AppliancesListOperationsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listOperations operation. */
export type AppliancesListOperationsResponse = ApplianceOperationsList;

/** Optional parameters. */
export interface AppliancesListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type AppliancesListBySubscriptionResponse = ApplianceListResult;

/** Optional parameters. */
export interface AppliancesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type AppliancesListByResourceGroupResponse = ApplianceListResult;

/** Optional parameters. */
export interface AppliancesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AppliancesGetResponse = Appliance;

/** Optional parameters. */
export interface AppliancesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type AppliancesCreateOrUpdateResponse = Appliance;

/** Optional parameters. */
export interface AppliancesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface AppliancesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Resource tags */
  tags?: { [propertyName: string]: string };
}

/** Contains response data for the update operation. */
export type AppliancesUpdateResponse = Appliance;

/** Optional parameters. */
export interface AppliancesListClusterCustomerUserCredentialOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listClusterCustomerUserCredential operation. */
export type AppliancesListClusterCustomerUserCredentialResponse = ApplianceListClusterCustomerUserCredentialResults;

/** Optional parameters. */
export interface AppliancesListClusterUserCredentialOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listClusterUserCredential operation. */
export type AppliancesListClusterUserCredentialResponse = ApplianceListCredentialResults;

/** Optional parameters. */
export interface AppliancesGetUpgradeGraphOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getUpgradeGraph operation. */
export type AppliancesGetUpgradeGraphResponse = UpgradeGraph;

/** Optional parameters. */
export interface AppliancesListOperationsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listOperationsNext operation. */
export type AppliancesListOperationsNextResponse = ApplianceOperationsList;

/** Optional parameters. */
export interface AppliancesListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type AppliancesListBySubscriptionNextResponse = ApplianceListResult;

/** Optional parameters. */
export interface AppliancesListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type AppliancesListByResourceGroupNextResponse = ApplianceListResult;

/** Optional parameters. */
export interface ResourceConnectorManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
