/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  BaseBackupPolicyResource,
  BackupPoliciesListOptionalParams,
  BackupPoliciesGetOptionalParams,
  BackupPoliciesGetResponse,
  BackupPoliciesCreateOrUpdateOptionalParams,
  BackupPoliciesCreateOrUpdateResponse,
  BackupPoliciesDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a BackupPolicies. */
export interface BackupPolicies {
  /**
   * Returns list of backup policies belonging to a backup vault
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param vaultName The name of the backup vault.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    vaultName: string,
    options?: BackupPoliciesListOptionalParams
  ): PagedAsyncIterableIterator<BaseBackupPolicyResource>;
  /**
   * Gets a backup policy belonging to a backup vault
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param vaultName The name of the backup vault.
   * @param backupPolicyName
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    vaultName: string,
    backupPolicyName: string,
    options?: BackupPoliciesGetOptionalParams
  ): Promise<BackupPoliciesGetResponse>;
  /**
   * Creates or Updates a backup policy belonging to a backup vault
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param vaultName The name of the backup vault.
   * @param backupPolicyName Name of the policy
   * @param parameters Request body for operation
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    vaultName: string,
    backupPolicyName: string,
    parameters: BaseBackupPolicyResource,
    options?: BackupPoliciesCreateOrUpdateOptionalParams
  ): Promise<BackupPoliciesCreateOrUpdateResponse>;
  /**
   * Deletes a backup policy belonging to a backup vault
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param vaultName The name of the backup vault.
   * @param backupPolicyName
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    vaultName: string,
    backupPolicyName: string,
    options?: BackupPoliciesDeleteOptionalParams
  ): Promise<void>;
}
