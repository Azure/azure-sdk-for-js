/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator, PageSettings } from "@azure/core-paging";
import { setContinuationToken } from "../pagingHelper";
import { ResourceGuards } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { DataProtectionClient } from "../dataProtectionClient";
import {
  ResourceGuardResource,
  ResourceGuardsGetResourcesInSubscriptionNextOptionalParams,
  ResourceGuardsGetResourcesInSubscriptionOptionalParams,
  ResourceGuardsGetResourcesInSubscriptionResponse,
  ResourceGuardsGetResourcesInResourceGroupNextOptionalParams,
  ResourceGuardsGetResourcesInResourceGroupOptionalParams,
  ResourceGuardsGetResourcesInResourceGroupResponse,
  DppBaseResource,
  ResourceGuardsGetDisableSoftDeleteRequestsObjectsNextOptionalParams,
  ResourceGuardsGetDisableSoftDeleteRequestsObjectsOptionalParams,
  ResourceGuardsGetDisableSoftDeleteRequestsObjectsResponse,
  ResourceGuardsGetDeleteResourceGuardProxyRequestsObjectsNextOptionalParams,
  ResourceGuardsGetDeleteResourceGuardProxyRequestsObjectsOptionalParams,
  ResourceGuardsGetDeleteResourceGuardProxyRequestsObjectsResponse,
  ResourceGuardsGetBackupSecurityPINRequestsObjectsNextOptionalParams,
  ResourceGuardsGetBackupSecurityPINRequestsObjectsOptionalParams,
  ResourceGuardsGetBackupSecurityPINRequestsObjectsResponse,
  ResourceGuardsGetDeleteProtectedItemRequestsObjectsNextOptionalParams,
  ResourceGuardsGetDeleteProtectedItemRequestsObjectsOptionalParams,
  ResourceGuardsGetDeleteProtectedItemRequestsObjectsResponse,
  ResourceGuardsGetUpdateProtectionPolicyRequestsObjectsNextOptionalParams,
  ResourceGuardsGetUpdateProtectionPolicyRequestsObjectsOptionalParams,
  ResourceGuardsGetUpdateProtectionPolicyRequestsObjectsResponse,
  ResourceGuardsGetUpdateProtectedItemRequestsObjectsNextOptionalParams,
  ResourceGuardsGetUpdateProtectedItemRequestsObjectsOptionalParams,
  ResourceGuardsGetUpdateProtectedItemRequestsObjectsResponse,
  ResourceGuardsPutOptionalParams,
  ResourceGuardsPutResponse,
  ResourceGuardsGetOptionalParams,
  ResourceGuardsGetResponse,
  ResourceGuardsDeleteOptionalParams,
  PatchResourceGuardInput,
  ResourceGuardsPatchOptionalParams,
  ResourceGuardsPatchResponse,
  ResourceGuardsGetDefaultDisableSoftDeleteRequestsObjectOptionalParams,
  ResourceGuardsGetDefaultDisableSoftDeleteRequestsObjectResponse,
  ResourceGuardsGetDefaultDeleteResourceGuardProxyRequestsObjectOptionalParams,
  ResourceGuardsGetDefaultDeleteResourceGuardProxyRequestsObjectResponse,
  ResourceGuardsGetDefaultBackupSecurityPINRequestsObjectOptionalParams,
  ResourceGuardsGetDefaultBackupSecurityPINRequestsObjectResponse,
  ResourceGuardsGetDefaultDeleteProtectedItemRequestsObjectOptionalParams,
  ResourceGuardsGetDefaultDeleteProtectedItemRequestsObjectResponse,
  ResourceGuardsGetDefaultUpdateProtectionPolicyRequestsObjectOptionalParams,
  ResourceGuardsGetDefaultUpdateProtectionPolicyRequestsObjectResponse,
  ResourceGuardsGetDefaultUpdateProtectedItemRequestsObjectOptionalParams,
  ResourceGuardsGetDefaultUpdateProtectedItemRequestsObjectResponse,
  ResourceGuardsGetResourcesInSubscriptionNextResponse,
  ResourceGuardsGetResourcesInResourceGroupNextResponse,
  ResourceGuardsGetDisableSoftDeleteRequestsObjectsNextResponse,
  ResourceGuardsGetDeleteResourceGuardProxyRequestsObjectsNextResponse,
  ResourceGuardsGetBackupSecurityPINRequestsObjectsNextResponse,
  ResourceGuardsGetDeleteProtectedItemRequestsObjectsNextResponse,
  ResourceGuardsGetUpdateProtectionPolicyRequestsObjectsNextResponse,
  ResourceGuardsGetUpdateProtectedItemRequestsObjectsNextResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Class containing ResourceGuards operations. */
export class ResourceGuardsImpl implements ResourceGuards {
  private readonly client: DataProtectionClient;

  /**
   * Initialize a new instance of the class ResourceGuards class.
   * @param client Reference to the service client
   */
  constructor(client: DataProtectionClient) {
    this.client = client;
  }

  /**
   * Returns ResourceGuards collection belonging to a subscription.
   * @param options The options parameters.
   */
  public listResourcesInSubscription(
    options?: ResourceGuardsGetResourcesInSubscriptionOptionalParams
  ): PagedAsyncIterableIterator<ResourceGuardResource> {
    const iter = this.getResourcesInSubscriptionPagingAll(options);
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: (settings?: PageSettings) => {
        if (settings?.maxPageSize) {
          throw new Error("maxPageSize is not supported by this operation.");
        }
        return this.getResourcesInSubscriptionPagingPage(options, settings);
      }
    };
  }

  private async *getResourcesInSubscriptionPagingPage(
    options?: ResourceGuardsGetResourcesInSubscriptionOptionalParams,
    settings?: PageSettings
  ): AsyncIterableIterator<ResourceGuardResource[]> {
    let result: ResourceGuardsGetResourcesInSubscriptionResponse;
    let continuationToken = settings?.continuationToken;
    if (!continuationToken) {
      result = await this._getResourcesInSubscription(options);
      let page = result.value || [];
      continuationToken = result.nextLink;
      setContinuationToken(page, continuationToken);
      yield page;
    }
    while (continuationToken) {
      result = await this._getResourcesInSubscriptionNext(
        continuationToken,
        options
      );
      continuationToken = result.nextLink;
      let page = result.value || [];
      setContinuationToken(page, continuationToken);
      yield page;
    }
  }

  private async *getResourcesInSubscriptionPagingAll(
    options?: ResourceGuardsGetResourcesInSubscriptionOptionalParams
  ): AsyncIterableIterator<ResourceGuardResource> {
    for await (const page of this.getResourcesInSubscriptionPagingPage(
      options
    )) {
      yield* page;
    }
  }

  /**
   * Returns ResourceGuards collection belonging to a ResourceGroup.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  public listResourcesInResourceGroup(
    resourceGroupName: string,
    options?: ResourceGuardsGetResourcesInResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<ResourceGuardResource> {
    const iter = this.getResourcesInResourceGroupPagingAll(
      resourceGroupName,
      options
    );
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: (settings?: PageSettings) => {
        if (settings?.maxPageSize) {
          throw new Error("maxPageSize is not supported by this operation.");
        }
        return this.getResourcesInResourceGroupPagingPage(
          resourceGroupName,
          options,
          settings
        );
      }
    };
  }

  private async *getResourcesInResourceGroupPagingPage(
    resourceGroupName: string,
    options?: ResourceGuardsGetResourcesInResourceGroupOptionalParams,
    settings?: PageSettings
  ): AsyncIterableIterator<ResourceGuardResource[]> {
    let result: ResourceGuardsGetResourcesInResourceGroupResponse;
    let continuationToken = settings?.continuationToken;
    if (!continuationToken) {
      result = await this._getResourcesInResourceGroup(
        resourceGroupName,
        options
      );
      let page = result.value || [];
      continuationToken = result.nextLink;
      setContinuationToken(page, continuationToken);
      yield page;
    }
    while (continuationToken) {
      result = await this._getResourcesInResourceGroupNext(
        resourceGroupName,
        continuationToken,
        options
      );
      continuationToken = result.nextLink;
      let page = result.value || [];
      setContinuationToken(page, continuationToken);
      yield page;
    }
  }

  private async *getResourcesInResourceGroupPagingAll(
    resourceGroupName: string,
    options?: ResourceGuardsGetResourcesInResourceGroupOptionalParams
  ): AsyncIterableIterator<ResourceGuardResource> {
    for await (const page of this.getResourcesInResourceGroupPagingPage(
      resourceGroupName,
      options
    )) {
      yield* page;
    }
  }

  /**
   * Returns collection of operation request objects for a critical operation protected by the given
   * ResourceGuard resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceGuardsName
   * @param options The options parameters.
   */
  public listDisableSoftDeleteRequestsObjects(
    resourceGroupName: string,
    resourceGuardsName: string,
    options?: ResourceGuardsGetDisableSoftDeleteRequestsObjectsOptionalParams
  ): PagedAsyncIterableIterator<DppBaseResource> {
    const iter = this.getDisableSoftDeleteRequestsObjectsPagingAll(
      resourceGroupName,
      resourceGuardsName,
      options
    );
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: (settings?: PageSettings) => {
        if (settings?.maxPageSize) {
          throw new Error("maxPageSize is not supported by this operation.");
        }
        return this.getDisableSoftDeleteRequestsObjectsPagingPage(
          resourceGroupName,
          resourceGuardsName,
          options,
          settings
        );
      }
    };
  }

  private async *getDisableSoftDeleteRequestsObjectsPagingPage(
    resourceGroupName: string,
    resourceGuardsName: string,
    options?: ResourceGuardsGetDisableSoftDeleteRequestsObjectsOptionalParams,
    settings?: PageSettings
  ): AsyncIterableIterator<DppBaseResource[]> {
    let result: ResourceGuardsGetDisableSoftDeleteRequestsObjectsResponse;
    let continuationToken = settings?.continuationToken;
    if (!continuationToken) {
      result = await this._getDisableSoftDeleteRequestsObjects(
        resourceGroupName,
        resourceGuardsName,
        options
      );
      let page = result.value || [];
      continuationToken = result.nextLink;
      setContinuationToken(page, continuationToken);
      yield page;
    }
    while (continuationToken) {
      result = await this._getDisableSoftDeleteRequestsObjectsNext(
        resourceGroupName,
        resourceGuardsName,
        continuationToken,
        options
      );
      continuationToken = result.nextLink;
      let page = result.value || [];
      setContinuationToken(page, continuationToken);
      yield page;
    }
  }

  private async *getDisableSoftDeleteRequestsObjectsPagingAll(
    resourceGroupName: string,
    resourceGuardsName: string,
    options?: ResourceGuardsGetDisableSoftDeleteRequestsObjectsOptionalParams
  ): AsyncIterableIterator<DppBaseResource> {
    for await (const page of this.getDisableSoftDeleteRequestsObjectsPagingPage(
      resourceGroupName,
      resourceGuardsName,
      options
    )) {
      yield* page;
    }
  }

  /**
   * Returns collection of operation request objects for a critical operation protected by the given
   * ResourceGuard resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceGuardsName
   * @param options The options parameters.
   */
  public listDeleteResourceGuardProxyRequestsObjects(
    resourceGroupName: string,
    resourceGuardsName: string,
    options?: ResourceGuardsGetDeleteResourceGuardProxyRequestsObjectsOptionalParams
  ): PagedAsyncIterableIterator<DppBaseResource> {
    const iter = this.getDeleteResourceGuardProxyRequestsObjectsPagingAll(
      resourceGroupName,
      resourceGuardsName,
      options
    );
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: (settings?: PageSettings) => {
        if (settings?.maxPageSize) {
          throw new Error("maxPageSize is not supported by this operation.");
        }
        return this.getDeleteResourceGuardProxyRequestsObjectsPagingPage(
          resourceGroupName,
          resourceGuardsName,
          options,
          settings
        );
      }
    };
  }

  private async *getDeleteResourceGuardProxyRequestsObjectsPagingPage(
    resourceGroupName: string,
    resourceGuardsName: string,
    options?: ResourceGuardsGetDeleteResourceGuardProxyRequestsObjectsOptionalParams,
    settings?: PageSettings
  ): AsyncIterableIterator<DppBaseResource[]> {
    let result: ResourceGuardsGetDeleteResourceGuardProxyRequestsObjectsResponse;
    let continuationToken = settings?.continuationToken;
    if (!continuationToken) {
      result = await this._getDeleteResourceGuardProxyRequestsObjects(
        resourceGroupName,
        resourceGuardsName,
        options
      );
      let page = result.value || [];
      continuationToken = result.nextLink;
      setContinuationToken(page, continuationToken);
      yield page;
    }
    while (continuationToken) {
      result = await this._getDeleteResourceGuardProxyRequestsObjectsNext(
        resourceGroupName,
        resourceGuardsName,
        continuationToken,
        options
      );
      continuationToken = result.nextLink;
      let page = result.value || [];
      setContinuationToken(page, continuationToken);
      yield page;
    }
  }

  private async *getDeleteResourceGuardProxyRequestsObjectsPagingAll(
    resourceGroupName: string,
    resourceGuardsName: string,
    options?: ResourceGuardsGetDeleteResourceGuardProxyRequestsObjectsOptionalParams
  ): AsyncIterableIterator<DppBaseResource> {
    for await (const page of this.getDeleteResourceGuardProxyRequestsObjectsPagingPage(
      resourceGroupName,
      resourceGuardsName,
      options
    )) {
      yield* page;
    }
  }

  /**
   * Returns collection of operation request objects for a critical operation protected by the given
   * ResourceGuard resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceGuardsName
   * @param options The options parameters.
   */
  public listBackupSecurityPINRequestsObjects(
    resourceGroupName: string,
    resourceGuardsName: string,
    options?: ResourceGuardsGetBackupSecurityPINRequestsObjectsOptionalParams
  ): PagedAsyncIterableIterator<DppBaseResource> {
    const iter = this.getBackupSecurityPINRequestsObjectsPagingAll(
      resourceGroupName,
      resourceGuardsName,
      options
    );
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: (settings?: PageSettings) => {
        if (settings?.maxPageSize) {
          throw new Error("maxPageSize is not supported by this operation.");
        }
        return this.getBackupSecurityPINRequestsObjectsPagingPage(
          resourceGroupName,
          resourceGuardsName,
          options,
          settings
        );
      }
    };
  }

  private async *getBackupSecurityPINRequestsObjectsPagingPage(
    resourceGroupName: string,
    resourceGuardsName: string,
    options?: ResourceGuardsGetBackupSecurityPINRequestsObjectsOptionalParams,
    settings?: PageSettings
  ): AsyncIterableIterator<DppBaseResource[]> {
    let result: ResourceGuardsGetBackupSecurityPINRequestsObjectsResponse;
    let continuationToken = settings?.continuationToken;
    if (!continuationToken) {
      result = await this._getBackupSecurityPINRequestsObjects(
        resourceGroupName,
        resourceGuardsName,
        options
      );
      let page = result.value || [];
      continuationToken = result.nextLink;
      setContinuationToken(page, continuationToken);
      yield page;
    }
    while (continuationToken) {
      result = await this._getBackupSecurityPINRequestsObjectsNext(
        resourceGroupName,
        resourceGuardsName,
        continuationToken,
        options
      );
      continuationToken = result.nextLink;
      let page = result.value || [];
      setContinuationToken(page, continuationToken);
      yield page;
    }
  }

  private async *getBackupSecurityPINRequestsObjectsPagingAll(
    resourceGroupName: string,
    resourceGuardsName: string,
    options?: ResourceGuardsGetBackupSecurityPINRequestsObjectsOptionalParams
  ): AsyncIterableIterator<DppBaseResource> {
    for await (const page of this.getBackupSecurityPINRequestsObjectsPagingPage(
      resourceGroupName,
      resourceGuardsName,
      options
    )) {
      yield* page;
    }
  }

  /**
   * Returns collection of operation request objects for a critical operation protected by the given
   * ResourceGuard resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceGuardsName
   * @param options The options parameters.
   */
  public listDeleteProtectedItemRequestsObjects(
    resourceGroupName: string,
    resourceGuardsName: string,
    options?: ResourceGuardsGetDeleteProtectedItemRequestsObjectsOptionalParams
  ): PagedAsyncIterableIterator<DppBaseResource> {
    const iter = this.getDeleteProtectedItemRequestsObjectsPagingAll(
      resourceGroupName,
      resourceGuardsName,
      options
    );
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: (settings?: PageSettings) => {
        if (settings?.maxPageSize) {
          throw new Error("maxPageSize is not supported by this operation.");
        }
        return this.getDeleteProtectedItemRequestsObjectsPagingPage(
          resourceGroupName,
          resourceGuardsName,
          options,
          settings
        );
      }
    };
  }

  private async *getDeleteProtectedItemRequestsObjectsPagingPage(
    resourceGroupName: string,
    resourceGuardsName: string,
    options?: ResourceGuardsGetDeleteProtectedItemRequestsObjectsOptionalParams,
    settings?: PageSettings
  ): AsyncIterableIterator<DppBaseResource[]> {
    let result: ResourceGuardsGetDeleteProtectedItemRequestsObjectsResponse;
    let continuationToken = settings?.continuationToken;
    if (!continuationToken) {
      result = await this._getDeleteProtectedItemRequestsObjects(
        resourceGroupName,
        resourceGuardsName,
        options
      );
      let page = result.value || [];
      continuationToken = result.nextLink;
      setContinuationToken(page, continuationToken);
      yield page;
    }
    while (continuationToken) {
      result = await this._getDeleteProtectedItemRequestsObjectsNext(
        resourceGroupName,
        resourceGuardsName,
        continuationToken,
        options
      );
      continuationToken = result.nextLink;
      let page = result.value || [];
      setContinuationToken(page, continuationToken);
      yield page;
    }
  }

  private async *getDeleteProtectedItemRequestsObjectsPagingAll(
    resourceGroupName: string,
    resourceGuardsName: string,
    options?: ResourceGuardsGetDeleteProtectedItemRequestsObjectsOptionalParams
  ): AsyncIterableIterator<DppBaseResource> {
    for await (const page of this.getDeleteProtectedItemRequestsObjectsPagingPage(
      resourceGroupName,
      resourceGuardsName,
      options
    )) {
      yield* page;
    }
  }

  /**
   * Returns collection of operation request objects for a critical operation protected by the given
   * ResourceGuard resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceGuardsName
   * @param options The options parameters.
   */
  public listUpdateProtectionPolicyRequestsObjects(
    resourceGroupName: string,
    resourceGuardsName: string,
    options?: ResourceGuardsGetUpdateProtectionPolicyRequestsObjectsOptionalParams
  ): PagedAsyncIterableIterator<DppBaseResource> {
    const iter = this.getUpdateProtectionPolicyRequestsObjectsPagingAll(
      resourceGroupName,
      resourceGuardsName,
      options
    );
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: (settings?: PageSettings) => {
        if (settings?.maxPageSize) {
          throw new Error("maxPageSize is not supported by this operation.");
        }
        return this.getUpdateProtectionPolicyRequestsObjectsPagingPage(
          resourceGroupName,
          resourceGuardsName,
          options,
          settings
        );
      }
    };
  }

  private async *getUpdateProtectionPolicyRequestsObjectsPagingPage(
    resourceGroupName: string,
    resourceGuardsName: string,
    options?: ResourceGuardsGetUpdateProtectionPolicyRequestsObjectsOptionalParams,
    settings?: PageSettings
  ): AsyncIterableIterator<DppBaseResource[]> {
    let result: ResourceGuardsGetUpdateProtectionPolicyRequestsObjectsResponse;
    let continuationToken = settings?.continuationToken;
    if (!continuationToken) {
      result = await this._getUpdateProtectionPolicyRequestsObjects(
        resourceGroupName,
        resourceGuardsName,
        options
      );
      let page = result.value || [];
      continuationToken = result.nextLink;
      setContinuationToken(page, continuationToken);
      yield page;
    }
    while (continuationToken) {
      result = await this._getUpdateProtectionPolicyRequestsObjectsNext(
        resourceGroupName,
        resourceGuardsName,
        continuationToken,
        options
      );
      continuationToken = result.nextLink;
      let page = result.value || [];
      setContinuationToken(page, continuationToken);
      yield page;
    }
  }

  private async *getUpdateProtectionPolicyRequestsObjectsPagingAll(
    resourceGroupName: string,
    resourceGuardsName: string,
    options?: ResourceGuardsGetUpdateProtectionPolicyRequestsObjectsOptionalParams
  ): AsyncIterableIterator<DppBaseResource> {
    for await (const page of this.getUpdateProtectionPolicyRequestsObjectsPagingPage(
      resourceGroupName,
      resourceGuardsName,
      options
    )) {
      yield* page;
    }
  }

  /**
   * Returns collection of operation request objects for a critical operation protected by the given
   * ResourceGuard resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceGuardsName
   * @param options The options parameters.
   */
  public listUpdateProtectedItemRequestsObjects(
    resourceGroupName: string,
    resourceGuardsName: string,
    options?: ResourceGuardsGetUpdateProtectedItemRequestsObjectsOptionalParams
  ): PagedAsyncIterableIterator<DppBaseResource> {
    const iter = this.getUpdateProtectedItemRequestsObjectsPagingAll(
      resourceGroupName,
      resourceGuardsName,
      options
    );
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: (settings?: PageSettings) => {
        if (settings?.maxPageSize) {
          throw new Error("maxPageSize is not supported by this operation.");
        }
        return this.getUpdateProtectedItemRequestsObjectsPagingPage(
          resourceGroupName,
          resourceGuardsName,
          options,
          settings
        );
      }
    };
  }

  private async *getUpdateProtectedItemRequestsObjectsPagingPage(
    resourceGroupName: string,
    resourceGuardsName: string,
    options?: ResourceGuardsGetUpdateProtectedItemRequestsObjectsOptionalParams,
    settings?: PageSettings
  ): AsyncIterableIterator<DppBaseResource[]> {
    let result: ResourceGuardsGetUpdateProtectedItemRequestsObjectsResponse;
    let continuationToken = settings?.continuationToken;
    if (!continuationToken) {
      result = await this._getUpdateProtectedItemRequestsObjects(
        resourceGroupName,
        resourceGuardsName,
        options
      );
      let page = result.value || [];
      continuationToken = result.nextLink;
      setContinuationToken(page, continuationToken);
      yield page;
    }
    while (continuationToken) {
      result = await this._getUpdateProtectedItemRequestsObjectsNext(
        resourceGroupName,
        resourceGuardsName,
        continuationToken,
        options
      );
      continuationToken = result.nextLink;
      let page = result.value || [];
      setContinuationToken(page, continuationToken);
      yield page;
    }
  }

  private async *getUpdateProtectedItemRequestsObjectsPagingAll(
    resourceGroupName: string,
    resourceGuardsName: string,
    options?: ResourceGuardsGetUpdateProtectedItemRequestsObjectsOptionalParams
  ): AsyncIterableIterator<DppBaseResource> {
    for await (const page of this.getUpdateProtectedItemRequestsObjectsPagingPage(
      resourceGroupName,
      resourceGuardsName,
      options
    )) {
      yield* page;
    }
  }

  /**
   * Returns ResourceGuards collection belonging to a subscription.
   * @param options The options parameters.
   */
  private _getResourcesInSubscription(
    options?: ResourceGuardsGetResourcesInSubscriptionOptionalParams
  ): Promise<ResourceGuardsGetResourcesInSubscriptionResponse> {
    return this.client.sendOperationRequest(
      { options },
      getResourcesInSubscriptionOperationSpec
    );
  }

  /**
   * Returns ResourceGuards collection belonging to a ResourceGroup.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  private _getResourcesInResourceGroup(
    resourceGroupName: string,
    options?: ResourceGuardsGetResourcesInResourceGroupOptionalParams
  ): Promise<ResourceGuardsGetResourcesInResourceGroupResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, options },
      getResourcesInResourceGroupOperationSpec
    );
  }

  /**
   * Creates or updates a ResourceGuard resource belonging to a resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceGuardsName The name of ResourceGuard
   * @param parameters Request body for operation
   * @param options The options parameters.
   */
  put(
    resourceGroupName: string,
    resourceGuardsName: string,
    parameters: ResourceGuardResource,
    options?: ResourceGuardsPutOptionalParams
  ): Promise<ResourceGuardsPutResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, resourceGuardsName, parameters, options },
      putOperationSpec
    );
  }

  /**
   * Returns a ResourceGuard belonging to a resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceGuardsName The name of ResourceGuard
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    resourceGuardsName: string,
    options?: ResourceGuardsGetOptionalParams
  ): Promise<ResourceGuardsGetResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, resourceGuardsName, options },
      getOperationSpec
    );
  }

  /**
   * Deletes a ResourceGuard resource from the resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceGuardsName The name of ResourceGuard
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    resourceGuardsName: string,
    options?: ResourceGuardsDeleteOptionalParams
  ): Promise<void> {
    return this.client.sendOperationRequest(
      { resourceGroupName, resourceGuardsName, options },
      deleteOperationSpec
    );
  }

  /**
   * Updates a ResourceGuard resource belonging to a resource group. For example, updating tags for a
   * resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceGuardsName The name of ResourceGuard
   * @param parameters Request body for operation
   * @param options The options parameters.
   */
  patch(
    resourceGroupName: string,
    resourceGuardsName: string,
    parameters: PatchResourceGuardInput,
    options?: ResourceGuardsPatchOptionalParams
  ): Promise<ResourceGuardsPatchResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, resourceGuardsName, parameters, options },
      patchOperationSpec
    );
  }

  /**
   * Returns collection of operation request objects for a critical operation protected by the given
   * ResourceGuard resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceGuardsName
   * @param options The options parameters.
   */
  private _getDisableSoftDeleteRequestsObjects(
    resourceGroupName: string,
    resourceGuardsName: string,
    options?: ResourceGuardsGetDisableSoftDeleteRequestsObjectsOptionalParams
  ): Promise<ResourceGuardsGetDisableSoftDeleteRequestsObjectsResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, resourceGuardsName, options },
      getDisableSoftDeleteRequestsObjectsOperationSpec
    );
  }

  /**
   * Returns collection of operation request objects for a critical operation protected by the given
   * ResourceGuard resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceGuardsName
   * @param options The options parameters.
   */
  private _getDeleteResourceGuardProxyRequestsObjects(
    resourceGroupName: string,
    resourceGuardsName: string,
    options?: ResourceGuardsGetDeleteResourceGuardProxyRequestsObjectsOptionalParams
  ): Promise<ResourceGuardsGetDeleteResourceGuardProxyRequestsObjectsResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, resourceGuardsName, options },
      getDeleteResourceGuardProxyRequestsObjectsOperationSpec
    );
  }

  /**
   * Returns collection of operation request objects for a critical operation protected by the given
   * ResourceGuard resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceGuardsName
   * @param options The options parameters.
   */
  private _getBackupSecurityPINRequestsObjects(
    resourceGroupName: string,
    resourceGuardsName: string,
    options?: ResourceGuardsGetBackupSecurityPINRequestsObjectsOptionalParams
  ): Promise<ResourceGuardsGetBackupSecurityPINRequestsObjectsResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, resourceGuardsName, options },
      getBackupSecurityPINRequestsObjectsOperationSpec
    );
  }

  /**
   * Returns collection of operation request objects for a critical operation protected by the given
   * ResourceGuard resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceGuardsName
   * @param options The options parameters.
   */
  private _getDeleteProtectedItemRequestsObjects(
    resourceGroupName: string,
    resourceGuardsName: string,
    options?: ResourceGuardsGetDeleteProtectedItemRequestsObjectsOptionalParams
  ): Promise<ResourceGuardsGetDeleteProtectedItemRequestsObjectsResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, resourceGuardsName, options },
      getDeleteProtectedItemRequestsObjectsOperationSpec
    );
  }

  /**
   * Returns collection of operation request objects for a critical operation protected by the given
   * ResourceGuard resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceGuardsName
   * @param options The options parameters.
   */
  private _getUpdateProtectionPolicyRequestsObjects(
    resourceGroupName: string,
    resourceGuardsName: string,
    options?: ResourceGuardsGetUpdateProtectionPolicyRequestsObjectsOptionalParams
  ): Promise<ResourceGuardsGetUpdateProtectionPolicyRequestsObjectsResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, resourceGuardsName, options },
      getUpdateProtectionPolicyRequestsObjectsOperationSpec
    );
  }

  /**
   * Returns collection of operation request objects for a critical operation protected by the given
   * ResourceGuard resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceGuardsName
   * @param options The options parameters.
   */
  private _getUpdateProtectedItemRequestsObjects(
    resourceGroupName: string,
    resourceGuardsName: string,
    options?: ResourceGuardsGetUpdateProtectedItemRequestsObjectsOptionalParams
  ): Promise<ResourceGuardsGetUpdateProtectedItemRequestsObjectsResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, resourceGuardsName, options },
      getUpdateProtectedItemRequestsObjectsOperationSpec
    );
  }

  /**
   * Returns collection of operation request objects for a critical operation protected by the given
   * ResourceGuard resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceGuardsName
   * @param requestName
   * @param options The options parameters.
   */
  getDefaultDisableSoftDeleteRequestsObject(
    resourceGroupName: string,
    resourceGuardsName: string,
    requestName: string,
    options?: ResourceGuardsGetDefaultDisableSoftDeleteRequestsObjectOptionalParams
  ): Promise<ResourceGuardsGetDefaultDisableSoftDeleteRequestsObjectResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, resourceGuardsName, requestName, options },
      getDefaultDisableSoftDeleteRequestsObjectOperationSpec
    );
  }

  /**
   * Returns collection of operation request objects for a critical operation protected by the given
   * ResourceGuard resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceGuardsName
   * @param requestName
   * @param options The options parameters.
   */
  getDefaultDeleteResourceGuardProxyRequestsObject(
    resourceGroupName: string,
    resourceGuardsName: string,
    requestName: string,
    options?: ResourceGuardsGetDefaultDeleteResourceGuardProxyRequestsObjectOptionalParams
  ): Promise<
    ResourceGuardsGetDefaultDeleteResourceGuardProxyRequestsObjectResponse
  > {
    return this.client.sendOperationRequest(
      { resourceGroupName, resourceGuardsName, requestName, options },
      getDefaultDeleteResourceGuardProxyRequestsObjectOperationSpec
    );
  }

  /**
   * Returns collection of operation request objects for a critical operation protected by the given
   * ResourceGuard resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceGuardsName
   * @param requestName
   * @param options The options parameters.
   */
  getDefaultBackupSecurityPINRequestsObject(
    resourceGroupName: string,
    resourceGuardsName: string,
    requestName: string,
    options?: ResourceGuardsGetDefaultBackupSecurityPINRequestsObjectOptionalParams
  ): Promise<ResourceGuardsGetDefaultBackupSecurityPINRequestsObjectResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, resourceGuardsName, requestName, options },
      getDefaultBackupSecurityPINRequestsObjectOperationSpec
    );
  }

  /**
   * Returns collection of operation request objects for a critical operation protected by the given
   * ResourceGuard resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceGuardsName
   * @param requestName
   * @param options The options parameters.
   */
  getDefaultDeleteProtectedItemRequestsObject(
    resourceGroupName: string,
    resourceGuardsName: string,
    requestName: string,
    options?: ResourceGuardsGetDefaultDeleteProtectedItemRequestsObjectOptionalParams
  ): Promise<
    ResourceGuardsGetDefaultDeleteProtectedItemRequestsObjectResponse
  > {
    return this.client.sendOperationRequest(
      { resourceGroupName, resourceGuardsName, requestName, options },
      getDefaultDeleteProtectedItemRequestsObjectOperationSpec
    );
  }

  /**
   * Returns collection of operation request objects for a critical operation protected by the given
   * ResourceGuard resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceGuardsName
   * @param requestName
   * @param options The options parameters.
   */
  getDefaultUpdateProtectionPolicyRequestsObject(
    resourceGroupName: string,
    resourceGuardsName: string,
    requestName: string,
    options?: ResourceGuardsGetDefaultUpdateProtectionPolicyRequestsObjectOptionalParams
  ): Promise<
    ResourceGuardsGetDefaultUpdateProtectionPolicyRequestsObjectResponse
  > {
    return this.client.sendOperationRequest(
      { resourceGroupName, resourceGuardsName, requestName, options },
      getDefaultUpdateProtectionPolicyRequestsObjectOperationSpec
    );
  }

  /**
   * Returns collection of operation request objects for a critical operation protected by the given
   * ResourceGuard resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceGuardsName
   * @param requestName
   * @param options The options parameters.
   */
  getDefaultUpdateProtectedItemRequestsObject(
    resourceGroupName: string,
    resourceGuardsName: string,
    requestName: string,
    options?: ResourceGuardsGetDefaultUpdateProtectedItemRequestsObjectOptionalParams
  ): Promise<
    ResourceGuardsGetDefaultUpdateProtectedItemRequestsObjectResponse
  > {
    return this.client.sendOperationRequest(
      { resourceGroupName, resourceGuardsName, requestName, options },
      getDefaultUpdateProtectedItemRequestsObjectOperationSpec
    );
  }

  /**
   * GetResourcesInSubscriptionNext
   * @param nextLink The nextLink from the previous successful call to the GetResourcesInSubscription
   *                 method.
   * @param options The options parameters.
   */
  private _getResourcesInSubscriptionNext(
    nextLink: string,
    options?: ResourceGuardsGetResourcesInSubscriptionNextOptionalParams
  ): Promise<ResourceGuardsGetResourcesInSubscriptionNextResponse> {
    return this.client.sendOperationRequest(
      { nextLink, options },
      getResourcesInSubscriptionNextOperationSpec
    );
  }

  /**
   * GetResourcesInResourceGroupNext
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param nextLink The nextLink from the previous successful call to the GetResourcesInResourceGroup
   *                 method.
   * @param options The options parameters.
   */
  private _getResourcesInResourceGroupNext(
    resourceGroupName: string,
    nextLink: string,
    options?: ResourceGuardsGetResourcesInResourceGroupNextOptionalParams
  ): Promise<ResourceGuardsGetResourcesInResourceGroupNextResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, nextLink, options },
      getResourcesInResourceGroupNextOperationSpec
    );
  }

  /**
   * GetDisableSoftDeleteRequestsObjectsNext
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceGuardsName
   * @param nextLink The nextLink from the previous successful call to the
   *                 GetDisableSoftDeleteRequestsObjects method.
   * @param options The options parameters.
   */
  private _getDisableSoftDeleteRequestsObjectsNext(
    resourceGroupName: string,
    resourceGuardsName: string,
    nextLink: string,
    options?: ResourceGuardsGetDisableSoftDeleteRequestsObjectsNextOptionalParams
  ): Promise<ResourceGuardsGetDisableSoftDeleteRequestsObjectsNextResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, resourceGuardsName, nextLink, options },
      getDisableSoftDeleteRequestsObjectsNextOperationSpec
    );
  }

  /**
   * GetDeleteResourceGuardProxyRequestsObjectsNext
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceGuardsName
   * @param nextLink The nextLink from the previous successful call to the
   *                 GetDeleteResourceGuardProxyRequestsObjects method.
   * @param options The options parameters.
   */
  private _getDeleteResourceGuardProxyRequestsObjectsNext(
    resourceGroupName: string,
    resourceGuardsName: string,
    nextLink: string,
    options?: ResourceGuardsGetDeleteResourceGuardProxyRequestsObjectsNextOptionalParams
  ): Promise<
    ResourceGuardsGetDeleteResourceGuardProxyRequestsObjectsNextResponse
  > {
    return this.client.sendOperationRequest(
      { resourceGroupName, resourceGuardsName, nextLink, options },
      getDeleteResourceGuardProxyRequestsObjectsNextOperationSpec
    );
  }

  /**
   * GetBackupSecurityPINRequestsObjectsNext
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceGuardsName
   * @param nextLink The nextLink from the previous successful call to the
   *                 GetBackupSecurityPINRequestsObjects method.
   * @param options The options parameters.
   */
  private _getBackupSecurityPINRequestsObjectsNext(
    resourceGroupName: string,
    resourceGuardsName: string,
    nextLink: string,
    options?: ResourceGuardsGetBackupSecurityPINRequestsObjectsNextOptionalParams
  ): Promise<ResourceGuardsGetBackupSecurityPINRequestsObjectsNextResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, resourceGuardsName, nextLink, options },
      getBackupSecurityPINRequestsObjectsNextOperationSpec
    );
  }

  /**
   * GetDeleteProtectedItemRequestsObjectsNext
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceGuardsName
   * @param nextLink The nextLink from the previous successful call to the
   *                 GetDeleteProtectedItemRequestsObjects method.
   * @param options The options parameters.
   */
  private _getDeleteProtectedItemRequestsObjectsNext(
    resourceGroupName: string,
    resourceGuardsName: string,
    nextLink: string,
    options?: ResourceGuardsGetDeleteProtectedItemRequestsObjectsNextOptionalParams
  ): Promise<ResourceGuardsGetDeleteProtectedItemRequestsObjectsNextResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, resourceGuardsName, nextLink, options },
      getDeleteProtectedItemRequestsObjectsNextOperationSpec
    );
  }

  /**
   * GetUpdateProtectionPolicyRequestsObjectsNext
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceGuardsName
   * @param nextLink The nextLink from the previous successful call to the
   *                 GetUpdateProtectionPolicyRequestsObjects method.
   * @param options The options parameters.
   */
  private _getUpdateProtectionPolicyRequestsObjectsNext(
    resourceGroupName: string,
    resourceGuardsName: string,
    nextLink: string,
    options?: ResourceGuardsGetUpdateProtectionPolicyRequestsObjectsNextOptionalParams
  ): Promise<
    ResourceGuardsGetUpdateProtectionPolicyRequestsObjectsNextResponse
  > {
    return this.client.sendOperationRequest(
      { resourceGroupName, resourceGuardsName, nextLink, options },
      getUpdateProtectionPolicyRequestsObjectsNextOperationSpec
    );
  }

  /**
   * GetUpdateProtectedItemRequestsObjectsNext
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceGuardsName
   * @param nextLink The nextLink from the previous successful call to the
   *                 GetUpdateProtectedItemRequestsObjects method.
   * @param options The options parameters.
   */
  private _getUpdateProtectedItemRequestsObjectsNext(
    resourceGroupName: string,
    resourceGuardsName: string,
    nextLink: string,
    options?: ResourceGuardsGetUpdateProtectedItemRequestsObjectsNextOptionalParams
  ): Promise<ResourceGuardsGetUpdateProtectedItemRequestsObjectsNextResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, resourceGuardsName, nextLink, options },
      getUpdateProtectedItemRequestsObjectsNextOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getResourcesInSubscriptionOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataProtection/resourceGuards",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.ResourceGuardResourceList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.$host, Parameters.subscriptionId],
  headerParameters: [Parameters.accept],
  serializer
};
const getResourcesInResourceGroupOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.ResourceGuardResourceList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const putOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.ResourceGuardResource
    },
    201: {
      bodyMapper: Mappers.ResourceGuardResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  requestBody: Parameters.parameters13,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceGuardsName
  ],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer
};
const getOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.ResourceGuardResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceGuardsName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const deleteOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}",
  httpMethod: "DELETE",
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceGuardsName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const patchOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}",
  httpMethod: "PATCH",
  responses: {
    200: {
      bodyMapper: Mappers.ResourceGuardResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  requestBody: Parameters.parameters14,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceGuardsName
  ],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer
};
const getDisableSoftDeleteRequestsObjectsOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/disableSoftDeleteRequests",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.DppBaseResourceList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceGuardsName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const getDeleteResourceGuardProxyRequestsObjectsOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/deleteResourceGuardProxyRequests",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.DppBaseResourceList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceGuardsName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const getBackupSecurityPINRequestsObjectsOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/getBackupSecurityPINRequests",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.DppBaseResourceList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceGuardsName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const getDeleteProtectedItemRequestsObjectsOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/deleteProtectedItemRequests",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.DppBaseResourceList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceGuardsName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const getUpdateProtectionPolicyRequestsObjectsOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/updateProtectionPolicyRequests",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.DppBaseResourceList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceGuardsName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const getUpdateProtectedItemRequestsObjectsOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/updateProtectedItemRequests",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.DppBaseResourceList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceGuardsName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const getDefaultDisableSoftDeleteRequestsObjectOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/disableSoftDeleteRequests/{requestName}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.DppBaseResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceGuardsName,
    Parameters.requestName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const getDefaultDeleteResourceGuardProxyRequestsObjectOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/deleteResourceGuardProxyRequests/{requestName}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.DppBaseResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceGuardsName,
    Parameters.requestName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const getDefaultBackupSecurityPINRequestsObjectOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/getBackupSecurityPINRequests/{requestName}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.DppBaseResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceGuardsName,
    Parameters.requestName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const getDefaultDeleteProtectedItemRequestsObjectOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/deleteProtectedItemRequests/{requestName}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.DppBaseResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceGuardsName,
    Parameters.requestName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const getDefaultUpdateProtectionPolicyRequestsObjectOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/updateProtectionPolicyRequests/{requestName}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.DppBaseResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceGuardsName,
    Parameters.requestName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const getDefaultUpdateProtectedItemRequestsObjectOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/updateProtectedItemRequests/{requestName}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.DppBaseResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceGuardsName,
    Parameters.requestName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const getResourcesInSubscriptionNextOperationSpec: coreClient.OperationSpec = {
  path: "{nextLink}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.ResourceGuardResourceList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.nextLink
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const getResourcesInResourceGroupNextOperationSpec: coreClient.OperationSpec = {
  path: "{nextLink}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.ResourceGuardResourceList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.nextLink
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const getDisableSoftDeleteRequestsObjectsNextOperationSpec: coreClient.OperationSpec = {
  path: "{nextLink}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.DppBaseResourceList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.nextLink,
    Parameters.resourceGuardsName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const getDeleteResourceGuardProxyRequestsObjectsNextOperationSpec: coreClient.OperationSpec = {
  path: "{nextLink}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.DppBaseResourceList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.nextLink,
    Parameters.resourceGuardsName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const getBackupSecurityPINRequestsObjectsNextOperationSpec: coreClient.OperationSpec = {
  path: "{nextLink}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.DppBaseResourceList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.nextLink,
    Parameters.resourceGuardsName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const getDeleteProtectedItemRequestsObjectsNextOperationSpec: coreClient.OperationSpec = {
  path: "{nextLink}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.DppBaseResourceList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.nextLink,
    Parameters.resourceGuardsName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const getUpdateProtectionPolicyRequestsObjectsNextOperationSpec: coreClient.OperationSpec = {
  path: "{nextLink}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.DppBaseResourceList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.nextLink,
    Parameters.resourceGuardsName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const getUpdateProtectedItemRequestsObjectsNextOperationSpec: coreClient.OperationSpec = {
  path: "{nextLink}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.DppBaseResourceList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.nextLink,
    Parameters.resourceGuardsName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
