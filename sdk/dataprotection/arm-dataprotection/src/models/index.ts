/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export type OperationExtendedInfoUnion =
  | OperationExtendedInfo
  | OperationJobExtendedInfo;
export type FeatureValidationRequestBaseUnion =
  | FeatureValidationRequestBase
  | FeatureValidationRequest;
export type FeatureValidationResponseBaseUnion =
  | FeatureValidationResponseBase
  | FeatureValidationResponse;
export type BaseBackupPolicyUnion = BaseBackupPolicy | BackupPolicy;
export type DataStoreParametersUnion =
  | DataStoreParameters
  | AzureOperationalStoreParameters;
export type BackupDatasourceParametersUnion =
  | BackupDatasourceParameters
  | KubernetesClusterBackupDatasourceParameters
  | BlobBackupDatasourceParameters;
export type AuthCredentialsUnion =
  | AuthCredentials
  | SecretStoreBasedAuthCredentials;
export type AzureBackupRecoveryPointUnion =
  | AzureBackupRecoveryPoint
  | AzureBackupDiscreteRecoveryPoint;
export type AzureBackupRestoreRequestUnion =
  | AzureBackupRestoreRequest
  | AzureBackupRecoveryPointBasedRestoreRequestUnion
  | AzureBackupRecoveryTimeBasedRestoreRequest;
export type RestoreTargetInfoBaseUnion =
  | RestoreTargetInfoBase
  | ItemLevelRestoreTargetInfo
  | RestoreFilesTargetInfo
  | RestoreTargetInfo;
export type DeleteOptionUnion = DeleteOption | AbsoluteDeleteOption;
export type TriggerContextUnion =
  | TriggerContext
  | AdhocBasedTriggerContext
  | ScheduleBasedTriggerContext;
export type BackupParametersUnion = BackupParameters | AzureBackupParams;
export type BasePolicyRuleUnion =
  | BasePolicyRule
  | AzureBackupRule
  | AzureRetentionRule;
export type CopyOptionUnion =
  | CopyOption
  | CopyOnExpiryOption
  | CustomCopyOption
  | ImmediateCopyOption;
export type BackupCriteriaUnion = BackupCriteria | ScheduleBasedBackupCriteria;
export type ItemLevelRestoreCriteriaUnion =
  | ItemLevelRestoreCriteria
  | ItemPathBasedRestoreCriteria
  | RangeBasedItemLevelRestoreCriteria
  | KubernetesStorageClassRestoreCriteria
  | KubernetesPVRestoreCriteria
  | KubernetesClusterRestoreCriteria;
export type AzureBackupRecoveryPointBasedRestoreRequestUnion =
  | AzureBackupRecoveryPointBasedRestoreRequest
  | AzureBackupRestoreWithRehydrationRequest;

/** Backup Vault */
export interface BackupVault {
  /** Monitoring Settings */
  monitoringSettings?: MonitoringSettings;
  /**
   * Provisioning state of the BackupVault resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Resource move state for backup vault
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceMoveState?: ResourceMoveState;
  /**
   * Resource move details for backup vault
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceMoveDetails?: ResourceMoveDetails;
  /** Security Settings */
  securitySettings?: SecuritySettings;
  /** Storage Settings */
  storageSettings: StorageSetting[];
  /**
   * Is vault protected by resource guard
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isVaultProtectedByResourceGuard?: boolean;
  /** Feature Settings */
  featureSettings?: FeatureSettings;
  /**
   * Secure Score of Backup Vault
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly secureScore?: SecureScoreLevel;
}

/** Monitoring Settings */
export interface MonitoringSettings {
  /** Settings for Azure Monitor based alerts */
  azureMonitorAlertSettings?: AzureMonitorAlertSettings;
}

/** Settings for Azure Monitor based alerts */
export interface AzureMonitorAlertSettings {
  alertsForAllJobFailures?: AlertsState;
}

/** ResourceMoveDetails will be returned in response to GetResource call from ARM */
export interface ResourceMoveDetails {
  /** CorrelationId of latest ResourceMove operation attempted */
  operationId?: string;
  /** Start time in UTC of latest ResourceMove operation attempted. ISO 8601 format. */
  startTimeUtc?: string;
  /** Completion time in UTC of latest ResourceMove operation attempted. ISO 8601 format. */
  completionTimeUtc?: string;
  /** ARM resource path of source resource */
  sourceResourcePath?: string;
  /** ARM resource path of target resource used in latest ResourceMove operation */
  targetResourcePath?: string;
}

/** Class containing security settings of vault */
export interface SecuritySettings {
  /** Soft delete related settings */
  softDeleteSettings?: SoftDeleteSettings;
  /** Immutability Settings at vault level */
  immutabilitySettings?: ImmutabilitySettings;
}

/** Soft delete related settings */
export interface SoftDeleteSettings {
  /** State of soft delete */
  state?: SoftDeleteState;
  /** Soft delete retention duration */
  retentionDurationInDays?: number;
}

/** Immutability Settings at vault level */
export interface ImmutabilitySettings {
  /** Immutability state */
  state?: ImmutabilityState;
}

/** Storage setting */
export interface StorageSetting {
  /** Gets or sets the type of the datastore. */
  datastoreType?: StorageSettingStoreTypes;
  /** Gets or sets the type. */
  type?: StorageSettingTypes;
}

/** Class containing feature settings of vault */
export interface FeatureSettings {
  /** CrossSubscriptionRestore Settings */
  crossSubscriptionRestoreSettings?: CrossSubscriptionRestoreSettings;
  crossRegionRestoreSettings?: CrossRegionRestoreSettings;
}

/** CrossSubscriptionRestore Settings */
export interface CrossSubscriptionRestoreSettings {
  /** CrossSubscriptionRestore state */
  state?: CrossSubscriptionRestoreState;
}

export interface CrossRegionRestoreSettings {
  /** CrossRegionRestore state */
  state?: CrossRegionRestoreState;
}

/** Identity details */
export interface DppIdentityDetails {
  /**
   * The object ID of the service principal object for the managed identity that is used to grant role-based access to an Azure resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * A Globally Unique Identifier (GUID) that represents the Azure AD tenant where the resource is now a member.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** The identityType which can be either SystemAssigned, UserAssigned, 'SystemAssigned,UserAssigned' or None */
  type?: string;
  /** Gets or sets the user assigned identities. */
  userAssignedIdentities?: { [propertyName: string]: UserAssignedIdentity };
}

/** User assigned identity properties */
export interface UserAssignedIdentity {
  /**
   * The principal ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The client ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clientId?: string;
}

export interface DppBaseTrackedResource {
  /** Optional ETag. */
  eTag?: string;
  /**
   * Resource Id represents the complete path to the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /** Resource location. */
  location?: string;
  /**
   * Resource name associated with the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /**
   * Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** ListResource */
export interface DppResourceList {
  /** The uri to fetch the next page of resources. Call ListNext() fetches next page of resources. */
  nextLink?: string;
}

/** An error response from Azure Backup. */
export interface CloudError {
  /** The resource management error response. */
  error?: ErrorModel;
}

/** The resource management error response. */
export interface ErrorModel {
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorModel[];
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** Operation Extended Info */
export interface OperationExtendedInfo {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "OperationJobExtendedInfo";
}

/** Operation Resource */
export interface OperationResource {
  /** End time of the operation */
  endTime?: Date;
  /**
   * Required if status == failed or status == canceled. This is the OData v4 error format, used by the RPC and will go into the v2.2 Azure REST API guidelines.
   * The full set of optional properties (e.g. inner errors / details) can be found in the "Error Response" section.
   */
  error?: ErrorModel;
  /** It should match what is used to GET the operation result */
  id?: string;
  /** It must match the last segment of the "id" field, and will typically be a GUID / system generated value */
  name?: string;
  /** End time of the operation */
  properties?: OperationExtendedInfoUnion;
  /** Start time of the operation */
  startTime?: Date;
  status?: string;
}

/** Patch Request content for Microsoft.DataProtection resources */
export interface PatchResourceRequestInput {
  /** Input Managed Identity Details */
  identity?: DppIdentityDetails;
  /** Resource properties. */
  properties?: PatchBackupVaultInput;
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** Backup Vault Contract for Patch Backup Vault API. */
export interface PatchBackupVaultInput {
  /** Monitoring Settings */
  monitoringSettings?: MonitoringSettings;
  /** Security Settings */
  securitySettings?: SecuritySettings;
  /** Feature Settings */
  featureSettings?: FeatureSettings;
}

/** CheckNameAvailability Request */
export interface CheckNameAvailabilityRequest {
  /** Resource name for which availability needs to be checked */
  name?: string;
  /** Describes the Resource type: Microsoft.DataProtection/BackupVaults */
  type?: string;
}

/** CheckNameAvailability Result */
export interface CheckNameAvailabilityResult {
  /** Gets or sets the message. */
  message?: string;
  /** Gets or sets a value indicating whether [name available]. */
  nameAvailable?: boolean;
  /** Gets or sets the reason. */
  reason?: string;
}

/** Base class for Backup Feature support */
export interface FeatureValidationRequestBase {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "FeatureValidationRequest";
}

/** Base class for Backup Feature support */
export interface FeatureValidationResponseBase {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "FeatureValidationResponse";
}

/** Operations List response which contains list of available APIs. */
export interface ClientDiscoveryResponse {
  /** Link to the next chunk of Response. */
  nextLink?: string;
  /** List of available operations. */
  value?: ClientDiscoveryValueForSingleApi[];
}

/** Available operation details. */
export interface ClientDiscoveryValueForSingleApi {
  /** Contains the localized display information for this particular operation */
  display?: ClientDiscoveryDisplay;
  /** Name of the Operation. */
  name?: string;
  /** Indicates whether the operation is a data action */
  isDataAction?: boolean;
  /** The intended executor of the operation;governs the display of the operation in the RBAC UX and the audit logs UX */
  origin?: string;
  /** Properties for the given operation. */
  properties?: ClientDiscoveryForProperties;
}

/** Localized display information of an operation. */
export interface ClientDiscoveryDisplay {
  /** Description of the operation having details of what operation is about. */
  description?: string;
  /** Operations Name itself. */
  operation?: string;
  /** Name of the provider for display purposes */
  provider?: string;
  /** ResourceType for which this Operation can be performed. */
  resource?: string;
}

/** Class to represent shoebox properties in json client discovery. */
export interface ClientDiscoveryForProperties {
  /** Operation properties. */
  serviceSpecification?: ClientDiscoveryForServiceSpecification;
}

/** Class to represent shoebox service specification in json client discovery. */
export interface ClientDiscoveryForServiceSpecification {
  /** List of log specifications of this operation. */
  logSpecifications?: ClientDiscoveryForLogSpecification[];
}

/** Class to represent shoebox log specification in json client discovery. */
export interface ClientDiscoveryForLogSpecification {
  /** blob duration of shoebox log specification */
  blobDuration?: string;
  /** Localized display name */
  displayName?: string;
  /** Name for shoebox log specification. */
  name?: string;
}

/** BackupPolicy base */
export interface BaseBackupPolicy {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "BackupPolicy";
  /** Type of datasource for the backup management */
  datasourceTypes: string[];
}

/** Resource class */
export interface DppResource {
  /**
   * Resource Id represents the complete path to the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Resource name associated with the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Backup Instance */
export interface BackupInstance {
  /** Gets or sets the Backup Instance friendly name. */
  friendlyName?: string;
  /** Gets or sets the data source information. */
  dataSourceInfo: Datasource;
  /** Gets or sets the data source set information. */
  dataSourceSetInfo?: DatasourceSet;
  /** Gets or sets the policy information. */
  policyInfo: PolicyInfo;
  /**
   * Specifies the protection status of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protectionStatus?: ProtectionStatusDetails;
  /**
   * Specifies the current protection state of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly currentProtectionState?: CurrentProtectionState;
  /**
   * Specifies the protection error of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protectionErrorDetails?: UserFacingError;
  /**
   * Specifies the provisioning state of the resource i.e. provisioning/updating/Succeeded/Failed
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /** Credentials to use to authenticate with data source provider. */
  datasourceAuthCredentials?: AuthCredentialsUnion;
  /** Specifies the type of validation. In case of DeepValidation, all validations from /validateForBackup API will run again. */
  validationType?: ValidationType;
  /**
   * Contains information of the Identity Details for the BI.
   * If it is null, default will be considered as System Assigned.
   */
  identityDetails?: IdentityDetails;
  objectType: string;
}

/** Datasource to be backed up */
export interface Datasource {
  /** DatasourceType of the resource. */
  datasourceType?: string;
  /** Type of Datasource object, used to initialize the right inherited type */
  objectType?: string;
  /** Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault. */
  resourceID: string;
  /** Location of datasource. */
  resourceLocation?: string;
  /** Unique identifier of the resource in the context of parent. */
  resourceName?: string;
  /** Resource Type of Datasource. */
  resourceType?: string;
  /** Uri of the resource. */
  resourceUri?: string;
  /** Properties specific to data source */
  resourceProperties?: BaseResourceProperties;
}

/** Properties which are specific to datasource/datasourceSets */
export interface BaseResourceProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "BaseResourceProperties";
}

/** DatasourceSet details of datasource to be backed up */
export interface DatasourceSet {
  /** DatasourceType of the resource. */
  datasourceType?: string;
  /** Type of Datasource object, used to initialize the right inherited type */
  objectType?: string;
  /** Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault. */
  resourceID: string;
  /** Location of datasource. */
  resourceLocation?: string;
  /** Unique identifier of the resource in the context of parent. */
  resourceName?: string;
  /** Resource Type of Datasource. */
  resourceType?: string;
  /** Uri of the resource. */
  resourceUri?: string;
  /** Properties specific to data source set */
  resourceProperties?: BaseResourceProperties;
}

/** Policy Info in backupInstance */
export interface PolicyInfo {
  policyId: string;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly policyVersion?: string;
  /** Policy parameters for the backup instance */
  policyParameters?: PolicyParameters;
}

/** Parameters in Policy */
export interface PolicyParameters {
  /** Gets or sets the DataStore Parameters */
  dataStoreParametersList?: DataStoreParametersUnion[];
  /** Gets or sets the Backup Data Source Parameters */
  backupDatasourceParametersList?: BackupDatasourceParametersUnion[];
}

/** Parameters for DataStore */
export interface DataStoreParameters {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "AzureOperationalStoreParameters";
  /** type of datastore; Operational/Vault/Archive */
  dataStoreType: DataStoreTypes;
}

/** Parameters for Backup Datasource */
export interface BackupDatasourceParameters {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType:
    | "KubernetesClusterBackupDatasourceParameters"
    | "BlobBackupDatasourceParameters";
}

/** Protection status details */
export interface ProtectionStatusDetails {
  /** Specifies the protection status error of the resource */
  errorDetails?: UserFacingError;
  /** Specifies the protection status of the resource */
  status?: Status;
}

/** Error object used by layers that have access to localized content, and propagate that to user */
export interface UserFacingError {
  /** Unique code for this error */
  code?: string;
  /** Additional related Errors */
  details?: UserFacingError[];
  /** Inner Error */
  innerError?: InnerError;
  /** Whether the operation will be retryable or not */
  isRetryable?: boolean;
  /** Whether the operation is due to a user error or service error */
  isUserError?: boolean;
  /** Any key value pairs that can be injected inside error object */
  properties?: { [propertyName: string]: string };
  message?: string;
  /** RecommendedAction � localized. */
  recommendedAction?: string[];
  /** Target of the error. */
  target?: string;
}

/** Inner Error */
export interface InnerError {
  /** Any Key value pairs that can be provided to the client for additional  verbose information. */
  additionalInfo?: { [propertyName: string]: string };
  /** Unique code for this error */
  code?: string;
  /** Child Inner Error, to allow Nesting. */
  embeddedInnerError?: InnerError;
}

/** Base class for different types of authentication credentials. */
export interface AuthCredentials {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "SecretStoreBasedAuthCredentials";
}

export interface IdentityDetails {
  /** Specifies if the BI is protected by System Identity. */
  useSystemAssignedIdentity?: boolean;
  /** ARM URL for User Assigned Identity. */
  userAssignedIdentityArmUrl?: string;
}

export interface DppProxyResource {
  /**
   * Proxy Resource Id represents the complete path to the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Proxy Resource name associated with the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Proxy Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** Proxy Resource tags. */
  tags?: { [propertyName: string]: string };
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Trigger backup request */
export interface TriggerBackupRequest {
  /** Name for the Rule of the Policy which needs to be applied for this backup */
  backupRuleOptions: AdHocBackupRuleOptions;
}

/** Adhoc backup rules */
export interface AdHocBackupRuleOptions {
  ruleName: string;
  /** Adhoc backup trigger option */
  triggerOption: AdhocBackupTriggerOption;
}

/** Adhoc backup trigger option */
export interface AdhocBackupTriggerOption {
  retentionTagOverride?: string;
}

/** Validate for backup request */
export interface ValidateForBackupRequest {
  /** Backup Instance */
  backupInstance: BackupInstance;
}

/** Azure backup recoveryPoint */
export interface AzureBackupRecoveryPoint {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "AzureBackupDiscreteRecoveryPoint";
}

/** Azure Backup Rehydrate Request */
export interface AzureBackupRehydrationRequest {
  /** Id of the recovery point to be recovered */
  recoveryPointId: string;
  /** Priority to be used for rehydration. Values High or Standard */
  rehydrationPriority?: RehydrationPriority;
  /** Retention duration in ISO 8601 format i.e P10D . */
  rehydrationRetentionDuration: string;
}

/** Azure backup restore request */
export interface AzureBackupRestoreRequest {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType:
    | "AzureBackupRecoveryPointBasedRestoreRequest"
    | "AzureBackupRestoreWithRehydrationRequest"
    | "AzureBackupRecoveryTimeBasedRestoreRequest";
  /** Gets or sets the restore target information. */
  restoreTargetInfo: RestoreTargetInfoBaseUnion;
  /** Gets or sets the type of the source data store. */
  sourceDataStoreType: SourceDataStoreType;
  /** Fully qualified Azure Resource Manager ID of the datasource which is being recovered. */
  sourceResourceId?: string;
  /**
   * Contains information of the Identity Details for the BI.
   * If it is null, default will be considered as System Assigned.
   */
  identityDetails?: IdentityDetails;
}

/** Base class common to RestoreTargetInfo and RestoreFilesTargetInfo */
export interface RestoreTargetInfoBase {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType:
    | "ItemLevelRestoreTargetInfo"
    | "RestoreFilesTargetInfo"
    | "RestoreTargetInfo";
  /** Recovery Option */
  recoveryOption: RecoveryOption;
  /** Target Restore region */
  restoreLocation?: string;
}

/** Sync BackupInstance Request */
export interface SyncBackupInstanceRequest {
  /** Field indicating sync type e.g. to sync only in case of failure or in all cases */
  syncType?: SyncType;
}

/** Validate restore request object */
export interface ValidateRestoreRequestObject {
  /** Gets or sets the restore request object. */
  restoreRequestObject: AzureBackupRestoreRequestUnion;
}

/** AzureBackup Job Class */
export interface AzureBackupJob {
  /** Job Activity Id */
  activityID: string;
  /** Name of the Backup Instance */
  backupInstanceFriendlyName: string;
  /**
   * ARM ID of the Backup Instance
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly backupInstanceId?: string;
  /** ARM ID of the DataSource */
  dataSourceId: string;
  /** Location of the DataSource */
  dataSourceLocation: string;
  /** User Friendly Name of the DataSource */
  dataSourceName: string;
  /** Data Source Set Name of the DataSource */
  dataSourceSetName?: string;
  /** Type of DataSource */
  dataSourceType: string;
  /** Total run time of the job. ISO 8601 format. */
  duration?: string;
  /**
   * EndTime of the job(in UTC)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endTime?: Date;
  /**
   * A List, detailing the errors related to the job
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorDetails?: UserFacingError[];
  /**
   * Extended Information about the job
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly extendedInfo?: JobExtendedInfo;
  /** Indicated that whether the job is adhoc(true) or scheduled(false) */
  isUserTriggered: boolean;
  /** It indicates the type of Job i.e. Backup:full/log/diff ;Restore:ALR/OLR; Tiering:Backup/Archive ; Management:ConfigureProtection/UnConfigure */
  operation: string;
  /** It indicates the type of Job i.e. Backup/Restore/Tiering/Management */
  operationCategory: string;
  /**
   * ARM ID of the policy
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly policyId?: string;
  /**
   * Name of the policy
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly policyName?: string;
  /** Indicated whether progress is enabled for the job */
  progressEnabled: boolean;
  /**
   * Url which contains job's progress
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly progressUrl?: string;
  /**
   * Priority to be used for rehydration
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly rehydrationPriority?: string;
  /**
   * It indicates the sub type of operation i.e. in case of Restore it can be ALR/OLR
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly restoreType?: string;
  /** Resource Group Name of the Datasource */
  sourceResourceGroup: string;
  /** SubscriptionId corresponding to the DataSource */
  sourceSubscriptionID: string;
  /** StartTime of the job(in UTC) */
  startTime: Date;
  /** Status of the job like InProgress/Success/Failed/Cancelled/SuccessWithWarning */
  status: string;
  /** Subscription Id of the corresponding backup vault */
  subscriptionId: string;
  /** List of supported actions */
  supportedActions: string[];
  /** Name of the vault */
  vaultName: string;
  etag?: string;
  sourceDataStoreName?: string;
  destinationDataStoreName?: string;
}

/** Extended Information about the job */
export interface JobExtendedInfo {
  /** Job's Additional Details */
  additionalDetails?: { [propertyName: string]: string };
  /**
   * State of the Backup Instance
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly backupInstanceState?: string;
  /**
   * Number of bytes transferred
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dataTransferredInBytes?: number;
  /**
   * Destination where restore is done
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recoveryDestination?: string;
  /**
   * Details of the Source Recovery Point
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceRecoverPoint?: RestoreJobRecoveryPointDetails;
  /**
   * List of Sub Tasks of the job
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subTasks?: JobSubTask[];
  /**
   * Details of the Target Recovery Point
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetRecoverPoint?: RestoreJobRecoveryPointDetails;
}

export interface RestoreJobRecoveryPointDetails {
  recoveryPointID?: string;
  recoveryPointTime?: Date;
}

/** Details of Job's Sub Task */
export interface JobSubTask {
  /** Additional details of Sub Tasks */
  additionalDetails?: { [propertyName: string]: string };
  /** Task Id of the Sub Task */
  taskId: number;
  /** Name of the Sub Task */
  taskName: string;
  /**
   * Progress of the Sub Task
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly taskProgress?: string;
  /** Status of the Sub Task */
  taskStatus: string;
}

/** List Restore Ranges Request */
export interface AzureBackupFindRestorableTimeRangesRequest {
  /** Gets or sets the type of the source data store. */
  sourceDataStoreType: RestoreSourceDataStoreType;
  /** Start time for the List Restore Ranges request. ISO 8601 format. */
  startTime?: string;
  /** End time for the List Restore Ranges request. ISO 8601 format. */
  endTime?: string;
}

/** List Restore Ranges Response */
export interface AzureBackupFindRestorableTimeRangesResponse {
  /** Returns the Restore Ranges available on the Backup Instance. */
  restorableTimeRanges?: RestorableTimeRange[];
  objectType?: string;
}

export interface RestorableTimeRange {
  /** Start time for the available restore range */
  startTime: string;
  /** End time for the available restore range */
  endTime: string;
  objectType?: string;
}

/** The result for export jobs containing blob details. */
export interface ExportJobsResult {
  /**
   * URL of the blob into which the serialized string of list of jobs is exported.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly blobUrl?: string;
  /**
   * SAS key to access the blob.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly blobSasKey?: string;
  /**
   * URL of the blob into which the ExcelFile is uploaded.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly excelFileBlobUrl?: string;
  /**
   * SAS key to access the ExcelFile blob.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly excelFileBlobSasKey?: string;
}

/** Deletion Info */
export interface DeletionInfo {
  /**
   * Specifies time of deletion
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly deletionTime?: string;
  /**
   * Specifies billing end date
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingEndDate?: string;
  /**
   * Specifies purge time
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly scheduledPurgeTime?: string;
  /**
   * Delete activity ID for troubleshooting purpose
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly deleteActivityID?: string;
}

export interface ResourceGuard {
  /**
   * Provisioning state of the BackupVault resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * This flag indicates whether auto approval is allowed or not.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly allowAutoApprovals?: boolean;
  /**
   * {readonly} List of operation details those are protected by the ResourceGuard resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceGuardOperations?: ResourceGuardOperation[];
  /** List of critical operations which are not protected by this resourceGuard */
  vaultCriticalOperationExclusionList?: string[];
  /**
   * Description about the pre-req steps to perform all the critical operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** This class contains all the details about a critical operation. */
export interface ResourceGuardOperation {
  /**
   * Name of the critical operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vaultCriticalOperation?: string;
  /**
   * Type of resource request.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly requestResourceType?: string;
}

export interface DppTrackedResourceList {
  /** The uri to fetch the next page of resources. Call ListNext() fetches next page of resources. */
  nextLink?: string;
}

/** Patch Request content for Microsoft.DataProtection Resource Guard resources */
export interface PatchResourceGuardInput {
  /** Resource Guard tags. */
  tags?: { [propertyName: string]: string };
}

/** Base for all lists of V2 resources. */
export interface DppBaseResourceList {
  /** List of Dpp resources. */
  value?: DppBaseResource[];
  /** The uri to fetch the next page of resources. Call ListNext() fetches next page of resources. */
  nextLink?: string;
}

/** Base resource under Microsoft.DataProtection provider namespace */
export interface DppBaseResource {
  /**
   * Resource Id represents the complete path to the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Resource name associated with the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** ResourceGuardProxyBase object, used in ResourceGuardProxyBaseResource */
export interface ResourceGuardProxyBase {
  resourceGuardResourceId?: string;
  resourceGuardOperationDetails?: ResourceGuardOperationDetail[];
  lastUpdatedTime?: string;
  description?: string;
}

/** VaultCritical Operation protected by a resource guard */
export interface ResourceGuardOperationDetail {
  vaultCriticalOperation?: string;
  defaultResourceRequest?: string;
}

/** Request body of unlock delete API. */
export interface UnlockDeleteRequest {
  resourceGuardOperationRequests?: string[];
  resourceToBeDeleted?: string;
}

/** Response of Unlock Delete API. */
export interface UnlockDeleteResponse {
  /** This is the time when unlock delete privileges will get expired. */
  unlockDeleteExpiryTime?: string;
}

/** Delete Option */
export interface DeleteOption {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "AbsoluteDeleteOption";
  /** Duration of deletion after given timespan */
  duration: string;
}

export interface RecoveryPointsFilters {
  restorePointDataStoreId?: string;
  isVisible?: boolean;
  startDate?: string;
  endDate?: string;
  extendedInfo?: boolean;
  restorePointState?: string;
}

/** Adhoc backup tagging criteria */
export interface AdhocBasedTaggingCriteria {
  /** Retention tag information */
  tagInfo?: RetentionTag;
}

/** Retention tag */
export interface RetentionTag {
  /**
   * Retention Tag version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly eTag?: string;
  /**
   * Retention Tag version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /** Retention Tag Name to relate it to retention rule. */
  tagName: string;
}

/** Trigger context */
export interface TriggerContext {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "AdhocBasedTriggerContext" | "ScheduleBasedTriggerContext";
}

/** RecoveryPoint datastore details */
export interface RecoveryPointDataStoreDetails {
  creationTime?: Date;
  expiryTime?: Date;
  id?: string;
  metaData?: string;
  state?: string;
  type?: string;
  visible?: boolean;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly rehydrationExpiryTime?: Date;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly rehydrationStatus?: RehydrationStatus;
}

export interface DppWorkerRequest {
  subscriptionId?: string;
  uri?: string;
  /** Dictionary of <components·ikn5y4·schemas·dppworkerrequest·properties·headers·additionalproperties> */
  headers?: { [propertyName: string]: string[] };
  supportedGroupVersions?: string[];
  cultureInfo?: string;
  /** Dictionary of <string> */
  parameters?: { [propertyName: string]: string };
  httpMethod?: string;
}

/** BackupParameters base */
export interface BackupParameters {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "AzureBackupParams";
}

/** DataStoreInfo base */
export interface DataStoreInfoBase {
  /** type of datastore; Operational/Vault/Archive */
  dataStoreType: DataStoreTypes;
  /** Type of Datasource object, used to initialize the right inherited type */
  objectType: string;
}

/** BasePolicy Rule */
export interface BasePolicyRule {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "AzureBackupRule" | "AzureRetentionRule";
  name: string;
}

/** Class to refer resources which contains namespace and name */
export interface NamespacedNameResource {
  /** Name of the resource */
  name?: string;
  /** Namespace in which the resource exists */
  namespace?: string;
}

/** Source LifeCycle */
export interface SourceLifeCycle {
  /** Delete Option */
  deleteAfter: DeleteOptionUnion;
  /** DataStoreInfo base */
  sourceDataStore: DataStoreInfoBase;
  targetDataStoreCopySettings?: TargetCopySetting[];
}

/** Target copy settings */
export interface TargetCopySetting {
  /** It can be CustomCopyOption or ImmediateCopyOption. */
  copyAfter: CopyOptionUnion;
  /** Info of target datastore */
  dataStore: DataStoreInfoBase;
}

/** Options to copy */
export interface CopyOption {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "CopyOnExpiryOption" | "CustomCopyOption" | "ImmediateCopyOption";
}

/** BackupCriteria base class */
export interface BackupCriteria {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "ScheduleBasedBackupCriteria";
}

/** Schedule for backup */
export interface BackupSchedule {
  /** ISO 8601 repeating time interval format */
  repeatingTimeIntervals: string[];
  /** Time zone for a schedule. Example: Pacific Standard Time */
  timeZone?: string;
}

/** Day of the week */
export interface Day {
  /** Date of the month */
  date?: number;
  /** Whether Date is last date of month */
  isLast?: boolean;
}

/** Elements class for feature request */
export interface SupportedFeature {
  /** support feature type. */
  featureName?: string;
  /** feature support status */
  supportStatus?: FeatureSupportStatus;
  /** support feature type. */
  exposureControlledFeatures?: string[];
}

/** Class to contain criteria for item level restore */
export interface ItemLevelRestoreCriteria {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType:
    | "ItemPathBasedRestoreCriteria"
    | "RangeBasedItemLevelRestoreCriteria"
    | "KubernetesStorageClassRestoreCriteria"
    | "KubernetesPVRestoreCriteria"
    | "KubernetesClusterRestoreCriteria";
}

/** Class encapsulating target details, used where the destination is not a datasource */
export interface TargetDetails {
  /**
   * Restore operation may create multiple files inside location pointed by Url
   * Below will be the common prefix for all of them
   */
  filePrefix: string;
  /**
   * Denotes the target location where the data will be restored,
   * string value for the enum {Microsoft.Internal.AzureBackup.DataProtection.Common.Interface.RestoreTargetLocationType}
   */
  restoreTargetLocationType: RestoreTargetLocationType;
  /** Url denoting the restore destination. It can point to container / file share etc */
  url: string;
  /**
   * Full ARM Id denoting the restore destination. It is the ARM Id pointing to container / file share
   * This is optional if the target subscription can be identified with the URL field. If not
   * then this is needed if CrossSubscriptionRestore field of BackupVault is in any of the disabled states
   */
  targetResourceArmId?: string;
}

/** Tagging criteria */
export interface TaggingCriteria {
  /** Criteria which decides whether the tag can be applied to a triggered backup. */
  criteria?: BackupCriteriaUnion[];
  /** Specifies if tag is default. */
  isDefault: boolean;
  /** Retention Tag priority. */
  taggingPriority: number;
  /** Retention tag information */
  tagInfo: RetentionTag;
}

/** Class representing a secret store resource. */
export interface SecretStoreResource {
  /** Uri to get to the resource */
  uri?: string;
  /** Gets or sets the type of secret store */
  secretStoreType: SecretStoreType;
  /** Gets or sets value stored in secret store resource */
  value?: string;
}

export interface DppTrackedResource extends DppBaseTrackedResource {
  /** Input Managed Identity Details */
  identity?: DppIdentityDetails;
}

export interface ResourceGuardResource extends DppBaseTrackedResource {
  /** ResourceGuardResource properties */
  properties?: ResourceGuard;
}

/** List of BackupVault resources */
export interface BackupVaultResourceList extends DppResourceList {
  /** List of resources. */
  value?: BackupVaultResource[];
}

/** List of BaseBackupPolicy resources */
export interface BaseBackupPolicyResourceList extends DppResourceList {
  /** List of resources. */
  value?: BaseBackupPolicyResource[];
}

/** BackupInstance Resource list response */
export interface BackupInstanceResourceList extends DppResourceList {
  /** List of resources. */
  value?: BackupInstanceResource[];
}

/** Azure backup recoveryPoint resource list */
export interface AzureBackupRecoveryPointResourceList extends DppResourceList {
  /** List of resources. */
  value?: AzureBackupRecoveryPointResource[];
}

/** List of AzureBackup Job resources */
export interface AzureBackupJobResourceList extends DppResourceList {
  /** List of resources. */
  value?: AzureBackupJobResource[];
}

/** List of DeletedBackupInstance resources */
export interface DeletedBackupInstanceResourceList extends DppResourceList {
  /** List of resources. */
  value?: DeletedBackupInstanceResource[];
}

/** List of ResourceGuardProxyBase resources */
export interface ResourceGuardProxyBaseResourceList extends DppResourceList {
  /** List of resources. */
  value?: ResourceGuardProxyBaseResource[];
}

/** Operation Job Extended Info */
export interface OperationJobExtendedInfo extends OperationExtendedInfo {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "OperationJobExtendedInfo";
  /** Arm Id of the job created for this operation. */
  jobId?: string;
}

/** Base class for feature object */
export interface FeatureValidationRequest extends FeatureValidationRequestBase {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "FeatureValidationRequest";
  /** backup support feature type. */
  featureType?: FeatureType;
  /** backup support feature name. */
  featureName?: string;
}

/** Feature Validation Response */
export interface FeatureValidationResponse
  extends FeatureValidationResponseBase {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "FeatureValidationResponse";
  /** backup support feature type. */
  featureType?: FeatureType;
  /** Response features */
  features?: SupportedFeature[];
}

/** Rule based backup policy */
export interface BackupPolicy extends BaseBackupPolicy {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "BackupPolicy";
  /** Policy rule dictionary that contains rules for each backuptype i.e Full/Incremental/Logs etc */
  policyRules: BasePolicyRuleUnion[];
}

/** BaseBackupPolicy resource */
export interface BaseBackupPolicyResource extends DppResource {
  /** BaseBackupPolicyResource properties */
  properties?: BaseBackupPolicyUnion;
}

/** Azure backup recoveryPoint resource */
export interface AzureBackupRecoveryPointResource extends DppResource {
  /** AzureBackupRecoveryPointResource properties */
  properties?: AzureBackupRecoveryPointUnion;
}

/** AzureBackup Job Resource Class */
export interface AzureBackupJobResource extends DppResource {
  /** AzureBackupJobResource properties */
  properties?: AzureBackupJob;
}

/** List Restore Ranges Response */
export interface AzureBackupFindRestorableTimeRangesResponseResource
  extends DppResource {
  /** AzureBackupFindRestorableTimeRangesResponseResource properties */
  properties?: AzureBackupFindRestorableTimeRangesResponse;
}

/** Deleted Backup Instance */
export interface DeletedBackupInstanceResource extends DppResource {
  /** DeletedBackupInstanceResource properties */
  properties?: DeletedBackupInstance;
}

/** ResourceGuardProxyBaseResource object, used for response and request bodies for ResourceGuardProxy APIs */
export interface ResourceGuardProxyBaseResource extends DppResource {
  /** ResourceGuardProxyBaseResource properties */
  properties?: ResourceGuardProxyBase;
}

/** Deleted Backup Instance */
export interface DeletedBackupInstance extends BackupInstance {
  /**
   * Deletion info of Backup Instance
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly deletionInfo?: DeletionInfo;
}

/** Parameters for Operational-Tier DataStore */
export interface AzureOperationalStoreParameters extends DataStoreParameters {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "AzureOperationalStoreParameters";
  /** Gets or sets the Snapshot Resource Group Uri. */
  resourceGroupId?: string;
}

/** Parameters for Kubernetes Cluster Backup Datasource */
export interface KubernetesClusterBackupDatasourceParameters
  extends BackupDatasourceParameters {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "KubernetesClusterBackupDatasourceParameters";
  /** Gets or sets the volume snapshot property. This property if enabled will take volume snapshots during backup. */
  snapshotVolumes: boolean;
  /** Gets or sets the include cluster resources property. This property if enabled will include cluster scope resources during backup. */
  includeClusterScopeResources: boolean;
  /** Gets or sets the include namespaces property. This property sets the namespaces to be included during backup. */
  includedNamespaces?: string[];
  /** Gets or sets the exclude namespaces property. This property sets the namespaces to be excluded during backup. */
  excludedNamespaces?: string[];
  /** Gets or sets the include resource types property. This property sets the resource types to be included during backup. */
  includedResourceTypes?: string[];
  /** Gets or sets the exclude resource types property. This property sets the resource types to be excluded during backup. */
  excludedResourceTypes?: string[];
  /** Gets or sets the LabelSelectors property. This property sets the resource with such label selectors to be included during backup. */
  labelSelectors?: string[];
  /** Gets or sets the backup hook references. This property sets the hook reference to be executed during backup. */
  backupHookReferences?: NamespacedNameResource[];
}

/** Parameters to be used during configuration of backup of blobs */
export interface BlobBackupDatasourceParameters
  extends BackupDatasourceParameters {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "BlobBackupDatasourceParameters";
  /** List of containers to be backed up during configuration of backup of blobs */
  containersList: string[];
}

/** Secret store based authentication credentials. */
export interface SecretStoreBasedAuthCredentials extends AuthCredentials {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "SecretStoreBasedAuthCredentials";
  /** Secret store resource */
  secretStoreResource?: SecretStoreResource;
}

/** BackupInstance Resource */
export interface BackupInstanceResource extends DppProxyResource {
  /** BackupInstanceResource properties */
  properties?: BackupInstance;
}

/** Azure backup discrete RecoveryPoint */
export interface AzureBackupDiscreteRecoveryPoint
  extends AzureBackupRecoveryPoint {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "AzureBackupDiscreteRecoveryPoint";
  friendlyName?: string;
  recoveryPointDataStoresDetails?: RecoveryPointDataStoreDetails[];
  recoveryPointTime: Date;
  policyName?: string;
  policyVersion?: string;
  recoveryPointId?: string;
  recoveryPointType?: string;
  retentionTagName?: string;
  retentionTagVersion?: string;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly expiryTime?: Date;
}

/** Azure backup recoveryPoint based restore request */
export interface AzureBackupRecoveryPointBasedRestoreRequest
  extends AzureBackupRestoreRequest {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType:
    | "AzureBackupRecoveryPointBasedRestoreRequest"
    | "AzureBackupRestoreWithRehydrationRequest";
  recoveryPointId: string;
}

/** AzureBackup RecoveryPointTime Based Restore Request */
export interface AzureBackupRecoveryTimeBasedRestoreRequest
  extends AzureBackupRestoreRequest {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "AzureBackupRecoveryTimeBasedRestoreRequest";
  /** The recovery time in ISO 8601 format example - 2020-08-14T17:30:00.0000000Z. */
  recoveryPointTime: string;
}

/** Restore target info for Item level restore operation */
export interface ItemLevelRestoreTargetInfo extends RestoreTargetInfoBase {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "ItemLevelRestoreTargetInfo";
  /** Restore Criteria */
  restoreCriteria: ItemLevelRestoreCriteriaUnion[];
  /** Information of target DS */
  datasourceInfo: Datasource;
  /** Information of target DS Set */
  datasourceSetInfo?: DatasourceSet;
  /** Credentials to use to authenticate with data source provider. */
  datasourceAuthCredentials?: AuthCredentialsUnion;
}

/** Class encapsulating restore as files target parameters */
export interface RestoreFilesTargetInfo extends RestoreTargetInfoBase {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "RestoreFilesTargetInfo";
  /** Destination of RestoreAsFiles operation, when destination is not a datasource */
  targetDetails: TargetDetails;
}

/** Class encapsulating restore target parameters */
export interface RestoreTargetInfo extends RestoreTargetInfoBase {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "RestoreTargetInfo";
  /** Information of target DS */
  datasourceInfo: Datasource;
  /** Information of target DS Set */
  datasourceSetInfo?: DatasourceSet;
  /** Credentials to use to authenticate with data source provider. */
  datasourceAuthCredentials?: AuthCredentialsUnion;
}

/** List of ResourceGuard resources */
export interface ResourceGuardResourceList extends DppTrackedResourceList {
  /** List of resources. */
  value?: ResourceGuardResource[];
}

/** Delete option with duration */
export interface AbsoluteDeleteOption extends DeleteOption {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "AbsoluteDeleteOption";
}

/** Adhoc trigger context */
export interface AdhocBasedTriggerContext extends TriggerContext {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "AdhocBasedTriggerContext";
  /** Tagging Criteria containing retention tag for adhoc backup. */
  taggingCriteria: AdhocBasedTaggingCriteria;
}

/** Schedule based trigger context */
export interface ScheduleBasedTriggerContext extends TriggerContext {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "ScheduleBasedTriggerContext";
  /** Schedule for this backup */
  schedule: BackupSchedule;
  /** List of tags that can be applicable for given schedule. */
  taggingCriteria: TaggingCriteria[];
}

/** List Restore Ranges Request */
export interface AzureBackupFindRestorableTimeRangesRequestResource
  extends DppWorkerRequest {
  /** AzureBackupFindRestorableTimeRangesRequestResource content */
  content?: AzureBackupFindRestorableTimeRangesRequest;
}

/** Azure backup parameters */
export interface AzureBackupParams extends BackupParameters {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "AzureBackupParams";
  /** BackupType ; Full/Incremental etc */
  backupType: string;
}

/** Azure backup rule */
export interface AzureBackupRule extends BasePolicyRule {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "AzureBackupRule";
  /** BackupParameters base */
  backupParameters?: BackupParametersUnion;
  /** DataStoreInfo base */
  dataStore: DataStoreInfoBase;
  /** Trigger context */
  trigger: TriggerContextUnion;
}

/** Azure retention rule */
export interface AzureRetentionRule extends BasePolicyRule {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "AzureRetentionRule";
  isDefault?: boolean;
  lifecycles: SourceLifeCycle[];
}

/** Copy on Expiry Option */
export interface CopyOnExpiryOption extends CopyOption {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "CopyOnExpiryOption";
}

/** Duration based custom options to copy */
export interface CustomCopyOption extends CopyOption {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "CustomCopyOption";
  /** Data copied after given timespan */
  duration?: string;
}

/** Immediate copy Option */
export interface ImmediateCopyOption extends CopyOption {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "ImmediateCopyOption";
}

/** Schedule based backup criteria */
export interface ScheduleBasedBackupCriteria extends BackupCriteria {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "ScheduleBasedBackupCriteria";
  /**
   * it contains absolute values like "AllBackup" / "FirstOfDay" / "FirstOfWeek" / "FirstOfMonth"
   * and should be part of AbsoluteMarker enum
   */
  absoluteCriteria?: AbsoluteMarker[];
  /** This is day of the month from 1 to 28 other wise last of month */
  daysOfMonth?: Day[];
  /** It should be Sunday/Monday/T..../Saturday */
  daysOfTheWeek?: DayOfWeek[];
  /** It should be January/February/....../December */
  monthsOfYear?: Month[];
  /** List of schedule times for backup */
  scheduleTimes?: Date[];
  /** It should be First/Second/Third/Fourth/Last */
  weeksOfTheMonth?: WeekNumber[];
}

/** Prefix criteria to be used to during restore */
export interface ItemPathBasedRestoreCriteria extends ItemLevelRestoreCriteria {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "ItemPathBasedRestoreCriteria";
  /** The path of the item to be restored. It could be the full path of the item or the path relative to the backup item */
  itemPath: string;
  /** Flag to specify if the path is relative to backup item or full path */
  isPathRelativeToBackupItem: boolean;
  /** The list of prefix strings to be used as filter criteria during restore. These are relative to the item path specified. */
  subItemPathPrefix?: string[];
}

/** Item Level target info for restore operation */
export interface RangeBasedItemLevelRestoreCriteria
  extends ItemLevelRestoreCriteria {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "RangeBasedItemLevelRestoreCriteria";
  /** minimum value for range prefix match */
  minMatchingValue?: string;
  /** maximum value for range prefix match */
  maxMatchingValue?: string;
}

/** Item Level kubernetes storage class target info for restore operation */
export interface KubernetesStorageClassRestoreCriteria
  extends ItemLevelRestoreCriteria {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "KubernetesStorageClassRestoreCriteria";
  /** Selected storage class name */
  selectedStorageClassName?: string;
  /** Provisioner of the storage class */
  provisioner?: string;
}

/** Item Level kubernetes persistent volume target info for restore operation */
export interface KubernetesPVRestoreCriteria extends ItemLevelRestoreCriteria {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "KubernetesPVRestoreCriteria";
  /** Selected persistent volume claim name */
  name?: string;
  /** Selected storage class name for restore operation */
  storageClassName?: string;
}

/** kubernetes Cluster Backup target info for restore operation */
export interface KubernetesClusterRestoreCriteria
  extends ItemLevelRestoreCriteria {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "KubernetesClusterRestoreCriteria";
  /** Gets or sets the include cluster resources property. This property if enabled will include cluster scope resources during restore. */
  includeClusterScopeResources: boolean;
  /** Gets or sets the include namespaces property. This property sets the namespaces to be included during restore. */
  includedNamespaces?: string[];
  /** Gets or sets the exclude namespaces property. This property sets the namespaces to be excluded during restore. */
  excludedNamespaces?: string[];
  /** Gets or sets the include resource types property. This property sets the resource types to be included during restore. */
  includedResourceTypes?: string[];
  /** Gets or sets the exclude resource types property. This property sets the resource types to be excluded during restore. */
  excludedResourceTypes?: string[];
  /** Gets or sets the LabelSelectors property. This property sets the resource with such label selectors to be included during restore. */
  labelSelectors?: string[];
  /** Gets or sets the PV (Persistent Volume) Restore Mode property. This property sets whether volumes needs to be restored. */
  persistentVolumeRestoreMode?: PersistentVolumeRestoreMode;
  /** Gets or sets the Conflict Policy property. This property sets policy during conflict of resources during restore. */
  conflictPolicy?: ExistingResourcePolicy;
  /** Gets or sets the Namespace Mappings property. This property sets if namespace needs to be change during restore. */
  namespaceMappings?: { [propertyName: string]: string };
  /** Gets or sets the restore hook references. This property sets the hook reference to be executed during restore. */
  restoreHookReferences?: NamespacedNameResource[];
}

/** Backup Vault Resource */
export interface BackupVaultResource extends DppTrackedResource {
  /** BackupVaultResource properties */
  properties: BackupVault;
}

/** AzureBackup Restore with Rehydration Request */
export interface AzureBackupRestoreWithRehydrationRequest
  extends AzureBackupRecoveryPointBasedRestoreRequest {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  objectType: "AzureBackupRestoreWithRehydrationRequest";
  /** Priority to be used for rehydration. Values High or Standard */
  rehydrationPriority: RehydrationPriority;
  /** Retention duration in ISO 8601 format i.e P10D . */
  rehydrationRetentionDuration: string;
}

/** Defines headers for OperationResult_get operation. */
export interface OperationResultGetHeaders {
  /** The URL of the resource used to check the status of the asynchronous operation. */
  location?: string;
  /** The URL of the resource used to check the status of the asynchronous operation. */
  azureAsyncOperation?: string;
  /** Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds. */
  retryAfter?: number;
}

/** Defines headers for BackupVaultOperationResults_get operation. */
export interface BackupVaultOperationResultsGetHeaders {
  /** The URL of the resource used to check the status of the asynchronous operation. */
  location?: string;
  /** The URL of the resource used to check the status of the asynchronous operation. */
  azureAsyncOperation?: string;
  /** Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds. */
  retryAfter?: number;
}

/** Defines headers for BackupInstances_createOrUpdate operation. */
export interface BackupInstancesCreateOrUpdateHeaders {
  /** The URL of the resource used to check the status of the asynchronous operation. */
  location?: string;
  /** The URL of the resource used to check the status of the asynchronous operation. */
  azureAsyncOperation?: string;
}

/** Defines headers for BackupInstances_delete operation. */
export interface BackupInstancesDeleteHeaders {
  /** The URL of the resource used to check the status of the asynchronous operation. */
  location?: string;
  /** The URL of the resource used to check the status of the asynchronous operation. */
  azureAsyncOperation?: string;
  /** Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds. */
  retryAfter?: number;
}

/** Defines headers for BackupInstances_adhocBackup operation. */
export interface BackupInstancesAdhocBackupHeaders {
  /** The URL of the resource used to check the status of the asynchronous operation. */
  location?: string;
  /** The URL of the resource used to check the status of the asynchronous operation. */
  azureAsyncOperation?: string;
  /** Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds. */
  retryAfter?: number;
}

/** Defines headers for BackupInstances_validateForBackup operation. */
export interface BackupInstancesValidateForBackupHeaders {
  /** The URL of the resource used to check the status of the asynchronous operation. */
  location?: string;
  /** The URL of the resource used to check the status of the asynchronous operation. */
  azureAsyncOperation?: string;
  /** Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds. */
  retryAfter?: number;
}

/** Defines headers for BackupInstances_triggerRehydrate operation. */
export interface BackupInstancesTriggerRehydrateHeaders {
  /** The URL of the resource used to check the status of the asynchronous operation. */
  location?: string;
  /** The URL of the resource used to check the status of the asynchronous operation. */
  azureAsyncOperation?: string;
  /** Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds. */
  retryAfter?: number;
}

/** Defines headers for BackupInstances_triggerRestore operation. */
export interface BackupInstancesTriggerRestoreHeaders {
  /** The URL of the resource used to check the status of the asynchronous operation. */
  location?: string;
  /** The URL of the resource used to check the status of the asynchronous operation. */
  azureAsyncOperation?: string;
  /** Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds. */
  retryAfter?: number;
}

/** Defines headers for BackupInstances_resumeBackups operation. */
export interface BackupInstancesResumeBackupsHeaders {
  /** The URL of the resource used to check the status of the asynchronous operation. */
  location?: string;
  /** The URL of the resource used to check the status of the asynchronous operation. */
  azureAsyncOperation?: string;
  /** Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds. */
  retryAfter?: number;
}

/** Defines headers for BackupInstances_resumeProtection operation. */
export interface BackupInstancesResumeProtectionHeaders {
  /** The URL of the resource used to check the status of the asynchronous operation. */
  location?: string;
  /** The URL of the resource used to check the status of the asynchronous operation. */
  azureAsyncOperation?: string;
  /** Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds. */
  retryAfter?: number;
}

/** Defines headers for BackupInstances_stopProtection operation. */
export interface BackupInstancesStopProtectionHeaders {
  /** The URL of the resource used to check the status of the asynchronous operation. */
  location?: string;
  /** The URL of the resource used to check the status of the asynchronous operation. */
  azureAsyncOperation?: string;
  /** Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds. */
  retryAfter?: number;
}

/** Defines headers for BackupInstances_suspendBackups operation. */
export interface BackupInstancesSuspendBackupsHeaders {
  /** The URL of the resource used to check the status of the asynchronous operation. */
  location?: string;
  /** The URL of the resource used to check the status of the asynchronous operation. */
  azureAsyncOperation?: string;
  /** Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds. */
  retryAfter?: number;
}

/** Defines headers for BackupInstances_syncBackupInstance operation. */
export interface BackupInstancesSyncBackupInstanceHeaders {
  /** The URL of the resource used to check the status of the asynchronous operation. */
  location?: string;
  /** The URL of the resource used to check the status of the asynchronous operation. */
  azureAsyncOperation?: string;
  /** Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds. */
  retryAfter?: number;
}

/** Defines headers for BackupInstances_validateForRestore operation. */
export interface BackupInstancesValidateForRestoreHeaders {
  /** The URL of the resource used to check the status of the asynchronous operation. */
  location?: string;
  /** The URL of the resource used to check the status of the asynchronous operation. */
  azureAsyncOperation?: string;
  /** Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds. */
  retryAfter?: number;
}

/** Defines headers for ExportJobs_trigger operation. */
export interface ExportJobsTriggerHeaders {
  /** The URL of the resource used to check the status of the asynchronous operation. */
  location?: string;
  /** Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds. */
  retryAfter?: number;
}

/** Known values of {@link AlertsState} that the service accepts. */
export enum KnownAlertsState {
  /** Enabled */
  Enabled = "Enabled",
  /** Disabled */
  Disabled = "Disabled"
}

/**
 * Defines values for AlertsState. \
 * {@link KnownAlertsState} can be used interchangeably with AlertsState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export type AlertsState = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Failed */
  Failed = "Failed",
  /** Provisioning */
  Provisioning = "Provisioning",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Unknown */
  Unknown = "Unknown",
  /** Updating */
  Updating = "Updating"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Failed** \
 * **Provisioning** \
 * **Succeeded** \
 * **Unknown** \
 * **Updating**
 */
export type ProvisioningState = string;

/** Known values of {@link ResourceMoveState} that the service accepts. */
export enum KnownResourceMoveState {
  /** Unknown */
  Unknown = "Unknown",
  /** InProgress */
  InProgress = "InProgress",
  /** PrepareFailed */
  PrepareFailed = "PrepareFailed",
  /** CommitFailed */
  CommitFailed = "CommitFailed",
  /** Failed */
  Failed = "Failed",
  /** PrepareTimedout */
  PrepareTimedout = "PrepareTimedout",
  /** CommitTimedout */
  CommitTimedout = "CommitTimedout",
  /** CriticalFailure */
  CriticalFailure = "CriticalFailure",
  /** PartialSuccess */
  PartialSuccess = "PartialSuccess",
  /** MoveSucceeded */
  MoveSucceeded = "MoveSucceeded"
}

/**
 * Defines values for ResourceMoveState. \
 * {@link KnownResourceMoveState} can be used interchangeably with ResourceMoveState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **InProgress** \
 * **PrepareFailed** \
 * **CommitFailed** \
 * **Failed** \
 * **PrepareTimedout** \
 * **CommitTimedout** \
 * **CriticalFailure** \
 * **PartialSuccess** \
 * **MoveSucceeded**
 */
export type ResourceMoveState = string;

/** Known values of {@link SoftDeleteState} that the service accepts. */
export enum KnownSoftDeleteState {
  /** Soft Delete is turned off for the BackupVault */
  Off = "Off",
  /** Soft Delete is enabled for the BackupVault but can be turned off */
  On = "On",
  /** Soft Delete is permanently enabled for the BackupVault and the setting cannot be changed */
  AlwaysOn = "AlwaysOn"
}

/**
 * Defines values for SoftDeleteState. \
 * {@link KnownSoftDeleteState} can be used interchangeably with SoftDeleteState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Off**: Soft Delete is turned off for the BackupVault \
 * **On**: Soft Delete is enabled for the BackupVault but can be turned off \
 * **AlwaysOn**: Soft Delete is permanently enabled for the BackupVault and the setting cannot be changed
 */
export type SoftDeleteState = string;

/** Known values of {@link ImmutabilityState} that the service accepts. */
export enum KnownImmutabilityState {
  /** Disabled */
  Disabled = "Disabled",
  /** Unlocked */
  Unlocked = "Unlocked",
  /** Locked */
  Locked = "Locked"
}

/**
 * Defines values for ImmutabilityState. \
 * {@link KnownImmutabilityState} can be used interchangeably with ImmutabilityState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Unlocked** \
 * **Locked**
 */
export type ImmutabilityState = string;

/** Known values of {@link StorageSettingStoreTypes} that the service accepts. */
export enum KnownStorageSettingStoreTypes {
  /** ArchiveStore */
  ArchiveStore = "ArchiveStore",
  /** OperationalStore */
  OperationalStore = "OperationalStore",
  /** VaultStore */
  VaultStore = "VaultStore"
}

/**
 * Defines values for StorageSettingStoreTypes. \
 * {@link KnownStorageSettingStoreTypes} can be used interchangeably with StorageSettingStoreTypes,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ArchiveStore** \
 * **OperationalStore** \
 * **VaultStore**
 */
export type StorageSettingStoreTypes = string;

/** Known values of {@link StorageSettingTypes} that the service accepts. */
export enum KnownStorageSettingTypes {
  /** GeoRedundant */
  GeoRedundant = "GeoRedundant",
  /** LocallyRedundant */
  LocallyRedundant = "LocallyRedundant",
  /** ZoneRedundant */
  ZoneRedundant = "ZoneRedundant"
}

/**
 * Defines values for StorageSettingTypes. \
 * {@link KnownStorageSettingTypes} can be used interchangeably with StorageSettingTypes,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **GeoRedundant** \
 * **LocallyRedundant** \
 * **ZoneRedundant**
 */
export type StorageSettingTypes = string;

/** Known values of {@link CrossSubscriptionRestoreState} that the service accepts. */
export enum KnownCrossSubscriptionRestoreState {
  /** Disabled */
  Disabled = "Disabled",
  /** PermanentlyDisabled */
  PermanentlyDisabled = "PermanentlyDisabled",
  /** Enabled */
  Enabled = "Enabled"
}

/**
 * Defines values for CrossSubscriptionRestoreState. \
 * {@link KnownCrossSubscriptionRestoreState} can be used interchangeably with CrossSubscriptionRestoreState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **PermanentlyDisabled** \
 * **Enabled**
 */
export type CrossSubscriptionRestoreState = string;

/** Known values of {@link CrossRegionRestoreState} that the service accepts. */
export enum KnownCrossRegionRestoreState {
  /** Disabled */
  Disabled = "Disabled",
  /** Enabled */
  Enabled = "Enabled"
}

/**
 * Defines values for CrossRegionRestoreState. \
 * {@link KnownCrossRegionRestoreState} can be used interchangeably with CrossRegionRestoreState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Enabled**
 */
export type CrossRegionRestoreState = string;

/** Known values of {@link SecureScoreLevel} that the service accepts. */
export enum KnownSecureScoreLevel {
  /** None */
  None = "None",
  /** Minimum */
  Minimum = "Minimum",
  /** Adequate */
  Adequate = "Adequate",
  /** Maximum */
  Maximum = "Maximum",
  /** NotSupported */
  NotSupported = "NotSupported"
}

/**
 * Defines values for SecureScoreLevel. \
 * {@link KnownSecureScoreLevel} can be used interchangeably with SecureScoreLevel,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **Minimum** \
 * **Adequate** \
 * **Maximum** \
 * **NotSupported**
 */
export type SecureScoreLevel = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link DataStoreTypes} that the service accepts. */
export enum KnownDataStoreTypes {
  /** OperationalStore */
  OperationalStore = "OperationalStore",
  /** VaultStore */
  VaultStore = "VaultStore",
  /** ArchiveStore */
  ArchiveStore = "ArchiveStore"
}

/**
 * Defines values for DataStoreTypes. \
 * {@link KnownDataStoreTypes} can be used interchangeably with DataStoreTypes,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **OperationalStore** \
 * **VaultStore** \
 * **ArchiveStore**
 */
export type DataStoreTypes = string;

/** Known values of {@link Status} that the service accepts. */
export enum KnownStatus {
  /** ConfiguringProtection */
  ConfiguringProtection = "ConfiguringProtection",
  /** ConfiguringProtectionFailed */
  ConfiguringProtectionFailed = "ConfiguringProtectionFailed",
  /** ProtectionConfigured */
  ProtectionConfigured = "ProtectionConfigured",
  /** ProtectionStopped */
  ProtectionStopped = "ProtectionStopped",
  /** SoftDeleted */
  SoftDeleted = "SoftDeleted",
  /** SoftDeleting */
  SoftDeleting = "SoftDeleting"
}

/**
 * Defines values for Status. \
 * {@link KnownStatus} can be used interchangeably with Status,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ConfiguringProtection** \
 * **ConfiguringProtectionFailed** \
 * **ProtectionConfigured** \
 * **ProtectionStopped** \
 * **SoftDeleted** \
 * **SoftDeleting**
 */
export type Status = string;

/** Known values of {@link CurrentProtectionState} that the service accepts. */
export enum KnownCurrentProtectionState {
  /** Invalid */
  Invalid = "Invalid",
  /** NotProtected */
  NotProtected = "NotProtected",
  /** ConfiguringProtection */
  ConfiguringProtection = "ConfiguringProtection",
  /** ProtectionConfigured */
  ProtectionConfigured = "ProtectionConfigured",
  /** BackupSchedulesSuspended */
  BackupSchedulesSuspended = "BackupSchedulesSuspended",
  /** RetentionSchedulesSuspended */
  RetentionSchedulesSuspended = "RetentionSchedulesSuspended",
  /** ProtectionStopped */
  ProtectionStopped = "ProtectionStopped",
  /** ProtectionError */
  ProtectionError = "ProtectionError",
  /** ConfiguringProtectionFailed */
  ConfiguringProtectionFailed = "ConfiguringProtectionFailed",
  /** SoftDeleting */
  SoftDeleting = "SoftDeleting",
  /** SoftDeleted */
  SoftDeleted = "SoftDeleted",
  /** UpdatingProtection */
  UpdatingProtection = "UpdatingProtection"
}

/**
 * Defines values for CurrentProtectionState. \
 * {@link KnownCurrentProtectionState} can be used interchangeably with CurrentProtectionState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **NotProtected** \
 * **ConfiguringProtection** \
 * **ProtectionConfigured** \
 * **BackupSchedulesSuspended** \
 * **RetentionSchedulesSuspended** \
 * **ProtectionStopped** \
 * **ProtectionError** \
 * **ConfiguringProtectionFailed** \
 * **SoftDeleting** \
 * **SoftDeleted** \
 * **UpdatingProtection**
 */
export type CurrentProtectionState = string;

/** Known values of {@link ValidationType} that the service accepts. */
export enum KnownValidationType {
  /** ShallowValidation */
  ShallowValidation = "ShallowValidation",
  /** DeepValidation */
  DeepValidation = "DeepValidation"
}

/**
 * Defines values for ValidationType. \
 * {@link KnownValidationType} can be used interchangeably with ValidationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ShallowValidation** \
 * **DeepValidation**
 */
export type ValidationType = string;

/** Known values of {@link RehydrationPriority} that the service accepts. */
export enum KnownRehydrationPriority {
  /** Invalid */
  Invalid = "Invalid",
  /** High */
  High = "High",
  /** Standard */
  Standard = "Standard"
}

/**
 * Defines values for RehydrationPriority. \
 * {@link KnownRehydrationPriority} can be used interchangeably with RehydrationPriority,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **High** \
 * **Standard**
 */
export type RehydrationPriority = string;

/** Known values of {@link RecoveryOption} that the service accepts. */
export enum KnownRecoveryOption {
  /** FailIfExists */
  FailIfExists = "FailIfExists"
}

/**
 * Defines values for RecoveryOption. \
 * {@link KnownRecoveryOption} can be used interchangeably with RecoveryOption,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **FailIfExists**
 */
export type RecoveryOption = string;

/** Known values of {@link SourceDataStoreType} that the service accepts. */
export enum KnownSourceDataStoreType {
  /** ArchiveStore */
  ArchiveStore = "ArchiveStore",
  /** SnapshotStore */
  SnapshotStore = "SnapshotStore",
  /** OperationalStore */
  OperationalStore = "OperationalStore",
  /** VaultStore */
  VaultStore = "VaultStore"
}

/**
 * Defines values for SourceDataStoreType. \
 * {@link KnownSourceDataStoreType} can be used interchangeably with SourceDataStoreType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ArchiveStore** \
 * **SnapshotStore** \
 * **OperationalStore** \
 * **VaultStore**
 */
export type SourceDataStoreType = string;

/** Known values of {@link SyncType} that the service accepts. */
export enum KnownSyncType {
  /** Default */
  Default = "Default",
  /** ForceResync */
  ForceResync = "ForceResync"
}

/**
 * Defines values for SyncType. \
 * {@link KnownSyncType} can be used interchangeably with SyncType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Default** \
 * **ForceResync**
 */
export type SyncType = string;

/** Known values of {@link RestoreSourceDataStoreType} that the service accepts. */
export enum KnownRestoreSourceDataStoreType {
  /** OperationalStore */
  OperationalStore = "OperationalStore",
  /** VaultStore */
  VaultStore = "VaultStore",
  /** ArchiveStore */
  ArchiveStore = "ArchiveStore"
}

/**
 * Defines values for RestoreSourceDataStoreType. \
 * {@link KnownRestoreSourceDataStoreType} can be used interchangeably with RestoreSourceDataStoreType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **OperationalStore** \
 * **VaultStore** \
 * **ArchiveStore**
 */
export type RestoreSourceDataStoreType = string;

/** Known values of {@link RehydrationStatus} that the service accepts. */
export enum KnownRehydrationStatus {
  /** CreateINProgress */
  CreateINProgress = "CREATE_IN_PROGRESS",
  /** Completed */
  Completed = "COMPLETED",
  /** DeleteINProgress */
  DeleteINProgress = "DELETE_IN_PROGRESS",
  /** Deleted */
  Deleted = "DELETED",
  /** Failed */
  Failed = "FAILED"
}

/**
 * Defines values for RehydrationStatus. \
 * {@link KnownRehydrationStatus} can be used interchangeably with RehydrationStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **CREATE_IN_PROGRESS** \
 * **COMPLETED** \
 * **DELETE_IN_PROGRESS** \
 * **DELETED** \
 * **FAILED**
 */
export type RehydrationStatus = string;

/** Known values of {@link FeatureType} that the service accepts. */
export enum KnownFeatureType {
  /** Invalid */
  Invalid = "Invalid",
  /** DataSourceType */
  DataSourceType = "DataSourceType"
}

/**
 * Defines values for FeatureType. \
 * {@link KnownFeatureType} can be used interchangeably with FeatureType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **DataSourceType**
 */
export type FeatureType = string;

/** Known values of {@link FeatureSupportStatus} that the service accepts. */
export enum KnownFeatureSupportStatus {
  /** Invalid */
  Invalid = "Invalid",
  /** NotSupported */
  NotSupported = "NotSupported",
  /** AlphaPreview */
  AlphaPreview = "AlphaPreview",
  /** PrivatePreview */
  PrivatePreview = "PrivatePreview",
  /** PublicPreview */
  PublicPreview = "PublicPreview",
  /** GenerallyAvailable */
  GenerallyAvailable = "GenerallyAvailable"
}

/**
 * Defines values for FeatureSupportStatus. \
 * {@link KnownFeatureSupportStatus} can be used interchangeably with FeatureSupportStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **NotSupported** \
 * **AlphaPreview** \
 * **PrivatePreview** \
 * **PublicPreview** \
 * **GenerallyAvailable**
 */
export type FeatureSupportStatus = string;

/** Known values of {@link PersistentVolumeRestoreMode} that the service accepts. */
export enum KnownPersistentVolumeRestoreMode {
  /** RestoreWithVolumeData */
  RestoreWithVolumeData = "RestoreWithVolumeData",
  /** RestoreWithoutVolumeData */
  RestoreWithoutVolumeData = "RestoreWithoutVolumeData"
}

/**
 * Defines values for PersistentVolumeRestoreMode. \
 * {@link KnownPersistentVolumeRestoreMode} can be used interchangeably with PersistentVolumeRestoreMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **RestoreWithVolumeData** \
 * **RestoreWithoutVolumeData**
 */
export type PersistentVolumeRestoreMode = string;

/** Known values of {@link ExistingResourcePolicy} that the service accepts. */
export enum KnownExistingResourcePolicy {
  /** Skip */
  Skip = "Skip",
  /** Patch */
  Patch = "Patch"
}

/**
 * Defines values for ExistingResourcePolicy. \
 * {@link KnownExistingResourcePolicy} can be used interchangeably with ExistingResourcePolicy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Skip** \
 * **Patch**
 */
export type ExistingResourcePolicy = string;

/** Known values of {@link RestoreTargetLocationType} that the service accepts. */
export enum KnownRestoreTargetLocationType {
  /** Invalid */
  Invalid = "Invalid",
  /** AzureBlobs */
  AzureBlobs = "AzureBlobs",
  /** AzureFiles */
  AzureFiles = "AzureFiles"
}

/**
 * Defines values for RestoreTargetLocationType. \
 * {@link KnownRestoreTargetLocationType} can be used interchangeably with RestoreTargetLocationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **AzureBlobs** \
 * **AzureFiles**
 */
export type RestoreTargetLocationType = string;

/** Known values of {@link AbsoluteMarker} that the service accepts. */
export enum KnownAbsoluteMarker {
  /** AllBackup */
  AllBackup = "AllBackup",
  /** FirstOfDay */
  FirstOfDay = "FirstOfDay",
  /** FirstOfMonth */
  FirstOfMonth = "FirstOfMonth",
  /** FirstOfWeek */
  FirstOfWeek = "FirstOfWeek",
  /** FirstOfYear */
  FirstOfYear = "FirstOfYear"
}

/**
 * Defines values for AbsoluteMarker. \
 * {@link KnownAbsoluteMarker} can be used interchangeably with AbsoluteMarker,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AllBackup** \
 * **FirstOfDay** \
 * **FirstOfMonth** \
 * **FirstOfWeek** \
 * **FirstOfYear**
 */
export type AbsoluteMarker = string;

/** Known values of {@link DayOfWeek} that the service accepts. */
export enum KnownDayOfWeek {
  /** Friday */
  Friday = "Friday",
  /** Monday */
  Monday = "Monday",
  /** Saturday */
  Saturday = "Saturday",
  /** Sunday */
  Sunday = "Sunday",
  /** Thursday */
  Thursday = "Thursday",
  /** Tuesday */
  Tuesday = "Tuesday",
  /** Wednesday */
  Wednesday = "Wednesday"
}

/**
 * Defines values for DayOfWeek. \
 * {@link KnownDayOfWeek} can be used interchangeably with DayOfWeek,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Friday** \
 * **Monday** \
 * **Saturday** \
 * **Sunday** \
 * **Thursday** \
 * **Tuesday** \
 * **Wednesday**
 */
export type DayOfWeek = string;

/** Known values of {@link Month} that the service accepts. */
export enum KnownMonth {
  /** April */
  April = "April",
  /** August */
  August = "August",
  /** December */
  December = "December",
  /** February */
  February = "February",
  /** January */
  January = "January",
  /** July */
  July = "July",
  /** June */
  June = "June",
  /** March */
  March = "March",
  /** May */
  May = "May",
  /** November */
  November = "November",
  /** October */
  October = "October",
  /** September */
  September = "September"
}

/**
 * Defines values for Month. \
 * {@link KnownMonth} can be used interchangeably with Month,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **April** \
 * **August** \
 * **December** \
 * **February** \
 * **January** \
 * **July** \
 * **June** \
 * **March** \
 * **May** \
 * **November** \
 * **October** \
 * **September**
 */
export type Month = string;

/** Known values of {@link WeekNumber} that the service accepts. */
export enum KnownWeekNumber {
  /** First */
  First = "First",
  /** Fourth */
  Fourth = "Fourth",
  /** Last */
  Last = "Last",
  /** Second */
  Second = "Second",
  /** Third */
  Third = "Third"
}

/**
 * Defines values for WeekNumber. \
 * {@link KnownWeekNumber} can be used interchangeably with WeekNumber,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **First** \
 * **Fourth** \
 * **Last** \
 * **Second** \
 * **Third**
 */
export type WeekNumber = string;

/** Known values of {@link SecretStoreType} that the service accepts. */
export enum KnownSecretStoreType {
  /** Invalid */
  Invalid = "Invalid",
  /** AzureKeyVault */
  AzureKeyVault = "AzureKeyVault"
}

/**
 * Defines values for SecretStoreType. \
 * {@link KnownSecretStoreType} can be used interchangeably with SecretStoreType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **AzureKeyVault**
 */
export type SecretStoreType = string;

/** Optional parameters. */
export interface BackupVaultsGetInSubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getInSubscription operation. */
export type BackupVaultsGetInSubscriptionResponse = BackupVaultResourceList;

/** Optional parameters. */
export interface BackupVaultsGetInResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getInResourceGroup operation. */
export type BackupVaultsGetInResourceGroupResponse = BackupVaultResourceList;

/** Optional parameters. */
export interface BackupVaultsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type BackupVaultsGetResponse = BackupVaultResource;

/** Optional parameters. */
export interface BackupVaultsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type BackupVaultsCreateOrUpdateResponse = BackupVaultResource;

/** Optional parameters. */
export interface BackupVaultsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface BackupVaultsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type BackupVaultsUpdateResponse = BackupVaultResource;

/** Optional parameters. */
export interface BackupVaultsCheckNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkNameAvailability operation. */
export type BackupVaultsCheckNameAvailabilityResponse = CheckNameAvailabilityResult;

/** Optional parameters. */
export interface BackupVaultsGetInSubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getInSubscriptionNext operation. */
export type BackupVaultsGetInSubscriptionNextResponse = BackupVaultResourceList;

/** Optional parameters. */
export interface BackupVaultsGetInResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getInResourceGroupNext operation. */
export type BackupVaultsGetInResourceGroupNextResponse = BackupVaultResourceList;

/** Optional parameters. */
export interface OperationResultGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type OperationResultGetResponse = OperationJobExtendedInfo;

/** Optional parameters. */
export interface OperationStatusGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type OperationStatusGetResponse = OperationResource;

/** Optional parameters. */
export interface OperationStatusBackupVaultContextGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type OperationStatusBackupVaultContextGetResponse = OperationResource;

/** Optional parameters. */
export interface OperationStatusResourceGroupContextGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type OperationStatusResourceGroupContextGetResponse = OperationResource;

/** Optional parameters. */
export interface BackupVaultOperationResultsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type BackupVaultOperationResultsGetResponse = BackupVaultResource;

/** Optional parameters. */
export interface DataProtectionCheckFeatureSupportOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkFeatureSupport operation. */
export type DataProtectionCheckFeatureSupportResponse = FeatureValidationResponseBaseUnion;

/** Optional parameters. */
export interface DataProtectionOperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type DataProtectionOperationsListResponse = ClientDiscoveryResponse;

/** Optional parameters. */
export interface DataProtectionOperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type DataProtectionOperationsListNextResponse = ClientDiscoveryResponse;

/** Optional parameters. */
export interface BackupPoliciesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type BackupPoliciesListResponse = BaseBackupPolicyResourceList;

/** Optional parameters. */
export interface BackupPoliciesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type BackupPoliciesGetResponse = BaseBackupPolicyResource;

/** Optional parameters. */
export interface BackupPoliciesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type BackupPoliciesCreateOrUpdateResponse = BaseBackupPolicyResource;

/** Optional parameters. */
export interface BackupPoliciesDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface BackupPoliciesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type BackupPoliciesListNextResponse = BaseBackupPolicyResourceList;

/** Optional parameters. */
export interface BackupInstancesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type BackupInstancesListResponse = BackupInstanceResourceList;

/** Optional parameters. */
export interface BackupInstancesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type BackupInstancesGetResponse = BackupInstanceResource;

/** Optional parameters. */
export interface BackupInstancesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type BackupInstancesCreateOrUpdateResponse = BackupInstanceResource;

/** Optional parameters. */
export interface BackupInstancesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface BackupInstancesAdhocBackupOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the adhocBackup operation. */
export type BackupInstancesAdhocBackupResponse = OperationJobExtendedInfo;

/** Optional parameters. */
export interface BackupInstancesValidateForBackupOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the validateForBackup operation. */
export type BackupInstancesValidateForBackupResponse = OperationJobExtendedInfo;

/** Optional parameters. */
export interface BackupInstancesGetBackupInstanceOperationResultOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getBackupInstanceOperationResult operation. */
export type BackupInstancesGetBackupInstanceOperationResultResponse = BackupInstanceResource;

/** Optional parameters. */
export interface BackupInstancesTriggerRehydrateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the triggerRehydrate operation. */
export type BackupInstancesTriggerRehydrateResponse = BackupInstancesTriggerRehydrateHeaders;

/** Optional parameters. */
export interface BackupInstancesTriggerRestoreOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the triggerRestore operation. */
export type BackupInstancesTriggerRestoreResponse = OperationJobExtendedInfo;

/** Optional parameters. */
export interface BackupInstancesResumeBackupsOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface BackupInstancesResumeProtectionOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface BackupInstancesStopProtectionOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface BackupInstancesSuspendBackupsOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface BackupInstancesSyncBackupInstanceOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface BackupInstancesValidateForRestoreOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the validateForRestore operation. */
export type BackupInstancesValidateForRestoreResponse = OperationJobExtendedInfo;

/** Optional parameters. */
export interface BackupInstancesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type BackupInstancesListNextResponse = BackupInstanceResourceList;

/** Optional parameters. */
export interface RecoveryPointsListOptionalParams
  extends coreClient.OperationOptions {
  /** OData filter options. */
  filter?: string;
  /** skipToken Filter. */
  skipToken?: string;
}

/** Contains response data for the list operation. */
export type RecoveryPointsListResponse = AzureBackupRecoveryPointResourceList;

/** Optional parameters. */
export interface RecoveryPointsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type RecoveryPointsGetResponse = AzureBackupRecoveryPointResource;

/** Optional parameters. */
export interface RecoveryPointsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type RecoveryPointsListNextResponse = AzureBackupRecoveryPointResourceList;

/** Optional parameters. */
export interface JobsListOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type JobsListResponse = AzureBackupJobResourceList;

/** Optional parameters. */
export interface JobsGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type JobsGetResponse = AzureBackupJobResource;

/** Optional parameters. */
export interface JobsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type JobsListNextResponse = AzureBackupJobResourceList;

/** Optional parameters. */
export interface RestorableTimeRangesFindOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the find operation. */
export type RestorableTimeRangesFindResponse = AzureBackupFindRestorableTimeRangesResponseResource;

/** Optional parameters. */
export interface ExportJobsTriggerOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the trigger operation. */
export type ExportJobsTriggerResponse = ExportJobsTriggerHeaders;

/** Optional parameters. */
export interface ExportJobsOperationResultGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ExportJobsOperationResultGetResponse = ExportJobsResult;

/** Optional parameters. */
export interface DeletedBackupInstancesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type DeletedBackupInstancesListResponse = DeletedBackupInstanceResourceList;

/** Optional parameters. */
export interface DeletedBackupInstancesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DeletedBackupInstancesGetResponse = DeletedBackupInstanceResource;

/** Optional parameters. */
export interface DeletedBackupInstancesUndeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface DeletedBackupInstancesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type DeletedBackupInstancesListNextResponse = DeletedBackupInstanceResourceList;

/** Optional parameters. */
export interface ResourceGuardsGetResourcesInSubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getResourcesInSubscription operation. */
export type ResourceGuardsGetResourcesInSubscriptionResponse = ResourceGuardResourceList;

/** Optional parameters. */
export interface ResourceGuardsGetResourcesInResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getResourcesInResourceGroup operation. */
export type ResourceGuardsGetResourcesInResourceGroupResponse = ResourceGuardResourceList;

/** Optional parameters. */
export interface ResourceGuardsPutOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the put operation. */
export type ResourceGuardsPutResponse = ResourceGuardResource;

/** Optional parameters. */
export interface ResourceGuardsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ResourceGuardsGetResponse = ResourceGuardResource;

/** Optional parameters. */
export interface ResourceGuardsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ResourceGuardsPatchOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the patch operation. */
export type ResourceGuardsPatchResponse = ResourceGuardResource;

/** Optional parameters. */
export interface ResourceGuardsGetDisableSoftDeleteRequestsObjectsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getDisableSoftDeleteRequestsObjects operation. */
export type ResourceGuardsGetDisableSoftDeleteRequestsObjectsResponse = DppBaseResourceList;

/** Optional parameters. */
export interface ResourceGuardsGetDeleteResourceGuardProxyRequestsObjectsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getDeleteResourceGuardProxyRequestsObjects operation. */
export type ResourceGuardsGetDeleteResourceGuardProxyRequestsObjectsResponse = DppBaseResourceList;

/** Optional parameters. */
export interface ResourceGuardsGetBackupSecurityPINRequestsObjectsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getBackupSecurityPINRequestsObjects operation. */
export type ResourceGuardsGetBackupSecurityPINRequestsObjectsResponse = DppBaseResourceList;

/** Optional parameters. */
export interface ResourceGuardsGetDeleteProtectedItemRequestsObjectsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getDeleteProtectedItemRequestsObjects operation. */
export type ResourceGuardsGetDeleteProtectedItemRequestsObjectsResponse = DppBaseResourceList;

/** Optional parameters. */
export interface ResourceGuardsGetUpdateProtectionPolicyRequestsObjectsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getUpdateProtectionPolicyRequestsObjects operation. */
export type ResourceGuardsGetUpdateProtectionPolicyRequestsObjectsResponse = DppBaseResourceList;

/** Optional parameters. */
export interface ResourceGuardsGetUpdateProtectedItemRequestsObjectsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getUpdateProtectedItemRequestsObjects operation. */
export type ResourceGuardsGetUpdateProtectedItemRequestsObjectsResponse = DppBaseResourceList;

/** Optional parameters. */
export interface ResourceGuardsGetDefaultDisableSoftDeleteRequestsObjectOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getDefaultDisableSoftDeleteRequestsObject operation. */
export type ResourceGuardsGetDefaultDisableSoftDeleteRequestsObjectResponse = DppBaseResource;

/** Optional parameters. */
export interface ResourceGuardsGetDefaultDeleteResourceGuardProxyRequestsObjectOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getDefaultDeleteResourceGuardProxyRequestsObject operation. */
export type ResourceGuardsGetDefaultDeleteResourceGuardProxyRequestsObjectResponse = DppBaseResource;

/** Optional parameters. */
export interface ResourceGuardsGetDefaultBackupSecurityPINRequestsObjectOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getDefaultBackupSecurityPINRequestsObject operation. */
export type ResourceGuardsGetDefaultBackupSecurityPINRequestsObjectResponse = DppBaseResource;

/** Optional parameters. */
export interface ResourceGuardsGetDefaultDeleteProtectedItemRequestsObjectOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getDefaultDeleteProtectedItemRequestsObject operation. */
export type ResourceGuardsGetDefaultDeleteProtectedItemRequestsObjectResponse = DppBaseResource;

/** Optional parameters. */
export interface ResourceGuardsGetDefaultUpdateProtectionPolicyRequestsObjectOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getDefaultUpdateProtectionPolicyRequestsObject operation. */
export type ResourceGuardsGetDefaultUpdateProtectionPolicyRequestsObjectResponse = DppBaseResource;

/** Optional parameters. */
export interface ResourceGuardsGetDefaultUpdateProtectedItemRequestsObjectOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getDefaultUpdateProtectedItemRequestsObject operation. */
export type ResourceGuardsGetDefaultUpdateProtectedItemRequestsObjectResponse = DppBaseResource;

/** Optional parameters. */
export interface ResourceGuardsGetResourcesInSubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getResourcesInSubscriptionNext operation. */
export type ResourceGuardsGetResourcesInSubscriptionNextResponse = ResourceGuardResourceList;

/** Optional parameters. */
export interface ResourceGuardsGetResourcesInResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getResourcesInResourceGroupNext operation. */
export type ResourceGuardsGetResourcesInResourceGroupNextResponse = ResourceGuardResourceList;

/** Optional parameters. */
export interface ResourceGuardsGetDisableSoftDeleteRequestsObjectsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getDisableSoftDeleteRequestsObjectsNext operation. */
export type ResourceGuardsGetDisableSoftDeleteRequestsObjectsNextResponse = DppBaseResourceList;

/** Optional parameters. */
export interface ResourceGuardsGetDeleteResourceGuardProxyRequestsObjectsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getDeleteResourceGuardProxyRequestsObjectsNext operation. */
export type ResourceGuardsGetDeleteResourceGuardProxyRequestsObjectsNextResponse = DppBaseResourceList;

/** Optional parameters. */
export interface ResourceGuardsGetBackupSecurityPINRequestsObjectsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getBackupSecurityPINRequestsObjectsNext operation. */
export type ResourceGuardsGetBackupSecurityPINRequestsObjectsNextResponse = DppBaseResourceList;

/** Optional parameters. */
export interface ResourceGuardsGetDeleteProtectedItemRequestsObjectsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getDeleteProtectedItemRequestsObjectsNext operation. */
export type ResourceGuardsGetDeleteProtectedItemRequestsObjectsNextResponse = DppBaseResourceList;

/** Optional parameters. */
export interface ResourceGuardsGetUpdateProtectionPolicyRequestsObjectsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getUpdateProtectionPolicyRequestsObjectsNext operation. */
export type ResourceGuardsGetUpdateProtectionPolicyRequestsObjectsNextResponse = DppBaseResourceList;

/** Optional parameters. */
export interface ResourceGuardsGetUpdateProtectedItemRequestsObjectsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getUpdateProtectedItemRequestsObjectsNext operation. */
export type ResourceGuardsGetUpdateProtectedItemRequestsObjectsNextResponse = DppBaseResourceList;

/** Optional parameters. */
export interface DppResourceGuardProxyListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type DppResourceGuardProxyListResponse = ResourceGuardProxyBaseResourceList;

/** Optional parameters. */
export interface DppResourceGuardProxyGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DppResourceGuardProxyGetResponse = ResourceGuardProxyBaseResource;

/** Optional parameters. */
export interface DppResourceGuardProxyCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type DppResourceGuardProxyCreateOrUpdateResponse = ResourceGuardProxyBaseResource;

/** Optional parameters. */
export interface DppResourceGuardProxyDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface DppResourceGuardProxyUnlockDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the unlockDelete operation. */
export type DppResourceGuardProxyUnlockDeleteResponse = UnlockDeleteResponse;

/** Optional parameters. */
export interface DppResourceGuardProxyListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type DppResourceGuardProxyListNextResponse = ResourceGuardProxyBaseResourceList;

/** Optional parameters. */
export interface DataProtectionClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
