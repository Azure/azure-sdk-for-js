/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** List of SKU Information objects */
export interface SkuInformationList {
  /**
   * List of ResourceType Sku
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: SkuInformation[];
  /**
   * URI to fetch the next section of the paginated response.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** ElasticSAN SKU and its properties */
export interface SkuInformation {
  /** Sku Name */
  name: SkuName;
  /** Sku Tier */
  tier?: SkuTier;
  /**
   * The type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceType?: string;
  /**
   * The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly locations?: string[];
  /**
   * Availability of the SKU for the location/zone
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly locationInfo?: SkuLocationInfo[];
  /**
   * The capability information in the specified SKU.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly capabilities?: SKUCapability[];
}

/** The location info. */
export interface SkuLocationInfo {
  /**
   * The location.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly location?: string;
  /**
   * The zones.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly zones?: string[];
}

/** The capability information in the specified SKU. */
export interface SKUCapability {
  /**
   * The name of capability.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * A string value to indicate states of given capability.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: string;
}

/** List of Elastic Sans */
export interface ElasticSanList {
  /** An array of Elastic San objects. */
  value?: ElasticSan[];
  /**
   * URI to fetch the next section of the paginated response.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Elastic San response properties. */
export interface ElasticSanProperties {
  /** resource sku */
  sku: Sku;
  /** Logical zone for Elastic San resource; example: ["1"]. */
  availabilityZones?: string[];
  /**
   * State of the operation on the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningStates;
  /** Base size of the Elastic San appliance in TiB. */
  baseSizeTiB: number;
  /** Extended size of the Elastic San appliance in TiB. */
  extendedCapacitySizeTiB: number;
  /**
   * Total size of the provisioned Volumes in GiB.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalVolumeSizeGiB?: number;
  /**
   * Total number of volume groups in this Elastic San appliance.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly volumeGroupCount?: number;
  /**
   * Total Provisioned IOPS of the Elastic San appliance.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalIops?: number;
  /**
   * Total Provisioned MBps Elastic San appliance.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalMBps?: number;
  /**
   * Total size of the Elastic San appliance in TB.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalSizeTiB?: number;
  /**
   * The list of Private Endpoint Connections.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateEndpointConnections?: PrivateEndpointConnection[];
  /** Allow or disallow public network access to ElasticSan. Value is optional but if passed in, must be 'Enabled' or 'Disabled'. */
  publicNetworkAccess?: PublicNetworkAccess;
}

/** The SKU name. Required for account creation; optional for update. */
export interface Sku {
  /** The sku name. */
  name: SkuName;
  /** The sku tier. */
  tier?: SkuTier;
}

/**  Response for PrivateEndpoint connection properties */
export interface PrivateEndpointConnectionProperties {
  /**
   * Provisioning State of Private Endpoint connection resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningStates;
  /** Private Endpoint resource */
  privateEndpoint?: PrivateEndpoint;
  /** Private Link Service Connection State. */
  privateLinkServiceConnectionState: PrivateLinkServiceConnectionState;
  /**  List of resources private endpoint is mapped */
  groupIds?: string[];
}

/** Response for PrivateEndpoint */
export interface PrivateEndpoint {
  /**
   * The ARM identifier for Private Endpoint
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
}

/** Response for Private Link Service Connection state */
export interface PrivateLinkServiceConnectionState {
  /** Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service. */
  status?: PrivateEndpointServiceConnectionStatus;
  /** The reason for approval/rejection of the connection. */
  description?: string;
  /** A message indicating if changes on the service provider require any updates on the consumer. */
  actionsRequired?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Response for ElasticSan update request. */
export interface ElasticSanUpdate {
  /** Properties of ElasticSan. */
  properties?: ElasticSanUpdateProperties;
  /** Update tags */
  tags?: { [propertyName: string]: string };
}

/** Elastic San update properties. */
export interface ElasticSanUpdateProperties {
  /** Base size of the Elastic San appliance in TiB. */
  baseSizeTiB?: number;
  /** Extended size of the Elastic San appliance in TiB. */
  extendedCapacitySizeTiB?: number;
  /** Allow or disallow public network access to ElasticSan Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'. */
  publicNetworkAccess?: PublicNetworkAccess;
}

/** List of Volume Groups */
export interface VolumeGroupList {
  /** An array of Volume Groups objects. */
  value?: VolumeGroup[];
  /**
   * URI to fetch the next section of the paginated response.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Identity for the resource. */
export interface Identity {
  /**
   * The principal ID of resource identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The tenant ID of resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** The identity type. */
  type: IdentityType;
  /** Gets or sets a list of key value pairs that describe the set of User Assigned identities that will be used with this volume group. The key is the ARM resource identifier of the identity. */
  userAssignedIdentities?: { [propertyName: string]: UserAssignedIdentity };
}

/** UserAssignedIdentity for the resource. */
export interface UserAssignedIdentity {
  /**
   * The principal ID of the identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The client ID of the identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clientId?: string;
}

/** VolumeGroup response properties. */
export interface VolumeGroupProperties {
  /**
   * State of the operation on the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningStates;
  /** Type of storage target */
  protocolType?: StorageTargetType;
  /** Type of encryption */
  encryption?: EncryptionType;
  /** Encryption Properties describing Key Vault and Identity information */
  encryptionProperties?: EncryptionProperties;
  /** A collection of rules governing the accessibility from specific network locations. */
  networkAcls?: NetworkRuleSet;
  /**
   * The list of Private Endpoint Connections.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateEndpointConnections?: PrivateEndpointConnection[];
  /** A boolean indicating whether or not Data Integrity Check is enabled */
  enforceDataIntegrityCheckForIscsi?: boolean;
}

/** The encryption settings on the volume group. */
export interface EncryptionProperties {
  /** Properties provided by key vault. */
  keyVaultProperties?: KeyVaultProperties;
  /** The identity to be used with service-side encryption at rest. */
  encryptionIdentity?: EncryptionIdentity;
}

/** Properties of key vault. */
export interface KeyVaultProperties {
  /** The name of KeyVault key. */
  keyName?: string;
  /** The version of KeyVault key. */
  keyVersion?: string;
  /** The Uri of KeyVault. */
  keyVaultUri?: string;
  /**
   * The object identifier of the current versioned Key Vault Key in use.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly currentVersionedKeyIdentifier?: string;
  /**
   * Timestamp of last rotation of the Key Vault Key.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastKeyRotationTimestamp?: Date;
  /**
   * This is a read only property that represents the expiration time of the current version of the customer managed key used for encryption.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly currentVersionedKeyExpirationTimestamp?: Date;
}

/** Encryption identity for the volume group. */
export interface EncryptionIdentity {
  /** Resource identifier of the UserAssigned identity to be associated with server-side encryption on the volume group. */
  encryptionUserAssignedIdentity?: string;
}

/** A set of rules governing the network accessibility. */
export interface NetworkRuleSet {
  /** The list of virtual network rules. */
  virtualNetworkRules?: VirtualNetworkRule[];
}

/** Virtual Network rule. */
export interface VirtualNetworkRule {
  /** Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}. */
  virtualNetworkResourceId: string;
  /** The action of virtual network rule. */
  action?: Action;
}

/** Volume Group request. */
export interface VolumeGroupUpdate {
  /** The identity of the resource. */
  identity?: Identity;
  /** Properties of VolumeGroup. */
  properties?: VolumeGroupUpdateProperties;
}

/** VolumeGroup response properties. */
export interface VolumeGroupUpdateProperties {
  /** Type of storage target */
  protocolType?: StorageTargetType;
  /** Type of encryption */
  encryption?: EncryptionType;
  /** Encryption Properties describing Key Vault and Identity information */
  encryptionProperties?: EncryptionProperties;
  /** A collection of rules governing the accessibility from specific network locations. */
  networkAcls?: NetworkRuleSet;
  /** A boolean indicating whether or not Data Integrity Check is enabled */
  enforceDataIntegrityCheckForIscsi?: boolean;
}

/** Volume response properties. */
export interface VolumeProperties {
  /**
   * Unique Id of the volume in GUID format
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly volumeId?: string;
  /** State of the operation on the resource. */
  creationData?: SourceCreationData;
  /** Volume size. */
  sizeGiB: number;
  /**
   * Storage target information
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly storageTarget?: IscsiTargetInfo;
  /** Parent resource information. */
  managedBy?: ManagedByInfo;
  /**
   * State of the operation on the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningStates;
}

/** Data source used when creating the volume. */
export interface SourceCreationData {
  /** This enumerates the possible sources of a volume creation. */
  createSource?: VolumeCreateOption;
  /** Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}" */
  sourceId?: string;
}

/** Iscsi target information */
export interface IscsiTargetInfo {
  /**
   * iSCSI Target IQN (iSCSI Qualified Name); example: "iqn.2005-03.org.iscsi:server".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetIqn?: string;
  /**
   * iSCSI Target Portal Host Name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetPortalHostname?: string;
  /**
   * iSCSI Target Portal Port
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetPortalPort?: number;
  /**
   * State of the operation on the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningStates;
  /** Operational status of the iSCSI Target. */
  status?: OperationalStatus;
}

/** Parent resource information. */
export interface ManagedByInfo {
  /** Resource ID of the resource managing the volume, this is a restricted field and can only be set for internal use. */
  resourceId?: string;
}

/** Response for Volume request. */
export interface VolumeUpdate {
  /** Properties of Volume. */
  properties?: VolumeUpdateProperties;
}

/** Volume response properties. */
export interface VolumeUpdateProperties {
  /** Volume size. */
  sizeGiB?: number;
  /** Parent resource information. */
  managedBy?: ManagedByInfo;
}

/** List of Volumes */
export interface VolumeList {
  /** An array of Volume objects. */
  value?: Volume[];
  /**
   * URI to fetch the next section of the paginated response.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** List of private endpoint connections associated with SAN */
export interface PrivateEndpointConnectionListResult {
  /** Array of private endpoint connections */
  value?: PrivateEndpointConnection[];
  /**
   * URI to fetch the next section of the paginated response.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** A list of private link resources */
export interface PrivateLinkResourceListResult {
  /** Array of private link resources */
  value?: PrivateLinkResource[];
  /**
   * URI to fetch the next section of the paginated response.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Properties of a private link resource. */
export interface PrivateLinkResourceProperties {
  /**
   * The private link resource group id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly groupId?: string;
  /**
   * The private link resource required member names.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly requiredMembers?: string[];
  /** The private link resource Private link DNS zone name. */
  requiredZoneNames?: string[];
}

/** List of Snapshots */
export interface SnapshotList {
  /** An array of Snapshot objects. */
  value?: Snapshot[];
  /**
   * URI to fetch the next section of the paginated response.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Properties for Snapshot. */
export interface SnapshotProperties {
  /** Data used when creating a volume snapshot. */
  creationData: SnapshotCreationData;
  /**
   * State of the operation on the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningStates;
  /**
   * Size of Source Volume
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceVolumeSizeGiB?: number;
  /**
   * Source Volume Name of a snapshot
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly volumeName?: string;
}

/** Data used when creating a volume snapshot. */
export interface SnapshotCreationData {
  /** Fully qualified resource ID of the volume. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/volumes/{volumeName}" */
  sourceId: string;
}

/**  Response for PrivateEndpoint Connection object */
export interface PrivateEndpointConnection extends Resource {
  /** Private Endpoint Connection Properties. */
  properties: PrivateEndpointConnectionProperties;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** A private link resource */
export interface PrivateLinkResource extends Resource {
  /** Resource properties. */
  properties?: PrivateLinkResourceProperties;
}

/** Response for ElasticSan request. */
export interface ElasticSan extends TrackedResource {
  /** Properties of ElasticSan. */
  properties: ElasticSanProperties;
}

/** Response for Volume Group request. */
export interface VolumeGroup extends ProxyResource {
  /** The identity of the resource. */
  identity?: Identity;
  /** Properties of VolumeGroup. */
  properties?: VolumeGroupProperties;
}

/** Response for Volume request. */
export interface Volume extends ProxyResource {
  /** Properties of Volume. */
  properties: VolumeProperties;
}

/** Response for Volume Snapshot request. */
export interface Snapshot extends ProxyResource {
  /** Properties of Volume Snapshot. */
  properties: SnapshotProperties;
}

/** Defines headers for ElasticSans_update operation. */
export interface ElasticSansUpdateHeaders {
  location?: string;
}

/** Defines headers for ElasticSans_delete operation. */
export interface ElasticSansDeleteHeaders {
  location?: string;
}

/** Defines headers for VolumeGroups_update operation. */
export interface VolumeGroupsUpdateHeaders {
  location?: string;
}

/** Defines headers for VolumeGroups_delete operation. */
export interface VolumeGroupsDeleteHeaders {
  location?: string;
}

/** Defines headers for Volumes_update operation. */
export interface VolumesUpdateHeaders {
  location?: string;
}

/** Defines headers for Volumes_delete operation. */
export interface VolumesDeleteHeaders {
  location?: string;
}

/** Defines headers for PrivateEndpointConnections_delete operation. */
export interface PrivateEndpointConnectionsDeleteHeaders {
  location?: string;
}

/** Defines headers for VolumeSnapshots_delete operation. */
export interface VolumeSnapshotsDeleteHeaders {
  location?: string;
}

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system",
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal",
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link SkuName} that the service accepts. */
export enum KnownSkuName {
  /** Premium locally redundant storage */
  PremiumLRS = "Premium_LRS",
  /** Premium zone redundant storage */
  PremiumZRS = "Premium_ZRS",
}

/**
 * Defines values for SkuName. \
 * {@link KnownSkuName} can be used interchangeably with SkuName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Premium_LRS**: Premium locally redundant storage \
 * **Premium_ZRS**: Premium zone redundant storage
 */
export type SkuName = string;

/** Known values of {@link SkuTier} that the service accepts. */
export enum KnownSkuTier {
  /** Premium Tier */
  Premium = "Premium",
}

/**
 * Defines values for SkuTier. \
 * {@link KnownSkuTier} can be used interchangeably with SkuTier,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Premium**: Premium Tier
 */
export type SkuTier = string;

/** Known values of {@link ProvisioningStates} that the service accepts. */
export enum KnownProvisioningStates {
  /** Invalid */
  Invalid = "Invalid",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
  /** Pending */
  Pending = "Pending",
  /** Creating */
  Creating = "Creating",
  /** Updating */
  Updating = "Updating",
  /** Deleting */
  Deleting = "Deleting",
}

/**
 * Defines values for ProvisioningStates. \
 * {@link KnownProvisioningStates} can be used interchangeably with ProvisioningStates,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Pending** \
 * **Creating** \
 * **Updating** \
 * **Deleting**
 */
export type ProvisioningStates = string;

/** Known values of {@link PrivateEndpointServiceConnectionStatus} that the service accepts. */
export enum KnownPrivateEndpointServiceConnectionStatus {
  /** Pending */
  Pending = "Pending",
  /** Approved */
  Approved = "Approved",
  /** Failed */
  Failed = "Failed",
  /** Rejected */
  Rejected = "Rejected",
}

/**
 * Defines values for PrivateEndpointServiceConnectionStatus. \
 * {@link KnownPrivateEndpointServiceConnectionStatus} can be used interchangeably with PrivateEndpointServiceConnectionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Approved** \
 * **Failed** \
 * **Rejected**
 */
export type PrivateEndpointServiceConnectionStatus = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key",
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link PublicNetworkAccess} that the service accepts. */
export enum KnownPublicNetworkAccess {
  /** Enabled */
  Enabled = "Enabled",
  /** Disabled */
  Disabled = "Disabled",
}

/**
 * Defines values for PublicNetworkAccess. \
 * {@link KnownPublicNetworkAccess} can be used interchangeably with PublicNetworkAccess,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export type PublicNetworkAccess = string;

/** Known values of {@link IdentityType} that the service accepts. */
export enum KnownIdentityType {
  /** None */
  None = "None",
  /** SystemAssigned */
  SystemAssigned = "SystemAssigned",
  /** UserAssigned */
  UserAssigned = "UserAssigned",
}

/**
 * Defines values for IdentityType. \
 * {@link KnownIdentityType} can be used interchangeably with IdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **SystemAssigned** \
 * **UserAssigned**
 */
export type IdentityType = string;

/** Known values of {@link StorageTargetType} that the service accepts. */
export enum KnownStorageTargetType {
  /** Iscsi */
  Iscsi = "Iscsi",
  /** None */
  None = "None",
}

/**
 * Defines values for StorageTargetType. \
 * {@link KnownStorageTargetType} can be used interchangeably with StorageTargetType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Iscsi** \
 * **None**
 */
export type StorageTargetType = string;

/** Known values of {@link EncryptionType} that the service accepts. */
export enum KnownEncryptionType {
  /** Volume is encrypted at rest with Platform managed key. It is the default encryption type. */
  EncryptionAtRestWithPlatformKey = "EncryptionAtRestWithPlatformKey",
  /** Volume is encrypted at rest with Customer managed key that can be changed and revoked by a customer. */
  EncryptionAtRestWithCustomerManagedKey = "EncryptionAtRestWithCustomerManagedKey",
}

/**
 * Defines values for EncryptionType. \
 * {@link KnownEncryptionType} can be used interchangeably with EncryptionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **EncryptionAtRestWithPlatformKey**: Volume is encrypted at rest with Platform managed key. It is the default encryption type. \
 * **EncryptionAtRestWithCustomerManagedKey**: Volume is encrypted at rest with Customer managed key that can be changed and revoked by a customer.
 */
export type EncryptionType = string;

/** Known values of {@link Action} that the service accepts. */
export enum KnownAction {
  /** Allow */
  Allow = "Allow",
}

/**
 * Defines values for Action. \
 * {@link KnownAction} can be used interchangeably with Action,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Allow**
 */
export type Action = string;

/** Known values of {@link VolumeCreateOption} that the service accepts. */
export enum KnownVolumeCreateOption {
  /** None */
  None = "None",
  /** VolumeSnapshot */
  VolumeSnapshot = "VolumeSnapshot",
  /** DiskSnapshot */
  DiskSnapshot = "DiskSnapshot",
  /** Disk */
  Disk = "Disk",
  /** DiskRestorePoint */
  DiskRestorePoint = "DiskRestorePoint",
}

/**
 * Defines values for VolumeCreateOption. \
 * {@link KnownVolumeCreateOption} can be used interchangeably with VolumeCreateOption,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **VolumeSnapshot** \
 * **DiskSnapshot** \
 * **Disk** \
 * **DiskRestorePoint**
 */
export type VolumeCreateOption = string;

/** Known values of {@link OperationalStatus} that the service accepts. */
export enum KnownOperationalStatus {
  /** Invalid */
  Invalid = "Invalid",
  /** Unknown */
  Unknown = "Unknown",
  /** Healthy */
  Healthy = "Healthy",
  /** Unhealthy */
  Unhealthy = "Unhealthy",
  /** Updating */
  Updating = "Updating",
  /** Running */
  Running = "Running",
  /** Stopped */
  Stopped = "Stopped",
  /** StoppedDeallocated */
  StoppedDeallocated = "Stopped (deallocated)",
}

/**
 * Defines values for OperationalStatus. \
 * {@link KnownOperationalStatus} can be used interchangeably with OperationalStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Unknown** \
 * **Healthy** \
 * **Unhealthy** \
 * **Updating** \
 * **Running** \
 * **Stopped** \
 * **Stopped (deallocated)**
 */
export type OperationalStatus = string;

/** Known values of {@link XMsDeleteSnapshots} that the service accepts. */
export enum KnownXMsDeleteSnapshots {
  /** True */
  True = "true",
  /** False */
  False = "false",
}

/**
 * Defines values for XMsDeleteSnapshots. \
 * {@link KnownXMsDeleteSnapshots} can be used interchangeably with XMsDeleteSnapshots,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **true** \
 * **false**
 */
export type XMsDeleteSnapshots = string;

/** Known values of {@link XMsForceDelete} that the service accepts. */
export enum KnownXMsForceDelete {
  /** True */
  True = "true",
  /** False */
  False = "false",
}

/**
 * Defines values for XMsForceDelete. \
 * {@link KnownXMsForceDelete} can be used interchangeably with XMsForceDelete,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **true** \
 * **false**
 */
export type XMsForceDelete = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface SkusListOptionalParams extends coreClient.OperationOptions {
  /** Specify $filter='location eq <location>' to filter on location. */
  filter?: string;
}

/** Contains response data for the list operation. */
export type SkusListResponse = SkuInformationList;

/** Optional parameters. */
export interface ElasticSansListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type ElasticSansListBySubscriptionResponse = ElasticSanList;

/** Optional parameters. */
export interface ElasticSansListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type ElasticSansListByResourceGroupResponse = ElasticSanList;

/** Optional parameters. */
export interface ElasticSansCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ElasticSansCreateResponse = ElasticSan;

/** Optional parameters. */
export interface ElasticSansUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type ElasticSansUpdateResponse = ElasticSan;

/** Optional parameters. */
export interface ElasticSansDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ElasticSansGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ElasticSansGetResponse = ElasticSan;

/** Optional parameters. */
export interface ElasticSansListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type ElasticSansListBySubscriptionNextResponse = ElasticSanList;

/** Optional parameters. */
export interface ElasticSansListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type ElasticSansListByResourceGroupNextResponse = ElasticSanList;

/** Optional parameters. */
export interface VolumeGroupsListByElasticSanOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByElasticSan operation. */
export type VolumeGroupsListByElasticSanResponse = VolumeGroupList;

/** Optional parameters. */
export interface VolumeGroupsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type VolumeGroupsCreateResponse = VolumeGroup;

/** Optional parameters. */
export interface VolumeGroupsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type VolumeGroupsUpdateResponse = VolumeGroup;

/** Optional parameters. */
export interface VolumeGroupsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface VolumeGroupsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type VolumeGroupsGetResponse = VolumeGroup;

/** Optional parameters. */
export interface VolumeGroupsListByElasticSanNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByElasticSanNext operation. */
export type VolumeGroupsListByElasticSanNextResponse = VolumeGroupList;

/** Optional parameters. */
export interface VolumesCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type VolumesCreateResponse = Volume;

/** Optional parameters. */
export interface VolumesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type VolumesUpdateResponse = Volume;

/** Optional parameters. */
export interface VolumesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Optional, used to delete snapshots under volume. Allowed value are only true or false. Default value is false. */
  xMsDeleteSnapshots?: XMsDeleteSnapshots;
  /** Optional, used to delete volume if active sessions present. Allowed value are only true or false. Default value is false. */
  xMsForceDelete?: XMsForceDelete;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface VolumesGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type VolumesGetResponse = Volume;

/** Optional parameters. */
export interface VolumesListByVolumeGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByVolumeGroup operation. */
export type VolumesListByVolumeGroupResponse = VolumeList;

/** Optional parameters. */
export interface VolumesListByVolumeGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByVolumeGroupNext operation. */
export type VolumesListByVolumeGroupNextResponse = VolumeList;

/** Optional parameters. */
export interface PrivateEndpointConnectionsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type PrivateEndpointConnectionsCreateResponse =
  PrivateEndpointConnection;

/** Optional parameters. */
export interface PrivateEndpointConnectionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;

/** Optional parameters. */
export interface PrivateEndpointConnectionsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface PrivateEndpointConnectionsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type PrivateEndpointConnectionsListResponse =
  PrivateEndpointConnectionListResult;

/** Optional parameters. */
export interface PrivateLinkResourcesListByElasticSanOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByElasticSan operation. */
export type PrivateLinkResourcesListByElasticSanResponse =
  PrivateLinkResourceListResult;

/** Optional parameters. */
export interface VolumeSnapshotsListByVolumeGroupOptionalParams
  extends coreClient.OperationOptions {
  /** Specify $filter='volumeName eq <volume name>' to filter on volume. */
  filter?: string;
}

/** Contains response data for the listByVolumeGroup operation. */
export type VolumeSnapshotsListByVolumeGroupResponse = SnapshotList;

/** Optional parameters. */
export interface VolumeSnapshotsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type VolumeSnapshotsCreateResponse = Snapshot;

/** Optional parameters. */
export interface VolumeSnapshotsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface VolumeSnapshotsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type VolumeSnapshotsGetResponse = Snapshot;

/** Optional parameters. */
export interface VolumeSnapshotsListByVolumeGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByVolumeGroupNext operation. */
export type VolumeSnapshotsListByVolumeGroupNextResponse = SnapshotList;

/** Optional parameters. */
export interface ElasticSanManagementOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
