/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { APICollectionOnboarding } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { SecurityCenter } from "../securityCenter";
import {
  APICollectionOnboardingCreateOptionalParams,
  APICollectionOnboardingCreateResponse
} from "../models";

/** Class containing APICollectionOnboarding operations. */
export class APICollectionOnboardingImpl implements APICollectionOnboarding {
  private readonly client: SecurityCenter;

  /**
   * Initialize a new instance of the class APICollectionOnboarding class.
   * @param client Reference to the service client
   */
  constructor(client: SecurityCenter) {
    this.client = client;
  }

  /**
   * Onboard an Azure API Management API to Defender for APIs. The system will start monitoring the
   * operations within the Azure Management API for intrusive behaviors and provide alerts for attacks
   * that have been detected.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param apiCollectionId A string representing the apiCollections resource within the
   *                        Microsoft.Security provider namespace. This string matches the Azure API Management API name.
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    serviceName: string,
    apiCollectionId: string,
    options?: APICollectionOnboardingCreateOptionalParams
  ): Promise<APICollectionOnboardingCreateResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, serviceName, apiCollectionId, options },
      createOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const createOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/providers/Microsoft.Security/apiCollections/{apiCollectionId}",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.ApiCollectionResponse
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion19],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName1,
    Parameters.serviceName,
    Parameters.apiCollectionId
  ],
  headerParameters: [Parameters.accept],
  serializer
};
