/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { SensitivitySettings } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { SecurityCenter } from "../securityCenter";
import {
  SensitivitySettingsListOptionalParams,
  SensitivitySettingsListResponse,
} from "../models";

/** Class containing SensitivitySettings operations. */
export class SensitivitySettingsImpl implements SensitivitySettings {
  private readonly client: SecurityCenter;

  /**
   * Initialize a new instance of the class SensitivitySettings class.
   * @param client Reference to the service client
   */
  constructor(client: SecurityCenter) {
    this.client = client;
  }

  /**
   * Gets a list with a single sensitivity settings resource
   * @param options The options parameters.
   */
  list(
    options?: SensitivitySettingsListOptionalParams,
  ): Promise<SensitivitySettingsListResponse> {
    return this.client.sendOperationRequest({ options }, listOperationSpec);
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const listOperationSpec: coreClient.OperationSpec = {
  path: "/providers/Microsoft.Security/sensitivitySettings",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.GetSensitivitySettingsListResponse,
    },
    default: {
      bodyMapper: Mappers.CloudError,
    },
  },
  queryParameters: [Parameters.apiVersion13],
  urlParameters: [Parameters.$host],
  headerParameters: [Parameters.accept],
  serializer,
};
