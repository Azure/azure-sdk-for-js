/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComplianceResult: msRest.CompositeMapper = {
  serializedName: "ComplianceResult",
  type: {
    name: "Composite",
    className: "ComplianceResult",
    modelProperties: {
      ...Resource.type.modelProperties,
      resourceStatus: {
        readOnly: true,
        serializedName: "properties.resourceStatus",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AscLocation: msRest.CompositeMapper = {
  serializedName: "AscLocation",
  type: {
    name: "Composite",
    className: "AscLocation",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const Pricing: msRest.CompositeMapper = {
  serializedName: "Pricing",
  type: {
    name: "Composite",
    className: "Pricing",
    modelProperties: {
      ...Resource.type.modelProperties,
      pricingTier: {
        required: true,
        serializedName: "properties.pricingTier",
        type: {
          name: "String"
        }
      },
      freeTrialRemainingTime: {
        readOnly: true,
        serializedName: "properties.freeTrialRemainingTime",
        type: {
          name: "TimeSpan"
        }
      }
    }
  }
};

export const PricingList: msRest.CompositeMapper = {
  serializedName: "PricingList",
  type: {
    name: "Composite",
    className: "PricingList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Pricing"
            }
          }
        }
      }
    }
  }
};

export const AlertEntity: msRest.CompositeMapper = {
  serializedName: "AlertEntity",
  type: {
    name: "Composite",
    className: "AlertEntity",
    modelProperties: {
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    },
    additionalProperties: {
      type: {
        name: "Object"
      }
    }
  }
};

export const AlertConfidenceReason: msRest.CompositeMapper = {
  serializedName: "AlertConfidenceReason",
  type: {
    name: "Composite",
    className: "AlertConfidenceReason",
    modelProperties: {
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      reason: {
        readOnly: true,
        serializedName: "reason",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Alert: msRest.CompositeMapper = {
  serializedName: "Alert",
  type: {
    name: "Composite",
    className: "Alert",
    modelProperties: {
      ...Resource.type.modelProperties,
      state: {
        readOnly: true,
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      reportedTimeUtc: {
        readOnly: true,
        serializedName: "properties.reportedTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      vendorName: {
        readOnly: true,
        serializedName: "properties.vendorName",
        type: {
          name: "String"
        }
      },
      alertName: {
        readOnly: true,
        serializedName: "properties.alertName",
        type: {
          name: "String"
        }
      },
      alertDisplayName: {
        readOnly: true,
        serializedName: "properties.alertDisplayName",
        type: {
          name: "String"
        }
      },
      detectedTimeUtc: {
        readOnly: true,
        serializedName: "properties.detectedTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      description: {
        readOnly: true,
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      remediationSteps: {
        readOnly: true,
        serializedName: "properties.remediationSteps",
        type: {
          name: "String"
        }
      },
      actionTaken: {
        readOnly: true,
        serializedName: "properties.actionTaken",
        type: {
          name: "String"
        }
      },
      reportedSeverity: {
        readOnly: true,
        serializedName: "properties.reportedSeverity",
        type: {
          name: "String"
        }
      },
      compromisedEntity: {
        readOnly: true,
        serializedName: "properties.compromisedEntity",
        type: {
          name: "String"
        }
      },
      associatedResource: {
        readOnly: true,
        serializedName: "properties.associatedResource",
        type: {
          name: "String"
        }
      },
      extendedProperties: {
        serializedName: "properties.extendedProperties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Object"
            }
          }
        }
      },
      systemSource: {
        readOnly: true,
        serializedName: "properties.systemSource",
        type: {
          name: "String"
        }
      },
      canBeInvestigated: {
        readOnly: true,
        serializedName: "properties.canBeInvestigated",
        type: {
          name: "Boolean"
        }
      },
      isIncident: {
        readOnly: true,
        serializedName: "properties.isIncident",
        type: {
          name: "Boolean"
        }
      },
      entities: {
        serializedName: "properties.entities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AlertEntity",
              additionalProperties: {
                type: {
                  name: "Object"
                }
              }
            }
          }
        }
      },
      confidenceScore: {
        readOnly: true,
        serializedName: "properties.confidenceScore",
        constraints: {
          InclusiveMaximum: 1,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      confidenceReasons: {
        serializedName: "properties.confidenceReasons",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AlertConfidenceReason"
            }
          }
        }
      },
      subscriptionId: {
        readOnly: true,
        serializedName: "properties.subscriptionId",
        type: {
          name: "String"
        }
      },
      instanceId: {
        readOnly: true,
        serializedName: "properties.instanceId",
        type: {
          name: "String"
        }
      },
      workspaceArmId: {
        readOnly: true,
        serializedName: "properties.workspaceArmId",
        type: {
          name: "String"
        }
      },
      correlationKey: {
        readOnly: true,
        serializedName: "properties.correlationKey",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SettingResource: msRest.CompositeMapper = {
  serializedName: "SettingResource",
  type: {
    name: "Composite",
    className: "SettingResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Setting: msRest.CompositeMapper = {
  serializedName: "Setting",
  type: {
    name: "Composite",
    className: "Setting",
    modelProperties: {
      ...SettingResource.type.modelProperties
    }
  }
};

export const DataExportSetting: msRest.CompositeMapper = {
  serializedName: "DataExportSetting",
  type: {
    name: "Composite",
    className: "DataExportSetting",
    modelProperties: {
      ...Setting.type.modelProperties,
      enabled: {
        required: true,
        serializedName: "properties.enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ConnectedResource: msRest.CompositeMapper = {
  serializedName: "ConnectedResource",
  type: {
    name: "Composite",
    className: "ConnectedResource",
    modelProperties: {
      connectedResourceId: {
        readOnly: true,
        serializedName: "connectedResourceId",
        type: {
          name: "String"
        }
      },
      tcpPorts: {
        readOnly: true,
        serializedName: "tcpPorts",
        type: {
          name: "String"
        }
      },
      udpPorts: {
        readOnly: true,
        serializedName: "udpPorts",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConnectableResource: msRest.CompositeMapper = {
  serializedName: "ConnectableResource",
  type: {
    name: "Composite",
    className: "ConnectableResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      inboundConnectedResources: {
        readOnly: true,
        serializedName: "inboundConnectedResources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ConnectedResource"
            }
          }
        }
      },
      outboundConnectedResources: {
        readOnly: true,
        serializedName: "outboundConnectedResources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ConnectedResource"
            }
          }
        }
      }
    }
  }
};

export const AllowedConnectionsResource: msRest.CompositeMapper = {
  serializedName: "AllowedConnectionsResource",
  type: {
    name: "Composite",
    className: "AllowedConnectionsResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        readOnly: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      calculatedDateTime: {
        readOnly: true,
        serializedName: "properties.calculatedDateTime",
        type: {
          name: "DateTime"
        }
      },
      connectableResources: {
        readOnly: true,
        serializedName: "properties.connectableResources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ConnectableResource"
            }
          }
        }
      }
    }
  }
};

export const Location: msRest.CompositeMapper = {
  serializedName: "Location",
  type: {
    name: "Composite",
    className: "Location",
    modelProperties: {
      location: {
        readOnly: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiscoveredSecuritySolution: msRest.CompositeMapper = {
  serializedName: "DiscoveredSecuritySolution",
  type: {
    name: "Composite",
    className: "DiscoveredSecuritySolution",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        readOnly: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      securityFamily: {
        required: true,
        serializedName: "properties.securityFamily",
        type: {
          name: "String"
        }
      },
      offer: {
        required: true,
        serializedName: "properties.offer",
        type: {
          name: "String"
        }
      },
      publisher: {
        required: true,
        serializedName: "properties.publisher",
        type: {
          name: "String"
        }
      },
      sku: {
        required: true,
        serializedName: "properties.sku",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExternalSecuritySolution: msRest.CompositeMapper = {
  serializedName: "ExternalSecuritySolution",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "kind",
      clientName: "kind"
    },
    uberParent: "ExternalSecuritySolution",
    className: "ExternalSecuritySolution",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        readOnly: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExternalSecuritySolutionProperties: msRest.CompositeMapper = {
  serializedName: "ExternalSecuritySolutionProperties",
  type: {
    name: "Composite",
    className: "ExternalSecuritySolutionProperties",
    modelProperties: {
      deviceVendor: {
        serializedName: "deviceVendor",
        type: {
          name: "String"
        }
      },
      deviceType: {
        serializedName: "deviceType",
        type: {
          name: "String"
        }
      },
      workspace: {
        serializedName: "workspace",
        type: {
          name: "Composite",
          className: "ConnectedWorkspace"
        }
      }
    },
    additionalProperties: {
      type: {
        name: "Object"
      }
    }
  }
};

export const CefSolutionProperties: msRest.CompositeMapper = {
  serializedName: "CefSolutionProperties",
  type: {
    name: "Composite",
    className: "CefSolutionProperties",
    modelProperties: {
      ...ExternalSecuritySolutionProperties.type.modelProperties,
      hostname: {
        serializedName: "hostname",
        type: {
          name: "String"
        }
      },
      agent: {
        serializedName: "agent",
        type: {
          name: "String"
        }
      },
      lastEventReceived: {
        serializedName: "lastEventReceived",
        type: {
          name: "String"
        }
      }
    },
    additionalProperties: ExternalSecuritySolutionProperties.type.additionalProperties
  }
};

export const CefExternalSecuritySolution: msRest.CompositeMapper = {
  serializedName: "CEF",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ExternalSecuritySolution.type.polymorphicDiscriminator,
    uberParent: "ExternalSecuritySolution",
    className: "CefExternalSecuritySolution",
    modelProperties: {
      ...ExternalSecuritySolution.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "CefSolutionProperties",
          additionalProperties: ExternalSecuritySolutionProperties.type.additionalProperties
        }
      }
    }
  }
};

export const AtaSolutionProperties: msRest.CompositeMapper = {
  serializedName: "AtaSolutionProperties",
  type: {
    name: "Composite",
    className: "AtaSolutionProperties",
    modelProperties: {
      ...ExternalSecuritySolutionProperties.type.modelProperties,
      lastEventReceived: {
        serializedName: "lastEventReceived",
        type: {
          name: "String"
        }
      }
    },
    additionalProperties: ExternalSecuritySolutionProperties.type.additionalProperties
  }
};

export const AtaExternalSecuritySolution: msRest.CompositeMapper = {
  serializedName: "ATA",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ExternalSecuritySolution.type.polymorphicDiscriminator,
    uberParent: "ExternalSecuritySolution",
    className: "AtaExternalSecuritySolution",
    modelProperties: {
      ...ExternalSecuritySolution.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "AtaSolutionProperties",
          additionalProperties: ExternalSecuritySolutionProperties.type.additionalProperties
        }
      }
    }
  }
};

export const ConnectedWorkspace: msRest.CompositeMapper = {
  serializedName: "ConnectedWorkspace",
  type: {
    name: "Composite",
    className: "ConnectedWorkspace",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AadSolutionProperties: msRest.CompositeMapper = {
  serializedName: "AadSolutionProperties",
  type: {
    name: "Composite",
    className: "AadSolutionProperties",
    modelProperties: {
      deviceVendor: {
        serializedName: "deviceVendor",
        type: {
          name: "String"
        }
      },
      deviceType: {
        serializedName: "deviceType",
        type: {
          name: "String"
        }
      },
      workspace: {
        serializedName: "workspace",
        type: {
          name: "Composite",
          className: "ConnectedWorkspace"
        }
      },
      connectivityState: {
        serializedName: "connectivityState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AadExternalSecuritySolution: msRest.CompositeMapper = {
  serializedName: "AAD",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ExternalSecuritySolution.type.polymorphicDiscriminator,
    uberParent: "ExternalSecuritySolution",
    className: "AadExternalSecuritySolution",
    modelProperties: {
      ...ExternalSecuritySolution.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "AadSolutionProperties"
        }
      }
    }
  }
};

export const ExternalSecuritySolutionKind1: msRest.CompositeMapper = {
  serializedName: "ExternalSecuritySolutionKind",
  type: {
    name: "Composite",
    className: "ExternalSecuritySolutionKind1",
    modelProperties: {
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AadConnectivityState1: msRest.CompositeMapper = {
  serializedName: "AadConnectivityState",
  type: {
    name: "Composite",
    className: "AadConnectivityState1",
    modelProperties: {
      connectivityState: {
        serializedName: "connectivityState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JitNetworkAccessPortRule: msRest.CompositeMapper = {
  serializedName: "JitNetworkAccessPortRule",
  type: {
    name: "Composite",
    className: "JitNetworkAccessPortRule",
    modelProperties: {
      number: {
        required: true,
        serializedName: "number",
        type: {
          name: "Number"
        }
      },
      protocol: {
        required: true,
        serializedName: "protocol",
        type: {
          name: "String"
        }
      },
      allowedSourceAddressPrefix: {
        serializedName: "allowedSourceAddressPrefix",
        type: {
          name: "String"
        }
      },
      allowedSourceAddressPrefixes: {
        serializedName: "allowedSourceAddressPrefixes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      maxRequestAccessDuration: {
        required: true,
        serializedName: "maxRequestAccessDuration",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JitNetworkAccessPolicyVirtualMachine: msRest.CompositeMapper = {
  serializedName: "JitNetworkAccessPolicyVirtualMachine",
  type: {
    name: "Composite",
    className: "JitNetworkAccessPolicyVirtualMachine",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      ports: {
        required: true,
        serializedName: "ports",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JitNetworkAccessPortRule"
            }
          }
        }
      },
      publicIpAddress: {
        serializedName: "publicIpAddress",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JitNetworkAccessRequestPort: msRest.CompositeMapper = {
  serializedName: "JitNetworkAccessRequestPort",
  type: {
    name: "Composite",
    className: "JitNetworkAccessRequestPort",
    modelProperties: {
      number: {
        required: true,
        serializedName: "number",
        type: {
          name: "Number"
        }
      },
      allowedSourceAddressPrefix: {
        serializedName: "allowedSourceAddressPrefix",
        type: {
          name: "String"
        }
      },
      allowedSourceAddressPrefixes: {
        serializedName: "allowedSourceAddressPrefixes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      endTimeUtc: {
        required: true,
        serializedName: "endTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      statusReason: {
        required: true,
        serializedName: "statusReason",
        type: {
          name: "String"
        }
      },
      mappedPort: {
        serializedName: "mappedPort",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const JitNetworkAccessRequestVirtualMachine: msRest.CompositeMapper = {
  serializedName: "JitNetworkAccessRequestVirtualMachine",
  type: {
    name: "Composite",
    className: "JitNetworkAccessRequestVirtualMachine",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      ports: {
        required: true,
        serializedName: "ports",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JitNetworkAccessRequestPort"
            }
          }
        }
      }
    }
  }
};

export const JitNetworkAccessRequest: msRest.CompositeMapper = {
  serializedName: "JitNetworkAccessRequest",
  type: {
    name: "Composite",
    className: "JitNetworkAccessRequest",
    modelProperties: {
      virtualMachines: {
        required: true,
        serializedName: "virtualMachines",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JitNetworkAccessRequestVirtualMachine"
            }
          }
        }
      },
      startTimeUtc: {
        required: true,
        serializedName: "startTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      requestor: {
        required: true,
        serializedName: "requestor",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JitNetworkAccessPolicy: msRest.CompositeMapper = {
  serializedName: "JitNetworkAccessPolicy",
  type: {
    name: "Composite",
    className: "JitNetworkAccessPolicy",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      location: {
        readOnly: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      virtualMachines: {
        required: true,
        serializedName: "properties.virtualMachines",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JitNetworkAccessPolicyVirtualMachine"
            }
          }
        }
      },
      requests: {
        serializedName: "properties.requests",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JitNetworkAccessRequest"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JitNetworkAccessPolicyInitiatePort: msRest.CompositeMapper = {
  serializedName: "JitNetworkAccessPolicyInitiatePort",
  type: {
    name: "Composite",
    className: "JitNetworkAccessPolicyInitiatePort",
    modelProperties: {
      number: {
        required: true,
        serializedName: "number",
        type: {
          name: "Number"
        }
      },
      allowedSourceAddressPrefix: {
        serializedName: "allowedSourceAddressPrefix",
        type: {
          name: "String"
        }
      },
      endTimeUtc: {
        required: true,
        serializedName: "endTimeUtc",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const JitNetworkAccessPolicyInitiateVirtualMachine: msRest.CompositeMapper = {
  serializedName: "JitNetworkAccessPolicyInitiateVirtualMachine",
  type: {
    name: "Composite",
    className: "JitNetworkAccessPolicyInitiateVirtualMachine",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      ports: {
        required: true,
        serializedName: "ports",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JitNetworkAccessPolicyInitiatePort"
            }
          }
        }
      }
    }
  }
};

export const JitNetworkAccessPolicyInitiateRequest: msRest.CompositeMapper = {
  serializedName: "JitNetworkAccessPolicyInitiateRequest",
  type: {
    name: "Composite",
    className: "JitNetworkAccessPolicyInitiateRequest",
    modelProperties: {
      virtualMachines: {
        required: true,
        serializedName: "virtualMachines",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JitNetworkAccessPolicyInitiateVirtualMachine"
            }
          }
        }
      }
    }
  }
};

export const Kind: msRest.CompositeMapper = {
  serializedName: "Kind",
  type: {
    name: "Composite",
    className: "Kind",
    modelProperties: {
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "OperationDisplay",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        readOnly: true,
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        readOnly: true,
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        readOnly: true,
        serializedName: "operation",
        type: {
          name: "Number"
        }
      },
      description: {
        readOnly: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      origin: {
        readOnly: true,
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      }
    }
  }
};

export const SecurityTaskParameters: msRest.CompositeMapper = {
  serializedName: "SecurityTaskParameters",
  type: {
    name: "Composite",
    className: "SecurityTaskParameters",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "Boolean"
        }
      }
    },
    additionalProperties: {
      type: {
        name: "Object"
      }
    }
  }
};

export const SecurityTask: msRest.CompositeMapper = {
  serializedName: "SecurityTask",
  type: {
    name: "Composite",
    className: "SecurityTask",
    modelProperties: {
      ...Resource.type.modelProperties,
      state: {
        readOnly: true,
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      creationTimeUtc: {
        readOnly: true,
        serializedName: "properties.creationTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      securityTaskParameters: {
        serializedName: "properties.securityTaskParameters",
        type: {
          name: "Composite",
          className: "SecurityTaskParameters",
          additionalProperties: {
            type: {
              name: "Object"
            }
          }
        }
      },
      lastStateChangeTimeUtc: {
        readOnly: true,
        serializedName: "properties.lastStateChangeTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      subState: {
        readOnly: true,
        serializedName: "properties.subState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TagsResource: msRest.CompositeMapper = {
  serializedName: "TagsResource",
  type: {
    name: "Composite",
    className: "TagsResource",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const UserDefinedResourcesProperties: msRest.CompositeMapper = {
  serializedName: "UserDefinedResourcesProperties",
  type: {
    name: "Composite",
    className: "UserDefinedResourcesProperties",
    modelProperties: {
      query: {
        required: true,
        nullable: true,
        serializedName: "query",
        type: {
          name: "String"
        }
      },
      querySubscriptions: {
        required: true,
        nullable: true,
        serializedName: "querySubscriptions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const RecommendationConfigurationProperties: msRest.CompositeMapper = {
  serializedName: "RecommendationConfigurationProperties",
  type: {
    name: "Composite",
    className: "RecommendationConfigurationProperties",
    modelProperties: {
      recommendationType: {
        required: true,
        serializedName: "recommendationType",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        defaultValue: 'Enabled',
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IoTSecuritySolutionModel: msRest.CompositeMapper = {
  serializedName: "IoTSecuritySolutionModel",
  type: {
    name: "Composite",
    className: "IoTSecuritySolutionModel",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      workspace: {
        required: true,
        serializedName: "properties.workspace",
        type: {
          name: "String"
        }
      },
      displayName: {
        required: true,
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        defaultValue: 'Enabled',
        type: {
          name: "String"
        }
      },
      exportProperty: {
        serializedName: "properties.export",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      disabledDataSources: {
        serializedName: "properties.disabledDataSources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      iotHubs: {
        required: true,
        serializedName: "properties.iotHubs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      userDefinedResources: {
        serializedName: "properties.userDefinedResources",
        type: {
          name: "Composite",
          className: "UserDefinedResourcesProperties"
        }
      },
      autoDiscoveredResources: {
        readOnly: true,
        serializedName: "properties.autoDiscoveredResources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      recommendationsConfiguration: {
        serializedName: "properties.recommendationsConfiguration",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RecommendationConfigurationProperties"
            }
          }
        }
      }
    }
  }
};

export const UpdateIotSecuritySolutionData: msRest.CompositeMapper = {
  serializedName: "UpdateIotSecuritySolutionData",
  type: {
    name: "Composite",
    className: "UpdateIotSecuritySolutionData",
    modelProperties: {
      ...TagsResource.type.modelProperties,
      userDefinedResources: {
        serializedName: "userDefinedResources",
        type: {
          name: "Composite",
          className: "UserDefinedResourcesProperties"
        }
      },
      recommendationsConfiguration: {
        serializedName: "recommendationsConfiguration",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RecommendationConfigurationProperties"
            }
          }
        }
      }
    }
  }
};

export const AdvancedThreatProtectionSetting: msRest.CompositeMapper = {
  serializedName: "AdvancedThreatProtectionSetting",
  type: {
    name: "Composite",
    className: "AdvancedThreatProtectionSetting",
    modelProperties: {
      ...Resource.type.modelProperties,
      isEnabled: {
        serializedName: "properties.isEnabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AutoProvisioningSetting: msRest.CompositeMapper = {
  serializedName: "AutoProvisioningSetting",
  type: {
    name: "Composite",
    className: "AutoProvisioningSetting",
    modelProperties: {
      ...Resource.type.modelProperties,
      autoProvision: {
        required: true,
        serializedName: "properties.autoProvision",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ComplianceSegment: msRest.CompositeMapper = {
  serializedName: "ComplianceSegment",
  type: {
    name: "Composite",
    className: "ComplianceSegment",
    modelProperties: {
      segmentType: {
        readOnly: true,
        serializedName: "segmentType",
        type: {
          name: "String"
        }
      },
      percentage: {
        readOnly: true,
        serializedName: "percentage",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Compliance: msRest.CompositeMapper = {
  serializedName: "Compliance",
  type: {
    name: "Composite",
    className: "Compliance",
    modelProperties: {
      ...Resource.type.modelProperties,
      assessmentTimestampUtcDate: {
        readOnly: true,
        serializedName: "properties.assessmentTimestampUtcDate",
        type: {
          name: "DateTime"
        }
      },
      resourceCount: {
        readOnly: true,
        serializedName: "properties.resourceCount",
        type: {
          name: "Number"
        }
      },
      assessmentResult: {
        readOnly: true,
        serializedName: "properties.assessmentResult",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ComplianceSegment"
            }
          }
        }
      }
    }
  }
};

export const SensitivityLabel: msRest.CompositeMapper = {
  serializedName: "SensitivityLabel",
  type: {
    name: "Composite",
    className: "SensitivityLabel",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      order: {
        serializedName: "order",
        type: {
          name: "Number"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const InformationProtectionKeyword: msRest.CompositeMapper = {
  serializedName: "InformationProtectionKeyword",
  type: {
    name: "Composite",
    className: "InformationProtectionKeyword",
    modelProperties: {
      pattern: {
        serializedName: "pattern",
        type: {
          name: "String"
        }
      },
      custom: {
        serializedName: "custom",
        type: {
          name: "Boolean"
        }
      },
      canBeNumeric: {
        serializedName: "canBeNumeric",
        type: {
          name: "Boolean"
        }
      },
      excluded: {
        serializedName: "excluded",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const InformationType: msRest.CompositeMapper = {
  serializedName: "InformationType",
  type: {
    name: "Composite",
    className: "InformationType",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      order: {
        serializedName: "order",
        type: {
          name: "Number"
        }
      },
      recommendedLabelId: {
        serializedName: "recommendedLabelId",
        type: {
          name: "Uuid"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      custom: {
        serializedName: "custom",
        type: {
          name: "Boolean"
        }
      },
      keywords: {
        serializedName: "keywords",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InformationProtectionKeyword"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InformationProtectionPolicy: msRest.CompositeMapper = {
  serializedName: "InformationProtectionPolicy",
  type: {
    name: "Composite",
    className: "InformationProtectionPolicy",
    modelProperties: {
      ...Resource.type.modelProperties,
      lastModifiedUtc: {
        readOnly: true,
        serializedName: "properties.lastModifiedUtc",
        type: {
          name: "DateTime"
        }
      },
      labels: {
        serializedName: "properties.labels",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "SensitivityLabel"
            }
          }
        }
      },
      informationTypes: {
        serializedName: "properties.informationTypes",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "InformationType"
            }
          }
        }
      }
    }
  }
};

export const SecurityContact: msRest.CompositeMapper = {
  serializedName: "SecurityContact",
  type: {
    name: "Composite",
    className: "SecurityContact",
    modelProperties: {
      ...Resource.type.modelProperties,
      email: {
        required: true,
        serializedName: "properties.email",
        type: {
          name: "String"
        }
      },
      phone: {
        serializedName: "properties.phone",
        type: {
          name: "String"
        }
      },
      alertNotifications: {
        required: true,
        serializedName: "properties.alertNotifications",
        type: {
          name: "String"
        }
      },
      alertsToAdmins: {
        required: true,
        serializedName: "properties.alertsToAdmins",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkspaceSetting: msRest.CompositeMapper = {
  serializedName: "WorkspaceSetting",
  type: {
    name: "Composite",
    className: "WorkspaceSetting",
    modelProperties: {
      ...Resource.type.modelProperties,
      workspaceId: {
        required: true,
        serializedName: "properties.workspaceId",
        type: {
          name: "Composite",
          className: "IoTSeverityMetrics"
        }
      },
      scope: {
        required: true,
        serializedName: "properties.scope",
        type: {
          name: "String"
        }
      },
      topAlertedDevices: {
        serializedName: "properties.topAlertedDevices",
        type: {
          name: "Composite",
          className: "IoTSecurityAlertedDevicesList"
        }
      },
      mostPrevalentDeviceAlerts: {
        serializedName: "properties.mostPrevalentDeviceAlerts",
        type: {
          name: "Composite",
          className: "IoTSecurityDeviceAlertsList"
        }
      },
      mostPrevalentDeviceRecommendations: {
        serializedName: "properties.mostPrevalentDeviceRecommendations",
        type: {
          name: "Composite",
          className: "IoTSecurityDeviceRecommendationsList"
        }
      }
    }
  }
};

export const ResourceDetails: msRest.CompositeMapper = {
  serializedName: "ResourceDetails",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "assessedResourceSource",
      clientName: "assessedResourceSource"
    },
    uberParent: "ResourceDetails",
    className: "ResourceDetails",
    modelProperties: {
      assessedResourceSource: {
        required: true,
        serializedName: "assessedResourceSource",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssessmentStatus: msRest.CompositeMapper = {
  serializedName: "AssessmentStatus",
  type: {
    name: "Composite",
    className: "AssessmentStatus",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      cause: {
        readOnly: true,
        serializedName: "cause",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecurityAssessment: msRest.CompositeMapper = {
  serializedName: "SecurityAssessment",
  type: {
    name: "Composite",
    className: "SecurityAssessment",
    modelProperties: {
      ...Resource.type.modelProperties,
      resourceDetails: {
        serializedName: "properties.resourceDetails",
        type: {
          name: "Composite",
          className: "ResourceDetails"
        }
      },
      displayName: {
        readOnly: true,
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "Composite",
          className: "AssessmentStatus"
        }
      },
      additionalData: {
        readOnly: true,
        serializedName: "properties.additionalData",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AzureResourceDetails: msRest.CompositeMapper = {
  serializedName: "Azure",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ResourceDetails.type.polymorphicDiscriminator,
    uberParent: "ResourceDetails",
    className: "AzureResourceDetails",
    modelProperties: {
      ...ResourceDetails.type.modelProperties,
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecurityAssessmentMetadata: msRest.CompositeMapper = {
  serializedName: "SecurityAssessmentMetadata",
  type: {
    name: "Composite",
    className: "SecurityAssessmentMetadata",
    modelProperties: {
      ...Resource.type.modelProperties,
      displayName: {
        readOnly: true,
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      policyDefinitionId: {
        readOnly: true,
        serializedName: "properties.policyDefinitionId",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      remediationDescription: {
        readOnly: true,
        serializedName: "properties.remediationDescription",
        type: {
          name: "String"
        }
      },
      category: {
        readOnly: true,
        serializedName: "properties.category",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      secureScoreWeight: {
        readOnly: true,
        serializedName: "properties.secureScoreWeight",
        type: {
          name: "Number"
        }
      },
      requiredPricingBundle: {
        readOnly: true,
        serializedName: "properties.requiredPricingBundle",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      preview: {
        readOnly: true,
        serializedName: "properties.preview",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const RegulatoryComplianceStandard: msRest.CompositeMapper = {
  serializedName: "RegulatoryComplianceStandard",
  type: {
    name: "Composite",
    className: "RegulatoryComplianceStandard",
    modelProperties: {
      ...Resource.type.modelProperties,
      state: {
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      passedControls: {
        readOnly: true,
        serializedName: "properties.passedControls",
        type: {
          name: "Number"
        }
      },
      failedControls: {
        readOnly: true,
        serializedName: "properties.failedControls",
        type: {
          name: "Number"
        }
      },
      skippedControls: {
        readOnly: true,
        serializedName: "properties.skippedControls",
        type: {
          name: "Number"
        }
      },
      unsupportedControls: {
        readOnly: true,
        serializedName: "properties.unsupportedControls",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const RegulatoryComplianceControl: msRest.CompositeMapper = {
  serializedName: "RegulatoryComplianceControl",
  type: {
    name: "Composite",
    className: "RegulatoryComplianceControl",
    modelProperties: {
      ...Resource.type.modelProperties,
      description: {
        readOnly: true,
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      passedAssessments: {
        readOnly: true,
        serializedName: "properties.passedAssessments",
        type: {
          name: "Number"
        }
      },
      failedAssessments: {
        readOnly: true,
        serializedName: "properties.failedAssessments",
        type: {
          name: "Number"
        }
      },
      skippedAssessments: {
        readOnly: true,
        serializedName: "properties.skippedAssessments",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const RegulatoryComplianceAssessment: msRest.CompositeMapper = {
  serializedName: "RegulatoryComplianceAssessment",
  type: {
    name: "Composite",
    className: "RegulatoryComplianceAssessment",
    modelProperties: {
      ...Resource.type.modelProperties,
      description: {
        readOnly: true,
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      assessmentType: {
        readOnly: true,
        serializedName: "properties.assessmentType",
        type: {
          name: "String"
        }
      },
      assessmentDetailsLink: {
        readOnly: true,
        serializedName: "properties.assessmentDetailsLink",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      passedResources: {
        readOnly: true,
        serializedName: "properties.passedResources",
        type: {
          name: "Number"
        }
      },
      failedResources: {
        readOnly: true,
        serializedName: "properties.failedResources",
        type: {
          name: "Number"
        }
      },
      skippedResources: {
        readOnly: true,
        serializedName: "properties.skippedResources",
        type: {
          name: "Number"
        }
      },
      unsupportedResources: {
        readOnly: true,
        serializedName: "properties.unsupportedResources",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ServerVulnerabilityAssessment: msRest.CompositeMapper = {
  serializedName: "ServerVulnerabilityAssessment",
  type: {
    name: "Composite",
    className: "ServerVulnerabilityAssessment",
    modelProperties: {
      ...Resource.type.modelProperties,
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerVulnerabilityAssessmentsList: msRest.CompositeMapper = {
  serializedName: "ServerVulnerabilityAssessmentsList",
  type: {
    name: "Composite",
    className: "ServerVulnerabilityAssessmentsList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServerVulnerabilityAssessment"
            }
          }
        }
      }
    }
  }
};

export const ComplianceResultList: msRest.CompositeMapper = {
  serializedName: "ComplianceResultList",
  type: {
    name: "Composite",
    className: "ComplianceResultList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ComplianceResult"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServerVulnerabilityAssessment"
            }
          }
        }
      }
    }
  }
};

export const AlertList: msRest.CompositeMapper = {
  serializedName: "AlertList",
  type: {
    name: "Composite",
    className: "AlertList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Alert"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SettingsList: msRest.CompositeMapper = {
  serializedName: "SettingsList",
  type: {
    name: "Composite",
    className: "SettingsList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Setting"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AllowedConnectionsList: msRest.CompositeMapper = {
  serializedName: "AllowedConnectionsList",
  type: {
    name: "Composite",
    className: "AllowedConnectionsList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AllowedConnectionsResource"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiscoveredSecuritySolutionList: msRest.CompositeMapper = {
  serializedName: "DiscoveredSecuritySolutionList",
  type: {
    name: "Composite",
    className: "DiscoveredSecuritySolutionList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DiscoveredSecuritySolution"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExternalSecuritySolutionList: msRest.CompositeMapper = {
  serializedName: "ExternalSecuritySolutionList",
  type: {
    name: "Composite",
    className: "ExternalSecuritySolutionList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExternalSecuritySolution"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JitNetworkAccessPoliciesList: msRest.CompositeMapper = {
  serializedName: "JitNetworkAccessPoliciesList",
  type: {
    name: "Composite",
    className: "JitNetworkAccessPoliciesList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JitNetworkAccessPolicy"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AscLocationList: msRest.CompositeMapper = {
  serializedName: "AscLocationList",
  type: {
    name: "Composite",
    className: "AscLocationList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AscLocation"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationList: msRest.CompositeMapper = {
  serializedName: "OperationList",
  type: {
    name: "Composite",
    className: "OperationList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecurityTaskList: msRest.CompositeMapper = {
  serializedName: "SecurityTaskList",
  type: {
    name: "Composite",
    className: "SecurityTaskList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SecurityTask"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TopologyList: msRest.CompositeMapper = {
  serializedName: "TopologyList",
  type: {
    name: "Composite",
    className: "TopologyList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TopologyResource"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AutoProvisioningSettingList: msRest.CompositeMapper = {
  serializedName: "AutoProvisioningSettingList",
  type: {
    name: "Composite",
    className: "AutoProvisioningSettingList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AutoProvisioningSetting"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComplianceList: msRest.CompositeMapper = {
  serializedName: "ComplianceList",
  type: {
    name: "Composite",
    className: "ComplianceList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Compliance"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InformationProtectionPolicyList: msRest.CompositeMapper = {
  serializedName: "InformationProtectionPolicyList",
  type: {
    name: "Composite",
    className: "InformationProtectionPolicyList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InformationProtectionPolicy"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecurityContactList: msRest.CompositeMapper = {
  serializedName: "SecurityContactList",
  type: {
    name: "Composite",
    className: "SecurityContactList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SecurityContact"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkspaceSettingList: msRest.CompositeMapper = {
  serializedName: "WorkspaceSettingList",
  type: {
    name: "Composite",
    className: "WorkspaceSettingList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WorkspaceSetting"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecurityAssessmentList: msRest.CompositeMapper = {
  serializedName: "SecurityAssessmentList",
  type: {
    name: "Composite",
    className: "SecurityAssessmentList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SecurityAssessment"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecurityAssessmentMetadataList: msRest.CompositeMapper = {
  serializedName: "SecurityAssessmentMetadataList",
  type: {
    name: "Composite",
    className: "SecurityAssessmentMetadataList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SecurityAssessmentMetadata"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegulatoryComplianceStandardList: msRest.CompositeMapper = {
  serializedName: "RegulatoryComplianceStandardList",
  type: {
    name: "Composite",
    className: "RegulatoryComplianceStandardList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RegulatoryComplianceStandard"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegulatoryComplianceControlList: msRest.CompositeMapper = {
  serializedName: "RegulatoryComplianceControlList",
  type: {
    name: "Composite",
    className: "RegulatoryComplianceControlList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RegulatoryComplianceControl"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegulatoryComplianceAssessmentList: msRest.CompositeMapper = {
  serializedName: "RegulatoryComplianceAssessmentList",
  type: {
    name: "Composite",
    className: "RegulatoryComplianceAssessmentList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RegulatoryComplianceAssessment"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const discriminators = {
  'ExternalSecuritySolution' : ExternalSecuritySolution,
  'ExternalSecuritySolution.CEF' : CefExternalSecuritySolution,
  'ExternalSecuritySolution.ATA' : AtaExternalSecuritySolution,
  'ExternalSecuritySolution.AAD' : AadExternalSecuritySolution,
  'ResourceDetails' : ResourceDetails,
  'ResourceDetails.Azure' : AzureResourceDetails

};
