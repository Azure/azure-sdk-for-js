/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const StandardList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StandardList",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Standard"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureTrackedResourceLocation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureTrackedResourceLocation",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Kind: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Kind",
    modelProperties: {
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ETag: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ETag",
    modelProperties: {
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Tags: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Tags",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const StandardComponentProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StandardComponentProperties",
    modelProperties: {
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const CloudError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudError",
    modelProperties: {
      code: {
        serializedName: "error.code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "error.message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "error.target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "error.details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CloudErrorBody"
            }
          }
        }
      },
      additionalInfo: {
        serializedName: "error.additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const CloudErrorBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudErrorBody",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CloudErrorBody"
            }
          }
        }
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const AssignmentList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssignmentList",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Assignment"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssignedStandardItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssignedStandardItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssignedComponentItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssignedComponentItem",
    modelProperties: {
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssignmentPropertiesAdditionalData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssignmentPropertiesAdditionalData",
    modelProperties: {
      exemptionCategory: {
        serializedName: "exemptionCategory",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      ...AzureTrackedResourceLocation.type.modelProperties,
      ...Kind.type.modelProperties,
      ...ETag.type.modelProperties,
      ...Tags.type.modelProperties
    }
  }
};

export const Standard: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Standard",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      standardType: {
        serializedName: "properties.standardType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      category: {
        serializedName: "properties.category",
        type: {
          name: "String"
        }
      },
      components: {
        serializedName: "properties.components",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StandardComponentProperties"
            }
          }
        }
      }
    }
  }
};

export const Assignment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Assignment",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      assignedStandard: {
        serializedName: "properties.assignedStandard",
        type: {
          name: "Composite",
          className: "AssignedStandardItem"
        }
      },
      assignedComponent: {
        serializedName: "properties.assignedComponent",
        type: {
          name: "Composite",
          className: "AssignedComponentItem"
        }
      },
      scope: {
        serializedName: "properties.scope",
        type: {
          name: "String"
        }
      },
      effect: {
        serializedName: "properties.effect",
        type: {
          name: "String"
        }
      },
      expiresOn: {
        serializedName: "properties.expiresOn",
        type: {
          name: "DateTime"
        }
      },
      additionalData: {
        serializedName: "properties.additionalData",
        type: {
          name: "Composite",
          className: "AssignmentPropertiesAdditionalData"
        }
      },
      metadata: {
        serializedName: "properties.metadata",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};
