/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComplianceResult: msRest.CompositeMapper = {
  serializedName: "ComplianceResult",
  type: {
    name: "Composite",
    className: "ComplianceResult",
    modelProperties: {
      ...Resource.type.modelProperties,
      resourceStatus: {
        readOnly: true,
        serializedName: "properties.resourceStatus",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AscLocation: msRest.CompositeMapper = {
  serializedName: "AscLocation",
  type: {
    name: "Composite",
    className: "AscLocation",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AzureTrackedResourceLocation: msRest.CompositeMapper = {
  serializedName: "AzureTrackedResourceLocation",
  type: {
    name: "Composite",
    className: "AzureTrackedResourceLocation",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Kind: msRest.CompositeMapper = {
  serializedName: "Kind",
  type: {
    name: "Composite",
    className: "Kind",
    modelProperties: {
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ETag: msRest.CompositeMapper = {
  serializedName: "ETag",
  type: {
    name: "Composite",
    className: "ETag",
    modelProperties: {
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Tags: msRest.CompositeMapper = {
  serializedName: "Tags",
  type: {
    name: "Composite",
    className: "Tags",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Pricing: msRest.CompositeMapper = {
  serializedName: "Pricing",
  type: {
    name: "Composite",
    className: "Pricing",
    modelProperties: {
      ...Resource.type.modelProperties,
      pricingTier: {
        required: true,
        serializedName: "properties.pricingTier",
        type: {
          name: "String"
        }
      },
      freeTrialRemainingTime: {
        readOnly: true,
        serializedName: "properties.freeTrialRemainingTime",
        type: {
          name: "TimeSpan"
        }
      }
    }
  }
};

export const PricingList: msRest.CompositeMapper = {
  serializedName: "PricingList",
  type: {
    name: "Composite",
    className: "PricingList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Pricing"
            }
          }
        }
      }
    }
  }
};

export const SettingResource: msRest.CompositeMapper = {
  serializedName: "SettingResource",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "kind",
      clientName: "kind"
    },
    uberParent: "SettingResource",
    className: "SettingResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Setting: msRest.CompositeMapper = {
  serializedName: "Setting",
  type: {
    name: "Composite",
    polymorphicDiscriminator: SettingResource.type.polymorphicDiscriminator,
    uberParent: "SettingResource",
    className: "Setting",
    modelProperties: {
      ...SettingResource.type.modelProperties
    }
  }
};

export const DataExportSettings: msRest.CompositeMapper = {
  serializedName: "DataExportSettings",
  type: {
    name: "Composite",
    polymorphicDiscriminator: SettingResource.type.polymorphicDiscriminator,
    uberParent: "SettingResource",
    className: "DataExportSettings",
    modelProperties: {
      ...Setting.type.modelProperties,
      enabled: {
        required: true,
        serializedName: "properties.enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AdvancedThreatProtectionSetting: msRest.CompositeMapper = {
  serializedName: "AdvancedThreatProtectionSetting",
  type: {
    name: "Composite",
    className: "AdvancedThreatProtectionSetting",
    modelProperties: {
      ...Resource.type.modelProperties,
      isEnabled: {
        serializedName: "properties.isEnabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const CustomAlertRule: msRest.CompositeMapper = {
  serializedName: "CustomAlertRule",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "ruleType",
      clientName: "ruleType"
    },
    uberParent: "CustomAlertRule",
    className: "CustomAlertRule",
    modelProperties: {
      displayName: {
        readOnly: true,
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      isEnabled: {
        required: true,
        serializedName: "isEnabled",
        type: {
          name: "Boolean"
        }
      },
      ruleType: {
        required: true,
        serializedName: "ruleType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ThresholdCustomAlertRule: msRest.CompositeMapper = {
  serializedName: "ThresholdCustomAlertRule",
  type: {
    name: "Composite",
    polymorphicDiscriminator: CustomAlertRule.type.polymorphicDiscriminator,
    uberParent: "CustomAlertRule",
    className: "ThresholdCustomAlertRule",
    modelProperties: {
      ...CustomAlertRule.type.modelProperties,
      minThreshold: {
        required: true,
        serializedName: "minThreshold",
        type: {
          name: "Number"
        }
      },
      maxThreshold: {
        required: true,
        serializedName: "maxThreshold",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TimeWindowCustomAlertRule: msRest.CompositeMapper = {
  serializedName: "TimeWindowCustomAlertRule",
  type: {
    name: "Composite",
    polymorphicDiscriminator: CustomAlertRule.type.polymorphicDiscriminator,
    uberParent: "CustomAlertRule",
    className: "TimeWindowCustomAlertRule",
    modelProperties: {
      ...ThresholdCustomAlertRule.type.modelProperties,
      timeWindowSize: {
        required: true,
        serializedName: "timeWindowSize",
        type: {
          name: "TimeSpan"
        }
      }
    }
  }
};

export const ListCustomAlertRule: msRest.CompositeMapper = {
  serializedName: "ListCustomAlertRule",
  type: {
    name: "Composite",
    polymorphicDiscriminator: CustomAlertRule.type.polymorphicDiscriminator,
    uberParent: "CustomAlertRule",
    className: "ListCustomAlertRule",
    modelProperties: {
      ...CustomAlertRule.type.modelProperties,
      valueType: {
        readOnly: true,
        serializedName: "valueType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AllowlistCustomAlertRule: msRest.CompositeMapper = {
  serializedName: "AllowlistCustomAlertRule",
  type: {
    name: "Composite",
    polymorphicDiscriminator: CustomAlertRule.type.polymorphicDiscriminator,
    uberParent: "CustomAlertRule",
    className: "AllowlistCustomAlertRule",
    modelProperties: {
      ...ListCustomAlertRule.type.modelProperties,
      allowlistValues: {
        required: true,
        serializedName: "allowlistValues",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const DenylistCustomAlertRule: msRest.CompositeMapper = {
  serializedName: "DenylistCustomAlertRule",
  type: {
    name: "Composite",
    polymorphicDiscriminator: CustomAlertRule.type.polymorphicDiscriminator,
    uberParent: "CustomAlertRule",
    className: "DenylistCustomAlertRule",
    modelProperties: {
      ...ListCustomAlertRule.type.modelProperties,
      denylistValues: {
        required: true,
        serializedName: "denylistValues",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const DeviceSecurityGroup: msRest.CompositeMapper = {
  serializedName: "DeviceSecurityGroup",
  type: {
    name: "Composite",
    className: "DeviceSecurityGroup",
    modelProperties: {
      ...Resource.type.modelProperties,
      thresholdRules: {
        serializedName: "properties.thresholdRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ThresholdCustomAlertRule"
            }
          }
        }
      },
      timeWindowRules: {
        serializedName: "properties.timeWindowRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TimeWindowCustomAlertRule"
            }
          }
        }
      },
      allowlistRules: {
        serializedName: "properties.allowlistRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AllowlistCustomAlertRule"
            }
          }
        }
      },
      denylistRules: {
        serializedName: "properties.denylistRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DenylistCustomAlertRule"
            }
          }
        }
      }
    }
  }
};

export const ConnectionToIpNotAllowed: msRest.CompositeMapper = {
  serializedName: "ConnectionToIpNotAllowed",
  type: {
    name: "Composite",
    polymorphicDiscriminator: CustomAlertRule.type.polymorphicDiscriminator,
    uberParent: "CustomAlertRule",
    className: "ConnectionToIpNotAllowed",
    modelProperties: {
      ...AllowlistCustomAlertRule.type.modelProperties
    }
  }
};

export const LocalUserNotAllowed: msRest.CompositeMapper = {
  serializedName: "LocalUserNotAllowed",
  type: {
    name: "Composite",
    polymorphicDiscriminator: CustomAlertRule.type.polymorphicDiscriminator,
    uberParent: "CustomAlertRule",
    className: "LocalUserNotAllowed",
    modelProperties: {
      ...AllowlistCustomAlertRule.type.modelProperties
    }
  }
};

export const ProcessNotAllowed: msRest.CompositeMapper = {
  serializedName: "ProcessNotAllowed",
  type: {
    name: "Composite",
    polymorphicDiscriminator: CustomAlertRule.type.polymorphicDiscriminator,
    uberParent: "CustomAlertRule",
    className: "ProcessNotAllowed",
    modelProperties: {
      ...AllowlistCustomAlertRule.type.modelProperties
    }
  }
};

export const ActiveConnectionsNotInAllowedRange: msRest.CompositeMapper = {
  serializedName: "ActiveConnectionsNotInAllowedRange",
  type: {
    name: "Composite",
    polymorphicDiscriminator: CustomAlertRule.type.polymorphicDiscriminator,
    uberParent: "CustomAlertRule",
    className: "ActiveConnectionsNotInAllowedRange",
    modelProperties: {
      ...TimeWindowCustomAlertRule.type.modelProperties
    }
  }
};

export const AmqpC2DMessagesNotInAllowedRange: msRest.CompositeMapper = {
  serializedName: "AmqpC2DMessagesNotInAllowedRange",
  type: {
    name: "Composite",
    polymorphicDiscriminator: CustomAlertRule.type.polymorphicDiscriminator,
    uberParent: "CustomAlertRule",
    className: "AmqpC2DMessagesNotInAllowedRange",
    modelProperties: {
      ...TimeWindowCustomAlertRule.type.modelProperties
    }
  }
};

export const MqttC2DMessagesNotInAllowedRange: msRest.CompositeMapper = {
  serializedName: "MqttC2DMessagesNotInAllowedRange",
  type: {
    name: "Composite",
    polymorphicDiscriminator: CustomAlertRule.type.polymorphicDiscriminator,
    uberParent: "CustomAlertRule",
    className: "MqttC2DMessagesNotInAllowedRange",
    modelProperties: {
      ...TimeWindowCustomAlertRule.type.modelProperties
    }
  }
};

export const HttpC2DMessagesNotInAllowedRange: msRest.CompositeMapper = {
  serializedName: "HttpC2DMessagesNotInAllowedRange",
  type: {
    name: "Composite",
    polymorphicDiscriminator: CustomAlertRule.type.polymorphicDiscriminator,
    uberParent: "CustomAlertRule",
    className: "HttpC2DMessagesNotInAllowedRange",
    modelProperties: {
      ...TimeWindowCustomAlertRule.type.modelProperties
    }
  }
};

export const AmqpC2DRejectedMessagesNotInAllowedRange: msRest.CompositeMapper = {
  serializedName: "AmqpC2DRejectedMessagesNotInAllowedRange",
  type: {
    name: "Composite",
    polymorphicDiscriminator: CustomAlertRule.type.polymorphicDiscriminator,
    uberParent: "CustomAlertRule",
    className: "AmqpC2DRejectedMessagesNotInAllowedRange",
    modelProperties: {
      ...TimeWindowCustomAlertRule.type.modelProperties
    }
  }
};

export const MqttC2DRejectedMessagesNotInAllowedRange: msRest.CompositeMapper = {
  serializedName: "MqttC2DRejectedMessagesNotInAllowedRange",
  type: {
    name: "Composite",
    polymorphicDiscriminator: CustomAlertRule.type.polymorphicDiscriminator,
    uberParent: "CustomAlertRule",
    className: "MqttC2DRejectedMessagesNotInAllowedRange",
    modelProperties: {
      ...TimeWindowCustomAlertRule.type.modelProperties
    }
  }
};

export const HttpC2DRejectedMessagesNotInAllowedRange: msRest.CompositeMapper = {
  serializedName: "HttpC2DRejectedMessagesNotInAllowedRange",
  type: {
    name: "Composite",
    polymorphicDiscriminator: CustomAlertRule.type.polymorphicDiscriminator,
    uberParent: "CustomAlertRule",
    className: "HttpC2DRejectedMessagesNotInAllowedRange",
    modelProperties: {
      ...TimeWindowCustomAlertRule.type.modelProperties
    }
  }
};

export const AmqpD2CMessagesNotInAllowedRange: msRest.CompositeMapper = {
  serializedName: "AmqpD2CMessagesNotInAllowedRange",
  type: {
    name: "Composite",
    polymorphicDiscriminator: CustomAlertRule.type.polymorphicDiscriminator,
    uberParent: "CustomAlertRule",
    className: "AmqpD2CMessagesNotInAllowedRange",
    modelProperties: {
      ...TimeWindowCustomAlertRule.type.modelProperties
    }
  }
};

export const MqttD2CMessagesNotInAllowedRange: msRest.CompositeMapper = {
  serializedName: "MqttD2CMessagesNotInAllowedRange",
  type: {
    name: "Composite",
    polymorphicDiscriminator: CustomAlertRule.type.polymorphicDiscriminator,
    uberParent: "CustomAlertRule",
    className: "MqttD2CMessagesNotInAllowedRange",
    modelProperties: {
      ...TimeWindowCustomAlertRule.type.modelProperties
    }
  }
};

export const HttpD2CMessagesNotInAllowedRange: msRest.CompositeMapper = {
  serializedName: "HttpD2CMessagesNotInAllowedRange",
  type: {
    name: "Composite",
    polymorphicDiscriminator: CustomAlertRule.type.polymorphicDiscriminator,
    uberParent: "CustomAlertRule",
    className: "HttpD2CMessagesNotInAllowedRange",
    modelProperties: {
      ...TimeWindowCustomAlertRule.type.modelProperties
    }
  }
};

export const DirectMethodInvokesNotInAllowedRange: msRest.CompositeMapper = {
  serializedName: "DirectMethodInvokesNotInAllowedRange",
  type: {
    name: "Composite",
    polymorphicDiscriminator: CustomAlertRule.type.polymorphicDiscriminator,
    uberParent: "CustomAlertRule",
    className: "DirectMethodInvokesNotInAllowedRange",
    modelProperties: {
      ...TimeWindowCustomAlertRule.type.modelProperties
    }
  }
};

export const FailedLocalLoginsNotInAllowedRange: msRest.CompositeMapper = {
  serializedName: "FailedLocalLoginsNotInAllowedRange",
  type: {
    name: "Composite",
    polymorphicDiscriminator: CustomAlertRule.type.polymorphicDiscriminator,
    uberParent: "CustomAlertRule",
    className: "FailedLocalLoginsNotInAllowedRange",
    modelProperties: {
      ...TimeWindowCustomAlertRule.type.modelProperties
    }
  }
};

export const FileUploadsNotInAllowedRange: msRest.CompositeMapper = {
  serializedName: "FileUploadsNotInAllowedRange",
  type: {
    name: "Composite",
    polymorphicDiscriminator: CustomAlertRule.type.polymorphicDiscriminator,
    uberParent: "CustomAlertRule",
    className: "FileUploadsNotInAllowedRange",
    modelProperties: {
      ...TimeWindowCustomAlertRule.type.modelProperties
    }
  }
};

export const QueuePurgesNotInAllowedRange: msRest.CompositeMapper = {
  serializedName: "QueuePurgesNotInAllowedRange",
  type: {
    name: "Composite",
    polymorphicDiscriminator: CustomAlertRule.type.polymorphicDiscriminator,
    uberParent: "CustomAlertRule",
    className: "QueuePurgesNotInAllowedRange",
    modelProperties: {
      ...TimeWindowCustomAlertRule.type.modelProperties
    }
  }
};

export const TwinUpdatesNotInAllowedRange: msRest.CompositeMapper = {
  serializedName: "TwinUpdatesNotInAllowedRange",
  type: {
    name: "Composite",
    polymorphicDiscriminator: CustomAlertRule.type.polymorphicDiscriminator,
    uberParent: "CustomAlertRule",
    className: "TwinUpdatesNotInAllowedRange",
    modelProperties: {
      ...TimeWindowCustomAlertRule.type.modelProperties
    }
  }
};

export const UnauthorizedOperationsNotInAllowedRange: msRest.CompositeMapper = {
  serializedName: "UnauthorizedOperationsNotInAllowedRange",
  type: {
    name: "Composite",
    polymorphicDiscriminator: CustomAlertRule.type.polymorphicDiscriminator,
    uberParent: "CustomAlertRule",
    className: "UnauthorizedOperationsNotInAllowedRange",
    modelProperties: {
      ...TimeWindowCustomAlertRule.type.modelProperties
    }
  }
};

export const TagsResource: msRest.CompositeMapper = {
  serializedName: "TagsResource",
  type: {
    name: "Composite",
    className: "TagsResource",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const UserDefinedResourcesProperties: msRest.CompositeMapper = {
  serializedName: "UserDefinedResourcesProperties",
  type: {
    name: "Composite",
    className: "UserDefinedResourcesProperties",
    modelProperties: {
      query: {
        required: true,
        nullable: true,
        serializedName: "query",
        type: {
          name: "String"
        }
      },
      querySubscriptions: {
        required: true,
        nullable: true,
        serializedName: "querySubscriptions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const RecommendationConfigurationProperties: msRest.CompositeMapper = {
  serializedName: "RecommendationConfigurationProperties",
  type: {
    name: "Composite",
    className: "RecommendationConfigurationProperties",
    modelProperties: {
      recommendationType: {
        required: true,
        serializedName: "recommendationType",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        defaultValue: 'Enabled',
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IoTSecuritySolutionModel: msRest.CompositeMapper = {
  serializedName: "IoTSecuritySolutionModel",
  type: {
    name: "Composite",
    className: "IoTSecuritySolutionModel",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      workspace: {
        serializedName: "properties.workspace",
        type: {
          name: "String"
        }
      },
      displayName: {
        required: true,
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        defaultValue: 'Enabled',
        type: {
          name: "String"
        }
      },
      exportProperty: {
        serializedName: "properties.export",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      disabledDataSources: {
        serializedName: "properties.disabledDataSources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      iotHubs: {
        required: true,
        serializedName: "properties.iotHubs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      userDefinedResources: {
        serializedName: "properties.userDefinedResources",
        type: {
          name: "Composite",
          className: "UserDefinedResourcesProperties"
        }
      },
      autoDiscoveredResources: {
        readOnly: true,
        serializedName: "properties.autoDiscoveredResources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      recommendationsConfiguration: {
        serializedName: "properties.recommendationsConfiguration",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RecommendationConfigurationProperties"
            }
          }
        }
      },
      unmaskedIpLoggingStatus: {
        serializedName: "properties.unmaskedIpLoggingStatus",
        defaultValue: 'Disabled',
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UpdateIotSecuritySolutionData: msRest.CompositeMapper = {
  serializedName: "UpdateIotSecuritySolutionData",
  type: {
    name: "Composite",
    className: "UpdateIotSecuritySolutionData",
    modelProperties: {
      ...TagsResource.type.modelProperties,
      userDefinedResources: {
        serializedName: "properties.userDefinedResources",
        type: {
          name: "Composite",
          className: "UserDefinedResourcesProperties"
        }
      },
      recommendationsConfiguration: {
        serializedName: "properties.recommendationsConfiguration",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RecommendationConfigurationProperties"
            }
          }
        }
      }
    }
  }
};

export const IoTSeverityMetrics: msRest.CompositeMapper = {
  serializedName: "IoTSeverityMetrics",
  type: {
    name: "Composite",
    className: "IoTSeverityMetrics",
    modelProperties: {
      high: {
        serializedName: "high",
        type: {
          name: "Number"
        }
      },
      medium: {
        serializedName: "medium",
        type: {
          name: "Number"
        }
      },
      low: {
        serializedName: "low",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsItem: msRest.CompositeMapper = {
  serializedName: "IoTSecuritySolutionAnalyticsModelProperties_devicesMetricsItem",
  type: {
    name: "Composite",
    className: "IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsItem",
    modelProperties: {
      date: {
        serializedName: "date",
        type: {
          name: "DateTime"
        }
      },
      devicesMetrics: {
        serializedName: "devicesMetrics",
        type: {
          name: "Composite",
          className: "IoTSeverityMetrics"
        }
      }
    }
  }
};

export const IoTSecurityAlertedDevice: msRest.CompositeMapper = {
  serializedName: "IoTSecurityAlertedDevice",
  type: {
    name: "Composite",
    className: "IoTSecurityAlertedDevice",
    modelProperties: {
      deviceId: {
        readOnly: true,
        serializedName: "deviceId",
        type: {
          name: "String"
        }
      },
      alertsCount: {
        readOnly: true,
        serializedName: "alertsCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const IoTSecurityDeviceAlert: msRest.CompositeMapper = {
  serializedName: "IoTSecurityDeviceAlert",
  type: {
    name: "Composite",
    className: "IoTSecurityDeviceAlert",
    modelProperties: {
      alertDisplayName: {
        readOnly: true,
        serializedName: "alertDisplayName",
        type: {
          name: "String"
        }
      },
      reportedSeverity: {
        readOnly: true,
        serializedName: "reportedSeverity",
        type: {
          name: "String"
        }
      },
      alertsCount: {
        readOnly: true,
        serializedName: "alertsCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const IoTSecurityDeviceRecommendation: msRest.CompositeMapper = {
  serializedName: "IoTSecurityDeviceRecommendation",
  type: {
    name: "Composite",
    className: "IoTSecurityDeviceRecommendation",
    modelProperties: {
      recommendationDisplayName: {
        readOnly: true,
        serializedName: "recommendationDisplayName",
        type: {
          name: "String"
        }
      },
      reportedSeverity: {
        readOnly: true,
        serializedName: "reportedSeverity",
        type: {
          name: "String"
        }
      },
      devicesCount: {
        readOnly: true,
        serializedName: "devicesCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const IoTSecuritySolutionAnalyticsModel: msRest.CompositeMapper = {
  serializedName: "IoTSecuritySolutionAnalyticsModel",
  type: {
    name: "Composite",
    className: "IoTSecuritySolutionAnalyticsModel",
    modelProperties: {
      ...Resource.type.modelProperties,
      metrics: {
        readOnly: true,
        serializedName: "properties.metrics",
        type: {
          name: "Composite",
          className: "IoTSeverityMetrics"
        }
      },
      unhealthyDeviceCount: {
        readOnly: true,
        serializedName: "properties.unhealthyDeviceCount",
        type: {
          name: "Number"
        }
      },
      devicesMetrics: {
        readOnly: true,
        serializedName: "properties.devicesMetrics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsItem"
            }
          }
        }
      },
      topAlertedDevices: {
        serializedName: "properties.topAlertedDevices",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IoTSecurityAlertedDevice"
            }
          }
        }
      },
      mostPrevalentDeviceAlerts: {
        serializedName: "properties.mostPrevalentDeviceAlerts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IoTSecurityDeviceAlert"
            }
          }
        }
      },
      mostPrevalentDeviceRecommendations: {
        serializedName: "properties.mostPrevalentDeviceRecommendations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IoTSecurityDeviceRecommendation"
            }
          }
        }
      }
    }
  }
};

export const IoTSecuritySolutionAnalyticsModelList: msRest.CompositeMapper = {
  serializedName: "IoTSecuritySolutionAnalyticsModelList",
  type: {
    name: "Composite",
    className: "IoTSecuritySolutionAnalyticsModelList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IoTSecuritySolutionAnalyticsModel"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IoTSecurityAggregatedAlertPropertiesTopDevicesListItem: msRest.CompositeMapper = {
  serializedName: "IoTSecurityAggregatedAlertProperties_topDevicesListItem",
  type: {
    name: "Composite",
    className: "IoTSecurityAggregatedAlertPropertiesTopDevicesListItem",
    modelProperties: {
      deviceId: {
        readOnly: true,
        serializedName: "deviceId",
        type: {
          name: "String"
        }
      },
      alertsCount: {
        readOnly: true,
        serializedName: "alertsCount",
        type: {
          name: "Number"
        }
      },
      lastOccurrence: {
        readOnly: true,
        serializedName: "lastOccurrence",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IoTSecurityAggregatedAlert: msRest.CompositeMapper = {
  serializedName: "IoTSecurityAggregatedAlert",
  type: {
    name: "Composite",
    className: "IoTSecurityAggregatedAlert",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      alertType: {
        readOnly: true,
        serializedName: "properties.alertType",
        type: {
          name: "String"
        }
      },
      alertDisplayName: {
        readOnly: true,
        serializedName: "properties.alertDisplayName",
        type: {
          name: "String"
        }
      },
      aggregatedDateUtc: {
        readOnly: true,
        serializedName: "properties.aggregatedDateUtc",
        type: {
          name: "Date"
        }
      },
      vendorName: {
        readOnly: true,
        serializedName: "properties.vendorName",
        type: {
          name: "String"
        }
      },
      reportedSeverity: {
        readOnly: true,
        serializedName: "properties.reportedSeverity",
        type: {
          name: "String"
        }
      },
      remediationSteps: {
        readOnly: true,
        serializedName: "properties.remediationSteps",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      count: {
        readOnly: true,
        serializedName: "properties.count",
        type: {
          name: "Number"
        }
      },
      effectedResourceType: {
        readOnly: true,
        serializedName: "properties.effectedResourceType",
        type: {
          name: "String"
        }
      },
      systemSource: {
        readOnly: true,
        serializedName: "properties.systemSource",
        type: {
          name: "String"
        }
      },
      actionTaken: {
        readOnly: true,
        serializedName: "properties.actionTaken",
        type: {
          name: "String"
        }
      },
      logAnalyticsQuery: {
        readOnly: true,
        serializedName: "properties.logAnalyticsQuery",
        type: {
          name: "String"
        }
      },
      topDevicesList: {
        readOnly: true,
        serializedName: "properties.topDevicesList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IoTSecurityAggregatedAlertPropertiesTopDevicesListItem"
            }
          }
        }
      }
    }
  }
};

export const IoTSecurityAggregatedRecommendation: msRest.CompositeMapper = {
  serializedName: "IoTSecurityAggregatedRecommendation",
  type: {
    name: "Composite",
    className: "IoTSecurityAggregatedRecommendation",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      recommendationName: {
        serializedName: "properties.recommendationName",
        type: {
          name: "String"
        }
      },
      recommendationDisplayName: {
        readOnly: true,
        serializedName: "properties.recommendationDisplayName",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      recommendationTypeId: {
        readOnly: true,
        serializedName: "properties.recommendationTypeId",
        type: {
          name: "String"
        }
      },
      detectedBy: {
        readOnly: true,
        serializedName: "properties.detectedBy",
        type: {
          name: "String"
        }
      },
      remediationSteps: {
        readOnly: true,
        serializedName: "properties.remediationSteps",
        type: {
          name: "String"
        }
      },
      reportedSeverity: {
        readOnly: true,
        serializedName: "properties.reportedSeverity",
        type: {
          name: "String"
        }
      },
      healthyDevices: {
        readOnly: true,
        serializedName: "properties.healthyDevices",
        type: {
          name: "Number"
        }
      },
      unhealthyDeviceCount: {
        readOnly: true,
        serializedName: "properties.unhealthyDeviceCount",
        type: {
          name: "Number"
        }
      },
      logAnalyticsQuery: {
        readOnly: true,
        serializedName: "properties.logAnalyticsQuery",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IotAlertType: msRest.CompositeMapper = {
  serializedName: "IotAlertType",
  type: {
    name: "Composite",
    className: "IotAlertType",
    modelProperties: {
      ...Resource.type.modelProperties,
      alertDisplayName: {
        readOnly: true,
        serializedName: "properties.alertDisplayName",
        type: {
          name: "String"
        }
      },
      severity: {
        readOnly: true,
        serializedName: "properties.severity",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      providerName: {
        readOnly: true,
        serializedName: "properties.providerName",
        type: {
          name: "String"
        }
      },
      productName: {
        readOnly: true,
        serializedName: "properties.productName",
        type: {
          name: "String"
        }
      },
      productComponentName: {
        readOnly: true,
        serializedName: "properties.productComponentName",
        type: {
          name: "String"
        }
      },
      vendorName: {
        readOnly: true,
        serializedName: "properties.vendorName",
        type: {
          name: "String"
        }
      },
      intent: {
        readOnly: true,
        serializedName: "properties.intent",
        type: {
          name: "String"
        }
      },
      remediationSteps: {
        readOnly: true,
        serializedName: "properties.remediationSteps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const IotAlertTypeList: msRest.CompositeMapper = {
  serializedName: "IotAlertTypeList",
  type: {
    name: "Composite",
    className: "IotAlertTypeList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IotAlertType"
            }
          }
        }
      }
    }
  }
};

export const IotAlert: msRest.CompositeMapper = {
  serializedName: "IotAlert",
  type: {
    name: "Composite",
    className: "IotAlert",
    modelProperties: {
      systemAlertId: {
        readOnly: true,
        serializedName: "properties.systemAlertId",
        type: {
          name: "String"
        }
      },
      compromisedEntity: {
        readOnly: true,
        serializedName: "properties.compromisedEntity",
        type: {
          name: "String"
        }
      },
      alertType: {
        readOnly: true,
        serializedName: "properties.alertType",
        type: {
          name: "String"
        }
      },
      startTimeUtc: {
        readOnly: true,
        serializedName: "properties.startTimeUtc",
        type: {
          name: "String"
        }
      },
      endTimeUtc: {
        readOnly: true,
        serializedName: "properties.endTimeUtc",
        type: {
          name: "String"
        }
      },
      entities: {
        serializedName: "properties.entities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Object"
            }
          }
        }
      },
      extendedProperties: {
        serializedName: "properties.extendedProperties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const IotRecommendationType: msRest.CompositeMapper = {
  serializedName: "IotRecommendationType",
  type: {
    name: "Composite",
    className: "IotRecommendationType",
    modelProperties: {
      ...Resource.type.modelProperties,
      recommendationDisplayName: {
        readOnly: true,
        serializedName: "properties.recommendationDisplayName",
        type: {
          name: "String"
        }
      },
      severity: {
        readOnly: true,
        serializedName: "properties.severity",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      productName: {
        readOnly: true,
        serializedName: "properties.productName",
        type: {
          name: "String"
        }
      },
      productComponentName: {
        readOnly: true,
        serializedName: "properties.productComponentName",
        type: {
          name: "String"
        }
      },
      vendorName: {
        readOnly: true,
        serializedName: "properties.vendorName",
        type: {
          name: "String"
        }
      },
      control: {
        readOnly: true,
        serializedName: "properties.control",
        type: {
          name: "String"
        }
      },
      remediationSteps: {
        readOnly: true,
        serializedName: "properties.remediationSteps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      dataSource: {
        readOnly: true,
        serializedName: "properties.dataSource",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IotRecommendationTypeList: msRest.CompositeMapper = {
  serializedName: "IotRecommendationTypeList",
  type: {
    name: "Composite",
    className: "IotRecommendationTypeList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IotRecommendationType"
            }
          }
        }
      }
    }
  }
};

export const IotRecommendation: msRest.CompositeMapper = {
  serializedName: "IotRecommendation",
  type: {
    name: "Composite",
    className: "IotRecommendation",
    modelProperties: {
      ...Resource.type.modelProperties,
      deviceId: {
        readOnly: true,
        serializedName: "properties.deviceId",
        type: {
          name: "String"
        }
      },
      recommendationType: {
        readOnly: true,
        serializedName: "properties.recommendationType",
        type: {
          name: "String"
        }
      },
      discoveredTimeUtc: {
        readOnly: true,
        serializedName: "properties.discoveredTimeUtc",
        type: {
          name: "String"
        }
      },
      recommendationAdditionalData: {
        serializedName: "properties.recommendationAdditionalData",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "OperationDisplay",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        readOnly: true,
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        readOnly: true,
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        readOnly: true,
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      origin: {
        readOnly: true,
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      }
    }
  }
};

export const SecurityTaskParameters: msRest.CompositeMapper = {
  serializedName: "SecurityTaskParameters",
  type: {
    name: "Composite",
    className: "SecurityTaskParameters",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    },
    additionalProperties: {
      type: {
        name: "Object"
      }
    }
  }
};

export const SecurityTask: msRest.CompositeMapper = {
  serializedName: "SecurityTask",
  type: {
    name: "Composite",
    className: "SecurityTask",
    modelProperties: {
      ...Resource.type.modelProperties,
      state: {
        readOnly: true,
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      creationTimeUtc: {
        readOnly: true,
        serializedName: "properties.creationTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      securityTaskParameters: {
        serializedName: "properties.securityTaskParameters",
        type: {
          name: "Composite",
          className: "SecurityTaskParameters",
          additionalProperties: {
            type: {
              name: "Object"
            }
          }
        }
      },
      lastStateChangeTimeUtc: {
        readOnly: true,
        serializedName: "properties.lastStateChangeTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      subState: {
        readOnly: true,
        serializedName: "properties.subState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AutoProvisioningSetting: msRest.CompositeMapper = {
  serializedName: "AutoProvisioningSetting",
  type: {
    name: "Composite",
    className: "AutoProvisioningSetting",
    modelProperties: {
      ...Resource.type.modelProperties,
      autoProvision: {
        required: true,
        serializedName: "properties.autoProvision",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComplianceSegment: msRest.CompositeMapper = {
  serializedName: "ComplianceSegment",
  type: {
    name: "Composite",
    className: "ComplianceSegment",
    modelProperties: {
      segmentType: {
        readOnly: true,
        serializedName: "segmentType",
        type: {
          name: "String"
        }
      },
      percentage: {
        readOnly: true,
        serializedName: "percentage",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Compliance: msRest.CompositeMapper = {
  serializedName: "Compliance",
  type: {
    name: "Composite",
    className: "Compliance",
    modelProperties: {
      ...Resource.type.modelProperties,
      assessmentTimestampUtcDate: {
        readOnly: true,
        serializedName: "properties.assessmentTimestampUtcDate",
        type: {
          name: "DateTime"
        }
      },
      resourceCount: {
        readOnly: true,
        serializedName: "properties.resourceCount",
        type: {
          name: "Number"
        }
      },
      assessmentResult: {
        readOnly: true,
        serializedName: "properties.assessmentResult",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ComplianceSegment"
            }
          }
        }
      }
    }
  }
};

export const SensitivityLabel: msRest.CompositeMapper = {
  serializedName: "SensitivityLabel",
  type: {
    name: "Composite",
    className: "SensitivityLabel",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      rank: {
        serializedName: "rank",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "Low",
            "Medium",
            "High",
            "Critical"
          ]
        }
      },
      order: {
        serializedName: "order",
        type: {
          name: "Number"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const InformationProtectionKeyword: msRest.CompositeMapper = {
  serializedName: "InformationProtectionKeyword",
  type: {
    name: "Composite",
    className: "InformationProtectionKeyword",
    modelProperties: {
      pattern: {
        serializedName: "pattern",
        type: {
          name: "String"
        }
      },
      custom: {
        serializedName: "custom",
        type: {
          name: "Boolean"
        }
      },
      canBeNumeric: {
        serializedName: "canBeNumeric",
        type: {
          name: "Boolean"
        }
      },
      excluded: {
        serializedName: "excluded",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const InformationType: msRest.CompositeMapper = {
  serializedName: "InformationType",
  type: {
    name: "Composite",
    className: "InformationType",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      order: {
        serializedName: "order",
        type: {
          name: "Number"
        }
      },
      recommendedLabelId: {
        serializedName: "recommendedLabelId",
        type: {
          name: "Uuid"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      custom: {
        serializedName: "custom",
        type: {
          name: "Boolean"
        }
      },
      keywords: {
        serializedName: "keywords",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InformationProtectionKeyword"
            }
          }
        }
      }
    }
  }
};

export const InformationProtectionPolicy: msRest.CompositeMapper = {
  serializedName: "InformationProtectionPolicy",
  type: {
    name: "Composite",
    className: "InformationProtectionPolicy",
    modelProperties: {
      ...Resource.type.modelProperties,
      lastModifiedUtc: {
        readOnly: true,
        serializedName: "properties.lastModifiedUtc",
        type: {
          name: "DateTime"
        }
      },
      version: {
        readOnly: true,
        serializedName: "properties.version",
        type: {
          name: "String"
        }
      },
      labels: {
        serializedName: "properties.labels",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "SensitivityLabel"
            }
          }
        }
      },
      informationTypes: {
        serializedName: "properties.informationTypes",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "InformationType"
            }
          }
        }
      }
    }
  }
};

export const SecurityContact: msRest.CompositeMapper = {
  serializedName: "SecurityContact",
  type: {
    name: "Composite",
    className: "SecurityContact",
    modelProperties: {
      ...Resource.type.modelProperties,
      email: {
        required: true,
        serializedName: "properties.email",
        type: {
          name: "String"
        }
      },
      phone: {
        serializedName: "properties.phone",
        type: {
          name: "String"
        }
      },
      alertNotifications: {
        required: true,
        serializedName: "properties.alertNotifications",
        type: {
          name: "String"
        }
      },
      alertsToAdmins: {
        required: true,
        serializedName: "properties.alertsToAdmins",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkspaceSetting: msRest.CompositeMapper = {
  serializedName: "WorkspaceSetting",
  type: {
    name: "Composite",
    className: "WorkspaceSetting",
    modelProperties: {
      ...Resource.type.modelProperties,
      workspaceId: {
        required: true,
        serializedName: "properties.workspaceId",
        type: {
          name: "String"
        }
      },
      scope: {
        required: true,
        serializedName: "properties.scope",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegulatoryComplianceStandard: msRest.CompositeMapper = {
  serializedName: "RegulatoryComplianceStandard",
  type: {
    name: "Composite",
    className: "RegulatoryComplianceStandard",
    modelProperties: {
      ...Resource.type.modelProperties,
      state: {
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      passedControls: {
        readOnly: true,
        serializedName: "properties.passedControls",
        type: {
          name: "Number"
        }
      },
      failedControls: {
        readOnly: true,
        serializedName: "properties.failedControls",
        type: {
          name: "Number"
        }
      },
      skippedControls: {
        readOnly: true,
        serializedName: "properties.skippedControls",
        type: {
          name: "Number"
        }
      },
      unsupportedControls: {
        readOnly: true,
        serializedName: "properties.unsupportedControls",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const RegulatoryComplianceControl: msRest.CompositeMapper = {
  serializedName: "RegulatoryComplianceControl",
  type: {
    name: "Composite",
    className: "RegulatoryComplianceControl",
    modelProperties: {
      ...Resource.type.modelProperties,
      description: {
        readOnly: true,
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      passedAssessments: {
        readOnly: true,
        serializedName: "properties.passedAssessments",
        type: {
          name: "Number"
        }
      },
      failedAssessments: {
        readOnly: true,
        serializedName: "properties.failedAssessments",
        type: {
          name: "Number"
        }
      },
      skippedAssessments: {
        readOnly: true,
        serializedName: "properties.skippedAssessments",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const RegulatoryComplianceAssessment: msRest.CompositeMapper = {
  serializedName: "RegulatoryComplianceAssessment",
  type: {
    name: "Composite",
    className: "RegulatoryComplianceAssessment",
    modelProperties: {
      ...Resource.type.modelProperties,
      description: {
        readOnly: true,
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      assessmentType: {
        readOnly: true,
        serializedName: "properties.assessmentType",
        type: {
          name: "String"
        }
      },
      assessmentDetailsLink: {
        readOnly: true,
        serializedName: "properties.assessmentDetailsLink",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      passedResources: {
        readOnly: true,
        serializedName: "properties.passedResources",
        type: {
          name: "Number"
        }
      },
      failedResources: {
        readOnly: true,
        serializedName: "properties.failedResources",
        type: {
          name: "Number"
        }
      },
      skippedResources: {
        readOnly: true,
        serializedName: "properties.skippedResources",
        type: {
          name: "Number"
        }
      },
      unsupportedResources: {
        readOnly: true,
        serializedName: "properties.unsupportedResources",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const SubAssessmentStatus: msRest.CompositeMapper = {
  serializedName: "SubAssessmentStatus",
  type: {
    name: "Composite",
    className: "SubAssessmentStatus",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      cause: {
        readOnly: true,
        serializedName: "cause",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      severity: {
        readOnly: true,
        serializedName: "severity",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceDetails: msRest.CompositeMapper = {
  serializedName: "ResourceDetails",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "source",
      clientName: "source"
    },
    uberParent: "ResourceDetails",
    className: "ResourceDetails",
    modelProperties: {
      source: {
        required: true,
        serializedName: "source",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AdditionalData: msRest.CompositeMapper = {
  serializedName: "AdditionalData",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "assessedResourceType",
      clientName: "assessedResourceType"
    },
    uberParent: "AdditionalData",
    className: "AdditionalData",
    modelProperties: {
      assessedResourceType: {
        required: true,
        serializedName: "assessedResourceType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecuritySubAssessment: msRest.CompositeMapper = {
  serializedName: "SecuritySubAssessment",
  type: {
    name: "Composite",
    className: "SecuritySubAssessment",
    modelProperties: {
      ...Resource.type.modelProperties,
      securitySubAssessmentId: {
        readOnly: true,
        serializedName: "properties.id",
        type: {
          name: "String"
        }
      },
      displayName: {
        readOnly: true,
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "Composite",
          className: "SubAssessmentStatus"
        }
      },
      remediation: {
        readOnly: true,
        serializedName: "properties.remediation",
        type: {
          name: "String"
        }
      },
      impact: {
        readOnly: true,
        serializedName: "properties.impact",
        type: {
          name: "String"
        }
      },
      category: {
        readOnly: true,
        serializedName: "properties.category",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      timeGenerated: {
        readOnly: true,
        serializedName: "properties.timeGenerated",
        type: {
          name: "DateTime"
        }
      },
      resourceDetails: {
        serializedName: "properties.resourceDetails",
        type: {
          name: "Composite",
          className: "ResourceDetails"
        }
      },
      additionalData: {
        serializedName: "properties.additionalData",
        type: {
          name: "Composite",
          className: "AdditionalData"
        }
      }
    }
  }
};

export const SqlServerVulnerabilityProperties: msRest.CompositeMapper = {
  serializedName: "SqlServerVulnerability",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AdditionalData.type.polymorphicDiscriminator,
    uberParent: "AdditionalData",
    className: "SqlServerVulnerabilityProperties",
    modelProperties: {
      ...AdditionalData.type.modelProperties,
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      query: {
        readOnly: true,
        serializedName: "query",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CVSS: msRest.CompositeMapper = {
  serializedName: "CVSS",
  type: {
    name: "Composite",
    className: "CVSS",
    modelProperties: {
      base: {
        readOnly: true,
        serializedName: "base",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CVE: msRest.CompositeMapper = {
  serializedName: "CVE",
  type: {
    name: "Composite",
    className: "CVE",
    modelProperties: {
      title: {
        readOnly: true,
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      link: {
        readOnly: true,
        serializedName: "link",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VendorReference: msRest.CompositeMapper = {
  serializedName: "VendorReference",
  type: {
    name: "Composite",
    className: "VendorReference",
    modelProperties: {
      title: {
        readOnly: true,
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      link: {
        readOnly: true,
        serializedName: "link",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ContainerRegistryVulnerabilityProperties: msRest.CompositeMapper = {
  serializedName: "ContainerRegistryVulnerability",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AdditionalData.type.polymorphicDiscriminator,
    uberParent: "AdditionalData",
    className: "ContainerRegistryVulnerabilityProperties",
    modelProperties: {
      ...AdditionalData.type.modelProperties,
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      cvss: {
        readOnly: true,
        serializedName: "cvss",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "CVSS"
            }
          }
        }
      },
      patchable: {
        readOnly: true,
        serializedName: "patchable",
        type: {
          name: "Boolean"
        }
      },
      cve: {
        readOnly: true,
        serializedName: "cve",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CVE"
            }
          }
        }
      },
      publishedTime: {
        readOnly: true,
        serializedName: "publishedTime",
        type: {
          name: "DateTime"
        }
      },
      vendorReferences: {
        readOnly: true,
        serializedName: "vendorReferences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VendorReference"
            }
          }
        }
      },
      repositoryName: {
        readOnly: true,
        serializedName: "repositoryName",
        type: {
          name: "String"
        }
      },
      imageDigest: {
        readOnly: true,
        serializedName: "imageDigest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerVulnerabilityProperties: msRest.CompositeMapper = {
  serializedName: "ServerVulnerabilityAssessment",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AdditionalData.type.polymorphicDiscriminator,
    uberParent: "AdditionalData",
    className: "ServerVulnerabilityProperties",
    modelProperties: {
      ...AdditionalData.type.modelProperties,
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      cvss: {
        readOnly: true,
        serializedName: "cvss",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "CVSS"
            }
          }
        }
      },
      patchable: {
        readOnly: true,
        serializedName: "patchable",
        type: {
          name: "Boolean"
        }
      },
      cve: {
        readOnly: true,
        serializedName: "cve",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CVE"
            }
          }
        }
      },
      threat: {
        readOnly: true,
        serializedName: "threat",
        type: {
          name: "String"
        }
      },
      publishedTime: {
        readOnly: true,
        serializedName: "publishedTime",
        type: {
          name: "DateTime"
        }
      },
      vendorReferences: {
        readOnly: true,
        serializedName: "vendorReferences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VendorReference"
            }
          }
        }
      }
    }
  }
};

export const OnPremiseResourceDetails: msRest.CompositeMapper = {
  serializedName: "OnPremise",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ResourceDetails.type.polymorphicDiscriminator,
    uberParent: "ResourceDetails",
    className: "OnPremiseResourceDetails",
    modelProperties: {
      ...ResourceDetails.type.modelProperties,
      workspaceId: {
        required: true,
        serializedName: "workspaceId",
        type: {
          name: "String"
        }
      },
      vmuuid: {
        required: true,
        serializedName: "vmuuid",
        type: {
          name: "String"
        }
      },
      sourceComputerId: {
        required: true,
        serializedName: "sourceComputerId",
        type: {
          name: "String"
        }
      },
      machineName: {
        required: true,
        serializedName: "machineName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OnPremiseSqlResourceDetails: msRest.CompositeMapper = {
  serializedName: "OnPremiseSql",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ResourceDetails.type.polymorphicDiscriminator,
    uberParent: "ResourceDetails",
    className: "OnPremiseSqlResourceDetails",
    modelProperties: {
      ...OnPremiseResourceDetails.type.modelProperties,
      serverName: {
        required: true,
        serializedName: "serverName",
        type: {
          name: "String"
        }
      },
      databaseName: {
        required: true,
        serializedName: "databaseName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureResourceDetails: msRest.CompositeMapper = {
  serializedName: "Azure",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ResourceDetails.type.polymorphicDiscriminator,
    uberParent: "ResourceDetails",
    className: "AzureResourceDetails",
    modelProperties: {
      ...ResourceDetails.type.modelProperties,
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AutomationScope: msRest.CompositeMapper = {
  serializedName: "AutomationScope",
  type: {
    name: "Composite",
    className: "AutomationScope",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      scopePath: {
        serializedName: "scopePath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AutomationTriggeringRule: msRest.CompositeMapper = {
  serializedName: "AutomationTriggeringRule",
  type: {
    name: "Composite",
    className: "AutomationTriggeringRule",
    modelProperties: {
      propertyJPath: {
        serializedName: "propertyJPath",
        type: {
          name: "String"
        }
      },
      propertyType: {
        serializedName: "propertyType",
        type: {
          name: "String"
        }
      },
      expectedValue: {
        serializedName: "expectedValue",
        type: {
          name: "String"
        }
      },
      operator: {
        serializedName: "operator",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AutomationRuleSet: msRest.CompositeMapper = {
  serializedName: "AutomationRuleSet",
  type: {
    name: "Composite",
    className: "AutomationRuleSet",
    modelProperties: {
      rules: {
        serializedName: "rules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AutomationTriggeringRule"
            }
          }
        }
      }
    }
  }
};

export const AutomationSource: msRest.CompositeMapper = {
  serializedName: "AutomationSource",
  type: {
    name: "Composite",
    className: "AutomationSource",
    modelProperties: {
      eventSource: {
        serializedName: "eventSource",
        type: {
          name: "String"
        }
      },
      ruleSets: {
        serializedName: "ruleSets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AutomationRuleSet"
            }
          }
        }
      }
    }
  }
};

export const AutomationAction: msRest.CompositeMapper = {
  serializedName: "AutomationAction",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "actionType",
      clientName: "actionType"
    },
    uberParent: "AutomationAction",
    className: "AutomationAction",
    modelProperties: {
      actionType: {
        required: true,
        serializedName: "actionType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Automation: msRest.CompositeMapper = {
  serializedName: "Automation",
  type: {
    name: "Composite",
    className: "Automation",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      isEnabled: {
        serializedName: "properties.isEnabled",
        type: {
          name: "Boolean"
        }
      },
      scopes: {
        serializedName: "properties.scopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AutomationScope"
            }
          }
        }
      },
      sources: {
        serializedName: "properties.sources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AutomationSource"
            }
          }
        }
      },
      actions: {
        serializedName: "properties.actions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AutomationAction"
            }
          }
        }
      }
    }
  }
};

export const AutomationActionLogicApp: msRest.CompositeMapper = {
  serializedName: "LogicApp",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AutomationAction.type.polymorphicDiscriminator,
    uberParent: "AutomationAction",
    className: "AutomationActionLogicApp",
    modelProperties: {
      ...AutomationAction.type.modelProperties,
      logicAppResourceId: {
        serializedName: "logicAppResourceId",
        type: {
          name: "String"
        }
      },
      uri: {
        serializedName: "uri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AutomationActionEventHub: msRest.CompositeMapper = {
  serializedName: "EventHub",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AutomationAction.type.polymorphicDiscriminator,
    uberParent: "AutomationAction",
    className: "AutomationActionEventHub",
    modelProperties: {
      ...AutomationAction.type.modelProperties,
      eventHubResourceId: {
        serializedName: "eventHubResourceId",
        type: {
          name: "String"
        }
      },
      sasPolicyName: {
        readOnly: true,
        serializedName: "sasPolicyName",
        type: {
          name: "String"
        }
      },
      connectionString: {
        serializedName: "connectionString",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AutomationActionWorkspace: msRest.CompositeMapper = {
  serializedName: "Workspace",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AutomationAction.type.polymorphicDiscriminator,
    uberParent: "AutomationAction",
    className: "AutomationActionWorkspace",
    modelProperties: {
      ...AutomationAction.type.modelProperties,
      workspaceResourceId: {
        serializedName: "workspaceResourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AutomationValidationStatus: msRest.CompositeMapper = {
  serializedName: "AutomationValidationStatus",
  type: {
    name: "Composite",
    className: "AutomationValidationStatus",
    modelProperties: {
      isValid: {
        serializedName: "isValid",
        type: {
          name: "Boolean"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ScopeElement: msRest.CompositeMapper = {
  serializedName: "ScopeElement",
  type: {
    name: "Composite",
    className: "ScopeElement",
    modelProperties: {
      field: {
        serializedName: "field",
        type: {
          name: "String"
        }
      }
    },
    additionalProperties: {
      type: {
        name: "Object"
      }
    }
  }
};

export const SuppressionAlertsScope: msRest.CompositeMapper = {
  serializedName: "SuppressionAlertsScope",
  type: {
    name: "Composite",
    className: "SuppressionAlertsScope",
    modelProperties: {
      allOf: {
        required: true,
        serializedName: "allOf",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ScopeElement",
              additionalProperties: {
                type: {
                  name: "Object"
                }
              }
            }
          }
        }
      }
    }
  }
};

export const AlertsSuppressionRule: msRest.CompositeMapper = {
  serializedName: "AlertsSuppressionRule",
  type: {
    name: "Composite",
    className: "AlertsSuppressionRule",
    modelProperties: {
      ...Resource.type.modelProperties,
      alertType: {
        required: true,
        serializedName: "properties.alertType",
        type: {
          name: "String"
        }
      },
      lastModifiedUtc: {
        readOnly: true,
        serializedName: "properties.lastModifiedUtc",
        type: {
          name: "DateTime"
        }
      },
      expirationDateUtc: {
        serializedName: "properties.expirationDateUtc",
        type: {
          name: "DateTime"
        }
      },
      reason: {
        required: true,
        serializedName: "properties.reason",
        type: {
          name: "String"
        }
      },
      state: {
        required: true,
        serializedName: "properties.state",
        type: {
          name: "Enum",
          allowedValues: [
            "Enabled",
            "Disabled",
            "Expired"
          ]
        }
      },
      comment: {
        serializedName: "properties.comment",
        type: {
          name: "String"
        }
      },
      suppressionAlertsScope: {
        serializedName: "properties.suppressionAlertsScope",
        type: {
          name: "Composite",
          className: "SuppressionAlertsScope"
        }
      }
    }
  }
};

export const ServerVulnerabilityAssessment: msRest.CompositeMapper = {
  serializedName: "ServerVulnerabilityAssessment",
  type: {
    name: "Composite",
    className: "ServerVulnerabilityAssessment",
    modelProperties: {
      ...Resource.type.modelProperties,
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerVulnerabilityAssessmentsList: msRest.CompositeMapper = {
  serializedName: "ServerVulnerabilityAssessmentsList",
  type: {
    name: "Composite",
    className: "ServerVulnerabilityAssessmentsList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServerVulnerabilityAssessment"
            }
          }
        }
      }
    }
  }
};

export const SecurityAssessmentMetadataPartnerData: msRest.CompositeMapper = {
  serializedName: "SecurityAssessmentMetadataPartnerData",
  type: {
    name: "Composite",
    className: "SecurityAssessmentMetadataPartnerData",
    modelProperties: {
      partnerName: {
        required: true,
        serializedName: "partnerName",
        type: {
          name: "String"
        }
      },
      productName: {
        serializedName: "productName",
        type: {
          name: "String"
        }
      },
      secret: {
        required: true,
        serializedName: "secret",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecurityAssessmentMetadataProperties: msRest.CompositeMapper = {
  serializedName: "SecurityAssessmentMetadataProperties",
  type: {
    name: "Composite",
    className: "SecurityAssessmentMetadataProperties",
    modelProperties: {
      displayName: {
        required: true,
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      policyDefinitionId: {
        readOnly: true,
        serializedName: "policyDefinitionId",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      remediationDescription: {
        serializedName: "remediationDescription",
        type: {
          name: "String"
        }
      },
      category: {
        serializedName: "category",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      severity: {
        required: true,
        serializedName: "severity",
        type: {
          name: "String"
        }
      },
      userImpact: {
        serializedName: "userImpact",
        type: {
          name: "String"
        }
      },
      implementationEffort: {
        serializedName: "implementationEffort",
        type: {
          name: "String"
        }
      },
      threats: {
        serializedName: "threats",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      preview: {
        serializedName: "preview",
        type: {
          name: "Boolean"
        }
      },
      assessmentType: {
        required: true,
        serializedName: "assessmentType",
        type: {
          name: "String"
        }
      },
      partnerData: {
        serializedName: "partnerData",
        type: {
          name: "Composite",
          className: "SecurityAssessmentMetadataPartnerData"
        }
      }
    }
  }
};

export const SecurityAssessmentMetadata: msRest.CompositeMapper = {
  serializedName: "SecurityAssessmentMetadata",
  type: {
    name: "Composite",
    className: "SecurityAssessmentMetadata",
    modelProperties: {
      ...Resource.type.modelProperties,
      displayName: {
        required: true,
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      policyDefinitionId: {
        readOnly: true,
        serializedName: "properties.policyDefinitionId",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      remediationDescription: {
        serializedName: "properties.remediationDescription",
        type: {
          name: "String"
        }
      },
      category: {
        serializedName: "properties.category",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      severity: {
        required: true,
        serializedName: "properties.severity",
        type: {
          name: "String"
        }
      },
      userImpact: {
        serializedName: "properties.userImpact",
        type: {
          name: "String"
        }
      },
      implementationEffort: {
        serializedName: "properties.implementationEffort",
        type: {
          name: "String"
        }
      },
      threats: {
        serializedName: "properties.threats",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      preview: {
        serializedName: "properties.preview",
        type: {
          name: "Boolean"
        }
      },
      assessmentType: {
        required: true,
        serializedName: "properties.assessmentType",
        type: {
          name: "String"
        }
      },
      partnerData: {
        serializedName: "properties.partnerData",
        type: {
          name: "Composite",
          className: "SecurityAssessmentMetadataPartnerData"
        }
      }
    }
  }
};

export const AssessmentStatus: msRest.CompositeMapper = {
  serializedName: "AssessmentStatus",
  type: {
    name: "Composite",
    className: "AssessmentStatus",
    modelProperties: {
      code: {
        required: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      cause: {
        serializedName: "cause",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssessmentLinks: msRest.CompositeMapper = {
  serializedName: "AssessmentLinks",
  type: {
    name: "Composite",
    className: "AssessmentLinks",
    modelProperties: {
      azurePortalUri: {
        readOnly: true,
        serializedName: "azurePortalUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecurityAssessmentPartnerData: msRest.CompositeMapper = {
  serializedName: "SecurityAssessmentPartnerData",
  type: {
    name: "Composite",
    className: "SecurityAssessmentPartnerData",
    modelProperties: {
      partnerName: {
        required: true,
        serializedName: "partnerName",
        type: {
          name: "String"
        }
      },
      secret: {
        required: true,
        serializedName: "secret",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecurityAssessment: msRest.CompositeMapper = {
  serializedName: "SecurityAssessment",
  type: {
    name: "Composite",
    className: "SecurityAssessment",
    modelProperties: {
      ...Resource.type.modelProperties,
      resourceDetails: {
        required: true,
        serializedName: "properties.resourceDetails",
        type: {
          name: "Composite",
          className: "ResourceDetails"
        }
      },
      displayName: {
        readOnly: true,
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "properties.status",
        type: {
          name: "Composite",
          className: "AssessmentStatus"
        }
      },
      additionalData: {
        serializedName: "properties.additionalData",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      links: {
        serializedName: "properties.links",
        type: {
          name: "Composite",
          className: "AssessmentLinks"
        }
      },
      metadata: {
        serializedName: "properties.metadata",
        type: {
          name: "Composite",
          className: "SecurityAssessmentMetadataProperties"
        }
      },
      partnersData: {
        serializedName: "properties.partnersData",
        type: {
          name: "Composite",
          className: "SecurityAssessmentPartnerData"
        }
      }
    }
  }
};

export const ProtectionMode: msRest.CompositeMapper = {
  serializedName: "ProtectionMode",
  type: {
    name: "Composite",
    className: "ProtectionMode",
    modelProperties: {
      exe: {
        serializedName: "exe",
        type: {
          name: "String"
        }
      },
      msi: {
        serializedName: "msi",
        type: {
          name: "String"
        }
      },
      script: {
        serializedName: "script",
        type: {
          name: "String"
        }
      },
      executable: {
        serializedName: "executable",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AdaptiveApplicationControlIssueSummary: msRest.CompositeMapper = {
  serializedName: "AdaptiveApplicationControlIssueSummary",
  type: {
    name: "Composite",
    className: "AdaptiveApplicationControlIssueSummary",
    modelProperties: {
      issue: {
        serializedName: "issue",
        type: {
          name: "String"
        }
      },
      numberOfVms: {
        serializedName: "numberOfVms",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const VmRecommendation: msRest.CompositeMapper = {
  serializedName: "VmRecommendation",
  type: {
    name: "Composite",
    className: "VmRecommendation",
    modelProperties: {
      configurationStatus: {
        serializedName: "configurationStatus",
        type: {
          name: "String"
        }
      },
      recommendationAction: {
        serializedName: "recommendationAction",
        type: {
          name: "String"
        }
      },
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      enforcementSupport: {
        serializedName: "enforcementSupport",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PublisherInfo: msRest.CompositeMapper = {
  serializedName: "PublisherInfo",
  type: {
    name: "Composite",
    className: "PublisherInfo",
    modelProperties: {
      publisherName: {
        serializedName: "publisherName",
        type: {
          name: "String"
        }
      },
      productName: {
        serializedName: "productName",
        type: {
          name: "String"
        }
      },
      binaryName: {
        serializedName: "binaryName",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserRecommendation: msRest.CompositeMapper = {
  serializedName: "UserRecommendation",
  type: {
    name: "Composite",
    className: "UserRecommendation",
    modelProperties: {
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      },
      recommendationAction: {
        serializedName: "recommendationAction",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathRecommendation: msRest.CompositeMapper = {
  serializedName: "PathRecommendation",
  type: {
    name: "Composite",
    className: "PathRecommendation",
    modelProperties: {
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      action: {
        serializedName: "action",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publisherInfo: {
        serializedName: "publisherInfo",
        type: {
          name: "Composite",
          className: "PublisherInfo"
        }
      },
      common: {
        serializedName: "common",
        type: {
          name: "Boolean"
        }
      },
      userSids: {
        serializedName: "userSids",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      usernames: {
        serializedName: "usernames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UserRecommendation"
            }
          }
        }
      },
      fileType: {
        serializedName: "fileType",
        type: {
          name: "String"
        }
      },
      configurationStatus: {
        serializedName: "configurationStatus",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AdaptiveApplicationControlGroup: msRest.CompositeMapper = {
  serializedName: "AdaptiveApplicationControlGroup",
  type: {
    name: "Composite",
    className: "AdaptiveApplicationControlGroup",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        readOnly: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      enforcementMode: {
        serializedName: "properties.enforcementMode",
        type: {
          name: "String"
        }
      },
      protectionMode: {
        serializedName: "properties.protectionMode",
        type: {
          name: "Composite",
          className: "ProtectionMode"
        }
      },
      configurationStatus: {
        readOnly: true,
        serializedName: "properties.configurationStatus",
        type: {
          name: "String"
        }
      },
      recommendationStatus: {
        readOnly: true,
        serializedName: "properties.recommendationStatus",
        type: {
          name: "String"
        }
      },
      issues: {
        readOnly: true,
        serializedName: "properties.issues",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AdaptiveApplicationControlIssueSummary"
            }
          }
        }
      },
      sourceSystem: {
        readOnly: true,
        serializedName: "properties.sourceSystem",
        type: {
          name: "String"
        }
      },
      vmRecommendations: {
        serializedName: "properties.vmRecommendations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VmRecommendation"
            }
          }
        }
      },
      pathRecommendations: {
        serializedName: "properties.pathRecommendations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PathRecommendation"
            }
          }
        }
      }
    }
  }
};

export const AdaptiveApplicationControlGroups: msRest.CompositeMapper = {
  serializedName: "AdaptiveApplicationControlGroups",
  type: {
    name: "Composite",
    className: "AdaptiveApplicationControlGroups",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AdaptiveApplicationControlGroup"
            }
          }
        }
      }
    }
  }
};

export const Location: msRest.CompositeMapper = {
  serializedName: "Location",
  type: {
    name: "Composite",
    className: "Location",
    modelProperties: {
      location: {
        readOnly: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Rule: msRest.CompositeMapper = {
  serializedName: "Rule",
  type: {
    name: "Composite",
    className: "Rule",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      direction: {
        serializedName: "direction",
        type: {
          name: "String"
        }
      },
      destinationPort: {
        serializedName: "destinationPort",
        type: {
          name: "Number"
        }
      },
      protocols: {
        serializedName: "protocols",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      ipAddresses: {
        serializedName: "ipAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const EffectiveNetworkSecurityGroups: msRest.CompositeMapper = {
  serializedName: "EffectiveNetworkSecurityGroups",
  type: {
    name: "Composite",
    className: "EffectiveNetworkSecurityGroups",
    modelProperties: {
      networkInterface: {
        serializedName: "networkInterface",
        type: {
          name: "String"
        }
      },
      networkSecurityGroups: {
        serializedName: "networkSecurityGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AdaptiveNetworkHardening: msRest.CompositeMapper = {
  serializedName: "AdaptiveNetworkHardening",
  type: {
    name: "Composite",
    className: "AdaptiveNetworkHardening",
    modelProperties: {
      ...Resource.type.modelProperties,
      rules: {
        serializedName: "properties.rules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Rule"
            }
          }
        }
      },
      rulesCalculationTime: {
        serializedName: "properties.rulesCalculationTime",
        type: {
          name: "DateTime"
        }
      },
      effectiveNetworkSecurityGroups: {
        serializedName: "properties.effectiveNetworkSecurityGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EffectiveNetworkSecurityGroups"
            }
          }
        }
      }
    }
  }
};

export const AdaptiveNetworkHardeningEnforceRequest: msRest.CompositeMapper = {
  serializedName: "AdaptiveNetworkHardeningEnforceRequest",
  type: {
    name: "Composite",
    className: "AdaptiveNetworkHardeningEnforceRequest",
    modelProperties: {
      rules: {
        required: true,
        serializedName: "rules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Rule"
            }
          }
        }
      },
      networkSecurityGroups: {
        required: true,
        serializedName: "networkSecurityGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ConnectedResource: msRest.CompositeMapper = {
  serializedName: "ConnectedResource",
  type: {
    name: "Composite",
    className: "ConnectedResource",
    modelProperties: {
      connectedResourceId: {
        readOnly: true,
        serializedName: "connectedResourceId",
        type: {
          name: "String"
        }
      },
      tcpPorts: {
        readOnly: true,
        serializedName: "tcpPorts",
        type: {
          name: "String"
        }
      },
      udpPorts: {
        readOnly: true,
        serializedName: "udpPorts",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConnectableResource: msRest.CompositeMapper = {
  serializedName: "ConnectableResource",
  type: {
    name: "Composite",
    className: "ConnectableResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      inboundConnectedResources: {
        readOnly: true,
        serializedName: "inboundConnectedResources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ConnectedResource"
            }
          }
        }
      },
      outboundConnectedResources: {
        readOnly: true,
        serializedName: "outboundConnectedResources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ConnectedResource"
            }
          }
        }
      }
    }
  }
};

export const AllowedConnectionsResource: msRest.CompositeMapper = {
  serializedName: "AllowedConnectionsResource",
  type: {
    name: "Composite",
    className: "AllowedConnectionsResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        readOnly: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      calculatedDateTime: {
        readOnly: true,
        serializedName: "properties.calculatedDateTime",
        type: {
          name: "DateTime"
        }
      },
      connectableResources: {
        readOnly: true,
        serializedName: "properties.connectableResources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ConnectableResource"
            }
          }
        }
      }
    }
  }
};

export const TopologySingleResourceParent: msRest.CompositeMapper = {
  serializedName: "TopologySingleResourceParent",
  type: {
    name: "Composite",
    className: "TopologySingleResourceParent",
    modelProperties: {
      resourceId: {
        readOnly: true,
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TopologySingleResourceChild: msRest.CompositeMapper = {
  serializedName: "TopologySingleResourceChild",
  type: {
    name: "Composite",
    className: "TopologySingleResourceChild",
    modelProperties: {
      resourceId: {
        readOnly: true,
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TopologySingleResource: msRest.CompositeMapper = {
  serializedName: "TopologySingleResource",
  type: {
    name: "Composite",
    className: "TopologySingleResource",
    modelProperties: {
      resourceId: {
        readOnly: true,
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      severity: {
        readOnly: true,
        serializedName: "severity",
        type: {
          name: "String"
        }
      },
      recommendationsExist: {
        readOnly: true,
        serializedName: "recommendationsExist",
        type: {
          name: "Boolean"
        }
      },
      networkZones: {
        readOnly: true,
        serializedName: "networkZones",
        type: {
          name: "String"
        }
      },
      topologyScore: {
        readOnly: true,
        serializedName: "topologyScore",
        type: {
          name: "Number"
        }
      },
      location: {
        readOnly: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      parents: {
        readOnly: true,
        serializedName: "parents",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TopologySingleResourceParent"
            }
          }
        }
      },
      children: {
        readOnly: true,
        serializedName: "children",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TopologySingleResourceChild"
            }
          }
        }
      }
    }
  }
};

export const TopologyResource: msRest.CompositeMapper = {
  serializedName: "TopologyResource",
  type: {
    name: "Composite",
    className: "TopologyResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        readOnly: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      calculatedDateTime: {
        readOnly: true,
        serializedName: "properties.calculatedDateTime",
        type: {
          name: "DateTime"
        }
      },
      topologyResources: {
        readOnly: true,
        serializedName: "properties.topologyResources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TopologySingleResource"
            }
          }
        }
      }
    }
  }
};

export const ResourceIdentifier: msRest.CompositeMapper = {
  serializedName: "ResourceIdentifier",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    uberParent: "ResourceIdentifier",
    className: "ResourceIdentifier",
    modelProperties: {
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertEntity: msRest.CompositeMapper = {
  serializedName: "AlertEntity",
  type: {
    name: "Composite",
    className: "AlertEntity",
    modelProperties: {
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    },
    additionalProperties: {
      type: {
        name: "Object"
      }
    }
  }
};

export const Alert: msRest.CompositeMapper = {
  serializedName: "Alert",
  type: {
    name: "Composite",
    className: "Alert",
    modelProperties: {
      ...Resource.type.modelProperties,
      alertType: {
        readOnly: true,
        serializedName: "properties.alertType",
        type: {
          name: "String"
        }
      },
      systemAlertId: {
        readOnly: true,
        serializedName: "properties.systemAlertId",
        type: {
          name: "String"
        }
      },
      productComponentName: {
        readOnly: true,
        serializedName: "properties.productComponentName",
        type: {
          name: "String"
        }
      },
      alertDisplayName: {
        readOnly: true,
        serializedName: "properties.alertDisplayName",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      severity: {
        readOnly: true,
        serializedName: "properties.severity",
        type: {
          name: "String"
        }
      },
      intent: {
        readOnly: true,
        serializedName: "properties.intent",
        type: {
          name: "String"
        }
      },
      startTimeUtc: {
        readOnly: true,
        serializedName: "properties.startTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      endTimeUtc: {
        readOnly: true,
        serializedName: "properties.endTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      resourceIdentifiers: {
        readOnly: true,
        serializedName: "properties.resourceIdentifiers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResourceIdentifier"
            }
          }
        }
      },
      remediationSteps: {
        readOnly: true,
        serializedName: "properties.remediationSteps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      vendorName: {
        readOnly: true,
        serializedName: "properties.vendorName",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      extendedLinks: {
        readOnly: true,
        serializedName: "properties.extendedLinks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Dictionary",
              value: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      },
      alertUri: {
        readOnly: true,
        serializedName: "properties.alertUri",
        type: {
          name: "String"
        }
      },
      timeGeneratedUtc: {
        readOnly: true,
        serializedName: "properties.timeGeneratedUtc",
        type: {
          name: "DateTime"
        }
      },
      productName: {
        readOnly: true,
        serializedName: "properties.productName",
        type: {
          name: "String"
        }
      },
      processingEndTimeUtc: {
        readOnly: true,
        serializedName: "properties.processingEndTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      entities: {
        readOnly: true,
        serializedName: "properties.entities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AlertEntity",
              additionalProperties: {
                type: {
                  name: "Object"
                }
              }
            }
          }
        }
      },
      isIncident: {
        readOnly: true,
        serializedName: "properties.isIncident",
        type: {
          name: "Boolean"
        }
      },
      correlationKey: {
        readOnly: true,
        serializedName: "properties.correlationKey",
        type: {
          name: "String"
        }
      },
      extendedProperties: {
        serializedName: "properties.extendedProperties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      compromisedEntity: {
        readOnly: true,
        serializedName: "properties.compromisedEntity",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureResourceIdentifier: msRest.CompositeMapper = {
  serializedName: "AzureResource",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ResourceIdentifier.type.polymorphicDiscriminator,
    uberParent: "ResourceIdentifier",
    className: "AzureResourceIdentifier",
    modelProperties: {
      ...ResourceIdentifier.type.modelProperties,
      azureResourceId: {
        readOnly: true,
        serializedName: "azureResourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogAnalyticsIdentifier: msRest.CompositeMapper = {
  serializedName: "LogAnalytics",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ResourceIdentifier.type.polymorphicDiscriminator,
    uberParent: "ResourceIdentifier",
    className: "LogAnalyticsIdentifier",
    modelProperties: {
      ...ResourceIdentifier.type.modelProperties,
      workspaceId: {
        readOnly: true,
        serializedName: "workspaceId",
        type: {
          name: "String"
        }
      },
      workspaceSubscriptionId: {
        readOnly: true,
        serializedName: "workspaceSubscriptionId",
        constraints: {
          Pattern: /^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$/
        },
        type: {
          name: "String"
        }
      },
      workspaceResourceGroup: {
        readOnly: true,
        serializedName: "workspaceResourceGroup",
        type: {
          name: "String"
        }
      },
      agentId: {
        readOnly: true,
        serializedName: "agentId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JitNetworkAccessPortRule: msRest.CompositeMapper = {
  serializedName: "JitNetworkAccessPortRule",
  type: {
    name: "Composite",
    className: "JitNetworkAccessPortRule",
    modelProperties: {
      number: {
        required: true,
        serializedName: "number",
        type: {
          name: "Number"
        }
      },
      protocol: {
        required: true,
        serializedName: "protocol",
        type: {
          name: "String"
        }
      },
      allowedSourceAddressPrefix: {
        serializedName: "allowedSourceAddressPrefix",
        type: {
          name: "String"
        }
      },
      allowedSourceAddressPrefixes: {
        serializedName: "allowedSourceAddressPrefixes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      maxRequestAccessDuration: {
        required: true,
        serializedName: "maxRequestAccessDuration",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JitNetworkAccessPolicyVirtualMachine: msRest.CompositeMapper = {
  serializedName: "JitNetworkAccessPolicyVirtualMachine",
  type: {
    name: "Composite",
    className: "JitNetworkAccessPolicyVirtualMachine",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      ports: {
        required: true,
        serializedName: "ports",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JitNetworkAccessPortRule"
            }
          }
        }
      },
      publicIpAddress: {
        serializedName: "publicIpAddress",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JitNetworkAccessRequestPort: msRest.CompositeMapper = {
  serializedName: "JitNetworkAccessRequestPort",
  type: {
    name: "Composite",
    className: "JitNetworkAccessRequestPort",
    modelProperties: {
      number: {
        required: true,
        serializedName: "number",
        type: {
          name: "Number"
        }
      },
      allowedSourceAddressPrefix: {
        serializedName: "allowedSourceAddressPrefix",
        type: {
          name: "String"
        }
      },
      allowedSourceAddressPrefixes: {
        serializedName: "allowedSourceAddressPrefixes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      endTimeUtc: {
        required: true,
        serializedName: "endTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      statusReason: {
        required: true,
        serializedName: "statusReason",
        type: {
          name: "String"
        }
      },
      mappedPort: {
        serializedName: "mappedPort",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const JitNetworkAccessRequestVirtualMachine: msRest.CompositeMapper = {
  serializedName: "JitNetworkAccessRequestVirtualMachine",
  type: {
    name: "Composite",
    className: "JitNetworkAccessRequestVirtualMachine",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      ports: {
        required: true,
        serializedName: "ports",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JitNetworkAccessRequestPort"
            }
          }
        }
      }
    }
  }
};

export const JitNetworkAccessRequest: msRest.CompositeMapper = {
  serializedName: "JitNetworkAccessRequest",
  type: {
    name: "Composite",
    className: "JitNetworkAccessRequest",
    modelProperties: {
      virtualMachines: {
        required: true,
        serializedName: "virtualMachines",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JitNetworkAccessRequestVirtualMachine"
            }
          }
        }
      },
      startTimeUtc: {
        required: true,
        serializedName: "startTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      requestor: {
        required: true,
        serializedName: "requestor",
        type: {
          name: "String"
        }
      },
      justification: {
        serializedName: "justification",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JitNetworkAccessPolicy: msRest.CompositeMapper = {
  serializedName: "JitNetworkAccessPolicy",
  type: {
    name: "Composite",
    className: "JitNetworkAccessPolicy",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      location: {
        readOnly: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      virtualMachines: {
        required: true,
        serializedName: "properties.virtualMachines",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JitNetworkAccessPolicyVirtualMachine"
            }
          }
        }
      },
      requests: {
        serializedName: "properties.requests",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JitNetworkAccessRequest"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JitNetworkAccessPolicyInitiatePort: msRest.CompositeMapper = {
  serializedName: "JitNetworkAccessPolicyInitiatePort",
  type: {
    name: "Composite",
    className: "JitNetworkAccessPolicyInitiatePort",
    modelProperties: {
      number: {
        required: true,
        serializedName: "number",
        type: {
          name: "Number"
        }
      },
      allowedSourceAddressPrefix: {
        serializedName: "allowedSourceAddressPrefix",
        type: {
          name: "String"
        }
      },
      endTimeUtc: {
        required: true,
        serializedName: "endTimeUtc",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const JitNetworkAccessPolicyInitiateVirtualMachine: msRest.CompositeMapper = {
  serializedName: "JitNetworkAccessPolicyInitiateVirtualMachine",
  type: {
    name: "Composite",
    className: "JitNetworkAccessPolicyInitiateVirtualMachine",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      ports: {
        required: true,
        serializedName: "ports",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JitNetworkAccessPolicyInitiatePort"
            }
          }
        }
      }
    }
  }
};

export const JitNetworkAccessPolicyInitiateRequest: msRest.CompositeMapper = {
  serializedName: "JitNetworkAccessPolicyInitiateRequest",
  type: {
    name: "Composite",
    className: "JitNetworkAccessPolicyInitiateRequest",
    modelProperties: {
      virtualMachines: {
        required: true,
        serializedName: "virtualMachines",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JitNetworkAccessPolicyInitiateVirtualMachine"
            }
          }
        }
      },
      justification: {
        serializedName: "justification",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiscoveredSecuritySolution: msRest.CompositeMapper = {
  serializedName: "DiscoveredSecuritySolution",
  type: {
    name: "Composite",
    className: "DiscoveredSecuritySolution",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        readOnly: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      securityFamily: {
        required: true,
        serializedName: "properties.securityFamily",
        type: {
          name: "String"
        }
      },
      offer: {
        required: true,
        serializedName: "properties.offer",
        type: {
          name: "String"
        }
      },
      publisher: {
        required: true,
        serializedName: "properties.publisher",
        type: {
          name: "String"
        }
      },
      sku: {
        required: true,
        serializedName: "properties.sku",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecuritySolutionsReferenceData: msRest.CompositeMapper = {
  serializedName: "securitySolutionsReferenceData",
  type: {
    name: "Composite",
    className: "SecuritySolutionsReferenceData",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        readOnly: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      securityFamily: {
        required: true,
        serializedName: "properties.securityFamily",
        type: {
          name: "String"
        }
      },
      alertVendorName: {
        required: true,
        serializedName: "properties.alertVendorName",
        type: {
          name: "String"
        }
      },
      packageInfoUrl: {
        required: true,
        serializedName: "properties.packageInfoUrl",
        type: {
          name: "String"
        }
      },
      productName: {
        required: true,
        serializedName: "properties.productName",
        type: {
          name: "String"
        }
      },
      publisher: {
        required: true,
        serializedName: "properties.publisher",
        type: {
          name: "String"
        }
      },
      publisherDisplayName: {
        required: true,
        serializedName: "properties.publisherDisplayName",
        type: {
          name: "String"
        }
      },
      template: {
        required: true,
        serializedName: "properties.template",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecuritySolutionsReferenceDataList: msRest.CompositeMapper = {
  serializedName: "securitySolutionsReferenceDataList",
  type: {
    name: "Composite",
    className: "SecuritySolutionsReferenceDataList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SecuritySolutionsReferenceData"
            }
          }
        }
      }
    }
  }
};

export const ExternalSecuritySolution: msRest.CompositeMapper = {
  serializedName: "ExternalSecuritySolution",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "kind",
      clientName: "kind"
    },
    uberParent: "ExternalSecuritySolution",
    className: "ExternalSecuritySolution",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        readOnly: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExternalSecuritySolutionProperties: msRest.CompositeMapper = {
  serializedName: "ExternalSecuritySolutionProperties",
  type: {
    name: "Composite",
    className: "ExternalSecuritySolutionProperties",
    modelProperties: {
      deviceVendor: {
        serializedName: "deviceVendor",
        type: {
          name: "String"
        }
      },
      deviceType: {
        serializedName: "deviceType",
        type: {
          name: "String"
        }
      },
      workspace: {
        serializedName: "workspace",
        type: {
          name: "Composite",
          className: "ConnectedWorkspace"
        }
      }
    },
    additionalProperties: {
      type: {
        name: "Object"
      }
    }
  }
};

export const CefSolutionProperties: msRest.CompositeMapper = {
  serializedName: "CefSolutionProperties",
  type: {
    name: "Composite",
    className: "CefSolutionProperties",
    modelProperties: {
      ...ExternalSecuritySolutionProperties.type.modelProperties,
      hostname: {
        serializedName: "hostname",
        type: {
          name: "String"
        }
      },
      agent: {
        serializedName: "agent",
        type: {
          name: "String"
        }
      },
      lastEventReceived: {
        serializedName: "lastEventReceived",
        type: {
          name: "String"
        }
      }
    },
    additionalProperties: ExternalSecuritySolutionProperties.type.additionalProperties
  }
};

export const CefExternalSecuritySolution: msRest.CompositeMapper = {
  serializedName: "CEF",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ExternalSecuritySolution.type.polymorphicDiscriminator,
    uberParent: "ExternalSecuritySolution",
    className: "CefExternalSecuritySolution",
    modelProperties: {
      ...ExternalSecuritySolution.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "CefSolutionProperties",
          additionalProperties: ExternalSecuritySolutionProperties.type.additionalProperties
        }
      }
    }
  }
};

export const AtaSolutionProperties: msRest.CompositeMapper = {
  serializedName: "AtaSolutionProperties",
  type: {
    name: "Composite",
    className: "AtaSolutionProperties",
    modelProperties: {
      ...ExternalSecuritySolutionProperties.type.modelProperties,
      lastEventReceived: {
        serializedName: "lastEventReceived",
        type: {
          name: "String"
        }
      }
    },
    additionalProperties: ExternalSecuritySolutionProperties.type.additionalProperties
  }
};

export const AtaExternalSecuritySolution: msRest.CompositeMapper = {
  serializedName: "ATA",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ExternalSecuritySolution.type.polymorphicDiscriminator,
    uberParent: "ExternalSecuritySolution",
    className: "AtaExternalSecuritySolution",
    modelProperties: {
      ...ExternalSecuritySolution.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "AtaSolutionProperties",
          additionalProperties: ExternalSecuritySolutionProperties.type.additionalProperties
        }
      }
    }
  }
};

export const ConnectedWorkspace: msRest.CompositeMapper = {
  serializedName: "ConnectedWorkspace",
  type: {
    name: "Composite",
    className: "ConnectedWorkspace",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AadSolutionProperties: msRest.CompositeMapper = {
  serializedName: "AadSolutionProperties",
  type: {
    name: "Composite",
    className: "AadSolutionProperties",
    modelProperties: {
      deviceVendor: {
        serializedName: "deviceVendor",
        type: {
          name: "String"
        }
      },
      deviceType: {
        serializedName: "deviceType",
        type: {
          name: "String"
        }
      },
      workspace: {
        serializedName: "workspace",
        type: {
          name: "Composite",
          className: "ConnectedWorkspace"
        }
      },
      connectivityState: {
        serializedName: "connectivityState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AadExternalSecuritySolution: msRest.CompositeMapper = {
  serializedName: "AAD",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ExternalSecuritySolution.type.polymorphicDiscriminator,
    uberParent: "ExternalSecuritySolution",
    className: "AadExternalSecuritySolution",
    modelProperties: {
      ...ExternalSecuritySolution.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "AadSolutionProperties"
        }
      }
    }
  }
};

export const ExternalSecuritySolutionKind1: msRest.CompositeMapper = {
  serializedName: "ExternalSecuritySolutionKind",
  type: {
    name: "Composite",
    className: "ExternalSecuritySolutionKind1",
    modelProperties: {
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AadConnectivityState1: msRest.CompositeMapper = {
  serializedName: "AadConnectivityState",
  type: {
    name: "Composite",
    className: "AadConnectivityState1",
    modelProperties: {
      connectivityState: {
        serializedName: "connectivityState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecureScoreItem: msRest.CompositeMapper = {
  serializedName: "SecureScoreItem",
  type: {
    name: "Composite",
    className: "SecureScoreItem",
    modelProperties: {
      ...Resource.type.modelProperties,
      displayName: {
        readOnly: true,
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      max: {
        readOnly: true,
        serializedName: "properties.score.max",
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      current: {
        readOnly: true,
        serializedName: "properties.score.current",
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      percentage: {
        readOnly: true,
        serializedName: "properties.score.percentage",
        constraints: {
          InclusiveMaximum: 1,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      weight: {
        readOnly: true,
        serializedName: "properties.weight",
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const SecureScoreControlScore: msRest.CompositeMapper = {
  serializedName: "SecureScoreControlScore",
  type: {
    name: "Composite",
    className: "SecureScoreControlScore",
    modelProperties: {
      max: {
        readOnly: true,
        serializedName: "max",
        constraints: {
          InclusiveMaximum: 10,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      current: {
        readOnly: true,
        serializedName: "current",
        constraints: {
          InclusiveMaximum: 10,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      percentage: {
        readOnly: true,
        serializedName: "percentage",
        constraints: {
          InclusiveMaximum: 1,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const SecureScoreControlDefinitionSource: msRest.CompositeMapper = {
  serializedName: "SecureScoreControlDefinitionSource",
  type: {
    name: "Composite",
    className: "SecureScoreControlDefinitionSource",
    modelProperties: {
      sourceType: {
        serializedName: "sourceType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureResourceLink: msRest.CompositeMapper = {
  serializedName: "AzureResourceLink",
  type: {
    name: "Composite",
    className: "AzureResourceLink",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecureScoreControlDefinitionItem: msRest.CompositeMapper = {
  serializedName: "SecureScoreControlDefinitionItem",
  type: {
    name: "Composite",
    className: "SecureScoreControlDefinitionItem",
    modelProperties: {
      ...Resource.type.modelProperties,
      displayName: {
        readOnly: true,
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "properties.description",
        constraints: {
          MaxLength: 256
        },
        type: {
          name: "String"
        }
      },
      maxScore: {
        readOnly: true,
        serializedName: "properties.maxScore",
        constraints: {
          InclusiveMaximum: 10,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      source: {
        readOnly: true,
        serializedName: "properties.source",
        type: {
          name: "Composite",
          className: "SecureScoreControlDefinitionSource"
        }
      },
      assessmentDefinitions: {
        readOnly: true,
        serializedName: "properties.assessmentDefinitions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureResourceLink"
            }
          }
        }
      }
    }
  }
};

export const SecureScoreControlDetails: msRest.CompositeMapper = {
  serializedName: "SecureScoreControlDetails",
  type: {
    name: "Composite",
    className: "SecureScoreControlDetails",
    modelProperties: {
      ...Resource.type.modelProperties,
      displayName: {
        readOnly: true,
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      max: {
        readOnly: true,
        serializedName: "properties.score.max",
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      current: {
        readOnly: true,
        serializedName: "properties.score.current",
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      percentage: {
        readOnly: true,
        serializedName: "properties.score.percentage",
        constraints: {
          InclusiveMaximum: 1,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      healthyResourceCount: {
        readOnly: true,
        serializedName: "properties.healthyResourceCount",
        type: {
          name: "Number"
        }
      },
      unhealthyResourceCount: {
        readOnly: true,
        serializedName: "properties.unhealthyResourceCount",
        type: {
          name: "Number"
        }
      },
      notApplicableResourceCount: {
        readOnly: true,
        serializedName: "properties.notApplicableResourceCount",
        type: {
          name: "Number"
        }
      },
      weight: {
        readOnly: true,
        serializedName: "properties.weight",
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      definition: {
        serializedName: "properties.definition",
        type: {
          name: "Composite",
          className: "SecureScoreControlDefinitionItem"
        }
      }
    }
  }
};

export const SecuritySolution: msRest.CompositeMapper = {
  serializedName: "SecuritySolution",
  type: {
    name: "Composite",
    className: "SecuritySolution",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        readOnly: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      securityFamily: {
        required: true,
        serializedName: "properties.securityFamily",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        required: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      template: {
        required: true,
        serializedName: "properties.template",
        type: {
          name: "String"
        }
      },
      protectionStatus: {
        required: true,
        serializedName: "properties.protectionStatus",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyServerProperties: msRest.CompositeMapper = {
  serializedName: "ProxyServerProperties",
  type: {
    name: "Composite",
    className: "ProxyServerProperties",
    modelProperties: {
      ip: {
        serializedName: "ip",
        type: {
          name: "String"
        }
      },
      port: {
        serializedName: "port",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServicePrincipalProperties: msRest.CompositeMapper = {
  serializedName: "ServicePrincipalProperties",
  type: {
    name: "Composite",
    className: "ServicePrincipalProperties",
    modelProperties: {
      applicationId: {
        serializedName: "applicationId",
        type: {
          name: "String"
        }
      },
      secret: {
        serializedName: "secret",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HybridComputeSettingsProperties: msRest.CompositeMapper = {
  serializedName: "HybridComputeSettingsProperties",
  type: {
    name: "Composite",
    className: "HybridComputeSettingsProperties",
    modelProperties: {
      hybridComputeProvisioningState: {
        readOnly: true,
        serializedName: "hybridComputeProvisioningState",
        type: {
          name: "String"
        }
      },
      autoProvision: {
        required: true,
        serializedName: "autoProvision",
        type: {
          name: "String"
        }
      },
      resourceGroupName: {
        serializedName: "resourceGroupName",
        type: {
          name: "String"
        }
      },
      region: {
        serializedName: "region",
        type: {
          name: "String"
        }
      },
      proxyServer: {
        serializedName: "proxyServer",
        type: {
          name: "Composite",
          className: "ProxyServerProperties"
        }
      },
      servicePrincipal: {
        serializedName: "servicePrincipal",
        type: {
          name: "Composite",
          className: "ServicePrincipalProperties"
        }
      }
    }
  }
};

export const AuthenticationDetailsProperties: msRest.CompositeMapper = {
  serializedName: "AuthenticationDetailsProperties",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "authenticationType",
      clientName: "authenticationType"
    },
    uberParent: "AuthenticationDetailsProperties",
    className: "AuthenticationDetailsProperties",
    modelProperties: {
      authenticationProvisioningState: {
        readOnly: true,
        serializedName: "authenticationProvisioningState",
        type: {
          name: "String"
        }
      },
      grantedPermissions: {
        readOnly: true,
        serializedName: "grantedPermissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      authenticationType: {
        required: true,
        serializedName: "authenticationType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConnectorSetting: msRest.CompositeMapper = {
  serializedName: "ConnectorSetting",
  type: {
    name: "Composite",
    className: "ConnectorSetting",
    modelProperties: {
      ...Resource.type.modelProperties,
      hybridComputeSettings: {
        serializedName: "properties.hybridComputeSettings",
        type: {
          name: "Composite",
          className: "HybridComputeSettingsProperties"
        }
      },
      authenticationDetails: {
        serializedName: "properties.authenticationDetails",
        type: {
          name: "Composite",
          className: "AuthenticationDetailsProperties"
        }
      }
    }
  }
};

export const AwsCredsAuthenticationDetailsProperties: msRest.CompositeMapper = {
  serializedName: "awsCreds",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AuthenticationDetailsProperties.type.polymorphicDiscriminator,
    uberParent: "AuthenticationDetailsProperties",
    className: "AwsCredsAuthenticationDetailsProperties",
    modelProperties: {
      ...AuthenticationDetailsProperties.type.modelProperties,
      accountId: {
        readOnly: true,
        serializedName: "accountId",
        type: {
          name: "String"
        }
      },
      awsAccessKeyId: {
        required: true,
        serializedName: "awsAccessKeyId",
        type: {
          name: "String"
        }
      },
      awsSecretAccessKey: {
        required: true,
        serializedName: "awsSecretAccessKey",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AwAssumeRoleAuthenticationDetailsProperties: msRest.CompositeMapper = {
  serializedName: "awsAssumeRole",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AuthenticationDetailsProperties.type.polymorphicDiscriminator,
    uberParent: "AuthenticationDetailsProperties",
    className: "AwAssumeRoleAuthenticationDetailsProperties",
    modelProperties: {
      ...AuthenticationDetailsProperties.type.modelProperties,
      accountId: {
        readOnly: true,
        serializedName: "accountId",
        type: {
          name: "String"
        }
      },
      awsAssumeRoleArn: {
        required: true,
        serializedName: "awsAssumeRoleArn",
        type: {
          name: "String"
        }
      },
      awsExternalId: {
        required: true,
        serializedName: "awsExternalId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GcpCredentialsDetailsProperties: msRest.CompositeMapper = {
  serializedName: "gcpCredentials",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AuthenticationDetailsProperties.type.polymorphicDiscriminator,
    uberParent: "AuthenticationDetailsProperties",
    className: "GcpCredentialsDetailsProperties",
    modelProperties: {
      ...AuthenticationDetailsProperties.type.modelProperties,
      organizationId: {
        required: true,
        serializedName: "organizationId",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      projectId: {
        required: true,
        serializedName: "projectId",
        type: {
          name: "String"
        }
      },
      privateKeyId: {
        required: true,
        serializedName: "privateKeyId",
        type: {
          name: "String"
        }
      },
      privateKey: {
        required: true,
        serializedName: "privateKey",
        type: {
          name: "String"
        }
      },
      clientEmail: {
        required: true,
        serializedName: "clientEmail",
        type: {
          name: "String"
        }
      },
      clientId: {
        required: true,
        serializedName: "clientId",
        type: {
          name: "String"
        }
      },
      authUri: {
        required: true,
        serializedName: "authUri",
        type: {
          name: "String"
        }
      },
      tokenUri: {
        required: true,
        serializedName: "tokenUri",
        type: {
          name: "String"
        }
      },
      authProviderX509CertUrl: {
        required: true,
        serializedName: "authProviderX509CertUrl",
        type: {
          name: "String"
        }
      },
      clientX509CertUrl: {
        required: true,
        serializedName: "clientX509CertUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ScanProperties: msRest.CompositeMapper = {
  serializedName: "ScanProperties",
  type: {
    name: "Composite",
    className: "ScanProperties",
    modelProperties: {
      triggerType: {
        serializedName: "triggerType",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      server: {
        serializedName: "server",
        type: {
          name: "String"
        }
      },
      database: {
        serializedName: "database",
        type: {
          name: "String"
        }
      },
      sqlVersion: {
        serializedName: "sqlVersion",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      highSeverityFailedRulesCount: {
        serializedName: "highSeverityFailedRulesCount",
        type: {
          name: "Number"
        }
      },
      mediumSeverityFailedRulesCount: {
        serializedName: "mediumSeverityFailedRulesCount",
        type: {
          name: "Number"
        }
      },
      lowSeverityFailedRulesCount: {
        serializedName: "lowSeverityFailedRulesCount",
        type: {
          name: "Number"
        }
      },
      totalPassedRulesCount: {
        serializedName: "totalPassedRulesCount",
        type: {
          name: "Number"
        }
      },
      totalFailedRulesCount: {
        serializedName: "totalFailedRulesCount",
        type: {
          name: "Number"
        }
      },
      totalRulesCount: {
        serializedName: "totalRulesCount",
        type: {
          name: "Number"
        }
      },
      isBaselineApplied: {
        serializedName: "isBaselineApplied",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Scan: msRest.CompositeMapper = {
  serializedName: "Scan",
  type: {
    name: "Composite",
    className: "Scan",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ScanProperties"
        }
      }
    }
  }
};

export const Scans: msRest.CompositeMapper = {
  serializedName: "Scans",
  type: {
    name: "Composite",
    className: "Scans",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Scan"
            }
          }
        }
      }
    }
  }
};

export const Remediation: msRest.CompositeMapper = {
  serializedName: "Remediation",
  type: {
    name: "Composite",
    className: "Remediation",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      scripts: {
        serializedName: "scripts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      automated: {
        serializedName: "automated",
        type: {
          name: "Boolean"
        }
      },
      portalLink: {
        serializedName: "portalLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Baseline: msRest.CompositeMapper = {
  serializedName: "Baseline",
  type: {
    name: "Composite",
    className: "Baseline",
    modelProperties: {
      expectedResults: {
        serializedName: "expectedResults",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      },
      updatedTime: {
        serializedName: "updatedTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const BaselineAdjustedResult: msRest.CompositeMapper = {
  serializedName: "BaselineAdjustedResult",
  type: {
    name: "Composite",
    className: "BaselineAdjustedResult",
    modelProperties: {
      baseline: {
        serializedName: "baseline",
        type: {
          name: "Composite",
          className: "Baseline"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      resultsNotInBaseline: {
        serializedName: "resultsNotInBaseline",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      },
      resultsOnlyInBaseline: {
        serializedName: "resultsOnlyInBaseline",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      }
    }
  }
};

export const QueryCheck: msRest.CompositeMapper = {
  serializedName: "QueryCheck",
  type: {
    name: "Composite",
    className: "QueryCheck",
    modelProperties: {
      query: {
        serializedName: "query",
        type: {
          name: "String"
        }
      },
      expectedResult: {
        serializedName: "expectedResult",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      },
      columnNames: {
        serializedName: "columnNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const BenchmarkReference: msRest.CompositeMapper = {
  serializedName: "BenchmarkReference",
  type: {
    name: "Composite",
    className: "BenchmarkReference",
    modelProperties: {
      benchmark: {
        serializedName: "benchmark",
        type: {
          name: "String"
        }
      },
      reference: {
        serializedName: "reference",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VaRule: msRest.CompositeMapper = {
  serializedName: "VaRule",
  type: {
    name: "Composite",
    className: "VaRule",
    modelProperties: {
      ruleId: {
        serializedName: "ruleId",
        type: {
          name: "String"
        }
      },
      severity: {
        serializedName: "severity",
        type: {
          name: "String"
        }
      },
      category: {
        serializedName: "category",
        type: {
          name: "String"
        }
      },
      ruleType: {
        serializedName: "ruleType",
        type: {
          name: "String"
        }
      },
      title: {
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      rationale: {
        serializedName: "rationale",
        type: {
          name: "String"
        }
      },
      queryCheck: {
        serializedName: "queryCheck",
        type: {
          name: "Composite",
          className: "QueryCheck"
        }
      },
      benchmarkReferences: {
        serializedName: "benchmarkReferences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BenchmarkReference"
            }
          }
        }
      }
    }
  }
};

export const ScanResultProperties: msRest.CompositeMapper = {
  serializedName: "ScanResultProperties",
  type: {
    name: "Composite",
    className: "ScanResultProperties",
    modelProperties: {
      ruleId: {
        serializedName: "ruleId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      isTrimmed: {
        serializedName: "isTrimmed",
        type: {
          name: "Boolean"
        }
      },
      queryResults: {
        serializedName: "queryResults",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      },
      remediation: {
        serializedName: "remediation",
        type: {
          name: "Composite",
          className: "Remediation"
        }
      },
      baselineAdjustedResult: {
        serializedName: "baselineAdjustedResult",
        type: {
          name: "Composite",
          className: "BaselineAdjustedResult"
        }
      },
      ruleMetadata: {
        serializedName: "ruleMetadata",
        type: {
          name: "Composite",
          className: "VaRule"
        }
      }
    }
  }
};

export const ScanResult: msRest.CompositeMapper = {
  serializedName: "ScanResult",
  type: {
    name: "Composite",
    className: "ScanResult",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ScanResultProperties"
        }
      }
    }
  }
};

export const ScanResults: msRest.CompositeMapper = {
  serializedName: "ScanResults",
  type: {
    name: "Composite",
    className: "ScanResults",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ScanResult"
            }
          }
        }
      }
    }
  }
};

export const RuleResultsInput: msRest.CompositeMapper = {
  serializedName: "RuleResultsInput",
  type: {
    name: "Composite",
    className: "RuleResultsInput",
    modelProperties: {
      latestScan: {
        serializedName: "latestScan",
        type: {
          name: "Boolean"
        }
      },
      results: {
        serializedName: "results",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      }
    }
  }
};

export const RuleResultsProperties: msRest.CompositeMapper = {
  serializedName: "RuleResultsProperties",
  type: {
    name: "Composite",
    className: "RuleResultsProperties",
    modelProperties: {
      results: {
        serializedName: "results",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      }
    }
  }
};

export const RuleResults: msRest.CompositeMapper = {
  serializedName: "RuleResults",
  type: {
    name: "Composite",
    className: "RuleResults",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "RuleResultsProperties"
        }
      }
    }
  }
};

export const RulesResults: msRest.CompositeMapper = {
  serializedName: "RulesResults",
  type: {
    name: "Composite",
    className: "RulesResults",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RuleResults"
            }
          }
        }
      }
    }
  }
};

export const RulesResultsInput: msRest.CompositeMapper = {
  serializedName: "RulesResultsInput",
  type: {
    name: "Composite",
    className: "RulesResultsInput",
    modelProperties: {
      latestScan: {
        serializedName: "latestScan",
        type: {
          name: "Boolean"
        }
      },
      results: {
        serializedName: "results",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "Sequence",
                  element: {
                    type: {
                      name: "String"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};

export const IotDefenderSettingsModel: msRest.CompositeMapper = {
  serializedName: "IotDefenderSettingsModel",
  type: {
    name: "Composite",
    className: "IotDefenderSettingsModel",
    modelProperties: {
      ...Resource.type.modelProperties,
      deviceQuota: {
        required: true,
        serializedName: "properties.deviceQuota",
        constraints: {
          InclusiveMinimum: 1000
        },
        type: {
          name: "Number"
        }
      },
      sentinelWorkspaceResourceIds: {
        required: true,
        serializedName: "properties.sentinelWorkspaceResourceIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const IotDefenderSettingsList: msRest.CompositeMapper = {
  serializedName: "IotDefenderSettingsList",
  type: {
    name: "Composite",
    className: "IotDefenderSettingsList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IotDefenderSettingsModel"
            }
          }
        }
      }
    }
  }
};

export const PackageDownloadInfo: msRest.CompositeMapper = {
  serializedName: "PackageDownloadInfo",
  type: {
    name: "Composite",
    className: "PackageDownloadInfo",
    modelProperties: {
      version: {
        readOnly: true,
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      link: {
        serializedName: "link",
        type: {
          name: "String"
        }
      },
      versionKind: {
        readOnly: true,
        serializedName: "versionKind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PackageDownloadsSensorFullOvf: msRest.CompositeMapper = {
  serializedName: "PackageDownloads_sensor_full_ovf",
  type: {
    name: "Composite",
    className: "PackageDownloadsSensorFullOvf",
    modelProperties: {
      enterprise: {
        readOnly: true,
        serializedName: "enterprise",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PackageDownloadInfo"
            }
          }
        }
      },
      medium: {
        readOnly: true,
        serializedName: "medium",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PackageDownloadInfo"
            }
          }
        }
      },
      line: {
        readOnly: true,
        serializedName: "line",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PackageDownloadInfo"
            }
          }
        }
      }
    }
  }
};

export const PackageDownloadsSensorFull: msRest.CompositeMapper = {
  serializedName: "PackageDownloads_sensor_full",
  type: {
    name: "Composite",
    className: "PackageDownloadsSensorFull",
    modelProperties: {
      iso: {
        readOnly: true,
        serializedName: "iso",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PackageDownloadInfo"
            }
          }
        }
      },
      ovf: {
        serializedName: "ovf",
        type: {
          name: "Composite",
          className: "PackageDownloadsSensorFullOvf"
        }
      }
    }
  }
};

export const PackageDownloadsSensor: msRest.CompositeMapper = {
  serializedName: "PackageDownloads_sensor",
  type: {
    name: "Composite",
    className: "PackageDownloadsSensor",
    modelProperties: {
      full: {
        readOnly: true,
        serializedName: "full",
        type: {
          name: "Composite",
          className: "PackageDownloadsSensorFull"
        }
      },
      upgrade: {
        serializedName: "upgrade",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PackageDownloadInfo"
            }
          }
        }
      }
    }
  }
};

export const PackageDownloadsCentralManagerFullOvf: msRest.CompositeMapper = {
  serializedName: "PackageDownloads_centralManager_full_ovf",
  type: {
    name: "Composite",
    className: "PackageDownloadsCentralManagerFullOvf",
    modelProperties: {
      enterprise: {
        readOnly: true,
        serializedName: "enterprise",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PackageDownloadInfo"
            }
          }
        }
      },
      enterpriseHighAvailability: {
        readOnly: true,
        serializedName: "enterpriseHighAvailability",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PackageDownloadInfo"
            }
          }
        }
      },
      medium: {
        readOnly: true,
        serializedName: "medium",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PackageDownloadInfo"
            }
          }
        }
      },
      mediumHighAvailability: {
        readOnly: true,
        serializedName: "mediumHighAvailability",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PackageDownloadInfo"
            }
          }
        }
      }
    }
  }
};

export const PackageDownloadsCentralManagerFull: msRest.CompositeMapper = {
  serializedName: "PackageDownloads_centralManager_full",
  type: {
    name: "Composite",
    className: "PackageDownloadsCentralManagerFull",
    modelProperties: {
      iso: {
        readOnly: true,
        serializedName: "iso",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PackageDownloadInfo"
            }
          }
        }
      },
      ovf: {
        readOnly: true,
        serializedName: "ovf",
        type: {
          name: "Composite",
          className: "PackageDownloadsCentralManagerFullOvf"
        }
      }
    }
  }
};

export const PackageDownloadsCentralManager: msRest.CompositeMapper = {
  serializedName: "PackageDownloads_centralManager",
  type: {
    name: "Composite",
    className: "PackageDownloadsCentralManager",
    modelProperties: {
      full: {
        readOnly: true,
        serializedName: "full",
        type: {
          name: "Composite",
          className: "PackageDownloadsCentralManagerFull"
        }
      },
      upgrade: {
        readOnly: true,
        serializedName: "upgrade",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PackageDownloadInfo"
            }
          }
        }
      }
    }
  }
};

export const PackageDownloadsThreatIntelligence: msRest.CompositeMapper = {
  serializedName: "PackageDownloads_threatIntelligence",
  type: {
    name: "Composite",
    className: "PackageDownloadsThreatIntelligence",
    modelProperties: {
      link: {
        serializedName: "link",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PackageDownloads: msRest.CompositeMapper = {
  serializedName: "PackageDownloads",
  type: {
    name: "Composite",
    className: "PackageDownloads",
    modelProperties: {
      sensor: {
        readOnly: true,
        serializedName: "sensor",
        type: {
          name: "Composite",
          className: "PackageDownloadsSensor"
        }
      },
      centralManager: {
        readOnly: true,
        serializedName: "centralManager",
        type: {
          name: "Composite",
          className: "PackageDownloadsCentralManager"
        }
      },
      threatIntelligence: {
        readOnly: true,
        serializedName: "threatIntelligence",
        type: {
          name: "Composite",
          className: "PackageDownloadsThreatIntelligence"
        }
      }
    }
  }
};

export const IotSensor: msRest.CompositeMapper = {
  serializedName: "IotSensor",
  type: {
    name: "Composite",
    className: "IotSensor",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const IotSensorsList: msRest.CompositeMapper = {
  serializedName: "IotSensorsList",
  type: {
    name: "Composite",
    className: "IotSensorsList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IotSensor"
            }
          }
        }
      }
    }
  }
};

export const IpAddress: msRest.CompositeMapper = {
  serializedName: "IpAddress",
  type: {
    name: "Composite",
    className: "IpAddress",
    modelProperties: {
      v4Address: {
        readOnly: true,
        serializedName: "v4Address",
        type: {
          name: "String"
        }
      },
      detectionTime: {
        readOnly: true,
        serializedName: "detectionTime",
        type: {
          name: "DateTime"
        }
      },
      subnetCidr: {
        readOnly: true,
        serializedName: "subnetCidr",
        type: {
          name: "String"
        }
      },
      fqdn: {
        readOnly: true,
        serializedName: "fqdn",
        type: {
          name: "String"
        }
      },
      fqdnLastLookupTime: {
        readOnly: true,
        serializedName: "fqdnLastLookupTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const MacAddress: msRest.CompositeMapper = {
  serializedName: "MacAddress",
  type: {
    name: "Composite",
    className: "MacAddress",
    modelProperties: {
      address: {
        readOnly: true,
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      detectionTime: {
        readOnly: true,
        serializedName: "detectionTime",
        type: {
          name: "DateTime"
        }
      },
      significance: {
        readOnly: true,
        serializedName: "significance",
        type: {
          name: "String"
        }
      },
      relationToIpStatus: {
        readOnly: true,
        serializedName: "relationToIpStatus",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkInterface: msRest.CompositeMapper = {
  serializedName: "NetworkInterface",
  type: {
    name: "Composite",
    className: "NetworkInterface",
    modelProperties: {
      ipAddress: {
        serializedName: "ipAddress",
        type: {
          name: "Composite",
          className: "IpAddress"
        }
      },
      macAddress: {
        serializedName: "macAddress",
        type: {
          name: "Composite",
          className: "MacAddress"
        }
      },
      vlans: {
        readOnly: true,
        serializedName: "vlans",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Protocol1: msRest.CompositeMapper = {
  serializedName: "Protocol",
  type: {
    name: "Composite",
    className: "Protocol1",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      identifiers: {
        serializedName: "identifiers",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Firmware: msRest.CompositeMapper = {
  serializedName: "Firmware",
  type: {
    name: "Composite",
    className: "Firmware",
    modelProperties: {
      moduleAddress: {
        readOnly: true,
        serializedName: "moduleAddress",
        type: {
          name: "String"
        }
      },
      rack: {
        readOnly: true,
        serializedName: "rack",
        type: {
          name: "String"
        }
      },
      slot: {
        readOnly: true,
        serializedName: "slot",
        type: {
          name: "String"
        }
      },
      serial: {
        readOnly: true,
        serializedName: "serial",
        type: {
          name: "String"
        }
      },
      model: {
        readOnly: true,
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      version: {
        readOnly: true,
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      additionalData: {
        readOnly: true,
        serializedName: "additionalData",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const Sensor: msRest.CompositeMapper = {
  serializedName: "Sensor",
  type: {
    name: "Composite",
    className: "Sensor",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      zone: {
        readOnly: true,
        serializedName: "zone",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Site: msRest.CompositeMapper = {
  serializedName: "Site",
  type: {
    name: "Composite",
    className: "Site",
    modelProperties: {
      displayName: {
        readOnly: true,
        serializedName: "displayName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Device: msRest.CompositeMapper = {
  serializedName: "Device",
  type: {
    name: "Composite",
    className: "Device",
    modelProperties: {
      ...Resource.type.modelProperties,
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      deviceType: {
        serializedName: "properties.deviceType",
        type: {
          name: "String"
        }
      },
      sourceName: {
        readOnly: true,
        serializedName: "properties.sourceName",
        type: {
          name: "String"
        }
      },
      networkInterfaces: {
        readOnly: true,
        serializedName: "properties.networkInterfaces",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NetworkInterface"
            }
          }
        }
      },
      vendor: {
        readOnly: true,
        serializedName: "properties.vendor",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "properties.osName",
        type: {
          name: "String"
        }
      },
      protocols: {
        readOnly: true,
        serializedName: "properties.protocols",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Protocol1"
            }
          }
        }
      },
      lastActiveTime: {
        readOnly: true,
        serializedName: "properties.lastActiveTime",
        type: {
          name: "DateTime"
        }
      },
      lastUpdateTime: {
        readOnly: true,
        serializedName: "properties.lastUpdateTime",
        type: {
          name: "DateTime"
        }
      },
      managementState: {
        readOnly: true,
        serializedName: "properties.managementState",
        type: {
          name: "String"
        }
      },
      authorizationState: {
        serializedName: "properties.authorizationState",
        defaultValue: 'Unauthorized',
        type: {
          name: "String"
        }
      },
      deviceCriticality: {
        serializedName: "properties.deviceCriticality",
        defaultValue: 'Standard',
        type: {
          name: "String"
        }
      },
      purdueLevel: {
        serializedName: "properties.purdueLevel",
        defaultValue: 'ProcessControl',
        type: {
          name: "String"
        }
      },
      notes: {
        serializedName: "properties.notes",
        type: {
          name: "String"
        }
      },
      firmwares: {
        readOnly: true,
        serializedName: "properties.firmwares",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Firmware"
            }
          }
        }
      },
      discoveryTime: {
        readOnly: true,
        serializedName: "properties.discoveryTime",
        type: {
          name: "DateTime"
        }
      },
      programmingState: {
        readOnly: true,
        serializedName: "properties.programmingState",
        type: {
          name: "String"
        }
      },
      lastProgrammingTime: {
        readOnly: true,
        serializedName: "properties.lastProgrammingTime",
        type: {
          name: "DateTime"
        }
      },
      scanningFunctionality: {
        readOnly: true,
        serializedName: "properties.scanningFunctionality",
        type: {
          name: "String"
        }
      },
      lastScanTime: {
        readOnly: true,
        serializedName: "properties.lastScanTime",
        type: {
          name: "DateTime"
        }
      },
      riskScore: {
        readOnly: true,
        serializedName: "properties.riskScore",
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      sensors: {
        readOnly: true,
        serializedName: "properties.sensors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Sensor"
            }
          }
        }
      },
      site: {
        readOnly: true,
        serializedName: "properties.site",
        type: {
          name: "Composite",
          className: "Site"
        }
      },
      deviceStatus: {
        readOnly: true,
        serializedName: "properties.deviceStatus",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OnPremiseIotSensor: msRest.CompositeMapper = {
  serializedName: "OnPremiseIotSensor",
  type: {
    name: "Composite",
    className: "OnPremiseIotSensor",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const OnPremiseIotSensorsList: msRest.CompositeMapper = {
  serializedName: "OnPremiseIotSensorsList",
  type: {
    name: "Composite",
    className: "OnPremiseIotSensorsList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OnPremiseIotSensor"
            }
          }
        }
      }
    }
  }
};

export const IotAlertModel: msRest.CompositeMapper = {
  serializedName: "IotAlertModel",
  type: {
    name: "Composite",
    className: "IotAlertModel",
    modelProperties: {
      systemAlertId: {
        readOnly: true,
        serializedName: "properties.systemAlertId",
        type: {
          name: "String"
        }
      },
      compromisedEntity: {
        readOnly: true,
        serializedName: "properties.compromisedEntity",
        type: {
          name: "String"
        }
      },
      alertType: {
        readOnly: true,
        serializedName: "properties.alertType",
        type: {
          name: "String"
        }
      },
      startTimeUtc: {
        readOnly: true,
        serializedName: "properties.startTimeUtc",
        type: {
          name: "String"
        }
      },
      endTimeUtc: {
        readOnly: true,
        serializedName: "properties.endTimeUtc",
        type: {
          name: "String"
        }
      },
      entities: {
        serializedName: "properties.entities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Object"
            }
          }
        }
      },
      extendedProperties: {
        serializedName: "properties.extendedProperties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const IotRecommendationModel: msRest.CompositeMapper = {
  serializedName: "IotRecommendationModel",
  type: {
    name: "Composite",
    className: "IotRecommendationModel",
    modelProperties: {
      ...Resource.type.modelProperties,
      deviceId: {
        readOnly: true,
        serializedName: "properties.deviceId",
        type: {
          name: "String"
        }
      },
      recommendationType: {
        readOnly: true,
        serializedName: "properties.recommendationType",
        type: {
          name: "String"
        }
      },
      discoveredTimeUtc: {
        readOnly: true,
        serializedName: "properties.discoveredTimeUtc",
        type: {
          name: "String"
        }
      },
      recommendationAdditionalData: {
        serializedName: "properties.recommendationAdditionalData",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const ComplianceResultList: msRest.CompositeMapper = {
  serializedName: "ComplianceResultList",
  type: {
    name: "Composite",
    className: "ComplianceResultList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ComplianceResult"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SettingsList: msRest.CompositeMapper = {
  serializedName: "SettingsList",
  type: {
    name: "Composite",
    className: "SettingsList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Setting"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceSecurityGroupList: msRest.CompositeMapper = {
  serializedName: "DeviceSecurityGroupList",
  type: {
    name: "Composite",
    className: "DeviceSecurityGroupList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DeviceSecurityGroup"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IoTSecuritySolutionsList: msRest.CompositeMapper = {
  serializedName: "IoTSecuritySolutionsList",
  type: {
    name: "Composite",
    className: "IoTSecuritySolutionsList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IoTSecuritySolutionModel"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IoTSecurityAggregatedAlertList: msRest.CompositeMapper = {
  serializedName: "IoTSecurityAggregatedAlertList",
  type: {
    name: "Composite",
    className: "IoTSecurityAggregatedAlertList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IoTSecurityAggregatedAlert"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IoTSecurityAggregatedRecommendationList: msRest.CompositeMapper = {
  serializedName: "IoTSecurityAggregatedRecommendationList",
  type: {
    name: "Composite",
    className: "IoTSecurityAggregatedRecommendationList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IoTSecurityAggregatedRecommendation"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IotAlertList: msRest.CompositeMapper = {
  serializedName: "IotAlertList",
  type: {
    name: "Composite",
    className: "IotAlertList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IotAlert"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      totalCount: {
        readOnly: true,
        serializedName: "totalCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const IotAlertListModel: msRest.CompositeMapper = {
  serializedName: "IotAlertListModel",
  type: {
    name: "Composite",
    className: "IotAlertListModel",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IotAlertModel"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IotRecommendationList: msRest.CompositeMapper = {
  serializedName: "IotRecommendationList",
  type: {
    name: "Composite",
    className: "IotRecommendationList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IotRecommendation"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      totalCount: {
        readOnly: true,
        serializedName: "totalCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const IotRecommendationListModel: msRest.CompositeMapper = {
  serializedName: "IotRecommendationListModel",
  type: {
    name: "Composite",
    className: "IotRecommendationListModel",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IotRecommendationModel"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AscLocationList: msRest.CompositeMapper = {
  serializedName: "AscLocationList",
  type: {
    name: "Composite",
    className: "AscLocationList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AscLocation"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationList: msRest.CompositeMapper = {
  serializedName: "OperationList",
  type: {
    name: "Composite",
    className: "OperationList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecurityTaskList: msRest.CompositeMapper = {
  serializedName: "SecurityTaskList",
  type: {
    name: "Composite",
    className: "SecurityTaskList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SecurityTask"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AutoProvisioningSettingList: msRest.CompositeMapper = {
  serializedName: "AutoProvisioningSettingList",
  type: {
    name: "Composite",
    className: "AutoProvisioningSettingList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AutoProvisioningSetting"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComplianceList: msRest.CompositeMapper = {
  serializedName: "ComplianceList",
  type: {
    name: "Composite",
    className: "ComplianceList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Compliance"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InformationProtectionPolicyList: msRest.CompositeMapper = {
  serializedName: "InformationProtectionPolicyList",
  type: {
    name: "Composite",
    className: "InformationProtectionPolicyList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InformationProtectionPolicy"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecurityContactList: msRest.CompositeMapper = {
  serializedName: "SecurityContactList",
  type: {
    name: "Composite",
    className: "SecurityContactList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SecurityContact"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkspaceSettingList: msRest.CompositeMapper = {
  serializedName: "WorkspaceSettingList",
  type: {
    name: "Composite",
    className: "WorkspaceSettingList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WorkspaceSetting"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegulatoryComplianceStandardList: msRest.CompositeMapper = {
  serializedName: "RegulatoryComplianceStandardList",
  type: {
    name: "Composite",
    className: "RegulatoryComplianceStandardList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RegulatoryComplianceStandard"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegulatoryComplianceControlList: msRest.CompositeMapper = {
  serializedName: "RegulatoryComplianceControlList",
  type: {
    name: "Composite",
    className: "RegulatoryComplianceControlList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RegulatoryComplianceControl"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegulatoryComplianceAssessmentList: msRest.CompositeMapper = {
  serializedName: "RegulatoryComplianceAssessmentList",
  type: {
    name: "Composite",
    className: "RegulatoryComplianceAssessmentList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RegulatoryComplianceAssessment"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecuritySubAssessmentList: msRest.CompositeMapper = {
  serializedName: "SecuritySubAssessmentList",
  type: {
    name: "Composite",
    className: "SecuritySubAssessmentList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SecuritySubAssessment"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AutomationList: msRest.CompositeMapper = {
  serializedName: "AutomationList",
  type: {
    name: "Composite",
    className: "AutomationList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Automation"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertsSuppressionRulesList: msRest.CompositeMapper = {
  serializedName: "AlertsSuppressionRulesList",
  type: {
    name: "Composite",
    className: "AlertsSuppressionRulesList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AlertsSuppressionRule"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecurityAssessmentMetadataList: msRest.CompositeMapper = {
  serializedName: "SecurityAssessmentMetadataList",
  type: {
    name: "Composite",
    className: "SecurityAssessmentMetadataList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SecurityAssessmentMetadata"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecurityAssessmentList: msRest.CompositeMapper = {
  serializedName: "SecurityAssessmentList",
  type: {
    name: "Composite",
    className: "SecurityAssessmentList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SecurityAssessment"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AdaptiveNetworkHardeningsList: msRest.CompositeMapper = {
  serializedName: "AdaptiveNetworkHardeningsList",
  type: {
    name: "Composite",
    className: "AdaptiveNetworkHardeningsList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AdaptiveNetworkHardening"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AllowedConnectionsList: msRest.CompositeMapper = {
  serializedName: "AllowedConnectionsList",
  type: {
    name: "Composite",
    className: "AllowedConnectionsList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AllowedConnectionsResource"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TopologyList: msRest.CompositeMapper = {
  serializedName: "TopologyList",
  type: {
    name: "Composite",
    className: "TopologyList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TopologyResource"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertList: msRest.CompositeMapper = {
  serializedName: "AlertList",
  type: {
    name: "Composite",
    className: "AlertList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Alert"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JitNetworkAccessPoliciesList: msRest.CompositeMapper = {
  serializedName: "JitNetworkAccessPoliciesList",
  type: {
    name: "Composite",
    className: "JitNetworkAccessPoliciesList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JitNetworkAccessPolicy"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiscoveredSecuritySolutionList: msRest.CompositeMapper = {
  serializedName: "DiscoveredSecuritySolutionList",
  type: {
    name: "Composite",
    className: "DiscoveredSecuritySolutionList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DiscoveredSecuritySolution"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExternalSecuritySolutionList: msRest.CompositeMapper = {
  serializedName: "ExternalSecuritySolutionList",
  type: {
    name: "Composite",
    className: "ExternalSecuritySolutionList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExternalSecuritySolution"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecureScoresList: msRest.CompositeMapper = {
  serializedName: "SecureScoresList",
  type: {
    name: "Composite",
    className: "SecureScoresList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SecureScoreItem"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecureScoreControlList: msRest.CompositeMapper = {
  serializedName: "SecureScoreControlList",
  type: {
    name: "Composite",
    className: "SecureScoreControlList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SecureScoreControlDetails"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecureScoreControlDefinitionList: msRest.CompositeMapper = {
  serializedName: "secureScoreControlDefinitionList",
  type: {
    name: "Composite",
    className: "SecureScoreControlDefinitionList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SecureScoreControlDefinitionItem"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecuritySolutionList: msRest.CompositeMapper = {
  serializedName: "SecuritySolutionList",
  type: {
    name: "Composite",
    className: "SecuritySolutionList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SecuritySolution"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConnectorSettingList: msRest.CompositeMapper = {
  serializedName: "ConnectorSettingList",
  type: {
    name: "Composite",
    className: "ConnectorSettingList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ConnectorSetting"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceList: msRest.CompositeMapper = {
  serializedName: "DeviceList",
  type: {
    name: "Composite",
    className: "DeviceList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Device"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const discriminators = {
  'SettingResource.Setting' : Setting,
  'SettingResource.DataExportSettings' : DataExportSettings,
  'SettingResource' : SettingResource,
  'CustomAlertRule.ThresholdCustomAlertRule' : ThresholdCustomAlertRule,
  'CustomAlertRule.TimeWindowCustomAlertRule' : TimeWindowCustomAlertRule,
  'CustomAlertRule.AllowlistCustomAlertRule' : AllowlistCustomAlertRule,
  'CustomAlertRule.DenylistCustomAlertRule' : DenylistCustomAlertRule,
  'CustomAlertRule' : CustomAlertRule,
  'CustomAlertRule.ListCustomAlertRule' : ListCustomAlertRule,
  'CustomAlertRule.ConnectionToIpNotAllowed' : ConnectionToIpNotAllowed,
  'CustomAlertRule.LocalUserNotAllowed' : LocalUserNotAllowed,
  'CustomAlertRule.ProcessNotAllowed' : ProcessNotAllowed,
  'CustomAlertRule.ActiveConnectionsNotInAllowedRange' : ActiveConnectionsNotInAllowedRange,
  'CustomAlertRule.AmqpC2DMessagesNotInAllowedRange' : AmqpC2DMessagesNotInAllowedRange,
  'CustomAlertRule.MqttC2DMessagesNotInAllowedRange' : MqttC2DMessagesNotInAllowedRange,
  'CustomAlertRule.HttpC2DMessagesNotInAllowedRange' : HttpC2DMessagesNotInAllowedRange,
  'CustomAlertRule.AmqpC2DRejectedMessagesNotInAllowedRange' : AmqpC2DRejectedMessagesNotInAllowedRange,
  'CustomAlertRule.MqttC2DRejectedMessagesNotInAllowedRange' : MqttC2DRejectedMessagesNotInAllowedRange,
  'CustomAlertRule.HttpC2DRejectedMessagesNotInAllowedRange' : HttpC2DRejectedMessagesNotInAllowedRange,
  'CustomAlertRule.AmqpD2CMessagesNotInAllowedRange' : AmqpD2CMessagesNotInAllowedRange,
  'CustomAlertRule.MqttD2CMessagesNotInAllowedRange' : MqttD2CMessagesNotInAllowedRange,
  'CustomAlertRule.HttpD2CMessagesNotInAllowedRange' : HttpD2CMessagesNotInAllowedRange,
  'CustomAlertRule.DirectMethodInvokesNotInAllowedRange' : DirectMethodInvokesNotInAllowedRange,
  'CustomAlertRule.FailedLocalLoginsNotInAllowedRange' : FailedLocalLoginsNotInAllowedRange,
  'CustomAlertRule.FileUploadsNotInAllowedRange' : FileUploadsNotInAllowedRange,
  'CustomAlertRule.QueuePurgesNotInAllowedRange' : QueuePurgesNotInAllowedRange,
  'CustomAlertRule.TwinUpdatesNotInAllowedRange' : TwinUpdatesNotInAllowedRange,
  'CustomAlertRule.UnauthorizedOperationsNotInAllowedRange' : UnauthorizedOperationsNotInAllowedRange,
  'ResourceDetails' : ResourceDetails,
  'AdditionalData' : AdditionalData,
  'AdditionalData.SqlServerVulnerability' : SqlServerVulnerabilityProperties,
  'AdditionalData.ContainerRegistryVulnerability' : ContainerRegistryVulnerabilityProperties,
  'AdditionalData.ServerVulnerabilityAssessment' : ServerVulnerabilityProperties,
  'ResourceDetails.OnPremiseSql' : OnPremiseSqlResourceDetails,
  'ResourceDetails.OnPremise' : OnPremiseResourceDetails,
  'ResourceDetails.Azure' : AzureResourceDetails,
  'AutomationAction' : AutomationAction,
  'AutomationAction.LogicApp' : AutomationActionLogicApp,
  'AutomationAction.EventHub' : AutomationActionEventHub,
  'AutomationAction.Workspace' : AutomationActionWorkspace,
  'ResourceIdentifier' : ResourceIdentifier,
  'ResourceIdentifier.AzureResource' : AzureResourceIdentifier,
  'ResourceIdentifier.LogAnalytics' : LogAnalyticsIdentifier,
  'ExternalSecuritySolution' : ExternalSecuritySolution,
  'ExternalSecuritySolution.CEF' : CefExternalSecuritySolution,
  'ExternalSecuritySolution.ATA' : AtaExternalSecuritySolution,
  'ExternalSecuritySolution.AAD' : AadExternalSecuritySolution,
  'AuthenticationDetailsProperties' : AuthenticationDetailsProperties,
  'AuthenticationDetailsProperties.awsCreds' : AwsCredsAuthenticationDetailsProperties,
  'AuthenticationDetailsProperties.awsAssumeRole' : AwAssumeRoleAuthenticationDetailsProperties,
  'AuthenticationDetailsProperties.gcpCredentials' : GcpCredentialsDetailsProperties

};
