/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  GitLabProject,
  GitLabProjectsListOptionalParams,
  GitLabProjectsGetOptionalParams,
  GitLabProjectsGetResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a GitLabProjects. */
export interface GitLabProjects {
  /**
   * Gets a list of GitLab projects that are directly owned by given group and onboarded to the
   * connector.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param securityConnectorName The security connector name.
   * @param groupFQName The GitLab group fully-qualified name.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    securityConnectorName: string,
    groupFQName: string,
    options?: GitLabProjectsListOptionalParams,
  ): PagedAsyncIterableIterator<GitLabProject>;
  /**
   * Returns a monitored GitLab Project resource for a given fully-qualified group name and project name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param securityConnectorName The security connector name.
   * @param groupFQName The GitLab group fully-qualified name.
   * @param projectName The project name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    securityConnectorName: string,
    groupFQName: string,
    projectName: string,
    options?: GitLabProjectsGetOptionalParams,
  ): Promise<GitLabProjectsGetResponse>;
}
