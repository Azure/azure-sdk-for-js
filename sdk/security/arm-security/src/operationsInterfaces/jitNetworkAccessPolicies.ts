/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  JitNetworkAccessPolicy,
  JitNetworkAccessPoliciesListOptionalParams,
  JitNetworkAccessPoliciesListByRegionOptionalParams,
  JitNetworkAccessPoliciesListByResourceGroupOptionalParams,
  JitNetworkAccessPoliciesListByResourceGroupAndRegionOptionalParams,
  JitNetworkAccessPoliciesGetOptionalParams,
  JitNetworkAccessPoliciesGetResponse,
  JitNetworkAccessPoliciesCreateOrUpdateOptionalParams,
  JitNetworkAccessPoliciesCreateOrUpdateResponse,
  JitNetworkAccessPoliciesDeleteOptionalParams,
  JitNetworkAccessPolicyInitiateRequest,
  JitNetworkAccessPoliciesInitiateOptionalParams,
  JitNetworkAccessPoliciesInitiateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a JitNetworkAccessPolicies. */
export interface JitNetworkAccessPolicies {
  /**
   * Policies for protecting resources using Just-in-Time access control.
   * @param options The options parameters.
   */
  list(
    options?: JitNetworkAccessPoliciesListOptionalParams
  ): PagedAsyncIterableIterator<JitNetworkAccessPolicy>;
  /**
   * Policies for protecting resources using Just-in-Time access control for the subscription, location
   * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
   *                    Get locations
   * @param options The options parameters.
   */
  listByRegion(
    ascLocation: string,
    options?: JitNetworkAccessPoliciesListByRegionOptionalParams
  ): PagedAsyncIterableIterator<JitNetworkAccessPolicy>;
  /**
   * Policies for protecting resources using Just-in-Time access control for the subscription, location
   * @param resourceGroupName The name of the resource group within the user's subscription. The name is
   *                          case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: JitNetworkAccessPoliciesListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<JitNetworkAccessPolicy>;
  /**
   * Policies for protecting resources using Just-in-Time access control for the subscription, location
   * @param resourceGroupName The name of the resource group within the user's subscription. The name is
   *                          case insensitive.
   * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
   *                    Get locations
   * @param options The options parameters.
   */
  listByResourceGroupAndRegion(
    resourceGroupName: string,
    ascLocation: string,
    options?: JitNetworkAccessPoliciesListByResourceGroupAndRegionOptionalParams
  ): PagedAsyncIterableIterator<JitNetworkAccessPolicy>;
  /**
   * Policies for protecting resources using Just-in-Time access control for the subscription, location
   * @param resourceGroupName The name of the resource group within the user's subscription. The name is
   *                          case insensitive.
   * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
   *                    Get locations
   * @param jitNetworkAccessPolicyName Name of a Just-in-Time access configuration policy.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    ascLocation: string,
    jitNetworkAccessPolicyName: string,
    options?: JitNetworkAccessPoliciesGetOptionalParams
  ): Promise<JitNetworkAccessPoliciesGetResponse>;
  /**
   * Create a policy for protecting resources using Just-in-Time access control
   * @param resourceGroupName The name of the resource group within the user's subscription. The name is
   *                          case insensitive.
   * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
   *                    Get locations
   * @param jitNetworkAccessPolicyName Name of a Just-in-Time access configuration policy.
   * @param body
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    ascLocation: string,
    jitNetworkAccessPolicyName: string,
    body: JitNetworkAccessPolicy,
    options?: JitNetworkAccessPoliciesCreateOrUpdateOptionalParams
  ): Promise<JitNetworkAccessPoliciesCreateOrUpdateResponse>;
  /**
   * Delete a Just-in-Time access control policy.
   * @param resourceGroupName The name of the resource group within the user's subscription. The name is
   *                          case insensitive.
   * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
   *                    Get locations
   * @param jitNetworkAccessPolicyName Name of a Just-in-Time access configuration policy.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    ascLocation: string,
    jitNetworkAccessPolicyName: string,
    options?: JitNetworkAccessPoliciesDeleteOptionalParams
  ): Promise<void>;
  /**
   * Initiate a JIT access from a specific Just-in-Time policy configuration.
   * @param resourceGroupName The name of the resource group within the user's subscription. The name is
   *                          case insensitive.
   * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
   *                    Get locations
   * @param jitNetworkAccessPolicyName Name of a Just-in-Time access configuration policy.
   * @param body
   * @param options The options parameters.
   */
  initiate(
    resourceGroupName: string,
    ascLocation: string,
    jitNetworkAccessPolicyName: string,
    body: JitNetworkAccessPolicyInitiateRequest,
    options?: JitNetworkAccessPoliciesInitiateOptionalParams
  ): Promise<JitNetworkAccessPoliciesInitiateResponse>;
}
