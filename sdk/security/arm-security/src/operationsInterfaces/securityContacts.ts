/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  SecurityContact,
  SecurityContactsListOptionalParams,
  SecurityContactsGetOptionalParams,
  SecurityContactsGetResponse,
  SecurityContactsCreateOptionalParams,
  SecurityContactsCreateResponse,
  SecurityContactsDeleteOptionalParams,
  SecurityContactsUpdateOptionalParams,
  SecurityContactsUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SecurityContacts. */
export interface SecurityContacts {
  /**
   * Security contact configurations for the subscription
   * @param options The options parameters.
   */
  list(
    options?: SecurityContactsListOptionalParams
  ): PagedAsyncIterableIterator<SecurityContact>;
  /**
   * Security contact configurations for the subscription
   * @param securityContactName Name of the security contact object
   * @param options The options parameters.
   */
  get(
    securityContactName: string,
    options?: SecurityContactsGetOptionalParams
  ): Promise<SecurityContactsGetResponse>;
  /**
   * Security contact configurations for the subscription
   * @param securityContactName Name of the security contact object
   * @param securityContact Security contact object
   * @param options The options parameters.
   */
  create(
    securityContactName: string,
    securityContact: SecurityContact,
    options?: SecurityContactsCreateOptionalParams
  ): Promise<SecurityContactsCreateResponse>;
  /**
   * Security contact configurations for the subscription
   * @param securityContactName Name of the security contact object
   * @param options The options parameters.
   */
  delete(
    securityContactName: string,
    options?: SecurityContactsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Security contact configurations for the subscription
   * @param securityContactName Name of the security contact object
   * @param securityContact Security contact object
   * @param options The options parameters.
   */
  update(
    securityContactName: string,
    securityContact: SecurityContact,
    options?: SecurityContactsUpdateOptionalParams
  ): Promise<SecurityContactsUpdateResponse>;
}
