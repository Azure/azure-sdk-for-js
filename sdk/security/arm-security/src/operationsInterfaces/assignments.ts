/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Assignment,
  AssignmentsListBySubscriptionOptionalParams,
  AssignmentsListOptionalParams,
  AssignmentsGetOptionalParams,
  AssignmentsGetResponse,
  AssignmentsCreateOrUpdateOptionalParams,
  AssignmentsCreateOrUpdateResponse,
  AssignmentsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Assignments. */
export interface Assignments {
  /**
   * Get a list of all relevant standardAssignments over a subscription level scope
   * @param options The options parameters.
   */
  listBySubscription(
    options?: AssignmentsListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<Assignment>;
  /**
   * Get a list of all relevant standardAssignments available for scope
   * @param resourceGroupName The name of the resource group within the user's subscription. The name is
   *                          case insensitive.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    options?: AssignmentsListOptionalParams
  ): PagedAsyncIterableIterator<Assignment>;
  /**
   * Get a specific standard assignment for the requested scope by resourceId
   * @param resourceGroupName The name of the resource group within the user's subscription. The name is
   *                          case insensitive.
   * @param assignmentId The security assignment key - unique key for the standard assignment
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    assignmentId: string,
    options?: AssignmentsGetOptionalParams
  ): Promise<AssignmentsGetResponse>;
  /**
   * Create a security assignment on the given scope. Will create/update the required standard
   * assignment.
   * @param resourceGroupName The name of the resource group within the user's subscription. The name is
   *                          case insensitive.
   * @param assignmentId The security assignment key - unique key for the standard assignment
   * @param assignment Custom standard assignment over a pre-defined scope
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    assignmentId: string,
    assignment: Assignment,
    options?: AssignmentsCreateOrUpdateOptionalParams
  ): Promise<AssignmentsCreateOrUpdateResponse>;
  /**
   * Delete a standard assignment over a given scope
   * @param resourceGroupName The name of the resource group within the user's subscription. The name is
   *                          case insensitive.
   * @param assignmentId The security assignment key - unique key for the standard assignment
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    assignmentId: string,
    options?: AssignmentsDeleteOptionalParams
  ): Promise<void>;
}
