/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  ServerVulnerabilityAssessmentListByExtendedResourceOptionalParams,
  ServerVulnerabilityAssessmentListByExtendedResourceResponse,
  ServerVulnerabilityAssessmentGetOptionalParams,
  ServerVulnerabilityAssessmentGetResponse,
  ServerVulnerabilityAssessmentCreateOrUpdateOptionalParams,
  ServerVulnerabilityAssessmentCreateOrUpdateResponse,
  ServerVulnerabilityAssessmentDeleteOptionalParams
} from "../models";

/** Interface representing a ServerVulnerabilityAssessmentOperations. */
export interface ServerVulnerabilityAssessmentOperations {
  /**
   * Gets a list of server vulnerability assessment onboarding statuses on a given resource.
   * @param resourceGroupName The name of the resource group within the user's subscription. The name is
   *                          case insensitive.
   * @param resourceNamespace The Namespace of the resource.
   * @param resourceType The type of the resource.
   * @param resourceName Name of the resource.
   * @param options The options parameters.
   */
  listByExtendedResource(
    resourceGroupName: string,
    resourceNamespace: string,
    resourceType: string,
    resourceName: string,
    options?: ServerVulnerabilityAssessmentListByExtendedResourceOptionalParams
  ): Promise<ServerVulnerabilityAssessmentListByExtendedResourceResponse>;
  /**
   * Gets a server vulnerability assessment onboarding statuses on a given resource.
   * @param resourceGroupName The name of the resource group within the user's subscription. The name is
   *                          case insensitive.
   * @param resourceNamespace The Namespace of the resource.
   * @param resourceType The type of the resource.
   * @param resourceName Name of the resource.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    resourceNamespace: string,
    resourceType: string,
    resourceName: string,
    options?: ServerVulnerabilityAssessmentGetOptionalParams
  ): Promise<ServerVulnerabilityAssessmentGetResponse>;
  /**
   * Creating a server vulnerability assessment on a resource, which will onboard a resource for having a
   * vulnerability assessment on it
   * @param resourceGroupName The name of the resource group within the user's subscription. The name is
   *                          case insensitive.
   * @param resourceNamespace The Namespace of the resource.
   * @param resourceType The type of the resource.
   * @param resourceName Name of the resource.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    resourceNamespace: string,
    resourceType: string,
    resourceName: string,
    options?: ServerVulnerabilityAssessmentCreateOrUpdateOptionalParams
  ): Promise<ServerVulnerabilityAssessmentCreateOrUpdateResponse>;
  /**
   * Removing server vulnerability assessment from a resource.
   * @param resourceGroupName The name of the resource group within the user's subscription. The name is
   *                          case insensitive.
   * @param resourceNamespace The Namespace of the resource.
   * @param resourceType The type of the resource.
   * @param resourceName Name of the resource.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    resourceNamespace: string,
    resourceType: string,
    resourceName: string,
    options?: ServerVulnerabilityAssessmentDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Removing server vulnerability assessment from a resource.
   * @param resourceGroupName The name of the resource group within the user's subscription. The name is
   *                          case insensitive.
   * @param resourceNamespace The Namespace of the resource.
   * @param resourceType The type of the resource.
   * @param resourceName Name of the resource.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    resourceNamespace: string,
    resourceType: string,
    resourceName: string,
    options?: ServerVulnerabilityAssessmentDeleteOptionalParams
  ): Promise<void>;
}
