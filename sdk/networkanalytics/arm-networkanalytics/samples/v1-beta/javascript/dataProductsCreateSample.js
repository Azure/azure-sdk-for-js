/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
const { MicrosoftNetworkAnalytics } = require("@azure/arm-networkanalytics");
const { DefaultAzureCredential } = require("@azure/identity");
require("dotenv").config();

/**
 * This sample demonstrates how to Create data product resource.
 *
 * @summary Create data product resource.
 * x-ms-original-file: specification/networkanalytics/resource-manager/Microsoft.NetworkAnalytics/stable/2023-11-15/examples/DataProducts_Create_MaximumSet_Gen.json
 */
async function dataProductsCreateMaximumSetGen() {
  const subscriptionId =
    process.env["NETWORKANALYTICS_SUBSCRIPTION_ID"] || "00000000-0000-0000-0000-00000000000";
  const resourceGroupName =
    process.env["NETWORKANALYTICS_RESOURCE_GROUP"] || "aoiresourceGroupName";
  const dataProductName = "dataproduct01";
  const resource = {
    identity: {
      type: "UserAssigned",
      userAssignedIdentities: {
        "/subscriptions/subid/resourceGroups/resourceGroupName/providers/MicrosoftManagedIdentity/userAssignedIdentities/id1":
          {},
      },
    },
    location: "eastus",
    properties: {
      consumptionEndpoints: {},
      currentMinorVersion: "1.0.1",
      customerEncryptionKey: {
        keyName: "keyName",
        keyVaultUri: "https://KeyVault.vault.azure.net",
        keyVersion: "keyVersion",
      },
      customerManagedKeyEncryptionEnabled: "Enabled",
      majorVersion: "1.0.0",
      managedResourceGroupConfiguration: {
        name: "managedResourceGroupName",
        location: "eastus",
      },
      networkacls: {
        allowedQueryIpRangeList: ["1.1.1.1"],
        defaultAction: "Allow",
        ipRules: [{ action: "Allow", value: "1.1.1.1" }],
        virtualNetworkRule: [
          {
            action: "Allow",
            id: "/subscriptions/subscriptionId/resourcegroups/resourceGroupName/providers/Microsoft.Network/virtualNetworks/virtualNetworkName/subnets/subnetName",
            state: "",
          },
        ],
      },
      owners: ["abc@micros.com"],
      privateLinksEnabled: "Disabled",
      product: "MCC",
      provisioningState: "Succeeded",
      publicNetworkAccess: "Enabled",
      publisher: "Microsoft",
      purviewAccount: "testpurview",
      purviewCollection: "134567890",
      redundancy: "Disabled",
    },
    tags: { userSpecifiedKeyName: "userSpecifiedKeyValue" },
  };
  const credential = new DefaultAzureCredential();
  const client = new MicrosoftNetworkAnalytics(credential, subscriptionId);
  const result = await client.dataProducts.beginCreateAndWait(
    resourceGroupName,
    dataProductName,
    resource
  );
  console.log(result);
}

/**
 * This sample demonstrates how to Create data product resource.
 *
 * @summary Create data product resource.
 * x-ms-original-file: specification/networkanalytics/resource-manager/Microsoft.NetworkAnalytics/stable/2023-11-15/examples/DataProducts_Create_MinimumSet_Gen.json
 */
async function dataProductsCreateMaximumSetGenGeneratedByMinimumSetRuleMinimumSetGen() {
  const subscriptionId =
    process.env["NETWORKANALYTICS_SUBSCRIPTION_ID"] || "00000000-0000-0000-0000-00000000000";
  const resourceGroupName =
    process.env["NETWORKANALYTICS_RESOURCE_GROUP"] || "aoiresourceGroupName";
  const dataProductName = "dataproduct01";
  const resource = {
    location: "eastus",
    properties: {
      majorVersion: "1.0.0",
      product: "MCC",
      publisher: "Microsoft",
    },
    tags: { userSpecifiedKeyName: "userSpecifiedKeyValue" },
  };
  const credential = new DefaultAzureCredential();
  const client = new MicrosoftNetworkAnalytics(credential, subscriptionId);
  const result = await client.dataProducts.beginCreateAndWait(
    resourceGroupName,
    dataProductName,
    resource
  );
  console.log(result);
}

async function main() {
  dataProductsCreateMaximumSetGen();
  dataProductsCreateMaximumSetGenGeneratedByMinimumSetRuleMinimumSetGen();
}

main().catch(console.error);
