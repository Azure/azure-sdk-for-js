/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";

export const acceptLanguage: msRest.OperationParameter = {
  parameterPath: "acceptLanguage",
  mapper: {
    serializedName: "accept-language",
    defaultValue: 'en-US',
    type: {
      name: "String"
    }
  }
};
export const accountName: msRest.OperationURLParameter = {
  parameterPath: "accountName",
  mapper: {
    required: true,
    serializedName: "accountName",
    type: {
      name: "String"
    }
  }
};
export const apiVersion: msRest.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    required: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};
export const dataSetMappingName: msRest.OperationURLParameter = {
  parameterPath: "dataSetMappingName",
  mapper: {
    required: true,
    serializedName: "dataSetMappingName",
    type: {
      name: "String"
    }
  }
};
export const dataSetName: msRest.OperationURLParameter = {
  parameterPath: "dataSetName",
  mapper: {
    required: true,
    serializedName: "dataSetName",
    type: {
      name: "String"
    }
  }
};
export const filter: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "filter"
  ],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};
export const invitationId: msRest.OperationURLParameter = {
  parameterPath: "invitationId",
  mapper: {
    required: true,
    serializedName: "invitationId",
    type: {
      name: "String"
    }
  }
};
export const invitationName: msRest.OperationURLParameter = {
  parameterPath: "invitationName",
  mapper: {
    required: true,
    serializedName: "invitationName",
    type: {
      name: "String"
    }
  }
};
export const location: msRest.OperationURLParameter = {
  parameterPath: "location",
  mapper: {
    required: true,
    serializedName: "location",
    type: {
      name: "String"
    }
  }
};
export const nextPageLink: msRest.OperationURLParameter = {
  parameterPath: "nextPageLink",
  mapper: {
    required: true,
    serializedName: "nextLink",
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const orderby: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "orderby"
  ],
  mapper: {
    serializedName: "$orderby",
    type: {
      name: "String"
    }
  }
};
export const providerShareSubscriptionId: msRest.OperationURLParameter = {
  parameterPath: "providerShareSubscriptionId",
  mapper: {
    required: true,
    serializedName: "providerShareSubscriptionId",
    type: {
      name: "String"
    }
  }
};
export const resourceGroupName: msRest.OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    required: true,
    serializedName: "resourceGroupName",
    type: {
      name: "String"
    }
  }
};
export const shareName: msRest.OperationURLParameter = {
  parameterPath: "shareName",
  mapper: {
    required: true,
    serializedName: "shareName",
    type: {
      name: "String"
    }
  }
};
export const shareSubscriptionName: msRest.OperationURLParameter = {
  parameterPath: "shareSubscriptionName",
  mapper: {
    required: true,
    serializedName: "shareSubscriptionName",
    type: {
      name: "String"
    }
  }
};
export const skipToken: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "skipToken"
  ],
  mapper: {
    serializedName: "$skipToken",
    type: {
      name: "String"
    }
  }
};
export const subscriptionId: msRest.OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    required: true,
    serializedName: "subscriptionId",
    type: {
      name: "String"
    }
  }
};
export const synchronizationSettingName: msRest.OperationURLParameter = {
  parameterPath: "synchronizationSettingName",
  mapper: {
    required: true,
    serializedName: "synchronizationSettingName",
    type: {
      name: "String"
    }
  }
};
export const triggerName: msRest.OperationURLParameter = {
  parameterPath: "triggerName",
  mapper: {
    required: true,
    serializedName: "triggerName",
    type: {
      name: "String"
    }
  }
};
