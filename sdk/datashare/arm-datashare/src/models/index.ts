/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Identity of resource
 */
export interface Identity {
  /**
   * service principal Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * Tenant Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
  /**
   * Identity Type. Possible values include: 'SystemAssigned'
   */
  type?: Type;
}

/**
 * Base data transfer object implementation for default resources.
 */
export interface DefaultDto extends BaseResource {
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Location of the azure resource.
   */
  location?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Tags on the azure resource.
   */
  tags?: { [propertyName: string]: string };
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * An account data transfer object.
 */
export interface Account extends DefaultDto {
  /**
   * Identity Info on the Account
   */
  identity: Identity;
  /**
   * Time at which the account was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdAt?: Date;
  /**
   * Provisioning state of the Account. Possible values include: 'Succeeded', 'Creating',
   * 'Deleting', 'Moving', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Email of the user who created the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly userEmail?: string;
  /**
   * Name of the user who created the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly userName?: string;
}

/**
 * The data share error body model.
 */
export interface DataShareErrorInfo {
  /**
   * Code of the error
   */
  code: string;
  /**
   * Nested details of the error model
   */
  details?: DataShareErrorInfo[];
  /**
   * Message of the error
   */
  message: string;
  /**
   * Target of the error
   */
  target?: string;
}

/**
 * The data share error model.
 */
export interface DataShareError {
  /**
   * The data share error body
   */
  error: DataShareErrorInfo;
}

/**
 * Update parameters for accounts
 */
export interface AccountUpdateParameters {
  /**
   * Tags on the azure resource.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Response for long running operation
 */
export interface OperationResponse {
  /**
   * start time
   */
  endTime?: Date;
  /**
   * The error property when status is failed.
   */
  error?: DataShareErrorInfo;
  /**
   * start time
   */
  startTime?: Date;
  /**
   * Operation state of the long running operation. Possible values include: 'Accepted',
   * 'InProgress', 'TransientFailure', 'Succeeded', 'Failed', 'Canceled'
   */
  status: Status;
}

/**
 * Base data transfer object implementation for proxy resources.
 */
export interface ProxyDto extends BaseResource {
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * A consumer Invitation data transfer object.
 */
export interface ConsumerInvitation extends ProxyDto {
  /**
   * Number of data sets in a share
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetCount?: number;
  /**
   * Description shared when the invitation was created
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Unique id of the invitation.
   */
  invitationId: string;
  /**
   * The status of the invitation. Possible values include: 'Pending', 'Accepted', 'Rejected',
   * 'Withdrawn'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly invitationStatus?: InvitationStatus;
  /**
   * invitation location
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * Email of the provider who created the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly providerEmail?: string;
  /**
   * Name of the provider who created the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly providerName?: string;
  /**
   * Tenant name of the provider who created the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly providerTenantName?: string;
  /**
   * The time the recipient responded to the invitation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly respondedAt?: Date;
  /**
   * Gets the time at which the invitation was sent.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sentAt?: Date;
  /**
   * Gets the source share Name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly shareName?: string;
  /**
   * Terms of use shared when the invitation was created
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly termsOfUse?: string;
  /**
   * Email of the user who created the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly userEmail?: string;
  /**
   * Name of the user who created the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly userName?: string;
}

/**
 * Contains the possible cases for DataSet.
 */
export type DataSetUnion = DataSet | BlobDataSet | BlobFolderDataSet | BlobContainerDataSet | ADLSGen2FileDataSet | ADLSGen2FolderDataSet | ADLSGen2FileSystemDataSet | ADLSGen1FolderDataSet | ADLSGen1FileDataSet | KustoClusterDataSet | KustoDatabaseDataSet | SqlDWTableDataSet | SqlDBTableDataSet;

/**
 * A DataSet data transfer object.
 */
export interface DataSet {
  /**
   * Polymorphic Discriminator
   */
  kind: "DataSet";
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * Contains the possible cases for DataSetMapping.
 */
export type DataSetMappingUnion = DataSetMapping | BlobDataSetMapping | BlobFolderDataSetMapping | BlobContainerDataSetMapping | ADLSGen2FileDataSetMapping | ADLSGen2FolderDataSetMapping | ADLSGen2FileSystemDataSetMapping | KustoClusterDataSetMapping | KustoDatabaseDataSetMapping | SqlDWTableDataSetMapping | SqlDBTableDataSetMapping;

/**
 * A data set mapping data transfer object.
 */
export interface DataSetMapping {
  /**
   * Polymorphic Discriminator
   */
  kind: "DataSetMapping";
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * A Invitation data transfer object.
 */
export interface Invitation extends ProxyDto {
  /**
   * unique invitation id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly invitationId?: string;
  /**
   * The status of the invitation. Possible values include: 'Pending', 'Accepted', 'Rejected',
   * 'Withdrawn'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly invitationStatus?: InvitationStatus;
  /**
   * The time the recipient responded to the invitation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly respondedAt?: Date;
  /**
   * Gets the time at which the invitation was sent.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sentAt?: Date;
  /**
   * The target Azure AD Id. Can't be combined with email.
   */
  targetActiveDirectoryId?: string;
  /**
   * The email the invitation is directed to.
   */
  targetEmail?: string;
  /**
   * The target user or application Id that invitation is being sent to.
   * Must be specified along TargetActiveDirectoryId. This enables sending
   * invitations to specific users or applications in an AD tenant.
   */
  targetObjectId?: string;
  /**
   * Email of the user who created the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly userEmail?: string;
  /**
   * Name of the user who created the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly userName?: string;
}

/**
 * Properties on operations
 */
export interface OperationModelProperties {
  /**
   * Description of the operation for display purposes
   */
  description?: string;
  /**
   * Name of the operation for display purposes
   */
  operation?: string;
  /**
   * Name of the provider for display purposes
   */
  provider?: string;
  /**
   * Name of the resource type for display purposes
   */
  resource?: string;
}

/**
 * log specifications for operation api
 */
export interface OperationMetaLogSpecification {
  /**
   * blob duration of the log
   */
  blobDuration?: string;
  /**
   * localized name of the log category
   */
  displayName?: string;
  /**
   * name of the log category
   */
  name?: string;
}

/**
 * properties for dimension
 */
export interface DimensionProperties {
  /**
   * localized display name of the dimension to customer
   */
  displayName?: string;
  /**
   * dimension name
   */
  name?: string;
}

/**
 * metric specifications for the operation
 */
export interface OperationMetaMetricSpecification {
  /**
   * aggregation type of metric
   */
  aggregationType?: string;
  /**
   * properties for dimension
   */
  dimensions?: DimensionProperties[];
  /**
   * description of the metric
   */
  displayDescription?: string;
  /**
   * localized name of the metric
   */
  displayName?: string;
  /**
   * enable regional mdm account
   */
  enableRegionalMdmAccount?: string;
  /**
   * internal metric name
   */
  internalMetricName?: string;
  /**
   * name of the metric
   */
  name?: string;
  /**
   * dimension name use to replace resource id if specified
   */
  resourceIdDimensionNameOverride?: string;
  /**
   * supported aggregation types
   */
  supportedAggregationTypes?: string[];
  /**
   * supported time grain types
   */
  supportedTimeGrainTypes?: string[];
  /**
   * units for the metric
   */
  unit?: string;
}

/**
 * The operation meta service specification
 */
export interface OperationMetaServiceSpecification {
  /**
   * log specifications for the operation
   */
  logSpecifications?: OperationMetaLogSpecification[];
  /**
   * metric specifications for the operation
   */
  metricSpecifications?: OperationMetaMetricSpecification[];
}

/**
 * The response model for get operations
 */
export interface OperationModel {
  /**
   * Properties on the operation
   */
  display?: OperationModelProperties;
  /**
   * Operation name for display purposes
   */
  name?: string;
  /**
   * origin of the operation
   */
  origin?: string;
  /**
   * meta service specification
   */
  serviceSpecification?: OperationMetaServiceSpecification;
}

/**
 * A share data transfer object.
 */
export interface Share extends ProxyDto {
  /**
   * Time at which the share was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdAt?: Date;
  /**
   * Share description.
   */
  description?: string;
  /**
   * Gets or sets the provisioning state. Possible values include: 'Succeeded', 'Creating',
   * 'Deleting', 'Moving', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Share kind. Possible values include: 'CopyBased', 'InPlace'
   */
  shareKind?: ShareKind;
  /**
   * Share terms.
   */
  terms?: string;
  /**
   * Email of the user who created the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly userEmail?: string;
  /**
   * Name of the user who created the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly userName?: string;
}

/**
 * A ShareSynchronization data transfer object.
 */
export interface ShareSynchronization {
  /**
   * Email of the user who created the synchronization
   */
  consumerEmail?: string;
  /**
   * Name of the user who created the synchronization
   */
  consumerName?: string;
  /**
   * Tenant name of the consumer who created the synchronization
   */
  consumerTenantName?: string;
  /**
   * synchronization duration
   */
  durationMs?: number;
  /**
   * End time of synchronization
   */
  endTime?: Date;
  /**
   * message of synchronization
   */
  message?: string;
  /**
   * start time of synchronization
   */
  startTime?: Date;
  /**
   * Raw Status
   */
  status?: string;
  /**
   * Synchronization id
   */
  synchronizationId?: string;
  /**
   * Synchronization mode. Possible values include: 'Incremental', 'FullSync'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly synchronizationMode?: SynchronizationMode;
}

/**
 * Synchronization details at data set level
 */
export interface SynchronizationDetails {
  /**
   * Id of data set
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetId?: string;
  /**
   * Type of the data set. Possible values include: 'Blob', 'Container', 'BlobFolder',
   * 'AdlsGen2FileSystem', 'AdlsGen2Folder', 'AdlsGen2File', 'AdlsGen1Folder', 'AdlsGen1File',
   * 'KustoCluster', 'KustoDatabase', 'SqlDBTable', 'SqlDWTable'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetType?: DataSetType;
  /**
   * Duration of data set level copy
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly durationMs?: number;
  /**
   * End time of data set level copy
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endTime?: Date;
  /**
   * The number of files read from the source data set
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly filesRead?: number;
  /**
   * The number of files written into the sink data set
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly filesWritten?: number;
  /**
   * Error message if any
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * Name of the data set
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The number of files copied into the sink data set
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly rowsCopied?: number;
  /**
   * The number of rows read from the source data set.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly rowsRead?: number;
  /**
   * The size of the data read from the source data set in bytes
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sizeRead?: number;
  /**
   * The size of the data written into the sink data set in bytes
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sizeWritten?: number;
  /**
   * Start time of data set level copy
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * Raw Status
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: string;
  /**
   * The vCore units consumed for the data set synchronization
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly vCore?: number;
}

/**
 * A provider side share subscription data transfer object.
 */
export interface ProviderShareSubscription extends ProxyDto {
  /**
   * Email of the consumer who created the share subscription
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly consumerEmail?: string;
  /**
   * Name of the consumer who created the share subscription
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly consumerName?: string;
  /**
   * Tenant name of the consumer who created the share subscription
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly consumerTenantName?: string;
  /**
   * created at
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdAt?: Date;
  /**
   * Email of the provider who created the share
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly providerEmail?: string;
  /**
   * Name of the provider who created the share
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly providerName?: string;
  /**
   * Shared at
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sharedAt?: Date;
  /**
   * share Subscription Object Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly shareSubscriptionObjectId?: string;
  /**
   * Gets the status of share subscription. Possible values include: 'Active', 'Revoked',
   * 'SourceDeleted', 'Revoking'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly shareSubscriptionStatus?: ShareSubscriptionStatus;
}

/**
 * A share subscription data transfer object.
 */
export interface ShareSubscription extends ProxyDto {
  /**
   * Time at which the share subscription was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdAt?: Date;
  /**
   * The invitation id.
   */
  invitationId: string;
  /**
   * Email of the provider who created the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly providerEmail?: string;
  /**
   * Name of the provider who created the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly providerName?: string;
  /**
   * Tenant name of the provider who created the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly providerTenantName?: string;
  /**
   * Provisioning state of the share subscription. Possible values include: 'Succeeded',
   * 'Creating', 'Deleting', 'Moving', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Description of share
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly shareDescription?: string;
  /**
   * Kind of share. Possible values include: 'CopyBased', 'InPlace'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly shareKind?: ShareKind;
  /**
   * Name of the share
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly shareName?: string;
  /**
   * Gets the current status of share subscription. Possible values include: 'Active', 'Revoked',
   * 'SourceDeleted', 'Revoking'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly shareSubscriptionStatus?: ShareSubscriptionStatus;
  /**
   * Terms of a share
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly shareTerms?: string;
  /**
   * Source share location.
   */
  sourceShareLocation: string;
  /**
   * Email of the user who created the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly userEmail?: string;
  /**
   * Name of the user who created the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly userName?: string;
}

/**
 * A consumer side dataSet data transfer object.
 */
export interface ConsumerSourceDataSet extends ProxyDto {
  /**
   * DataSet Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetId?: string;
  /**
   * Location of the data set.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetLocation?: string;
  /**
   * DataSet name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetName?: string;
  /**
   * DataSet path
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetPath?: string;
  /**
   * Type of data set. Possible values include: 'Blob', 'Container', 'BlobFolder',
   * 'AdlsGen2FileSystem', 'AdlsGen2Folder', 'AdlsGen2File', 'AdlsGen1Folder', 'AdlsGen1File',
   * 'KustoCluster', 'KustoDatabase', 'SqlDBTable', 'SqlDWTable'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetType?: DataSetType;
}

/**
 * Contains the possible cases for SourceShareSynchronizationSetting.
 */
export type SourceShareSynchronizationSettingUnion = SourceShareSynchronizationSetting | ScheduledSourceSynchronizationSetting;

/**
 * A view of synchronization setting added by the provider
 */
export interface SourceShareSynchronizationSetting {
  /**
   * Polymorphic Discriminator
   */
  kind: "SourceShareSynchronizationSetting";
}

/**
 * A ShareSubscriptionSynchronization data transfer object.
 */
export interface ShareSubscriptionSynchronization {
  /**
   * Synchronization duration
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly durationMs?: number;
  /**
   * End time of synchronization
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endTime?: Date;
  /**
   * message of Synchronization
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * start time of synchronization
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * Raw Status
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: string;
  /**
   * Synchronization id
   */
  synchronizationId: string;
  /**
   * Synchronization Mode. Possible values include: 'Incremental', 'FullSync'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly synchronizationMode?: SynchronizationMode;
}

/**
 * Payload for the synchronizing the data.
 */
export interface Synchronize {
  /**
   * Mode of synchronization used in triggers and snapshot sync. Incremental by default. Possible
   * values include: 'Incremental', 'FullSync'
   */
  synchronizationMode?: SynchronizationMode;
}

/**
 * Contains the possible cases for SynchronizationSetting.
 */
export type SynchronizationSettingUnion = SynchronizationSetting | ScheduledSynchronizationSetting;

/**
 * A Synchronization Setting data transfer object.
 */
export interface SynchronizationSetting {
  /**
   * Polymorphic Discriminator
   */
  kind: "SynchronizationSetting";
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * Contains the possible cases for Trigger.
 */
export type TriggerUnion = Trigger | ScheduledTrigger;

/**
 * A Trigger data transfer object.
 */
export interface Trigger {
  /**
   * Polymorphic Discriminator
   */
  kind: "Trigger";
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * A type of synchronization setting based on schedule
 */
export interface ScheduledSynchronizationSetting {
  /**
   * Polymorphic Discriminator
   */
  kind: "ScheduleBased";
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Time at which the synchronization setting was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdAt?: Date;
  /**
   * Gets or sets the provisioning state. Possible values include: 'Succeeded', 'Creating',
   * 'Deleting', 'Moving', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Recurrence Interval. Possible values include: 'Hour', 'Day'
   */
  recurrenceInterval: RecurrenceInterval;
  /**
   * Synchronization time
   */
  synchronizationTime: Date;
  /**
   * Name of the user who created the synchronization setting.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly userName?: string;
}

/**
 * A type of trigger based on schedule
 */
export interface ScheduledTrigger {
  /**
   * Polymorphic Discriminator
   */
  kind: "ScheduleBased";
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Time at which the trigger was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdAt?: Date;
  /**
   * Gets the provisioning state. Possible values include: 'Succeeded', 'Creating', 'Deleting',
   * 'Moving', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Recurrence Interval. Possible values include: 'Hour', 'Day'
   */
  recurrenceInterval: RecurrenceInterval;
  /**
   * Synchronization mode. Possible values include: 'Incremental', 'FullSync'
   */
  synchronizationMode?: SynchronizationMode;
  /**
   * Synchronization time
   */
  synchronizationTime: Date;
  /**
   * Gets the trigger state. Possible values include: 'Active', 'Inactive',
   * 'SourceSynchronizationSettingDeleted'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly triggerStatus?: TriggerStatus;
  /**
   * Name of the user who created the trigger.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly userName?: string;
}

/**
 * An Azure storage blob data set.
 */
export interface BlobDataSet {
  /**
   * Polymorphic Discriminator
   */
  kind: "Blob";
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Container that has the file path.
   */
  containerName: string;
  /**
   * Unique id for identifying a data set resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetId?: string;
  /**
   * File path within the source data set
   */
  filePath: string;
  /**
   * Resource group of storage account
   */
  resourceGroup: string;
  /**
   * Storage account name of the source data set
   */
  storageAccountName: string;
  /**
   * Subscription id of storage account
   */
  subscriptionId: string;
}

/**
 * An Azure storage blob folder data set.
 */
export interface BlobFolderDataSet {
  /**
   * Polymorphic Discriminator
   */
  kind: "BlobFolder";
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Container that has the file path.
   */
  containerName: string;
  /**
   * Unique id for identifying a data set resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetId?: string;
  /**
   * Prefix for blob folder
   */
  prefix: string;
  /**
   * Resource group of storage account
   */
  resourceGroup: string;
  /**
   * Storage account name of the source data set
   */
  storageAccountName: string;
  /**
   * Subscription id of storage account
   */
  subscriptionId: string;
}

/**
 * An Azure storage blob container data set.
 */
export interface BlobContainerDataSet {
  /**
   * Polymorphic Discriminator
   */
  kind: "Container";
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * BLOB Container name.
   */
  containerName: string;
  /**
   * Unique id for identifying a data set resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetId?: string;
  /**
   * Resource group of storage account
   */
  resourceGroup: string;
  /**
   * Storage account name of the source data set
   */
  storageAccountName: string;
  /**
   * Subscription id of storage account
   */
  subscriptionId: string;
}

/**
 * An ADLS Gen 2 file data set.
 */
export interface ADLSGen2FileDataSet {
  /**
   * Polymorphic Discriminator
   */
  kind: "AdlsGen2File";
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Unique id for identifying a data set resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetId?: string;
  /**
   * File path within the file system.
   */
  filePath: string;
  /**
   * File system to which the file belongs.
   */
  fileSystem: string;
  /**
   * Resource group of storage account
   */
  resourceGroup: string;
  /**
   * Storage account name of the source data set
   */
  storageAccountName: string;
  /**
   * Subscription id of storage account
   */
  subscriptionId: string;
}

/**
 * An ADLS Gen 2 folder data set.
 */
export interface ADLSGen2FolderDataSet {
  /**
   * Polymorphic Discriminator
   */
  kind: "AdlsGen2Folder";
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Unique id for identifying a data set resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetId?: string;
  /**
   * File system to which the folder belongs.
   */
  fileSystem: string;
  /**
   * Folder path within the file system.
   */
  folderPath: string;
  /**
   * Resource group of storage account
   */
  resourceGroup: string;
  /**
   * Storage account name of the source data set
   */
  storageAccountName: string;
  /**
   * Subscription id of storage account
   */
  subscriptionId: string;
}

/**
 * An ADLS Gen 2 file system data set.
 */
export interface ADLSGen2FileSystemDataSet {
  /**
   * Polymorphic Discriminator
   */
  kind: "AdlsGen2FileSystem";
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Unique id for identifying a data set resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetId?: string;
  /**
   * The file system name.
   */
  fileSystem: string;
  /**
   * Resource group of storage account
   */
  resourceGroup: string;
  /**
   * Storage account name of the source data set
   */
  storageAccountName: string;
  /**
   * Subscription id of storage account
   */
  subscriptionId: string;
}

/**
 * An ADLS Gen 1 folder data set.
 */
export interface ADLSGen1FolderDataSet {
  /**
   * Polymorphic Discriminator
   */
  kind: "AdlsGen1Folder";
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The ADLS account name.
   */
  accountName: string;
  /**
   * Unique id for identifying a data set resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetId?: string;
  /**
   * The folder path within the ADLS account.
   */
  folderPath: string;
  /**
   * Resource group of ADLS account.
   */
  resourceGroup: string;
  /**
   * Subscription id of ADLS account.
   */
  subscriptionId: string;
}

/**
 * An ADLS Gen 1 file data set.
 */
export interface ADLSGen1FileDataSet {
  /**
   * Polymorphic Discriminator
   */
  kind: "AdlsGen1File";
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The ADLS account name.
   */
  accountName: string;
  /**
   * Unique id for identifying a data set resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetId?: string;
  /**
   * The file name in the ADLS account.
   */
  fileName: string;
  /**
   * The folder path within the ADLS account.
   */
  folderPath: string;
  /**
   * Resource group of ADLS account.
   */
  resourceGroup: string;
  /**
   * Subscription id of ADLS account.
   */
  subscriptionId: string;
}

/**
 * A kusto cluster data set.
 */
export interface KustoClusterDataSet {
  /**
   * Polymorphic Discriminator
   */
  kind: "KustoCluster";
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Unique id for identifying a data set resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetId?: string;
  /**
   * Resource id of the kusto cluster.
   */
  kustoClusterResourceId: string;
  /**
   * Location of the kusto cluster.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * Provisioning state of the kusto cluster data set. Possible values include: 'Succeeded',
   * 'Creating', 'Deleting', 'Moving', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
}

/**
 * A kusto database data set.
 */
export interface KustoDatabaseDataSet {
  /**
   * Polymorphic Discriminator
   */
  kind: "KustoDatabase";
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Unique id for identifying a data set resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetId?: string;
  /**
   * Resource id of the kusto database.
   */
  kustoDatabaseResourceId: string;
  /**
   * Location of the kusto cluster.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * Provisioning state of the kusto database data set. Possible values include: 'Succeeded',
   * 'Creating', 'Deleting', 'Moving', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
}

/**
 * A SQL DW table data set.
 */
export interface SqlDWTableDataSet {
  /**
   * Polymorphic Discriminator
   */
  kind: "SqlDWTable";
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Unique id for identifying a data set resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetId?: string;
  /**
   * DataWarehouse name of the source data set
   */
  dataWarehouseName: string;
  /**
   * Schema of the table. Default value is dbo.
   */
  schemaName: string;
  /**
   * Resource id of SQL server
   */
  sqlServerResourceId: string;
  /**
   * SQL DW table name.
   */
  tableName: string;
}

/**
 * A SQL DB table data set.
 */
export interface SqlDBTableDataSet {
  /**
   * Polymorphic Discriminator
   */
  kind: "SqlDBTable";
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Database name of the source data set
   */
  databaseName: string;
  /**
   * Unique id for identifying a data set resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetId?: string;
  /**
   * Schema of the table. Default value is dbo.
   */
  schemaName: string;
  /**
   * Resource id of SQL server
   */
  sqlServerResourceId: string;
  /**
   * SQL DB table name.
   */
  tableName: string;
}

/**
 * A Blob data set mapping.
 */
export interface BlobDataSetMapping {
  /**
   * Polymorphic Discriminator
   */
  kind: "Blob";
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Container that has the file path.
   */
  containerName: string;
  /**
   * The id of the source data set.
   */
  dataSetId: string;
  /**
   * Gets the status of the data set mapping. Possible values include: 'Ok', 'Broken'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetMappingStatus?: DataSetMappingStatus;
  /**
   * File path within the source data set
   */
  filePath: string;
  /**
   * File output type. Possible values include: 'Csv', 'Parquet'
   */
  outputType?: OutputType;
  /**
   * Provisioning state of the data set mapping. Possible values include: 'Succeeded', 'Creating',
   * 'Deleting', 'Moving', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Resource group of storage account.
   */
  resourceGroup: string;
  /**
   * Storage account name of the source data set.
   */
  storageAccountName: string;
  /**
   * Subscription id of storage account.
   */
  subscriptionId: string;
}

/**
 * A Blob folder data set mapping.
 */
export interface BlobFolderDataSetMapping {
  /**
   * Polymorphic Discriminator
   */
  kind: "BlobFolder";
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Container that has the file path.
   */
  containerName: string;
  /**
   * The id of the source data set.
   */
  dataSetId: string;
  /**
   * Gets the status of the data set mapping. Possible values include: 'Ok', 'Broken'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetMappingStatus?: DataSetMappingStatus;
  /**
   * Prefix for blob folder
   */
  prefix: string;
  /**
   * Provisioning state of the data set mapping. Possible values include: 'Succeeded', 'Creating',
   * 'Deleting', 'Moving', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Resource group of storage account.
   */
  resourceGroup: string;
  /**
   * Storage account name of the source data set.
   */
  storageAccountName: string;
  /**
   * Subscription id of storage account.
   */
  subscriptionId: string;
}

/**
 * A Blob container data set mapping.
 */
export interface BlobContainerDataSetMapping {
  /**
   * Polymorphic Discriminator
   */
  kind: "Container";
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * BLOB Container name.
   */
  containerName: string;
  /**
   * The id of the source data set.
   */
  dataSetId: string;
  /**
   * Gets the status of the data set mapping. Possible values include: 'Ok', 'Broken'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetMappingStatus?: DataSetMappingStatus;
  /**
   * Provisioning state of the data set mapping. Possible values include: 'Succeeded', 'Creating',
   * 'Deleting', 'Moving', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Resource group of storage account.
   */
  resourceGroup: string;
  /**
   * Storage account name of the source data set.
   */
  storageAccountName: string;
  /**
   * Subscription id of storage account.
   */
  subscriptionId: string;
}

/**
 * An ADLS Gen2 file data set mapping.
 */
export interface ADLSGen2FileDataSetMapping {
  /**
   * Polymorphic Discriminator
   */
  kind: "AdlsGen2File";
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The id of the source data set.
   */
  dataSetId: string;
  /**
   * Gets the status of the data set mapping. Possible values include: 'Ok', 'Broken'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetMappingStatus?: DataSetMappingStatus;
  /**
   * File path within the file system.
   */
  filePath: string;
  /**
   * File system to which the file belongs.
   */
  fileSystem: string;
  /**
   * Type of output file. Possible values include: 'Csv', 'Parquet'
   */
  outputType?: OutputType;
  /**
   * Provisioning state of the data set mapping. Possible values include: 'Succeeded', 'Creating',
   * 'Deleting', 'Moving', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Resource group of storage account.
   */
  resourceGroup: string;
  /**
   * Storage account name of the source data set.
   */
  storageAccountName: string;
  /**
   * Subscription id of storage account.
   */
  subscriptionId: string;
}

/**
 * An ADLS Gen2 folder data set mapping.
 */
export interface ADLSGen2FolderDataSetMapping {
  /**
   * Polymorphic Discriminator
   */
  kind: "AdlsGen2Folder";
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The id of the source data set.
   */
  dataSetId: string;
  /**
   * Gets the status of the data set mapping. Possible values include: 'Ok', 'Broken'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetMappingStatus?: DataSetMappingStatus;
  /**
   * File system to which the folder belongs.
   */
  fileSystem: string;
  /**
   * Folder path within the file system.
   */
  folderPath: string;
  /**
   * Provisioning state of the data set mapping. Possible values include: 'Succeeded', 'Creating',
   * 'Deleting', 'Moving', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Resource group of storage account.
   */
  resourceGroup: string;
  /**
   * Storage account name of the source data set.
   */
  storageAccountName: string;
  /**
   * Subscription id of storage account.
   */
  subscriptionId: string;
}

/**
 * An ADLS Gen2 file system data set mapping.
 */
export interface ADLSGen2FileSystemDataSetMapping {
  /**
   * Polymorphic Discriminator
   */
  kind: "AdlsGen2FileSystem";
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The id of the source data set.
   */
  dataSetId: string;
  /**
   * Gets the status of the data set mapping. Possible values include: 'Ok', 'Broken'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetMappingStatus?: DataSetMappingStatus;
  /**
   * The file system name.
   */
  fileSystem: string;
  /**
   * Provisioning state of the data set mapping. Possible values include: 'Succeeded', 'Creating',
   * 'Deleting', 'Moving', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Resource group of storage account.
   */
  resourceGroup: string;
  /**
   * Storage account name of the source data set.
   */
  storageAccountName: string;
  /**
   * Subscription id of storage account.
   */
  subscriptionId: string;
}

/**
 * A Kusto cluster data set mapping
 */
export interface KustoClusterDataSetMapping {
  /**
   * Polymorphic Discriminator
   */
  kind: "KustoCluster";
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The id of the source data set.
   */
  dataSetId: string;
  /**
   * Gets the status of the data set mapping. Possible values include: 'Ok', 'Broken'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetMappingStatus?: DataSetMappingStatus;
  /**
   * Resource id of the sink kusto cluster.
   */
  kustoClusterResourceId: string;
  /**
   * Location of the sink kusto cluster.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * Provisioning state of the data set mapping. Possible values include: 'Succeeded', 'Creating',
   * 'Deleting', 'Moving', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
}

/**
 * A Kusto database data set mapping
 */
export interface KustoDatabaseDataSetMapping {
  /**
   * Polymorphic Discriminator
   */
  kind: "KustoDatabase";
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The id of the source data set.
   */
  dataSetId: string;
  /**
   * Gets the status of the data set mapping. Possible values include: 'Ok', 'Broken'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetMappingStatus?: DataSetMappingStatus;
  /**
   * Resource id of the sink kusto cluster.
   */
  kustoClusterResourceId: string;
  /**
   * Location of the sink kusto cluster.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * Provisioning state of the data set mapping. Possible values include: 'Succeeded', 'Creating',
   * 'Deleting', 'Moving', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
}

/**
 * A SQL DW Table data set mapping.
 */
export interface SqlDWTableDataSetMapping {
  /**
   * Polymorphic Discriminator
   */
  kind: "SqlDWTable";
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The id of the source data set.
   */
  dataSetId: string;
  /**
   * Gets the status of the data set mapping. Possible values include: 'Ok', 'Broken'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetMappingStatus?: DataSetMappingStatus;
  /**
   * DataWarehouse name of the source data set
   */
  dataWarehouseName: string;
  /**
   * Provisioning state of the data set mapping. Possible values include: 'Succeeded', 'Creating',
   * 'Deleting', 'Moving', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Schema of the table. Default value is dbo.
   */
  schemaName: string;
  /**
   * Resource id of SQL server
   */
  sqlServerResourceId: string;
  /**
   * SQL DW table name.
   */
  tableName: string;
}

/**
 * A SQL DB Table data set mapping.
 */
export interface SqlDBTableDataSetMapping {
  /**
   * Polymorphic Discriminator
   */
  kind: "SqlDBTable";
  /**
   * The resource id of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the azure resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * DatabaseName name of the sink data set
   */
  databaseName: string;
  /**
   * The id of the source data set.
   */
  dataSetId: string;
  /**
   * Gets the status of the data set mapping. Possible values include: 'Ok', 'Broken'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSetMappingStatus?: DataSetMappingStatus;
  /**
   * Provisioning state of the data set mapping. Possible values include: 'Succeeded', 'Creating',
   * 'Deleting', 'Moving', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Schema of the table. Default value is dbo.
   */
  schemaName: string;
  /**
   * Resource id of SQL server
   */
  sqlServerResourceId: string;
  /**
   * SQL DB table name.
   */
  tableName: string;
}

/**
 * A type of synchronization setting based on schedule
 */
export interface ScheduledSourceSynchronizationSetting {
  /**
   * Polymorphic Discriminator
   */
  kind: "ScheduleBased";
  /**
   * Recurrence Interval. Possible values include: 'Hour', 'Day'
   */
  recurrenceInterval?: RecurrenceInterval;
  /**
   * Synchronization time
   */
  synchronizationTime?: Date;
}

/**
 * Optional Parameters.
 */
export interface AccountsListBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface AccountsListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface ConsumerInvitationsListInvitationsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The continuation token
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface DataSetsListByShareOptionalParams extends msRest.RequestOptionsBase {
  /**
   * continuation token
   */
  skipToken?: string;
  /**
   * Filters the results using OData syntax.
   */
  filter?: string;
  /**
   * Sorts the results using OData syntax.
   */
  orderby?: string;
}

/**
 * Optional Parameters.
 */
export interface DataSetMappingsListByShareSubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token
   */
  skipToken?: string;
  /**
   * Filters the results using OData syntax.
   */
  filter?: string;
  /**
   * Sorts the results using OData syntax.
   */
  orderby?: string;
}

/**
 * Optional Parameters.
 */
export interface InvitationsListByShareOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The continuation token
   */
  skipToken?: string;
  /**
   * Filters the results using OData syntax.
   */
  filter?: string;
  /**
   * Sorts the results using OData syntax.
   */
  orderby?: string;
}

/**
 * Optional Parameters.
 */
export interface SharesListByAccountOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation Token
   */
  skipToken?: string;
  /**
   * Filters the results using OData syntax.
   */
  filter?: string;
  /**
   * Sorts the results using OData syntax.
   */
  orderby?: string;
}

/**
 * Optional Parameters.
 */
export interface SharesListSynchronizationsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token
   */
  skipToken?: string;
  /**
   * Filters the results using OData syntax.
   */
  filter?: string;
  /**
   * Sorts the results using OData syntax.
   */
  orderby?: string;
}

/**
 * Optional Parameters.
 */
export interface SharesListSynchronizationDetailsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token
   */
  skipToken?: string;
  /**
   * Filters the results using OData syntax.
   */
  filter?: string;
  /**
   * Sorts the results using OData syntax.
   */
  orderby?: string;
}

/**
 * Optional Parameters.
 */
export interface ProviderShareSubscriptionsListByShareOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation Token
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface ShareSubscriptionsListByAccountOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation Token
   */
  skipToken?: string;
  /**
   * Filters the results using OData syntax.
   */
  filter?: string;
  /**
   * Sorts the results using OData syntax.
   */
  orderby?: string;
}

/**
 * Optional Parameters.
 */
export interface ShareSubscriptionsListSourceShareSynchronizationSettingsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface ShareSubscriptionsListSynchronizationsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token
   */
  skipToken?: string;
  /**
   * Filters the results using OData syntax.
   */
  filter?: string;
  /**
   * Sorts the results using OData syntax.
   */
  orderby?: string;
}

/**
 * Optional Parameters.
 */
export interface ShareSubscriptionsListSynchronizationDetailsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token
   */
  skipToken?: string;
  /**
   * Filters the results using OData syntax.
   */
  filter?: string;
  /**
   * Sorts the results using OData syntax.
   */
  orderby?: string;
}

/**
 * Optional Parameters.
 */
export interface ConsumerSourceDataSetsListByShareSubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface SynchronizationSettingsListByShareOptionalParams extends msRest.RequestOptionsBase {
  /**
   * continuation token
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface TriggersListByShareSubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token
   */
  skipToken?: string;
}

/**
 * An interface representing DataShareManagementClientOptions.
 */
export interface DataShareManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * List response for get Accounts.
 * @extends Array<Account>
 */
export interface AccountList extends Array<Account> {
  /**
   * The Url of next result page.
   */
  nextLink?: string;
}

/**
 * @interface
 * List response for get InvitationList
 * @extends Array<ConsumerInvitation>
 */
export interface ConsumerInvitationList extends Array<ConsumerInvitation> {
  /**
   * The Url of next result page.
   */
  nextLink?: string;
}

/**
 * @interface
 * List response for get DataSets
 * @extends Array<DataSetUnion>
 */
export interface DataSetList extends Array<DataSetUnion> {
  /**
   * The Url of next result page.
   */
  nextLink?: string;
}

/**
 * @interface
 * List response for get DataSetMappings
 * @extends Array<DataSetMappingUnion>
 */
export interface DataSetMappingList extends Array<DataSetMappingUnion> {
  /**
   * The Url of next result page.
   */
  nextLink?: string;
}

/**
 * @interface
 * List response for get InvitationList
 * @extends Array<Invitation>
 */
export interface InvitationList extends Array<Invitation> {
  /**
   * The Url of next result page.
   */
  nextLink?: string;
}

/**
 * @interface
 * List response for get operations.
 * @extends Array<OperationModel>
 */
export interface OperationList extends Array<OperationModel> {
  /**
   * The Url of next result page.
   */
  nextLink?: string;
}

/**
 * @interface
 * List response for get Shares.
 * @extends Array<Share>
 */
export interface ShareList extends Array<Share> {
  /**
   * The Url of next result page.
   */
  nextLink?: string;
}

/**
 * @interface
 * List response for get ShareSynchronization.
 * @extends Array<ShareSynchronization>
 */
export interface ShareSynchronizationList extends Array<ShareSynchronization> {
  /**
   * The Url of next result page.
   */
  nextLink?: string;
}

/**
 * @interface
 * details of synchronization
 * @extends Array<SynchronizationDetails>
 */
export interface SynchronizationDetailsList extends Array<SynchronizationDetails> {
  /**
   * The Url of next result page.
   */
  nextLink?: string;
}

/**
 * @interface
 * List response for get ShareSubscription.
 * @extends Array<ProviderShareSubscription>
 */
export interface ProviderShareSubscriptionList extends Array<ProviderShareSubscription> {
  /**
   * The Url of next result page.
   */
  nextLink?: string;
}

/**
 * @interface
 * List response for get ShareSubscription.
 * @extends Array<ShareSubscription>
 */
export interface ShareSubscriptionList extends Array<ShareSubscription> {
  /**
   * The Url of next result page.
   */
  nextLink?: string;
}

/**
 * @interface
 * List response for get source share Synchronization settings
 * @extends Array<SourceShareSynchronizationSettingUnion>
 */
export interface SourceShareSynchronizationSettingList extends Array<SourceShareSynchronizationSettingUnion> {
  /**
   * The Url of next result page.
   */
  nextLink?: string;
}

/**
 * @interface
 * A consumer side list of share subscription synchronizations
 * @extends Array<ShareSubscriptionSynchronization>
 */
export interface ShareSubscriptionSynchronizationList extends Array<ShareSubscriptionSynchronization> {
  /**
   * The Url of next result page.
   */
  nextLink?: string;
}

/**
 * @interface
 * A consumer side list of source dataSets
 * @extends Array<ConsumerSourceDataSet>
 */
export interface ConsumerSourceDataSetList extends Array<ConsumerSourceDataSet> {
  /**
   * The Url of next result page.
   */
  nextLink?: string;
}

/**
 * @interface
 * List response for get Synchronization settings
 * @extends Array<SynchronizationSettingUnion>
 */
export interface SynchronizationSettingList extends Array<SynchronizationSettingUnion> {
  /**
   * The Url of next result page.
   */
  nextLink?: string;
}

/**
 * @interface
 * List response for get triggers
 * @extends Array<TriggerUnion>
 */
export interface TriggerList extends Array<TriggerUnion> {
  /**
   * The Url of next result page.
   */
  nextLink?: string;
}

/**
 * Defines values for Type.
 * Possible values include: 'SystemAssigned'
 * @readonly
 * @enum {string}
 */
export type Type = 'SystemAssigned';

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Succeeded', 'Creating', 'Deleting', 'Moving', 'Failed'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState = 'Succeeded' | 'Creating' | 'Deleting' | 'Moving' | 'Failed';

/**
 * Defines values for Status.
 * Possible values include: 'Accepted', 'InProgress', 'TransientFailure', 'Succeeded', 'Failed',
 * 'Canceled'
 * @readonly
 * @enum {string}
 */
export type Status = 'Accepted' | 'InProgress' | 'TransientFailure' | 'Succeeded' | 'Failed' | 'Canceled';

/**
 * Defines values for InvitationStatus.
 * Possible values include: 'Pending', 'Accepted', 'Rejected', 'Withdrawn'
 * @readonly
 * @enum {string}
 */
export type InvitationStatus = 'Pending' | 'Accepted' | 'Rejected' | 'Withdrawn';

/**
 * Defines values for ShareKind.
 * Possible values include: 'CopyBased', 'InPlace'
 * @readonly
 * @enum {string}
 */
export type ShareKind = 'CopyBased' | 'InPlace';

/**
 * Defines values for SynchronizationMode.
 * Possible values include: 'Incremental', 'FullSync'
 * @readonly
 * @enum {string}
 */
export type SynchronizationMode = 'Incremental' | 'FullSync';

/**
 * Defines values for DataSetType.
 * Possible values include: 'Blob', 'Container', 'BlobFolder', 'AdlsGen2FileSystem',
 * 'AdlsGen2Folder', 'AdlsGen2File', 'AdlsGen1Folder', 'AdlsGen1File', 'KustoCluster',
 * 'KustoDatabase', 'SqlDBTable', 'SqlDWTable'
 * @readonly
 * @enum {string}
 */
export type DataSetType = 'Blob' | 'Container' | 'BlobFolder' | 'AdlsGen2FileSystem' | 'AdlsGen2Folder' | 'AdlsGen2File' | 'AdlsGen1Folder' | 'AdlsGen1File' | 'KustoCluster' | 'KustoDatabase' | 'SqlDBTable' | 'SqlDWTable';

/**
 * Defines values for ShareSubscriptionStatus.
 * Possible values include: 'Active', 'Revoked', 'SourceDeleted', 'Revoking'
 * @readonly
 * @enum {string}
 */
export type ShareSubscriptionStatus = 'Active' | 'Revoked' | 'SourceDeleted' | 'Revoking';

/**
 * Defines values for RecurrenceInterval.
 * Possible values include: 'Hour', 'Day'
 * @readonly
 * @enum {string}
 */
export type RecurrenceInterval = 'Hour' | 'Day';

/**
 * Defines values for TriggerStatus.
 * Possible values include: 'Active', 'Inactive', 'SourceSynchronizationSettingDeleted'
 * @readonly
 * @enum {string}
 */
export type TriggerStatus = 'Active' | 'Inactive' | 'SourceSynchronizationSettingDeleted';

/**
 * Defines values for DataSetMappingStatus.
 * Possible values include: 'Ok', 'Broken'
 * @readonly
 * @enum {string}
 */
export type DataSetMappingStatus = 'Ok' | 'Broken';

/**
 * Defines values for OutputType.
 * Possible values include: 'Csv', 'Parquet'
 * @readonly
 * @enum {string}
 */
export type OutputType = 'Csv' | 'Parquet';

/**
 * Contains response data for the get operation.
 */
export type AccountsGetResponse = Account & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Account;
    };
};

/**
 * Contains response data for the create operation.
 */
export type AccountsCreateResponse = Account & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Account;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type AccountsDeleteMethodResponse = OperationResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationResponse;
    };
};

/**
 * Contains response data for the update operation.
 */
export type AccountsUpdateResponse = Account & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Account;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type AccountsListBySubscriptionResponse = AccountList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccountList;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type AccountsListByResourceGroupResponse = AccountList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccountList;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type AccountsBeginCreateResponse = Account & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Account;
    };
};

/**
 * Contains response data for the beginDeleteMethod operation.
 */
export type AccountsBeginDeleteMethodResponse = OperationResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationResponse;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type AccountsListBySubscriptionNextResponse = AccountList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccountList;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type AccountsListByResourceGroupNextResponse = AccountList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccountList;
    };
};

/**
 * Contains response data for the rejectInvitation operation.
 */
export type ConsumerInvitationsRejectInvitationResponse = ConsumerInvitation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConsumerInvitation;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ConsumerInvitationsGetResponse = ConsumerInvitation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConsumerInvitation;
    };
};

/**
 * Contains response data for the listInvitations operation.
 */
export type ConsumerInvitationsListInvitationsResponse = ConsumerInvitationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConsumerInvitationList;
    };
};

/**
 * Contains response data for the listInvitationsNext operation.
 */
export type ConsumerInvitationsListInvitationsNextResponse = ConsumerInvitationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConsumerInvitationList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DataSetsGetResponse = DataSetUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataSetUnion;
    };
};

/**
 * Contains response data for the create operation.
 */
export type DataSetsCreateResponse = DataSetUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataSetUnion;
    };
};

/**
 * Contains response data for the listByShare operation.
 */
export type DataSetsListByShareResponse = DataSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataSetList;
    };
};

/**
 * Contains response data for the listByShareNext operation.
 */
export type DataSetsListByShareNextResponse = DataSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataSetList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DataSetMappingsGetResponse = DataSetMappingUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataSetMappingUnion;
    };
};

/**
 * Contains response data for the create operation.
 */
export type DataSetMappingsCreateResponse = DataSetMappingUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataSetMappingUnion;
    };
};

/**
 * Contains response data for the listByShareSubscription operation.
 */
export type DataSetMappingsListByShareSubscriptionResponse = DataSetMappingList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataSetMappingList;
    };
};

/**
 * Contains response data for the listByShareSubscriptionNext operation.
 */
export type DataSetMappingsListByShareSubscriptionNextResponse = DataSetMappingList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataSetMappingList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type InvitationsGetResponse = Invitation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Invitation;
    };
};

/**
 * Contains response data for the create operation.
 */
export type InvitationsCreateResponse = Invitation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Invitation;
    };
};

/**
 * Contains response data for the listByShare operation.
 */
export type InvitationsListByShareResponse = InvitationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InvitationList;
    };
};

/**
 * Contains response data for the listByShareNext operation.
 */
export type InvitationsListByShareNextResponse = InvitationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InvitationList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SharesGetResponse = Share & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Share;
    };
};

/**
 * Contains response data for the create operation.
 */
export type SharesCreateResponse = Share & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Share;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type SharesDeleteMethodResponse = OperationResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationResponse;
    };
};

/**
 * Contains response data for the listByAccount operation.
 */
export type SharesListByAccountResponse = ShareList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ShareList;
    };
};

/**
 * Contains response data for the listSynchronizations operation.
 */
export type SharesListSynchronizationsResponse = ShareSynchronizationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ShareSynchronizationList;
    };
};

/**
 * Contains response data for the listSynchronizationDetails operation.
 */
export type SharesListSynchronizationDetailsResponse = SynchronizationDetailsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SynchronizationDetailsList;
    };
};

/**
 * Contains response data for the beginDeleteMethod operation.
 */
export type SharesBeginDeleteMethodResponse = OperationResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationResponse;
    };
};

/**
 * Contains response data for the listByAccountNext operation.
 */
export type SharesListByAccountNextResponse = ShareList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ShareList;
    };
};

/**
 * Contains response data for the listSynchronizationsNext operation.
 */
export type SharesListSynchronizationsNextResponse = ShareSynchronizationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ShareSynchronizationList;
    };
};

/**
 * Contains response data for the listSynchronizationDetailsNext operation.
 */
export type SharesListSynchronizationDetailsNextResponse = SynchronizationDetailsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SynchronizationDetailsList;
    };
};

/**
 * Contains response data for the getByShare operation.
 */
export type ProviderShareSubscriptionsGetByShareResponse = ProviderShareSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProviderShareSubscription;
    };
};

/**
 * Contains response data for the listByShare operation.
 */
export type ProviderShareSubscriptionsListByShareResponse = ProviderShareSubscriptionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProviderShareSubscriptionList;
    };
};

/**
 * Contains response data for the revoke operation.
 */
export type ProviderShareSubscriptionsRevokeResponse = ProviderShareSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProviderShareSubscription;
    };
};

/**
 * Contains response data for the reinstate operation.
 */
export type ProviderShareSubscriptionsReinstateResponse = ProviderShareSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProviderShareSubscription;
    };
};

/**
 * Contains response data for the beginRevoke operation.
 */
export type ProviderShareSubscriptionsBeginRevokeResponse = ProviderShareSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProviderShareSubscription;
    };
};

/**
 * Contains response data for the listByShareNext operation.
 */
export type ProviderShareSubscriptionsListByShareNextResponse = ProviderShareSubscriptionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProviderShareSubscriptionList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ShareSubscriptionsGetResponse = ShareSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ShareSubscription;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ShareSubscriptionsCreateResponse = ShareSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ShareSubscription;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type ShareSubscriptionsDeleteMethodResponse = OperationResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationResponse;
    };
};

/**
 * Contains response data for the listByAccount operation.
 */
export type ShareSubscriptionsListByAccountResponse = ShareSubscriptionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ShareSubscriptionList;
    };
};

/**
 * Contains response data for the listSourceShareSynchronizationSettings operation.
 */
export type ShareSubscriptionsListSourceShareSynchronizationSettingsResponse = SourceShareSynchronizationSettingList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SourceShareSynchronizationSettingList;
    };
};

/**
 * Contains response data for the listSynchronizations operation.
 */
export type ShareSubscriptionsListSynchronizationsResponse = ShareSubscriptionSynchronizationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ShareSubscriptionSynchronizationList;
    };
};

/**
 * Contains response data for the listSynchronizationDetails operation.
 */
export type ShareSubscriptionsListSynchronizationDetailsResponse = SynchronizationDetailsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SynchronizationDetailsList;
    };
};

/**
 * Contains response data for the synchronizeMethod operation.
 */
export type ShareSubscriptionsSynchronizeMethodResponse = ShareSubscriptionSynchronization & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ShareSubscriptionSynchronization;
    };
};

/**
 * Contains response data for the cancelSynchronization operation.
 */
export type ShareSubscriptionsCancelSynchronizationResponse = ShareSubscriptionSynchronization & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ShareSubscriptionSynchronization;
    };
};

/**
 * Contains response data for the beginDeleteMethod operation.
 */
export type ShareSubscriptionsBeginDeleteMethodResponse = OperationResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationResponse;
    };
};

/**
 * Contains response data for the beginSynchronizeMethod operation.
 */
export type ShareSubscriptionsBeginSynchronizeMethodResponse = ShareSubscriptionSynchronization & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ShareSubscriptionSynchronization;
    };
};

/**
 * Contains response data for the beginCancelSynchronization operation.
 */
export type ShareSubscriptionsBeginCancelSynchronizationResponse = ShareSubscriptionSynchronization & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ShareSubscriptionSynchronization;
    };
};

/**
 * Contains response data for the listByAccountNext operation.
 */
export type ShareSubscriptionsListByAccountNextResponse = ShareSubscriptionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ShareSubscriptionList;
    };
};

/**
 * Contains response data for the listSourceShareSynchronizationSettingsNext operation.
 */
export type ShareSubscriptionsListSourceShareSynchronizationSettingsNextResponse = SourceShareSynchronizationSettingList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SourceShareSynchronizationSettingList;
    };
};

/**
 * Contains response data for the listSynchronizationsNext operation.
 */
export type ShareSubscriptionsListSynchronizationsNextResponse = ShareSubscriptionSynchronizationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ShareSubscriptionSynchronizationList;
    };
};

/**
 * Contains response data for the listSynchronizationDetailsNext operation.
 */
export type ShareSubscriptionsListSynchronizationDetailsNextResponse = SynchronizationDetailsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SynchronizationDetailsList;
    };
};

/**
 * Contains response data for the listByShareSubscription operation.
 */
export type ConsumerSourceDataSetsListByShareSubscriptionResponse = ConsumerSourceDataSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConsumerSourceDataSetList;
    };
};

/**
 * Contains response data for the listByShareSubscriptionNext operation.
 */
export type ConsumerSourceDataSetsListByShareSubscriptionNextResponse = ConsumerSourceDataSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConsumerSourceDataSetList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SynchronizationSettingsGetResponse = SynchronizationSettingUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SynchronizationSettingUnion;
    };
};

/**
 * Contains response data for the create operation.
 */
export type SynchronizationSettingsCreateResponse = SynchronizationSettingUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SynchronizationSettingUnion;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type SynchronizationSettingsDeleteMethodResponse = OperationResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationResponse;
    };
};

/**
 * Contains response data for the listByShare operation.
 */
export type SynchronizationSettingsListByShareResponse = SynchronizationSettingList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SynchronizationSettingList;
    };
};

/**
 * Contains response data for the beginDeleteMethod operation.
 */
export type SynchronizationSettingsBeginDeleteMethodResponse = OperationResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationResponse;
    };
};

/**
 * Contains response data for the listByShareNext operation.
 */
export type SynchronizationSettingsListByShareNextResponse = SynchronizationSettingList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SynchronizationSettingList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type TriggersGetResponse = TriggerUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggerUnion;
    };
};

/**
 * Contains response data for the create operation.
 */
export type TriggersCreateResponse = TriggerUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggerUnion;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type TriggersDeleteMethodResponse = OperationResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationResponse;
    };
};

/**
 * Contains response data for the listByShareSubscription operation.
 */
export type TriggersListByShareSubscriptionResponse = TriggerList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggerList;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type TriggersBeginCreateResponse = TriggerUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggerUnion;
    };
};

/**
 * Contains response data for the beginDeleteMethod operation.
 */
export type TriggersBeginDeleteMethodResponse = OperationResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationResponse;
    };
};

/**
 * Contains response data for the listByShareSubscriptionNext operation.
 */
export type TriggersListByShareSubscriptionNextResponse = TriggerList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggerList;
    };
};
