/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export type SAPSizingRecommendationResultUnion =
  | SAPSizingRecommendationResult
  | SingleServerRecommendationResult
  | ThreeTierRecommendationResult;
export type SAPConfigurationUnion =
  | SAPConfiguration
  | DiscoveryConfiguration
  | DeploymentConfiguration
  | DeploymentWithOSConfiguration;
export type ProviderSpecificPropertiesUnion =
  | ProviderSpecificProperties
  | HanaDbProviderInstanceProperties
  | SapNetWeaverProviderInstanceProperties
  | PrometheusOSProviderInstanceProperties
  | DB2ProviderInstanceProperties
  | PrometheusHaClusterProviderInstanceProperties
  | MsSqlServerProviderInstanceProperties;
export type OSConfigurationUnion =
  | OSConfiguration
  | WindowsConfiguration
  | LinuxConfiguration;
export type InfrastructureConfigurationUnion =
  | InfrastructureConfiguration
  | SingleServerConfiguration
  | ThreeTierConfiguration;
export type SoftwareConfigurationUnion =
  | SoftwareConfiguration
  | ServiceInitiatedSoftwareConfiguration
  | SAPInstallWithoutOSConfigSoftwareConfiguration;

/** Php workload resource list */
export interface PhpWorkloadResourceList {
  /** List of resources in current page */
  value?: PhpWorkloadResource[];
  /** Link to next page of resources */
  nextLink?: string;
}

/** Managed resource group configuration */
export interface ManagedRGConfiguration {
  /** Managed resource group name */
  name?: string;
}

/** User profile to configure on a compute resources such as VM, VMSS */
export interface UserProfile {
  /** User name */
  userName: string;
  /** SSH public key data */
  sshPublicKey: string;
}

/** VM or VMSS node profile */
export interface NodeProfile {
  /** VM or VMSS name */
  name?: string;
  /** VM SKU for node(s) */
  nodeSku: string;
  /** OS image used for creating the nodes */
  osImage: OsImageProfile;
  /** OS disk details */
  osDisk: DiskInfo;
  /** Data disks details. This property is not in use right now */
  dataDisks?: DiskInfo[];
  /**
   * VM/VMSS resource ARM Ids
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nodeResourceIds?: string[];
}

/** OS image profile */
export interface OsImageProfile {
  /** OS image publisher */
  publisher?: OSImagePublisher;
  /** OS image offer */
  offer?: OSImageOffer;
  /** OS image sku */
  sku?: OSImageSku;
  /** OS image version */
  version?: OSImageVersion;
}

/** Disk resource creation details */
export interface DiskInfo {
  /** Storage type */
  storageType: DiskStorageType;
  /** Disk size in GB */
  sizeInGB?: number;
}

/** Network profile */
export interface NetworkProfile {
  /** Load balancer type */
  loadBalancerType: LoadBalancerType;
  /** Load balancer SKU */
  loadBalancerSku?: string;
  /** Load balancer tier */
  loadBalancerTier?: string;
  /** Capacity, applicable only for Application Gateway */
  capacity?: number;
  /** Whether to enable Azure front door */
  azureFrontDoorEnabled?: AzureFrontDoorEnabled;
  /**
   * Virtual network resource Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vNetResourceId?: string;
  /**
   * Azure Loadbalancer or ApplicationGateway resource Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly loadBalancerResourceId?: string;
  /**
   * Azure front door resource id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly azureFrontDoorResourceId?: string;
  /**
   * Loadbalancer front-end IP address resource Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly frontEndPublicIpResourceId?: string;
  /**
   * List of outbound public IP resource IDs
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly outboundPublicIpResourceIds?: string[];
}

/** Workload database profile */
export interface DatabaseProfile {
  /** Database type */
  type: DatabaseType;
  /** Database server name */
  serverName?: string;
  /** Database version */
  version?: string;
  /** The name of the server SKU, e.g. Standard_D32s_v4 */
  sku: string;
  /** Tier of the server SKU */
  tier: DatabaseTier;
  /** Whether to enable HA for the server */
  haEnabled?: HAEnabled;
  /** SKU name for database storage */
  storageSku?: string;
  /** Database storage size in GB */
  storageInGB?: number;
  /** Storage IOPS for the server */
  storageIops?: number;
  /** Backup retention days for the server */
  backupRetentionDays?: number;
  /** Whether to enable SSL enforcement on the database */
  sslEnforcementEnabled?: EnableSslEnforcement;
  /**
   * Azure Database Server resource Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serverResourceId?: string;
}

/** Workload website profile */
export interface SiteProfile {
  /** Domain name for the application site URL */
  domainName?: string;
}

/** File share profile */
export interface FileshareProfile {
  /** Share type */
  shareType: FileShareType;
  /** File share backing storage type */
  storageType: FileShareStorageType;
  /** File share size in GB */
  shareSizeInGB?: number;
  /**
   * File share storage resource id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly storageResourceId?: string;
  /**
   * File share name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly shareName?: string;
}

/** PHP profile */
export interface PhpProfile {
  /** PHP version */
  version: PHPVersion;
}

/** Cache profile */
export interface CacheProfile {
  /** Cache name */
  name?: string;
  /** Cache SKU name */
  skuName: string;
  /** Cache family */
  family: RedisCacheFamily;
  /** Cache capacity */
  capacity: number;
  /**
   * Cache resource Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cacheResourceId?: string;
}

/** Backup profile */
export interface BackupProfile {
  /** Whether to enable Azure backup for the workload */
  backupEnabled: EnableBackup;
  /**
   * Backup vault resource Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vaultResourceId?: string;
}

/** The resource model definition representing SKU */
export interface Sku {
  /** The name of the SKU. Ex - P3. It is typically a letter+number code */
  name: string;
  /** This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT. */
  tier?: SkuTier;
  /** The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. */
  size?: string;
  /** If the service has different generations of hardware, for the same SKU, then that can be captured here. */
  family?: string;
  /** If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted. */
  capacity?: number;
}

/** Managed service identity (user assigned identities) */
export interface UserAssignedServiceIdentity {
  /** Type of manage identity */
  type: ManagedServiceIdentityType;
  /** User assigned identities dictionary */
  userAssignedIdentities?: { [propertyName: string]: UserAssignedIdentity };
}

/** User assigned identity properties */
export interface UserAssignedIdentity {
  /**
   * The principal ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The client ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clientId?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** Resource patch request body */
export interface PatchResourceRequestBody {
  /** Resource tags */
  tags?: { [propertyName: string]: string };
  identity?: PatchResourceRequestBodyIdentity;
}

/** WordPress instance resource list */
export interface WordpressInstanceResourceList {
  /** List of resources in current page */
  value?: WordpressInstanceResource[];
  /** Link to next page of resources */
  nextLink?: string;
}

/** The SAP Sizing Recommendation request. */
export interface SAPSizingRecommendationRequest {
  /** The geo-location where the resource is to be created. */
  appLocation: string;
  /** Defines the environment type - Production/Non Production. */
  environment: SAPEnvironmentType;
  /** Defines the SAP Product type. */
  sapProduct: SAPProductType;
  /** The deployment type. Eg: SingleServer/ThreeTier */
  deploymentType: SAPDeploymentType;
  /** The SAP Application Performance Standard measurement. */
  saps: number;
  /** The database memory configuration. */
  dbMemory: number;
  /** The database type. */
  databaseType: SAPDatabaseType;
  /** The DB scale method. */
  dbScaleMethod?: SAPDatabaseScaleMethod;
  /** The high availability type. */
  highAvailabilityType?: SAPHighAvailabilityType;
}

/** The SAP sizing recommendation result. */
export interface SAPSizingRecommendationResult {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  deploymentType: "SingleServer" | "ThreeTier";
}

/** The SAP request to get list of supported SKUs. */
export interface SAPSupportedSkusRequest {
  /** The geo-location where the resource is to be created. */
  appLocation: string;
  /** Defines the environment type - Production/Non Production. */
  environment: SAPEnvironmentType;
  /** Defines the SAP Product type. */
  sapProduct: SAPProductType;
  /** The deployment type. Eg: SingleServer/ThreeTier */
  deploymentType: SAPDeploymentType;
  /** The database type. Eg: HANA, DB2, etc */
  databaseType: SAPDatabaseType;
  /** The high availability type. */
  highAvailabilityType?: SAPHighAvailabilityType;
}

/** The list of supported SKUs for different resources which are part of SAP deployment. */
export interface SAPSupportedResourceSkusResult {
  /** Gets the list of SAP supported SKUs. */
  supportedSkus?: SAPSupportedSku[];
}

/** The SAP supported SKU. */
export interface SAPSupportedSku {
  /** The VM Sku. */
  vmSku?: string;
  /** True if the Sku is certified for App server in the SAP system. */
  isAppServerCertified?: boolean;
  /** True if the Sku is certified for Database server in the SAP system. */
  isDatabaseCertified?: boolean;
}

/** The SAP request to get list of disk configurations. */
export interface SAPDiskConfigurationsRequest {
  /** The geo-location where the SAP resources will be created. */
  appLocation: string;
  /** Defines the environment type - Production/Non Production. */
  environment: SAPEnvironmentType;
  /** Defines the SAP Product type. */
  sapProduct: SAPProductType;
  /** The database type. Eg: HANA, DB2, etc */
  databaseType: SAPDatabaseType;
  /** The deployment type. Eg: SingleServer/ThreeTier */
  deploymentType: SAPDeploymentType;
  /** The VM SKU for database instance. */
  dbVmSku: string;
}

/** The list of disk configuration for vmSku which are part of SAP deployment. */
export interface SAPDiskConfigurationsResult {
  /** Gets the list of Disk Configurations. */
  diskConfigurations?: SAPDiskConfiguration[];
}

/** The SAP Disk Configuration. */
export interface SAPDiskConfiguration {
  /** The volume name. */
  volume?: string;
  /** The disk type. */
  diskType?: string;
  /** The disk count. */
  diskCount?: number;
  /** The disk size in GB. */
  diskSizeGB?: number;
  /** The disk Iops. */
  diskIopsReadWrite?: number;
  /** The disk provisioned throughput in MBps. */
  diskMBpsReadWrite?: number;
  /** The disk storage type */
  diskStorageType?: string;
}

/** The SAP request to get list of availability zones. */
export interface SAPAvailabilityZoneDetailsRequest {
  /** The geo-location where the SAP resources will be created. */
  appLocation: string;
  /** Defines the SAP Product type. */
  sapProduct: SAPProductType;
  /** The database type. Eg: HANA, DB2, etc */
  databaseType: SAPDatabaseType;
}

/** The list of supported availability zone pairs which are part of SAP HA deployment. */
export interface SAPAvailabilityZoneDetailsResult {
  /** Gets the list of availability zone pairs. */
  availabilityZonePairs?: SAPAvailabilityZonePair[];
}

/** The SAP Availability Zone Pair. */
export interface SAPAvailabilityZonePair {
  /** The zone A. */
  zoneA?: number;
  /** The zone B. */
  zoneB?: number;
}

/** The SAP Configuration. */
export interface SAPConfiguration {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  configurationType: "Discovery" | "Deployment" | "DeploymentWithOSConfig";
}

/** An error response from the Virtual Instance for SAP Workload service. */
export interface SAPVirtualInstanceError {
  /** The Virtual Instance for SAP error body. */
  properties?: ErrorDefinition;
}

/** Error definition. */
export interface ErrorDefinition {
  /**
   * Service specific error code which serves as the substatus for the HTTP error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * Description of the error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * Internal error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDefinition[];
}

/** Defines the request body for updating Virtual Instance for SAP. */
export interface UpdateSAPVirtualInstanceRequest {
  /** Gets or sets the Resource tags. */
  tags?: { [propertyName: string]: string };
  /** Managed service identity (user assigned identities) */
  identity?: UserAssignedServiceIdentity;
}

/** The current status of an async operation. */
export interface OperationStatusResult {
  /** Fully qualified ID for the async operation. */
  id?: string;
  /** Name of the async operation. */
  name?: string;
  /** Operation status. */
  status: string;
  /** Percent of the operation that is complete. */
  percentComplete?: number;
  /** The start time of the operation. */
  startTime?: Date;
  /** The end time of the operation. */
  endTime?: Date;
  /** The operations list. */
  operations?: OperationStatusResult[];
  /** If present, details of the operation error. */
  error?: ErrorDetail;
}

/** Defines the collection of Virtual Instance for SAP. */
export interface SAPVirtualInstanceList {
  /** Gets the list of Virtual Instances for SAP. */
  value?: SAPVirtualInstance[];
  /** Gets the value of next link. */
  nextLink?: string;
}

/** Defines the SAP message server properties. */
export interface MessageServerProperties {
  /**
   * The message server port.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly msPort?: number;
  /**
   * The message server internal MS port.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly internalMsPort?: number;
  /**
   * The message server http port.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly httpPort?: number;
  /**
   * The message server https port.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly httpsPort?: number;
  /**
   * The message server SAP host name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostname?: string;
  /**
   * The message server IP Address.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ipAddress?: string;
  /**
   * Defines the SAP Instance health.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly health?: SAPHealthState;
}

/** Defines the SAP enqueue server properties. */
export interface EnqueueServerProperties {
  /**
   * The enqueue server SAP host name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostname?: string;
  /**
   * The enqueue server SAP IP Address.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ipAddress?: string;
  /**
   * The enqueue server Port.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly port?: number;
  /**
   * Defines the SAP Instance health.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly health?: SAPHealthState;
}

/** Defines the SAP Gateway Server properties. */
export interface GatewayServerProperties {
  /**
   * The gateway Port.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly port?: number;
  /**
   * Defines the SAP Instance health.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly health?: SAPHealthState;
}

/** Defines the SAP ERS Server properties. */
export interface EnqueueReplicationServerProperties {
  /**
   * Defines the type of Enqueue Replication Server.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ersVersion?: EnqueueReplicationServerType;
  /**
   * The ERS server instance id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly instanceNo?: string;
  /**
   * The ERS server SAP host name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostname?: string;
  /**
   * The ERS server SAP kernel version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly kernelVersion?: string;
  /**
   * The ERS server SAP kernel patch.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly kernelPatch?: string;
  /**
   * The ERS server SAP IP Address.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ipAddress?: string;
  /**
   * Defines the SAP Instance health.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly health?: SAPHealthState;
}

/** The Central Server VM Details. */
export interface CentralServerVmDetails {
  /**
   * Defines the type of central server VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: CentralServerVirtualMachineType;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly virtualMachineId?: string;
}

/** Defines the request body for updating SAP Central Instance. */
export interface UpdateSAPCentralInstanceRequest {
  /** Gets or sets the Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** Defines the collection of SAP Central Instances. */
export interface SAPCentralInstanceList {
  /** Gets the list of SAP central instances. */
  value?: SAPCentralServerInstance[];
  /** Gets the value of next link. */
  nextLink?: string;
}

/** The Database VM Details. */
export interface DatabaseVmDetails {
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly virtualMachineId?: string;
  /**
   * Defines the SAP Instance status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: SAPVirtualInstanceStatus;
}

/** Defines the request body for updating SAP Database Instance. */
export interface UpdateSAPDatabaseInstanceRequest {
  /** Gets or sets the Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** Defines the collection of SAP Database Instances. */
export interface SAPDatabaseInstanceList {
  /** Gets the list of SAP Database instances. */
  value?: SAPDatabaseInstance[];
  /** Gets the value of next link. */
  nextLink?: string;
}

/** Defines the request body for updating SAP Application Instance. */
export interface UpdateSAPApplicationInstanceRequest {
  /** Gets or sets the Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** Defines the collection of SAP Application Server Instances. */
export interface SAPApplicationServerInstanceList {
  /** Gets the list of SAP Application Server instances. */
  value?: SAPApplicationServerInstance[];
  /** Gets the value of next link. */
  nextLink?: string;
}

/** Stop SAP Request. */
export interface StopRequest {
  /** A boolean to specify if the SAP system should be hard-stopped. */
  hardStop?: boolean;
}

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** The response from the List SAP monitors operation. */
export interface MonitorListResult {
  /** The list of SAP monitors. */
  value?: Monitor[];
  /** The URL to get the next set of SAP monitors. */
  nextLink?: string;
}

/** Standard error object. */
export interface ErrorModel {
  /**
   * Server-defined set of error codes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * Human-readable representation of the error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * Target of the error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * Array of details about specific errors that led to this reported error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorModel[];
  /**
   * Object containing more specific information than  the current object about the error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly innerError?: ErrorInnerError;
}

/** Object containing more specific information than  the current object about the error. */
export interface ErrorInnerError {
  /** Standard error object. */
  innerError?: ErrorModel;
}

/** Defines the request body for updating SAP monitor resource. */
export interface UpdateMonitorRequest {
  /** Gets or sets the Resource tags. */
  tags?: { [propertyName: string]: string };
  /** Managed service identity (user assigned identities) */
  identity?: UserAssignedServiceIdentity;
}

/** The response from the List provider instances operation. */
export interface ProviderInstanceListResult {
  /** The list of provider instances. */
  value?: ProviderInstance[];
  /** The URL to get the next set of provider instances. */
  nextLink?: string;
}

/** Gets or sets the provider specific properties. */
export interface ProviderSpecificProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  providerType:
    | "SapHana"
    | "SapNetWeaver"
    | "PrometheusOS"
    | "Db2"
    | "PrometheusHaCluster"
    | "MsSqlServer";
}

/** A list of SKUs supported by an Azure Resource Provider. */
export interface SkusListResult {
  /**
   * List of SKUs supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: SkuDefinition[];
  /**
   * URL to get the next set of SKU list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** The SKU definition. */
export interface SkuDefinition {
  /** The name of the SKU. */
  name: string;
  /** Resource type the SKU applicable for. */
  resourceType?: string;
  /** This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT. */
  tier?: string;
  /** The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. */
  size?: string;
  /** If the service has different generations of hardware, for the same SKU, then that can be captured here. */
  family?: string;
  /** If the service has different kinds of hardware, for the same SKU, then that can be captured here. */
  kind?: string;
  /** List of locations where this SKU is available. */
  locations?: string[];
  /** List of locations where this SKU is available. */
  locationInfo?: SkuLocationAndZones[];
  /** If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted. */
  capacity?: Record<string, unknown>;
  /** The SKU costs. */
  costs?: SkuCost[];
  /** The SKU capabilities. */
  capabilities?: SkuCapability[];
  /** The SKU restrictions. */
  restrictions?: SkuRestriction[];
}

/** The SKU location and zone. */
export interface SkuLocationAndZones {
  /** The location of the SKU. */
  location?: string;
  /** The availability zones of SKU location. */
  zones?: string[];
  /** The availability zone details of the SKU location. */
  zoneDetails?: SkuZoneDetail[];
  /** The extended locations of SKU. */
  extendedLocations?: string[];
  /** Type of the extended location. */
  type?: LocationType;
}

/** The SKU zone details. */
export interface SkuZoneDetail {
  /** The physical zones. */
  zones?: string[];
  /** The capabilities. */
  capabilities?: SkuCapability[];
}

/** The SKU capability definition. */
export interface SkuCapability {
  /** The capability name. */
  name?: string;
  /** The capability value. */
  value?: string;
}

/** The SKU cost definition. */
export interface SkuCost {
  /** Billing meter id. */
  meterId?: string;
  /** The quantity. */
  quantity?: number;
  /** The extended unit. */
  extendedUnit?: string;
}

/** The SKU restriction definition. */
export interface SkuRestriction {
  /** The SKU restriction type. */
  type?: SkuRestrictionType;
  /** Restriction values. */
  values?: string[];
  /** The restriction information. */
  restrictionInfo?: Record<string, unknown>;
  /** The SKU restriction reason code. */
  reasonCode?: SkuRestrictionReasonCode;
}

/** Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations. NOTE: Image reference publisher and offer can only be set when you create the scale set. */
export interface ImageReference {
  /** The image publisher. */
  publisher?: string;
  /** Specifies the offer of the platform image or marketplace image used to create the virtual machine. */
  offer?: string;
  /** The image SKU. */
  sku?: string;
  /** Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available. */
  version?: string;
  /**
   * Specifies in decimal numbers, the version of platform image or marketplace image used to create the virtual machine. This readonly field differs from 'version', only if the value specified in 'version' field is 'latest'.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly exactVersion?: string;
  /** Specified the shared gallery image unique id for vm deployment. This can be fetched from shared gallery image GET call. */
  sharedGalleryImageId?: string;
}

/** Defines the OS configuration. */
export interface OSConfiguration {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  osType: "Windows" | "Linux";
}

/** Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed. */
export interface SshPublicKey {
  /** SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure](https://docs.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed). */
  keyData?: string;
}

/** SSH configuration for Linux based VMs running on Azure */
export interface SshConfiguration {
  /** The list of SSH public keys used to authenticate with linux based VMs. */
  publicKeys?: SshPublicKey[];
}

/** The SSH Key-pair used to authenticate with the VM. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure](https://docs.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed). */
export interface SshKeyPair {
  /** SSH public key */
  publicKey?: string;
  /** SSH private key. */
  privateKey?: string;
}

/** Specifies the operating system settings for the virtual machine. Some of the settings cannot be changed once VM is provisioned. */
export interface OSProfile {
  /** Specifies the name of the administrator account. <br><br> This property cannot be updated after the VM is created. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters. */
  adminUsername?: string;
  /** Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection) */
  adminPassword?: string;
  /** Specifies Windows operating system settings on the virtual machine. */
  osConfiguration?: OSConfigurationUnion;
}

/** Defines the virtual machine configuration. */
export interface VirtualMachineConfiguration {
  /** The virtual machine size. */
  vmSize: string;
  /** The image reference. */
  imageReference: ImageReference;
  /** The OS profile. */
  osProfile: OSProfile;
}

/** Defines the network configuration for SAP infrastructure */
export interface NetworkConfiguration {
  /** Specifies whether a secondary IP address should be added to the network interface on all VMs */
  isSecondaryIpEnabled?: boolean;
}

/** Deploy SAP Infrastructure Details. */
export interface InfrastructureConfiguration {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  deploymentType: "SingleServer" | "ThreeTier";
  /** The application resource group where SAP system resources will be deployed. */
  appResourceGroup: string;
}

/** Gets or sets the central server configuration. */
export interface CentralServerConfiguration {
  /** The subnet id. */
  subnetId: string;
  /** Gets or sets the virtual machine configuration. */
  virtualMachineConfiguration: VirtualMachineConfiguration;
  /** The number of central server VMs. */
  instanceCount: number;
}

/** Gets or sets the database configuration. */
export interface DatabaseConfiguration {
  /** The database type. */
  databaseType?: SAPDatabaseType;
  /** The subnet id. */
  subnetId: string;
  /** Gets or sets the virtual machine configuration. */
  virtualMachineConfiguration: VirtualMachineConfiguration;
  /** The number of database VMs. */
  instanceCount: number;
}

/** Gets or sets the application server configuration. */
export interface ApplicationServerConfiguration {
  /** The subnet id. */
  subnetId: string;
  /** Gets or sets the virtual machine configuration. */
  virtualMachineConfiguration: VirtualMachineConfiguration;
  /** The number of app server instances. */
  instanceCount: number;
}

/** Gets or sets the high availability configuration. */
export interface HighAvailabilityConfiguration {
  /** The high availability type. */
  highAvailabilityType: SAPHighAvailabilityType;
}

/** The SAP Software configuration Input. */
export interface SoftwareConfiguration {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  softwareInstallationType: "ServiceInitiated" | "SAPInstallWithoutOSConfig";
}

/** Gets or sets the HA software configuration. */
export interface HighAvailabilitySoftwareConfiguration {
  /** The fencing client id. */
  fencingClientId: string;
  /** The fencing client id secret/password. The secret should never expire. This will be used pacemaker to start/stop the cluster VMs. */
  fencingClientPassword: string;
}

/** Defines the OS and SAP Configurations for Deployment */
export interface OsSapConfiguration {
  /** The url and storage account ID where deployer VM packages are uploaded */
  deployerVmPackages?: DeployerVmPackages;
  /** The FQDN to set for the SAP system */
  sapFqdn?: string;
}

/** Defines the url and storage account ID where deployer VM packages are uploaded */
export interface DeployerVmPackages {
  /** The URL to the deployer VM packages file. */
  url?: string;
  /** The deployer VM packages storage account id */
  storageAccountId?: string;
}

/** Defines the workload operation. */
export interface OperationsDisplayDefinition {
  /** Defines the workload provider. */
  provider: string;
  /** Defines the workload resource. */
  resource: string;
  /** Defines the workload operation. */
  operation: string;
  /** Describes the workload operation. */
  description: string;
}

/** Properties of an Operation. */
export interface OperationsDefinition {
  /** Name of the operation. */
  name: string;
  /** Indicates whether the operation applies to data-plane. */
  isDataAction?: boolean;
  /** Defines the workload operation origin. */
  origin?: OperationProperties;
  /** Display information of the operation. */
  display: OperationsDefinitionDisplay;
  /** Defines the action type of workload operation. */
  actionType?: WorkloadMonitorActionType;
  /** Defines the workload operation properties. */
  properties?: any;
}

/** Defines the workload operation definition response. */
export interface OperationsDefinitionArrayResponseWithContinuation {
  /** Defines the workload operation definition response properties. */
  value?: OperationsDefinition[];
  /** The URL to get to the next set of results, if there are any. */
  nextLink?: string;
}

/** Tags field of the resource. */
export interface Tags {
  /** Tags field of the resource. */
  tags?: { [propertyName: string]: string };
}

/** The SKU restriction information. */
export interface RestrictionInfo {
  /** The restriction locations. */
  locations?: string[];
  /** The restriction zones. */
  zones?: string[];
}

/** The SKU capacity. */
export interface SkuCapacity {
  /** Minimum capacity value. */
  minimum?: number;
  /** Maximum capacity value. */
  maximum?: number;
  /** Default capacity value. */
  default?: number;
  /** Scale type of the SKU capacity. */
  scaleType?: SkuScaleType;
}

/** VMSS profile */
export interface VmssNodesProfile extends NodeProfile {
  /** Minimum number of nodes for autoscale */
  autoScaleMinCount?: number;
  /** Maximum number of nodes for autoscale */
  autoScaleMaxCount?: number;
}

/** Search profile */
export interface SearchProfile extends NodeProfile {
  /** Search type */
  searchType: SearchType;
}

/** Identity for the resource. Currently not supported */
export interface PhpWorkloadResourceIdentity
  extends UserAssignedServiceIdentity {}

export interface PatchResourceRequestBodyIdentity
  extends UserAssignedServiceIdentity {}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** Defines the workload operation content. */
export interface OperationsContent extends Resource {
  /** Name of the operation. */
  namePropertiesName?: string;
  /** Indicates whether the operation applies to data-plane. */
  isDataAction?: boolean;
  /** Defines the workload operation origin. */
  origin?: OperationProperties;
  /** Display information of the operation. */
  display?: OperationsDefinitionDisplay;
  /** Defines the action type of workload operation. */
  actionType?: WorkloadMonitorActionType;
  /** Defines the workload operation properties. */
  properties?: any;
}

/** The recommended configuration for a single server SAP system. */
export interface SingleServerRecommendationResult
  extends SAPSizingRecommendationResult {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  deploymentType: "SingleServer";
  /** The recommended VM SKU for single server. */
  vmSku?: string;
}

/** The recommended configuration for a three tier SAP system. */
export interface ThreeTierRecommendationResult
  extends SAPSizingRecommendationResult {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  deploymentType: "ThreeTier";
  /** The database VM SKU. */
  dbVmSku?: string;
  /** The database server instance count. */
  databaseInstanceCount?: number;
  /** The central server VM SKU. */
  centralServerVmSku?: string;
  /** The central server instance count. */
  centralServerInstanceCount?: number;
  /** The application server VM SKU. */
  applicationServerVmSku?: string;
  /** The application server instance count. */
  applicationServerInstanceCount?: number;
}

/** Discovery Details. */
export interface DiscoveryConfiguration extends SAPConfiguration {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  configurationType: "Discovery";
  /** The virtual machine ID of the Central Server. */
  centralServerVmId?: string;
  /**
   * The geo-location where the SAP system exists.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly appLocation?: string;
}

/** Deployment Configuration. */
export interface DeploymentConfiguration extends SAPConfiguration {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  configurationType: "Deployment";
  /** The geo-location where the SAP system is to be created. */
  appLocation?: string;
  /** The infrastructure configuration. */
  infrastructureConfiguration?: InfrastructureConfigurationUnion;
  /** The software configuration. */
  softwareConfiguration?: SoftwareConfigurationUnion;
}

/** Deployment along with OS Configuration. */
export interface DeploymentWithOSConfiguration extends SAPConfiguration {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  configurationType: "DeploymentWithOSConfig";
  /** The geo-location where the SAP system is to be created. */
  appLocation?: string;
  /** The infrastructure configuration. */
  infrastructureConfiguration?: InfrastructureConfigurationUnion;
  /** The software configuration. */
  softwareConfiguration?: SoftwareConfigurationUnion;
  /** The OS and SAP configuration. */
  osSapConfiguration?: OsSapConfiguration;
}

/** Defines the SAP monitor errors. */
export interface MonitorPropertiesErrors extends ErrorModel {}

/** Defines the provider instance errors. */
export interface ProviderInstancePropertiesErrors extends ErrorModel {}

/** Gets or sets the provider properties. */
export interface HanaDbProviderInstanceProperties
  extends ProviderSpecificProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  providerType: "SapHana";
  /** Gets or sets the target virtual machine size. */
  hostname?: string;
  /** Gets or sets the hana database name. */
  dbName?: string;
  /** Gets or sets the database sql port. */
  sqlPort?: string;
  /** Gets or sets the database instance number. */
  instanceNumber?: string;
  /** Gets or sets the database user name. */
  dbUsername?: string;
  /** Gets or sets the database password. */
  dbPassword?: string;
  /** Gets or sets the key vault URI to secret with the database password. */
  dbPasswordUri?: string;
  /** Gets or sets the blob URI to SSL certificate for the DB. */
  dbSslCertificateUri?: string;
  /** Gets or sets the hostname(s) in the SSL certificate. */
  sslHostNameInCertificate?: string;
}

/** Gets or sets the provider properties. */
export interface SapNetWeaverProviderInstanceProperties
  extends ProviderSpecificProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  providerType: "SapNetWeaver";
  /** Gets or sets the SAP System Identifier */
  sapSid?: string;
  /** Gets or sets the target virtual machine IP Address/FQDN. */
  sapHostname?: string;
  /** Gets or sets the instance number of SAP NetWeaver. */
  sapInstanceNr?: string;
  /** Gets or sets the list of HostFile Entries */
  sapHostFileEntries?: string[];
  /** Gets or sets the SAP user name. */
  sapUsername?: string;
  /** Sets the SAP password. */
  sapPassword?: string;
  /** Gets or sets the key vault URI to secret with the SAP password. */
  sapPasswordUri?: string;
  /** Gets or sets the SAP Client ID. */
  sapClientId?: string;
  /** Gets or sets the SAP HTTP port number. */
  sapPortNumber?: string;
  /** Gets or sets the blob URI to SSL certificate for the SAP system. */
  sapSslCertificateUri?: string;
}

/** Gets or sets the PrometheusOS provider properties. */
export interface PrometheusOSProviderInstanceProperties
  extends ProviderSpecificProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  providerType: "PrometheusOS";
  /** URL of the Node Exporter endpoint */
  prometheusUrl?: string;
}

/** Gets or sets the DB2 provider properties. */
export interface DB2ProviderInstanceProperties
  extends ProviderSpecificProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  providerType: "Db2";
  /** Gets or sets the target virtual machine name. */
  hostname?: string;
  /** Gets or sets the db2 database name. */
  dbName?: string;
  /** Gets or sets the db2 database sql port. */
  dbPort?: string;
  /** Gets or sets the db2 database user name. */
  dbUsername?: string;
  /** Gets or sets the db2 database password. */
  dbPassword?: string;
  /** Gets or sets the key vault URI to secret with the database password. */
  dbPasswordUri?: string;
  /** Gets or sets the SAP System Identifier */
  sapSid?: string;
}

/** Gets or sets the PrometheusHaCluster provider properties. */
export interface PrometheusHaClusterProviderInstanceProperties
  extends ProviderSpecificProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  providerType: "PrometheusHaCluster";
  /** URL of the Node Exporter endpoint. */
  prometheusUrl?: string;
  /** Gets or sets the target machine name. */
  hostname?: string;
  /** Gets or sets the cluster sid. */
  sid?: string;
  /** Gets or sets the clusterName. */
  clusterName?: string;
}

/** Gets or sets the SQL server provider properties. */
export interface MsSqlServerProviderInstanceProperties
  extends ProviderSpecificProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  providerType: "MsSqlServer";
  /** Gets or sets the SQL server host name. */
  hostname?: string;
  /** Gets or sets the database sql port. */
  dbPort?: string;
  /** Gets or sets the database user name. */
  dbUsername?: string;
  /** Gets or sets the database password. */
  dbPassword?: string;
  /** Gets or sets the key vault URI to secret with the database password. */
  dbPasswordUri?: string;
  /** Gets or sets the SAP System Identifier */
  sapSid?: string;
}

/** Specifies Windows operating system settings on the virtual machine. */
export interface WindowsConfiguration extends OSConfiguration {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  osType: "Windows";
}

/** Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros). */
export interface LinuxConfiguration extends OSConfiguration {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  osType: "Linux";
  /** Specifies whether password authentication should be disabled. */
  disablePasswordAuthentication?: boolean;
  /** Specifies the ssh key configuration for a Linux OS. (This property is deprecated, please use 'sshKeyPair' instead) */
  ssh?: SshConfiguration;
  /** The SSH Key-pair used to authenticate with the VM's. */
  sshKeyPair?: SshKeyPair;
}

/** Gets or sets the single server configuration. */
export interface SingleServerConfiguration extends InfrastructureConfiguration {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  deploymentType: "SingleServer";
  /** Network configuration for the server */
  networkConfiguration?: NetworkConfiguration;
  /** The database type. */
  databaseType?: SAPDatabaseType;
  /** The subnet id. */
  subnetId: string;
  /** Gets or sets the virtual machine configuration. */
  virtualMachineConfiguration: VirtualMachineConfiguration;
}

/** Gets or sets the three tier SAP configuration. */
export interface ThreeTierConfiguration extends InfrastructureConfiguration {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  deploymentType: "ThreeTier";
  /** Network configuration common to all servers */
  networkConfiguration?: NetworkConfiguration;
  /** The central server configuration. */
  centralServer: CentralServerConfiguration;
  /** The application server configuration. */
  applicationServer: ApplicationServerConfiguration;
  /** The database configuration. */
  databaseServer: DatabaseConfiguration;
  /** The high availability configuration. */
  highAvailabilityConfig?: HighAvailabilityConfiguration;
}

/** The SAP Software configuration Input when the software is to be installed by service. */
export interface ServiceInitiatedSoftwareConfiguration
  extends SoftwareConfiguration {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  softwareInstallationType: "ServiceInitiated";
  /** The URL to the SAP Build of Materials(BOM) file. */
  bomUrl: string;
  /** The software version to install. */
  softwareVersion: string;
  /** The SAP bits storage account id. */
  sapBitsStorageAccountId: string;
  /** The FQDN to set for the SAP system during install. */
  sapFqdn: string;
  /** The SSH private key. */
  sshPrivateKey: string;
  /** Gets or sets the HA software configuration. */
  highAvailabilitySoftwareConfiguration?: HighAvailabilitySoftwareConfiguration;
}

/** The SAP Software configuration Input when the software is to be installed by service without OS Configurations */
export interface SAPInstallWithoutOSConfigSoftwareConfiguration
  extends SoftwareConfiguration {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  softwareInstallationType: "SAPInstallWithoutOSConfig";
  /** The URL to the SAP Build of Materials(BOM) file. */
  bomUrl: string;
  /** The SAP bits storage account id. */
  sapBitsStorageAccountId: string;
  /** The software version to install. */
  softwareVersion: string;
  /** Gets or sets the HA software configuration. */
  highAvailabilitySoftwareConfiguration?: HighAvailabilitySoftwareConfiguration;
}

/** Display information of the operation. */
export interface OperationsDefinitionDisplay
  extends OperationsDisplayDefinition {}

/** Php workload resource */
export interface PhpWorkloadResource extends TrackedResource {
  /** Indicates which kind of php workload this resource represent e.g WordPress */
  kind: WorkloadKind;
  /** Php workloads SKU */
  sku?: Sku;
  /** Identity for the resource. Currently not supported */
  identity?: PhpWorkloadResourceIdentity;
  /** The infra resources for PHP workload will be created in this location */
  appLocation?: string;
  /** Managed resource group configuration of the workload */
  managedResourceGroupConfiguration?: ManagedRGConfiguration;
  /** Admin user profile used for VM and VMSS */
  adminUserProfile?: UserProfile;
  /** VMSS web nodes profile */
  webNodesProfile?: VmssNodesProfile;
  /** Controller VM profile */
  controllerProfile?: NodeProfile;
  /** Network profile */
  networkProfile?: NetworkProfile;
  /** Database profile */
  databaseProfile?: DatabaseProfile;
  /** Site profile */
  siteProfile?: SiteProfile;
  /** File share profile */
  fileshareProfile?: FileshareProfile;
  /** PHP profile */
  phpProfile?: PhpProfile;
  /** Search profile */
  searchProfile?: SearchProfile;
  /** Cache profile */
  cacheProfile?: CacheProfile;
  /** Backup profile */
  backupProfile?: BackupProfile;
  /**
   * Php workload resource provisioning state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: PhpWorkloadProvisioningState;
}

/** Define the Virtual Instance for SAP. */
export interface SAPVirtualInstance extends TrackedResource {
  /** Managed service identity (user assigned identities) */
  identity?: UserAssignedServiceIdentity;
  /** Defines the environment type - Production/Non Production. */
  environment: SAPEnvironmentType;
  /** Defines the SAP Product type. */
  sapProduct: SAPProductType;
  /** Defines if an existing SAP system is being registered or a new SAP system is being created */
  configuration: SAPConfigurationUnion;
  /** Managed resource group configuration */
  managedResourceGroupConfiguration?: ManagedRGConfiguration;
  /**
   * Defines the SAP Instance status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: SAPVirtualInstanceStatus;
  /**
   * Defines the SAP Instance health.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly health?: SAPHealthState;
  /**
   * Defines the Virtual Instance for SAP state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly state?: SAPVirtualInstanceState;
  /**
   * Defines the provisioning states.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: SapVirtualInstanceProvisioningState;
  /**
   * Defines the Virtual Instance for SAP errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errors?: SAPVirtualInstanceError;
}

/** Define the SAP Central Server Instance. */
export interface SAPCentralServerInstance extends TrackedResource {
  /**
   * The central server instance id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly instanceNo?: string;
  /**
   * The central server subnet.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subnet?: string;
  /** Defines the SAP message server properties. */
  messageServerProperties?: MessageServerProperties;
  /** Defines the SAP enqueue server properties. */
  enqueueServerProperties?: EnqueueServerProperties;
  /** Defines the SAP Gateway Server properties. */
  gatewayServerProperties?: GatewayServerProperties;
  /** Defines the SAP ERS Server properties. */
  enqueueReplicationServerProperties?: EnqueueReplicationServerProperties;
  /**
   * The central server kernel version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly kernelVersion?: string;
  /**
   * The central server kernel patch.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly kernelPatch?: string;
  /**
   * The list of virtual machines.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vmDetails?: CentralServerVmDetails[];
  /**
   * Defines the SAP Instance status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: SAPVirtualInstanceStatus;
  /**
   * Defines the SAP Instance health.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly health?: SAPHealthState;
  /**
   * Defines the provisioning states.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: SapVirtualInstanceProvisioningState;
  /**
   * Defines the Central Instance errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errors?: SAPVirtualInstanceError;
}

/** Define the SAP Database Instance. */
export interface SAPDatabaseInstance extends TrackedResource {
  /**
   * The database subnet.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subnet?: string;
  /**
   * The database SID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly databaseSid?: string;
  /**
   * The SAP database type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly databaseType?: string;
  /**
   * The database IP Address.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ipAddress?: string;
  /**
   * The list of virtual machines.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vmDetails?: DatabaseVmDetails[];
  /**
   * Defines the SAP Instance status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: SAPVirtualInstanceStatus;
  /**
   * Defines the provisioning states.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: SapVirtualInstanceProvisioningState;
  /**
   * Defines the Database Instance errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errors?: SAPVirtualInstanceError;
}

/** Define the SAP Application Server Instance. */
export interface SAPApplicationServerInstance extends TrackedResource {
  /**
   * The application server instance id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly instanceNo?: string;
  /**
   * The application server subnet.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subnet?: string;
  /**
   * The application server SAP host name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostname?: string;
  /**
   * The application server SAP kernel version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly kernelVersion?: string;
  /**
   * The application server SAP kernel patch.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly kernelPatch?: string;
  /**
   * The application server SAP IP Address.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ipAddress?: string;
  /**
   * The application server gateway Port.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly gatewayPort?: number;
  /**
   * The application server ICM HTTP Port.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly icmHttpPort?: number;
  /**
   * The application server ICM HTTPS Port.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly icmHttpsPort?: number;
  /**
   * The virtual machine.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly virtualMachineId?: string;
  /**
   * Defines the SAP Instance status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: SAPVirtualInstanceStatus;
  /**
   * Defines the SAP Instance health.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly health?: SAPHealthState;
  /**
   * Defines the provisioning states.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: SapVirtualInstanceProvisioningState;
  /**
   * Defines the Application Instance errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errors?: SAPVirtualInstanceError;
}

/** SAP monitor info on Azure (ARM properties and SAP monitor properties) */
export interface Monitor extends TrackedResource {
  /** Managed service identity (user assigned identities) */
  identity?: UserAssignedServiceIdentity;
  /**
   * State of provisioning of the SAP monitor.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: WorkloadMonitorProvisioningState;
  /**
   * Defines the SAP monitor errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errors?: MonitorPropertiesErrors;
  /** The SAP monitor resources will be deployed in the SAP monitoring region. The subnet region should be same as the SAP monitoring region. */
  appLocation?: string;
  /** Sets the routing preference of the SAP monitor. By default only RFC1918 traffic is routed to the customer VNET. */
  routingPreference?: RoutingPreference;
  /** Managed resource group configuration */
  managedResourceGroupConfiguration?: ManagedRGConfiguration;
  /** The ARM ID of the Log Analytics Workspace that is used for SAP monitoring. */
  logAnalyticsWorkspaceArmId?: string;
  /** The subnet which the SAP monitor will be deployed in */
  monitorSubnet?: string;
  /**
   * The ARM ID of the MSI used for SAP monitoring.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly msiArmId?: string;
}

/** WordPress instance resource */
export interface WordpressInstanceResource extends ProxyResource {
  /** Application version */
  version?: WordpressVersions;
  /** Database name used by the application */
  databaseName?: string;
  /** User name used by the application to connect to database */
  databaseUser?: string;
  /**
   * Site Url to access the WordPress application
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly siteUrl?: string;
  /**
   * WordPress instance provisioning state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ApplicationProvisioningState;
}

/** A provider instance associated with SAP monitor. */
export interface ProviderInstance extends ProxyResource {
  /** Managed service identity (user assigned identities) */
  identity?: UserAssignedServiceIdentity;
  /**
   * State of provisioning of the provider instance
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: WorkloadMonitorProvisioningState;
  /**
   * Defines the provider instance errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errors?: ProviderInstancePropertiesErrors;
  /** Defines the provider instance errors. */
  providerSettings?: ProviderSpecificPropertiesUnion;
}

/** Known values of {@link OSImagePublisher} that the service accepts. */
export enum KnownOSImagePublisher {
  /** Canonical */
  Canonical = "Canonical"
}

/**
 * Defines values for OSImagePublisher. \
 * {@link KnownOSImagePublisher} can be used interchangeably with OSImagePublisher,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Canonical**
 */
export type OSImagePublisher = string;

/** Known values of {@link OSImageOffer} that the service accepts. */
export enum KnownOSImageOffer {
  /** UbuntuServer */
  UbuntuServer = "UbuntuServer"
}

/**
 * Defines values for OSImageOffer. \
 * {@link KnownOSImageOffer} can be used interchangeably with OSImageOffer,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **UbuntuServer**
 */
export type OSImageOffer = string;

/** Known values of {@link OSImageSku} that the service accepts. */
export enum KnownOSImageSku {
  /** Eighteen04LTS */
  Eighteen04LTS = "18.04-LTS",
  /** Sixteen04LTS */
  Sixteen04LTS = "16.04-LTS"
}

/**
 * Defines values for OSImageSku. \
 * {@link KnownOSImageSku} can be used interchangeably with OSImageSku,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **18.04-LTS** \
 * **16.04-LTS**
 */
export type OSImageSku = string;

/** Known values of {@link OSImageVersion} that the service accepts. */
export enum KnownOSImageVersion {
  /** Latest */
  Latest = "latest"
}

/**
 * Defines values for OSImageVersion. \
 * {@link KnownOSImageVersion} can be used interchangeably with OSImageVersion,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **latest**
 */
export type OSImageVersion = string;

/** Known values of {@link LoadBalancerType} that the service accepts. */
export enum KnownLoadBalancerType {
  /** ApplicationGateway */
  ApplicationGateway = "ApplicationGateway",
  /** LoadBalancer */
  LoadBalancer = "LoadBalancer"
}

/**
 * Defines values for LoadBalancerType. \
 * {@link KnownLoadBalancerType} can be used interchangeably with LoadBalancerType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ApplicationGateway** \
 * **LoadBalancer**
 */
export type LoadBalancerType = string;

/** Known values of {@link AzureFrontDoorEnabled} that the service accepts. */
export enum KnownAzureFrontDoorEnabled {
  /** Enabled */
  Enabled = "Enabled",
  /** Disabled */
  Disabled = "Disabled"
}

/**
 * Defines values for AzureFrontDoorEnabled. \
 * {@link KnownAzureFrontDoorEnabled} can be used interchangeably with AzureFrontDoorEnabled,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export type AzureFrontDoorEnabled = string;

/** Known values of {@link DatabaseType} that the service accepts. */
export enum KnownDatabaseType {
  /** MySql */
  MySql = "MySql"
}

/**
 * Defines values for DatabaseType. \
 * {@link KnownDatabaseType} can be used interchangeably with DatabaseType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **MySql**
 */
export type DatabaseType = string;

/** Known values of {@link HAEnabled} that the service accepts. */
export enum KnownHAEnabled {
  /** Enabled */
  Enabled = "Enabled",
  /** Disabled */
  Disabled = "Disabled"
}

/**
 * Defines values for HAEnabled. \
 * {@link KnownHAEnabled} can be used interchangeably with HAEnabled,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export type HAEnabled = string;

/** Known values of {@link EnableSslEnforcement} that the service accepts. */
export enum KnownEnableSslEnforcement {
  /** Enabled */
  Enabled = "Enabled",
  /** Disabled */
  Disabled = "Disabled"
}

/**
 * Defines values for EnableSslEnforcement. \
 * {@link KnownEnableSslEnforcement} can be used interchangeably with EnableSslEnforcement,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export type EnableSslEnforcement = string;

/** Known values of {@link FileShareType} that the service accepts. */
export enum KnownFileShareType {
  /** NfsOnController */
  NfsOnController = "NfsOnController",
  /** AzureFiles */
  AzureFiles = "AzureFiles"
}

/**
 * Defines values for FileShareType. \
 * {@link KnownFileShareType} can be used interchangeably with FileShareType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NfsOnController** \
 * **AzureFiles**
 */
export type FileShareType = string;

/** Known values of {@link FileShareStorageType} that the service accepts. */
export enum KnownFileShareStorageType {
  /** StandardLRS */
  StandardLRS = "Standard_LRS",
  /** StandardGRS */
  StandardGRS = "Standard_GRS",
  /** StandardZRS */
  StandardZRS = "Standard_ZRS",
  /** PremiumLRS */
  PremiumLRS = "Premium_LRS"
}

/**
 * Defines values for FileShareStorageType. \
 * {@link KnownFileShareStorageType} can be used interchangeably with FileShareStorageType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Standard_LRS** \
 * **Standard_GRS** \
 * **Standard_ZRS** \
 * **Premium_LRS**
 */
export type FileShareStorageType = string;

/** Known values of {@link PHPVersion} that the service accepts. */
export enum KnownPHPVersion {
  /** Seven2 */
  Seven2 = "7.2",
  /** Seven3 */
  Seven3 = "7.3",
  /** Seven4 */
  Seven4 = "7.4"
}

/**
 * Defines values for PHPVersion. \
 * {@link KnownPHPVersion} can be used interchangeably with PHPVersion,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **7.2** \
 * **7.3** \
 * **7.4**
 */
export type PHPVersion = string;

/** Known values of {@link SearchType} that the service accepts. */
export enum KnownSearchType {
  /** Elastic */
  Elastic = "Elastic"
}

/**
 * Defines values for SearchType. \
 * {@link KnownSearchType} can be used interchangeably with SearchType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Elastic**
 */
export type SearchType = string;

/** Known values of {@link RedisCacheFamily} that the service accepts. */
export enum KnownRedisCacheFamily {
  /** C */
  C = "C",
  /** P */
  P = "P"
}

/**
 * Defines values for RedisCacheFamily. \
 * {@link KnownRedisCacheFamily} can be used interchangeably with RedisCacheFamily,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **C** \
 * **P**
 */
export type RedisCacheFamily = string;

/** Known values of {@link EnableBackup} that the service accepts. */
export enum KnownEnableBackup {
  /** Enabled */
  Enabled = "Enabled",
  /** Disabled */
  Disabled = "Disabled"
}

/**
 * Defines values for EnableBackup. \
 * {@link KnownEnableBackup} can be used interchangeably with EnableBackup,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export type EnableBackup = string;

/** Known values of {@link PhpWorkloadProvisioningState} that the service accepts. */
export enum KnownPhpWorkloadProvisioningState {
  /** NotSpecified */
  NotSpecified = "NotSpecified",
  /** Accepted */
  Accepted = "Accepted",
  /** Created */
  Created = "Created",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
  /** Provisioning */
  Provisioning = "Provisioning",
  /** Deleting */
  Deleting = "Deleting"
}

/**
 * Defines values for PhpWorkloadProvisioningState. \
 * {@link KnownPhpWorkloadProvisioningState} can be used interchangeably with PhpWorkloadProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotSpecified** \
 * **Accepted** \
 * **Created** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Provisioning** \
 * **Deleting**
 */
export type PhpWorkloadProvisioningState = string;

/** Known values of {@link WorkloadKind} that the service accepts. */
export enum KnownWorkloadKind {
  /** WordPress */
  WordPress = "WordPress"
}

/**
 * Defines values for WorkloadKind. \
 * {@link KnownWorkloadKind} can be used interchangeably with WorkloadKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **WordPress**
 */
export type WorkloadKind = string;

/** Known values of {@link ManagedServiceIdentityType} that the service accepts. */
export enum KnownManagedServiceIdentityType {
  /** None */
  None = "None",
  /** UserAssigned */
  UserAssigned = "UserAssigned"
}

/**
 * Defines values for ManagedServiceIdentityType. \
 * {@link KnownManagedServiceIdentityType} can be used interchangeably with ManagedServiceIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **UserAssigned**
 */
export type ManagedServiceIdentityType = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link WordpressVersions} that the service accepts. */
export enum KnownWordpressVersions {
  /** Five43 */
  Five43 = "5.4.3",
  /** Five42 */
  Five42 = "5.4.2",
  /** Five41 */
  Five41 = "5.4.1",
  /** Five4 */
  Five4 = "5.4"
}

/**
 * Defines values for WordpressVersions. \
 * {@link KnownWordpressVersions} can be used interchangeably with WordpressVersions,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **5.4.3** \
 * **5.4.2** \
 * **5.4.1** \
 * **5.4**
 */
export type WordpressVersions = string;

/** Known values of {@link ApplicationProvisioningState} that the service accepts. */
export enum KnownApplicationProvisioningState {
  /** NotSpecified */
  NotSpecified = "NotSpecified",
  /** Accepted */
  Accepted = "Accepted",
  /** Created */
  Created = "Created",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
  /** Installing */
  Installing = "Installing"
}

/**
 * Defines values for ApplicationProvisioningState. \
 * {@link KnownApplicationProvisioningState} can be used interchangeably with ApplicationProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotSpecified** \
 * **Accepted** \
 * **Created** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Installing**
 */
export type ApplicationProvisioningState = string;

/** Known values of {@link SAPEnvironmentType} that the service accepts. */
export enum KnownSAPEnvironmentType {
  /** NonProd */
  NonProd = "NonProd",
  /** Prod */
  Prod = "Prod"
}

/**
 * Defines values for SAPEnvironmentType. \
 * {@link KnownSAPEnvironmentType} can be used interchangeably with SAPEnvironmentType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NonProd** \
 * **Prod**
 */
export type SAPEnvironmentType = string;

/** Known values of {@link SAPProductType} that the service accepts. */
export enum KnownSAPProductType {
  /** ECC */
  ECC = "ECC",
  /** S4Hana */
  S4Hana = "S4HANA",
  /** Other */
  Other = "Other"
}

/**
 * Defines values for SAPProductType. \
 * {@link KnownSAPProductType} can be used interchangeably with SAPProductType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ECC** \
 * **S4HANA** \
 * **Other**
 */
export type SAPProductType = string;

/** Known values of {@link SAPDeploymentType} that the service accepts. */
export enum KnownSAPDeploymentType {
  /** SingleServer */
  SingleServer = "SingleServer",
  /** ThreeTier */
  ThreeTier = "ThreeTier"
}

/**
 * Defines values for SAPDeploymentType. \
 * {@link KnownSAPDeploymentType} can be used interchangeably with SAPDeploymentType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SingleServer** \
 * **ThreeTier**
 */
export type SAPDeploymentType = string;

/** Known values of {@link SAPDatabaseType} that the service accepts. */
export enum KnownSAPDatabaseType {
  /** Hana */
  Hana = "HANA",
  /** DB2 */
  DB2 = "DB2"
}

/**
 * Defines values for SAPDatabaseType. \
 * {@link KnownSAPDatabaseType} can be used interchangeably with SAPDatabaseType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **HANA** \
 * **DB2**
 */
export type SAPDatabaseType = string;

/** Known values of {@link SAPDatabaseScaleMethod} that the service accepts. */
export enum KnownSAPDatabaseScaleMethod {
  /** ScaleUp */
  ScaleUp = "ScaleUp"
}

/**
 * Defines values for SAPDatabaseScaleMethod. \
 * {@link KnownSAPDatabaseScaleMethod} can be used interchangeably with SAPDatabaseScaleMethod,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ScaleUp**
 */
export type SAPDatabaseScaleMethod = string;

/** Known values of {@link SAPHighAvailabilityType} that the service accepts. */
export enum KnownSAPHighAvailabilityType {
  /** AvailabilitySet */
  AvailabilitySet = "AvailabilitySet",
  /** AvailabilityZone */
  AvailabilityZone = "AvailabilityZone"
}

/**
 * Defines values for SAPHighAvailabilityType. \
 * {@link KnownSAPHighAvailabilityType} can be used interchangeably with SAPHighAvailabilityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AvailabilitySet** \
 * **AvailabilityZone**
 */
export type SAPHighAvailabilityType = string;

/** Known values of {@link SAPConfigurationType} that the service accepts. */
export enum KnownSAPConfigurationType {
  /** Deployment */
  Deployment = "Deployment",
  /** Discovery */
  Discovery = "Discovery",
  /** DeploymentWithOSConfig */
  DeploymentWithOSConfig = "DeploymentWithOSConfig"
}

/**
 * Defines values for SAPConfigurationType. \
 * {@link KnownSAPConfigurationType} can be used interchangeably with SAPConfigurationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Deployment** \
 * **Discovery** \
 * **DeploymentWithOSConfig**
 */
export type SAPConfigurationType = string;

/** Known values of {@link SAPVirtualInstanceStatus} that the service accepts. */
export enum KnownSAPVirtualInstanceStatus {
  /** Starting */
  Starting = "Starting",
  /** Running */
  Running = "Running",
  /** Stopping */
  Stopping = "Stopping",
  /** Offline */
  Offline = "Offline",
  /** PartiallyRunning */
  PartiallyRunning = "PartiallyRunning",
  /** Unavailable */
  Unavailable = "Unavailable"
}

/**
 * Defines values for SAPVirtualInstanceStatus. \
 * {@link KnownSAPVirtualInstanceStatus} can be used interchangeably with SAPVirtualInstanceStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Starting** \
 * **Running** \
 * **Stopping** \
 * **Offline** \
 * **PartiallyRunning** \
 * **Unavailable**
 */
export type SAPVirtualInstanceStatus = string;

/** Known values of {@link SAPHealthState} that the service accepts. */
export enum KnownSAPHealthState {
  /** Unknown */
  Unknown = "Unknown",
  /** Healthy */
  Healthy = "Healthy",
  /** Unhealthy */
  Unhealthy = "Unhealthy",
  /** Degraded */
  Degraded = "Degraded"
}

/**
 * Defines values for SAPHealthState. \
 * {@link KnownSAPHealthState} can be used interchangeably with SAPHealthState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Healthy** \
 * **Unhealthy** \
 * **Degraded**
 */
export type SAPHealthState = string;

/** Known values of {@link SAPVirtualInstanceState} that the service accepts. */
export enum KnownSAPVirtualInstanceState {
  /** InfrastructureDeploymentPending */
  InfrastructureDeploymentPending = "InfrastructureDeploymentPending",
  /** InfrastructureDeploymentInProgress */
  InfrastructureDeploymentInProgress = "InfrastructureDeploymentInProgress",
  /** InfrastructureDeploymentFailed */
  InfrastructureDeploymentFailed = "InfrastructureDeploymentFailed",
  /** SoftwareInstallationPending */
  SoftwareInstallationPending = "SoftwareInstallationPending",
  /** SoftwareInstallationInProgress */
  SoftwareInstallationInProgress = "SoftwareInstallationInProgress",
  /** SoftwareInstallationFailed */
  SoftwareInstallationFailed = "SoftwareInstallationFailed",
  /** DiscoveryPending */
  DiscoveryPending = "DiscoveryPending",
  /** DiscoveryInProgress */
  DiscoveryInProgress = "DiscoveryInProgress",
  /** DiscoveryFailed */
  DiscoveryFailed = "DiscoveryFailed",
  /** RegistrationComplete */
  RegistrationComplete = "RegistrationComplete"
}

/**
 * Defines values for SAPVirtualInstanceState. \
 * {@link KnownSAPVirtualInstanceState} can be used interchangeably with SAPVirtualInstanceState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **InfrastructureDeploymentPending** \
 * **InfrastructureDeploymentInProgress** \
 * **InfrastructureDeploymentFailed** \
 * **SoftwareInstallationPending** \
 * **SoftwareInstallationInProgress** \
 * **SoftwareInstallationFailed** \
 * **DiscoveryPending** \
 * **DiscoveryInProgress** \
 * **DiscoveryFailed** \
 * **RegistrationComplete**
 */
export type SAPVirtualInstanceState = string;

/** Known values of {@link SapVirtualInstanceProvisioningState} that the service accepts. */
export enum KnownSapVirtualInstanceProvisioningState {
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Updating */
  Updating = "Updating",
  /** Creating */
  Creating = "Creating",
  /** Failed */
  Failed = "Failed",
  /** Deleting */
  Deleting = "Deleting"
}

/**
 * Defines values for SapVirtualInstanceProvisioningState. \
 * {@link KnownSapVirtualInstanceProvisioningState} can be used interchangeably with SapVirtualInstanceProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Updating** \
 * **Creating** \
 * **Failed** \
 * **Deleting**
 */
export type SapVirtualInstanceProvisioningState = string;

/** Known values of {@link EnqueueReplicationServerType} that the service accepts. */
export enum KnownEnqueueReplicationServerType {
  /** EnqueueReplicator1 */
  EnqueueReplicator1 = "EnqueueReplicator1",
  /** EnqueueReplicator2 */
  EnqueueReplicator2 = "EnqueueReplicator2"
}

/**
 * Defines values for EnqueueReplicationServerType. \
 * {@link KnownEnqueueReplicationServerType} can be used interchangeably with EnqueueReplicationServerType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **EnqueueReplicator1** \
 * **EnqueueReplicator2**
 */
export type EnqueueReplicationServerType = string;

/** Known values of {@link CentralServerVirtualMachineType} that the service accepts. */
export enum KnownCentralServerVirtualMachineType {
  /** Primary */
  Primary = "Primary",
  /** Secondary */
  Secondary = "Secondary",
  /** Unknown */
  Unknown = "Unknown",
  /** Ascs */
  Ascs = "ASCS",
  /** ERSInactive */
  ERSInactive = "ERSInactive",
  /** ERS */
  ERS = "ERS",
  /** Standby */
  Standby = "Standby"
}

/**
 * Defines values for CentralServerVirtualMachineType. \
 * {@link KnownCentralServerVirtualMachineType} can be used interchangeably with CentralServerVirtualMachineType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Primary** \
 * **Secondary** \
 * **Unknown** \
 * **ASCS** \
 * **ERSInactive** \
 * **ERS** \
 * **Standby**
 */
export type CentralServerVirtualMachineType = string;

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system"
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link WorkloadMonitorProvisioningState} that the service accepts. */
export enum KnownWorkloadMonitorProvisioningState {
  /** Accepted */
  Accepted = "Accepted",
  /** Creating */
  Creating = "Creating",
  /** Updating */
  Updating = "Updating",
  /** Failed */
  Failed = "Failed",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Deleting */
  Deleting = "Deleting",
  /** Migrating */
  Migrating = "Migrating"
}

/**
 * Defines values for WorkloadMonitorProvisioningState. \
 * {@link KnownWorkloadMonitorProvisioningState} can be used interchangeably with WorkloadMonitorProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Accepted** \
 * **Creating** \
 * **Updating** \
 * **Failed** \
 * **Succeeded** \
 * **Deleting** \
 * **Migrating**
 */
export type WorkloadMonitorProvisioningState = string;

/** Known values of {@link RoutingPreference} that the service accepts. */
export enum KnownRoutingPreference {
  /** Default */
  Default = "Default",
  /** RouteAll */
  RouteAll = "RouteAll"
}

/**
 * Defines values for RoutingPreference. \
 * {@link KnownRoutingPreference} can be used interchangeably with RoutingPreference,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Default** \
 * **RouteAll**
 */
export type RoutingPreference = string;

/** Known values of {@link LocationType} that the service accepts. */
export enum KnownLocationType {
  /** Region */
  Region = "Region",
  /** EdgeZone */
  EdgeZone = "EdgeZone"
}

/**
 * Defines values for LocationType. \
 * {@link KnownLocationType} can be used interchangeably with LocationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Region** \
 * **EdgeZone**
 */
export type LocationType = string;

/** Known values of {@link SkuRestrictionType} that the service accepts. */
export enum KnownSkuRestrictionType {
  /** NotSpecified */
  NotSpecified = "NotSpecified",
  /** Location */
  Location = "Location",
  /** Zone */
  Zone = "Zone"
}

/**
 * Defines values for SkuRestrictionType. \
 * {@link KnownSkuRestrictionType} can be used interchangeably with SkuRestrictionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotSpecified** \
 * **Location** \
 * **Zone**
 */
export type SkuRestrictionType = string;

/** Known values of {@link SkuRestrictionReasonCode} that the service accepts. */
export enum KnownSkuRestrictionReasonCode {
  /** NotSpecified */
  NotSpecified = "NotSpecified",
  /** QuotaId */
  QuotaId = "QuotaId",
  /** NotAvailableForSubscription */
  NotAvailableForSubscription = "NotAvailableForSubscription"
}

/**
 * Defines values for SkuRestrictionReasonCode. \
 * {@link KnownSkuRestrictionReasonCode} can be used interchangeably with SkuRestrictionReasonCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotSpecified** \
 * **QuotaId** \
 * **NotAvailableForSubscription**
 */
export type SkuRestrictionReasonCode = string;

/** Known values of {@link OSType} that the service accepts. */
export enum KnownOSType {
  /** Linux */
  Linux = "Linux",
  /** Windows */
  Windows = "Windows"
}

/**
 * Defines values for OSType. \
 * {@link KnownOSType} can be used interchangeably with OSType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Linux** \
 * **Windows**
 */
export type OSType = string;

/** Known values of {@link SAPSoftwareInstallationType} that the service accepts. */
export enum KnownSAPSoftwareInstallationType {
  /** ServiceInitiated */
  ServiceInitiated = "ServiceInitiated",
  /** SAPInstallWithoutOSConfig */
  SAPInstallWithoutOSConfig = "SAPInstallWithoutOSConfig"
}

/**
 * Defines values for SAPSoftwareInstallationType. \
 * {@link KnownSAPSoftwareInstallationType} can be used interchangeably with SAPSoftwareInstallationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ServiceInitiated** \
 * **SAPInstallWithoutOSConfig**
 */
export type SAPSoftwareInstallationType = string;

/** Known values of {@link OperationProperties} that the service accepts. */
export enum KnownOperationProperties {
  /** NotSpecified */
  NotSpecified = "NotSpecified",
  /** User */
  User = "User",
  /** System */
  System = "System"
}

/**
 * Defines values for OperationProperties. \
 * {@link KnownOperationProperties} can be used interchangeably with OperationProperties,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotSpecified** \
 * **User** \
 * **System**
 */
export type OperationProperties = string;

/** Known values of {@link WorkloadMonitorActionType} that the service accepts. */
export enum KnownWorkloadMonitorActionType {
  /** NotSpecified */
  NotSpecified = "NotSpecified",
  /** Internal */
  Internal = "Internal"
}

/**
 * Defines values for WorkloadMonitorActionType. \
 * {@link KnownWorkloadMonitorActionType} can be used interchangeably with WorkloadMonitorActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotSpecified** \
 * **Internal**
 */
export type WorkloadMonitorActionType = string;

/** Known values of {@link SkuScaleType} that the service accepts. */
export enum KnownSkuScaleType {
  /** None */
  None = "None",
  /** Manual */
  Manual = "Manual",
  /** Automatic */
  Automatic = "Automatic"
}

/**
 * Defines values for SkuScaleType. \
 * {@link KnownSkuScaleType} can be used interchangeably with SkuScaleType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **Manual** \
 * **Automatic**
 */
export type SkuScaleType = string;
/** Defines values for DiskStorageType. */
export type DiskStorageType =
  | "Premium_LRS"
  | "Standard_LRS"
  | "StandardSSD_LRS";
/** Defines values for DatabaseTier. */
export type DatabaseTier = "Burstable" | "GeneralPurpose" | "MemoryOptimized";
/** Defines values for SkuTier. */
export type SkuTier = "Free" | "Basic" | "Standard" | "Premium";

/** Optional parameters. */
export interface PhpWorkloadsListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type PhpWorkloadsListBySubscriptionResponse = PhpWorkloadResourceList;

/** Optional parameters. */
export interface PhpWorkloadsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type PhpWorkloadsListByResourceGroupResponse = PhpWorkloadResourceList;

/** Optional parameters. */
export interface PhpWorkloadsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PhpWorkloadsGetResponse = PhpWorkloadResource;

/** Optional parameters. */
export interface PhpWorkloadsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type PhpWorkloadsCreateOrUpdateResponse = PhpWorkloadResource;

/** Optional parameters. */
export interface PhpWorkloadsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type PhpWorkloadsUpdateResponse = PhpWorkloadResource;

/** Optional parameters. */
export interface PhpWorkloadsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Whether to delete infra along with workload resource. */
  deleteInfra?: string;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface PhpWorkloadsListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type PhpWorkloadsListBySubscriptionNextResponse = PhpWorkloadResourceList;

/** Optional parameters. */
export interface PhpWorkloadsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type PhpWorkloadsListByResourceGroupNextResponse = PhpWorkloadResourceList;

/** Optional parameters. */
export interface WordpressInstancesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type WordpressInstancesListResponse = WordpressInstanceResourceList;

/** Optional parameters. */
export interface WordpressInstancesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type WordpressInstancesGetResponse = WordpressInstanceResource;

/** Optional parameters. */
export interface WordpressInstancesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type WordpressInstancesCreateOrUpdateResponse = WordpressInstanceResource;

/** Optional parameters. */
export interface WordpressInstancesDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface WordpressInstancesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type WordpressInstancesListNextResponse = WordpressInstanceResourceList;

/** Optional parameters. */
export interface SAPSizingRecommendationsOptionalParams
  extends coreClient.OperationOptions {
  /** SAP Sizing Recommendation Request body */
  sAPSizingRecommendation?: SAPSizingRecommendationRequest;
}

/** Contains response data for the sAPSizingRecommendations operation. */
export type SAPSizingRecommendationsResponse = SAPSizingRecommendationResultUnion;

/** Optional parameters. */
export interface SAPSupportedSkuOptionalParams
  extends coreClient.OperationOptions {
  /** SAP Supported SKU Request body */
  sAPSupportedSku?: SAPSupportedSkusRequest;
}

/** Contains response data for the sAPSupportedSku operation. */
export type SAPSupportedSkuResponse = SAPSupportedResourceSkusResult;

/** Optional parameters. */
export interface SAPDiskConfigurationsOptionalParams
  extends coreClient.OperationOptions {
  /** SAP Disk Configurations Request body */
  sAPDiskConfigurations?: SAPDiskConfigurationsRequest;
}

/** Contains response data for the sAPDiskConfigurations operation. */
export type SAPDiskConfigurationsResponse = SAPDiskConfigurationsResult;

/** Optional parameters. */
export interface SAPAvailabilityZoneDetailsOptionalParams
  extends coreClient.OperationOptions {
  /** SAP Availability Zone Details Request body */
  sAPAvailabilityZoneDetails?: SAPAvailabilityZoneDetailsRequest;
}

/** Contains response data for the sAPAvailabilityZoneDetails operation. */
export type SAPAvailabilityZoneDetailsResponse = SAPAvailabilityZoneDetailsResult;

/** Optional parameters. */
export interface SAPVirtualInstancesCreateOptionalParams
  extends coreClient.OperationOptions {
  /** The Virtual Instance for SAP request body. */
  body?: SAPVirtualInstance;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type SAPVirtualInstancesCreateResponse = SAPVirtualInstance;

/** Optional parameters. */
export interface SAPVirtualInstancesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SAPVirtualInstancesGetResponse = SAPVirtualInstance;

/** Optional parameters. */
export interface SAPVirtualInstancesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** The Update Virtual Instance for SAP request body. */
  body?: UpdateSAPVirtualInstanceRequest;
}

/** Contains response data for the update operation. */
export type SAPVirtualInstancesUpdateResponse = SAPVirtualInstance;

/** Optional parameters. */
export interface SAPVirtualInstancesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type SAPVirtualInstancesDeleteResponse = OperationStatusResult;

/** Optional parameters. */
export interface SAPVirtualInstancesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type SAPVirtualInstancesListByResourceGroupResponse = SAPVirtualInstanceList;

/** Optional parameters. */
export interface SAPVirtualInstancesListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type SAPVirtualInstancesListBySubscriptionResponse = SAPVirtualInstanceList;

/** Optional parameters. */
export interface SAPVirtualInstancesStartOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the start operation. */
export type SAPVirtualInstancesStartResponse = OperationStatusResult;

/** Optional parameters. */
export interface SAPVirtualInstancesStopOptionalParams
  extends coreClient.OperationOptions {
  /** The Virtual Instances for SAP stop request body. */
  body?: StopRequest;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the stop operation. */
export type SAPVirtualInstancesStopResponse = OperationStatusResult;

/** Optional parameters. */
export interface SAPVirtualInstancesListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type SAPVirtualInstancesListByResourceGroupNextResponse = SAPVirtualInstanceList;

/** Optional parameters. */
export interface SAPVirtualInstancesListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type SAPVirtualInstancesListBySubscriptionNextResponse = SAPVirtualInstanceList;

/** Optional parameters. */
export interface SAPCentralInstancesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SAPCentralInstancesGetResponse = SAPCentralServerInstance;

/** Optional parameters. */
export interface SAPCentralInstancesCreateOptionalParams
  extends coreClient.OperationOptions {
  /** The SAP Central Server instance request body. */
  body?: SAPCentralServerInstance;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type SAPCentralInstancesCreateResponse = SAPCentralServerInstance;

/** Optional parameters. */
export interface SAPCentralInstancesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** The SAP Central Server instance request body. */
  body?: UpdateSAPCentralInstanceRequest;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type SAPCentralInstancesUpdateResponse = SAPCentralServerInstance;

/** Optional parameters. */
export interface SAPCentralInstancesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type SAPCentralInstancesDeleteResponse = OperationStatusResult;

/** Optional parameters. */
export interface SAPCentralInstancesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type SAPCentralInstancesListResponse = SAPCentralInstanceList;

/** Optional parameters. */
export interface SAPCentralInstancesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type SAPCentralInstancesListNextResponse = SAPCentralInstanceList;

/** Optional parameters. */
export interface SAPDatabaseInstancesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SAPDatabaseInstancesGetResponse = SAPDatabaseInstance;

/** Optional parameters. */
export interface SAPDatabaseInstancesCreateOptionalParams
  extends coreClient.OperationOptions {
  /** The SAP Database Server instance request body. */
  body?: SAPDatabaseInstance;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type SAPDatabaseInstancesCreateResponse = SAPDatabaseInstance;

/** Optional parameters. */
export interface SAPDatabaseInstancesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** The SAP Database Server instance request body. */
  body?: UpdateSAPDatabaseInstanceRequest;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type SAPDatabaseInstancesUpdateResponse = SAPDatabaseInstance;

/** Optional parameters. */
export interface SAPDatabaseInstancesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type SAPDatabaseInstancesDeleteResponse = OperationStatusResult;

/** Optional parameters. */
export interface SAPDatabaseInstancesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type SAPDatabaseInstancesListResponse = SAPDatabaseInstanceList;

/** Optional parameters. */
export interface SAPDatabaseInstancesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type SAPDatabaseInstancesListNextResponse = SAPDatabaseInstanceList;

/** Optional parameters. */
export interface SAPApplicationServerInstancesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SAPApplicationServerInstancesGetResponse = SAPApplicationServerInstance;

/** Optional parameters. */
export interface SAPApplicationServerInstancesCreateOptionalParams
  extends coreClient.OperationOptions {
  /** The SAP Application Server instance request body. */
  body?: SAPApplicationServerInstance;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type SAPApplicationServerInstancesCreateResponse = SAPApplicationServerInstance;

/** Optional parameters. */
export interface SAPApplicationServerInstancesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** The SAP Application Server instance request body. */
  body?: UpdateSAPApplicationInstanceRequest;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type SAPApplicationServerInstancesUpdateResponse = SAPApplicationServerInstance;

/** Optional parameters. */
export interface SAPApplicationServerInstancesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type SAPApplicationServerInstancesDeleteResponse = OperationStatusResult;

/** Optional parameters. */
export interface SAPApplicationServerInstancesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type SAPApplicationServerInstancesListResponse = SAPApplicationServerInstanceList;

/** Optional parameters. */
export interface SAPApplicationServerInstancesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type SAPApplicationServerInstancesListNextResponse = SAPApplicationServerInstanceList;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface MonitorsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type MonitorsListResponse = MonitorListResult;

/** Optional parameters. */
export interface MonitorsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type MonitorsListByResourceGroupResponse = MonitorListResult;

/** Optional parameters. */
export interface MonitorsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type MonitorsGetResponse = Monitor;

/** Optional parameters. */
export interface MonitorsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type MonitorsCreateResponse = Monitor;

/** Optional parameters. */
export interface MonitorsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type MonitorsDeleteResponse = OperationStatusResult;

/** Optional parameters. */
export interface MonitorsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type MonitorsUpdateResponse = Monitor;

/** Optional parameters. */
export interface MonitorsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type MonitorsListNextResponse = MonitorListResult;

/** Optional parameters. */
export interface MonitorsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type MonitorsListByResourceGroupNextResponse = MonitorListResult;

/** Optional parameters. */
export interface ProviderInstancesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ProviderInstancesListResponse = ProviderInstanceListResult;

/** Optional parameters. */
export interface ProviderInstancesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ProviderInstancesGetResponse = ProviderInstance;

/** Optional parameters. */
export interface ProviderInstancesCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ProviderInstancesCreateResponse = ProviderInstance;

/** Optional parameters. */
export interface ProviderInstancesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type ProviderInstancesDeleteResponse = OperationStatusResult;

/** Optional parameters. */
export interface ProviderInstancesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ProviderInstancesListNextResponse = ProviderInstanceListResult;

/** Optional parameters. */
export interface SkusListOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type SkusListResponse = SkusListResult;

/** Optional parameters. */
export interface SkusListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type SkusListNextResponse = SkusListResult;

/** Optional parameters. */
export interface WorkloadsClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
