"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.sapLandscapeMonitorParameter = exports.providerInstanceParameter = exports.providerInstanceName = exports.body9 = exports.monitorParameter = exports.monitorName = exports.body8 = exports.body7 = exports.applicationInstanceName = exports.body6 = exports.body5 = exports.databaseInstanceName = exports.body4 = exports.body3 = exports.centralInstanceName = exports.nextLink = exports.body2 = exports.body1 = exports.sapVirtualInstanceName = exports.resourceGroupName = exports.body = exports.sAPAvailabilityZoneDetails = exports.sAPDiskConfigurations = exports.sAPSupportedSku = exports.apiVersion = exports.location = exports.subscriptionId = exports.$host = exports.accept = exports.sAPSizingRecommendation = exports.contentType = void 0;
const mappers_js_1 = require("../models/mappers.js");
exports.contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
exports.sAPSizingRecommendation = {
    parameterPath: ["options", "sAPSizingRecommendation"],
    mapper: mappers_js_1.SAPSizingRecommendationRequest
};
exports.accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
exports.$host = {
    parameterPath: "$host",
    mapper: {
        serializedName: "$host",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
exports.subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        constraints: {
            MinLength: 1
        },
        serializedName: "subscriptionId",
        required: true,
        type: {
            name: "String"
        }
    }
};
exports.location = {
    parameterPath: "location",
    mapper: {
        constraints: {
            MinLength: 1
        },
        serializedName: "location",
        required: true,
        type: {
            name: "String"
        }
    }
};
exports.apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2023-04-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
exports.sAPSupportedSku = {
    parameterPath: ["options", "sAPSupportedSku"],
    mapper: mappers_js_1.SAPSupportedSkusRequest
};
exports.sAPDiskConfigurations = {
    parameterPath: ["options", "sAPDiskConfigurations"],
    mapper: mappers_js_1.SAPDiskConfigurationsRequest
};
exports.sAPAvailabilityZoneDetails = {
    parameterPath: ["options", "sAPAvailabilityZoneDetails"],
    mapper: mappers_js_1.SAPAvailabilityZoneDetailsRequest
};
exports.body = {
    parameterPath: ["options", "body"],
    mapper: mappers_js_1.SAPVirtualInstance
};
exports.resourceGroupName = {
    parameterPath: "resourceGroupName",
    mapper: {
        constraints: {
            MaxLength: 90,
            MinLength: 1
        },
        serializedName: "resourceGroupName",
        required: true,
        type: {
            name: "String"
        }
    }
};
exports.sapVirtualInstanceName = {
    parameterPath: "sapVirtualInstanceName",
    mapper: {
        serializedName: "sapVirtualInstanceName",
        required: true,
        type: {
            name: "String"
        }
    }
};
exports.body1 = {
    parameterPath: ["options", "body"],
    mapper: mappers_js_1.UpdateSAPVirtualInstanceRequest
};
exports.body2 = {
    parameterPath: ["options", "body"],
    mapper: mappers_js_1.StopRequest
};
exports.nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
exports.centralInstanceName = {
    parameterPath: "centralInstanceName",
    mapper: {
        serializedName: "centralInstanceName",
        required: true,
        type: {
            name: "String"
        }
    }
};
exports.body3 = {
    parameterPath: ["options", "body"],
    mapper: mappers_js_1.SAPCentralServerInstance
};
exports.body4 = {
    parameterPath: ["options", "body"],
    mapper: mappers_js_1.UpdateSAPCentralInstanceRequest
};
exports.databaseInstanceName = {
    parameterPath: "databaseInstanceName",
    mapper: {
        serializedName: "databaseInstanceName",
        required: true,
        type: {
            name: "String"
        }
    }
};
exports.body5 = {
    parameterPath: ["options", "body"],
    mapper: mappers_js_1.SAPDatabaseInstance
};
exports.body6 = {
    parameterPath: ["options", "body"],
    mapper: mappers_js_1.UpdateSAPDatabaseInstanceRequest
};
exports.applicationInstanceName = {
    parameterPath: "applicationInstanceName",
    mapper: {
        serializedName: "applicationInstanceName",
        required: true,
        type: {
            name: "String"
        }
    }
};
exports.body7 = {
    parameterPath: ["options", "body"],
    mapper: mappers_js_1.SAPApplicationServerInstance
};
exports.body8 = {
    parameterPath: ["options", "body"],
    mapper: mappers_js_1.UpdateSAPApplicationInstanceRequest
};
exports.monitorName = {
    parameterPath: "monitorName",
    mapper: {
        serializedName: "monitorName",
        required: true,
        type: {
            name: "String"
        }
    }
};
exports.monitorParameter = {
    parameterPath: "monitorParameter",
    mapper: mappers_js_1.Monitor
};
exports.body9 = {
    parameterPath: "body",
    mapper: mappers_js_1.UpdateMonitorRequest
};
exports.providerInstanceName = {
    parameterPath: "providerInstanceName",
    mapper: {
        serializedName: "providerInstanceName",
        required: true,
        type: {
            name: "String"
        }
    }
};
exports.providerInstanceParameter = {
    parameterPath: "providerInstanceParameter",
    mapper: mappers_js_1.ProviderInstance
};
exports.sapLandscapeMonitorParameter = {
    parameterPath: "sapLandscapeMonitorParameter",
    mapper: mappers_js_1.SapLandscapeMonitor
};
//# sourceMappingURL=parameters.js.map