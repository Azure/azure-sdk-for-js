"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProviderSpecificProperties = exports.ProviderInstanceListResult = exports.UpdateMonitorRequest = exports.ErrorInnerError = exports.ErrorModel = exports.MonitorListResult = exports.StopRequest = exports.SAPApplicationServerInstanceList = exports.UpdateSAPApplicationInstanceRequest = exports.ApplicationServerVmDetails = exports.SAPDatabaseInstanceList = exports.UpdateSAPDatabaseInstanceRequest = exports.DatabaseVmDetails = exports.SAPCentralInstanceList = exports.UpdateSAPCentralInstanceRequest = exports.StorageInformation = exports.CentralServerVmDetails = exports.LoadBalancerDetails = exports.EnqueueReplicationServerProperties = exports.GatewayServerProperties = exports.EnqueueServerProperties = exports.MessageServerProperties = exports.SAPVirtualInstanceList = exports.OperationStatusResult = exports.UpdateSAPVirtualInstanceRequest = exports.SystemData = exports.Resource = exports.ErrorDefinition = exports.SAPVirtualInstanceError = exports.ManagedRGConfiguration = exports.SAPConfiguration = exports.UserAssignedIdentity = exports.UserAssignedServiceIdentity = exports.SAPAvailabilityZonePair = exports.SAPAvailabilityZoneDetailsResult = exports.SAPAvailabilityZoneDetailsRequest = exports.DiskDetails = exports.DiskSku = exports.DiskVolumeConfiguration = exports.SAPDiskConfiguration = exports.SAPDiskConfigurationsResult = exports.SAPDiskConfigurationsRequest = exports.SAPSupportedSku = exports.SAPSupportedResourceSkusResult = exports.SAPSupportedSkusRequest = exports.ErrorAdditionalInfo = exports.ErrorDetail = exports.ErrorResponse = exports.SAPSizingRecommendationResult = exports.SAPSizingRecommendationRequest = void 0;
exports.ProviderInstancePropertiesErrors = exports.MonitorPropertiesErrors = exports.OperationsContent = exports.ProxyResource = exports.TrackedResource = exports.DeploymentWithOSConfiguration = exports.DeploymentConfiguration = exports.DiscoveryConfiguration = exports.ThreeTierRecommendationResult = exports.SingleServerRecommendationResult = exports.Tags = exports.OperationsDefinitionArrayResponseWithContinuation = exports.OperationsDefinition = exports.OperationsDisplayDefinition = exports.DeployerVmPackages = exports.OsSapConfiguration = exports.HighAvailabilitySoftwareConfiguration = exports.SoftwareConfiguration = exports.SharedStorageResourceNames = exports.DatabaseServerFullResourceNames = exports.ApplicationServerFullResourceNames = exports.LoadBalancerResourceNames = exports.CentralServerFullResourceNames = exports.NetworkInterfaceResourceNames = exports.VirtualMachineResourceNames = exports.ThreeTierCustomResourceNames = exports.StorageConfiguration = exports.FileShareConfiguration = exports.HighAvailabilityConfiguration = exports.ApplicationServerConfiguration = exports.DatabaseConfiguration = exports.CentralServerConfiguration = exports.InfrastructureConfiguration = exports.SingleServerCustomResourceNames = exports.NetworkConfiguration = exports.VirtualMachineConfiguration = exports.DiskConfiguration = exports.OSProfile = exports.SshKeyPair = exports.SshConfiguration = exports.SshPublicKey = exports.OSConfiguration = exports.ImageReference = exports.OperationDisplay = exports.Operation = exports.OperationListResult = exports.SapLandscapeMonitorListResult = exports.SapLandscapeMonitorMetricThresholds = exports.SapLandscapeMonitorSidMapping = exports.SapLandscapeMonitorPropertiesGrouping = void 0;
exports.discriminators = exports.SapLandscapeMonitor = exports.ProviderInstance = exports.Monitor = exports.SAPApplicationServerInstance = exports.SAPDatabaseInstance = exports.SAPCentralServerInstance = exports.SAPVirtualInstance = exports.OperationsDefinitionDisplay = exports.ExternalInstallationSoftwareConfiguration = exports.SAPInstallWithoutOSConfigSoftwareConfiguration = exports.ServiceInitiatedSoftwareConfiguration = exports.ThreeTierFullResourceNames = exports.MountFileShareConfiguration = exports.CreateAndMountFileShareConfiguration = exports.SkipFileShareConfiguration = exports.ThreeTierConfiguration = exports.SingleServerConfiguration = exports.SingleServerFullResourceNames = exports.LinuxConfiguration = exports.WindowsConfiguration = exports.MsSqlServerProviderInstanceProperties = exports.PrometheusHaClusterProviderInstanceProperties = exports.DB2ProviderInstanceProperties = exports.PrometheusOSProviderInstanceProperties = exports.SapNetWeaverProviderInstanceProperties = exports.HanaDbProviderInstanceProperties = void 0;
exports.SAPSizingRecommendationRequest = {
    type: {
        name: "Composite",
        className: "SAPSizingRecommendationRequest",
        modelProperties: {
            appLocation: {
                serializedName: "appLocation",
                required: true,
                type: {
                    name: "String"
                }
            },
            environment: {
                serializedName: "environment",
                required: true,
                type: {
                    name: "String"
                }
            },
            sapProduct: {
                serializedName: "sapProduct",
                required: true,
                type: {
                    name: "String"
                }
            },
            deploymentType: {
                serializedName: "deploymentType",
                required: true,
                type: {
                    name: "String"
                }
            },
            saps: {
                serializedName: "saps",
                required: true,
                type: {
                    name: "Number"
                }
            },
            dbMemory: {
                serializedName: "dbMemory",
                required: true,
                type: {
                    name: "Number"
                }
            },
            databaseType: {
                serializedName: "databaseType",
                required: true,
                type: {
                    name: "String"
                }
            },
            dbScaleMethod: {
                serializedName: "dbScaleMethod",
                type: {
                    name: "String"
                }
            },
            highAvailabilityType: {
                serializedName: "highAvailabilityType",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.SAPSizingRecommendationResult = {
    type: {
        name: "Composite",
        className: "SAPSizingRecommendationResult",
        uberParent: "SAPSizingRecommendationResult",
        polymorphicDiscriminator: {
            serializedName: "deploymentType",
            clientName: "deploymentType"
        },
        modelProperties: {
            deploymentType: {
                serializedName: "deploymentType",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ErrorResponse = {
    type: {
        name: "Composite",
        className: "ErrorResponse",
        modelProperties: {
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ErrorDetail"
                }
            }
        }
    }
};
exports.ErrorDetail = {
    type: {
        name: "Composite",
        className: "ErrorDetail",
        modelProperties: {
            code: {
                serializedName: "code",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            target: {
                serializedName: "target",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            details: {
                serializedName: "details",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ErrorDetail"
                        }
                    }
                }
            },
            additionalInfo: {
                serializedName: "additionalInfo",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ErrorAdditionalInfo"
                        }
                    }
                }
            }
        }
    }
};
exports.ErrorAdditionalInfo = {
    type: {
        name: "Composite",
        className: "ErrorAdditionalInfo",
        modelProperties: {
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            info: {
                serializedName: "info",
                readOnly: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "any" } }
                }
            }
        }
    }
};
exports.SAPSupportedSkusRequest = {
    type: {
        name: "Composite",
        className: "SAPSupportedSkusRequest",
        modelProperties: {
            appLocation: {
                serializedName: "appLocation",
                required: true,
                type: {
                    name: "String"
                }
            },
            environment: {
                serializedName: "environment",
                required: true,
                type: {
                    name: "String"
                }
            },
            sapProduct: {
                serializedName: "sapProduct",
                required: true,
                type: {
                    name: "String"
                }
            },
            deploymentType: {
                serializedName: "deploymentType",
                required: true,
                type: {
                    name: "String"
                }
            },
            databaseType: {
                serializedName: "databaseType",
                required: true,
                type: {
                    name: "String"
                }
            },
            highAvailabilityType: {
                serializedName: "highAvailabilityType",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.SAPSupportedResourceSkusResult = {
    type: {
        name: "Composite",
        className: "SAPSupportedResourceSkusResult",
        modelProperties: {
            supportedSkus: {
                serializedName: "supportedSkus",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SAPSupportedSku"
                        }
                    }
                }
            }
        }
    }
};
exports.SAPSupportedSku = {
    type: {
        name: "Composite",
        className: "SAPSupportedSku",
        modelProperties: {
            vmSku: {
                serializedName: "vmSku",
                type: {
                    name: "String"
                }
            },
            isAppServerCertified: {
                serializedName: "isAppServerCertified",
                type: {
                    name: "Boolean"
                }
            },
            isDatabaseCertified: {
                serializedName: "isDatabaseCertified",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
exports.SAPDiskConfigurationsRequest = {
    type: {
        name: "Composite",
        className: "SAPDiskConfigurationsRequest",
        modelProperties: {
            appLocation: {
                serializedName: "appLocation",
                required: true,
                type: {
                    name: "String"
                }
            },
            environment: {
                serializedName: "environment",
                required: true,
                type: {
                    name: "String"
                }
            },
            sapProduct: {
                serializedName: "sapProduct",
                required: true,
                type: {
                    name: "String"
                }
            },
            databaseType: {
                serializedName: "databaseType",
                required: true,
                type: {
                    name: "String"
                }
            },
            deploymentType: {
                serializedName: "deploymentType",
                required: true,
                type: {
                    name: "String"
                }
            },
            dbVmSku: {
                serializedName: "dbVmSku",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.SAPDiskConfigurationsResult = {
    type: {
        name: "Composite",
        className: "SAPDiskConfigurationsResult",
        modelProperties: {
            volumeConfigurations: {
                serializedName: "volumeConfigurations",
                type: {
                    name: "Dictionary",
                    value: {
                        type: { name: "Composite", className: "SAPDiskConfiguration" }
                    }
                }
            }
        }
    }
};
exports.SAPDiskConfiguration = {
    type: {
        name: "Composite",
        className: "SAPDiskConfiguration",
        modelProperties: {
            recommendedConfiguration: {
                serializedName: "recommendedConfiguration",
                type: {
                    name: "Composite",
                    className: "DiskVolumeConfiguration"
                }
            },
            supportedConfigurations: {
                serializedName: "supportedConfigurations",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DiskDetails"
                        }
                    }
                }
            }
        }
    }
};
exports.DiskVolumeConfiguration = {
    type: {
        name: "Composite",
        className: "DiskVolumeConfiguration",
        modelProperties: {
            count: {
                serializedName: "count",
                type: {
                    name: "Number"
                }
            },
            sizeGB: {
                serializedName: "sizeGB",
                type: {
                    name: "Number"
                }
            },
            sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "DiskSku"
                }
            }
        }
    }
};
exports.DiskSku = {
    type: {
        name: "Composite",
        className: "DiskSku",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.DiskDetails = {
    type: {
        name: "Composite",
        className: "DiskDetails",
        modelProperties: {
            sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "DiskSku"
                }
            },
            sizeGB: {
                serializedName: "sizeGB",
                type: {
                    name: "Number"
                }
            },
            minimumSupportedDiskCount: {
                serializedName: "minimumSupportedDiskCount",
                type: {
                    name: "Number"
                }
            },
            maximumSupportedDiskCount: {
                serializedName: "maximumSupportedDiskCount",
                type: {
                    name: "Number"
                }
            },
            iopsReadWrite: {
                serializedName: "iopsReadWrite",
                type: {
                    name: "Number"
                }
            },
            mbpsReadWrite: {
                serializedName: "mbpsReadWrite",
                type: {
                    name: "Number"
                }
            },
            diskTier: {
                serializedName: "diskTier",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.SAPAvailabilityZoneDetailsRequest = {
    type: {
        name: "Composite",
        className: "SAPAvailabilityZoneDetailsRequest",
        modelProperties: {
            appLocation: {
                serializedName: "appLocation",
                required: true,
                type: {
                    name: "String"
                }
            },
            sapProduct: {
                serializedName: "sapProduct",
                required: true,
                type: {
                    name: "String"
                }
            },
            databaseType: {
                serializedName: "databaseType",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.SAPAvailabilityZoneDetailsResult = {
    type: {
        name: "Composite",
        className: "SAPAvailabilityZoneDetailsResult",
        modelProperties: {
            availabilityZonePairs: {
                serializedName: "availabilityZonePairs",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SAPAvailabilityZonePair"
                        }
                    }
                }
            }
        }
    }
};
exports.SAPAvailabilityZonePair = {
    type: {
        name: "Composite",
        className: "SAPAvailabilityZonePair",
        modelProperties: {
            zoneA: {
                serializedName: "zoneA",
                type: {
                    name: "Number"
                }
            },
            zoneB: {
                serializedName: "zoneB",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.UserAssignedServiceIdentity = {
    type: {
        name: "Composite",
        className: "UserAssignedServiceIdentity",
        modelProperties: {
            type: {
                serializedName: "type",
                required: true,
                type: {
                    name: "String"
                }
            },
            userAssignedIdentities: {
                serializedName: "userAssignedIdentities",
                type: {
                    name: "Dictionary",
                    value: {
                        type: { name: "Composite", className: "UserAssignedIdentity" }
                    }
                }
            }
        }
    }
};
exports.UserAssignedIdentity = {
    type: {
        name: "Composite",
        className: "UserAssignedIdentity",
        modelProperties: {
            principalId: {
                serializedName: "principalId",
                readOnly: true,
                type: {
                    name: "Uuid"
                }
            },
            clientId: {
                serializedName: "clientId",
                readOnly: true,
                type: {
                    name: "Uuid"
                }
            }
        }
    }
};
exports.SAPConfiguration = {
    type: {
        name: "Composite",
        className: "SAPConfiguration",
        uberParent: "SAPConfiguration",
        polymorphicDiscriminator: {
            serializedName: "configurationType",
            clientName: "configurationType"
        },
        modelProperties: {
            configurationType: {
                serializedName: "configurationType",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ManagedRGConfiguration = {
    type: {
        name: "Composite",
        className: "ManagedRGConfiguration",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.SAPVirtualInstanceError = {
    type: {
        name: "Composite",
        className: "SAPVirtualInstanceError",
        modelProperties: {
            properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "ErrorDefinition"
                }
            }
        }
    }
};
exports.ErrorDefinition = {
    type: {
        name: "Composite",
        className: "ErrorDefinition",
        modelProperties: {
            code: {
                serializedName: "code",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            details: {
                serializedName: "details",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ErrorDefinition"
                        }
                    }
                }
            }
        }
    }
};
exports.Resource = {
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            }
        }
    }
};
exports.SystemData = {
    type: {
        name: "Composite",
        className: "SystemData",
        modelProperties: {
            createdBy: {
                serializedName: "createdBy",
                type: {
                    name: "String"
                }
            },
            createdByType: {
                serializedName: "createdByType",
                type: {
                    name: "String"
                }
            },
            createdAt: {
                serializedName: "createdAt",
                type: {
                    name: "DateTime"
                }
            },
            lastModifiedBy: {
                serializedName: "lastModifiedBy",
                type: {
                    name: "String"
                }
            },
            lastModifiedByType: {
                serializedName: "lastModifiedByType",
                type: {
                    name: "String"
                }
            },
            lastModifiedAt: {
                serializedName: "lastModifiedAt",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
exports.UpdateSAPVirtualInstanceRequest = {
    type: {
        name: "Composite",
        className: "UpdateSAPVirtualInstanceRequest",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "UserAssignedServiceIdentity"
                }
            }
        }
    }
};
exports.OperationStatusResult = {
    type: {
        name: "Composite",
        className: "OperationStatusResult",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                required: true,
                type: {
                    name: "String"
                }
            },
            percentComplete: {
                constraints: {
                    InclusiveMaximum: 100,
                    InclusiveMinimum: 0
                },
                serializedName: "percentComplete",
                type: {
                    name: "Number"
                }
            },
            startTime: {
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                serializedName: "endTime",
                type: {
                    name: "DateTime"
                }
            },
            operations: {
                serializedName: "operations",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "OperationStatusResult"
                        }
                    }
                }
            },
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ErrorDetail"
                }
            }
        }
    }
};
exports.SAPVirtualInstanceList = {
    type: {
        name: "Composite",
        className: "SAPVirtualInstanceList",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SAPVirtualInstance"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.MessageServerProperties = {
    type: {
        name: "Composite",
        className: "MessageServerProperties",
        modelProperties: {
            msPort: {
                serializedName: "msPort",
                readOnly: true,
                nullable: true,
                type: {
                    name: "Number"
                }
            },
            internalMsPort: {
                serializedName: "internalMsPort",
                readOnly: true,
                nullable: true,
                type: {
                    name: "Number"
                }
            },
            httpPort: {
                serializedName: "httpPort",
                readOnly: true,
                nullable: true,
                type: {
                    name: "Number"
                }
            },
            httpsPort: {
                serializedName: "httpsPort",
                readOnly: true,
                nullable: true,
                type: {
                    name: "Number"
                }
            },
            hostname: {
                serializedName: "hostname",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            ipAddress: {
                serializedName: "ipAddress",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            health: {
                serializedName: "health",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.EnqueueServerProperties = {
    type: {
        name: "Composite",
        className: "EnqueueServerProperties",
        modelProperties: {
            hostname: {
                serializedName: "hostname",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            ipAddress: {
                serializedName: "ipAddress",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            port: {
                serializedName: "port",
                readOnly: true,
                nullable: true,
                type: {
                    name: "Number"
                }
            },
            health: {
                serializedName: "health",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.GatewayServerProperties = {
    type: {
        name: "Composite",
        className: "GatewayServerProperties",
        modelProperties: {
            port: {
                serializedName: "port",
                readOnly: true,
                nullable: true,
                type: {
                    name: "Number"
                }
            },
            health: {
                serializedName: "health",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.EnqueueReplicationServerProperties = {
    type: {
        name: "Composite",
        className: "EnqueueReplicationServerProperties",
        modelProperties: {
            ersVersion: {
                serializedName: "ersVersion",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            instanceNo: {
                serializedName: "instanceNo",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            hostname: {
                serializedName: "hostname",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            kernelVersion: {
                serializedName: "kernelVersion",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            kernelPatch: {
                serializedName: "kernelPatch",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            ipAddress: {
                serializedName: "ipAddress",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            health: {
                serializedName: "health",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.LoadBalancerDetails = {
    type: {
        name: "Composite",
        className: "LoadBalancerDetails",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.CentralServerVmDetails = {
    type: {
        name: "Composite",
        className: "CentralServerVmDetails",
        modelProperties: {
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            virtualMachineId: {
                serializedName: "virtualMachineId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            storageDetails: {
                serializedName: "storageDetails",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StorageInformation"
                        }
                    }
                }
            }
        }
    }
};
exports.StorageInformation = {
    type: {
        name: "Composite",
        className: "StorageInformation",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.UpdateSAPCentralInstanceRequest = {
    type: {
        name: "Composite",
        className: "UpdateSAPCentralInstanceRequest",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
exports.SAPCentralInstanceList = {
    type: {
        name: "Composite",
        className: "SAPCentralInstanceList",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SAPCentralServerInstance"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.DatabaseVmDetails = {
    type: {
        name: "Composite",
        className: "DatabaseVmDetails",
        modelProperties: {
            virtualMachineId: {
                serializedName: "virtualMachineId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            storageDetails: {
                serializedName: "storageDetails",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StorageInformation"
                        }
                    }
                }
            }
        }
    }
};
exports.UpdateSAPDatabaseInstanceRequest = {
    type: {
        name: "Composite",
        className: "UpdateSAPDatabaseInstanceRequest",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
exports.SAPDatabaseInstanceList = {
    type: {
        name: "Composite",
        className: "SAPDatabaseInstanceList",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SAPDatabaseInstance"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ApplicationServerVmDetails = {
    type: {
        name: "Composite",
        className: "ApplicationServerVmDetails",
        modelProperties: {
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            virtualMachineId: {
                serializedName: "virtualMachineId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            storageDetails: {
                serializedName: "storageDetails",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StorageInformation"
                        }
                    }
                }
            }
        }
    }
};
exports.UpdateSAPApplicationInstanceRequest = {
    type: {
        name: "Composite",
        className: "UpdateSAPApplicationInstanceRequest",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
exports.SAPApplicationServerInstanceList = {
    type: {
        name: "Composite",
        className: "SAPApplicationServerInstanceList",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SAPApplicationServerInstance"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.StopRequest = {
    type: {
        name: "Composite",
        className: "StopRequest",
        modelProperties: {
            softStopTimeoutSeconds: {
                defaultValue: 0,
                serializedName: "softStopTimeoutSeconds",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.MonitorListResult = {
    type: {
        name: "Composite",
        className: "MonitorListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Monitor"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ErrorModel = {
    type: {
        name: "Composite",
        className: "ErrorModel",
        modelProperties: {
            code: {
                serializedName: "code",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            target: {
                serializedName: "target",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            details: {
                serializedName: "details",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ErrorModel"
                        }
                    }
                }
            },
            innerError: {
                serializedName: "innerError",
                type: {
                    name: "Composite",
                    className: "ErrorInnerError"
                }
            }
        }
    }
};
exports.ErrorInnerError = {
    type: {
        name: "Composite",
        className: "ErrorInnerError",
        modelProperties: {
            innerError: {
                serializedName: "innerError",
                type: {
                    name: "Composite",
                    className: "ErrorModel"
                }
            }
        }
    }
};
exports.UpdateMonitorRequest = {
    type: {
        name: "Composite",
        className: "UpdateMonitorRequest",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "UserAssignedServiceIdentity"
                }
            }
        }
    }
};
exports.ProviderInstanceListResult = {
    type: {
        name: "Composite",
        className: "ProviderInstanceListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ProviderInstance"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ProviderSpecificProperties = {
    type: {
        name: "Composite",
        className: "ProviderSpecificProperties",
        uberParent: "ProviderSpecificProperties",
        polymorphicDiscriminator: {
            serializedName: "providerType",
            clientName: "providerType"
        },
        modelProperties: {
            providerType: {
                serializedName: "providerType",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.SapLandscapeMonitorPropertiesGrouping = {
    type: {
        name: "Composite",
        className: "SapLandscapeMonitorPropertiesGrouping",
        modelProperties: {
            landscape: {
                serializedName: "landscape",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SapLandscapeMonitorSidMapping"
                        }
                    }
                }
            },
            sapApplication: {
                serializedName: "sapApplication",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SapLandscapeMonitorSidMapping"
                        }
                    }
                }
            }
        }
    }
};
exports.SapLandscapeMonitorSidMapping = {
    type: {
        name: "Composite",
        className: "SapLandscapeMonitorSidMapping",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            topSid: {
                serializedName: "topSid",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
exports.SapLandscapeMonitorMetricThresholds = {
    type: {
        name: "Composite",
        className: "SapLandscapeMonitorMetricThresholds",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            green: {
                serializedName: "green",
                type: {
                    name: "Number"
                }
            },
            yellow: {
                serializedName: "yellow",
                type: {
                    name: "Number"
                }
            },
            red: {
                serializedName: "red",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.SapLandscapeMonitorListResult = {
    type: {
        name: "Composite",
        className: "SapLandscapeMonitorListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SapLandscapeMonitor"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.OperationListResult = {
    type: {
        name: "Composite",
        className: "OperationListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Operation"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.Operation = {
    type: {
        name: "Composite",
        className: "Operation",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            isDataAction: {
                serializedName: "isDataAction",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            },
            display: {
                serializedName: "display",
                type: {
                    name: "Composite",
                    className: "OperationDisplay"
                }
            },
            origin: {
                serializedName: "origin",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            actionType: {
                serializedName: "actionType",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.OperationDisplay = {
    type: {
        name: "Composite",
        className: "OperationDisplay",
        modelProperties: {
            provider: {
                serializedName: "provider",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "resource",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            operation: {
                serializedName: "operation",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ImageReference = {
    type: {
        name: "Composite",
        className: "ImageReference",
        modelProperties: {
            publisher: {
                serializedName: "publisher",
                type: {
                    name: "String"
                }
            },
            offer: {
                serializedName: "offer",
                type: {
                    name: "String"
                }
            },
            sku: {
                serializedName: "sku",
                type: {
                    name: "String"
                }
            },
            version: {
                serializedName: "version",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.OSConfiguration = {
    type: {
        name: "Composite",
        className: "OSConfiguration",
        uberParent: "OSConfiguration",
        polymorphicDiscriminator: {
            serializedName: "osType",
            clientName: "osType"
        },
        modelProperties: {
            osType: {
                serializedName: "osType",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.SshPublicKey = {
    type: {
        name: "Composite",
        className: "SshPublicKey",
        modelProperties: {
            keyData: {
                serializedName: "keyData",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.SshConfiguration = {
    type: {
        name: "Composite",
        className: "SshConfiguration",
        modelProperties: {
            publicKeys: {
                serializedName: "publicKeys",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SshPublicKey"
                        }
                    }
                }
            }
        }
    }
};
exports.SshKeyPair = {
    type: {
        name: "Composite",
        className: "SshKeyPair",
        modelProperties: {
            publicKey: {
                serializedName: "publicKey",
                type: {
                    name: "String"
                }
            },
            privateKey: {
                serializedName: "privateKey",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.OSProfile = {
    type: {
        name: "Composite",
        className: "OSProfile",
        modelProperties: {
            adminUsername: {
                serializedName: "adminUsername",
                type: {
                    name: "String"
                }
            },
            adminPassword: {
                serializedName: "adminPassword",
                type: {
                    name: "String"
                }
            },
            osConfiguration: {
                serializedName: "osConfiguration",
                type: {
                    name: "Composite",
                    className: "OSConfiguration"
                }
            }
        }
    }
};
exports.DiskConfiguration = {
    type: {
        name: "Composite",
        className: "DiskConfiguration",
        modelProperties: {
            diskVolumeConfigurations: {
                serializedName: "diskVolumeConfigurations",
                type: {
                    name: "Dictionary",
                    value: {
                        type: { name: "Composite", className: "DiskVolumeConfiguration" }
                    }
                }
            }
        }
    }
};
exports.VirtualMachineConfiguration = {
    type: {
        name: "Composite",
        className: "VirtualMachineConfiguration",
        modelProperties: {
            vmSize: {
                serializedName: "vmSize",
                required: true,
                type: {
                    name: "String"
                }
            },
            imageReference: {
                serializedName: "imageReference",
                type: {
                    name: "Composite",
                    className: "ImageReference"
                }
            },
            osProfile: {
                serializedName: "osProfile",
                type: {
                    name: "Composite",
                    className: "OSProfile"
                }
            }
        }
    }
};
exports.NetworkConfiguration = {
    type: {
        name: "Composite",
        className: "NetworkConfiguration",
        modelProperties: {
            isSecondaryIpEnabled: {
                defaultValue: false,
                serializedName: "isSecondaryIpEnabled",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
exports.SingleServerCustomResourceNames = {
    type: {
        name: "Composite",
        className: "SingleServerCustomResourceNames",
        uberParent: "SingleServerCustomResourceNames",
        polymorphicDiscriminator: {
            serializedName: "namingPatternType",
            clientName: "namingPatternType"
        },
        modelProperties: {
            namingPatternType: {
                serializedName: "namingPatternType",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.InfrastructureConfiguration = {
    type: {
        name: "Composite",
        className: "InfrastructureConfiguration",
        uberParent: "InfrastructureConfiguration",
        polymorphicDiscriminator: {
            serializedName: "deploymentType",
            clientName: "deploymentType"
        },
        modelProperties: {
            deploymentType: {
                serializedName: "deploymentType",
                required: true,
                type: {
                    name: "String"
                }
            },
            appResourceGroup: {
                serializedName: "appResourceGroup",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.CentralServerConfiguration = {
    type: {
        name: "Composite",
        className: "CentralServerConfiguration",
        modelProperties: {
            subnetId: {
                serializedName: "subnetId",
                required: true,
                type: {
                    name: "String"
                }
            },
            virtualMachineConfiguration: {
                serializedName: "virtualMachineConfiguration",
                type: {
                    name: "Composite",
                    className: "VirtualMachineConfiguration"
                }
            },
            instanceCount: {
                serializedName: "instanceCount",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.DatabaseConfiguration = {
    type: {
        name: "Composite",
        className: "DatabaseConfiguration",
        modelProperties: {
            databaseType: {
                serializedName: "databaseType",
                type: {
                    name: "String"
                }
            },
            subnetId: {
                serializedName: "subnetId",
                required: true,
                type: {
                    name: "String"
                }
            },
            virtualMachineConfiguration: {
                serializedName: "virtualMachineConfiguration",
                type: {
                    name: "Composite",
                    className: "VirtualMachineConfiguration"
                }
            },
            instanceCount: {
                serializedName: "instanceCount",
                required: true,
                type: {
                    name: "Number"
                }
            },
            diskConfiguration: {
                serializedName: "diskConfiguration",
                type: {
                    name: "Composite",
                    className: "DiskConfiguration"
                }
            }
        }
    }
};
exports.ApplicationServerConfiguration = {
    type: {
        name: "Composite",
        className: "ApplicationServerConfiguration",
        modelProperties: {
            subnetId: {
                serializedName: "subnetId",
                required: true,
                type: {
                    name: "String"
                }
            },
            virtualMachineConfiguration: {
                serializedName: "virtualMachineConfiguration",
                type: {
                    name: "Composite",
                    className: "VirtualMachineConfiguration"
                }
            },
            instanceCount: {
                serializedName: "instanceCount",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.HighAvailabilityConfiguration = {
    type: {
        name: "Composite",
        className: "HighAvailabilityConfiguration",
        modelProperties: {
            highAvailabilityType: {
                serializedName: "highAvailabilityType",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.FileShareConfiguration = {
    type: {
        name: "Composite",
        className: "FileShareConfiguration",
        uberParent: "FileShareConfiguration",
        polymorphicDiscriminator: {
            serializedName: "configurationType",
            clientName: "configurationType"
        },
        modelProperties: {
            configurationType: {
                serializedName: "configurationType",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.StorageConfiguration = {
    type: {
        name: "Composite",
        className: "StorageConfiguration",
        modelProperties: {
            transportFileShareConfiguration: {
                serializedName: "transportFileShareConfiguration",
                type: {
                    name: "Composite",
                    className: "FileShareConfiguration"
                }
            }
        }
    }
};
exports.ThreeTierCustomResourceNames = {
    type: {
        name: "Composite",
        className: "ThreeTierCustomResourceNames",
        uberParent: "ThreeTierCustomResourceNames",
        polymorphicDiscriminator: {
            serializedName: "namingPatternType",
            clientName: "namingPatternType"
        },
        modelProperties: {
            namingPatternType: {
                serializedName: "namingPatternType",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.VirtualMachineResourceNames = {
    type: {
        name: "Composite",
        className: "VirtualMachineResourceNames",
        modelProperties: {
            vmName: {
                serializedName: "vmName",
                type: {
                    name: "String"
                }
            },
            hostName: {
                serializedName: "hostName",
                type: {
                    name: "String"
                }
            },
            networkInterfaces: {
                constraints: {
                    MaxItems: 1
                },
                serializedName: "networkInterfaces",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "NetworkInterfaceResourceNames"
                        }
                    }
                }
            },
            osDiskName: {
                serializedName: "osDiskName",
                type: {
                    name: "String"
                }
            },
            dataDiskNames: {
                serializedName: "dataDiskNames",
                type: {
                    name: "Dictionary",
                    value: {
                        type: { name: "Sequence", element: { type: { name: "String" } } }
                    }
                }
            }
        }
    }
};
exports.NetworkInterfaceResourceNames = {
    type: {
        name: "Composite",
        className: "NetworkInterfaceResourceNames",
        modelProperties: {
            networkInterfaceName: {
                serializedName: "networkInterfaceName",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.CentralServerFullResourceNames = {
    type: {
        name: "Composite",
        className: "CentralServerFullResourceNames",
        modelProperties: {
            virtualMachines: {
                constraints: {
                    MaxItems: 2
                },
                serializedName: "virtualMachines",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineResourceNames"
                        }
                    }
                }
            },
            availabilitySetName: {
                serializedName: "availabilitySetName",
                type: {
                    name: "String"
                }
            },
            loadBalancer: {
                serializedName: "loadBalancer",
                type: {
                    name: "Composite",
                    className: "LoadBalancerResourceNames"
                }
            }
        }
    }
};
exports.LoadBalancerResourceNames = {
    type: {
        name: "Composite",
        className: "LoadBalancerResourceNames",
        modelProperties: {
            loadBalancerName: {
                serializedName: "loadBalancerName",
                type: {
                    name: "String"
                }
            },
            frontendIpConfigurationNames: {
                constraints: {
                    MaxItems: 2
                },
                serializedName: "frontendIpConfigurationNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            backendPoolNames: {
                constraints: {
                    MaxItems: 1
                },
                serializedName: "backendPoolNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            healthProbeNames: {
                constraints: {
                    MaxItems: 2
                },
                serializedName: "healthProbeNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
exports.ApplicationServerFullResourceNames = {
    type: {
        name: "Composite",
        className: "ApplicationServerFullResourceNames",
        modelProperties: {
            virtualMachines: {
                serializedName: "virtualMachines",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineResourceNames"
                        }
                    }
                }
            },
            availabilitySetName: {
                serializedName: "availabilitySetName",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.DatabaseServerFullResourceNames = {
    type: {
        name: "Composite",
        className: "DatabaseServerFullResourceNames",
        modelProperties: {
            virtualMachines: {
                constraints: {
                    MaxItems: 2
                },
                serializedName: "virtualMachines",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineResourceNames"
                        }
                    }
                }
            },
            availabilitySetName: {
                serializedName: "availabilitySetName",
                type: {
                    name: "String"
                }
            },
            loadBalancer: {
                serializedName: "loadBalancer",
                type: {
                    name: "Composite",
                    className: "LoadBalancerResourceNames"
                }
            }
        }
    }
};
exports.SharedStorageResourceNames = {
    type: {
        name: "Composite",
        className: "SharedStorageResourceNames",
        modelProperties: {
            sharedStorageAccountName: {
                serializedName: "sharedStorageAccountName",
                type: {
                    name: "String"
                }
            },
            sharedStorageAccountPrivateEndPointName: {
                serializedName: "sharedStorageAccountPrivateEndPointName",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.SoftwareConfiguration = {
    type: {
        name: "Composite",
        className: "SoftwareConfiguration",
        uberParent: "SoftwareConfiguration",
        polymorphicDiscriminator: {
            serializedName: "softwareInstallationType",
            clientName: "softwareInstallationType"
        },
        modelProperties: {
            softwareInstallationType: {
                serializedName: "softwareInstallationType",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.HighAvailabilitySoftwareConfiguration = {
    type: {
        name: "Composite",
        className: "HighAvailabilitySoftwareConfiguration",
        modelProperties: {
            fencingClientId: {
                serializedName: "fencingClientId",
                required: true,
                type: {
                    name: "String"
                }
            },
            fencingClientPassword: {
                serializedName: "fencingClientPassword",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.OsSapConfiguration = {
    type: {
        name: "Composite",
        className: "OsSapConfiguration",
        modelProperties: {
            deployerVmPackages: {
                serializedName: "deployerVmPackages",
                type: {
                    name: "Composite",
                    className: "DeployerVmPackages"
                }
            },
            sapFqdn: {
                serializedName: "sapFqdn",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.DeployerVmPackages = {
    type: {
        name: "Composite",
        className: "DeployerVmPackages",
        modelProperties: {
            url: {
                serializedName: "url",
                type: {
                    name: "String"
                }
            },
            storageAccountId: {
                serializedName: "storageAccountId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.OperationsDisplayDefinition = {
    type: {
        name: "Composite",
        className: "OperationsDisplayDefinition",
        modelProperties: {
            provider: {
                serializedName: "provider",
                required: true,
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "resource",
                required: true,
                type: {
                    name: "String"
                }
            },
            operation: {
                serializedName: "operation",
                required: true,
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.OperationsDefinition = {
    type: {
        name: "Composite",
        className: "OperationsDefinition",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            isDataAction: {
                serializedName: "isDataAction",
                type: {
                    name: "Boolean"
                }
            },
            origin: {
                serializedName: "origin",
                type: {
                    name: "String"
                }
            },
            display: {
                serializedName: "display",
                type: {
                    name: "Composite",
                    className: "OperationsDefinitionDisplay"
                }
            },
            actionType: {
                serializedName: "actionType",
                type: {
                    name: "String"
                }
            },
            properties: {
                serializedName: "properties",
                type: {
                    name: "any"
                }
            }
        }
    }
};
exports.OperationsDefinitionArrayResponseWithContinuation = {
    type: {
        name: "Composite",
        className: "OperationsDefinitionArrayResponseWithContinuation",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "OperationsDefinition"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.Tags = {
    type: {
        name: "Composite",
        className: "Tags",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
exports.SingleServerRecommendationResult = {
    serializedName: "SingleServer",
    type: {
        name: "Composite",
        className: "SingleServerRecommendationResult",
        uberParent: "SAPSizingRecommendationResult",
        polymorphicDiscriminator: exports.SAPSizingRecommendationResult.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, exports.SAPSizingRecommendationResult.type.modelProperties), { vmSku: {
                serializedName: "vmSku",
                type: {
                    name: "String"
                }
            } })
    }
};
exports.ThreeTierRecommendationResult = {
    serializedName: "ThreeTier",
    type: {
        name: "Composite",
        className: "ThreeTierRecommendationResult",
        uberParent: "SAPSizingRecommendationResult",
        polymorphicDiscriminator: exports.SAPSizingRecommendationResult.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, exports.SAPSizingRecommendationResult.type.modelProperties), { dbVmSku: {
                serializedName: "dbVmSku",
                type: {
                    name: "String"
                }
            }, databaseInstanceCount: {
                serializedName: "databaseInstanceCount",
                type: {
                    name: "Number"
                }
            }, centralServerVmSku: {
                serializedName: "centralServerVmSku",
                type: {
                    name: "String"
                }
            }, centralServerInstanceCount: {
                serializedName: "centralServerInstanceCount",
                type: {
                    name: "Number"
                }
            }, applicationServerVmSku: {
                serializedName: "applicationServerVmSku",
                type: {
                    name: "String"
                }
            }, applicationServerInstanceCount: {
                serializedName: "applicationServerInstanceCount",
                type: {
                    name: "Number"
                }
            } })
    }
};
exports.DiscoveryConfiguration = {
    serializedName: "Discovery",
    type: {
        name: "Composite",
        className: "DiscoveryConfiguration",
        uberParent: "SAPConfiguration",
        polymorphicDiscriminator: exports.SAPConfiguration.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, exports.SAPConfiguration.type.modelProperties), { centralServerVmId: {
                serializedName: "centralServerVmId",
                type: {
                    name: "String"
                }
            }, managedRgStorageAccountName: {
                constraints: {
                    MaxLength: 24,
                    MinLength: 3
                },
                serializedName: "managedRgStorageAccountName",
                type: {
                    name: "String"
                }
            }, appLocation: {
                serializedName: "appLocation",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
exports.DeploymentConfiguration = {
    serializedName: "Deployment",
    type: {
        name: "Composite",
        className: "DeploymentConfiguration",
        uberParent: "SAPConfiguration",
        polymorphicDiscriminator: exports.SAPConfiguration.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, exports.SAPConfiguration.type.modelProperties), { appLocation: {
                serializedName: "appLocation",
                type: {
                    name: "String"
                }
            }, infrastructureConfiguration: {
                serializedName: "infrastructureConfiguration",
                type: {
                    name: "Composite",
                    className: "InfrastructureConfiguration"
                }
            }, softwareConfiguration: {
                serializedName: "softwareConfiguration",
                type: {
                    name: "Composite",
                    className: "SoftwareConfiguration"
                }
            } })
    }
};
exports.DeploymentWithOSConfiguration = {
    serializedName: "DeploymentWithOSConfig",
    type: {
        name: "Composite",
        className: "DeploymentWithOSConfiguration",
        uberParent: "SAPConfiguration",
        polymorphicDiscriminator: exports.SAPConfiguration.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, exports.SAPConfiguration.type.modelProperties), { appLocation: {
                serializedName: "appLocation",
                type: {
                    name: "String"
                }
            }, infrastructureConfiguration: {
                serializedName: "infrastructureConfiguration",
                type: {
                    name: "Composite",
                    className: "InfrastructureConfiguration"
                }
            }, softwareConfiguration: {
                serializedName: "softwareConfiguration",
                type: {
                    name: "Composite",
                    className: "SoftwareConfiguration"
                }
            }, osSapConfiguration: {
                serializedName: "osSapConfiguration",
                type: {
                    name: "Composite",
                    className: "OsSapConfiguration"
                }
            } })
    }
};
exports.TrackedResource = {
    type: {
        name: "Composite",
        className: "TrackedResource",
        modelProperties: Object.assign(Object.assign({}, exports.Resource.type.modelProperties), { tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }, location: {
                serializedName: "location",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
exports.ProxyResource = {
    type: {
        name: "Composite",
        className: "ProxyResource",
        modelProperties: Object.assign({}, exports.Resource.type.modelProperties)
    }
};
exports.OperationsContent = {
    type: {
        name: "Composite",
        className: "OperationsContent",
        modelProperties: Object.assign(Object.assign({}, exports.Resource.type.modelProperties), { namePropertiesName: {
                serializedName: "properties.name",
                type: {
                    name: "String"
                }
            }, isDataAction: {
                serializedName: "properties.isDataAction",
                type: {
                    name: "Boolean"
                }
            }, origin: {
                serializedName: "properties.origin",
                type: {
                    name: "String"
                }
            }, display: {
                serializedName: "properties.display",
                type: {
                    name: "Composite",
                    className: "OperationsDefinitionDisplay"
                }
            }, actionType: {
                serializedName: "properties.actionType",
                type: {
                    name: "String"
                }
            }, properties: {
                serializedName: "properties.properties",
                type: {
                    name: "any"
                }
            } })
    }
};
exports.MonitorPropertiesErrors = {
    type: {
        name: "Composite",
        className: "MonitorPropertiesErrors",
        modelProperties: Object.assign({}, exports.ErrorModel.type.modelProperties)
    }
};
exports.ProviderInstancePropertiesErrors = {
    type: {
        name: "Composite",
        className: "ProviderInstancePropertiesErrors",
        modelProperties: Object.assign({}, exports.ErrorModel.type.modelProperties)
    }
};
exports.HanaDbProviderInstanceProperties = {
    serializedName: "SapHana",
    type: {
        name: "Composite",
        className: "HanaDbProviderInstanceProperties",
        uberParent: "ProviderSpecificProperties",
        polymorphicDiscriminator: exports.ProviderSpecificProperties.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, exports.ProviderSpecificProperties.type.modelProperties), { hostname: {
                serializedName: "hostname",
                type: {
                    name: "String"
                }
            }, dbName: {
                serializedName: "dbName",
                type: {
                    name: "String"
                }
            }, sqlPort: {
                serializedName: "sqlPort",
                type: {
                    name: "String"
                }
            }, instanceNumber: {
                serializedName: "instanceNumber",
                type: {
                    name: "String"
                }
            }, dbUsername: {
                serializedName: "dbUsername",
                type: {
                    name: "String"
                }
            }, dbPassword: {
                serializedName: "dbPassword",
                type: {
                    name: "String"
                }
            }, dbPasswordUri: {
                serializedName: "dbPasswordUri",
                type: {
                    name: "String"
                }
            }, sslCertificateUri: {
                serializedName: "sslCertificateUri",
                type: {
                    name: "String"
                }
            }, sslHostNameInCertificate: {
                serializedName: "sslHostNameInCertificate",
                type: {
                    name: "String"
                }
            }, sslPreference: {
                serializedName: "sslPreference",
                type: {
                    name: "String"
                }
            }, sapSid: {
                serializedName: "sapSid",
                type: {
                    name: "String"
                }
            } })
    }
};
exports.SapNetWeaverProviderInstanceProperties = {
    serializedName: "SapNetWeaver",
    type: {
        name: "Composite",
        className: "SapNetWeaverProviderInstanceProperties",
        uberParent: "ProviderSpecificProperties",
        polymorphicDiscriminator: exports.ProviderSpecificProperties.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, exports.ProviderSpecificProperties.type.modelProperties), { sapSid: {
                serializedName: "sapSid",
                type: {
                    name: "String"
                }
            }, sapHostname: {
                serializedName: "sapHostname",
                type: {
                    name: "String"
                }
            }, sapInstanceNr: {
                serializedName: "sapInstanceNr",
                type: {
                    name: "String"
                }
            }, sapHostFileEntries: {
                serializedName: "sapHostFileEntries",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, sapUsername: {
                serializedName: "sapUsername",
                type: {
                    name: "String"
                }
            }, sapPassword: {
                serializedName: "sapPassword",
                type: {
                    name: "String"
                }
            }, sapPasswordUri: {
                serializedName: "sapPasswordUri",
                type: {
                    name: "String"
                }
            }, sapClientId: {
                serializedName: "sapClientId",
                type: {
                    name: "String"
                }
            }, sapPortNumber: {
                serializedName: "sapPortNumber",
                type: {
                    name: "String"
                }
            }, sslCertificateUri: {
                serializedName: "sslCertificateUri",
                type: {
                    name: "String"
                }
            }, sslPreference: {
                serializedName: "sslPreference",
                type: {
                    name: "String"
                }
            } })
    }
};
exports.PrometheusOSProviderInstanceProperties = {
    serializedName: "PrometheusOS",
    type: {
        name: "Composite",
        className: "PrometheusOSProviderInstanceProperties",
        uberParent: "ProviderSpecificProperties",
        polymorphicDiscriminator: exports.ProviderSpecificProperties.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, exports.ProviderSpecificProperties.type.modelProperties), { prometheusUrl: {
                serializedName: "prometheusUrl",
                type: {
                    name: "String"
                }
            }, sslPreference: {
                serializedName: "sslPreference",
                type: {
                    name: "String"
                }
            }, sslCertificateUri: {
                serializedName: "sslCertificateUri",
                type: {
                    name: "String"
                }
            }, sapSid: {
                serializedName: "sapSid",
                type: {
                    name: "String"
                }
            } })
    }
};
exports.DB2ProviderInstanceProperties = {
    serializedName: "Db2",
    type: {
        name: "Composite",
        className: "DB2ProviderInstanceProperties",
        uberParent: "ProviderSpecificProperties",
        polymorphicDiscriminator: exports.ProviderSpecificProperties.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, exports.ProviderSpecificProperties.type.modelProperties), { hostname: {
                serializedName: "hostname",
                type: {
                    name: "String"
                }
            }, dbName: {
                serializedName: "dbName",
                type: {
                    name: "String"
                }
            }, dbPort: {
                serializedName: "dbPort",
                type: {
                    name: "String"
                }
            }, dbUsername: {
                serializedName: "dbUsername",
                type: {
                    name: "String"
                }
            }, dbPassword: {
                serializedName: "dbPassword",
                type: {
                    name: "String"
                }
            }, dbPasswordUri: {
                serializedName: "dbPasswordUri",
                type: {
                    name: "String"
                }
            }, sapSid: {
                serializedName: "sapSid",
                type: {
                    name: "String"
                }
            }, sslPreference: {
                serializedName: "sslPreference",
                type: {
                    name: "String"
                }
            }, sslCertificateUri: {
                serializedName: "sslCertificateUri",
                type: {
                    name: "String"
                }
            } })
    }
};
exports.PrometheusHaClusterProviderInstanceProperties = {
    serializedName: "PrometheusHaCluster",
    type: {
        name: "Composite",
        className: "PrometheusHaClusterProviderInstanceProperties",
        uberParent: "ProviderSpecificProperties",
        polymorphicDiscriminator: exports.ProviderSpecificProperties.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, exports.ProviderSpecificProperties.type.modelProperties), { prometheusUrl: {
                serializedName: "prometheusUrl",
                type: {
                    name: "String"
                }
            }, hostname: {
                serializedName: "hostname",
                type: {
                    name: "String"
                }
            }, sid: {
                serializedName: "sid",
                type: {
                    name: "String"
                }
            }, clusterName: {
                serializedName: "clusterName",
                type: {
                    name: "String"
                }
            }, sslPreference: {
                serializedName: "sslPreference",
                type: {
                    name: "String"
                }
            }, sslCertificateUri: {
                serializedName: "sslCertificateUri",
                type: {
                    name: "String"
                }
            } })
    }
};
exports.MsSqlServerProviderInstanceProperties = {
    serializedName: "MsSqlServer",
    type: {
        name: "Composite",
        className: "MsSqlServerProviderInstanceProperties",
        uberParent: "ProviderSpecificProperties",
        polymorphicDiscriminator: exports.ProviderSpecificProperties.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, exports.ProviderSpecificProperties.type.modelProperties), { hostname: {
                serializedName: "hostname",
                type: {
                    name: "String"
                }
            }, dbPort: {
                serializedName: "dbPort",
                type: {
                    name: "String"
                }
            }, dbUsername: {
                serializedName: "dbUsername",
                type: {
                    name: "String"
                }
            }, dbPassword: {
                serializedName: "dbPassword",
                type: {
                    name: "String"
                }
            }, dbPasswordUri: {
                serializedName: "dbPasswordUri",
                type: {
                    name: "String"
                }
            }, sapSid: {
                serializedName: "sapSid",
                type: {
                    name: "String"
                }
            }, sslPreference: {
                serializedName: "sslPreference",
                type: {
                    name: "String"
                }
            }, sslCertificateUri: {
                serializedName: "sslCertificateUri",
                type: {
                    name: "String"
                }
            } })
    }
};
exports.WindowsConfiguration = {
    serializedName: "Windows",
    type: {
        name: "Composite",
        className: "WindowsConfiguration",
        uberParent: "OSConfiguration",
        polymorphicDiscriminator: exports.OSConfiguration.type.polymorphicDiscriminator,
        modelProperties: Object.assign({}, exports.OSConfiguration.type.modelProperties)
    }
};
exports.LinuxConfiguration = {
    serializedName: "Linux",
    type: {
        name: "Composite",
        className: "LinuxConfiguration",
        uberParent: "OSConfiguration",
        polymorphicDiscriminator: exports.OSConfiguration.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, exports.OSConfiguration.type.modelProperties), { disablePasswordAuthentication: {
                serializedName: "disablePasswordAuthentication",
                type: {
                    name: "Boolean"
                }
            }, ssh: {
                serializedName: "ssh",
                type: {
                    name: "Composite",
                    className: "SshConfiguration"
                }
            }, sshKeyPair: {
                serializedName: "sshKeyPair",
                type: {
                    name: "Composite",
                    className: "SshKeyPair"
                }
            } })
    }
};
exports.SingleServerFullResourceNames = {
    serializedName: "FullResourceName",
    type: {
        name: "Composite",
        className: "SingleServerFullResourceNames",
        uberParent: "SingleServerCustomResourceNames",
        polymorphicDiscriminator: exports.SingleServerCustomResourceNames.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, exports.SingleServerCustomResourceNames.type.modelProperties), { virtualMachine: {
                serializedName: "virtualMachine",
                type: {
                    name: "Composite",
                    className: "VirtualMachineResourceNames"
                }
            } })
    }
};
exports.SingleServerConfiguration = {
    serializedName: "SingleServer",
    type: {
        name: "Composite",
        className: "SingleServerConfiguration",
        uberParent: "InfrastructureConfiguration",
        polymorphicDiscriminator: exports.InfrastructureConfiguration.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, exports.InfrastructureConfiguration.type.modelProperties), { networkConfiguration: {
                serializedName: "networkConfiguration",
                type: {
                    name: "Composite",
                    className: "NetworkConfiguration"
                }
            }, databaseType: {
                serializedName: "databaseType",
                type: {
                    name: "String"
                }
            }, subnetId: {
                serializedName: "subnetId",
                required: true,
                type: {
                    name: "String"
                }
            }, virtualMachineConfiguration: {
                serializedName: "virtualMachineConfiguration",
                type: {
                    name: "Composite",
                    className: "VirtualMachineConfiguration"
                }
            }, dbDiskConfiguration: {
                serializedName: "dbDiskConfiguration",
                type: {
                    name: "Composite",
                    className: "DiskConfiguration"
                }
            }, customResourceNames: {
                serializedName: "customResourceNames",
                type: {
                    name: "Composite",
                    className: "SingleServerCustomResourceNames"
                }
            } })
    }
};
exports.ThreeTierConfiguration = {
    serializedName: "ThreeTier",
    type: {
        name: "Composite",
        className: "ThreeTierConfiguration",
        uberParent: "InfrastructureConfiguration",
        polymorphicDiscriminator: exports.InfrastructureConfiguration.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, exports.InfrastructureConfiguration.type.modelProperties), { networkConfiguration: {
                serializedName: "networkConfiguration",
                type: {
                    name: "Composite",
                    className: "NetworkConfiguration"
                }
            }, centralServer: {
                serializedName: "centralServer",
                type: {
                    name: "Composite",
                    className: "CentralServerConfiguration"
                }
            }, applicationServer: {
                serializedName: "applicationServer",
                type: {
                    name: "Composite",
                    className: "ApplicationServerConfiguration"
                }
            }, databaseServer: {
                serializedName: "databaseServer",
                type: {
                    name: "Composite",
                    className: "DatabaseConfiguration"
                }
            }, highAvailabilityConfig: {
                serializedName: "highAvailabilityConfig",
                type: {
                    name: "Composite",
                    className: "HighAvailabilityConfiguration"
                }
            }, storageConfiguration: {
                serializedName: "storageConfiguration",
                type: {
                    name: "Composite",
                    className: "StorageConfiguration"
                }
            }, customResourceNames: {
                serializedName: "customResourceNames",
                type: {
                    name: "Composite",
                    className: "ThreeTierCustomResourceNames"
                }
            } })
    }
};
exports.SkipFileShareConfiguration = {
    serializedName: "Skip",
    type: {
        name: "Composite",
        className: "SkipFileShareConfiguration",
        uberParent: "FileShareConfiguration",
        polymorphicDiscriminator: exports.FileShareConfiguration.type.polymorphicDiscriminator,
        modelProperties: Object.assign({}, exports.FileShareConfiguration.type.modelProperties)
    }
};
exports.CreateAndMountFileShareConfiguration = {
    serializedName: "CreateAndMount",
    type: {
        name: "Composite",
        className: "CreateAndMountFileShareConfiguration",
        uberParent: "FileShareConfiguration",
        polymorphicDiscriminator: exports.FileShareConfiguration.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, exports.FileShareConfiguration.type.modelProperties), { resourceGroup: {
                serializedName: "resourceGroup",
                type: {
                    name: "String"
                }
            }, storageAccountName: {
                serializedName: "storageAccountName",
                type: {
                    name: "String"
                }
            } })
    }
};
exports.MountFileShareConfiguration = {
    serializedName: "Mount",
    type: {
        name: "Composite",
        className: "MountFileShareConfiguration",
        uberParent: "FileShareConfiguration",
        polymorphicDiscriminator: exports.FileShareConfiguration.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, exports.FileShareConfiguration.type.modelProperties), { id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            }, privateEndpointId: {
                serializedName: "privateEndpointId",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
exports.ThreeTierFullResourceNames = {
    serializedName: "FullResourceName",
    type: {
        name: "Composite",
        className: "ThreeTierFullResourceNames",
        uberParent: "ThreeTierCustomResourceNames",
        polymorphicDiscriminator: exports.ThreeTierCustomResourceNames.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, exports.ThreeTierCustomResourceNames.type.modelProperties), { centralServer: {
                serializedName: "centralServer",
                type: {
                    name: "Composite",
                    className: "CentralServerFullResourceNames"
                }
            }, applicationServer: {
                serializedName: "applicationServer",
                type: {
                    name: "Composite",
                    className: "ApplicationServerFullResourceNames"
                }
            }, databaseServer: {
                serializedName: "databaseServer",
                type: {
                    name: "Composite",
                    className: "DatabaseServerFullResourceNames"
                }
            }, sharedStorage: {
                serializedName: "sharedStorage",
                type: {
                    name: "Composite",
                    className: "SharedStorageResourceNames"
                }
            } })
    }
};
exports.ServiceInitiatedSoftwareConfiguration = {
    serializedName: "ServiceInitiated",
    type: {
        name: "Composite",
        className: "ServiceInitiatedSoftwareConfiguration",
        uberParent: "SoftwareConfiguration",
        polymorphicDiscriminator: exports.SoftwareConfiguration.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, exports.SoftwareConfiguration.type.modelProperties), { bomUrl: {
                serializedName: "bomUrl",
                required: true,
                type: {
                    name: "String"
                }
            }, softwareVersion: {
                serializedName: "softwareVersion",
                required: true,
                type: {
                    name: "String"
                }
            }, sapBitsStorageAccountId: {
                serializedName: "sapBitsStorageAccountId",
                required: true,
                type: {
                    name: "String"
                }
            }, sapFqdn: {
                serializedName: "sapFqdn",
                required: true,
                type: {
                    name: "String"
                }
            }, sshPrivateKey: {
                serializedName: "sshPrivateKey",
                required: true,
                type: {
                    name: "String"
                }
            }, highAvailabilitySoftwareConfiguration: {
                serializedName: "highAvailabilitySoftwareConfiguration",
                type: {
                    name: "Composite",
                    className: "HighAvailabilitySoftwareConfiguration"
                }
            } })
    }
};
exports.SAPInstallWithoutOSConfigSoftwareConfiguration = {
    serializedName: "SAPInstallWithoutOSConfig",
    type: {
        name: "Composite",
        className: "SAPInstallWithoutOSConfigSoftwareConfiguration",
        uberParent: "SoftwareConfiguration",
        polymorphicDiscriminator: exports.SoftwareConfiguration.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, exports.SoftwareConfiguration.type.modelProperties), { bomUrl: {
                serializedName: "bomUrl",
                required: true,
                type: {
                    name: "String"
                }
            }, sapBitsStorageAccountId: {
                serializedName: "sapBitsStorageAccountId",
                required: true,
                type: {
                    name: "String"
                }
            }, softwareVersion: {
                serializedName: "softwareVersion",
                required: true,
                type: {
                    name: "String"
                }
            }, highAvailabilitySoftwareConfiguration: {
                serializedName: "highAvailabilitySoftwareConfiguration",
                type: {
                    name: "Composite",
                    className: "HighAvailabilitySoftwareConfiguration"
                }
            } })
    }
};
exports.ExternalInstallationSoftwareConfiguration = {
    serializedName: "External",
    type: {
        name: "Composite",
        className: "ExternalInstallationSoftwareConfiguration",
        uberParent: "SoftwareConfiguration",
        polymorphicDiscriminator: exports.SoftwareConfiguration.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, exports.SoftwareConfiguration.type.modelProperties), { centralServerVmId: {
                serializedName: "centralServerVmId",
                type: {
                    name: "String"
                }
            } })
    }
};
exports.OperationsDefinitionDisplay = {
    type: {
        name: "Composite",
        className: "OperationsDefinitionDisplay",
        modelProperties: Object.assign({}, exports.OperationsDisplayDefinition.type.modelProperties)
    }
};
exports.SAPVirtualInstance = {
    type: {
        name: "Composite",
        className: "SAPVirtualInstance",
        modelProperties: Object.assign(Object.assign({}, exports.TrackedResource.type.modelProperties), { identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "UserAssignedServiceIdentity"
                }
            }, environment: {
                serializedName: "properties.environment",
                required: true,
                type: {
                    name: "String"
                }
            }, sapProduct: {
                serializedName: "properties.sapProduct",
                required: true,
                type: {
                    name: "String"
                }
            }, configuration: {
                serializedName: "properties.configuration",
                type: {
                    name: "Composite",
                    className: "SAPConfiguration"
                }
            }, managedResourceGroupConfiguration: {
                serializedName: "properties.managedResourceGroupConfiguration",
                type: {
                    name: "Composite",
                    className: "ManagedRGConfiguration"
                }
            }, status: {
                serializedName: "properties.status",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, health: {
                serializedName: "properties.health",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, state: {
                serializedName: "properties.state",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, errors: {
                serializedName: "properties.errors",
                type: {
                    name: "Composite",
                    className: "SAPVirtualInstanceError"
                }
            } })
    }
};
exports.SAPCentralServerInstance = {
    type: {
        name: "Composite",
        className: "SAPCentralServerInstance",
        modelProperties: Object.assign(Object.assign({}, exports.TrackedResource.type.modelProperties), { instanceNo: {
                serializedName: "properties.instanceNo",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, subnet: {
                serializedName: "properties.subnet",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, messageServerProperties: {
                serializedName: "properties.messageServerProperties",
                type: {
                    name: "Composite",
                    className: "MessageServerProperties"
                }
            }, enqueueServerProperties: {
                serializedName: "properties.enqueueServerProperties",
                type: {
                    name: "Composite",
                    className: "EnqueueServerProperties"
                }
            }, gatewayServerProperties: {
                serializedName: "properties.gatewayServerProperties",
                type: {
                    name: "Composite",
                    className: "GatewayServerProperties"
                }
            }, enqueueReplicationServerProperties: {
                serializedName: "properties.enqueueReplicationServerProperties",
                type: {
                    name: "Composite",
                    className: "EnqueueReplicationServerProperties"
                }
            }, kernelVersion: {
                serializedName: "properties.kernelVersion",
                readOnly: true,
                nullable: true,
                type: {
                    name: "String"
                }
            }, kernelPatch: {
                serializedName: "properties.kernelPatch",
                readOnly: true,
                nullable: true,
                type: {
                    name: "String"
                }
            }, loadBalancerDetails: {
                serializedName: "properties.loadBalancerDetails",
                type: {
                    name: "Composite",
                    className: "LoadBalancerDetails"
                }
            }, vmDetails: {
                serializedName: "properties.vmDetails",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CentralServerVmDetails"
                        }
                    }
                }
            }, status: {
                serializedName: "properties.status",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, health: {
                serializedName: "properties.health",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, errors: {
                serializedName: "properties.errors",
                type: {
                    name: "Composite",
                    className: "SAPVirtualInstanceError"
                }
            } })
    }
};
exports.SAPDatabaseInstance = {
    type: {
        name: "Composite",
        className: "SAPDatabaseInstance",
        modelProperties: Object.assign(Object.assign({}, exports.TrackedResource.type.modelProperties), { subnet: {
                serializedName: "properties.subnet",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, databaseSid: {
                serializedName: "properties.databaseSid",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, databaseType: {
                serializedName: "properties.databaseType",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, ipAddress: {
                serializedName: "properties.ipAddress",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, loadBalancerDetails: {
                serializedName: "properties.loadBalancerDetails",
                type: {
                    name: "Composite",
                    className: "LoadBalancerDetails"
                }
            }, vmDetails: {
                serializedName: "properties.vmDetails",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DatabaseVmDetails"
                        }
                    }
                }
            }, status: {
                serializedName: "properties.status",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, errors: {
                serializedName: "properties.errors",
                type: {
                    name: "Composite",
                    className: "SAPVirtualInstanceError"
                }
            } })
    }
};
exports.SAPApplicationServerInstance = {
    type: {
        name: "Composite",
        className: "SAPApplicationServerInstance",
        modelProperties: Object.assign(Object.assign({}, exports.TrackedResource.type.modelProperties), { instanceNo: {
                serializedName: "properties.instanceNo",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, subnet: {
                serializedName: "properties.subnet",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, hostname: {
                serializedName: "properties.hostname",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, kernelVersion: {
                serializedName: "properties.kernelVersion",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, kernelPatch: {
                serializedName: "properties.kernelPatch",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, ipAddress: {
                serializedName: "properties.ipAddress",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, gatewayPort: {
                serializedName: "properties.gatewayPort",
                readOnly: true,
                nullable: true,
                type: {
                    name: "Number"
                }
            }, icmHttpPort: {
                serializedName: "properties.icmHttpPort",
                readOnly: true,
                nullable: true,
                type: {
                    name: "Number"
                }
            }, icmHttpsPort: {
                serializedName: "properties.icmHttpsPort",
                readOnly: true,
                nullable: true,
                type: {
                    name: "Number"
                }
            }, loadBalancerDetails: {
                serializedName: "properties.loadBalancerDetails",
                type: {
                    name: "Composite",
                    className: "LoadBalancerDetails"
                }
            }, vmDetails: {
                serializedName: "properties.vmDetails",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ApplicationServerVmDetails"
                        }
                    }
                }
            }, status: {
                serializedName: "properties.status",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, health: {
                serializedName: "properties.health",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, errors: {
                serializedName: "properties.errors",
                type: {
                    name: "Composite",
                    className: "SAPVirtualInstanceError"
                }
            } })
    }
};
exports.Monitor = {
    type: {
        name: "Composite",
        className: "Monitor",
        modelProperties: Object.assign(Object.assign({}, exports.TrackedResource.type.modelProperties), { identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "UserAssignedServiceIdentity"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, errors: {
                serializedName: "properties.errors",
                type: {
                    name: "Composite",
                    className: "MonitorPropertiesErrors"
                }
            }, appLocation: {
                serializedName: "properties.appLocation",
                type: {
                    name: "String"
                }
            }, routingPreference: {
                serializedName: "properties.routingPreference",
                type: {
                    name: "String"
                }
            }, zoneRedundancyPreference: {
                serializedName: "properties.zoneRedundancyPreference",
                type: {
                    name: "String"
                }
            }, managedResourceGroupConfiguration: {
                serializedName: "properties.managedResourceGroupConfiguration",
                type: {
                    name: "Composite",
                    className: "ManagedRGConfiguration"
                }
            }, logAnalyticsWorkspaceArmId: {
                serializedName: "properties.logAnalyticsWorkspaceArmId",
                type: {
                    name: "String"
                }
            }, monitorSubnet: {
                serializedName: "properties.monitorSubnet",
                type: {
                    name: "String"
                }
            }, msiArmId: {
                serializedName: "properties.msiArmId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, storageAccountArmId: {
                serializedName: "properties.storageAccountArmId",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
exports.ProviderInstance = {
    type: {
        name: "Composite",
        className: "ProviderInstance",
        modelProperties: Object.assign(Object.assign({}, exports.ProxyResource.type.modelProperties), { identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "UserAssignedServiceIdentity"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, errors: {
                serializedName: "properties.errors",
                type: {
                    name: "Composite",
                    className: "ProviderInstancePropertiesErrors"
                }
            }, providerSettings: {
                serializedName: "properties.providerSettings",
                type: {
                    name: "Composite",
                    className: "ProviderSpecificProperties"
                }
            } })
    }
};
exports.SapLandscapeMonitor = {
    type: {
        name: "Composite",
        className: "SapLandscapeMonitor",
        modelProperties: Object.assign(Object.assign({}, exports.ProxyResource.type.modelProperties), { provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, grouping: {
                serializedName: "properties.grouping",
                type: {
                    name: "Composite",
                    className: "SapLandscapeMonitorPropertiesGrouping"
                }
            }, topMetricsThresholds: {
                serializedName: "properties.topMetricsThresholds",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SapLandscapeMonitorMetricThresholds"
                        }
                    }
                }
            } })
    }
};
exports.discriminators = {
    SAPSizingRecommendationResult: exports.SAPSizingRecommendationResult,
    SAPConfiguration: exports.SAPConfiguration,
    ProviderSpecificProperties: exports.ProviderSpecificProperties,
    OSConfiguration: exports.OSConfiguration,
    SingleServerCustomResourceNames: exports.SingleServerCustomResourceNames,
    InfrastructureConfiguration: exports.InfrastructureConfiguration,
    FileShareConfiguration: exports.FileShareConfiguration,
    ThreeTierCustomResourceNames: exports.ThreeTierCustomResourceNames,
    SoftwareConfiguration: exports.SoftwareConfiguration,
    "SAPSizingRecommendationResult.SingleServer": exports.SingleServerRecommendationResult,
    "SAPSizingRecommendationResult.ThreeTier": exports.ThreeTierRecommendationResult,
    "SAPConfiguration.Discovery": exports.DiscoveryConfiguration,
    "SAPConfiguration.Deployment": exports.DeploymentConfiguration,
    "SAPConfiguration.DeploymentWithOSConfig": exports.DeploymentWithOSConfiguration,
    "ProviderSpecificProperties.SapHana": exports.HanaDbProviderInstanceProperties,
    "ProviderSpecificProperties.SapNetWeaver": exports.SapNetWeaverProviderInstanceProperties,
    "ProviderSpecificProperties.PrometheusOS": exports.PrometheusOSProviderInstanceProperties,
    "ProviderSpecificProperties.Db2": exports.DB2ProviderInstanceProperties,
    "ProviderSpecificProperties.PrometheusHaCluster": exports.PrometheusHaClusterProviderInstanceProperties,
    "ProviderSpecificProperties.MsSqlServer": exports.MsSqlServerProviderInstanceProperties,
    "OSConfiguration.Windows": exports.WindowsConfiguration,
    "OSConfiguration.Linux": exports.LinuxConfiguration,
    "SingleServerCustomResourceNames.FullResourceName": exports.SingleServerFullResourceNames,
    "InfrastructureConfiguration.SingleServer": exports.SingleServerConfiguration,
    "InfrastructureConfiguration.ThreeTier": exports.ThreeTierConfiguration,
    "FileShareConfiguration.Skip": exports.SkipFileShareConfiguration,
    "FileShareConfiguration.CreateAndMount": exports.CreateAndMountFileShareConfiguration,
    "FileShareConfiguration.Mount": exports.MountFileShareConfiguration,
    "ThreeTierCustomResourceNames.FullResourceName": exports.ThreeTierFullResourceNames,
    "SoftwareConfiguration.ServiceInitiated": exports.ServiceInitiatedSoftwareConfiguration,
    "SoftwareConfiguration.SAPInstallWithoutOSConfig": exports.SAPInstallWithoutOSConfigSoftwareConfiguration,
    "SoftwareConfiguration.External": exports.ExternalInstallationSoftwareConfiguration
};
//# sourceMappingURL=mappers.js.map