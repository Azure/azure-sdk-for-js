/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
/** Known values of {@link SAPEnvironmentType} that the service accepts. */
export var KnownSAPEnvironmentType;
(function (KnownSAPEnvironmentType) {
    /** NonProd */
    KnownSAPEnvironmentType["NonProd"] = "NonProd";
    /** Prod */
    KnownSAPEnvironmentType["Prod"] = "Prod";
})(KnownSAPEnvironmentType || (KnownSAPEnvironmentType = {}));
/** Known values of {@link SAPProductType} that the service accepts. */
export var KnownSAPProductType;
(function (KnownSAPProductType) {
    /** ECC */
    KnownSAPProductType["ECC"] = "ECC";
    /** S4Hana */
    KnownSAPProductType["S4Hana"] = "S4HANA";
    /** Other */
    KnownSAPProductType["Other"] = "Other";
})(KnownSAPProductType || (KnownSAPProductType = {}));
/** Known values of {@link SAPDeploymentType} that the service accepts. */
export var KnownSAPDeploymentType;
(function (KnownSAPDeploymentType) {
    /** SingleServer */
    KnownSAPDeploymentType["SingleServer"] = "SingleServer";
    /** ThreeTier */
    KnownSAPDeploymentType["ThreeTier"] = "ThreeTier";
})(KnownSAPDeploymentType || (KnownSAPDeploymentType = {}));
/** Known values of {@link SAPDatabaseType} that the service accepts. */
export var KnownSAPDatabaseType;
(function (KnownSAPDatabaseType) {
    /** Hana */
    KnownSAPDatabaseType["Hana"] = "HANA";
    /** DB2 */
    KnownSAPDatabaseType["DB2"] = "DB2";
})(KnownSAPDatabaseType || (KnownSAPDatabaseType = {}));
/** Known values of {@link SAPDatabaseScaleMethod} that the service accepts. */
export var KnownSAPDatabaseScaleMethod;
(function (KnownSAPDatabaseScaleMethod) {
    /** ScaleUp */
    KnownSAPDatabaseScaleMethod["ScaleUp"] = "ScaleUp";
})(KnownSAPDatabaseScaleMethod || (KnownSAPDatabaseScaleMethod = {}));
/** Known values of {@link SAPHighAvailabilityType} that the service accepts. */
export var KnownSAPHighAvailabilityType;
(function (KnownSAPHighAvailabilityType) {
    /** AvailabilitySet */
    KnownSAPHighAvailabilityType["AvailabilitySet"] = "AvailabilitySet";
    /** AvailabilityZone */
    KnownSAPHighAvailabilityType["AvailabilityZone"] = "AvailabilityZone";
})(KnownSAPHighAvailabilityType || (KnownSAPHighAvailabilityType = {}));
/** Known values of {@link DiskSkuName} that the service accepts. */
export var KnownDiskSkuName;
(function (KnownDiskSkuName) {
    /** StandardLRS */
    KnownDiskSkuName["StandardLRS"] = "Standard_LRS";
    /** PremiumLRS */
    KnownDiskSkuName["PremiumLRS"] = "Premium_LRS";
    /** StandardSSDLRS */
    KnownDiskSkuName["StandardSSDLRS"] = "StandardSSD_LRS";
    /** UltraSSDLRS */
    KnownDiskSkuName["UltraSSDLRS"] = "UltraSSD_LRS";
    /** PremiumZRS */
    KnownDiskSkuName["PremiumZRS"] = "Premium_ZRS";
    /** StandardSSDZRS */
    KnownDiskSkuName["StandardSSDZRS"] = "StandardSSD_ZRS";
    /** PremiumV2LRS */
    KnownDiskSkuName["PremiumV2LRS"] = "PremiumV2_LRS";
})(KnownDiskSkuName || (KnownDiskSkuName = {}));
/** Known values of {@link ManagedServiceIdentityType} that the service accepts. */
export var KnownManagedServiceIdentityType;
(function (KnownManagedServiceIdentityType) {
    /** None */
    KnownManagedServiceIdentityType["None"] = "None";
    /** UserAssigned */
    KnownManagedServiceIdentityType["UserAssigned"] = "UserAssigned";
})(KnownManagedServiceIdentityType || (KnownManagedServiceIdentityType = {}));
/** Known values of {@link SAPConfigurationType} that the service accepts. */
export var KnownSAPConfigurationType;
(function (KnownSAPConfigurationType) {
    /** Deployment */
    KnownSAPConfigurationType["Deployment"] = "Deployment";
    /** Discovery */
    KnownSAPConfigurationType["Discovery"] = "Discovery";
    /** DeploymentWithOSConfig */
    KnownSAPConfigurationType["DeploymentWithOSConfig"] = "DeploymentWithOSConfig";
})(KnownSAPConfigurationType || (KnownSAPConfigurationType = {}));
/** Known values of {@link SAPVirtualInstanceStatus} that the service accepts. */
export var KnownSAPVirtualInstanceStatus;
(function (KnownSAPVirtualInstanceStatus) {
    /** Starting */
    KnownSAPVirtualInstanceStatus["Starting"] = "Starting";
    /** Running */
    KnownSAPVirtualInstanceStatus["Running"] = "Running";
    /** Stopping */
    KnownSAPVirtualInstanceStatus["Stopping"] = "Stopping";
    /** Offline */
    KnownSAPVirtualInstanceStatus["Offline"] = "Offline";
    /** PartiallyRunning */
    KnownSAPVirtualInstanceStatus["PartiallyRunning"] = "PartiallyRunning";
    /** Unavailable */
    KnownSAPVirtualInstanceStatus["Unavailable"] = "Unavailable";
    /** SoftShutdown */
    KnownSAPVirtualInstanceStatus["SoftShutdown"] = "SoftShutdown";
})(KnownSAPVirtualInstanceStatus || (KnownSAPVirtualInstanceStatus = {}));
/** Known values of {@link SAPHealthState} that the service accepts. */
export var KnownSAPHealthState;
(function (KnownSAPHealthState) {
    /** Unknown */
    KnownSAPHealthState["Unknown"] = "Unknown";
    /** Healthy */
    KnownSAPHealthState["Healthy"] = "Healthy";
    /** Unhealthy */
    KnownSAPHealthState["Unhealthy"] = "Unhealthy";
    /** Degraded */
    KnownSAPHealthState["Degraded"] = "Degraded";
})(KnownSAPHealthState || (KnownSAPHealthState = {}));
/** Known values of {@link SAPVirtualInstanceState} that the service accepts. */
export var KnownSAPVirtualInstanceState;
(function (KnownSAPVirtualInstanceState) {
    /** InfrastructureDeploymentPending */
    KnownSAPVirtualInstanceState["InfrastructureDeploymentPending"] = "InfrastructureDeploymentPending";
    /** InfrastructureDeploymentInProgress */
    KnownSAPVirtualInstanceState["InfrastructureDeploymentInProgress"] = "InfrastructureDeploymentInProgress";
    /** InfrastructureDeploymentFailed */
    KnownSAPVirtualInstanceState["InfrastructureDeploymentFailed"] = "InfrastructureDeploymentFailed";
    /** SoftwareInstallationPending */
    KnownSAPVirtualInstanceState["SoftwareInstallationPending"] = "SoftwareInstallationPending";
    /** SoftwareInstallationInProgress */
    KnownSAPVirtualInstanceState["SoftwareInstallationInProgress"] = "SoftwareInstallationInProgress";
    /** SoftwareInstallationFailed */
    KnownSAPVirtualInstanceState["SoftwareInstallationFailed"] = "SoftwareInstallationFailed";
    /** SoftwareDetectionInProgress */
    KnownSAPVirtualInstanceState["SoftwareDetectionInProgress"] = "SoftwareDetectionInProgress";
    /** SoftwareDetectionFailed */
    KnownSAPVirtualInstanceState["SoftwareDetectionFailed"] = "SoftwareDetectionFailed";
    /** DiscoveryPending */
    KnownSAPVirtualInstanceState["DiscoveryPending"] = "DiscoveryPending";
    /** DiscoveryInProgress */
    KnownSAPVirtualInstanceState["DiscoveryInProgress"] = "DiscoveryInProgress";
    /** DiscoveryFailed */
    KnownSAPVirtualInstanceState["DiscoveryFailed"] = "DiscoveryFailed";
    /** RegistrationComplete */
    KnownSAPVirtualInstanceState["RegistrationComplete"] = "RegistrationComplete";
})(KnownSAPVirtualInstanceState || (KnownSAPVirtualInstanceState = {}));
/** Known values of {@link SapVirtualInstanceProvisioningState} that the service accepts. */
export var KnownSapVirtualInstanceProvisioningState;
(function (KnownSapVirtualInstanceProvisioningState) {
    /** Succeeded */
    KnownSapVirtualInstanceProvisioningState["Succeeded"] = "Succeeded";
    /** Updating */
    KnownSapVirtualInstanceProvisioningState["Updating"] = "Updating";
    /** Creating */
    KnownSapVirtualInstanceProvisioningState["Creating"] = "Creating";
    /** Failed */
    KnownSapVirtualInstanceProvisioningState["Failed"] = "Failed";
    /** Deleting */
    KnownSapVirtualInstanceProvisioningState["Deleting"] = "Deleting";
})(KnownSapVirtualInstanceProvisioningState || (KnownSapVirtualInstanceProvisioningState = {}));
/** Known values of {@link CreatedByType} that the service accepts. */
export var KnownCreatedByType;
(function (KnownCreatedByType) {
    /** User */
    KnownCreatedByType["User"] = "User";
    /** Application */
    KnownCreatedByType["Application"] = "Application";
    /** ManagedIdentity */
    KnownCreatedByType["ManagedIdentity"] = "ManagedIdentity";
    /** Key */
    KnownCreatedByType["Key"] = "Key";
})(KnownCreatedByType || (KnownCreatedByType = {}));
/** Known values of {@link EnqueueReplicationServerType} that the service accepts. */
export var KnownEnqueueReplicationServerType;
(function (KnownEnqueueReplicationServerType) {
    /** EnqueueReplicator1 */
    KnownEnqueueReplicationServerType["EnqueueReplicator1"] = "EnqueueReplicator1";
    /** EnqueueReplicator2 */
    KnownEnqueueReplicationServerType["EnqueueReplicator2"] = "EnqueueReplicator2";
})(KnownEnqueueReplicationServerType || (KnownEnqueueReplicationServerType = {}));
/** Known values of {@link CentralServerVirtualMachineType} that the service accepts. */
export var KnownCentralServerVirtualMachineType;
(function (KnownCentralServerVirtualMachineType) {
    /** Primary */
    KnownCentralServerVirtualMachineType["Primary"] = "Primary";
    /** Secondary */
    KnownCentralServerVirtualMachineType["Secondary"] = "Secondary";
    /** Unknown */
    KnownCentralServerVirtualMachineType["Unknown"] = "Unknown";
    /** Ascs */
    KnownCentralServerVirtualMachineType["Ascs"] = "ASCS";
    /** ERSInactive */
    KnownCentralServerVirtualMachineType["ERSInactive"] = "ERSInactive";
    /** ERS */
    KnownCentralServerVirtualMachineType["ERS"] = "ERS";
    /** Standby */
    KnownCentralServerVirtualMachineType["Standby"] = "Standby";
})(KnownCentralServerVirtualMachineType || (KnownCentralServerVirtualMachineType = {}));
/** Known values of {@link ApplicationServerVirtualMachineType} that the service accepts. */
export var KnownApplicationServerVirtualMachineType;
(function (KnownApplicationServerVirtualMachineType) {
    /** Active */
    KnownApplicationServerVirtualMachineType["Active"] = "Active";
    /** Standby */
    KnownApplicationServerVirtualMachineType["Standby"] = "Standby";
    /** Unknown */
    KnownApplicationServerVirtualMachineType["Unknown"] = "Unknown";
})(KnownApplicationServerVirtualMachineType || (KnownApplicationServerVirtualMachineType = {}));
/** Known values of {@link WorkloadMonitorProvisioningState} that the service accepts. */
export var KnownWorkloadMonitorProvisioningState;
(function (KnownWorkloadMonitorProvisioningState) {
    /** Accepted */
    KnownWorkloadMonitorProvisioningState["Accepted"] = "Accepted";
    /** Creating */
    KnownWorkloadMonitorProvisioningState["Creating"] = "Creating";
    /** Updating */
    KnownWorkloadMonitorProvisioningState["Updating"] = "Updating";
    /** Failed */
    KnownWorkloadMonitorProvisioningState["Failed"] = "Failed";
    /** Succeeded */
    KnownWorkloadMonitorProvisioningState["Succeeded"] = "Succeeded";
    /** Deleting */
    KnownWorkloadMonitorProvisioningState["Deleting"] = "Deleting";
    /** Migrating */
    KnownWorkloadMonitorProvisioningState["Migrating"] = "Migrating";
})(KnownWorkloadMonitorProvisioningState || (KnownWorkloadMonitorProvisioningState = {}));
/** Known values of {@link RoutingPreference} that the service accepts. */
export var KnownRoutingPreference;
(function (KnownRoutingPreference) {
    /** Default */
    KnownRoutingPreference["Default"] = "Default";
    /** RouteAll */
    KnownRoutingPreference["RouteAll"] = "RouteAll";
})(KnownRoutingPreference || (KnownRoutingPreference = {}));
/** Known values of {@link SapLandscapeMonitorProvisioningState} that the service accepts. */
export var KnownSapLandscapeMonitorProvisioningState;
(function (KnownSapLandscapeMonitorProvisioningState) {
    /** Accepted */
    KnownSapLandscapeMonitorProvisioningState["Accepted"] = "Accepted";
    /** Created */
    KnownSapLandscapeMonitorProvisioningState["Created"] = "Created";
    /** Failed */
    KnownSapLandscapeMonitorProvisioningState["Failed"] = "Failed";
    /** Succeeded */
    KnownSapLandscapeMonitorProvisioningState["Succeeded"] = "Succeeded";
    /** Canceled */
    KnownSapLandscapeMonitorProvisioningState["Canceled"] = "Canceled";
})(KnownSapLandscapeMonitorProvisioningState || (KnownSapLandscapeMonitorProvisioningState = {}));
/** Known values of {@link Origin} that the service accepts. */
export var KnownOrigin;
(function (KnownOrigin) {
    /** User */
    KnownOrigin["User"] = "user";
    /** System */
    KnownOrigin["System"] = "system";
    /** UserSystem */
    KnownOrigin["UserSystem"] = "user,system";
})(KnownOrigin || (KnownOrigin = {}));
/** Known values of {@link ActionType} that the service accepts. */
export var KnownActionType;
(function (KnownActionType) {
    /** Internal */
    KnownActionType["Internal"] = "Internal";
})(KnownActionType || (KnownActionType = {}));
/** Known values of {@link OSType} that the service accepts. */
export var KnownOSType;
(function (KnownOSType) {
    /** Linux */
    KnownOSType["Linux"] = "Linux";
    /** Windows */
    KnownOSType["Windows"] = "Windows";
})(KnownOSType || (KnownOSType = {}));
/** Known values of {@link NamingPatternType} that the service accepts. */
export var KnownNamingPatternType;
(function (KnownNamingPatternType) {
    /** FullResourceName */
    KnownNamingPatternType["FullResourceName"] = "FullResourceName";
})(KnownNamingPatternType || (KnownNamingPatternType = {}));
/** Known values of {@link ConfigurationType} that the service accepts. */
export var KnownConfigurationType;
(function (KnownConfigurationType) {
    /** Skip */
    KnownConfigurationType["Skip"] = "Skip";
    /** CreateAndMount */
    KnownConfigurationType["CreateAndMount"] = "CreateAndMount";
    /** Mount */
    KnownConfigurationType["Mount"] = "Mount";
})(KnownConfigurationType || (KnownConfigurationType = {}));
/** Known values of {@link SAPSoftwareInstallationType} that the service accepts. */
export var KnownSAPSoftwareInstallationType;
(function (KnownSAPSoftwareInstallationType) {
    /** ServiceInitiated */
    KnownSAPSoftwareInstallationType["ServiceInitiated"] = "ServiceInitiated";
    /** SAPInstallWithoutOSConfig */
    KnownSAPSoftwareInstallationType["SAPInstallWithoutOSConfig"] = "SAPInstallWithoutOSConfig";
    /** External */
    KnownSAPSoftwareInstallationType["External"] = "External";
})(KnownSAPSoftwareInstallationType || (KnownSAPSoftwareInstallationType = {}));
/** Known values of {@link OperationProperties} that the service accepts. */
export var KnownOperationProperties;
(function (KnownOperationProperties) {
    /** NotSpecified */
    KnownOperationProperties["NotSpecified"] = "NotSpecified";
    /** User */
    KnownOperationProperties["User"] = "User";
    /** System */
    KnownOperationProperties["System"] = "System";
})(KnownOperationProperties || (KnownOperationProperties = {}));
/** Known values of {@link WorkloadMonitorActionType} that the service accepts. */
export var KnownWorkloadMonitorActionType;
(function (KnownWorkloadMonitorActionType) {
    /** NotSpecified */
    KnownWorkloadMonitorActionType["NotSpecified"] = "NotSpecified";
    /** Internal */
    KnownWorkloadMonitorActionType["Internal"] = "Internal";
})(KnownWorkloadMonitorActionType || (KnownWorkloadMonitorActionType = {}));
/** Known values of {@link SslPreference} that the service accepts. */
export var KnownSslPreference;
(function (KnownSslPreference) {
    /** Disabled */
    KnownSslPreference["Disabled"] = "Disabled";
    /** RootCertificate */
    KnownSslPreference["RootCertificate"] = "RootCertificate";
    /** ServerCertificate */
    KnownSslPreference["ServerCertificate"] = "ServerCertificate";
})(KnownSslPreference || (KnownSslPreference = {}));
//# sourceMappingURL=index.js.map