/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export type BackupDataUnion =
  | BackupData
  | VMBackupData
  | HanaBackupData
  | SqlBackupData;
export type RecoveryServicesVaultPropertiesUnion =
  | RecoveryServicesVaultProperties
  | NewRecoveryServicesVault
  | ExistingRecoveryServicesVault;
export type SchedulePolicyUnion =
  | SchedulePolicy
  | SimpleSchedulePolicy
  | SimpleSchedulePolicyV2
  | LongTermSchedulePolicy
  | LogSchedulePolicy;
export type RetentionPolicyUnion =
  | RetentionPolicy
  | LongTermRetentionPolicy
  | SimpleRetentionPolicy;
export type ProtectionPolicyUnion =
  | ProtectionPolicy
  | AzureIaaSVMProtectionPolicy
  | AzureVmWorkloadProtectionPolicy;

/** Managed service identity (user assigned identities) */
export interface UserAssignedServiceIdentity {
  /** Type of manage identity */
  type: ManagedServiceIdentityType;
  /** User assigned identities dictionary */
  userAssignedIdentities?: {
    [propertyName: string]: UserAssignedIdentity | null;
  };
}

/** User assigned identity properties */
export interface UserAssignedIdentity {
  /**
   * The principal ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The client ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clientId?: string;
}

/** Error definition. */
export interface ConnectorErrorDefinition {
  /**
   * Service specific error code which serves as the substatus for the HTTP error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * Description of the error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * Internal error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ConnectorErrorDefinition[];
}

/** Managed resource group configuration */
export interface ManagedRGConfiguration {
  /** Managed resource group name */
  name?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** Defines the request body for updating a connector. */
export interface UpdateConnectorRequest {
  /** Gets or sets the resource tags. */
  tags?: { [propertyName: string]: string };
  /** Managed service identity (user assigned identities) */
  identity?: UserAssignedServiceIdentity;
}

/** Defines the collection of connector resources. */
export interface ConnectorList {
  /** Gets the list of connector resources. */
  value: Connector[];
  /** Gets the value of next link. */
  nextLink?: string;
}

/** Information about the recovery services vault and backup policy used for backup. */
export interface BackupData {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  backupType: "VM" | "HANA" | "SQL";
  /** The properties of the recovery services vault used for backup. */
  recoveryServicesVault: RecoveryServicesVaultPropertiesUnion;
}

/** The properties of the recovery services vault used for backup. */
export interface RecoveryServicesVaultProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  vaultType: "New" | "Existing";
}

/** Defines the request body for updating backup connection resource of virtual instance for SAP. */
export interface UpdateAcssBackupConnectionRequest {
  /** Gets or sets the Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** Defines the collection of backup connection resources of virtual instances for SAP. */
export interface AcssBackupConnectionList {
  /** Gets the list of backup connection resources of virtual instances for SAP. */
  value: AcssBackupConnection[];
  /** Gets the value of next link. */
  nextLink?: string;
}

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Defines the policy properties for virtual machine backup. */
export interface VMBackupPolicyProperties {
  /** The name of the VM Backup policy. */
  name: string;
  /** Number of items associated with this policy. */
  protectedItemsCount?: number;
  /** This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types. */
  backupManagementType?: string;
  /** ResourceGuard Operation Requests */
  resourceGuardOperationRequests?: string[];
  /** Instant recovery point additional details. */
  instantRPDetails?: InstantRPAdditionalDetails;
  /** Backup schedule specified as part of backup policy. */
  schedulePolicy?: SchedulePolicyUnion;
  /** Retention policy with the details on backup copy retention ranges. */
  retentionPolicy?: RetentionPolicyUnion;
  /**
   * Tiering policy to automatically move RPs to another tier
   * Key is Target Tier, defined in RecoveryPointTierType enum.
   * Tiering policy specifies the criteria to move RP to the target tier.
   */
  tieringPolicy?: { [propertyName: string]: TieringPolicy };
  /** Instant RP retention policy range in days */
  instantRpRetentionRangeInDays?: number;
  /** Time zone optional input as string. For example: "Pacific Standard Time". */
  timeZone?: string;
  /** The policy type. */
  policyType?: IaasvmPolicyType;
}

/** Instant recovery point additional details. */
export interface InstantRPAdditionalDetails {
  /** Azure backup resource group name prefix. */
  azureBackupRGNamePrefix?: string;
  /** Azure backup resource group name suffix. */
  azureBackupRGNameSuffix?: string;
}

/** Base class for backup schedule. */
export interface SchedulePolicy {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  schedulePolicyType:
    | "SimpleSchedulePolicy"
    | "SimpleSchedulePolicyV2"
    | "LongTermSchedulePolicy"
    | "LogSchedulePolicy";
}

/** Base class for retention policy. */
export interface RetentionPolicy {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  retentionPolicyType: "LongTermRetentionPolicy" | "SimpleRetentionPolicy";
}

/**
 * Tiering Policy for a target tier.
 * If the policy is not specified for a given target tier, service retains the existing configured tiering policy for that tier
 */
export interface TieringPolicy {
  /**
   * Tiering Mode to control automatic tiering of recovery points. Supported values are:
   * 1. TierRecommended: Tier all recovery points recommended to be tiered
   * 2. TierAfter: Tier all recovery points after a fixed period, as specified in duration + durationType below.
   * 3. DoNotTier: Do not tier any recovery points
   */
  tieringMode?: TieringMode;
  /**
   * Number of days/weeks/months/years to retain backups in current tier before tiering.
   * Used only if TieringMode is set to TierAfter
   */
  duration?: number;
  /**
   * Retention duration type: days/weeks/months/years
   * Used only if TieringMode is set to TierAfter
   */
  durationType?: RetentionDurationType;
}

/** Base class for backup policy. Workload-specific backup policies are derived from this class. */
export interface ProtectionPolicy {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  backupManagementType: "AzureIaasVM" | "AzureWorkload";
  /** Number of items associated with this policy. */
  protectedItemsCount?: number;
  /** ResourceGuard Operation Requests */
  resourceGuardOperationRequests?: string[];
}

/** Defines the disk exclusion properties for virtual machine backup. */
export interface DiskExclusionProperties {
  /** List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection. */
  diskLunList: number[];
  /** Flag to indicate whether DiskLunList is to be included/ excluded from backup. */
  isInclusionList: boolean;
}

/** Defines the policy properties for database backup. */
export interface DBBackupPolicyProperties {
  /** The name of the DB backup policy. */
  name: string;
  /** Number of items associated with this policy. */
  protectedItemsCount?: number;
  /** This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types. */
  backupManagementType?: string;
  /** ResourceGuard Operation Requests */
  resourceGuardOperationRequests?: string[];
  /** Type of workload for the backup management */
  workLoadType?: WorkloadType;
  /** Common settings for the backup management */
  settings?: Settings;
  /** List of sub-protection policies which includes schedule and retention */
  subProtectionPolicy?: SubProtectionPolicy[];
  /** Fix the policy inconsistency */
  makePolicyConsistent?: boolean;
}

/** Common settings field for backup management */
export interface Settings {
  /** TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time". */
  timeZone?: string;
  /** SQL compression flag */
  issqlcompression?: boolean;
  /**
   * Workload compression flag. This has been added so that 'isSqlCompression'
   * will be deprecated once clients upgrade to consider this flag.
   */
  isCompression?: boolean;
}

/** Sub-protection policy which includes schedule and retention */
export interface SubProtectionPolicy {
  /** Type of backup policy type */
  policyType?: PolicyType;
  /** Backup schedule specified as part of backup policy. */
  schedulePolicy?: SchedulePolicyUnion;
  /** Retention policy with the details on backup copy retention ranges. */
  retentionPolicy?: RetentionPolicyUnion;
  /**
   * Tiering policy to automatically move RPs to another tier.
   * Key is Target Tier, defined in RecoveryPointTierType enum.
   * Tiering policy specifies the criteria to move RP to the target tier.
   */
  tieringPolicy?: { [propertyName: string]: TieringPolicy };
  /** Hana DB instance snapshot backup additional details. */
  snapshotBackupAdditionalDetails?: SnapshotBackupAdditionalDetails;
}

/** Snapshot Backup related fields for WorkloadType SAP Hana system */
export interface SnapshotBackupAdditionalDetails {
  /** Retention range for instant Rp in days. */
  instantRpRetentionRangeInDays?: number;
  /** Instant RP details for the snapshot. */
  instantRPDetails?: string;
  /** User Assigned managed identity details used for snapshot policy. */
  userAssignedManagedIdentityDetails?: UserAssignedManagedIdentityDetails;
}

/** User assigned managed identity details. */
export interface UserAssignedManagedIdentityDetails {
  identityArmId?: string;
  identityName?: string;
  /** User assigned managed identity properties. */
  userAssignedIdentityProperties?: UserAssignedIdentityProperties;
}

/** User assigned managed identity properties. */
export interface UserAssignedIdentityProperties {
  clientId?: string;
  principalId?: string;
}

/** Specify the HANA database TLS/SSL properties which will be used for enabling Azure Backup for this database. You need to specify these details if you have enabled secure communication for your HANA database. */
export interface SSLConfiguration {
  /** Specify the name of the keystore file that contains the client's identity (eg. sapsrv.pse). The script will search for the file in the appropriate directory depending on the crypto provider mentioned. If this argument is not provided, it is automatically determined by searching in the configuration files. */
  sslKeyStore?: string;
  /** Specify the name of the trust store file that contains the server’s public certificates (eg. sapsrv.pse). The script will search for the file in the appropriate directory depending on the crypto provider mentioned. If this argument is not provided, it is automatically determined by searching in the configuration files. */
  sslTrustStore?: string;
  /** Specify the hostname as mentioned in the SSL certificate. If this argument is not provided, it is automatically determined by searching in the SSL certificate. */
  sslHostNameInCertificate?: string;
  /** Specify the crypto provider being used (commoncrypto/openssl). If this argument is not provided, it is automatically determined by searching in the configuration files. */
  sslCryptoProvider?: SslCryptoProvider;
}

/** Hourly schedule. */
export interface HourlySchedule {
  /**
   * Interval at which backup needs to be triggered. For hourly the value
   *  can be 4/6/8/12
   */
  interval?: number;
  /** To specify start time of the backup window */
  scheduleWindowStartTime?: Date;
  /** To specify duration of the backup window */
  scheduleWindowDuration?: number;
}

/** Daily schedule. */
export interface DailySchedule {
  /** List of times of day this schedule has to be run. */
  scheduleRunTimes?: Date[];
}

/** Weekly schedule. */
export interface WeeklySchedule {
  /** Schedule run days. */
  scheduleRunDays?: DayOfWeek[];
  /** List of times of day this schedule has to be run. */
  scheduleRunTimes?: Date[];
}

/** Daily retention schedule. */
export interface DailyRetentionSchedule {
  /** Retention times of retention policy. */
  retentionTimes?: Date[];
  /** Retention duration of retention Policy. */
  retentionDuration?: RetentionDuration;
}

/** Retention duration. */
export interface RetentionDuration {
  /**
   * Count of duration types. Retention duration is obtained by the counting the duration type Count times.
   * For example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks.
   */
  count?: number;
  /** Retention duration type of retention policy. */
  durationType?: RetentionDurationType;
}

/** Weekly retention schedule. */
export interface WeeklyRetentionSchedule {
  /** List of days of week for weekly retention policy. */
  daysOfTheWeek?: DayOfWeek[];
  /** Retention times of retention policy. */
  retentionTimes?: Date[];
  /** Retention duration of retention Policy. */
  retentionDuration?: RetentionDuration;
}

/** Monthly retention schedule. */
export interface MonthlyRetentionSchedule {
  /** Retention schedule format type for monthly retention policy. */
  retentionScheduleFormatType?: RetentionScheduleFormat;
  /** Daily retention format for monthly retention policy. */
  retentionScheduleDaily?: DailyRetentionFormat;
  /** Weekly retention format for monthly retention policy. */
  retentionScheduleWeekly?: WeeklyRetentionFormat;
  /** Retention times of retention policy. */
  retentionTimes?: Date[];
  /** Retention duration of retention Policy. */
  retentionDuration?: RetentionDuration;
}

/** Daily retention format. */
export interface DailyRetentionFormat {
  /** List of days of the month. */
  daysOfTheMonth?: Day[];
}

/** Day of the week. */
export interface Day {
  /** Date of the month */
  date?: number;
  /** Whether Date is last date of month */
  isLast?: boolean;
}

/** Weekly retention format. */
export interface WeeklyRetentionFormat {
  /** List of days of the week. */
  daysOfTheWeek?: DayOfWeek[];
  /** List of weeks of month. */
  weeksOfTheMonth?: WeekOfMonth[];
}

/** Yearly retention schedule. */
export interface YearlyRetentionSchedule {
  /** Retention schedule format for yearly retention policy. */
  retentionScheduleFormatType?: RetentionScheduleFormat;
  /** List of months of year of yearly retention policy. */
  monthsOfYear?: MonthOfYear[];
  /** Daily retention format for yearly retention policy. */
  retentionScheduleDaily?: DailyRetentionFormat;
  /** Weekly retention format for yearly retention policy. */
  retentionScheduleWeekly?: WeeklyRetentionFormat;
  /** Retention times of retention policy. */
  retentionTimes?: Date[];
  /** Retention duration of retention Policy. */
  retentionDuration?: RetentionDuration;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** Defines the VM Backup data for a virtual instance for SAP. */
export interface VMBackupData extends BackupData {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  backupType: "VM";
  /** Defines the policy properties for virtual machine backup. */
  backupPolicy: VMBackupPolicyProperties;
  /** Defines the disk exclusion properties for virtual machine backup. */
  diskExclusionProperties?: DiskExclusionProperties;
}

/** Defines the HANA Backup data for a virtual instance for SAP. */
export interface HanaBackupData extends BackupData {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  backupType: "HANA";
  /** Path of the SSL key store. */
  sslConfiguration?: SSLConfiguration;
  /** Defines the policy properties for database backup. */
  backupPolicy: DBBackupPolicyProperties;
  /** Name of the HANA Database User Store Key. */
  hdbuserstoreKeyName: string;
  /** Gets or sets the database instance number. */
  instanceNumber?: string;
  /** Defines the policy properties for database backup. */
  dbInstanceSnapshotBackupPolicy?: DBBackupPolicyProperties;
}

/** Defines the SQL Backup data for a virtual instance for SAP. */
export interface SqlBackupData extends BackupData {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  backupType: "SQL";
  /** Defines the policy properties for database backup. */
  backupPolicy: DBBackupPolicyProperties;
}

/** New recovery services vault. */
export interface NewRecoveryServicesVault
  extends RecoveryServicesVaultProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  vaultType: "New";
  /** The name of the recovery services vault has to be created. */
  name: string;
  /** The name of the resource group where the recovery services vault has to be created. */
  resourceGroup: string;
}

/** Existing recovery services vault. */
export interface ExistingRecoveryServicesVault
  extends RecoveryServicesVaultProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  vaultType: "Existing";
  /** The resource ID of the recovery services vault that has been created. */
  id: string;
}

/** Simple policy schedule. */
export interface SimpleSchedulePolicy extends SchedulePolicy {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  schedulePolicyType: "SimpleSchedulePolicy";
  /** Frequency of the schedule operation of this policy. */
  scheduleRunFrequency?: ScheduleRunType;
  /** List of days of week this schedule has to be run. */
  scheduleRunDays?: DayOfWeek[];
  /** List of times of day this schedule has to be run. */
  scheduleRunTimes?: Date[];
  /** Hourly Schedule of this Policy */
  hourlySchedule?: HourlySchedule;
  /** At every number weeks this schedule has to be run. */
  scheduleWeeklyFrequency?: number;
}

/** The V2 policy schedule for IaaS that supports hourly backups. */
export interface SimpleSchedulePolicyV2 extends SchedulePolicy {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  schedulePolicyType: "SimpleSchedulePolicyV2";
  /** Frequency of the schedule operation of this policy. */
  scheduleRunFrequency?: ScheduleRunType;
  /** hourly schedule of this policy */
  hourlySchedule?: HourlySchedule;
  /** Daily schedule of this policy */
  dailySchedule?: DailySchedule;
  /** Weekly schedule of this policy */
  weeklySchedule?: WeeklySchedule;
}

/** Long term policy schedule. */
export interface LongTermSchedulePolicy extends SchedulePolicy {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  schedulePolicyType: "LongTermSchedulePolicy";
}

/** Log policy schedule. */
export interface LogSchedulePolicy extends SchedulePolicy {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  schedulePolicyType: "LogSchedulePolicy";
  /** Frequency of the log schedule operation of this policy in minutes. */
  scheduleFrequencyInMins?: number;
}

/** Long term retention policy. */
export interface LongTermRetentionPolicy extends RetentionPolicy {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  retentionPolicyType: "LongTermRetentionPolicy";
  /** Daily retention schedule of the protection policy. */
  dailySchedule?: DailyRetentionSchedule;
  /** Weekly retention schedule of the protection policy. */
  weeklySchedule?: WeeklyRetentionSchedule;
  /** Monthly retention schedule of the protection policy. */
  monthlySchedule?: MonthlyRetentionSchedule;
  /** Yearly retention schedule of the protection policy. */
  yearlySchedule?: YearlyRetentionSchedule;
}

/** Simple policy retention. */
export interface SimpleRetentionPolicy extends RetentionPolicy {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  retentionPolicyType: "SimpleRetentionPolicy";
  /** Retention duration of the protection policy. */
  retentionDuration?: RetentionDuration;
}

/** IaaS VM workload-specific backup policy. */
export interface AzureIaaSVMProtectionPolicy extends ProtectionPolicy {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  backupManagementType: "AzureIaasVM";
  /** Instant recovery point additional details. */
  instantRPDetails?: InstantRPAdditionalDetails;
  /** Backup schedule specified as part of backup policy. */
  schedulePolicy?: SchedulePolicyUnion;
  /** Retention policy with the details on backup copy retention ranges. */
  retentionPolicy?: RetentionPolicyUnion;
  /**
   * Tiering policy to automatically move RPs to another tier
   * Key is Target Tier, defined in RecoveryPointTierType enum.
   * Tiering policy specifies the criteria to move RP to the target tier.
   */
  tieringPolicy?: { [propertyName: string]: TieringPolicy };
  /** Instant RP retention policy range in days */
  instantRpRetentionRangeInDays?: number;
  /** Time zone optional input as string. For example: "Pacific Standard Time". */
  timeZone?: string;
  /** The policy type. */
  policyType?: IaasvmPolicyType;
}

/** Azure VM (Mercury) workload-specific backup policy. */
export interface AzureVmWorkloadProtectionPolicy extends ProtectionPolicy {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  backupManagementType: "AzureWorkload";
  /** Type of workload for the backup management */
  workLoadType?: WorkloadType;
  /** Common settings for the backup management */
  settings?: Settings;
  /** List of sub-protection policies which includes schedule and retention */
  subProtectionPolicy?: SubProtectionPolicy[];
  /** Fix the policy inconsistency */
  makePolicyConsistent?: boolean;
}

/** Define the connector resource. */
export interface Connector extends TrackedResource {
  /** Managed service identity (user assigned identities) */
  identity?: UserAssignedServiceIdentity;
  /** Defines the ID of the connector's source resource. */
  sourceResourceId: string;
  /**
   * Defines the provisioning states.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ConnectorProvisioningState;
  /**
   * Indicates any errors on the connector resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errors?: ConnectorErrorDefinition;
  /** Managed resource group configuration */
  managedResourceGroupConfiguration?: ManagedRGConfiguration;
}

/** Define the backup connection resource of virtual instance for SAP.. */
export interface AcssBackupConnection extends TrackedResource {
  /** Information about the recovery services vault and backup policy used for backup. */
  backupData?: BackupDataUnion;
  /**
   * Defines the provisioning states.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ConnectorProvisioningState;
  /**
   * Defines the errors related to backup connection resource of virtual instance for SAP.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errors?: ConnectorErrorDefinition;
}

/** Defines headers for Connectors_delete operation. */
export interface ConnectorsDeleteHeaders {
  /** URL to query for status of the operation. */
  azureAsyncOperation?: string;
  /** URL to query for status of the operation. */
  location?: string;
}

/** Defines headers for AcssBackupConnections_update operation. */
export interface AcssBackupConnectionsUpdateHeaders {
  location?: string;
}

/** Defines headers for AcssBackupConnections_delete operation. */
export interface AcssBackupConnectionsDeleteHeaders {
  /** URL to query for status of the operation. */
  azureAsyncOperation?: string;
  /** URL to query for status of the operation. */
  location?: string;
}

/** Known values of {@link ManagedServiceIdentityType} that the service accepts. */
export enum KnownManagedServiceIdentityType {
  /** None */
  None = "None",
  /** UserAssigned */
  UserAssigned = "UserAssigned"
}

/**
 * Defines values for ManagedServiceIdentityType. \
 * {@link KnownManagedServiceIdentityType} can be used interchangeably with ManagedServiceIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **UserAssigned**
 */
export type ManagedServiceIdentityType = string;

/** Known values of {@link ConnectorProvisioningState} that the service accepts. */
export enum KnownConnectorProvisioningState {
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Updating */
  Updating = "Updating",
  /** Creating */
  Creating = "Creating",
  /** Failed */
  Failed = "Failed",
  /** Deleting */
  Deleting = "Deleting",
  /** Canceled */
  Canceled = "Canceled"
}

/**
 * Defines values for ConnectorProvisioningState. \
 * {@link KnownConnectorProvisioningState} can be used interchangeably with ConnectorProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Updating** \
 * **Creating** \
 * **Failed** \
 * **Deleting** \
 * **Canceled**
 */
export type ConnectorProvisioningState = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link BackupType} that the service accepts. */
export enum KnownBackupType {
  /** VM */
  VM = "VM",
  /** SQL */
  SQL = "SQL",
  /** Hana */
  Hana = "HANA"
}

/**
 * Defines values for BackupType. \
 * {@link KnownBackupType} can be used interchangeably with BackupType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **VM** \
 * **SQL** \
 * **HANA**
 */
export type BackupType = string;

/** Known values of {@link VaultType} that the service accepts. */
export enum KnownVaultType {
  /** Existing */
  Existing = "Existing",
  /** New */
  New = "New"
}

/**
 * Defines values for VaultType. \
 * {@link KnownVaultType} can be used interchangeably with VaultType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Existing** \
 * **New**
 */
export type VaultType = string;

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system"
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link TieringMode} that the service accepts. */
export enum KnownTieringMode {
  /** Invalid */
  Invalid = "Invalid",
  /** TierRecommended */
  TierRecommended = "TierRecommended",
  /** TierAfter */
  TierAfter = "TierAfter",
  /** DoNotTier */
  DoNotTier = "DoNotTier"
}

/**
 * Defines values for TieringMode. \
 * {@link KnownTieringMode} can be used interchangeably with TieringMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **TierRecommended** \
 * **TierAfter** \
 * **DoNotTier**
 */
export type TieringMode = string;

/** Known values of {@link RetentionDurationType} that the service accepts. */
export enum KnownRetentionDurationType {
  /** Invalid */
  Invalid = "Invalid",
  /** Days */
  Days = "Days",
  /** Weeks */
  Weeks = "Weeks",
  /** Months */
  Months = "Months",
  /** Years */
  Years = "Years"
}

/**
 * Defines values for RetentionDurationType. \
 * {@link KnownRetentionDurationType} can be used interchangeably with RetentionDurationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Days** \
 * **Weeks** \
 * **Months** \
 * **Years**
 */
export type RetentionDurationType = string;

/** Known values of {@link IaasvmPolicyType} that the service accepts. */
export enum KnownIaasvmPolicyType {
  /** Invalid */
  Invalid = "Invalid",
  /** V1 */
  V1 = "V1",
  /** V2 */
  V2 = "V2"
}

/**
 * Defines values for IaasvmPolicyType. \
 * {@link KnownIaasvmPolicyType} can be used interchangeably with IaasvmPolicyType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **V1** \
 * **V2**
 */
export type IaasvmPolicyType = string;

/** Known values of {@link WorkloadType} that the service accepts. */
export enum KnownWorkloadType {
  /** Invalid */
  Invalid = "Invalid",
  /** VM */
  VM = "VM",
  /** FileFolder */
  FileFolder = "FileFolder",
  /** AzureSqlDb */
  AzureSqlDb = "AzureSqlDb",
  /** Sqldb */
  Sqldb = "SQLDB",
  /** Exchange */
  Exchange = "Exchange",
  /** Sharepoint */
  Sharepoint = "Sharepoint",
  /** VMwareVM */
  VMwareVM = "VMwareVM",
  /** SystemState */
  SystemState = "SystemState",
  /** Client */
  Client = "Client",
  /** GenericDataSource */
  GenericDataSource = "GenericDataSource",
  /** SQLDataBase */
  SQLDataBase = "SQLDataBase",
  /** AzureFileShare */
  AzureFileShare = "AzureFileShare",
  /** SAPHanaDatabase */
  SAPHanaDatabase = "SAPHanaDatabase",
  /** SAPAseDatabase */
  SAPAseDatabase = "SAPAseDatabase",
  /** SAPHanaDBInstance */
  SAPHanaDBInstance = "SAPHanaDBInstance"
}

/**
 * Defines values for WorkloadType. \
 * {@link KnownWorkloadType} can be used interchangeably with WorkloadType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **VM** \
 * **FileFolder** \
 * **AzureSqlDb** \
 * **SQLDB** \
 * **Exchange** \
 * **Sharepoint** \
 * **VMwareVM** \
 * **SystemState** \
 * **Client** \
 * **GenericDataSource** \
 * **SQLDataBase** \
 * **AzureFileShare** \
 * **SAPHanaDatabase** \
 * **SAPAseDatabase** \
 * **SAPHanaDBInstance**
 */
export type WorkloadType = string;

/** Known values of {@link PolicyType} that the service accepts. */
export enum KnownPolicyType {
  /** Invalid */
  Invalid = "Invalid",
  /** Full */
  Full = "Full",
  /** Differential */
  Differential = "Differential",
  /** Log */
  Log = "Log",
  /** CopyOnlyFull */
  CopyOnlyFull = "CopyOnlyFull",
  /** Incremental */
  Incremental = "Incremental",
  /** SnapshotFull */
  SnapshotFull = "SnapshotFull",
  /** SnapshotCopyOnlyFull */
  SnapshotCopyOnlyFull = "SnapshotCopyOnlyFull"
}

/**
 * Defines values for PolicyType. \
 * {@link KnownPolicyType} can be used interchangeably with PolicyType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Full** \
 * **Differential** \
 * **Log** \
 * **CopyOnlyFull** \
 * **Incremental** \
 * **SnapshotFull** \
 * **SnapshotCopyOnlyFull**
 */
export type PolicyType = string;

/** Known values of {@link SslCryptoProvider} that the service accepts. */
export enum KnownSslCryptoProvider {
  /** Commoncrypto */
  Commoncrypto = "commoncrypto",
  /** Openssl */
  Openssl = "openssl"
}

/**
 * Defines values for SslCryptoProvider. \
 * {@link KnownSslCryptoProvider} can be used interchangeably with SslCryptoProvider,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **commoncrypto** \
 * **openssl**
 */
export type SslCryptoProvider = string;

/** Known values of {@link ScheduleRunType} that the service accepts. */
export enum KnownScheduleRunType {
  /** Invalid */
  Invalid = "Invalid",
  /** Daily */
  Daily = "Daily",
  /** Weekly */
  Weekly = "Weekly",
  /** Hourly */
  Hourly = "Hourly"
}

/**
 * Defines values for ScheduleRunType. \
 * {@link KnownScheduleRunType} can be used interchangeably with ScheduleRunType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Daily** \
 * **Weekly** \
 * **Hourly**
 */
export type ScheduleRunType = string;

/** Known values of {@link RetentionScheduleFormat} that the service accepts. */
export enum KnownRetentionScheduleFormat {
  /** Invalid */
  Invalid = "Invalid",
  /** Daily */
  Daily = "Daily",
  /** Weekly */
  Weekly = "Weekly"
}

/**
 * Defines values for RetentionScheduleFormat. \
 * {@link KnownRetentionScheduleFormat} can be used interchangeably with RetentionScheduleFormat,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Daily** \
 * **Weekly**
 */
export type RetentionScheduleFormat = string;
/** Defines values for DayOfWeek. */
export type DayOfWeek =
  | "Sunday"
  | "Monday"
  | "Tuesday"
  | "Wednesday"
  | "Thursday"
  | "Friday"
  | "Saturday";
/** Defines values for WeekOfMonth. */
export type WeekOfMonth =
  | "First"
  | "Second"
  | "Third"
  | "Fourth"
  | "Last"
  | "Invalid";
/** Defines values for MonthOfYear. */
export type MonthOfYear =
  | "Invalid"
  | "January"
  | "February"
  | "March"
  | "April"
  | "May"
  | "June"
  | "July"
  | "August"
  | "September"
  | "October"
  | "November"
  | "December";

/** Optional parameters. */
export interface ConnectorsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Connector resource request body. */
  body?: Connector;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ConnectorsCreateResponse = Connector;

/** Optional parameters. */
export interface ConnectorsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ConnectorsGetResponse = Connector;

/** Optional parameters. */
export interface ConnectorsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Request body to update a connector resource. */
  body?: UpdateConnectorRequest;
}

/** Contains response data for the update operation. */
export type ConnectorsUpdateResponse = Connector;

/** Optional parameters. */
export interface ConnectorsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type ConnectorsDeleteResponse = ConnectorsDeleteHeaders;

/** Optional parameters. */
export interface ConnectorsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type ConnectorsListByResourceGroupResponse = ConnectorList;

/** Optional parameters. */
export interface ConnectorsListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type ConnectorsListBySubscriptionResponse = ConnectorList;

/** Optional parameters. */
export interface ConnectorsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type ConnectorsListByResourceGroupNextResponse = ConnectorList;

/** Optional parameters. */
export interface ConnectorsListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type ConnectorsListBySubscriptionNextResponse = ConnectorList;

/** Optional parameters. */
export interface AcssBackupConnectionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AcssBackupConnectionsGetResponse = AcssBackupConnection;

/** Optional parameters. */
export interface AcssBackupConnectionsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** The request body of backup connection of virtual instance for SAP. */
  body?: AcssBackupConnection;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type AcssBackupConnectionsCreateResponse = AcssBackupConnection;

/** Optional parameters. */
export interface AcssBackupConnectionsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** The request body of backup connection resource of virtual instance for SAP. */
  body?: UpdateAcssBackupConnectionRequest;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type AcssBackupConnectionsUpdateResponse = AcssBackupConnection;

/** Optional parameters. */
export interface AcssBackupConnectionsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type AcssBackupConnectionsDeleteResponse = AcssBackupConnectionsDeleteHeaders;

/** Optional parameters. */
export interface AcssBackupConnectionsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type AcssBackupConnectionsListResponse = AcssBackupConnectionList;

/** Optional parameters. */
export interface AcssBackupConnectionsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type AcssBackupConnectionsListNextResponse = AcssBackupConnectionList;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface WorkloadsClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
