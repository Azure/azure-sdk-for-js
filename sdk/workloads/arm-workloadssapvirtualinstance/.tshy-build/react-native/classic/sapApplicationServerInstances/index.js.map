{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/classic/sapApplicationServerInstances/index.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAiBlC,OAAO,EACL,IAAI,EACJ,KAAK,EACL,IAAI,EACJ,OAAO,EACP,MAAM,EACN,MAAM,EACN,GAAG,GACJ,MAAM,uDAAuD,CAAC;AA+D/D,SAAS,iCAAiC,CAAC,OAAyB;IAClE,OAAO;QACL,IAAI,EAAE,CACJ,iBAAyB,EACzB,sBAA8B,EAC9B,uBAA+B,EAC/B,OAAyD,EACzD,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,uBAAuB,EAAE,OAAO,CAAC;QAC/F,KAAK,EAAE,CACL,iBAAyB,EACzB,sBAA8B,EAC9B,uBAA+B,EAC/B,OAA0D,EAC1D,EAAE,CACF,KAAK,CAAC,OAAO,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,uBAAuB,EAAE,OAAO,CAAC;QAC7F,IAAI,EAAE,CACJ,iBAAyB,EACzB,sBAA8B,EAC9B,OAAyD,EACzD,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,OAAO,CAAC;QACtE,MAAM,EAAE,CACN,iBAAyB,EACzB,sBAA8B,EAC9B,uBAA+B,EAC/B,OAA2D,EAC3D,EAAE,CACF,OAAO,CAAC,OAAO,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,uBAAuB,EAAE,OAAO,CAAC;QAC/F,MAAM,EAAE,CACN,iBAAyB,EACzB,sBAA8B,EAC9B,uBAA+B,EAC/B,UAA+C,EAC/C,OAA2D,EAC3D,EAAE,CACF,MAAM,CACJ,OAAO,EACP,iBAAiB,EACjB,sBAAsB,EACtB,uBAAuB,EACvB,UAAU,EACV,OAAO,CACR;QACH,MAAM,EAAE,CACN,iBAAyB,EACzB,sBAA8B,EAC9B,uBAA+B,EAC/B,QAAsC,EACtC,OAA2D,EAC3D,EAAE,CACF,MAAM,CACJ,OAAO,EACP,iBAAiB,EACjB,sBAAsB,EACtB,uBAAuB,EACvB,QAAQ,EACR,OAAO,CACR;QACH,GAAG,EAAE,CACH,iBAAyB,EACzB,sBAA8B,EAC9B,uBAA+B,EAC/B,OAAwD,EACxD,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,uBAAuB,EAAE,OAAO,CAAC;KAC/F,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,2CAA2C,CACzD,OAAyB;IAEzB,yBACK,iCAAiC,CAAC,OAAO,CAAC,EAC7C;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { WorkloadsContext } from \"../../api/workloadsContext.js\";\nimport {\n  OperationStatusResult,\n  SAPApplicationServerInstance,\n  UpdateSAPApplicationInstanceRequest,\n} from \"../../models/models.js\";\nimport {\n  SAPApplicationServerInstancesStopOptionalParams,\n  SAPApplicationServerInstancesStartOptionalParams,\n  SAPApplicationServerInstancesListOptionalParams,\n  SAPApplicationServerInstancesDeleteOptionalParams,\n  SAPApplicationServerInstancesUpdateOptionalParams,\n  SAPApplicationServerInstancesCreateOptionalParams,\n  SAPApplicationServerInstancesGetOptionalParams,\n} from \"../../api/sapApplicationServerInstances/options.js\";\nimport {\n  stop,\n  start,\n  list,\n  $delete,\n  update,\n  create,\n  get,\n} from \"../../api/sapApplicationServerInstances/operations.js\";\nimport { PagedAsyncIterableIterator } from \"../../static-helpers/pagingHelpers.js\";\nimport { PollerLike, OperationState } from \"@azure/core-lro\";\n\n/** Interface representing a SAPApplicationServerInstances operations. */\nexport interface SAPApplicationServerInstancesOperations {\n  /** Stops the SAP Application Server Instance. */\n  stop: (\n    resourceGroupName: string,\n    sapVirtualInstanceName: string,\n    applicationInstanceName: string,\n    options?: SAPApplicationServerInstancesStopOptionalParams,\n  ) => PollerLike<OperationState<OperationStatusResult>, OperationStatusResult>;\n  /** Starts the SAP Application Server Instance. */\n  start: (\n    resourceGroupName: string,\n    sapVirtualInstanceName: string,\n    applicationInstanceName: string,\n    options?: SAPApplicationServerInstancesStartOptionalParams,\n  ) => PollerLike<OperationState<OperationStatusResult>, OperationStatusResult>;\n  /** Lists the SAP Application Server Instance resources for a given Virtual Instance for SAP solutions resource. */\n  list: (\n    resourceGroupName: string,\n    sapVirtualInstanceName: string,\n    options?: SAPApplicationServerInstancesListOptionalParams,\n  ) => PagedAsyncIterableIterator<SAPApplicationServerInstance>;\n  /** Deletes the SAP Application Server Instance resource. &lt;br&gt;&lt;br&gt;This operation will be used by service only. Delete by end user will return a Bad Request error. */\n  /**\n   *  @fixme delete is a reserved word that cannot be used as an operation name.\n   *         Please add @clientName(\"clientName\") or @clientName(\"<JS-Specific-Name>\", \"javascript\")\n   *         to the operation to override the generated name.\n   */\n  delete: (\n    resourceGroupName: string,\n    sapVirtualInstanceName: string,\n    applicationInstanceName: string,\n    options?: SAPApplicationServerInstancesDeleteOptionalParams,\n  ) => PollerLike<OperationState<void>, void>;\n  /** Puts the SAP Application Server Instance resource. */\n  update: (\n    resourceGroupName: string,\n    sapVirtualInstanceName: string,\n    applicationInstanceName: string,\n    properties: UpdateSAPApplicationInstanceRequest,\n    options?: SAPApplicationServerInstancesUpdateOptionalParams,\n  ) => Promise<SAPApplicationServerInstance>;\n  /** Puts the SAP Application Server Instance resource. &lt;br&gt;&lt;br&gt;This will be used by service only. PUT by end user will return a Bad Request error. */\n  create: (\n    resourceGroupName: string,\n    sapVirtualInstanceName: string,\n    applicationInstanceName: string,\n    resource: SAPApplicationServerInstance,\n    options?: SAPApplicationServerInstancesCreateOptionalParams,\n  ) => PollerLike<OperationState<SAPApplicationServerInstance>, SAPApplicationServerInstance>;\n  /** Gets the SAP Application Server Instance corresponding to the Virtual Instance for SAP solutions resource. */\n  get: (\n    resourceGroupName: string,\n    sapVirtualInstanceName: string,\n    applicationInstanceName: string,\n    options?: SAPApplicationServerInstancesGetOptionalParams,\n  ) => Promise<SAPApplicationServerInstance>;\n}\n\nfunction _getSAPApplicationServerInstances(context: WorkloadsContext) {\n  return {\n    stop: (\n      resourceGroupName: string,\n      sapVirtualInstanceName: string,\n      applicationInstanceName: string,\n      options?: SAPApplicationServerInstancesStopOptionalParams,\n    ) => stop(context, resourceGroupName, sapVirtualInstanceName, applicationInstanceName, options),\n    start: (\n      resourceGroupName: string,\n      sapVirtualInstanceName: string,\n      applicationInstanceName: string,\n      options?: SAPApplicationServerInstancesStartOptionalParams,\n    ) =>\n      start(context, resourceGroupName, sapVirtualInstanceName, applicationInstanceName, options),\n    list: (\n      resourceGroupName: string,\n      sapVirtualInstanceName: string,\n      options?: SAPApplicationServerInstancesListOptionalParams,\n    ) => list(context, resourceGroupName, sapVirtualInstanceName, options),\n    delete: (\n      resourceGroupName: string,\n      sapVirtualInstanceName: string,\n      applicationInstanceName: string,\n      options?: SAPApplicationServerInstancesDeleteOptionalParams,\n    ) =>\n      $delete(context, resourceGroupName, sapVirtualInstanceName, applicationInstanceName, options),\n    update: (\n      resourceGroupName: string,\n      sapVirtualInstanceName: string,\n      applicationInstanceName: string,\n      properties: UpdateSAPApplicationInstanceRequest,\n      options?: SAPApplicationServerInstancesUpdateOptionalParams,\n    ) =>\n      update(\n        context,\n        resourceGroupName,\n        sapVirtualInstanceName,\n        applicationInstanceName,\n        properties,\n        options,\n      ),\n    create: (\n      resourceGroupName: string,\n      sapVirtualInstanceName: string,\n      applicationInstanceName: string,\n      resource: SAPApplicationServerInstance,\n      options?: SAPApplicationServerInstancesCreateOptionalParams,\n    ) =>\n      create(\n        context,\n        resourceGroupName,\n        sapVirtualInstanceName,\n        applicationInstanceName,\n        resource,\n        options,\n      ),\n    get: (\n      resourceGroupName: string,\n      sapVirtualInstanceName: string,\n      applicationInstanceName: string,\n      options?: SAPApplicationServerInstancesGetOptionalParams,\n    ) => get(context, resourceGroupName, sapVirtualInstanceName, applicationInstanceName, options),\n  };\n}\n\nexport function _getSAPApplicationServerInstancesOperations(\n  context: WorkloadsContext,\n): SAPApplicationServerInstancesOperations {\n  return {\n    ..._getSAPApplicationServerInstances(context),\n  };\n}\n"]}