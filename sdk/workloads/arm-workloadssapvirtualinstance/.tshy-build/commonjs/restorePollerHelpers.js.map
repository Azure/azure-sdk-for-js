{"version":3,"file":"restorePollerHelpers.js","sourceRoot":"","sources":["../../src/restorePollerHelpers.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { WorkloadsClient } from \"./workloadsClient.js\";\nimport {\n  _stopDeserialize,\n  _startDeserialize,\n  _$deleteDeserialize,\n  _createDeserialize,\n} from \"./api/sapApplicationServerInstances/operations.js\";\nimport {\n  _stopDeserialize as _stopDeserializeSapDatabaseInstances,\n  _startDeserialize as _startDeserializeSapDatabaseInstances,\n  _$deleteDeserialize as _$deleteDeserializeSapDatabaseInstances,\n  _createDeserialize as _createDeserializeSapDatabaseInstances,\n} from \"./api/sapDatabaseInstances/operations.js\";\nimport {\n  _stopDeserialize as _stopDeserializeSapCentralServerInstances,\n  _startDeserialize as _startDeserializeSapCentralServerInstances,\n  _$deleteDeserialize as _$deleteDeserializeSapCentralServerInstances,\n  _createDeserialize as _createDeserializeSapCentralServerInstances,\n} from \"./api/sapCentralServerInstances/operations.js\";\nimport {\n  _stopDeserialize as _stopDeserializeSapVirtualInstances,\n  _startDeserialize as _startDeserializeSapVirtualInstances,\n  _$deleteDeserialize as _$deleteDeserializeSapVirtualInstances,\n  _updateDeserialize,\n  _createDeserialize as _createDeserializeSapVirtualInstances,\n} from \"./api/sapVirtualInstances/operations.js\";\nimport { getLongRunningPoller } from \"./static-helpers/pollingHelpers.js\";\nimport { OperationOptions, PathUncheckedResponse } from \"@azure-rest/core-client\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport {\n  PollerLike,\n  OperationState,\n  deserializeState,\n  ResourceLocationConfig,\n} from \"@azure/core-lro\";\n\nexport interface RestorePollerOptions<\n  TResult,\n  TResponse extends PathUncheckedResponse = PathUncheckedResponse,\n> extends OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /**\n   * The signal which can be used to abort requests.\n   */\n  abortSignal?: AbortSignalLike;\n  /** Deserialization function for raw response body */\n  processResponseBody?: (result: TResponse) => Promise<TResult>;\n}\n\n/**\n * Creates a poller from the serialized state of another poller. This can be\n * useful when you want to create pollers on a different host or a poller\n * needs to be constructed after the original one is not in scope.\n */\nexport function restorePoller<TResponse extends PathUncheckedResponse, TResult>(\n  client: WorkloadsClient,\n  serializedState: string,\n  sourceOperation: (...args: any[]) => PollerLike<OperationState<TResult>, TResult>,\n  options?: RestorePollerOptions<TResult>,\n): PollerLike<OperationState<TResult>, TResult> {\n  const pollerConfig = deserializeState(serializedState).config;\n  const { initialRequestUrl, requestMethod, metadata } = pollerConfig;\n  if (!initialRequestUrl || !requestMethod) {\n    throw new Error(\n      `Invalid serialized state: ${serializedState} for sourceOperation ${sourceOperation?.name}`,\n    );\n  }\n  const resourceLocationConfig = metadata?.[\"resourceLocationConfig\"] as\n    | ResourceLocationConfig\n    | undefined;\n  const { deserializer, expectedStatuses = [] } =\n    getDeserializationHelper(initialRequestUrl, requestMethod) ?? {};\n  const deserializeHelper = options?.processResponseBody ?? deserializer;\n  if (!deserializeHelper) {\n    throw new Error(\n      `Please ensure the operation is in this client! We can't find its deserializeHelper for ${sourceOperation?.name}.`,\n    );\n  }\n  return getLongRunningPoller(\n    (client as any)[\"_client\"] ?? client,\n    deserializeHelper as (result: TResponse) => Promise<TResult>,\n    expectedStatuses,\n    {\n      updateIntervalInMs: options?.updateIntervalInMs,\n      abortSignal: options?.abortSignal,\n      resourceLocationConfig,\n      restoreFrom: serializedState,\n      initialRequestUrl,\n    },\n  );\n}\n\ninterface DeserializationHelper {\n  deserializer: Function;\n  expectedStatuses: string[];\n}\n\nconst deserializeMap: Record<string, DeserializationHelper> = {\n  \"POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}/applicationInstances/{applicationInstanceName}/stop\":\n    { deserializer: _stopDeserialize, expectedStatuses: [\"202\", \"200\"] },\n  \"POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}/applicationInstances/{applicationInstanceName}/start\":\n    { deserializer: _startDeserialize, expectedStatuses: [\"202\", \"200\"] },\n  \"DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}/applicationInstances/{applicationInstanceName}\":\n    {\n      deserializer: _$deleteDeserialize,\n      expectedStatuses: [\"202\", \"204\", \"200\"],\n    },\n  \"PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}/applicationInstances/{applicationInstanceName}\":\n    { deserializer: _createDeserialize, expectedStatuses: [\"200\", \"201\"] },\n  \"POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}/databaseInstances/{databaseInstanceName}/stop\":\n    {\n      deserializer: _stopDeserializeSapDatabaseInstances,\n      expectedStatuses: [\"202\", \"200\"],\n    },\n  \"POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}/databaseInstances/{databaseInstanceName}/start\":\n    {\n      deserializer: _startDeserializeSapDatabaseInstances,\n      expectedStatuses: [\"202\", \"200\"],\n    },\n  \"DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}/databaseInstances/{databaseInstanceName}\":\n    {\n      deserializer: _$deleteDeserializeSapDatabaseInstances,\n      expectedStatuses: [\"202\", \"204\", \"200\"],\n    },\n  \"PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}/databaseInstances/{databaseInstanceName}\":\n    {\n      deserializer: _createDeserializeSapDatabaseInstances,\n      expectedStatuses: [\"200\", \"201\"],\n    },\n  \"POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}/centralInstances/{centralInstanceName}/stop\":\n    {\n      deserializer: _stopDeserializeSapCentralServerInstances,\n      expectedStatuses: [\"202\", \"200\"],\n    },\n  \"POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}/centralInstances/{centralInstanceName}/start\":\n    {\n      deserializer: _startDeserializeSapCentralServerInstances,\n      expectedStatuses: [\"202\", \"200\"],\n    },\n  \"DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}/centralInstances/{centralInstanceName}\":\n    {\n      deserializer: _$deleteDeserializeSapCentralServerInstances,\n      expectedStatuses: [\"202\", \"204\", \"200\"],\n    },\n  \"PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}/centralInstances/{centralInstanceName}\":\n    {\n      deserializer: _createDeserializeSapCentralServerInstances,\n      expectedStatuses: [\"200\", \"201\"],\n    },\n  \"POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}/stop\":\n    {\n      deserializer: _stopDeserializeSapVirtualInstances,\n      expectedStatuses: [\"202\", \"200\"],\n    },\n  \"POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}/start\":\n    {\n      deserializer: _startDeserializeSapVirtualInstances,\n      expectedStatuses: [\"202\", \"200\"],\n    },\n  \"DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}\":\n    {\n      deserializer: _$deleteDeserializeSapVirtualInstances,\n      expectedStatuses: [\"202\", \"204\", \"200\"],\n    },\n  \"PATCH /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}\":\n    { deserializer: _updateDeserialize, expectedStatuses: [\"200\", \"202\"] },\n  \"PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}\":\n    {\n      deserializer: _createDeserializeSapVirtualInstances,\n      expectedStatuses: [\"200\", \"201\"],\n    },\n};\n\nfunction getDeserializationHelper(\n  urlStr: string,\n  method: string,\n): DeserializationHelper | undefined {\n  const path = new URL(urlStr).pathname;\n  const pathParts = path.split(\"/\");\n\n  // Traverse list to match the longest candidate\n  // matchedLen: the length of candidate path\n  // matchedValue: the matched status code array\n  let matchedLen = -1,\n    matchedValue: DeserializationHelper | undefined;\n\n  // Iterate the responseMap to find a match\n  for (const [key, value] of Object.entries(deserializeMap)) {\n    // Extracting the path from the map key which is in format\n    // GET /path/foo\n    if (!key.startsWith(method)) {\n      continue;\n    }\n    const candidatePath = getPathFromMapKey(key);\n    // Get each part of the url path\n    const candidateParts = candidatePath.split(\"/\");\n\n    // track if we have found a match to return the values found.\n    let found = true;\n    for (let i = candidateParts.length - 1, j = pathParts.length - 1; i >= 1 && j >= 1; i--, j--) {\n      if (candidateParts[i]?.startsWith(\"{\") && candidateParts[i]?.indexOf(\"}\") !== -1) {\n        const start = candidateParts[i]!.indexOf(\"}\") + 1,\n          end = candidateParts[i]?.length;\n        // If the current part of the candidate is a \"template\" part\n        // Try to use the suffix of pattern to match the path\n        // {guid} ==> $\n        // {guid}:export ==> :export$\n        const isMatched = new RegExp(`${candidateParts[i]?.slice(start, end)}`).test(\n          pathParts[j] || \"\",\n        );\n\n        if (!isMatched) {\n          found = false;\n          break;\n        }\n        continue;\n      }\n\n      // If the candidate part is not a template and\n      // the parts don't match mark the candidate as not found\n      // to move on with the next candidate path.\n      if (candidateParts[i] !== pathParts[j]) {\n        found = false;\n        break;\n      }\n    }\n\n    // We finished evaluating the current candidate parts\n    // Update the matched value if and only if we found the longer pattern\n    if (found && candidatePath.length > matchedLen) {\n      matchedLen = candidatePath.length;\n      matchedValue = value;\n    }\n  }\n\n  return matchedValue;\n}\n\nfunction getPathFromMapKey(mapKey: string): string {\n  const pathStart = mapKey.indexOf(\"/\");\n  return mapKey.slice(pathStart);\n}\n"]}