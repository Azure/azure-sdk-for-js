{"version":3,"file":"operations.js","sourceRoot":"","sources":["../../../../src/api/sapCentralServerInstances/operations.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { WorkloadsContext as Client } from \"../index.js\";\nimport {\n  errorResponseDeserializer,\n  startRequestSerializer,\n  OperationStatusResult,\n  operationStatusResultDeserializer,\n  stopRequestSerializer,\n  SAPCentralServerInstance,\n  sapCentralServerInstanceSerializer,\n  sapCentralServerInstanceDeserializer,\n  UpdateSAPCentralInstanceRequest,\n  updateSAPCentralInstanceRequestSerializer,\n  _SAPCentralServerInstanceListResult,\n  _sapCentralServerInstanceListResultDeserializer,\n} from \"../../models/models.js\";\nimport {\n  SAPCentralServerInstancesStopOptionalParams,\n  SAPCentralServerInstancesStartOptionalParams,\n  SAPCentralServerInstancesListOptionalParams,\n  SAPCentralServerInstancesDeleteOptionalParams,\n  SAPCentralServerInstancesUpdateOptionalParams,\n  SAPCentralServerInstancesCreateOptionalParams,\n  SAPCentralServerInstancesGetOptionalParams,\n} from \"./options.js\";\nimport { getLongRunningPoller } from \"../../static-helpers/pollingHelpers.js\";\nimport {\n  PagedAsyncIterableIterator,\n  buildPagedAsyncIterator,\n} from \"../../static-helpers/pagingHelpers.js\";\nimport { expandUrlTemplate } from \"../../static-helpers/urlTemplate.js\";\nimport {\n  StreamableMethod,\n  PathUncheckedResponse,\n  createRestError,\n  operationOptionsToRequestParameters,\n} from \"@azure-rest/core-client\";\nimport { PollerLike, OperationState } from \"@azure/core-lro\";\n\nexport function _stopSend(\n  context: Client,\n  resourceGroupName: string,\n  sapVirtualInstanceName: string,\n  centralInstanceName: string,\n  options: SAPCentralServerInstancesStopOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}/centralInstances/{centralInstanceName}/stop{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      sapVirtualInstanceName: sapVirtualInstanceName,\n      centralInstanceName: centralInstanceName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).post({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n    body: !options[\"body\"] ? options[\"body\"] : stopRequestSerializer(options[\"body\"]),\n  });\n}\n\nexport async function _stopDeserialize(\n  result: PathUncheckedResponse,\n): Promise<OperationStatusResult> {\n  const expectedStatuses = [\"202\", \"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return operationStatusResultDeserializer(result.body);\n}\n\n/** Stops the SAP Central Services Instance. */\nexport function stop(\n  context: Client,\n  resourceGroupName: string,\n  sapVirtualInstanceName: string,\n  centralInstanceName: string,\n  options: SAPCentralServerInstancesStopOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<OperationStatusResult>, OperationStatusResult> {\n  return getLongRunningPoller(context, _stopDeserialize, [\"202\", \"200\"], {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _stopSend(context, resourceGroupName, sapVirtualInstanceName, centralInstanceName, options),\n    resourceLocationConfig: \"location\",\n  }) as PollerLike<OperationState<OperationStatusResult>, OperationStatusResult>;\n}\n\nexport function _startSend(\n  context: Client,\n  resourceGroupName: string,\n  sapVirtualInstanceName: string,\n  centralInstanceName: string,\n  options: SAPCentralServerInstancesStartOptionalParams = {\n    requestOptions: {},\n  },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}/centralInstances/{centralInstanceName}/start{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      sapVirtualInstanceName: sapVirtualInstanceName,\n      centralInstanceName: centralInstanceName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).post({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n    body: !options[\"body\"] ? options[\"body\"] : startRequestSerializer(options[\"body\"]),\n  });\n}\n\nexport async function _startDeserialize(\n  result: PathUncheckedResponse,\n): Promise<OperationStatusResult> {\n  const expectedStatuses = [\"202\", \"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return operationStatusResultDeserializer(result.body);\n}\n\n/** Starts the SAP Central Services Instance. */\nexport function start(\n  context: Client,\n  resourceGroupName: string,\n  sapVirtualInstanceName: string,\n  centralInstanceName: string,\n  options: SAPCentralServerInstancesStartOptionalParams = {\n    requestOptions: {},\n  },\n): PollerLike<OperationState<OperationStatusResult>, OperationStatusResult> {\n  return getLongRunningPoller(context, _startDeserialize, [\"202\", \"200\"], {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _startSend(context, resourceGroupName, sapVirtualInstanceName, centralInstanceName, options),\n    resourceLocationConfig: \"location\",\n  }) as PollerLike<OperationState<OperationStatusResult>, OperationStatusResult>;\n}\n\nexport function _listSend(\n  context: Client,\n  resourceGroupName: string,\n  sapVirtualInstanceName: string,\n  options: SAPCentralServerInstancesListOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}/centralInstances{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      sapVirtualInstanceName: sapVirtualInstanceName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).get({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _listDeserialize(\n  result: PathUncheckedResponse,\n): Promise<_SAPCentralServerInstanceListResult> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return _sapCentralServerInstanceListResultDeserializer(result.body);\n}\n\n/** Lists the SAP Central Services Instance resource for the given Virtual Instance for SAP solutions resource. */\nexport function list(\n  context: Client,\n  resourceGroupName: string,\n  sapVirtualInstanceName: string,\n  options: SAPCentralServerInstancesListOptionalParams = { requestOptions: {} },\n): PagedAsyncIterableIterator<SAPCentralServerInstance> {\n  return buildPagedAsyncIterator(\n    context,\n    () => _listSend(context, resourceGroupName, sapVirtualInstanceName, options),\n    _listDeserialize,\n    [\"200\"],\n    { itemName: \"value\", nextLinkName: \"nextLink\" },\n  );\n}\n\nexport function _$deleteSend(\n  context: Client,\n  resourceGroupName: string,\n  sapVirtualInstanceName: string,\n  centralInstanceName: string,\n  options: SAPCentralServerInstancesDeleteOptionalParams = {\n    requestOptions: {},\n  },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}/centralInstances/{centralInstanceName}{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      sapVirtualInstanceName: sapVirtualInstanceName,\n      centralInstanceName: centralInstanceName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).delete({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _$deleteDeserialize(result: PathUncheckedResponse): Promise<void> {\n  const expectedStatuses = [\"202\", \"204\", \"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return;\n}\n\n/** Deletes the SAP Central Services Instance resource. &lt;br&gt;&lt;br&gt;This will be used by service only. Delete operation on this resource by end user will return a Bad Request error. You can delete the parent resource, which is the Virtual Instance for SAP solutions resource, using the delete operation on it. */\n/**\n *  @fixme delete is a reserved word that cannot be used as an operation name.\n *         Please add @clientName(\"clientName\") or @clientName(\"<JS-Specific-Name>\", \"javascript\")\n *         to the operation to override the generated name.\n */\nexport function $delete(\n  context: Client,\n  resourceGroupName: string,\n  sapVirtualInstanceName: string,\n  centralInstanceName: string,\n  options: SAPCentralServerInstancesDeleteOptionalParams = {\n    requestOptions: {},\n  },\n): PollerLike<OperationState<void>, void> {\n  return getLongRunningPoller(context, _$deleteDeserialize, [\"202\", \"204\", \"200\"], {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _$deleteSend(\n        context,\n        resourceGroupName,\n        sapVirtualInstanceName,\n        centralInstanceName,\n        options,\n      ),\n    resourceLocationConfig: \"location\",\n  }) as PollerLike<OperationState<void>, void>;\n}\n\nexport function _updateSend(\n  context: Client,\n  resourceGroupName: string,\n  sapVirtualInstanceName: string,\n  centralInstanceName: string,\n  properties: UpdateSAPCentralInstanceRequest,\n  options: SAPCentralServerInstancesUpdateOptionalParams = {\n    requestOptions: {},\n  },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}/centralInstances/{centralInstanceName}{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      sapVirtualInstanceName: sapVirtualInstanceName,\n      centralInstanceName: centralInstanceName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).patch({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n    body: updateSAPCentralInstanceRequestSerializer(properties),\n  });\n}\n\nexport async function _updateDeserialize(\n  result: PathUncheckedResponse,\n): Promise<SAPCentralServerInstance> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return sapCentralServerInstanceDeserializer(result.body);\n}\n\n/** Updates the SAP Central Services Instance resource. &lt;br&gt;&lt;br&gt;This can be used to update tags on the resource. */\nexport async function update(\n  context: Client,\n  resourceGroupName: string,\n  sapVirtualInstanceName: string,\n  centralInstanceName: string,\n  properties: UpdateSAPCentralInstanceRequest,\n  options: SAPCentralServerInstancesUpdateOptionalParams = {\n    requestOptions: {},\n  },\n): Promise<SAPCentralServerInstance> {\n  const result = await _updateSend(\n    context,\n    resourceGroupName,\n    sapVirtualInstanceName,\n    centralInstanceName,\n    properties,\n    options,\n  );\n  return _updateDeserialize(result);\n}\n\nexport function _createSend(\n  context: Client,\n  resourceGroupName: string,\n  sapVirtualInstanceName: string,\n  centralInstanceName: string,\n  resource: SAPCentralServerInstance,\n  options: SAPCentralServerInstancesCreateOptionalParams = {\n    requestOptions: {},\n  },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}/centralInstances/{centralInstanceName}{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      sapVirtualInstanceName: sapVirtualInstanceName,\n      centralInstanceName: centralInstanceName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).put({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n    body: sapCentralServerInstanceSerializer(resource),\n  });\n}\n\nexport async function _createDeserialize(\n  result: PathUncheckedResponse,\n): Promise<SAPCentralServerInstance> {\n  const expectedStatuses = [\"200\", \"201\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return sapCentralServerInstanceDeserializer(result.body);\n}\n\n/** Creates the SAP Central Services Instance resource. &lt;br&gt;&lt;br&gt;This will be used by service only. PUT operation on this resource by end user will return a Bad Request error. */\nexport function create(\n  context: Client,\n  resourceGroupName: string,\n  sapVirtualInstanceName: string,\n  centralInstanceName: string,\n  resource: SAPCentralServerInstance,\n  options: SAPCentralServerInstancesCreateOptionalParams = {\n    requestOptions: {},\n  },\n): PollerLike<OperationState<SAPCentralServerInstance>, SAPCentralServerInstance> {\n  return getLongRunningPoller(context, _createDeserialize, [\"200\", \"201\"], {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _createSend(\n        context,\n        resourceGroupName,\n        sapVirtualInstanceName,\n        centralInstanceName,\n        resource,\n        options,\n      ),\n    resourceLocationConfig: \"azure-async-operation\",\n  }) as PollerLike<OperationState<SAPCentralServerInstance>, SAPCentralServerInstance>;\n}\n\nexport function _getSend(\n  context: Client,\n  resourceGroupName: string,\n  sapVirtualInstanceName: string,\n  centralInstanceName: string,\n  options: SAPCentralServerInstancesGetOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}/centralInstances/{centralInstanceName}{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      sapVirtualInstanceName: sapVirtualInstanceName,\n      centralInstanceName: centralInstanceName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).get({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _getDeserialize(\n  result: PathUncheckedResponse,\n): Promise<SAPCentralServerInstance> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return sapCentralServerInstanceDeserializer(result.body);\n}\n\n/** Gets the SAP Central Services Instance resource. */\nexport async function get(\n  context: Client,\n  resourceGroupName: string,\n  sapVirtualInstanceName: string,\n  centralInstanceName: string,\n  options: SAPCentralServerInstancesGetOptionalParams = { requestOptions: {} },\n): Promise<SAPCentralServerInstance> {\n  const result = await _getSend(\n    context,\n    resourceGroupName,\n    sapVirtualInstanceName,\n    centralInstanceName,\n    options,\n  );\n  return _getDeserialize(result);\n}\n"]}