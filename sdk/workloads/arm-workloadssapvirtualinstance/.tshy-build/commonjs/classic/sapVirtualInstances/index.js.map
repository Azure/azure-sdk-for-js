{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/classic/sapVirtualInstances/index.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;AA8LlC,8EAMC;AAtKD,+EAaqD;AAoFrD,SAAS,uBAAuB,CAAC,OAAyB;IACxD,OAAO;QACL,0BAA0B,EAAE,CAC1B,QAAgB,EAChB,IAAuC,EACvC,OAAqE,EACrE,EAAE,CAAC,IAAA,0CAA0B,EAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAC;QACjE,qBAAqB,EAAE,CACrB,QAAgB,EAChB,IAAkC,EAClC,OAAgE,EAChE,EAAE,CAAC,IAAA,qCAAqB,EAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAC;QAC5D,kBAAkB,EAAE,CAClB,QAAgB,EAChB,IAA6B,EAC7B,OAA6D,EAC7D,EAAE,CAAC,IAAA,kCAAkB,EAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAC;QACzD,wBAAwB,EAAE,CACxB,QAAgB,EAChB,IAAoC,EACpC,OAAmE,EACnE,EAAE,CAAC,IAAA,wCAAwB,EAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAC;QAC/D,IAAI,EAAE,CACJ,iBAAyB,EACzB,sBAA8B,EAC9B,OAA+C,EAC/C,EAAE,CAAC,IAAA,oBAAI,EAAC,OAAO,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,OAAO,CAAC;QACtE,KAAK,EAAE,CACL,iBAAyB,EACzB,sBAA8B,EAC9B,OAAgD,EAChD,EAAE,CAAC,IAAA,qBAAK,EAAC,OAAO,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,OAAO,CAAC;QACvE,kBAAkB,EAAE,CAAC,OAA6D,EAAE,EAAE,CACpF,IAAA,kCAAkB,EAAC,OAAO,EAAE,OAAO,CAAC;QACtC,mBAAmB,EAAE,CACnB,iBAAyB,EACzB,OAA8D,EAC9D,EAAE,CAAC,IAAA,mCAAmB,EAAC,OAAO,EAAE,iBAAiB,EAAE,OAAO,CAAC;QAC7D,MAAM,EAAE,CACN,iBAAyB,EACzB,sBAA8B,EAC9B,OAAiD,EACjD,EAAE,CAAC,IAAA,uBAAO,EAAC,OAAO,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,OAAO,CAAC;QACzE,MAAM,EAAE,CACN,iBAAyB,EACzB,sBAA8B,EAC9B,UAA2C,EAC3C,OAAiD,EACjD,EAAE,CAAC,IAAA,sBAAM,EAAC,OAAO,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,UAAU,EAAE,OAAO,CAAC;QACpF,MAAM,EAAE,CACN,iBAAyB,EACzB,sBAA8B,EAC9B,QAA4B,EAC5B,OAAiD,EACjD,EAAE,CAAC,IAAA,sBAAM,EAAC,OAAO,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,QAAQ,EAAE,OAAO,CAAC;QAClF,GAAG,EAAE,CACH,iBAAyB,EACzB,sBAA8B,EAC9B,OAA8C,EAC9C,EAAE,CAAC,IAAA,mBAAG,EAAC,OAAO,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,OAAO,CAAC;KACtE,CAAC;AACJ,CAAC;AAED,SAAgB,iCAAiC,CAC/C,OAAyB;IAEzB,yBACK,uBAAuB,CAAC,OAAO,CAAC,EACnC;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { WorkloadsContext } from \"../../api/workloadsContext.js\";\nimport {\n  SAPVirtualInstance,\n  UpdateSAPVirtualInstanceRequest,\n  OperationStatusResult,\n  SAPSizingRecommendationRequest,\n  SAPSizingRecommendationResultUnion,\n  SAPSupportedSkusRequest,\n  SAPSupportedResourceSkusResult,\n  SAPDiskConfigurationsRequest,\n  SAPDiskConfigurationsResult,\n  SAPAvailabilityZoneDetailsRequest,\n  SAPAvailabilityZoneDetailsResult,\n} from \"../../models/models.js\";\nimport {\n  SAPVirtualInstancesGetAvailabilityZoneDetailsOptionalParams,\n  SAPVirtualInstancesGetDiskConfigurationsOptionalParams,\n  SAPVirtualInstancesGetSapSupportedSkuOptionalParams,\n  SAPVirtualInstancesGetSizingRecommendationsOptionalParams,\n  SAPVirtualInstancesStopOptionalParams,\n  SAPVirtualInstancesStartOptionalParams,\n  SAPVirtualInstancesListBySubscriptionOptionalParams,\n  SAPVirtualInstancesListByResourceGroupOptionalParams,\n  SAPVirtualInstancesDeleteOptionalParams,\n  SAPVirtualInstancesUpdateOptionalParams,\n  SAPVirtualInstancesCreateOptionalParams,\n  SAPVirtualInstancesGetOptionalParams,\n} from \"../../api/sapVirtualInstances/options.js\";\nimport {\n  getAvailabilityZoneDetails,\n  getDiskConfigurations,\n  getSapSupportedSku,\n  getSizingRecommendations,\n  stop,\n  start,\n  listBySubscription,\n  listByResourceGroup,\n  $delete,\n  update,\n  create,\n  get,\n} from \"../../api/sapVirtualInstances/operations.js\";\nimport { PagedAsyncIterableIterator } from \"../../static-helpers/pagingHelpers.js\";\nimport { PollerLike, OperationState } from \"@azure/core-lro\";\n\n/** Interface representing a SAPVirtualInstances operations. */\nexport interface SAPVirtualInstancesOperations {\n  /** Get the recommended SAP Availability Zone Pair Details for your region. */\n  getAvailabilityZoneDetails: (\n    location: string,\n    body: SAPAvailabilityZoneDetailsRequest,\n    options?: SAPVirtualInstancesGetAvailabilityZoneDetailsOptionalParams,\n  ) => Promise<SAPAvailabilityZoneDetailsResult>;\n  /** Get the SAP Disk Configuration Layout prod/non-prod SAP System. */\n  getDiskConfigurations: (\n    location: string,\n    body: SAPDiskConfigurationsRequest,\n    options?: SAPVirtualInstancesGetDiskConfigurationsOptionalParams,\n  ) => Promise<SAPDiskConfigurationsResult>;\n  /** Get a list of SAP supported SKUs for ASCS, Application and Database tier. */\n  getSapSupportedSku: (\n    location: string,\n    body: SAPSupportedSkusRequest,\n    options?: SAPVirtualInstancesGetSapSupportedSkuOptionalParams,\n  ) => Promise<SAPSupportedResourceSkusResult>;\n  /** Gets the sizing recommendations. */\n  getSizingRecommendations: (\n    location: string,\n    body: SAPSizingRecommendationRequest,\n    options?: SAPVirtualInstancesGetSizingRecommendationsOptionalParams,\n  ) => Promise<SAPSizingRecommendationResultUnion>;\n  /** Stops the SAP Application, that is the Application server instances and Central Services instance. */\n  stop: (\n    resourceGroupName: string,\n    sapVirtualInstanceName: string,\n    options?: SAPVirtualInstancesStopOptionalParams,\n  ) => PollerLike<OperationState<OperationStatusResult>, OperationStatusResult>;\n  /** Starts the SAP application, that is the Central Services instance and Application server instances. */\n  start: (\n    resourceGroupName: string,\n    sapVirtualInstanceName: string,\n    options?: SAPVirtualInstancesStartOptionalParams,\n  ) => PollerLike<OperationState<OperationStatusResult>, OperationStatusResult>;\n  /** Gets all Virtual Instances for SAP solutions resources in a Subscription. */\n  listBySubscription: (\n    options?: SAPVirtualInstancesListBySubscriptionOptionalParams,\n  ) => PagedAsyncIterableIterator<SAPVirtualInstance>;\n  /** Gets all Virtual Instances for SAP solutions resources in a Resource Group. */\n  listByResourceGroup: (\n    resourceGroupName: string,\n    options?: SAPVirtualInstancesListByResourceGroupOptionalParams,\n  ) => PagedAsyncIterableIterator<SAPVirtualInstance>;\n  /** Deletes a Virtual Instance for SAP solutions resource and its child resources, that is the associated Central Services Instance, Application Server Instances and Database Instance. */\n  /**\n   *  @fixme delete is a reserved word that cannot be used as an operation name.\n   *         Please add @clientName(\"clientName\") or @clientName(\"<JS-Specific-Name>\", \"javascript\")\n   *         to the operation to override the generated name.\n   */\n  delete: (\n    resourceGroupName: string,\n    sapVirtualInstanceName: string,\n    options?: SAPVirtualInstancesDeleteOptionalParams,\n  ) => PollerLike<OperationState<void>, void>;\n  /** Updates a Virtual Instance for SAP solutions resource */\n  update: (\n    resourceGroupName: string,\n    sapVirtualInstanceName: string,\n    properties: UpdateSAPVirtualInstanceRequest,\n    options?: SAPVirtualInstancesUpdateOptionalParams,\n  ) => PollerLike<OperationState<SAPVirtualInstance>, SAPVirtualInstance>;\n  /** Creates a Virtual Instance for SAP solutions (VIS) resource */\n  create: (\n    resourceGroupName: string,\n    sapVirtualInstanceName: string,\n    resource: SAPVirtualInstance,\n    options?: SAPVirtualInstancesCreateOptionalParams,\n  ) => PollerLike<OperationState<SAPVirtualInstance>, SAPVirtualInstance>;\n  /** Gets a Virtual Instance for SAP solutions resource */\n  get: (\n    resourceGroupName: string,\n    sapVirtualInstanceName: string,\n    options?: SAPVirtualInstancesGetOptionalParams,\n  ) => Promise<SAPVirtualInstance>;\n}\n\nfunction _getSAPVirtualInstances(context: WorkloadsContext) {\n  return {\n    getAvailabilityZoneDetails: (\n      location: string,\n      body: SAPAvailabilityZoneDetailsRequest,\n      options?: SAPVirtualInstancesGetAvailabilityZoneDetailsOptionalParams,\n    ) => getAvailabilityZoneDetails(context, location, body, options),\n    getDiskConfigurations: (\n      location: string,\n      body: SAPDiskConfigurationsRequest,\n      options?: SAPVirtualInstancesGetDiskConfigurationsOptionalParams,\n    ) => getDiskConfigurations(context, location, body, options),\n    getSapSupportedSku: (\n      location: string,\n      body: SAPSupportedSkusRequest,\n      options?: SAPVirtualInstancesGetSapSupportedSkuOptionalParams,\n    ) => getSapSupportedSku(context, location, body, options),\n    getSizingRecommendations: (\n      location: string,\n      body: SAPSizingRecommendationRequest,\n      options?: SAPVirtualInstancesGetSizingRecommendationsOptionalParams,\n    ) => getSizingRecommendations(context, location, body, options),\n    stop: (\n      resourceGroupName: string,\n      sapVirtualInstanceName: string,\n      options?: SAPVirtualInstancesStopOptionalParams,\n    ) => stop(context, resourceGroupName, sapVirtualInstanceName, options),\n    start: (\n      resourceGroupName: string,\n      sapVirtualInstanceName: string,\n      options?: SAPVirtualInstancesStartOptionalParams,\n    ) => start(context, resourceGroupName, sapVirtualInstanceName, options),\n    listBySubscription: (options?: SAPVirtualInstancesListBySubscriptionOptionalParams) =>\n      listBySubscription(context, options),\n    listByResourceGroup: (\n      resourceGroupName: string,\n      options?: SAPVirtualInstancesListByResourceGroupOptionalParams,\n    ) => listByResourceGroup(context, resourceGroupName, options),\n    delete: (\n      resourceGroupName: string,\n      sapVirtualInstanceName: string,\n      options?: SAPVirtualInstancesDeleteOptionalParams,\n    ) => $delete(context, resourceGroupName, sapVirtualInstanceName, options),\n    update: (\n      resourceGroupName: string,\n      sapVirtualInstanceName: string,\n      properties: UpdateSAPVirtualInstanceRequest,\n      options?: SAPVirtualInstancesUpdateOptionalParams,\n    ) => update(context, resourceGroupName, sapVirtualInstanceName, properties, options),\n    create: (\n      resourceGroupName: string,\n      sapVirtualInstanceName: string,\n      resource: SAPVirtualInstance,\n      options?: SAPVirtualInstancesCreateOptionalParams,\n    ) => create(context, resourceGroupName, sapVirtualInstanceName, resource, options),\n    get: (\n      resourceGroupName: string,\n      sapVirtualInstanceName: string,\n      options?: SAPVirtualInstancesGetOptionalParams,\n    ) => get(context, resourceGroupName, sapVirtualInstanceName, options),\n  };\n}\n\nexport function _getSAPVirtualInstancesOperations(\n  context: WorkloadsContext,\n): SAPVirtualInstancesOperations {\n  return {\n    ..._getSAPVirtualInstances(context),\n  };\n}\n"]}