{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/classic/sapDatabaseInstances/index.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;AAwJlC,gFAMC;AA7ID,gFAQsD;AA+DtD,SAAS,wBAAwB,CAAC,OAAyB;IACzD,OAAO;QACL,IAAI,EAAE,CACJ,iBAAyB,EACzB,sBAA8B,EAC9B,oBAA4B,EAC5B,OAAgD,EAChD,EAAE,CAAC,IAAA,oBAAI,EAAC,OAAO,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,oBAAoB,EAAE,OAAO,CAAC;QAC5F,KAAK,EAAE,CACL,iBAAyB,EACzB,sBAA8B,EAC9B,oBAA4B,EAC5B,OAAiD,EACjD,EAAE,CAAC,IAAA,qBAAK,EAAC,OAAO,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,oBAAoB,EAAE,OAAO,CAAC;QAC7F,IAAI,EAAE,CACJ,iBAAyB,EACzB,sBAA8B,EAC9B,OAAgD,EAChD,EAAE,CAAC,IAAA,oBAAI,EAAC,OAAO,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,OAAO,CAAC;QACtE,MAAM,EAAE,CACN,iBAAyB,EACzB,sBAA8B,EAC9B,oBAA4B,EAC5B,OAAkD,EAClD,EAAE,CAAC,IAAA,uBAAO,EAAC,OAAO,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,oBAAoB,EAAE,OAAO,CAAC;QAC/F,MAAM,EAAE,CACN,iBAAyB,EACzB,sBAA8B,EAC9B,oBAA4B,EAC5B,UAA4C,EAC5C,OAAkD,EAClD,EAAE,CACF,IAAA,sBAAM,EACJ,OAAO,EACP,iBAAiB,EACjB,sBAAsB,EACtB,oBAAoB,EACpB,UAAU,EACV,OAAO,CACR;QACH,MAAM,EAAE,CACN,iBAAyB,EACzB,sBAA8B,EAC9B,oBAA4B,EAC5B,QAA6B,EAC7B,OAAkD,EAClD,EAAE,CACF,IAAA,sBAAM,EACJ,OAAO,EACP,iBAAiB,EACjB,sBAAsB,EACtB,oBAAoB,EACpB,QAAQ,EACR,OAAO,CACR;QACH,GAAG,EAAE,CACH,iBAAyB,EACzB,sBAA8B,EAC9B,oBAA4B,EAC5B,OAA+C,EAC/C,EAAE,CAAC,IAAA,mBAAG,EAAC,OAAO,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,oBAAoB,EAAE,OAAO,CAAC;KAC5F,CAAC;AACJ,CAAC;AAED,SAAgB,kCAAkC,CAChD,OAAyB;IAEzB,yBACK,wBAAwB,CAAC,OAAO,CAAC,EACpC;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { WorkloadsContext } from \"../../api/workloadsContext.js\";\nimport {\n  OperationStatusResult,\n  SAPDatabaseInstance,\n  UpdateSAPDatabaseInstanceRequest,\n} from \"../../models/models.js\";\nimport {\n  SAPDatabaseInstancesStopOptionalParams,\n  SAPDatabaseInstancesStartOptionalParams,\n  SAPDatabaseInstancesListOptionalParams,\n  SAPDatabaseInstancesDeleteOptionalParams,\n  SAPDatabaseInstancesUpdateOptionalParams,\n  SAPDatabaseInstancesCreateOptionalParams,\n  SAPDatabaseInstancesGetOptionalParams,\n} from \"../../api/sapDatabaseInstances/options.js\";\nimport {\n  stop,\n  start,\n  list,\n  $delete,\n  update,\n  create,\n  get,\n} from \"../../api/sapDatabaseInstances/operations.js\";\nimport { PagedAsyncIterableIterator } from \"../../static-helpers/pagingHelpers.js\";\nimport { PollerLike, OperationState } from \"@azure/core-lro\";\n\n/** Interface representing a SAPDatabaseInstances operations. */\nexport interface SAPDatabaseInstancesOperations {\n  /** Stops the database instance of the SAP system. */\n  stop: (\n    resourceGroupName: string,\n    sapVirtualInstanceName: string,\n    databaseInstanceName: string,\n    options?: SAPDatabaseInstancesStopOptionalParams,\n  ) => PollerLike<OperationState<OperationStatusResult>, OperationStatusResult>;\n  /** Starts the database instance of the SAP system. */\n  start: (\n    resourceGroupName: string,\n    sapVirtualInstanceName: string,\n    databaseInstanceName: string,\n    options?: SAPDatabaseInstancesStartOptionalParams,\n  ) => PollerLike<OperationState<OperationStatusResult>, OperationStatusResult>;\n  /** Lists the Database resources associated with a Virtual Instance for SAP solutions resource. */\n  list: (\n    resourceGroupName: string,\n    sapVirtualInstanceName: string,\n    options?: SAPDatabaseInstancesListOptionalParams,\n  ) => PagedAsyncIterableIterator<SAPDatabaseInstance>;\n  /** Deletes the Database resource corresponding to a Virtual Instance for SAP solutions resource. &lt;br&gt;&lt;br&gt;This will be used by service only. Delete by end user will return a Bad Request error. */\n  /**\n   *  @fixme delete is a reserved word that cannot be used as an operation name.\n   *         Please add @clientName(\"clientName\") or @clientName(\"<JS-Specific-Name>\", \"javascript\")\n   *         to the operation to override the generated name.\n   */\n  delete: (\n    resourceGroupName: string,\n    sapVirtualInstanceName: string,\n    databaseInstanceName: string,\n    options?: SAPDatabaseInstancesDeleteOptionalParams,\n  ) => PollerLike<OperationState<void>, void>;\n  /** Updates the Database resource. */\n  update: (\n    resourceGroupName: string,\n    sapVirtualInstanceName: string,\n    databaseInstanceName: string,\n    properties: UpdateSAPDatabaseInstanceRequest,\n    options?: SAPDatabaseInstancesUpdateOptionalParams,\n  ) => Promise<SAPDatabaseInstance>;\n  /** Creates the Database resource corresponding to the Virtual Instance for SAP solutions resource. &lt;br&gt;&lt;br&gt;This will be used by service only. PUT by end user will return a Bad Request error. */\n  create: (\n    resourceGroupName: string,\n    sapVirtualInstanceName: string,\n    databaseInstanceName: string,\n    resource: SAPDatabaseInstance,\n    options?: SAPDatabaseInstancesCreateOptionalParams,\n  ) => PollerLike<OperationState<SAPDatabaseInstance>, SAPDatabaseInstance>;\n  /** Gets the SAP Database Instance resource. */\n  get: (\n    resourceGroupName: string,\n    sapVirtualInstanceName: string,\n    databaseInstanceName: string,\n    options?: SAPDatabaseInstancesGetOptionalParams,\n  ) => Promise<SAPDatabaseInstance>;\n}\n\nfunction _getSAPDatabaseInstances(context: WorkloadsContext) {\n  return {\n    stop: (\n      resourceGroupName: string,\n      sapVirtualInstanceName: string,\n      databaseInstanceName: string,\n      options?: SAPDatabaseInstancesStopOptionalParams,\n    ) => stop(context, resourceGroupName, sapVirtualInstanceName, databaseInstanceName, options),\n    start: (\n      resourceGroupName: string,\n      sapVirtualInstanceName: string,\n      databaseInstanceName: string,\n      options?: SAPDatabaseInstancesStartOptionalParams,\n    ) => start(context, resourceGroupName, sapVirtualInstanceName, databaseInstanceName, options),\n    list: (\n      resourceGroupName: string,\n      sapVirtualInstanceName: string,\n      options?: SAPDatabaseInstancesListOptionalParams,\n    ) => list(context, resourceGroupName, sapVirtualInstanceName, options),\n    delete: (\n      resourceGroupName: string,\n      sapVirtualInstanceName: string,\n      databaseInstanceName: string,\n      options?: SAPDatabaseInstancesDeleteOptionalParams,\n    ) => $delete(context, resourceGroupName, sapVirtualInstanceName, databaseInstanceName, options),\n    update: (\n      resourceGroupName: string,\n      sapVirtualInstanceName: string,\n      databaseInstanceName: string,\n      properties: UpdateSAPDatabaseInstanceRequest,\n      options?: SAPDatabaseInstancesUpdateOptionalParams,\n    ) =>\n      update(\n        context,\n        resourceGroupName,\n        sapVirtualInstanceName,\n        databaseInstanceName,\n        properties,\n        options,\n      ),\n    create: (\n      resourceGroupName: string,\n      sapVirtualInstanceName: string,\n      databaseInstanceName: string,\n      resource: SAPDatabaseInstance,\n      options?: SAPDatabaseInstancesCreateOptionalParams,\n    ) =>\n      create(\n        context,\n        resourceGroupName,\n        sapVirtualInstanceName,\n        databaseInstanceName,\n        resource,\n        options,\n      ),\n    get: (\n      resourceGroupName: string,\n      sapVirtualInstanceName: string,\n      databaseInstanceName: string,\n      options?: SAPDatabaseInstancesGetOptionalParams,\n    ) => get(context, resourceGroupName, sapVirtualInstanceName, databaseInstanceName, options),\n  };\n}\n\nexport function _getSAPDatabaseInstancesOperations(\n  context: WorkloadsContext,\n): SAPDatabaseInstancesOperations {\n  return {\n    ..._getSAPDatabaseInstances(context),\n  };\n}\n"]}