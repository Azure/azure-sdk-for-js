/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import {
  SAPAvailabilityZoneDetailsRequest,
  WorkloadsClient,
} from "@azure/arm-workloadssapvirtualinstance";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";

dotenv.config();

/**
 * This sample demonstrates how to Get the recommended SAP Availability Zone Pair Details for your region.
 *
 * @summary Get the recommended SAP Availability Zone Pair Details for your region.
 * x-ms-original-file: specification/workloads/resource-manager/Microsoft.Workloads/SAPVirtualInstance/stable/2024-09-01/examples/SapVirtualInstances_InvokeAvailabilityZoneDetails_eastus.json
 */
async function sapAvailabilityZoneDetailsInEastUs() {
  const subscriptionId =
    process.env["WORKLOADS_SUBSCRIPTION_ID"] ||
    "8e17e36c-42e9-4cd5-a078-7b44883414e0";
  const location = "eastus";
  const body: SAPAvailabilityZoneDetailsRequest = {
    appLocation: "eastus",
    databaseType: "HANA",
    sapProduct: "S4HANA",
  };
  const credential = new DefaultAzureCredential();
  const client = new WorkloadsClient(credential, subscriptionId);
  const result = await client.sapVirtualInstances.invokeAvailabilityZoneDetails(
    location,
    body,
  );
  console.log(result);
}

/**
 * This sample demonstrates how to Get the recommended SAP Availability Zone Pair Details for your region.
 *
 * @summary Get the recommended SAP Availability Zone Pair Details for your region.
 * x-ms-original-file: specification/workloads/resource-manager/Microsoft.Workloads/SAPVirtualInstance/stable/2024-09-01/examples/SapVirtualInstances_InvokeAvailabilityZoneDetails_northeurope.json
 */
async function sapAvailabilityZoneDetailsInNorthEurope() {
  const subscriptionId =
    process.env["WORKLOADS_SUBSCRIPTION_ID"] ||
    "8e17e36c-42e9-4cd5-a078-7b44883414e0";
  const location = "northeurope";
  const body: SAPAvailabilityZoneDetailsRequest = {
    appLocation: "northeurope",
    databaseType: "HANA",
    sapProduct: "S4HANA",
  };
  const credential = new DefaultAzureCredential();
  const client = new WorkloadsClient(credential, subscriptionId);
  const result = await client.sapVirtualInstances.invokeAvailabilityZoneDetails(
    location,
    body,
  );
  console.log(result);
}

async function main() {
  sapAvailabilityZoneDetailsInEastUs();
  sapAvailabilityZoneDetailsInNorthEurope();
}

main().catch(console.error);
