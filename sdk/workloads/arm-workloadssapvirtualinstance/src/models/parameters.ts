/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter,
} from "@azure/core-client";
import {
  SAPSizingRecommendationRequest as SAPSizingRecommendationRequestMapper,
  SAPSupportedSkusRequest as SAPSupportedSkusRequestMapper,
  SAPDiskConfigurationsRequest as SAPDiskConfigurationsRequestMapper,
  SAPAvailabilityZoneDetailsRequest as SAPAvailabilityZoneDetailsRequestMapper,
  SAPVirtualInstance as SAPVirtualInstanceMapper,
  UpdateSAPVirtualInstanceRequest as UpdateSAPVirtualInstanceRequestMapper,
  StartRequest as StartRequestMapper,
  StopRequest as StopRequestMapper,
  SAPCentralServerInstance as SAPCentralServerInstanceMapper,
  UpdateSAPCentralInstanceRequest as UpdateSAPCentralInstanceRequestMapper,
  SAPDatabaseInstance as SAPDatabaseInstanceMapper,
  UpdateSAPDatabaseInstanceRequest as UpdateSAPDatabaseInstanceRequestMapper,
  SAPApplicationServerInstance as SAPApplicationServerInstanceMapper,
  UpdateSAPApplicationInstanceRequest as UpdateSAPApplicationInstanceRequestMapper,
} from "../models/mappers";

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String",
    },
  },
};

export const sAPSizingRecommendation: OperationParameter = {
  parameterPath: ["options", "sAPSizingRecommendation"],
  mapper: SAPSizingRecommendationRequestMapper,
};

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String",
    },
  },
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    constraints: {
      MinLength: 1,
    },
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const location: OperationURLParameter = {
  parameterPath: "location",
  mapper: {
    constraints: {
      MinLength: 1,
    },
    serializedName: "location",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2023-10-01-preview",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String",
    },
  },
};

export const sAPSupportedSku: OperationParameter = {
  parameterPath: ["options", "sAPSupportedSku"],
  mapper: SAPSupportedSkusRequestMapper,
};

export const sAPDiskConfigurations: OperationParameter = {
  parameterPath: ["options", "sAPDiskConfigurations"],
  mapper: SAPDiskConfigurationsRequestMapper,
};

export const sAPAvailabilityZoneDetails: OperationParameter = {
  parameterPath: ["options", "sAPAvailabilityZoneDetails"],
  mapper: SAPAvailabilityZoneDetailsRequestMapper,
};

export const body: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: SAPVirtualInstanceMapper,
};

export const resourceGroupName: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    constraints: {
      MaxLength: 90,
      MinLength: 1,
    },
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const sapVirtualInstanceName: OperationURLParameter = {
  parameterPath: "sapVirtualInstanceName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[a-zA-Z][a-zA-Z0-9]{2}$"),
    },
    serializedName: "sapVirtualInstanceName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const body1: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: UpdateSAPVirtualInstanceRequestMapper,
};

export const body2: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: StartRequestMapper,
};

export const body3: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: StopRequestMapper,
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const centralInstanceName: OperationURLParameter = {
  parameterPath: "centralInstanceName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^.*"),
    },
    serializedName: "centralInstanceName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const body4: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: SAPCentralServerInstanceMapper,
};

export const body5: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: UpdateSAPCentralInstanceRequestMapper,
};

export const databaseInstanceName: OperationURLParameter = {
  parameterPath: "databaseInstanceName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^.*"),
    },
    serializedName: "databaseInstanceName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const body6: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: SAPDatabaseInstanceMapper,
};

export const body7: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: UpdateSAPDatabaseInstanceRequestMapper,
};

export const applicationInstanceName: OperationURLParameter = {
  parameterPath: "applicationInstanceName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^.*"),
    },
    serializedName: "applicationInstanceName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const body8: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: SAPApplicationServerInstanceMapper,
};

export const body9: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: UpdateSAPApplicationInstanceRequestMapper,
};
