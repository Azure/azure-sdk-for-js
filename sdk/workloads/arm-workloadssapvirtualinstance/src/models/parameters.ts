/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter,
} from "@azure/core-client";
import {
  SAPAvailabilityZoneDetailsRequest as SAPAvailabilityZoneDetailsRequestMapper,
  SAPDiskConfigurationsRequest as SAPDiskConfigurationsRequestMapper,
  SAPSupportedSkusRequest as SAPSupportedSkusRequestMapper,
  SAPSizingRecommendationRequest as SAPSizingRecommendationRequestMapper,
  SAPVirtualInstance as SAPVirtualInstanceMapper,
  UpdateSAPVirtualInstanceRequest as UpdateSAPVirtualInstanceRequestMapper,
  StartRequest as StartRequestMapper,
  StopRequest as StopRequestMapper,
  SAPApplicationServerInstance as SAPApplicationServerInstanceMapper,
  UpdateSAPApplicationInstanceRequest as UpdateSAPApplicationInstanceRequestMapper,
  SAPCentralServerInstance as SAPCentralServerInstanceMapper,
  UpdateSAPCentralInstanceRequest as UpdateSAPCentralInstanceRequestMapper,
  SAPDatabaseInstance as SAPDatabaseInstanceMapper,
  UpdateSAPDatabaseInstanceRequest as UpdateSAPDatabaseInstanceRequestMapper,
} from "../models/mappers";

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String",
    },
  },
};

export const body: OperationParameter = {
  parameterPath: "body",
  mapper: SAPAvailabilityZoneDetailsRequestMapper,
};

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String",
    },
  },
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2024-09-01",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String",
    },
  },
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "Uuid",
    },
  },
};

export const location: OperationURLParameter = {
  parameterPath: "location",
  mapper: {
    constraints: {
      MinLength: 1,
    },
    serializedName: "location",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const body1: OperationParameter = {
  parameterPath: "body",
  mapper: SAPDiskConfigurationsRequestMapper,
};

export const body2: OperationParameter = {
  parameterPath: "body",
  mapper: SAPSupportedSkusRequestMapper,
};

export const body3: OperationParameter = {
  parameterPath: "body",
  mapper: SAPSizingRecommendationRequestMapper,
};

export const resourceGroupName: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    constraints: {
      MaxLength: 90,
      MinLength: 1,
    },
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const sapVirtualInstanceName: OperationURLParameter = {
  parameterPath: "sapVirtualInstanceName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[a-zA-Z][a-zA-Z0-9]{2}$"),
    },
    serializedName: "sapVirtualInstanceName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resource: OperationParameter = {
  parameterPath: "resource",
  mapper: SAPVirtualInstanceMapper,
};

export const properties: OperationParameter = {
  parameterPath: "properties",
  mapper: UpdateSAPVirtualInstanceRequestMapper,
};

export const body4: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: StartRequestMapper,
};

export const body5: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: StopRequestMapper,
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const applicationInstanceName: OperationURLParameter = {
  parameterPath: "applicationInstanceName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^.*"),
    },
    serializedName: "applicationInstanceName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resource1: OperationParameter = {
  parameterPath: "resource",
  mapper: SAPApplicationServerInstanceMapper,
};

export const properties1: OperationParameter = {
  parameterPath: "properties",
  mapper: UpdateSAPApplicationInstanceRequestMapper,
};

export const centralInstanceName: OperationURLParameter = {
  parameterPath: "centralInstanceName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^.*"),
    },
    serializedName: "centralInstanceName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resource2: OperationParameter = {
  parameterPath: "resource",
  mapper: SAPCentralServerInstanceMapper,
};

export const properties2: OperationParameter = {
  parameterPath: "properties",
  mapper: UpdateSAPCentralInstanceRequestMapper,
};

export const databaseInstanceName: OperationURLParameter = {
  parameterPath: "databaseInstanceName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^.*"),
    },
    serializedName: "databaseInstanceName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resource3: OperationParameter = {
  parameterPath: "resource",
  mapper: SAPDatabaseInstanceMapper,
};

export const properties3: OperationParameter = {
  parameterPath: "properties",
  mapper: UpdateSAPDatabaseInstanceRequestMapper,
};
