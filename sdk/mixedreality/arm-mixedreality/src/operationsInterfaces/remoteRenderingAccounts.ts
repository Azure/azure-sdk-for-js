/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  RemoteRenderingAccount,
  RemoteRenderingAccountsListBySubscriptionOptionalParams,
  RemoteRenderingAccountsListByResourceGroupOptionalParams,
  RemoteRenderingAccountsDeleteOptionalParams,
  RemoteRenderingAccountsGetOptionalParams,
  RemoteRenderingAccountsGetResponse,
  RemoteRenderingAccountsUpdateOptionalParams,
  RemoteRenderingAccountsUpdateResponse,
  RemoteRenderingAccountsCreateOptionalParams,
  RemoteRenderingAccountsCreateResponse,
  RemoteRenderingAccountsListKeysOptionalParams,
  RemoteRenderingAccountsListKeysResponse,
  AccountKeyRegenerateRequest,
  RemoteRenderingAccountsRegenerateKeysOptionalParams,
  RemoteRenderingAccountsRegenerateKeysResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a RemoteRenderingAccounts. */
export interface RemoteRenderingAccounts {
  /**
   * List Remote Rendering Accounts by Subscription
   * @param options The options parameters.
   */
  listBySubscription(
    options?: RemoteRenderingAccountsListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<RemoteRenderingAccount>;
  /**
   * List Resources by Resource Group
   * @param resourceGroupName Name of an Azure resource group.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: RemoteRenderingAccountsListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<RemoteRenderingAccount>;
  /**
   * Delete a Remote Rendering Account.
   * @param resourceGroupName Name of an Azure resource group.
   * @param accountName Name of an Mixed Reality Account.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    accountName: string,
    options?: RemoteRenderingAccountsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Retrieve a Remote Rendering Account.
   * @param resourceGroupName Name of an Azure resource group.
   * @param accountName Name of an Mixed Reality Account.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    options?: RemoteRenderingAccountsGetOptionalParams
  ): Promise<RemoteRenderingAccountsGetResponse>;
  /**
   * Updating a Remote Rendering Account
   * @param resourceGroupName Name of an Azure resource group.
   * @param accountName Name of an Mixed Reality Account.
   * @param remoteRenderingAccount Remote Rendering Account parameter.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    accountName: string,
    remoteRenderingAccount: RemoteRenderingAccount,
    options?: RemoteRenderingAccountsUpdateOptionalParams
  ): Promise<RemoteRenderingAccountsUpdateResponse>;
  /**
   * Creating or Updating a Remote Rendering Account.
   * @param resourceGroupName Name of an Azure resource group.
   * @param accountName Name of an Mixed Reality Account.
   * @param remoteRenderingAccount Remote Rendering Account parameter.
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    accountName: string,
    remoteRenderingAccount: RemoteRenderingAccount,
    options?: RemoteRenderingAccountsCreateOptionalParams
  ): Promise<RemoteRenderingAccountsCreateResponse>;
  /**
   * List Both of the 2 Keys of a Remote Rendering Account
   * @param resourceGroupName Name of an Azure resource group.
   * @param accountName Name of an Mixed Reality Account.
   * @param options The options parameters.
   */
  listKeys(
    resourceGroupName: string,
    accountName: string,
    options?: RemoteRenderingAccountsListKeysOptionalParams
  ): Promise<RemoteRenderingAccountsListKeysResponse>;
  /**
   * Regenerate specified Key of a Remote Rendering Account
   * @param resourceGroupName Name of an Azure resource group.
   * @param accountName Name of an Mixed Reality Account.
   * @param regenerate Required information for key regeneration.
   * @param options The options parameters.
   */
  regenerateKeys(
    resourceGroupName: string,
    accountName: string,
    regenerate: AccountKeyRegenerateRequest,
    options?: RemoteRenderingAccountsRegenerateKeysOptionalParams
  ): Promise<RemoteRenderingAccountsRegenerateKeysResponse>;
}
