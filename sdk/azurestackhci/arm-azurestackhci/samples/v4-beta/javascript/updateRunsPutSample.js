/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
const { AzureStackHCIClient } = require("@azure/arm-azurestackhci");
const { DefaultAzureCredential } = require("@azure/identity");
require("dotenv").config();

/**
 * This sample demonstrates how to Put Update runs for a specified update
 *
 * @summary Put Update runs for a specified update
 * x-ms-original-file: specification/azurestackhci/resource-manager/Microsoft.AzureStackHCI/StackHCI/stable/2024-04-01/examples/PutUpdateRuns.json
 */
async function getUpdateRunsUnderClusterResource() {
  const subscriptionId =
    process.env["AZURESTACKHCI_SUBSCRIPTION_ID"] || "b8d594e5-51f3-4c11-9c54-a7771b81c712";
  const resourceGroupName = process.env["AZURESTACKHCI_RESOURCE_GROUP"] || "testrg";
  const clusterName = "testcluster";
  const updateName = "Microsoft4.2203.2.32";
  const updateRunName = "23b779ba-0d52-4a80-8571-45ca74664ec3";
  const updateRunsProperties = {
    namePropertiesProgressName: "Unnamed step",
    description: "Update Azure Stack.",
    endTimeUtc: new Date("2022-04-06T13:58:42.969006+00:00"),
    errorMessage: "",
    lastUpdatedTimeUtc: new Date("2022-04-06T13:58:42.969006+00:00"),
    startTimeUtc: new Date("2022-04-06T01:36:33.3876751+00:00"),
    status: "Success",
    steps: [
      {
        name: "PreUpdate Cloud",
        description: "Prepare for SSU update",
        endTimeUtc: new Date("2022-04-06T01:37:16.8728314+00:00"),
        errorMessage: "",
        lastUpdatedTimeUtc: new Date("2022-04-06T01:37:16.8728314+00:00"),
        startTimeUtc: new Date("2022-04-06T01:36:33.3876751+00:00"),
        status: "Success",
        steps: [],
      },
    ],
  };
  const credential = new DefaultAzureCredential();
  const client = new AzureStackHCIClient(credential, subscriptionId);
  const result = await client.updateRuns.put(
    resourceGroupName,
    clusterName,
    updateName,
    updateRunName,
    updateRunsProperties,
  );
  console.log(result);
}

async function main() {
  getUpdateRunsUnderClusterResource();
}

main().catch(console.error);
