/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { HciEdgeDevice, AzureStackHCIClient } from "@azure/arm-azurestackhci";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";

dotenv.config();

/**
 * This sample demonstrates how to Create a EdgeDevice
 *
 * @summary Create a EdgeDevice
 * x-ms-original-file: specification/azurestackhci/resource-manager/Microsoft.AzureStackHCI/StackHCI/stable/2024-04-01/examples/CreateHciEdgeDevice.json
 */
async function createHciEdgeDevice() {
  const resourceUri =
    "subscriptions/fd3c3665-1729-4b7b-9a38-238e83b0f98b/resourceGroups/ArcInstance-rg/providers/Microsoft.HybridCompute/machines/Node-1";
  const edgeDeviceName = "default";
  const resource: HciEdgeDevice = {
    kind: "HCI",
    properties: {
      deviceConfiguration: {
        deviceMetadata: "",
        nicDetails: [
          {
            adapterName: "ethernet",
            componentId: "VMBUS{f8615163-df3e-46c5-913f-f2d2f965ed0g} ",
            defaultGateway: "10.10.10.1",
            defaultIsolationId: "0",
            dnsServers: ["100.10.10.1"],
            driverVersion: "10.0.20348.1547 ",
            interfaceDescription: "NDIS 6.70 ",
            ip4Address: "10.10.10.10",
            subnetMask: "255.255.255.0",
          },
        ],
      },
    },
  };
  const credential = new DefaultAzureCredential();
  const client = new AzureStackHCIClient(credential);
  const result = await client.edgeDevices.beginCreateOrUpdateAndWait(
    resourceUri,
    edgeDeviceName,
    resource,
  );
  console.log(result);
}

async function main() {
  createHciEdgeDevice();
}

main().catch(console.error);
