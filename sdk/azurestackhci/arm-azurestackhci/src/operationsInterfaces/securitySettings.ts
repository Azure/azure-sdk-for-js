/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  SecuritySetting,
  SecuritySettingsListByClustersOptionalParams,
  SecuritySettingsGetOptionalParams,
  SecuritySettingsGetResponse,
  SecuritySettingsCreateOrUpdateOptionalParams,
  SecuritySettingsCreateOrUpdateResponse,
  SecuritySettingsDeleteOptionalParams,
  SecuritySettingsDeleteResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SecuritySettings. */
export interface SecuritySettings {
  /**
   * List SecuritySetting resources by Clusters
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the cluster.
   * @param options The options parameters.
   */
  listByClusters(
    resourceGroupName: string,
    clusterName: string,
    options?: SecuritySettingsListByClustersOptionalParams,
  ): PagedAsyncIterableIterator<SecuritySetting>;
  /**
   * Get a SecuritySetting
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the cluster.
   * @param securitySettingsName Name of security setting
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    clusterName: string,
    securitySettingsName: string,
    options?: SecuritySettingsGetOptionalParams,
  ): Promise<SecuritySettingsGetResponse>;
  /**
   * Create a security setting
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the cluster.
   * @param securitySettingsName Name of security setting
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    clusterName: string,
    securitySettingsName: string,
    resource: SecuritySetting,
    options?: SecuritySettingsCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<SecuritySettingsCreateOrUpdateResponse>,
      SecuritySettingsCreateOrUpdateResponse
    >
  >;
  /**
   * Create a security setting
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the cluster.
   * @param securitySettingsName Name of security setting
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    clusterName: string,
    securitySettingsName: string,
    resource: SecuritySetting,
    options?: SecuritySettingsCreateOrUpdateOptionalParams,
  ): Promise<SecuritySettingsCreateOrUpdateResponse>;
  /**
   * Delete a SecuritySetting
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the cluster.
   * @param securitySettingsName Name of security setting
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    clusterName: string,
    securitySettingsName: string,
    options?: SecuritySettingsDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<SecuritySettingsDeleteResponse>,
      SecuritySettingsDeleteResponse
    >
  >;
  /**
   * Delete a SecuritySetting
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the cluster.
   * @param securitySettingsName Name of security setting
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    clusterName: string,
    securitySettingsName: string,
    options?: SecuritySettingsDeleteOptionalParams,
  ): Promise<SecuritySettingsDeleteResponse>;
}
