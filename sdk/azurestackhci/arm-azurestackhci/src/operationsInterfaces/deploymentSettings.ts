/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  DeploymentSetting,
  DeploymentSettingsListByClustersOptionalParams,
  DeploymentSettingsGetOptionalParams,
  DeploymentSettingsGetResponse,
  DeploymentSettingsCreateOrUpdateOptionalParams,
  DeploymentSettingsCreateOrUpdateResponse,
  DeploymentSettingsDeleteOptionalParams,
  DeploymentSettingsDeleteResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a DeploymentSettings. */
export interface DeploymentSettings {
  /**
   * List DeploymentSetting resources by Clusters
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the cluster.
   * @param options The options parameters.
   */
  listByClusters(
    resourceGroupName: string,
    clusterName: string,
    options?: DeploymentSettingsListByClustersOptionalParams,
  ): PagedAsyncIterableIterator<DeploymentSetting>;
  /**
   * Get a DeploymentSetting
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the cluster.
   * @param deploymentSettingsName Name of Deployment Setting
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    clusterName: string,
    deploymentSettingsName: string,
    options?: DeploymentSettingsGetOptionalParams,
  ): Promise<DeploymentSettingsGetResponse>;
  /**
   * Create a DeploymentSetting
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the cluster.
   * @param deploymentSettingsName Name of Deployment Setting
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    clusterName: string,
    deploymentSettingsName: string,
    resource: DeploymentSetting,
    options?: DeploymentSettingsCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<DeploymentSettingsCreateOrUpdateResponse>,
      DeploymentSettingsCreateOrUpdateResponse
    >
  >;
  /**
   * Create a DeploymentSetting
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the cluster.
   * @param deploymentSettingsName Name of Deployment Setting
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    clusterName: string,
    deploymentSettingsName: string,
    resource: DeploymentSetting,
    options?: DeploymentSettingsCreateOrUpdateOptionalParams,
  ): Promise<DeploymentSettingsCreateOrUpdateResponse>;
  /**
   * Delete a DeploymentSetting
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the cluster.
   * @param deploymentSettingsName Name of Deployment Setting
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    clusterName: string,
    deploymentSettingsName: string,
    options?: DeploymentSettingsDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<DeploymentSettingsDeleteResponse>,
      DeploymentSettingsDeleteResponse
    >
  >;
  /**
   * Delete a DeploymentSetting
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the cluster.
   * @param deploymentSettingsName Name of Deployment Setting
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    clusterName: string,
    deploymentSettingsName: string,
    options?: DeploymentSettingsDeleteOptionalParams,
  ): Promise<DeploymentSettingsDeleteResponse>;
}
