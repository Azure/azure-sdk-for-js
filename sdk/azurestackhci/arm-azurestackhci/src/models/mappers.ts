/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const ClusterNode: msRest.CompositeMapper = {
  serializedName: "ClusterNode",
  type: {
    name: "Composite",
    className: "ClusterNode",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      manufacturer: {
        readOnly: true,
        serializedName: "manufacturer",
        type: {
          name: "String"
        }
      },
      model: {
        readOnly: true,
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      osName: {
        readOnly: true,
        serializedName: "osName",
        type: {
          name: "String"
        }
      },
      osVersion: {
        readOnly: true,
        serializedName: "osVersion",
        type: {
          name: "String"
        }
      },
      serialNumber: {
        readOnly: true,
        serializedName: "serialNumber",
        type: {
          name: "String"
        }
      },
      coreCount: {
        readOnly: true,
        serializedName: "coreCount",
        type: {
          name: "Number"
        }
      },
      memoryInGiB: {
        readOnly: true,
        serializedName: "memoryInGiB",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ClusterReportedProperties: msRest.CompositeMapper = {
  serializedName: "ClusterReportedProperties",
  type: {
    name: "Composite",
    className: "ClusterReportedProperties",
    modelProperties: {
      clusterName: {
        readOnly: true,
        serializedName: "clusterName",
        type: {
          name: "String"
        }
      },
      clusterId: {
        readOnly: true,
        serializedName: "clusterId",
        type: {
          name: "String"
        }
      },
      clusterVersion: {
        readOnly: true,
        serializedName: "clusterVersion",
        type: {
          name: "String"
        }
      },
      nodes: {
        readOnly: true,
        serializedName: "nodes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ClusterNode"
            }
          }
        }
      },
      lastUpdated: {
        readOnly: true,
        serializedName: "lastUpdated",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Cluster: msRest.CompositeMapper = {
  serializedName: "Cluster",
  type: {
    name: "Composite",
    className: "Cluster",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      cloudId: {
        readOnly: true,
        serializedName: "properties.cloudId",
        type: {
          name: "String"
        }
      },
      aadClientId: {
        required: true,
        serializedName: "properties.aadClientId",
        type: {
          name: "String"
        }
      },
      aadTenantId: {
        required: true,
        serializedName: "properties.aadTenantId",
        type: {
          name: "String"
        }
      },
      reportedProperties: {
        serializedName: "properties.reportedProperties",
        type: {
          name: "Composite",
          className: "ClusterReportedProperties"
        }
      },
      trialDaysRemaining: {
        readOnly: true,
        serializedName: "properties.trialDaysRemaining",
        type: {
          name: "Number"
        }
      },
      billingModel: {
        readOnly: true,
        serializedName: "properties.billingModel",
        type: {
          name: "String"
        }
      },
      registrationTimestamp: {
        readOnly: true,
        serializedName: "properties.registrationTimestamp",
        type: {
          name: "DateTime"
        }
      },
      lastSyncTimestamp: {
        readOnly: true,
        serializedName: "properties.lastSyncTimestamp",
        type: {
          name: "DateTime"
        }
      },
      lastBillingTimestamp: {
        readOnly: true,
        serializedName: "properties.lastBillingTimestamp",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ClusterUpdate: msRest.CompositeMapper = {
  serializedName: "ClusterUpdate",
  type: {
    name: "Composite",
    className: "ClusterUpdate",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "OperationDisplay",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDetail: msRest.CompositeMapper = {
  serializedName: "OperationDetail",
  type: {
    name: "Composite",
    className: "OperationDetail",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        type: {
          name: "Boolean"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const AvailableOperations: msRest.CompositeMapper = {
  serializedName: "AvailableOperations",
  type: {
    name: "Composite",
    className: "AvailableOperations",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationDetail"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const AzureEntityResource: msRest.CompositeMapper = {
  serializedName: "AzureEntityResource",
  type: {
    name: "Composite",
    className: "AzureEntityResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: msRest.CompositeMapper = {
  serializedName: "ErrorAdditionalInfo",
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      info: {
        readOnly: true,
        serializedName: "info",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const ErrorResponseError: msRest.CompositeMapper = {
  serializedName: "ErrorResponse_error",
  type: {
    name: "Composite",
    className: "ErrorResponseError",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        readOnly: true,
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        readOnly: true,
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorResponse"
            }
          }
        }
      },
      additionalInfo: {
        readOnly: true,
        serializedName: "additionalInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorResponseError"
        }
      }
    }
  }
};

export const ClusterList: msRest.CompositeMapper = {
  serializedName: "ClusterList",
  type: {
    name: "Composite",
    className: "ClusterList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Cluster"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
