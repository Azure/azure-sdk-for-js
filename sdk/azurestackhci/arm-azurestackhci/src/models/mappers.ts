/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const GalleryImageIdentifier: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImageIdentifier",
    modelProperties: {
      publisher: {
        serializedName: "publisher",
        required: true,
        type: {
          name: "String"
        }
      },
      offer: {
        serializedName: "offer",
        required: true,
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName: "sku",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GalleryImageVersion: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImageVersion",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      storageProfile: {
        serializedName: "properties.storageProfile",
        type: {
          name: "Composite",
          className: "GalleryImageVersionStorageProfile"
        }
      }
    }
  }
};

export const GalleryImageVersionStorageProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImageVersionStorageProfile",
    modelProperties: {
      osDiskImage: {
        serializedName: "osDiskImage",
        type: {
          name: "Composite",
          className: "GalleryOSDiskImage"
        }
      }
    }
  }
};

export const GalleryDiskImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryDiskImage",
    modelProperties: {
      sizeInMB: {
        serializedName: "sizeInMB",
        readOnly: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const GalleryImageStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImageStatus",
    modelProperties: {
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      },
      provisioningStatus: {
        serializedName: "provisioningStatus",
        type: {
          name: "Composite",
          className: "GalleryImageStatusProvisioningStatus"
        }
      },
      downloadStatus: {
        serializedName: "downloadStatus",
        type: {
          name: "Composite",
          className: "GalleryImageStatusDownloadStatus"
        }
      },
      progressPercentage: {
        serializedName: "progressPercentage",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const GalleryImageStatusProvisioningStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImageStatusProvisioningStatus",
    modelProperties: {
      operationId: {
        serializedName: "operationId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GalleryImageStatusDownloadStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImageStatusDownloadStatus",
    modelProperties: {
      downloadSizeInMB: {
        serializedName: "downloadSizeInMB",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ExtendedLocation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExtendedLocation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      }
    }
  }
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const GalleryImagesUpdateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImagesUpdateRequest",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const GalleryImagesListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImagesListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryImages"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogicalNetworkPropertiesDhcpOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogicalNetworkPropertiesDhcpOptions",
    modelProperties: {
      dnsServers: {
        serializedName: "dnsServers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Subnet: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Subnet",
    modelProperties: {
      name: {
        constraints: {
          Pattern: new RegExp(
            "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,78}[_a-zA-Z0-9]$"
          )
        },
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      addressPrefix: {
        serializedName: "properties.addressPrefix",
        type: {
          name: "String"
        }
      },
      addressPrefixes: {
        serializedName: "properties.addressPrefixes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      ipAllocationMethod: {
        serializedName: "properties.ipAllocationMethod",
        type: {
          name: "String"
        }
      },
      ipConfigurationReferences: {
        serializedName: "properties.ipConfigurationReferences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubnetPropertiesFormatIpConfigurationReferencesItem"
            }
          }
        }
      },
      routeTable: {
        serializedName: "properties.routeTable",
        type: {
          name: "Composite",
          className: "RouteTable"
        }
      },
      ipPools: {
        serializedName: "properties.ipPools",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IPPool"
            }
          }
        }
      },
      vlan: {
        serializedName: "properties.vlan",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const SubnetPropertiesFormatIpConfigurationReferencesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubnetPropertiesFormatIpConfigurationReferencesItem",
    modelProperties: {
      id: {
        serializedName: "ID",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RouteTable: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RouteTable",
    modelProperties: {
      etag: {
        serializedName: "etag",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      routes: {
        serializedName: "properties.routes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Route"
            }
          }
        }
      }
    }
  }
};

export const Route: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Route",
    modelProperties: {
      name: {
        constraints: {
          Pattern: new RegExp(
            "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,78}[_a-zA-Z0-9]$"
          )
        },
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      addressPrefix: {
        serializedName: "properties.addressPrefix",
        type: {
          name: "String"
        }
      },
      nextHopIpAddress: {
        serializedName: "properties.nextHopIpAddress",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IPPool: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IPPool",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      ipPoolType: {
        serializedName: "ipPoolType",
        type: {
          name: "Enum",
          allowedValues: ["vm", "vippool"]
        }
      },
      start: {
        serializedName: "start",
        type: {
          name: "String"
        }
      },
      end: {
        serializedName: "end",
        type: {
          name: "String"
        }
      },
      info: {
        serializedName: "info",
        type: {
          name: "Composite",
          className: "IPPoolInfo"
        }
      }
    }
  }
};

export const IPPoolInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IPPoolInfo",
    modelProperties: {
      used: {
        serializedName: "used",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      available: {
        serializedName: "available",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogicalNetworkStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogicalNetworkStatus",
    modelProperties: {
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      },
      provisioningStatus: {
        serializedName: "provisioningStatus",
        type: {
          name: "Composite",
          className: "LogicalNetworkStatusProvisioningStatus"
        }
      }
    }
  }
};

export const LogicalNetworkStatusProvisioningStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogicalNetworkStatusProvisioningStatus",
    modelProperties: {
      operationId: {
        serializedName: "operationId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogicalNetworksUpdateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogicalNetworksUpdateRequest",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const LogicalNetworksListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogicalNetworksListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LogicalNetworks"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MarketplaceGalleryImageStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MarketplaceGalleryImageStatus",
    modelProperties: {
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      },
      provisioningStatus: {
        serializedName: "provisioningStatus",
        type: {
          name: "Composite",
          className: "MarketplaceGalleryImageStatusProvisioningStatus"
        }
      },
      downloadStatus: {
        serializedName: "downloadStatus",
        type: {
          name: "Composite",
          className: "MarketplaceGalleryImageStatusDownloadStatus"
        }
      },
      progressPercentage: {
        serializedName: "progressPercentage",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const MarketplaceGalleryImageStatusProvisioningStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MarketplaceGalleryImageStatusProvisioningStatus",
    modelProperties: {
      operationId: {
        serializedName: "operationId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MarketplaceGalleryImageStatusDownloadStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MarketplaceGalleryImageStatusDownloadStatus",
    modelProperties: {
      downloadSizeInMB: {
        serializedName: "downloadSizeInMB",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const MarketplaceGalleryImagesUpdateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MarketplaceGalleryImagesUpdateRequest",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const MarketplaceGalleryImagesListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MarketplaceGalleryImagesListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MarketplaceGalleryImages"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IPConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IPConfiguration",
    modelProperties: {
      name: {
        constraints: {
          Pattern: new RegExp(
            "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,78}[_a-zA-Z0-9]$"
          )
        },
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "IPConfigurationProperties"
        }
      }
    }
  }
};

export const IPConfigurationProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IPConfigurationProperties",
    modelProperties: {
      gateway: {
        serializedName: "gateway",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      prefixLength: {
        serializedName: "prefixLength",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      privateIPAddress: {
        serializedName: "privateIPAddress",
        type: {
          name: "String"
        }
      },
      subnet: {
        serializedName: "subnet",
        type: {
          name: "Composite",
          className: "IPConfigurationPropertiesSubnet"
        }
      }
    }
  }
};

export const IPConfigurationPropertiesSubnet: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IPConfigurationPropertiesSubnet",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InterfaceDNSSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InterfaceDNSSettings",
    modelProperties: {
      dnsServers: {
        serializedName: "dnsServers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const NetworkInterfaceStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkInterfaceStatus",
    modelProperties: {
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      },
      provisioningStatus: {
        serializedName: "provisioningStatus",
        type: {
          name: "Composite",
          className: "NetworkInterfaceStatusProvisioningStatus"
        }
      }
    }
  }
};

export const NetworkInterfaceStatusProvisioningStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkInterfaceStatusProvisioningStatus",
    modelProperties: {
      operationId: {
        serializedName: "operationId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkInterfacesUpdateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkInterfacesUpdateRequest",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const NetworkInterfacesListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkInterfacesListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NetworkInterfaces"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageContainerStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageContainerStatus",
    modelProperties: {
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      },
      availableSizeMB: {
        serializedName: "availableSizeMB",
        type: {
          name: "Number"
        }
      },
      containerSizeMB: {
        serializedName: "containerSizeMB",
        type: {
          name: "Number"
        }
      },
      provisioningStatus: {
        serializedName: "provisioningStatus",
        type: {
          name: "Composite",
          className: "StorageContainerStatusProvisioningStatus"
        }
      }
    }
  }
};

export const StorageContainerStatusProvisioningStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageContainerStatusProvisioningStatus",
    modelProperties: {
      operationId: {
        serializedName: "operationId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageContainersUpdateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageContainersUpdateRequest",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const StorageContainersListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageContainersListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StorageContainers"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualHardDiskStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualHardDiskStatus",
    modelProperties: {
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      },
      provisioningStatus: {
        serializedName: "provisioningStatus",
        type: {
          name: "Composite",
          className: "VirtualHardDiskStatusProvisioningStatus"
        }
      }
    }
  }
};

export const VirtualHardDiskStatusProvisioningStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualHardDiskStatusProvisioningStatus",
    modelProperties: {
      operationId: {
        serializedName: "operationId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualHardDisksUpdateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualHardDisksUpdateRequest",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const VirtualHardDisksListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualHardDisksListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualHardDisks"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineInstancePropertiesHardwareProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstancePropertiesHardwareProfile",
    modelProperties: {
      vmSize: {
        serializedName: "vmSize",
        type: {
          name: "String"
        }
      },
      processors: {
        serializedName: "processors",
        type: {
          name: "Number"
        }
      },
      memoryMB: {
        serializedName: "memoryMB",
        type: {
          name: "Number"
        }
      },
      dynamicMemoryConfig: {
        serializedName: "dynamicMemoryConfig",
        type: {
          name: "Composite",
          className:
            "VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig"
        }
      }
    }
  }
};

export const VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig",
    modelProperties: {
      maximumMemoryMB: {
        serializedName: "maximumMemoryMB",
        type: {
          name: "Number"
        }
      },
      minimumMemoryMB: {
        serializedName: "minimumMemoryMB",
        type: {
          name: "Number"
        }
      },
      targetMemoryBuffer: {
        serializedName: "targetMemoryBuffer",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const VirtualMachineInstancePropertiesNetworkProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstancePropertiesNetworkProfile",
    modelProperties: {
      networkInterfaces: {
        serializedName: "networkInterfaces",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "VirtualMachineInstancePropertiesNetworkProfileNetworkInterfacesItem"
            }
          }
        }
      }
    }
  }
};

export const VirtualMachineInstancePropertiesNetworkProfileNetworkInterfacesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "VirtualMachineInstancePropertiesNetworkProfileNetworkInterfacesItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineInstancePropertiesOsProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstancePropertiesOsProfile",
    modelProperties: {
      adminPassword: {
        serializedName: "adminPassword",
        type: {
          name: "String"
        }
      },
      adminUsername: {
        serializedName: "adminUsername",
        type: {
          name: "String"
        }
      },
      computerName: {
        serializedName: "computerName",
        type: {
          name: "String"
        }
      },
      linuxConfiguration: {
        serializedName: "linuxConfiguration",
        type: {
          name: "Composite",
          className:
            "VirtualMachineInstancePropertiesOsProfileLinuxConfiguration"
        }
      },
      windowsConfiguration: {
        serializedName: "windowsConfiguration",
        type: {
          name: "Composite",
          className:
            "VirtualMachineInstancePropertiesOsProfileWindowsConfiguration"
        }
      }
    }
  }
};

export const VirtualMachineInstancePropertiesOsProfileLinuxConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstancePropertiesOsProfileLinuxConfiguration",
    modelProperties: {
      disablePasswordAuthentication: {
        serializedName: "disablePasswordAuthentication",
        type: {
          name: "Boolean"
        }
      },
      ssh: {
        serializedName: "ssh",
        type: {
          name: "Composite",
          className: "SshConfiguration"
        }
      },
      provisionVMAgent: {
        defaultValue: true,
        serializedName: "provisionVMAgent",
        type: {
          name: "Boolean"
        }
      },
      provisionVMConfigAgent: {
        defaultValue: true,
        serializedName: "provisionVMConfigAgent",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const SshConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SshConfiguration",
    modelProperties: {
      publicKeys: {
        serializedName: "publicKeys",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SshPublicKey"
            }
          }
        }
      }
    }
  }
};

export const SshPublicKey: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SshPublicKey",
    modelProperties: {
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      keyData: {
        serializedName: "keyData",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineInstancePropertiesOsProfileWindowsConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstancePropertiesOsProfileWindowsConfiguration",
    modelProperties: {
      enableAutomaticUpdates: {
        serializedName: "enableAutomaticUpdates",
        type: {
          name: "Boolean"
        }
      },
      ssh: {
        serializedName: "ssh",
        type: {
          name: "Composite",
          className: "SshConfiguration"
        }
      },
      timeZone: {
        serializedName: "timeZone",
        type: {
          name: "String"
        }
      },
      provisionVMAgent: {
        defaultValue: true,
        serializedName: "provisionVMAgent",
        type: {
          name: "Boolean"
        }
      },
      provisionVMConfigAgent: {
        defaultValue: true,
        serializedName: "provisionVMConfigAgent",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const VirtualMachineInstancePropertiesSecurityProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstancePropertiesSecurityProfile",
    modelProperties: {
      enableTPM: {
        defaultValue: false,
        serializedName: "enableTPM",
        type: {
          name: "Boolean"
        }
      },
      uefiSettings: {
        serializedName: "uefiSettings",
        type: {
          name: "Composite",
          className:
            "VirtualMachineInstancePropertiesSecurityProfileUefiSettings"
        }
      },
      securityType: {
        serializedName: "securityType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineInstancePropertiesSecurityProfileUefiSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstancePropertiesSecurityProfileUefiSettings",
    modelProperties: {
      secureBootEnabled: {
        defaultValue: false,
        serializedName: "secureBootEnabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const VirtualMachineInstancePropertiesStorageProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstancePropertiesStorageProfile",
    modelProperties: {
      dataDisks: {
        serializedName: "dataDisks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "VirtualMachineInstancePropertiesStorageProfileDataDisksItem"
            }
          }
        }
      },
      imageReference: {
        serializedName: "imageReference",
        type: {
          name: "Composite",
          className:
            "VirtualMachineInstancePropertiesStorageProfileImageReference"
        }
      },
      osDisk: {
        serializedName: "osDisk",
        type: {
          name: "Composite",
          className: "VirtualMachineInstancePropertiesStorageProfileOsDisk"
        }
      },
      vmConfigStoragePathId: {
        serializedName: "vmConfigStoragePathId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineInstancePropertiesStorageProfileDataDisksItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstancePropertiesStorageProfileDataDisksItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineInstancePropertiesStorageProfileImageReference: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstancePropertiesStorageProfileImageReference",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineInstancePropertiesStorageProfileOsDisk: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstancePropertiesStorageProfileOsDisk",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      osType: {
        serializedName: "osType",
        type: {
          name: "Enum",
          allowedValues: ["Windows", "Linux"]
        }
      }
    }
  }
};

export const HttpProxyConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HttpProxyConfiguration",
    modelProperties: {
      httpProxy: {
        serializedName: "httpProxy",
        type: {
          name: "String"
        }
      },
      httpsProxy: {
        serializedName: "httpsProxy",
        type: {
          name: "String"
        }
      },
      noProxy: {
        serializedName: "noProxy",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      trustedCa: {
        serializedName: "trustedCa",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineInstanceView: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstanceView",
    modelProperties: {
      vmAgent: {
        serializedName: "vmAgent",
        type: {
          name: "Composite",
          className: "VirtualMachineConfigAgentInstanceView"
        }
      }
    }
  }
};

export const VirtualMachineConfigAgentInstanceView: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineConfigAgentInstanceView",
    modelProperties: {
      vmConfigAgentVersion: {
        serializedName: "vmConfigAgentVersion",
        type: {
          name: "String"
        }
      },
      statuses: {
        serializedName: "statuses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InstanceViewStatus"
            }
          }
        }
      }
    }
  }
};

export const InstanceViewStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InstanceViewStatus",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      level: {
        serializedName: "level",
        type: {
          name: "String"
        }
      },
      displayStatus: {
        serializedName: "displayStatus",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      time: {
        serializedName: "time",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const VirtualMachineInstanceStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstanceStatus",
    modelProperties: {
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      },
      powerState: {
        serializedName: "powerState",
        type: {
          name: "String"
        }
      },
      provisioningStatus: {
        serializedName: "provisioningStatus",
        type: {
          name: "Composite",
          className: "VirtualMachineInstanceStatusProvisioningStatus"
        }
      }
    }
  }
};

export const VirtualMachineInstanceStatusProvisioningStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstanceStatusProvisioningStatus",
    modelProperties: {
      operationId: {
        serializedName: "operationId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GuestAgentInstallStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GuestAgentInstallStatus",
    modelProperties: {
      vmUuid: {
        serializedName: "vmUuid",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      lastStatusChange: {
        serializedName: "lastStatusChange",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      agentVersion: {
        serializedName: "agentVersion",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      errorDetails: {
        serializedName: "errorDetails",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      }
    }
  }
};

export const Identity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Identity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        defaultValue: "SystemAssigned",
        isConstant: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineInstanceUpdateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstanceUpdateRequest",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "VirtualMachineInstanceUpdateProperties"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "Identity"
        }
      }
    }
  }
};

export const VirtualMachineInstanceUpdateProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstanceUpdateProperties",
    modelProperties: {
      hardwareProfile: {
        serializedName: "hardwareProfile",
        type: {
          name: "Composite",
          className: "HardwareProfileUpdate"
        }
      },
      storageProfile: {
        serializedName: "storageProfile",
        type: {
          name: "Composite",
          className: "StorageProfileUpdate"
        }
      },
      networkProfile: {
        serializedName: "networkProfile",
        type: {
          name: "Composite",
          className: "NetworkProfileUpdate"
        }
      },
      osProfile: {
        serializedName: "osProfile",
        type: {
          name: "Composite",
          className: "OsProfileUpdate"
        }
      }
    }
  }
};

export const HardwareProfileUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HardwareProfileUpdate",
    modelProperties: {
      vmSize: {
        serializedName: "vmSize",
        type: {
          name: "String"
        }
      },
      processors: {
        serializedName: "processors",
        type: {
          name: "Number"
        }
      },
      memoryMB: {
        serializedName: "memoryMB",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const StorageProfileUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageProfileUpdate",
    modelProperties: {
      dataDisks: {
        serializedName: "dataDisks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StorageProfileUpdateDataDisksItem"
            }
          }
        }
      }
    }
  }
};

export const StorageProfileUpdateDataDisksItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageProfileUpdateDataDisksItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkProfileUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkProfileUpdate",
    modelProperties: {
      networkInterfaces: {
        serializedName: "networkInterfaces",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NetworkProfileUpdateNetworkInterfacesItem"
            }
          }
        }
      }
    }
  }
};

export const NetworkProfileUpdateNetworkInterfacesItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkProfileUpdateNetworkInterfacesItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OsProfileUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OsProfileUpdate",
    modelProperties: {
      computerName: {
        serializedName: "computerName",
        type: {
          name: "String"
        }
      },
      linuxConfiguration: {
        serializedName: "linuxConfiguration",
        type: {
          name: "Composite",
          className: "OsProfileUpdateLinuxConfiguration"
        }
      },
      windowsConfiguration: {
        serializedName: "windowsConfiguration",
        type: {
          name: "Composite",
          className: "OsProfileUpdateWindowsConfiguration"
        }
      }
    }
  }
};

export const OsProfileUpdateLinuxConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OsProfileUpdateLinuxConfiguration",
    modelProperties: {
      provisionVMAgent: {
        serializedName: "provisionVMAgent",
        type: {
          name: "Boolean"
        }
      },
      provisionVMConfigAgent: {
        serializedName: "provisionVMConfigAgent",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const OsProfileUpdateWindowsConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OsProfileUpdateWindowsConfiguration",
    modelProperties: {
      provisionVMAgent: {
        serializedName: "provisionVMAgent",
        type: {
          name: "Boolean"
        }
      },
      provisionVMConfigAgent: {
        serializedName: "provisionVMConfigAgent",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const VirtualMachineInstanceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstanceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachineInstance"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HybridIdentityMetadataList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HybridIdentityMetadataList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HybridIdentityMetadata"
            }
          }
        }
      }
    }
  }
};

export const GuestCredential: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GuestCredential",
    modelProperties: {
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GuestAgentList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GuestAgentList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GuestAgent"
            }
          }
        }
      }
    }
  }
};

export const GalleryOSDiskImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryOSDiskImage",
    modelProperties: {
      ...GalleryDiskImage.type.modelProperties
    }
  }
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const GalleryImages: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImages",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      extendedLocation: {
        serializedName: "extendedLocation",
        type: {
          name: "Composite",
          className: "ExtendedLocation"
        }
      },
      containerId: {
        serializedName: "properties.containerId",
        type: {
          name: "String"
        }
      },
      imagePath: {
        serializedName: "properties.imagePath",
        type: {
          name: "String"
        }
      },
      osType: {
        serializedName: "properties.osType",
        type: {
          name: "Enum",
          allowedValues: ["Windows", "Linux"]
        }
      },
      cloudInitDataSource: {
        serializedName: "properties.cloudInitDataSource",
        type: {
          name: "String"
        }
      },
      hyperVGeneration: {
        serializedName: "properties.hyperVGeneration",
        type: {
          name: "String"
        }
      },
      identifier: {
        serializedName: "properties.identifier",
        type: {
          name: "Composite",
          className: "GalleryImageIdentifier"
        }
      },
      version: {
        serializedName: "properties.version",
        type: {
          name: "Composite",
          className: "GalleryImageVersion"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "Composite",
          className: "GalleryImageStatus"
        }
      }
    }
  }
};

export const LogicalNetworks: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogicalNetworks",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      extendedLocation: {
        serializedName: "extendedLocation",
        type: {
          name: "Composite",
          className: "ExtendedLocation"
        }
      },
      dhcpOptions: {
        serializedName: "properties.dhcpOptions",
        type: {
          name: "Composite",
          className: "LogicalNetworkPropertiesDhcpOptions"
        }
      },
      subnets: {
        serializedName: "properties.subnets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Subnet"
            }
          }
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      vmSwitchName: {
        serializedName: "properties.vmSwitchName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "Composite",
          className: "LogicalNetworkStatus"
        }
      }
    }
  }
};

export const MarketplaceGalleryImages: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MarketplaceGalleryImages",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      extendedLocation: {
        serializedName: "extendedLocation",
        type: {
          name: "Composite",
          className: "ExtendedLocation"
        }
      },
      containerId: {
        serializedName: "properties.containerId",
        type: {
          name: "String"
        }
      },
      osType: {
        serializedName: "properties.osType",
        type: {
          name: "Enum",
          allowedValues: ["Windows", "Linux"]
        }
      },
      cloudInitDataSource: {
        serializedName: "properties.cloudInitDataSource",
        type: {
          name: "String"
        }
      },
      hyperVGeneration: {
        serializedName: "properties.hyperVGeneration",
        type: {
          name: "String"
        }
      },
      identifier: {
        serializedName: "properties.identifier",
        type: {
          name: "Composite",
          className: "GalleryImageIdentifier"
        }
      },
      version: {
        serializedName: "properties.version",
        type: {
          name: "Composite",
          className: "GalleryImageVersion"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "Composite",
          className: "MarketplaceGalleryImageStatus"
        }
      }
    }
  }
};

export const NetworkInterfaces: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkInterfaces",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      extendedLocation: {
        serializedName: "extendedLocation",
        type: {
          name: "Composite",
          className: "ExtendedLocation"
        }
      },
      ipConfigurations: {
        serializedName: "properties.ipConfigurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IPConfiguration"
            }
          }
        }
      },
      macAddress: {
        serializedName: "properties.macAddress",
        type: {
          name: "String"
        }
      },
      dnsSettings: {
        serializedName: "properties.dnsSettings",
        type: {
          name: "Composite",
          className: "InterfaceDNSSettings"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "Composite",
          className: "NetworkInterfaceStatus"
        }
      }
    }
  }
};

export const StorageContainers: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageContainers",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      extendedLocation: {
        serializedName: "extendedLocation",
        type: {
          name: "Composite",
          className: "ExtendedLocation"
        }
      },
      path: {
        serializedName: "properties.path",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "Composite",
          className: "StorageContainerStatus"
        }
      }
    }
  }
};

export const VirtualHardDisks: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualHardDisks",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      extendedLocation: {
        serializedName: "extendedLocation",
        type: {
          name: "Composite",
          className: "ExtendedLocation"
        }
      },
      blockSizeBytes: {
        serializedName: "properties.blockSizeBytes",
        type: {
          name: "Number"
        }
      },
      diskSizeGB: {
        serializedName: "properties.diskSizeGB",
        type: {
          name: "Number"
        }
      },
      dynamic: {
        serializedName: "properties.dynamic",
        type: {
          name: "Boolean"
        }
      },
      logicalSectorBytes: {
        serializedName: "properties.logicalSectorBytes",
        type: {
          name: "Number"
        }
      },
      physicalSectorBytes: {
        serializedName: "properties.physicalSectorBytes",
        type: {
          name: "Number"
        }
      },
      hyperVGeneration: {
        serializedName: "properties.hyperVGeneration",
        type: {
          name: "String"
        }
      },
      diskFileFormat: {
        serializedName: "properties.diskFileFormat",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      containerId: {
        serializedName: "properties.containerId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "Composite",
          className: "VirtualHardDiskStatus"
        }
      }
    }
  }
};

export const VirtualMachineInstance: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstance",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      extendedLocation: {
        serializedName: "extendedLocation",
        type: {
          name: "Composite",
          className: "ExtendedLocation"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "Identity"
        }
      },
      hardwareProfile: {
        serializedName: "properties.hardwareProfile",
        type: {
          name: "Composite",
          className: "VirtualMachineInstancePropertiesHardwareProfile"
        }
      },
      networkProfile: {
        serializedName: "properties.networkProfile",
        type: {
          name: "Composite",
          className: "VirtualMachineInstancePropertiesNetworkProfile"
        }
      },
      osProfile: {
        serializedName: "properties.osProfile",
        type: {
          name: "Composite",
          className: "VirtualMachineInstancePropertiesOsProfile"
        }
      },
      securityProfile: {
        serializedName: "properties.securityProfile",
        type: {
          name: "Composite",
          className: "VirtualMachineInstancePropertiesSecurityProfile"
        }
      },
      storageProfile: {
        serializedName: "properties.storageProfile",
        type: {
          name: "Composite",
          className: "VirtualMachineInstancePropertiesStorageProfile"
        }
      },
      httpProxyConfig: {
        serializedName: "properties.httpProxyConfig",
        type: {
          name: "Composite",
          className: "HttpProxyConfiguration"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      instanceView: {
        serializedName: "properties.instanceView",
        type: {
          name: "Composite",
          className: "VirtualMachineInstanceView"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "Composite",
          className: "VirtualMachineInstanceStatus"
        }
      },
      guestAgentInstallStatus: {
        serializedName: "properties.guestAgentInstallStatus",
        type: {
          name: "Composite",
          className: "GuestAgentInstallStatus"
        }
      },
      vmId: {
        serializedName: "properties.vmId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resourceUid: {
        serializedName: "properties.resourceUid",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HybridIdentityMetadata: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HybridIdentityMetadata",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      resourceUid: {
        serializedName: "properties.resourceUid",
        type: {
          name: "String"
        }
      },
      publicKey: {
        serializedName: "properties.publicKey",
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "properties.identity",
        type: {
          name: "Composite",
          className: "Identity"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GuestAgent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GuestAgent",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      credentials: {
        serializedName: "properties.credentials",
        type: {
          name: "Composite",
          className: "GuestCredential"
        }
      },
      provisioningAction: {
        serializedName: "properties.provisioningAction",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GalleryImagesDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImagesDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GalleryImagesUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImagesUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogicalNetworksDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogicalNetworksDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogicalNetworksUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogicalNetworksUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MarketplaceGalleryImagesDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MarketplaceGalleryImagesDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MarketplaceGalleryImagesUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MarketplaceGalleryImagesUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkInterfacesDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkInterfacesDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkInterfacesUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkInterfacesUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageContainersDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageContainersDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageContainersUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageContainersUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualHardDisksDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualHardDisksDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualHardDisksUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualHardDisksUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineInstancesDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstancesDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineInstancesUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstancesUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineInstancesStartHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstancesStartHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineInstancesStopHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstancesStopHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineInstancesRestartHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstancesRestartHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GuestAgentDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GuestAgentDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};
