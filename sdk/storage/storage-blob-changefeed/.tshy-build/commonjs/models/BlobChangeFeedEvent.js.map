{"version":3,"file":"BlobChangeFeedEvent.js","sourceRoot":"","sources":["../../../src/models/BlobChangeFeedEvent.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// https://msazure.visualstudio.com/One/_git/Storage-XStore?path=%2Fsrc%2FXTable%2FNotifications%2Flib%2FBlobChangeEventv4.json&version=GBmaster\n\n/**\n * Change feed event record types.\n */\nexport type BlobChangeFeedEventType =\n  | \"UnspecifiedEventType\"\n  | \"BlobCreated\"\n  | \"BlobDeleted\"\n  | \"BlobPropertiesUpdated\"\n  | \"BlobSnapshotCreated\"\n  | \"Control\"\n  | \"BlobTierChanged\"\n  | \"BlobAsyncOperationInitiated\"\n  | \"BlobMetadataUpdated\"\n  | \"RestorePointMarkerCreated\";\n\n/**\n * Change feed event record. Contains response data for the {@link BlobChangeFeedClient.listChanges} operation.\n * @see https://learn.microsoft.com/en-us/azure/event-grid/event-schema-blob-storage?toc=/azure/storage/blobs/toc.json#event-properties\n */\nexport interface BlobChangeFeedEvent {\n  /**\n   * Full resource path to the event source. This field is not writeable. Event Grid provides this value.\n   */\n  topic: string;\n\n  /**\n   * Publisher-defined path to the event subject.\n   */\n  subject: string;\n\n  /**\n   * One of the registered event types for this event source.\n   */\n  eventType: BlobChangeFeedEventType;\n\n  /**\n   * The time the event is generated based on the provider's UTC time.\n   */\n  eventTime: Date;\n\n  /**\n   * Unique identifier for the event.\n   */\n  id: string; // GUID\n\n  /**\n   * Blob storage event data.\n   */\n  data: BlobChangeFeedEventData;\n\n  /**\n   * The schema version of the data object. The publisher defines the schema version.\n   */\n  dataVersion?: string;\n\n  /**\n   * The schema version of the data object. The publisher defines the schema version.\n   */\n  schemaVersion?: number;\n\n  /**\n   * The schema version of the event metadata. Event Grid defines the schema of the top-level properties. Event Grid provides this value.\n   */\n  metadataVersion: string;\n}\n\n/**\n * The type of blob.\n */\nexport type BlobType = \"BlockBlob\" | \"AppendBlob\" | \"PageBlob\";\n\n/**\n * The AccessTier.\n */\nexport type AccessTier =\n  | \"P4\"\n  | \"P6\"\n  | \"P10\"\n  | \"P15\"\n  | \"P20\"\n  | \"P30\"\n  | \"P40\"\n  | \"P50\"\n  | \"P60\"\n  | \"P70\"\n  | \"P80\"\n  | \"Hot\"\n  | \"Cool\"\n  | \"Archive\";\n\n/**\n * A blob property that was updated.\n */\nexport interface BlobPropertyChange {\n  /**\n   * The name of the property that was updated.\n   */\n  propertyName: string;\n  /**\n   * The previous value of the property.\n   */\n  oldValue: string;\n  /**\n   * The new value of the property.\n   */\n  newValue: string;\n}\n/**\n * Blob properties that were updated during an event.\n */\nexport type UpdatedBlobProperties = Record<string, BlobPropertyChange>;\n/**\n * Previous info for Change Feed Event.\n */\nexport interface ChangeFeedEventPreviousInfo {\n  /**\n   * Soft delete snapshot.\n   */\n  softDeleteSnapshot?: string;\n  /**\n   * If the blob was soft deleted.\n   */\n  isBlobSoftDeleted: boolean;\n  /**\n   * Blob version.\n   */\n  newBlobVersion?: string;\n  /**\n   * Last version.\n   */\n  oldBlobVersion?: string;\n  /**\n   * Previous Access Tier\n   */\n  previousTier?: AccessTier;\n}\n\n/**\n * ChangeFeedEvent AsyncOperationInfo\n */\nexport interface BlobOperationResult {\n  /**\n   * Destination access tier.\n   */\n  destinationAccessTier?: AccessTier;\n  /**\n   * If the operation was async.\n   */\n  isAsync: boolean;\n  /**\n   * Copy Id.\n   */\n  copyId?: string;\n}\n\n/**\n * Blob tags that were updated as part of the change feed event.\n */\nexport interface BlobTagsChange {\n  /**\n   * Previous Tags.\n   */\n  oldTags: Record<string, string>;\n  /**\n   * New Tags.\n   */\n  newTags: Record<string, string>;\n}\n\n/**\n * Change feed Blob storage event data.\n */\nexport interface BlobChangeFeedEventData {\n  /**\n   * The operation that triggered the event.\n   */\n  api: string;\n\n  /**\n   * A client-provided request id for the storage API operation. This id can be used to\n   * correlate to Azure Storage diagnostic logs using the \"client-request-id\" field in the logs,\n   * and can be provided in client requests using the \"x-ms-client-request-id\" header.\n   */\n  clientRequestId: string; // GUID\n\n  /**\n   * Service-generated request id for the storage API operation. Can be used to correlate to Azure Storage\n   * diagnostic logs using the \"request-id-header\" field in the logs and is returned from initiating API call\n   * in the 'x-ms-request-id' header.\n   */\n  requestId: string; // GUID\n\n  /**\n   * The value that you can use to perform operations conditionally.\n   */\n  etag: string;\n\n  /**\n   * The content type specified for the blob.\n   */\n  contentType: string;\n\n  /**\n   * The size of the blob in bytes.\n   */\n  contentLength: number;\n\n  /**\n   * The offset in bytes of a write operation taken at the point where the event-triggering application completed\n   * writing to the file.\n   * Appears only for events triggered on blob storage accounts that have a hierarchical namespace.\n   */\n  contentOffset?: number;\n\n  /**\n   * The type of blob.\n   */\n  blobType: BlobType;\n\n  /**\n   * The path to the blob. If the client uses a Blob REST API, then the url has this structure:\n   * <storage-account-name>.blob.core.windows.net/<container-name>/<file-name>.\n   */\n  url: string;\n\n  /**\n   * The url of the file that will exist after the operation completes. For example, if a file is renamed,\n   * the destinationUrl property contains the url of the new file name.\n   * Appears only for events triggered on blob storage accounts that have a hierarchical namespace.\n   */\n  destinationUrl?: string;\n\n  /**\n   * The url of the file that exists prior to the operation. For example, if a file is renamed, the sourceUrl\n   * contains the url of the original file name prior to the rename operation.\n   * Appears only for events triggered on blob storage accounts that have a hierarchical namespace.\n   */\n  sourceUrl?: string;\n\n  /**\n   * True to perform the operation on all child directories; otherwise False.\n   * Appears only for events triggered on blob storage accounts that have a hierarchical namespace.\n   */\n  isRecursive?: boolean;\n\n  /**\n   * An opaque string value representing the logical sequence of events for any particular blob name.\n   * Users can use standard string comparison to understand the relative sequence of two events on the same blob name.\n   */\n  sequencer: string;\n\n  /**\n   * Previous info for the blob.\n   */\n  previousInfo?: ChangeFeedEventPreviousInfo;\n\n  /**\n   * Blob properties that were updated during this event.\n   */\n  updatedBlobProperties?: UpdatedBlobProperties;\n\n  /**\n   * Blob tags that were updated during this event.\n   */\n  updatedBlobTags?: BlobTagsChange;\n\n  /**\n   * The Snapshot associated with the event.\n   */\n  snapshot?: string;\n\n  /**\n   * Version of the blob.\n   */\n  blobVersion?: string;\n\n  /**\n   * Version of the container the blob is in.\n   */\n  containerVersion?: string;\n\n  /**\n   * Access Tier of the blob.\n   */\n  blobAccessTier?: AccessTier;\n  /**\n   * AsyncOperationInfo\n   */\n  longRunningOperationInfo?: BlobOperationResult;\n}\n"]}