{"version":3,"file":"utils.common.js","sourceRoot":"","sources":["../../../src/utils/utils.common.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\nimport type { ContainerClient, CommonOptions } from \"@azure/storage-blob\";\nimport { CHANGE_FEED_SEGMENT_PREFIX, CHANGE_FEED_INITIALIZATION_SEGMENT } from \"./constants.js\";\nimport { tracingClient } from \"./tracing.js\";\nimport type { BlobChangeFeedEvent, UpdatedBlobProperties } from \"../models/BlobChangeFeedEvent.js\";\n\nconst millisecondsInAnHour = 60 * 60 * 1000;\nexport function ceilToNearestHour(date: Date | undefined): Date | undefined {\n  if (date === undefined) {\n    return undefined;\n  }\n  return new Date(Math.ceil(date.getTime() / millisecondsInAnHour) * millisecondsInAnHour);\n}\n\nexport function floorToNearestHour(date: Date | undefined): Date | undefined {\n  if (date === undefined) {\n    return undefined;\n  }\n  return new Date(Math.floor(date.getTime() / millisecondsInAnHour) * millisecondsInAnHour);\n}\n\n/**\n * Get host from an URL string.\n *\n * @param url - Source URL string\n */\nexport function getHost(url: string): string | undefined {\n  const urlParsed = new URL(url);\n  return urlParsed.hostname;\n}\n\n/**\n * Options to configure {@link getYearsPaths} operation.\n */\nexport interface GetYearsPathsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\nexport async function getYearsPaths(\n  containerClient: ContainerClient,\n  options: GetYearsPathsOptions = {},\n): Promise<number[]> {\n  return tracingClient.withSpan(\"getYearsPaths\", options, async (updatedOptions) => {\n    const years: number[] = [];\n    for await (const item of containerClient.listBlobsByHierarchy(\"/\", {\n      abortSignal: options.abortSignal,\n      tracingOptions: updatedOptions.tracingOptions,\n      prefix: CHANGE_FEED_SEGMENT_PREFIX,\n    })) {\n      if (item.kind === \"prefix\" && !item.name.includes(CHANGE_FEED_INITIALIZATION_SEGMENT)) {\n        const yearStr = item.name.slice(CHANGE_FEED_SEGMENT_PREFIX.length, -1);\n        years.push(parseInt(yearStr));\n      }\n    }\n    return years.sort((a, b) => a - b);\n  });\n}\n\n/**\n * Options to configure {@link getSegmentsInYear} operation.\n */\nexport interface GetSegmentsInYearOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\nexport async function getSegmentsInYear(\n  containerClient: ContainerClient,\n  year: number,\n  startTime?: Date,\n  endTime?: Date,\n  options: GetSegmentsInYearOptions = {},\n): Promise<string[]> {\n  return tracingClient.withSpan(\"getSegmentsInYear\", options, async (updatedOptions) => {\n    const segments: string[] = [];\n    const yearBeginTime = new Date(Date.UTC(year, 0));\n    if (endTime && yearBeginTime >= endTime) {\n      return segments;\n    }\n\n    const prefix = `${CHANGE_FEED_SEGMENT_PREFIX}${year}/`;\n    for await (const item of containerClient.listBlobsFlat({\n      prefix,\n      abortSignal: options.abortSignal,\n      tracingOptions: updatedOptions.tracingOptions,\n    })) {\n      const segmentTime = parseDateFromSegmentPath(item.name);\n      if ((startTime && segmentTime < startTime) || (endTime && segmentTime >= endTime)) {\n        continue;\n      }\n      segments.push(item.name);\n    }\n    return segments;\n  });\n}\n\nexport function parseDateFromSegmentPath(segmentPath: string): Date {\n  const splitPath = segmentPath.split(\"/\");\n  if (splitPath.length < 3) {\n    throw new Error(`${segmentPath} is not a valid segment path.`);\n  }\n\n  const segmentTime = new Date(0);\n  segmentTime.setUTCFullYear(parseInt(splitPath[2]));\n\n  if (splitPath.length >= 4) {\n    segmentTime.setUTCMonth(parseInt(splitPath[3]) - 1);\n  }\n  if (splitPath.length >= 5) {\n    segmentTime.setUTCDate(parseInt(splitPath[4]));\n  }\n  if (splitPath.length >= 6) {\n    segmentTime.setUTCHours(parseInt(splitPath[5]) / 100);\n  }\n  return segmentTime;\n}\n\nexport function minDate(dateA: Date, dateB?: Date): Date {\n  if (dateB && dateB < dateA) {\n    return dateB;\n  }\n  return dateA;\n}\n\nexport function rawEventToBlobChangeFeedEvent(rawEvent: Record<string, any>): BlobChangeFeedEvent {\n  if (rawEvent.eventTime) {\n    rawEvent.eventTime = new Date(rawEvent.eventTime);\n  }\n  if (rawEvent.eTag) {\n    rawEvent.etag = rawEvent.eTag;\n    delete rawEvent.eTag;\n  }\n  if (rawEvent.data) {\n    if (rawEvent.data.recursive !== undefined) {\n      rawEvent.data.isRecursive = rawEvent.data.recursive;\n      delete rawEvent.data.recursive;\n    }\n    if (rawEvent.data.previousInfo) {\n      const previousInfo = rawEvent.data.previousInfo;\n\n      if (previousInfo.SoftDeleteSnapshot) {\n        previousInfo.softDeleteSnapshot = previousInfo.SoftDeleteSnapshot;\n        delete previousInfo.SoftDeleteSnapshot;\n      }\n      if (previousInfo.WasBlobSoftDeleted) {\n        previousInfo.isBlobSoftDeleted = previousInfo.WasBlobSoftDeleted === \"true\";\n        delete previousInfo.WasBlobSoftDeleted;\n      }\n      if (previousInfo.BlobVersion) {\n        previousInfo.newBlobVersion = previousInfo.BlobVersion;\n        delete previousInfo.BlobVersion;\n      }\n      if (previousInfo.LastVersion) {\n        previousInfo.oldBlobVersion = previousInfo.LastVersion;\n        delete previousInfo.LastVersion;\n      }\n      if (previousInfo.PreviousTier) {\n        previousInfo.previousTier = previousInfo.PreviousTier;\n        delete previousInfo.PreviousTier;\n      }\n\n      rawEvent.data.previousInfo = previousInfo;\n    }\n\n    if (rawEvent.data.blobPropertiesUpdated) {\n      const updatedBlobProperties: UpdatedBlobProperties = {};\n      Object.entries(rawEvent.data.blobPropertiesUpdated).map((item) => {\n        const blobPropertyChange = {\n          propertyName: item[0],\n          oldValue: (item[1] as any).previous as string,\n          newValue: (item[1] as any).current as string,\n        };\n        updatedBlobProperties[item[0]] = blobPropertyChange;\n      });\n      rawEvent.data.updatedBlobProperties = updatedBlobProperties;\n      delete rawEvent.data.blobPropertiesUpdated;\n    }\n\n    if (rawEvent.data.asyncOperationInfo) {\n      const longRunningOperationInfo = rawEvent.data.asyncOperationInfo;\n      if (longRunningOperationInfo.DestinationTier) {\n        longRunningOperationInfo.destinationAccessTier = longRunningOperationInfo.DestinationTier;\n        delete longRunningOperationInfo.DestinationTier;\n      }\n      if (\"WasAsyncOperation\" in longRunningOperationInfo) {\n        longRunningOperationInfo.isAsync = longRunningOperationInfo.WasAsyncOperation === \"true\";\n        delete longRunningOperationInfo.WasAsyncOperation;\n      }\n      if (longRunningOperationInfo.CopyId) {\n        longRunningOperationInfo.copyId = longRunningOperationInfo.CopyId;\n        delete longRunningOperationInfo.CopyId;\n      }\n      rawEvent.data.longRunningOperationInfo = longRunningOperationInfo;\n      delete rawEvent.data.asyncOperationInfo;\n    }\n\n    if (rawEvent.data.blobTagsUpdated) {\n      rawEvent.data.updatedBlobTags = {\n        newTags: rawEvent.data.blobTagsUpdated.current,\n        oldTags: rawEvent.data.blobTagsUpdated.previous,\n      };\n\n      delete rawEvent.data.blobTagsUpdated;\n    }\n\n    if (rawEvent.data.blobTier) {\n      rawEvent.data.blobAccessTier = rawEvent.data.blobTier;\n      delete rawEvent.data.blobTier;\n    }\n  }\n\n  return rawEvent as BlobChangeFeedEvent;\n}\n"]}