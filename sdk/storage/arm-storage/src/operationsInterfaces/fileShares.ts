/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  FileShareItem,
  FileSharesListOptionalParams,
  FileShare,
  FileSharesCreateOptionalParams,
  FileSharesCreateResponse,
  FileSharesUpdateOptionalParams,
  FileSharesUpdateResponse,
  FileSharesGetOptionalParams,
  FileSharesGetResponse,
  FileSharesDeleteOptionalParams,
  DeletedShare,
  FileSharesRestoreOptionalParams,
  FileSharesLeaseOptionalParams,
  FileSharesLeaseResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a FileShares. */
export interface FileShares {
  /**
   * Lists all shares.
   * @param resourceGroupName The name of the resource group within the user's subscription. The name is
   *                          case insensitive.
   * @param accountName The name of the storage account within the specified resource group. Storage
   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters
   *                    only.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    accountName: string,
    options?: FileSharesListOptionalParams
  ): PagedAsyncIterableIterator<FileShareItem>;
  /**
   * Creates a new share under the specified account as described by request body. The share resource
   * includes metadata and properties for that share. It does not include a list of the files contained
   * by the share.
   * @param resourceGroupName The name of the resource group within the user's subscription. The name is
   *                          case insensitive.
   * @param accountName The name of the storage account within the specified resource group. Storage
   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters
   *                    only.
   * @param shareName The name of the file share within the specified storage account. File share names
   *                  must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.
   *                  Every dash (-) character must be immediately preceded and followed by a letter or number.
   * @param fileShare Properties of the file share to create.
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    accountName: string,
    shareName: string,
    fileShare: FileShare,
    options?: FileSharesCreateOptionalParams
  ): Promise<FileSharesCreateResponse>;
  /**
   * Updates share properties as specified in request body. Properties not mentioned in the request will
   * not be changed. Update fails if the specified share does not already exist.
   * @param resourceGroupName The name of the resource group within the user's subscription. The name is
   *                          case insensitive.
   * @param accountName The name of the storage account within the specified resource group. Storage
   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters
   *                    only.
   * @param shareName The name of the file share within the specified storage account. File share names
   *                  must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.
   *                  Every dash (-) character must be immediately preceded and followed by a letter or number.
   * @param fileShare Properties to update for the file share.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    accountName: string,
    shareName: string,
    fileShare: FileShare,
    options?: FileSharesUpdateOptionalParams
  ): Promise<FileSharesUpdateResponse>;
  /**
   * Gets properties of a specified share.
   * @param resourceGroupName The name of the resource group within the user's subscription. The name is
   *                          case insensitive.
   * @param accountName The name of the storage account within the specified resource group. Storage
   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters
   *                    only.
   * @param shareName The name of the file share within the specified storage account. File share names
   *                  must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.
   *                  Every dash (-) character must be immediately preceded and followed by a letter or number.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    shareName: string,
    options?: FileSharesGetOptionalParams
  ): Promise<FileSharesGetResponse>;
  /**
   * Deletes specified share under its account.
   * @param resourceGroupName The name of the resource group within the user's subscription. The name is
   *                          case insensitive.
   * @param accountName The name of the storage account within the specified resource group. Storage
   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters
   *                    only.
   * @param shareName The name of the file share within the specified storage account. File share names
   *                  must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.
   *                  Every dash (-) character must be immediately preceded and followed by a letter or number.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    accountName: string,
    shareName: string,
    options?: FileSharesDeleteOptionalParams
  ): Promise<void>;
  /**
   * Restore a file share within a valid retention days if share soft delete is enabled
   * @param resourceGroupName The name of the resource group within the user's subscription. The name is
   *                          case insensitive.
   * @param accountName The name of the storage account within the specified resource group. Storage
   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters
   *                    only.
   * @param shareName The name of the file share within the specified storage account. File share names
   *                  must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.
   *                  Every dash (-) character must be immediately preceded and followed by a letter or number.
   * @param deletedShare The deleted share to be restored.
   * @param options The options parameters.
   */
  restore(
    resourceGroupName: string,
    accountName: string,
    shareName: string,
    deletedShare: DeletedShare,
    options?: FileSharesRestoreOptionalParams
  ): Promise<void>;
  /**
   * The Lease Share operation establishes and manages a lock on a share for delete operations. The lock
   * duration can be 15 to 60 seconds, or can be infinite.
   * @param resourceGroupName The name of the resource group within the user's subscription. The name is
   *                          case insensitive.
   * @param accountName The name of the storage account within the specified resource group. Storage
   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters
   *                    only.
   * @param shareName The name of the file share within the specified storage account. File share names
   *                  must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.
   *                  Every dash (-) character must be immediately preceded and followed by a letter or number.
   * @param options The options parameters.
   */
  lease(
    resourceGroupName: string,
    accountName: string,
    shareName: string,
    options?: FileSharesLeaseOptionalParams
  ): Promise<FileSharesLeaseResponse>;
}
