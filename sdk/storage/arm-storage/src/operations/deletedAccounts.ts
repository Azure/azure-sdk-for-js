/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/deletedAccountsMappers";
import * as Parameters from "../models/parameters";
import { StorageManagementClientContext } from "../storageManagementClientContext";

/** Class representing a DeletedAccounts. */
export class DeletedAccounts {
  private readonly client: StorageManagementClientContext;

  /**
   * Create a DeletedAccounts.
   * @param {StorageManagementClientContext} client Reference to the service client.
   */
  constructor(client: StorageManagementClientContext) {
    this.client = client;
  }

  /**
   * Lists deleted accounts under the subscription.
   * @param [options] The optional parameters
   * @returns Promise<Models.DeletedAccountsListResponse>
   */
  list(options?: msRest.RequestOptionsBase): Promise<Models.DeletedAccountsListResponse>;
  /**
   * @param callback The callback
   */
  list(callback: msRest.ServiceCallback<Models.DeletedAccountListResult>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeletedAccountListResult>): void;
  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeletedAccountListResult>, callback?: msRest.ServiceCallback<Models.DeletedAccountListResult>): Promise<Models.DeletedAccountsListResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listOperationSpec,
      callback) as Promise<Models.DeletedAccountsListResponse>;
  }

  /**
   * Get properties of specified deleted account resource.
   * @param deletedAccountName Name of the deleted storage account.
   * @param location The location of the deleted storage account.
   * @param [options] The optional parameters
   * @returns Promise<Models.DeletedAccountsGetResponse>
   */
  get(deletedAccountName: string, location: string, options?: msRest.RequestOptionsBase): Promise<Models.DeletedAccountsGetResponse>;
  /**
   * @param deletedAccountName Name of the deleted storage account.
   * @param location The location of the deleted storage account.
   * @param callback The callback
   */
  get(deletedAccountName: string, location: string, callback: msRest.ServiceCallback<Models.DeletedAccount>): void;
  /**
   * @param deletedAccountName Name of the deleted storage account.
   * @param location The location of the deleted storage account.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(deletedAccountName: string, location: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeletedAccount>): void;
  get(deletedAccountName: string, location: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeletedAccount>, callback?: msRest.ServiceCallback<Models.DeletedAccount>): Promise<Models.DeletedAccountsGetResponse> {
    return this.client.sendOperationRequest(
      {
        deletedAccountName,
        location,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.DeletedAccountsGetResponse>;
  }

  /**
   * Lists deleted accounts under the subscription.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.DeletedAccountsListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DeletedAccountsListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DeletedAccountListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeletedAccountListResult>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeletedAccountListResult>, callback?: msRest.ServiceCallback<Models.DeletedAccountListResult>): Promise<Models.DeletedAccountsListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.DeletedAccountsListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.Storage/deletedAccounts",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DeletedAccountListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/deletedAccounts/{deletedAccountName}",
  urlParameters: [
    Parameters.deletedAccountName,
    Parameters.location,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DeletedAccount
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DeletedAccountListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
