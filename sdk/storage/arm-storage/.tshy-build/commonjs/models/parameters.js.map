{"version":3,"file":"parameters.js","sourceRoot":"","sources":["../../../src/models/parameters.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter,\n} from \"@azure/core-client\";\nimport {\n  BlobServiceProperties as BlobServicePropertiesMapper,\n  BlobContainer as BlobContainerMapper,\n  LegalHold as LegalHoldMapper,\n  ImmutabilityPolicy as ImmutabilityPolicyMapper,\n  LeaseContainerRequest as LeaseContainerRequestMapper,\n  FileServiceProperties as FileServicePropertiesMapper,\n  FileShare as FileShareMapper,\n  DeletedShare as DeletedShareMapper,\n  LeaseShareRequest as LeaseShareRequestMapper,\n  QueueServiceProperties as QueueServicePropertiesMapper,\n  StorageQueue as StorageQueueMapper,\n  StorageAccountCheckNameAvailabilityParameters as StorageAccountCheckNameAvailabilityParametersMapper,\n  StorageAccountCreateParameters as StorageAccountCreateParametersMapper,\n  StorageAccountUpdateParameters as StorageAccountUpdateParametersMapper,\n  StorageAccountRegenerateKeyParameters as StorageAccountRegenerateKeyParametersMapper,\n  AccountSasParameters as AccountSasParametersMapper,\n  ServiceSasParameters as ServiceSasParametersMapper,\n  StorageAccountMigration as StorageAccountMigrationMapper,\n  BlobRestoreParameters as BlobRestoreParametersMapper,\n  ManagementPolicy as ManagementPolicyMapper,\n  BlobInventoryPolicy as BlobInventoryPolicyMapper,\n  PrivateEndpointConnection as PrivateEndpointConnectionMapper,\n  ObjectReplicationPolicy as ObjectReplicationPolicyMapper,\n  LocalUser as LocalUserMapper,\n  EncryptionScope as EncryptionScopeMapper,\n  TableServiceProperties as TableServicePropertiesMapper,\n  Table as TableMapper,\n  StorageTaskAssignment as StorageTaskAssignmentMapper,\n  StorageTaskAssignmentUpdateParameters as StorageTaskAssignmentUpdateParametersMapper,\n} from \"../models/mappers.js\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    constraints: {\n      MaxLength: 90,\n      MinLength: 1,\n    },\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const accountName: OperationURLParameter = {\n  parameterPath: \"accountName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-z0-9]+$\"),\n      MaxLength: 24,\n      MinLength: 3,\n    },\n    serializedName: \"accountName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2024-01-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    constraints: {\n      MinLength: 1,\n    },\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: BlobServicePropertiesMapper,\n};\n\nexport const blobServicesName: OperationURLParameter = {\n  parameterPath: \"blobServicesName\",\n  mapper: {\n    defaultValue: \"default\",\n    isConstant: true,\n    serializedName: \"BlobServicesName\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const maxpagesize: OperationQueryParameter = {\n  parameterPath: [\"options\", \"maxpagesize\"],\n  mapper: {\n    serializedName: \"$maxpagesize\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const filter: OperationQueryParameter = {\n  parameterPath: [\"options\", \"filter\"],\n  mapper: {\n    serializedName: \"$filter\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const include: OperationQueryParameter = {\n  parameterPath: [\"options\", \"include\"],\n  mapper: {\n    serializedName: \"$include\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobContainer: OperationParameter = {\n  parameterPath: \"blobContainer\",\n  mapper: BlobContainerMapper,\n};\n\nexport const containerName: OperationURLParameter = {\n  parameterPath: \"containerName\",\n  mapper: {\n    constraints: {\n      MaxLength: 63,\n      MinLength: 3,\n    },\n    serializedName: \"containerName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const legalHold: OperationParameter = {\n  parameterPath: \"legalHold\",\n  mapper: LegalHoldMapper,\n};\n\nexport const parameters1: OperationParameter = {\n  parameterPath: [\"options\", \"parameters\"],\n  mapper: ImmutabilityPolicyMapper,\n};\n\nexport const immutabilityPolicyName: OperationURLParameter = {\n  parameterPath: \"immutabilityPolicyName\",\n  mapper: {\n    defaultValue: \"default\",\n    isConstant: true,\n    serializedName: \"immutabilityPolicyName\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ifMatch: OperationParameter = {\n  parameterPath: [\"options\", \"ifMatch\"],\n  mapper: {\n    serializedName: \"If-Match\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ifMatch1: OperationParameter = {\n  parameterPath: \"ifMatch\",\n  mapper: {\n    serializedName: \"If-Match\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters2: OperationParameter = {\n  parameterPath: [\"options\", \"parameters\"],\n  mapper: LeaseContainerRequestMapper,\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n\nexport const parameters3: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: FileServicePropertiesMapper,\n};\n\nexport const fileServicesName: OperationURLParameter = {\n  parameterPath: \"fileServicesName\",\n  mapper: {\n    defaultValue: \"default\",\n    isConstant: true,\n    serializedName: \"FileServicesName\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const maxpagesize1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"maxpagesize\"],\n  mapper: {\n    serializedName: \"$maxpagesize\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const fileServiceUsagesName: OperationURLParameter = {\n  parameterPath: \"fileServiceUsagesName\",\n  mapper: {\n    defaultValue: \"default\",\n    isConstant: true,\n    serializedName: \"fileServiceUsagesName\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const expand: OperationQueryParameter = {\n  parameterPath: [\"options\", \"expand\"],\n  mapper: {\n    serializedName: \"$expand\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const fileShare: OperationParameter = {\n  parameterPath: \"fileShare\",\n  mapper: FileShareMapper,\n};\n\nexport const shareName: OperationURLParameter = {\n  parameterPath: \"shareName\",\n  mapper: {\n    constraints: {\n      MaxLength: 63,\n      MinLength: 3,\n    },\n    serializedName: \"shareName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const xMsSnapshot: OperationParameter = {\n  parameterPath: [\"options\", \"xMsSnapshot\"],\n  mapper: {\n    serializedName: \"x-ms-snapshot\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const include1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"include\"],\n  mapper: {\n    serializedName: \"$include\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const deletedShare: OperationParameter = {\n  parameterPath: \"deletedShare\",\n  mapper: DeletedShareMapper,\n};\n\nexport const parameters4: OperationParameter = {\n  parameterPath: [\"options\", \"parameters\"],\n  mapper: LeaseShareRequestMapper,\n};\n\nexport const parameters5: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: QueueServicePropertiesMapper,\n};\n\nexport const queueServiceName: OperationURLParameter = {\n  parameterPath: \"queueServiceName\",\n  mapper: {\n    defaultValue: \"default\",\n    isConstant: true,\n    serializedName: \"queueServiceName\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const queue: OperationParameter = {\n  parameterPath: \"queue\",\n  mapper: StorageQueueMapper,\n};\n\nexport const queueName: OperationURLParameter = {\n  parameterPath: \"queueName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-z0-9]([a-z0-9]|(-(?!-))){1,61}[a-z0-9]$\"),\n      MaxLength: 63,\n      MinLength: 3,\n    },\n    serializedName: \"queueName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const accountName1: OperationParameter = {\n  parameterPath: \"accountName\",\n  mapper: StorageAccountCheckNameAvailabilityParametersMapper,\n};\n\nexport const parameters6: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: StorageAccountCreateParametersMapper,\n};\n\nexport const expand1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"expand\"],\n  mapper: {\n    serializedName: \"$expand\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"geoReplicationStats\", \"blobRestoreStatus\"],\n    },\n  },\n};\n\nexport const parameters7: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: StorageAccountUpdateParametersMapper,\n};\n\nexport const expand2: OperationQueryParameter = {\n  parameterPath: [\"options\", \"expand\"],\n  mapper: {\n    defaultValue: \"kerb\",\n    isConstant: true,\n    serializedName: \"$expand\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const regenerateKey: OperationParameter = {\n  parameterPath: \"regenerateKey\",\n  mapper: StorageAccountRegenerateKeyParametersMapper,\n};\n\nexport const parameters8: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: AccountSasParametersMapper,\n};\n\nexport const parameters9: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ServiceSasParametersMapper,\n};\n\nexport const failoverType: OperationQueryParameter = {\n  parameterPath: [\"options\", \"failoverType\"],\n  mapper: {\n    defaultValue: \"Planned\",\n    isConstant: true,\n    serializedName: \"failoverType\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const requestType: OperationQueryParameter = {\n  parameterPath: \"requestType\",\n  mapper: {\n    serializedName: \"requestType\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters10: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: StorageAccountMigrationMapper,\n};\n\nexport const migrationName: OperationURLParameter = {\n  parameterPath: \"migrationName\",\n  mapper: {\n    serializedName: \"migrationName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters11: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: BlobRestoreParametersMapper,\n};\n\nexport const accountName2: OperationURLParameter = {\n  parameterPath: \"accountName\",\n  mapper: {\n    constraints: {\n      MaxLength: 24,\n      MinLength: 3,\n    },\n    serializedName: \"accountName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const deletedAccountName: OperationURLParameter = {\n  parameterPath: \"deletedAccountName\",\n  mapper: {\n    constraints: {\n      MaxLength: 24,\n      MinLength: 3,\n    },\n    serializedName: \"deletedAccountName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const location: OperationURLParameter = {\n  parameterPath: \"location\",\n  mapper: {\n    serializedName: \"location\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const managementPolicyName: OperationURLParameter = {\n  parameterPath: \"managementPolicyName\",\n  mapper: {\n    serializedName: \"managementPolicyName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const properties: OperationParameter = {\n  parameterPath: \"properties\",\n  mapper: ManagementPolicyMapper,\n};\n\nexport const blobInventoryPolicyName: OperationURLParameter = {\n  parameterPath: \"blobInventoryPolicyName\",\n  mapper: {\n    serializedName: \"blobInventoryPolicyName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const properties1: OperationParameter = {\n  parameterPath: \"properties\",\n  mapper: BlobInventoryPolicyMapper,\n};\n\nexport const privateEndpointConnectionName: OperationURLParameter = {\n  parameterPath: \"privateEndpointConnectionName\",\n  mapper: {\n    serializedName: \"privateEndpointConnectionName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const properties2: OperationParameter = {\n  parameterPath: \"properties\",\n  mapper: PrivateEndpointConnectionMapper,\n};\n\nexport const objectReplicationPolicyId: OperationURLParameter = {\n  parameterPath: \"objectReplicationPolicyId\",\n  mapper: {\n    constraints: {\n      MinLength: 1,\n    },\n    serializedName: \"objectReplicationPolicyId\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const properties3: OperationParameter = {\n  parameterPath: \"properties\",\n  mapper: ObjectReplicationPolicyMapper,\n};\n\nexport const maxpagesize2: OperationQueryParameter = {\n  parameterPath: [\"options\", \"maxpagesize\"],\n  mapper: {\n    constraints: {\n      InclusiveMaximum: 5000,\n      InclusiveMinimum: 1,\n    },\n    serializedName: \"$maxpagesize\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const include2: OperationQueryParameter = {\n  parameterPath: [\"options\", \"include\"],\n  mapper: {\n    serializedName: \"$include\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const username: OperationURLParameter = {\n  parameterPath: \"username\",\n  mapper: {\n    constraints: {\n      MaxLength: 64,\n      MinLength: 3,\n    },\n    serializedName: \"username\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const properties4: OperationParameter = {\n  parameterPath: \"properties\",\n  mapper: LocalUserMapper,\n};\n\nexport const encryptionScope: OperationParameter = {\n  parameterPath: \"encryptionScope\",\n  mapper: EncryptionScopeMapper,\n};\n\nexport const encryptionScopeName: OperationURLParameter = {\n  parameterPath: \"encryptionScopeName\",\n  mapper: {\n    constraints: {\n      MaxLength: 63,\n      MinLength: 3,\n    },\n    serializedName: \"encryptionScopeName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const include3: OperationQueryParameter = {\n  parameterPath: [\"options\", \"include\"],\n  mapper: {\n    serializedName: \"$include\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters12: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: TableServicePropertiesMapper,\n};\n\nexport const tableServiceName: OperationURLParameter = {\n  parameterPath: \"tableServiceName\",\n  mapper: {\n    defaultValue: \"default\",\n    isConstant: true,\n    serializedName: \"tableServiceName\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters13: OperationParameter = {\n  parameterPath: [\"options\", \"parameters\"],\n  mapper: TableMapper,\n};\n\nexport const tableName: OperationURLParameter = {\n  parameterPath: \"tableName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[A-Za-z][A-Za-z0-9]{2,62}$\"),\n      MaxLength: 63,\n      MinLength: 3,\n    },\n    serializedName: \"tableName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const networkSecurityPerimeterConfigurationName: OperationURLParameter =\n  {\n    parameterPath: \"networkSecurityPerimeterConfigurationName\",\n    mapper: {\n      constraints: {\n        Pattern: new RegExp(\"^.*$\"),\n      },\n      serializedName: \"networkSecurityPerimeterConfigurationName\",\n      required: true,\n      type: {\n        name: \"String\",\n      },\n    },\n  };\n\nexport const parameters14: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: StorageTaskAssignmentMapper,\n};\n\nexport const storageTaskAssignmentName: OperationURLParameter = {\n  parameterPath: \"storageTaskAssignmentName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-z0-9]{3,24}$\"),\n      MaxLength: 24,\n      MinLength: 3,\n    },\n    serializedName: \"storageTaskAssignmentName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters15: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: StorageTaskAssignmentUpdateParametersMapper,\n};\n"]}