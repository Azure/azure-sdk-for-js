{"version":3,"file":"managementPolicies.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/managementPolicies.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  ManagementPolicyName,\n  ManagementPoliciesGetOptionalParams,\n  ManagementPoliciesGetResponse,\n  ManagementPolicy,\n  ManagementPoliciesCreateOrUpdateOptionalParams,\n  ManagementPoliciesCreateOrUpdateResponse,\n  ManagementPoliciesDeleteOptionalParams,\n} from \"../models/index.js\";\n\n/** Interface representing a ManagementPolicies. */\nexport interface ManagementPolicies {\n  /**\n   * Gets the managementpolicy associated with the specified storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param managementPolicyName The name of the Storage Account Management Policy. It should always be\n   *                             'default'\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    accountName: string,\n    managementPolicyName: ManagementPolicyName,\n    options?: ManagementPoliciesGetOptionalParams,\n  ): Promise<ManagementPoliciesGetResponse>;\n  /**\n   * Sets the managementpolicy to the specified storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param managementPolicyName The name of the Storage Account Management Policy. It should always be\n   *                             'default'\n   * @param properties The ManagementPolicy set to a storage account.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    accountName: string,\n    managementPolicyName: ManagementPolicyName,\n    properties: ManagementPolicy,\n    options?: ManagementPoliciesCreateOrUpdateOptionalParams,\n  ): Promise<ManagementPoliciesCreateOrUpdateResponse>;\n  /**\n   * Deletes the managementpolicy associated with the specified storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param managementPolicyName The name of the Storage Account Management Policy. It should always be\n   *                             'default'\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    accountName: string,\n    managementPolicyName: ManagementPolicyName,\n    options?: ManagementPoliciesDeleteOptionalParams,\n  ): Promise<void>;\n}\n"]}