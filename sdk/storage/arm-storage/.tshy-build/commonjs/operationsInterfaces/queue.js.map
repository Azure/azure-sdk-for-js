{"version":3,"file":"queue.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/queue.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport {\n  ListQueue,\n  QueueListOptionalParams,\n  StorageQueue,\n  QueueCreateOptionalParams,\n  QueueCreateResponse,\n  QueueUpdateOptionalParams,\n  QueueUpdateResponse,\n  QueueGetOptionalParams,\n  QueueGetResponse,\n  QueueDeleteOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a Queue. */\nexport interface Queue {\n  /**\n   * Gets a list of all the queues under the specified storage account\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: QueueListOptionalParams,\n  ): PagedAsyncIterableIterator<ListQueue>;\n  /**\n   * Creates a new queue with the specified queue name, under the specified account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param queueName A queue name must be unique within a storage account and must be between 3 and 63\n   *                  characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should\n   *                  begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters.\n   * @param queue Queue properties and metadata to be created with\n   * @param options The options parameters.\n   */\n  create(\n    resourceGroupName: string,\n    accountName: string,\n    queueName: string,\n    queue: StorageQueue,\n    options?: QueueCreateOptionalParams,\n  ): Promise<QueueCreateResponse>;\n  /**\n   * Creates a new queue with the specified queue name, under the specified account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param queueName A queue name must be unique within a storage account and must be between 3 and 63\n   *                  characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should\n   *                  begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters.\n   * @param queue Queue properties and metadata to be created with\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    accountName: string,\n    queueName: string,\n    queue: StorageQueue,\n    options?: QueueUpdateOptionalParams,\n  ): Promise<QueueUpdateResponse>;\n  /**\n   * Gets the queue with the specified queue name, under the specified account if it exists.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param queueName A queue name must be unique within a storage account and must be between 3 and 63\n   *                  characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should\n   *                  begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    accountName: string,\n    queueName: string,\n    options?: QueueGetOptionalParams,\n  ): Promise<QueueGetResponse>;\n  /**\n   * Deletes the queue with the specified queue name, under the specified account if it exists.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param queueName A queue name must be unique within a storage account and must be between 3 and 63\n   *                  characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should\n   *                  begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    accountName: string,\n    queueName: string,\n    options?: QueueDeleteOptionalParams,\n  ): Promise<void>;\n}\n"]}