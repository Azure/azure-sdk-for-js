{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/models/index.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport interface BlobServiceItems {\n  /**\n   * List of blob services returned.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: BlobServiceProperties[];\n}\n\n/** Sets the CORS rules. You can include up to five CorsRule elements in the request. */\nexport interface CorsRules {\n  /** The List of CORS rules. You can include up to five CorsRule elements in the request. */\n  corsRules?: CorsRule[];\n}\n\n/** Specifies a CORS rule for the Blob service. */\nexport interface CorsRule {\n  /** Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or \"*\" to allow all domains */\n  allowedOrigins: string[];\n  /** Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin. */\n  allowedMethods: AllowedMethods[];\n  /** Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response. */\n  maxAgeInSeconds: number;\n  /** Required if CorsRule element is present. A list of response headers to expose to CORS clients. */\n  exposedHeaders: string[];\n  /** Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request. */\n  allowedHeaders: string[];\n}\n\n/** The service properties for soft delete. */\nexport interface DeleteRetentionPolicy {\n  /** Indicates whether DeleteRetentionPolicy is enabled. */\n  enabled?: boolean;\n  /** Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365. */\n  days?: number;\n  /** This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be used blob restore policy. This property only applies to blob service and does not apply to containers or file share. */\n  allowPermanentDelete?: boolean;\n}\n\n/** The blob service properties for change feed events. */\nexport interface ChangeFeed {\n  /** Indicates whether change feed event logging is enabled for the Blob service. */\n  enabled?: boolean;\n  /** Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years). A null value indicates an infinite retention of the change feed. */\n  retentionInDays?: number;\n}\n\n/** The blob service properties for blob restore policy */\nexport interface RestorePolicyProperties {\n  /** Blob restore is enabled if set to true. */\n  enabled: boolean;\n  /** how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days. */\n  days?: number;\n  /**\n   * Deprecated in favor of minRestoreTime property.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastEnabledTime?: Date;\n  /**\n   * Returns the minimum date and time that the restore can be started.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly minRestoreTime?: Date;\n}\n\n/** The blob service properties for Last access time based tracking policy. */\nexport interface LastAccessTimeTrackingPolicy {\n  /** When set to true last access time based tracking is enabled. */\n  enable: boolean;\n  /** Name of the policy. The valid value is AccessTimeTracking. This field is currently read only */\n  name?: Name;\n  /** The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This field is currently read only with value as 1 */\n  trackingGranularityInDays?: number;\n  /** An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only */\n  blobType?: string[];\n}\n\n/** The SKU of the storage account. */\nexport interface Sku {\n  /** The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType. */\n  name: SkuName;\n  /**\n   * The SKU tier. This is based on the SKU name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tier?: SkuTier;\n}\n\n/** Common fields that are returned in the response for all Azure Resource Manager resources */\nexport interface Resource {\n  /**\n   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n}\n\n/** Response schema. Contains list of blobs returned, and if paging is requested or required, a URL to next page of containers. */\nexport interface ListContainerItems {\n  /**\n   * List of blobs containers returned.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ListContainerItem[];\n  /**\n   * Request URL that can be used to query next page of containers. Returned when total number of requested containers exceed maximum page size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The properties of an ImmutabilityPolicy of a blob container. */\nexport interface ImmutabilityPolicyProperties {\n  /**\n   * ImmutabilityPolicy Etag.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * The ImmutabilityPolicy update history of the blob container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly updateHistory?: UpdateHistoryProperty[];\n  /** The immutability period for the blobs in the container since the policy creation, in days. */\n  immutabilityPeriodSinceCreationInDays?: number;\n  /**\n   * The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: ImmutabilityPolicyState;\n  /** This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. */\n  allowProtectedAppendWrites?: boolean;\n  /** This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive. */\n  allowProtectedAppendWritesAll?: boolean;\n}\n\n/** An update history of the ImmutabilityPolicy of a blob container. */\nexport interface UpdateHistoryProperty {\n  /**\n   * The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly update?: ImmutabilityPolicyUpdateType;\n  /**\n   * The immutability period for the blobs in the container since the policy creation, in days.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly immutabilityPeriodSinceCreationInDays?: number;\n  /**\n   * Returns the date and time the ImmutabilityPolicy was updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timestamp?: Date;\n  /**\n   * Returns the Object ID of the user who updated the ImmutabilityPolicy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly objectIdentifier?: string;\n  /**\n   * Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /**\n   * Returns the User Principal Name of the user who updated the ImmutabilityPolicy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly upn?: string;\n  /** This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. */\n  allowProtectedAppendWrites?: boolean;\n  /** This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive. */\n  allowProtectedAppendWritesAll?: boolean;\n}\n\n/** The LegalHold property of a blob container. */\nexport interface LegalHoldProperties {\n  /**\n   * The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hasLegalHold?: boolean;\n  /** The list of LegalHold tags of a blob container. */\n  tags?: TagProperty[];\n  /** Protected append blob writes history. */\n  protectedAppendWritesHistory?: ProtectedAppendWritesHistory;\n}\n\n/** A tag of the LegalHold of a blob container. */\nexport interface TagProperty {\n  /**\n   * The tag value.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tag?: string;\n  /**\n   * Returns the date and time the tag was added.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timestamp?: Date;\n  /**\n   * Returns the Object ID of the user who added the tag.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly objectIdentifier?: string;\n  /**\n   * Returns the Tenant ID that issued the token for the user who added the tag.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /**\n   * Returns the User Principal Name of the user who added the tag.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly upn?: string;\n}\n\n/** Protected append writes history setting for the blob container with Legal holds. */\nexport interface ProtectedAppendWritesHistory {\n  /** When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. */\n  allowProtectedAppendWritesAll?: boolean;\n  /**\n   * Returns the date and time the tag was added.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timestamp?: Date;\n}\n\n/** Object level immutability properties of the container. */\nexport interface ImmutableStorageWithVersioning {\n  /** This is an immutable property, when set to true it enables object level immutability at the container level. */\n  enabled?: boolean;\n  /**\n   * Returns the date and time the object level immutability was enabled.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timeStamp?: Date;\n  /**\n   * This property denotes the container level immutability to object level immutability migration state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly migrationState?: MigrationState;\n}\n\n/** The LegalHold property of a blob container. */\nexport interface LegalHold {\n  /**\n   * The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hasLegalHold?: boolean;\n  /** Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP. */\n  tags: string[];\n  /** When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. */\n  allowProtectedAppendWritesAll?: boolean;\n}\n\n/** Lease Container request schema. */\nexport interface LeaseContainerRequest {\n  /** Specifies the lease action. Can be one of the available actions. */\n  action: LeaseContainerRequestAction;\n  /** Identifies the lease. Can be specified in any valid GUID string format. */\n  leaseId?: string;\n  /** Optional. For a break action, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60. */\n  breakPeriod?: number;\n  /** Required for acquire. Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. */\n  leaseDuration?: number;\n  /** Optional for acquire, required for change. Proposed lease ID, in a GUID string format. */\n  proposedLeaseId?: string;\n}\n\n/** Lease Container response schema. */\nexport interface LeaseContainerResponse {\n  /** Returned unique lease ID that must be included with any request to delete the container, or to renew, change, or release the lease. */\n  leaseId?: string;\n  /** Approximate time remaining in the lease period, in seconds. */\n  leaseTimeSeconds?: string;\n}\n\n/** An error response from the Storage service. */\nexport interface CloudError {\n  /** An error response from the Storage service. */\n  error?: CloudErrorBody;\n}\n\n/** An error response from the Storage service. */\nexport interface CloudErrorBody {\n  /** An identifier for the error. Codes are invariant and are intended to be consumed programmatically. */\n  code?: string;\n  /** A message describing the error, intended to be suitable for display in a user interface. */\n  message?: string;\n  /** The target of the particular error. For example, the name of the property in error. */\n  target?: string;\n  /** A list of additional details about the error. */\n  details?: CloudErrorBody[];\n}\n\nexport interface FileServiceItems {\n  /**\n   * List of file services returned.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: FileServiceProperties[];\n}\n\n/** Protocol settings for file service */\nexport interface ProtocolSettings {\n  /** Setting for SMB protocol */\n  smb?: SmbSetting;\n}\n\n/** Setting for SMB protocol */\nexport interface SmbSetting {\n  /** Multichannel setting. Applies to Premium FileStorage only. */\n  multichannel?: Multichannel;\n  /** SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with delimiter ';'. */\n  versions?: string;\n  /** SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter ';'. */\n  authenticationMethods?: string;\n  /** Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with delimiter ';' */\n  kerberosTicketEncryption?: string;\n  /** SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as a string with delimiter ';'. */\n  channelEncryption?: string;\n}\n\n/** Multichannel setting. Applies to Premium FileStorage only. */\nexport interface Multichannel {\n  /** Indicates whether multichannel is enabled */\n  enabled?: boolean;\n}\n\n/** List file service usages schema. */\nexport interface FileServiceUsages {\n  /**\n   * List of file service usages returned.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: FileServiceUsage[];\n  /**\n   * Request URL that can be used to query next page of file service usages. Returned when total number of requested file service usages exceed maximum page size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** File service usage in storage account including account limits, file share limits and constants used in recommendations and bursting formula. */\nexport interface FileServiceUsageProperties {\n  /**\n   * Maximum provisioned storage, IOPS, bandwidth and number of file shares limits for the storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly storageAccountLimits?: AccountLimits;\n  /**\n   * Minimum and maximum provisioned storage, IOPS and bandwidth limits for a file share in the storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly fileShareLimits?: FileShareLimits;\n  /**\n   * Constants used for calculating recommended provisioned IOPS and bandwidth for a file share in the storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly fileShareRecommendations?: FileShareRecommendations;\n  /**\n   * Constants used for calculating included burst IOPS and maximum burst credits for IOPS for a file share in the storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly burstingConstants?: BurstingConstants;\n  /**\n   * Usage of provisioned storage, IOPS, bandwidth and number of file shares across all live shares and soft-deleted shares in the account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly storageAccountUsage?: AccountUsage;\n}\n\n/** Maximum provisioned storage, IOPS, bandwidth and number of file shares limits for the storage account. */\nexport interface AccountLimits {\n  /**\n   * The maximum number of file shares limit for the storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxFileShares?: number;\n  /**\n   * The maximum provisioned storage quota limit in gibibytes for the storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxProvisionedStorageGiB?: number;\n  /**\n   * The maximum provisioned IOPS limit for the storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxProvisionedIops?: number;\n  /**\n   * The maximum provisioned bandwidth limit in mebibytes per second for the storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxProvisionedBandwidthMiBPerSec?: number;\n}\n\n/** Minimum and maximum provisioned storage, IOPS and bandwidth limits for a file share in the storage account. */\nexport interface FileShareLimits {\n  /**\n   * The minimum provisioned storage quota limit in gibibytes for a file share in the storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly minProvisionedStorageGiB?: number;\n  /**\n   * The maximum provisioned storage quota limit in gibibytes for a file share in the storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxProvisionedStorageGiB?: number;\n  /**\n   * The minimum provisioned IOPS limit for a file share in the storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly minProvisionedIops?: number;\n  /**\n   * The maximum provisioned IOPS limit for a file share in the storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxProvisionedIops?: number;\n  /**\n   * The minimum provisioned bandwidth limit in mebibytes per second for a file share in the storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly minProvisionedBandwidthMiBPerSec?: number;\n  /**\n   * The maximum provisioned bandwidth limit in mebibytes per second for a file share in the storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxProvisionedBandwidthMiBPerSec?: number;\n}\n\n/** Constants used for calculating recommended provisioned IOPS and bandwidth for a file share in the storage account. */\nexport interface FileShareRecommendations {\n  /**\n   * The base IOPS in the file share provisioned IOPS recommendation formula.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly baseIops?: number;\n  /**\n   * The scalar for IO in the file share provisioned IOPS recommendation formula.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ioScalar?: number;\n  /**\n   * The base bandwidth in the file share provisioned bandwidth recommendation formula.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly baseBandwidthMiBPerSec?: number;\n  /**\n   * The scalar for bandwidth in the file share provisioned bandwidth recommendation formula.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly bandwidthScalar?: number;\n}\n\n/** Constants used for calculating included burst IOPS and maximum burst credits for IOPS for a file share in the storage account. */\nexport interface BurstingConstants {\n  /**\n   * The guaranteed floor of burst IOPS for small file shares.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly burstFloorIops?: number;\n  /**\n   * The scalar against provisioned IOPS in the file share included burst IOPS formula.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly burstIOScalar?: number;\n  /**\n   * The time frame for bursting in seconds in the file share maximum burst credits for IOPS formula.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly burstTimeframeSeconds?: number;\n}\n\n/** Usage of provisioned storage, IOPS, bandwidth and number of file shares across all live shares and soft-deleted shares in the account. */\nexport interface AccountUsage {\n  /**\n   * Usage of provisioned storage, IOPS, bandwidth and number of file shares across all live shares or soft-deleted shares in the account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly liveShares?: AccountUsageElements;\n  /**\n   * Usage of provisioned storage, IOPS, bandwidth and number of file shares across all live shares or soft-deleted shares in the account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly softDeletedShares?: AccountUsageElements;\n}\n\n/** Usage of provisioned storage, IOPS, bandwidth and number of file shares across all live shares or soft-deleted shares in the account. */\nexport interface AccountUsageElements {\n  /**\n   * The total number of file shares.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly fileShareCount?: number;\n  /**\n   * The total provisioned storage quota in gibibytes.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisionedStorageGiB?: number;\n  /**\n   * The total provisioned IOPS.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisionedIops?: number;\n  /**\n   * The total provisioned bandwidth in mebibytes per second.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisionedBandwidthMiBPerSec?: number;\n}\n\n/** Response schema. Contains list of shares returned, and if paging is requested or required, a URL to next page of shares. */\nexport interface FileShareItems {\n  /**\n   * List of file shares returned.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: FileShareItem[];\n  /**\n   * Request URL that can be used to query next page of shares. Returned when total number of requested shares exceed maximum page size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\nexport interface SignedIdentifier {\n  /** An unique identifier of the stored access policy. */\n  id?: string;\n  /** Access policy */\n  accessPolicy?: AccessPolicy;\n}\n\nexport interface AccessPolicy {\n  /** Start time of the access policy */\n  startTime?: Date;\n  /** Expiry time of the access policy */\n  expiryTime?: Date;\n  /** List of abbreviated permissions. */\n  permission?: string;\n}\n\n/** File Share Paid Bursting properties. */\nexport interface FileSharePropertiesFileSharePaidBursting {\n  /** Indicates whether paid bursting is enabled for the share. This property is only for file shares created under Files Provisioned v1 SSD account type. */\n  paidBurstingEnabled?: boolean;\n  /** The maximum paid bursting IOPS for the share. This property is only for file shares created under Files Provisioned v1 SSD account type. The maximum allowed value is 102400 which is the maximum allowed IOPS for a share. */\n  paidBurstingMaxIops?: number;\n  /** The maximum paid bursting bandwidth for the share, in mebibytes per second. This property is only for file shares created under Files Provisioned v1 SSD account type. The maximum allowed value is 10340 which is the maximum allowed bandwidth for a share. */\n  paidBurstingMaxBandwidthMibps?: number;\n}\n\n/** The deleted share to be restored. */\nexport interface DeletedShare {\n  /** Required. Identify the name of the deleted share that will be restored. */\n  deletedShareName: string;\n  /** Required. Identify the version of the deleted share that will be restored. */\n  deletedShareVersion: string;\n}\n\n/** Lease Share request schema. */\nexport interface LeaseShareRequest {\n  /** Specifies the lease action. Can be one of the available actions. */\n  action: LeaseShareAction;\n  /** Identifies the lease. Can be specified in any valid GUID string format. */\n  leaseId?: string;\n  /** Optional. For a break action, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60. */\n  breakPeriod?: number;\n  /** Required for acquire. Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. */\n  leaseDuration?: number;\n  /** Optional for acquire, required for change. Proposed lease ID, in a GUID string format. */\n  proposedLeaseId?: string;\n}\n\n/** Lease Share response schema. */\nexport interface LeaseShareResponse {\n  /** Returned unique lease ID that must be included with any request to delete the share, or to renew, change, or release the lease. */\n  leaseId?: string;\n  /** Approximate time remaining in the lease period, in seconds. */\n  leaseTimeSeconds?: string;\n}\n\nexport interface ListQueueServices {\n  /**\n   * List of queue services returned.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: QueueServiceProperties[];\n}\n\n/** Response schema. Contains list of queues returned */\nexport interface ListQueueResource {\n  /**\n   * List of queues returned.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ListQueue[];\n  /**\n   * Request URL that can be used to list next page of queues\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Result of the request to list Storage operations. It contains a list of operations and a URL link to get the next set of results. */\nexport interface OperationListResult {\n  /** List of Storage operations supported by the Storage resource provider. */\n  value?: Operation[];\n}\n\n/** Storage REST API operation definition. */\nexport interface Operation {\n  /** Operation name: {provider}/{resource}/{operation} */\n  name?: string;\n  /** Display metadata associated with the operation. */\n  display?: OperationDisplay;\n  /** The origin of operations. */\n  origin?: string;\n  /** One property of operation, include metric specifications. */\n  serviceSpecification?: ServiceSpecification;\n}\n\n/** Display metadata associated with the operation. */\nexport interface OperationDisplay {\n  /** Service provider: Microsoft Storage. */\n  provider?: string;\n  /** Resource on which the operation is performed etc. */\n  resource?: string;\n  /** Type of operation: get, read, delete, etc. */\n  operation?: string;\n  /** Description of the operation. */\n  description?: string;\n}\n\n/** One property of operation, include metric specifications. */\nexport interface ServiceSpecification {\n  /** Metric specifications of operation. */\n  metricSpecifications?: MetricSpecification[];\n}\n\n/** Metric specification of operation. */\nexport interface MetricSpecification {\n  /** Name of metric specification. */\n  name?: string;\n  /** Display name of metric specification. */\n  displayName?: string;\n  /** Display description of metric specification. */\n  displayDescription?: string;\n  /** Unit could be Bytes or Count. */\n  unit?: string;\n  /** Dimensions of blobs, including blob type and access tier. */\n  dimensions?: Dimension[];\n  /** Aggregation type could be Average. */\n  aggregationType?: string;\n  /** The property to decide fill gap with zero or not. */\n  fillGapWithZero?: boolean;\n  /** The category this metric specification belong to, could be Capacity. */\n  category?: string;\n  /** Account Resource Id. */\n  resourceIdDimensionNameOverride?: string;\n}\n\n/** Dimension of blobs, possibly be blob type or access tier. */\nexport interface Dimension {\n  /** Display name of dimension. */\n  name?: string;\n  /** Display name of dimension. */\n  displayName?: string;\n}\n\n/** The response from the List Storage SKUs operation. */\nexport interface StorageSkuListResult {\n  /**\n   * Get the list result of storage SKUs and their properties.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: SkuInformation[];\n}\n\n/** Storage SKU and its properties */\nexport interface SkuInformation {\n  /** The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType. */\n  name: SkuName;\n  /**\n   * The SKU tier. This is based on the SKU name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tier?: SkuTier;\n  /**\n   * The type of the resource, usually it is 'storageAccounts'.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceType?: string;\n  /**\n   * Indicates the type of storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: Kind;\n  /**\n   * The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly locations?: string[];\n  /**\n   * The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly capabilities?: SKUCapability[];\n  /** The restrictions because of which SKU cannot be used. This is empty if there are no restrictions. */\n  restrictions?: Restriction[];\n}\n\n/** The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc. */\nexport interface SKUCapability {\n  /**\n   * The name of capability, The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * A string value to indicate states of given capability. Possibly 'true' or 'false'.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: string;\n}\n\n/** The restriction because of which SKU cannot be used. */\nexport interface Restriction {\n  /**\n   * The type of restrictions. As of now only possible value for this is location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly values?: string[];\n  /** The reason for the restriction. As of now this can be \"QuotaId\" or \"NotAvailableForSubscription\". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The \"NotAvailableForSubscription\" is related to capacity at DC. */\n  reasonCode?: ReasonCode;\n}\n\n/** The parameters used to check the availability of the storage account name. */\nexport interface StorageAccountCheckNameAvailabilityParameters {\n  /** The storage account name. */\n  name: string;\n  /** The type of resource, Microsoft.Storage/storageAccounts */\n  type: \"Microsoft.Storage/storageAccounts\";\n}\n\n/** The CheckNameAvailability operation response. */\nexport interface CheckNameAvailabilityResult {\n  /**\n   * Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nameAvailable?: boolean;\n  /**\n   * Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reason?: Reason;\n  /**\n   * Gets an error message explaining the Reason value in more detail.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n}\n\n/** The parameters used when creating a storage account. */\nexport interface StorageAccountCreateParameters {\n  /** Required. Gets or sets the SKU name. */\n  sku: Sku;\n  /** Required. Indicates the type of storage account. */\n  kind: Kind;\n  /** Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed. */\n  location: string;\n  /** Optional. Set the extended location of the resource. If not set, the storage account will be created in Azure main region. Otherwise it will be created in the specified extended location */\n  extendedLocation?: ExtendedLocation;\n  /** Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters. */\n  tags?: { [propertyName: string]: string };\n  /** The identity of the resource. */\n  identity?: Identity;\n  /** Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet. */\n  allowedCopyScope?: AllowedCopyScope;\n  /** Allow, disallow, or let Network Security Perimeter configuration to evaluate public network access to Storage Account. Value is optional but if passed in, must be 'Enabled', 'Disabled' or 'SecuredByPerimeter'. */\n  publicNetworkAccess?: PublicNetworkAccess;\n  /** SasPolicy assigned to the storage account. */\n  sasPolicy?: SasPolicy;\n  /** KeyPolicy assigned to the storage account. */\n  keyPolicy?: KeyPolicy;\n  /** User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property. */\n  customDomain?: CustomDomain;\n  /** Encryption settings to be used for server-side encryption for the storage account. */\n  encryption?: Encryption;\n  /** Network rule set */\n  networkRuleSet?: NetworkRuleSet;\n  /** Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type. */\n  accessTier?: AccessTier;\n  /** Provides the identity based authentication settings for Azure Files. */\n  azureFilesIdentityBasedAuthentication?: AzureFilesIdentityBasedAuthentication;\n  /** Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01. */\n  enableHttpsTrafficOnly?: boolean;\n  /** Enables Secure File Transfer Protocol, if set to true */\n  isSftpEnabled?: boolean;\n  /** Enables local users feature, if set to true */\n  isLocalUserEnabled?: boolean;\n  /** Enables extended group support with local users feature, if set to true */\n  enableExtendedGroups?: boolean;\n  /** Account HierarchicalNamespace enabled if sets to true. */\n  isHnsEnabled?: boolean;\n  /** Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled. */\n  largeFileSharesState?: LargeFileSharesState;\n  /** Maintains information about the network routing choice opted by the user for data transfer */\n  routingPreference?: RoutingPreference;\n  /** Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is false for this property. */\n  allowBlobPublicAccess?: boolean;\n  /** Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property. */\n  minimumTlsVersion?: MinimumTlsVersion;\n  /** Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true. */\n  allowSharedKeyAccess?: boolean;\n  /** NFS 3.0 protocol support enabled if set to true. */\n  enableNfsV3?: boolean;\n  /** Allow or disallow cross AAD tenant object replication. Set this property to true for new or existing accounts only if object replication policies will involve storage accounts in different AAD tenants. The default interpretation is false for new accounts to follow best security practices by default. */\n  allowCrossTenantReplication?: boolean;\n  /** A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property. */\n  defaultToOAuthAuthentication?: boolean;\n  /** The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the new containers in the account by default. */\n  immutableStorageWithVersioning?: ImmutableStorageAccount;\n  /** Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier. */\n  dnsEndpointType?: DnsEndpointType;\n}\n\n/** The complex type of the extended location. */\nexport interface ExtendedLocation {\n  /** The name of the extended location. */\n  name?: string;\n  /** The type of the extended location. */\n  type?: ExtendedLocationTypes;\n}\n\n/** Identity for the resource. */\nexport interface Identity {\n  /**\n   * The principal ID of resource identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The tenant ID of resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /** The identity type. */\n  type: IdentityType;\n  /** Gets or sets a list of key value pairs that describe the set of User Assigned identities that will be used with this storage account. The key is the ARM resource identifier of the identity. Only 1 User Assigned identity is permitted here. */\n  userAssignedIdentities?: { [propertyName: string]: UserAssignedIdentity };\n}\n\n/** UserAssignedIdentity for the resource. */\nexport interface UserAssignedIdentity {\n  /**\n   * The principal ID of the identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The client ID of the identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly clientId?: string;\n}\n\n/** SasPolicy assigned to the storage account. */\nexport interface SasPolicy {\n  /** The SAS expiration period, DD.HH:MM:SS. */\n  sasExpirationPeriod: string;\n  /** The SAS Expiration Action defines the action to be performed when sasPolicy.sasExpirationPeriod is violated. The 'Log' action can be used for audit purposes and the 'Block' action can be used to block and deny the usage of SAS tokens that do not adhere to the sas policy expiration period. */\n  expirationAction: ExpirationAction;\n}\n\n/** KeyPolicy assigned to the storage account. */\nexport interface KeyPolicy {\n  /** The key expiration period in days. */\n  keyExpirationPeriodInDays: number;\n}\n\n/** The custom domain assigned to this storage account. This can be set via Update. */\nexport interface CustomDomain {\n  /** Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source. */\n  name: string;\n  /** Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates. */\n  useSubDomainName?: boolean;\n}\n\n/** The encryption settings on the storage account. */\nexport interface Encryption {\n  /** List of services which support encryption. */\n  services?: EncryptionServices;\n  /** The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault */\n  keySource?: KeySource;\n  /** A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest. */\n  requireInfrastructureEncryption?: boolean;\n  /** Properties provided by key vault. */\n  keyVaultProperties?: KeyVaultProperties;\n  /** The identity to be used with service-side encryption at rest. */\n  encryptionIdentity?: EncryptionIdentity;\n}\n\n/** A list of services that support encryption. */\nexport interface EncryptionServices {\n  /** The encryption function of the blob storage service. */\n  blob?: EncryptionService;\n  /** The encryption function of the file storage service. */\n  file?: EncryptionService;\n  /** The encryption function of the table storage service. */\n  table?: EncryptionService;\n  /** The encryption function of the queue storage service. */\n  queue?: EncryptionService;\n}\n\n/** A service that allows server-side encryption to be used. */\nexport interface EncryptionService {\n  /** A boolean indicating whether or not the service encrypts the data as it is stored. Encryption at rest is enabled by default today and cannot be disabled. */\n  enabled?: boolean;\n  /**\n   * Gets a rough estimate of the date/time when the encryption was last enabled by the user. Data is encrypted at rest by default today and cannot be disabled.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastEnabledTime?: Date;\n  /** Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used. */\n  keyType?: KeyType;\n}\n\n/** Properties of key vault. */\nexport interface KeyVaultProperties {\n  /** The name of KeyVault key. */\n  keyName?: string;\n  /** The version of KeyVault key. */\n  keyVersion?: string;\n  /** The Uri of KeyVault. */\n  keyVaultUri?: string;\n  /**\n   * The object identifier of the current versioned Key Vault Key in use.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentVersionedKeyIdentifier?: string;\n  /**\n   * Timestamp of last rotation of the Key Vault Key.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastKeyRotationTimestamp?: Date;\n  /**\n   * This is a read only property that represents the expiration time of the current version of the customer managed key used for encryption.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentVersionedKeyExpirationTimestamp?: Date;\n}\n\n/** Encryption identity for the storage account. */\nexport interface EncryptionIdentity {\n  /** Resource identifier of the UserAssigned identity to be associated with server-side encryption on the storage account. */\n  encryptionUserAssignedIdentity?: string;\n  /** ClientId of the multi-tenant application to be used in conjunction with the user-assigned identity for cross-tenant customer-managed-keys server-side encryption on the storage account. */\n  encryptionFederatedIdentityClientId?: string;\n}\n\n/** Network rule set */\nexport interface NetworkRuleSet {\n  /** Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, \"Logging, Metrics\"), or None to bypass none of those traffics. */\n  bypass?: Bypass;\n  /** Sets the resource access rules */\n  resourceAccessRules?: ResourceAccessRule[];\n  /** Sets the virtual network rules */\n  virtualNetworkRules?: VirtualNetworkRule[];\n  /** Sets the IP ACL rules */\n  ipRules?: IPRule[];\n  /** Specifies the default action of allow or deny when no other rules match. */\n  defaultAction: DefaultAction;\n}\n\n/** Resource Access Rule. */\nexport interface ResourceAccessRule {\n  /** Tenant Id */\n  tenantId?: string;\n  /** Resource Id */\n  resourceId?: string;\n}\n\n/** Virtual Network rule. */\nexport interface VirtualNetworkRule {\n  /** Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}. */\n  virtualNetworkResourceId: string;\n  /** The action of virtual network rule. */\n  action?: \"Allow\";\n  /** Gets the state of virtual network rule. */\n  state?: State;\n}\n\n/** IP rule with specific IP or IP range in CIDR format. */\nexport interface IPRule {\n  /** Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed. */\n  iPAddressOrRange: string;\n  /** The action of IP ACL rule. */\n  action?: \"Allow\";\n}\n\n/** Settings for Azure Files identity based authentication. */\nexport interface AzureFilesIdentityBasedAuthentication {\n  /** Indicates the directory service used. Note that this enum may be extended in the future. */\n  directoryServiceOptions: DirectoryServiceOptions;\n  /** Required if directoryServiceOptions are AD, optional if they are AADKERB. */\n  activeDirectoryProperties?: ActiveDirectoryProperties;\n  /** Default share permission for users using Kerberos authentication if RBAC role is not assigned. */\n  defaultSharePermission?: DefaultSharePermission;\n}\n\n/** Settings properties for Active Directory (AD). */\nexport interface ActiveDirectoryProperties {\n  /** Specifies the primary domain that the AD DNS server is authoritative for. */\n  domainName: string;\n  /** Specifies the NetBIOS domain name. */\n  netBiosDomainName?: string;\n  /** Specifies the Active Directory forest to get. */\n  forestName?: string;\n  /** Specifies the domain GUID. */\n  domainGuid: string;\n  /** Specifies the security identifier (SID). */\n  domainSid?: string;\n  /** Specifies the security identifier (SID) for Azure Storage. */\n  azureStorageSid?: string;\n  /** Specifies the Active Directory SAMAccountName for Azure Storage. */\n  samAccountName?: string;\n  /** Specifies the Active Directory account type for Azure Storage. */\n  accountType?: AccountType;\n}\n\n/** Routing preference defines the type of network, either microsoft or internet routing to be used to deliver the user data, the default option is microsoft routing */\nexport interface RoutingPreference {\n  /** Routing Choice defines the kind of network routing opted by the user. */\n  routingChoice?: RoutingChoice;\n  /** A boolean flag which indicates whether microsoft routing storage endpoints are to be published */\n  publishMicrosoftEndpoints?: boolean;\n  /** A boolean flag which indicates whether internet routing storage endpoints are to be published */\n  publishInternetEndpoints?: boolean;\n}\n\n/** This property enables and defines account-level immutability. Enabling the feature auto-enables Blob Versioning. */\nexport interface ImmutableStorageAccount {\n  /** A boolean flag which enables account-level immutability. All the containers under such an account have object-level immutability enabled by default. */\n  enabled?: boolean;\n  /** Specifies the default account-level immutability policy which is inherited and applied to objects that do not possess an explicit immutability policy at the object level. The object-level immutability policy has higher precedence than the container-level immutability policy, which has a higher precedence than the account-level immutability policy. */\n  immutabilityPolicy?: AccountImmutabilityPolicyProperties;\n}\n\n/** This defines account-level immutability policy properties. */\nexport interface AccountImmutabilityPolicyProperties {\n  /** The immutability period for the blobs in the container since the policy creation, in days. */\n  immutabilityPeriodSinceCreationInDays?: number;\n  /** The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted. */\n  state?: AccountImmutabilityPolicyState;\n  /** This property can only be changed for disabled and unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. */\n  allowProtectedAppendWrites?: boolean;\n}\n\n/** The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object. */\nexport interface Endpoints {\n  /**\n   * Gets the blob endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly blob?: string;\n  /**\n   * Gets the queue endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly queue?: string;\n  /**\n   * Gets the table endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly table?: string;\n  /**\n   * Gets the file endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly file?: string;\n  /**\n   * Gets the web endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly web?: string;\n  /**\n   * Gets the dfs endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dfs?: string;\n  /** Gets the microsoft routing storage endpoints. */\n  microsoftEndpoints?: StorageAccountMicrosoftEndpoints;\n  /** Gets the internet routing storage endpoints */\n  internetEndpoints?: StorageAccountInternetEndpoints;\n}\n\n/** The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object via a microsoft routing endpoint. */\nexport interface StorageAccountMicrosoftEndpoints {\n  /**\n   * Gets the blob endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly blob?: string;\n  /**\n   * Gets the queue endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly queue?: string;\n  /**\n   * Gets the table endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly table?: string;\n  /**\n   * Gets the file endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly file?: string;\n  /**\n   * Gets the web endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly web?: string;\n  /**\n   * Gets the dfs endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dfs?: string;\n}\n\n/** The URIs that are used to perform a retrieval of a public blob, file, web or dfs object via a internet routing endpoint. */\nexport interface StorageAccountInternetEndpoints {\n  /**\n   * Gets the blob endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly blob?: string;\n  /**\n   * Gets the file endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly file?: string;\n  /**\n   * Gets the web endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly web?: string;\n  /**\n   * Gets the dfs endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dfs?: string;\n}\n\n/** Storage account keys creation time. */\nexport interface KeyCreationTime {\n  key1?: Date;\n  key2?: Date;\n}\n\n/** Statistics related to replication for storage account's Blob, Table, Queue and File services. It is only available when geo-redundant replication is enabled for the storage account. */\nexport interface GeoReplicationStats {\n  /**\n   * The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: GeoReplicationStatus;\n  /**\n   * All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastSyncTime?: Date;\n  /**\n   * A boolean flag which indicates whether or not account failover is supported for the account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly canFailover?: boolean;\n  /**\n   * A boolean flag which indicates whether or not planned account failover is supported for the account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly canPlannedFailover?: boolean;\n  /**\n   * The redundancy type of the account after an account failover is performed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly postFailoverRedundancy?: PostFailoverRedundancy;\n  /**\n   * The redundancy type of the account after a planned account failover is performed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly postPlannedFailoverRedundancy?: PostPlannedFailoverRedundancy;\n}\n\n/** The Private Endpoint resource. */\nexport interface PrivateEndpoint {\n  /**\n   * The ARM identifier for Private Endpoint\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n}\n\n/** A collection of information about the state of the connection between service consumer and provider. */\nexport interface PrivateLinkServiceConnectionState {\n  /** Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service. */\n  status?: PrivateEndpointServiceConnectionStatus;\n  /** The reason for approval/rejection of the connection. */\n  description?: string;\n  /** A message indicating if changes on the service provider require any updates on the consumer. */\n  actionRequired?: string;\n}\n\n/** Blob restore status. */\nexport interface BlobRestoreStatus {\n  /**\n   * The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing. - Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: BlobRestoreProgressStatus;\n  /**\n   * Failure reason when blob restore is failed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly failureReason?: string;\n  /**\n   * Id for tracking blob restore request.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly restoreId?: string;\n  /**\n   * Blob restore request parameters.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly parameters?: BlobRestoreParameters;\n}\n\n/** Blob restore parameters */\nexport interface BlobRestoreParameters {\n  /** Restore blob to the specified time. */\n  timeToRestore: Date;\n  /** Blob ranges to restore. */\n  blobRanges: BlobRestoreRange[];\n}\n\n/** Blob range */\nexport interface BlobRestoreRange {\n  /** Blob start range. This is inclusive. Empty means account start. */\n  startRange: string;\n  /** Blob end range. This is exclusive. Empty means account end. */\n  endRange: string;\n}\n\n/** This defines the sku conversion status object for asynchronous sku conversions. */\nexport interface StorageAccountSkuConversionStatus {\n  /**\n   * This property indicates the current sku conversion status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly skuConversionStatus?: SkuConversionStatus;\n  /** This property represents the target sku name to which the account sku is being converted asynchronously. */\n  targetSkuName?: SkuName;\n  /**\n   * This property represents the sku conversion start time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: string;\n  /**\n   * This property represents the sku conversion end time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly endTime?: string;\n}\n\n/** The parameters that can be provided when updating the storage account properties. */\nexport interface StorageAccountUpdateParameters {\n  /** Gets or sets the SKU name. Note that the SKU name cannot be updated to Standard_ZRS, Premium_LRS or Premium_ZRS, nor can accounts of those SKU names be updated to any other value. */\n  sku?: Sku;\n  /** Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters. */\n  tags?: { [propertyName: string]: string };\n  /** The identity of the resource. */\n  identity?: Identity;\n  /** Optional. Indicates the type of storage account. Currently only StorageV2 value supported by server. */\n  kind?: Kind;\n  /** Custom domain assigned to the storage account by the user. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property. */\n  customDomain?: CustomDomain;\n  /** Not applicable. Azure Storage encryption at rest is enabled by default for all storage accounts and cannot be disabled. */\n  encryption?: Encryption;\n  /** SasPolicy assigned to the storage account. */\n  sasPolicy?: SasPolicy;\n  /** KeyPolicy assigned to the storage account. */\n  keyPolicy?: KeyPolicy;\n  /** Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type. */\n  accessTier?: AccessTier;\n  /** Provides the identity based authentication settings for Azure Files. */\n  azureFilesIdentityBasedAuthentication?: AzureFilesIdentityBasedAuthentication;\n  /** Allows https traffic only to storage service if sets to true. */\n  enableHttpsTrafficOnly?: boolean;\n  /** Enables Secure File Transfer Protocol, if set to true */\n  isSftpEnabled?: boolean;\n  /** Enables local users feature, if set to true */\n  isLocalUserEnabled?: boolean;\n  /** Enables extended group support with local users feature, if set to true */\n  enableExtendedGroups?: boolean;\n  /** Network rule set */\n  networkRuleSet?: NetworkRuleSet;\n  /** Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled. */\n  largeFileSharesState?: LargeFileSharesState;\n  /** Maintains information about the network routing choice opted by the user for data transfer */\n  routingPreference?: RoutingPreference;\n  /** Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is false for this property. */\n  allowBlobPublicAccess?: boolean;\n  /** Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property. */\n  minimumTlsVersion?: MinimumTlsVersion;\n  /** Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true. */\n  allowSharedKeyAccess?: boolean;\n  /** Allow or disallow cross AAD tenant object replication. Set this property to true for new or existing accounts only if object replication policies will involve storage accounts in different AAD tenants. The default interpretation is false for new accounts to follow best security practices by default. */\n  allowCrossTenantReplication?: boolean;\n  /** A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property. */\n  defaultToOAuthAuthentication?: boolean;\n  /** Allow, disallow, or let Network Security Perimeter configuration to evaluate public network access to Storage Account. Value is optional but if passed in, must be 'Enabled', 'Disabled' or 'SecuredByPerimeter'. */\n  publicNetworkAccess?: PublicNetworkAccess;\n  /** The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the containers in the account by default. */\n  immutableStorageWithVersioning?: ImmutableStorageAccount;\n  /** Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet. */\n  allowedCopyScope?: AllowedCopyScope;\n  /** Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier. */\n  dnsEndpointType?: DnsEndpointType;\n}\n\n/** The response from the List Deleted Accounts operation. */\nexport interface DeletedAccountListResult {\n  /**\n   * Gets the list of deleted accounts and their properties.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: DeletedAccount[];\n  /**\n   * Request URL that can be used to query next page of deleted accounts. Returned when total number of requested deleted accounts exceed maximum page size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** An error response from the storage resource provider. */\nexport interface ErrorResponse {\n  /** Azure Storage Resource Provider error response body. */\n  error?: ErrorResponseBody;\n}\n\n/** Error response body contract. */\nexport interface ErrorResponseBody {\n  /** An identifier for the error. Codes are invariant and are intended to be consumed programmatically. */\n  code?: string;\n  /** A message describing the error, intended to be suitable for display in a user interface. */\n  message?: string;\n}\n\n/** The response from the List Storage Accounts operation. */\nexport interface StorageAccountListResult {\n  /**\n   * Gets the list of storage accounts and their properties.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: StorageAccount[];\n  /**\n   * Request URL that can be used to query next page of storage accounts. Returned when total number of requested storage accounts exceed maximum page size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The response from the ListKeys operation. */\nexport interface StorageAccountListKeysResult {\n  /**\n   * Gets the list of storage account keys and their properties for the specified storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly keys?: StorageAccountKey[];\n}\n\n/** An access key for the storage account. */\nexport interface StorageAccountKey {\n  /**\n   * Name of the key.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly keyName?: string;\n  /**\n   * Base 64-encoded value of the key.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: string;\n  /**\n   * Permissions for the key -- read-only or full permissions.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly permissions?: KeyPermission;\n  /**\n   * Creation time of the key, in round trip date format.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creationTime?: Date;\n}\n\n/** The parameters used to regenerate the storage account key. */\nexport interface StorageAccountRegenerateKeyParameters {\n  /** The name of storage keys that want to be regenerated, possible values are key1, key2, kerb1, kerb2. */\n  keyName: string;\n}\n\n/** The response from the List Usages operation. */\nexport interface UsageListResult {\n  /** Gets or sets the list of Storage Resource Usages. */\n  value?: Usage[];\n}\n\n/** Describes Storage Resource Usage. */\nexport interface Usage {\n  /**\n   * Gets the unit of measurement.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: UsageUnit;\n  /**\n   * Gets the current count of the allocated resources in the subscription.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentValue?: number;\n  /**\n   * Gets the maximum count of the resources that can be allocated in the subscription.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly limit?: number;\n  /**\n   * Gets the name of the type of usage.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: UsageName;\n}\n\n/** The usage names that can be used; currently limited to StorageAccount. */\nexport interface UsageName {\n  /**\n   * Gets a string describing the resource name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: string;\n  /**\n   * Gets a localized string describing the resource name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly localizedValue?: string;\n}\n\n/** The parameters to list SAS credentials of a storage account. */\nexport interface AccountSasParameters {\n  /** The signed services accessible with the account SAS. Possible values include: Blob (b), Queue (q), Table (t), File (f). */\n  services: Services;\n  /** The signed resource types that are accessible with the account SAS. Service (s): Access to service-level APIs; Container (c): Access to container-level APIs; Object (o): Access to object-level APIs for blobs, queue messages, table entities, and files. */\n  resourceTypes: SignedResourceTypes;\n  /** The signed permissions for the account SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p). */\n  permissions: Permissions;\n  /** An IP address or a range of IP addresses from which to accept requests. */\n  iPAddressOrRange?: string;\n  /** The protocol permitted for a request made with the account SAS. */\n  protocols?: HttpProtocol;\n  /** The time at which the SAS becomes valid. */\n  sharedAccessStartTime?: Date;\n  /** The time at which the shared access signature becomes invalid. */\n  sharedAccessExpiryTime: Date;\n  /** The key to sign the account SAS token with. */\n  keyToSign?: string;\n}\n\n/** The List SAS credentials operation response. */\nexport interface ListAccountSasResponse {\n  /**\n   * List SAS credentials of storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly accountSasToken?: string;\n}\n\n/** The parameters to list service SAS credentials of a specific resource. */\nexport interface ServiceSasParameters {\n  /** The canonical path to the signed resource. */\n  canonicalizedResource: string;\n  /** The signed services accessible with the service SAS. Possible values include: Blob (b), Container (c), File (f), Share (s). */\n  resource?: SignedResource;\n  /** The signed permissions for the service SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p). */\n  permissions?: Permissions;\n  /** An IP address or a range of IP addresses from which to accept requests. */\n  iPAddressOrRange?: string;\n  /** The protocol permitted for a request made with the account SAS. */\n  protocols?: HttpProtocol;\n  /** The time at which the SAS becomes valid. */\n  sharedAccessStartTime?: Date;\n  /** The time at which the shared access signature becomes invalid. */\n  sharedAccessExpiryTime?: Date;\n  /** A unique value up to 64 characters in length that correlates to an access policy specified for the container, queue, or table. */\n  identifier?: string;\n  /** The start of partition key. */\n  partitionKeyStart?: string;\n  /** The end of partition key. */\n  partitionKeyEnd?: string;\n  /** The start of row key. */\n  rowKeyStart?: string;\n  /** The end of row key. */\n  rowKeyEnd?: string;\n  /** The key to sign the account SAS token with. */\n  keyToSign?: string;\n  /** The response header override for cache control. */\n  cacheControl?: string;\n  /** The response header override for content disposition. */\n  contentDisposition?: string;\n  /** The response header override for content encoding. */\n  contentEncoding?: string;\n  /** The response header override for content language. */\n  contentLanguage?: string;\n  /** The response header override for content type. */\n  contentType?: string;\n}\n\n/** The List service SAS credentials operation response. */\nexport interface ListServiceSasResponse {\n  /**\n   * List service SAS credentials of specific resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceSasToken?: string;\n}\n\n/** The parameters or status associated with an ongoing or enqueued storage account migration in order to update its current SKU or region. */\nexport interface StorageAccountMigration {\n  /**\n   * Migration Resource Id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /** current value is 'default' for customer initiated migration */\n  name?: string;\n  /** SrpAccountMigrationType in ARM contract which is 'accountMigrations' */\n  type?: string;\n  /** Target sku name for the account */\n  targetSkuName: SkuName;\n  /**\n   * Current status of migration\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly migrationStatus?: MigrationStatus;\n  /**\n   * Error code for migration failure\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly migrationFailedReason?: string;\n  /**\n   * Reason for migration failure\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly migrationFailedDetailedReason?: string;\n}\n\n/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */\nexport interface ErrorResponseAutoGenerated {\n  /** The error object. */\n  error?: ErrorDetail;\n}\n\n/** The error detail. */\nexport interface ErrorDetail {\n  /**\n   * The error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The error target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n  /**\n   * The error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: ErrorDetail[];\n  /**\n   * The error additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalInfo?: ErrorAdditionalInfo[];\n}\n\n/** The resource management error additional info. */\nexport interface ErrorAdditionalInfo {\n  /**\n   * The additional info type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly info?: Record<string, unknown>;\n}\n\n/** The Storage Account ManagementPolicies Rules. See more details in: https://learn.microsoft.com/azure/storage/blobs/lifecycle-management-overview. */\nexport interface ManagementPolicySchema {\n  /** The Storage Account ManagementPolicies Rules. See more details in: https://learn.microsoft.com/azure/storage/blobs/lifecycle-management-overview. */\n  rules: ManagementPolicyRule[];\n}\n\n/** An object that wraps the Lifecycle rule. Each rule is uniquely defined by name. */\nexport interface ManagementPolicyRule {\n  /** Rule is enabled if set to true. */\n  enabled?: boolean;\n  /** A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy. */\n  name: string;\n  /** The valid value is Lifecycle */\n  type: RuleType;\n  /** An object that defines the Lifecycle rule. */\n  definition: ManagementPolicyDefinition;\n}\n\n/** An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set. */\nexport interface ManagementPolicyDefinition {\n  /** An object that defines the action set. */\n  actions: ManagementPolicyAction;\n  /** An object that defines the filter set. */\n  filters?: ManagementPolicyFilter;\n}\n\n/** Actions are applied to the filtered blobs when the execution condition is met. */\nexport interface ManagementPolicyAction {\n  /** The management policy action for base blob */\n  baseBlob?: ManagementPolicyBaseBlob;\n  /** The management policy action for snapshot */\n  snapshot?: ManagementPolicySnapShot;\n  /** The management policy action for version */\n  version?: ManagementPolicyVersion;\n}\n\n/** Management policy action for base blob. */\nexport interface ManagementPolicyBaseBlob {\n  /** The function to tier blobs to cool storage. */\n  tierToCool?: DateAfterModification;\n  /** The function to tier blobs to archive storage. */\n  tierToArchive?: DateAfterModification;\n  /** The function to tier blobs to cold storage. */\n  tierToCold?: DateAfterModification;\n  /** The function to tier blobs to hot storage. This action can only be used with Premium Block Blob Storage Accounts */\n  tierToHot?: DateAfterModification;\n  /** The function to delete the blob */\n  delete?: DateAfterModification;\n  /** This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan. */\n  enableAutoTierToHotFromCool?: boolean;\n}\n\n/** Object to define the base blob action conditions. Properties daysAfterModificationGreaterThan, daysAfterLastAccessTimeGreaterThan and daysAfterCreationGreaterThan are mutually exclusive. The daysAfterLastTierChangeGreaterThan property is only applicable for tierToArchive actions which requires daysAfterModificationGreaterThan to be set, also it cannot be used in conjunction with daysAfterLastAccessTimeGreaterThan or daysAfterCreationGreaterThan. */\nexport interface DateAfterModification {\n  /** Value indicating the age in days after last modification */\n  daysAfterModificationGreaterThan?: number;\n  /** Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy */\n  daysAfterLastAccessTimeGreaterThan?: number;\n  /** Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterModificationGreaterThan to be set for baseBlobs based actions. The blob will be archived if both the conditions are satisfied. */\n  daysAfterLastTierChangeGreaterThan?: number;\n  /** Value indicating the age in days after blob creation. */\n  daysAfterCreationGreaterThan?: number;\n}\n\n/** Management policy action for snapshot. */\nexport interface ManagementPolicySnapShot {\n  /** The function to tier blob snapshot to cool storage. */\n  tierToCool?: DateAfterCreation;\n  /** The function to tier blob snapshot to archive storage. */\n  tierToArchive?: DateAfterCreation;\n  /** The function to tier blobs to cold storage. */\n  tierToCold?: DateAfterCreation;\n  /** The function to tier blobs to hot storage. This action can only be used with Premium Block Blob Storage Accounts */\n  tierToHot?: DateAfterCreation;\n  /** The function to delete the blob snapshot */\n  delete?: DateAfterCreation;\n}\n\n/** Object to define snapshot and version action conditions. */\nexport interface DateAfterCreation {\n  /** Value indicating the age in days after creation */\n  daysAfterCreationGreaterThan: number;\n  /** Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterCreationGreaterThan to be set for snapshots and blob version based actions. The blob will be archived if both the conditions are satisfied. */\n  daysAfterLastTierChangeGreaterThan?: number;\n}\n\n/** Management policy action for blob version. */\nexport interface ManagementPolicyVersion {\n  /** The function to tier blob version to cool storage. */\n  tierToCool?: DateAfterCreation;\n  /** The function to tier blob version to archive storage. */\n  tierToArchive?: DateAfterCreation;\n  /** The function to tier blobs to cold storage. */\n  tierToCold?: DateAfterCreation;\n  /** The function to tier blobs to hot storage. This action can only be used with Premium Block Blob Storage Accounts */\n  tierToHot?: DateAfterCreation;\n  /** The function to delete the blob version */\n  delete?: DateAfterCreation;\n}\n\n/** Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. */\nexport interface ManagementPolicyFilter {\n  /** An array of strings for prefixes to be match. */\n  prefixMatch?: string[];\n  /** An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob. */\n  blobTypes: string[];\n  /** An array of blob index tag based filters, there can be at most 10 tag filters */\n  blobIndexMatch?: TagFilter[];\n}\n\n/** Blob index tag based filtering for blob objects */\nexport interface TagFilter {\n  /** This is the filter tag name, it can have 1 - 128 characters */\n  name: string;\n  /** This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported */\n  op: string;\n  /** This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters */\n  value: string;\n}\n\n/** The storage account blob inventory policy rules. */\nexport interface BlobInventoryPolicySchema {\n  /** Policy is enabled if set to true. */\n  enabled: boolean;\n  /**\n   * Deprecated Property from API version 2021-04-01 onwards, the required destination container name must be specified at the rule level 'policy.rule.destination'\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly destination?: string;\n  /** The valid value is Inventory */\n  type: InventoryRuleType;\n  /** The storage account blob inventory policy rules. The rule is applied when it is enabled. */\n  rules: BlobInventoryPolicyRule[];\n}\n\n/** An object that wraps the blob inventory rule. Each rule is uniquely defined by name. */\nexport interface BlobInventoryPolicyRule {\n  /** Rule is enabled when set to true. */\n  enabled: boolean;\n  /** A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy. */\n  name: string;\n  /** Container name where blob inventory files are stored. Must be pre-created. */\n  destination: string;\n  /** An object that defines the blob inventory policy rule. */\n  definition: BlobInventoryPolicyDefinition;\n}\n\n/** An object that defines the blob inventory rule. */\nexport interface BlobInventoryPolicyDefinition {\n  /** An object that defines the filter set. */\n  filters?: BlobInventoryPolicyFilter;\n  /** This is a required field, it specifies the format for the inventory files. */\n  format: Format;\n  /** This is a required field. This field is used to schedule an inventory formation. */\n  schedule: Schedule;\n  /** This is a required field. This field specifies the scope of the inventory created either at the blob or container level. */\n  objectType: ObjectType;\n  /** This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime, Tags, Etag, ContentType, ContentEncoding, ContentLanguage, ContentCRC64, CacheControl, ContentDisposition, LeaseStatus, LeaseState, LeaseDuration, ServerEncrypted, Deleted, DeletionId, DeletedTime, RemainingRetentionDays, ImmutabilityPolicyUntilDate, ImmutabilityPolicyMode, LegalHold, CopyId, CopyStatus, CopySource, CopyProgress, CopyCompletionTime, CopyStatusDescription, CustomerProvidedKeySha256, RehydratePriority, ArchiveStatus, XmsBlobSequenceNumber, EncryptionScope, IncrementalCopy, TagCount'. For Blob object type schema field value 'DeletedTime' is applicable only for Hns enabled accounts. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold, Etag, DefaultEncryptionScope, DenyEncryptionScopeOverride, ImmutableStorageWithVersioningEnabled, Deleted, Version, DeletedTime, RemainingRetentionDays'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, DeletionId' are valid only for Hns enabled accounts.Schema field values 'Tags, TagCount' are only valid for Non-Hns accounts. */\n  schemaFields: string[];\n}\n\n/** An object that defines the blob inventory rule filter conditions. For 'Blob' definition.objectType all filter properties are applicable, 'blobTypes' is required and others are optional. For 'Container' definition.objectType only prefixMatch is applicable and is optional. */\nexport interface BlobInventoryPolicyFilter {\n  /** An array of strings with maximum 10 blob prefixes to be included in the inventory. */\n  prefixMatch?: string[];\n  /** An array of strings with maximum 10 blob prefixes to be excluded from the inventory. */\n  excludePrefix?: string[];\n  /** An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support pageBlobs. This field is required when definition.objectType property is set to 'Blob'. */\n  blobTypes?: string[];\n  /** Includes blob versions in blob inventory when value is set to true. The definition.schemaFields values 'VersionId and IsCurrentVersion' are required if this property is set to true, else they must be excluded. */\n  includeBlobVersions?: boolean;\n  /** Includes blob snapshots in blob inventory when value is set to true. The definition.schemaFields value 'Snapshot' is required if this property is set to true, else it must be excluded. */\n  includeSnapshots?: boolean;\n  /** For 'Container' definition.objectType the definition.schemaFields must include 'Deleted, Version, DeletedTime and RemainingRetentionDays'. For 'Blob' definition.objectType and HNS enabled storage accounts the definition.schemaFields must include 'DeletionId, Deleted, DeletedTime and RemainingRetentionDays' and for Hns disabled accounts the definition.schemaFields must include 'Deleted and RemainingRetentionDays', else it must be excluded. */\n  includeDeleted?: boolean;\n  /** This property is used to filter objects based on the object creation time */\n  creationTime?: BlobInventoryCreationTime;\n}\n\n/** This property defines the creation time based filtering condition. Blob Inventory schema parameter 'Creation-Time' is mandatory with this filter. */\nexport interface BlobInventoryCreationTime {\n  /** When set the policy filters the objects that are created in the last N days. Where N is an integer value between 1 to 36500. */\n  lastNDays?: number;\n}\n\n/** Metadata pertaining to creation and last modification of the resource. */\nexport interface SystemData {\n  /** The identity that created the resource. */\n  createdBy?: string;\n  /** The type of identity that created the resource. */\n  createdByType?: CreatedByType;\n  /** The timestamp of resource creation (UTC). */\n  createdAt?: Date;\n  /** The identity that last modified the resource. */\n  lastModifiedBy?: string;\n  /** The type of identity that last modified the resource. */\n  lastModifiedByType?: CreatedByType;\n  /** The timestamp of resource last modification (UTC) */\n  lastModifiedAt?: Date;\n}\n\n/** List of blob inventory policies returned. */\nexport interface ListBlobInventoryPolicy {\n  /**\n   * List of blob inventory policies.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: BlobInventoryPolicy[];\n}\n\n/** List of private endpoint connection associated with the specified storage account */\nexport interface PrivateEndpointConnectionListResult {\n  /** Array of private endpoint connections */\n  value?: PrivateEndpointConnection[];\n}\n\n/** A list of private link resources */\nexport interface PrivateLinkResourceListResult {\n  /** Array of private link resources */\n  value?: PrivateLinkResource[];\n}\n\n/** List storage account object replication policies. */\nexport interface ObjectReplicationPolicies {\n  /** The replication policy between two storage accounts. */\n  value?: ObjectReplicationPolicy[];\n}\n\n/** The replication policy rule between two containers. */\nexport interface ObjectReplicationPolicyRule {\n  /** Rule Id is auto-generated for each new rule on destination account. It is required for put policy on source account. */\n  ruleId?: string;\n  /** Required. Source container name. */\n  sourceContainer: string;\n  /** Required. Destination container name. */\n  destinationContainer: string;\n  /** Optional. An object that defines the filter set. */\n  filters?: ObjectReplicationPolicyFilter;\n}\n\n/** Filters limit replication to a subset of blobs within the storage account. A logical OR is performed on values in the filter. If multiple filters are defined, a logical AND is performed on all filters. */\nexport interface ObjectReplicationPolicyFilter {\n  /** Optional. Filters the results to replicate only blobs whose names begin with the specified prefix. */\n  prefixMatch?: string[];\n  /** Blobs created after the time will be replicated to the destination. It must be in datetime format 'yyyy-MM-ddTHH:mm:ssZ'. Example: 2020-02-19T16:05:00Z */\n  minCreationTime?: string;\n}\n\n/** Optional. The object replication policy metrics feature options. */\nexport interface ObjectReplicationPolicyPropertiesMetrics {\n  /** Indicates whether object replication metrics feature is enabled for the policy. */\n  enabled?: boolean;\n}\n\n/** List of local users requested, and if paging is required, a URL to the next page of local users. */\nexport interface LocalUsers {\n  /** The list of local users associated with the storage account. */\n  value?: LocalUser[];\n  /**\n   * Request URL that can be used to query next page of local users. Returned when total number of requested local users exceeds the maximum page size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\nexport interface PermissionScope {\n  /** The permissions for the local user. Possible values include: Read (r), Write (w), Delete (d), List (l), Create (c), Modify Ownership (o), and Modify Permissions (p). */\n  permissions: string;\n  /** The service used by the local user, e.g. blob, file. */\n  service: string;\n  /** The name of resource, normally the container name or the file share name, used by the local user. */\n  resourceName: string;\n}\n\nexport interface SshPublicKey {\n  /** Optional. It is used to store the function/usage of the key */\n  description?: string;\n  /** Ssh public key base64 encoded. The format should be: '<keyType> <keyData>', e.g. ssh-rsa AAAABBBB */\n  key?: string;\n}\n\n/** The Storage Account Local User keys. */\nexport interface LocalUserKeys {\n  /** Optional, local user ssh authorized keys for SFTP. */\n  sshAuthorizedKeys?: SshPublicKey[];\n  /**\n   * Auto generated by the server for SMB authentication.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sharedKey?: string;\n}\n\n/** The secrets of Storage Account Local User. */\nexport interface LocalUserRegeneratePasswordResult {\n  /**\n   * Auto generated password by the server for SSH authentication if hasSshPassword is set to true on the creation of local user.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sshPassword?: string;\n}\n\n/** The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'. */\nexport interface EncryptionScopeKeyVaultProperties {\n  /** The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope. */\n  keyUri?: string;\n  /**\n   * The object identifier of the current versioned Key Vault Key in use.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentVersionedKeyIdentifier?: string;\n  /**\n   * Timestamp of last rotation of the Key Vault Key.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastKeyRotationTimestamp?: Date;\n}\n\n/** List of encryption scopes requested, and if paging is required, a URL to the next page of encryption scopes. */\nexport interface EncryptionScopeListResult {\n  /**\n   * List of encryption scopes requested.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: EncryptionScope[];\n  /**\n   * Request URL that can be used to query next page of encryption scopes. Returned when total number of requested encryption scopes exceeds the maximum page size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\nexport interface ListTableServices {\n  /**\n   * List of table services returned.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: TableServiceProperties[];\n}\n\n/** Object to set Table Access Policy. */\nexport interface TableSignedIdentifier {\n  /** unique-64-character-value of the stored access policy. */\n  id: string;\n  /** Access policy */\n  accessPolicy?: TableAccessPolicy;\n}\n\n/** Table Access Policy Properties Object. */\nexport interface TableAccessPolicy {\n  /** Start time of the access policy */\n  startTime?: Date;\n  /** Expiry time of the access policy */\n  expiryTime?: Date;\n  /** Required. List of abbreviated permissions. Supported permission values include 'r','a','u','d' */\n  permission: string;\n}\n\n/** Response schema. Contains list of tables returned */\nexport interface ListTableResource {\n  /**\n   * List of tables returned.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Table[];\n  /**\n   * Request URL that can be used to query next page of tables\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Result of the List Network Security Perimeter configuration operation. */\nexport interface NetworkSecurityPerimeterConfigurationList {\n  /**\n   * A collection of Network Security Perimeter configurations\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: NetworkSecurityPerimeterConfiguration[];\n  /** The URI that can be used to request the next set of paged results. */\n  nextLink?: string;\n}\n\n/** Describes provisioning issue for given NetworkSecurityPerimeterConfiguration */\nexport interface ProvisioningIssue {\n  /** Name of the issue */\n  name?: string;\n  /**\n   * Properties of provisioning issue\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly properties?: ProvisioningIssueProperties;\n}\n\n/** Properties of provisioning issue */\nexport interface ProvisioningIssueProperties {\n  /** Type of issue */\n  issueType?: IssueType;\n  /** Severity of the issue. */\n  severity?: Severity;\n  /** Description of the issue */\n  description?: string;\n}\n\n/** NetworkSecurityPerimeter related information */\nexport interface NetworkSecurityPerimeter {\n  /** The ARM identifier of the resource */\n  id?: string;\n  /** Guid of the resource */\n  perimeterGuid?: string;\n  /** Location of the resource */\n  location?: string;\n}\n\n/** Information about resource association */\nexport interface NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation {\n  /** Name of the resource association */\n  name?: string;\n  /** Access Mode of the resource association */\n  accessMode?: ResourceAssociationAccessMode;\n}\n\n/** Network Security Perimeter profile */\nexport interface NetworkSecurityPerimeterConfigurationPropertiesProfile {\n  /** Name of the resource */\n  name?: string;\n  /** Current access rules version */\n  accessRulesVersion?: number;\n  /** List of Access Rules */\n  accessRules?: NspAccessRule[];\n  /** Diagnostic settings version */\n  diagnosticSettingsVersion?: number;\n  /** Enabled logging categories */\n  enabledLogCategories?: string[];\n}\n\n/** Information of Access Rule in Network Security Perimeter profile */\nexport interface NspAccessRule {\n  /** Name of the resource */\n  name?: string;\n  /**\n   * Properties of Access Rule\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly properties?: NspAccessRuleProperties;\n}\n\n/** Properties of Access Rule */\nexport interface NspAccessRuleProperties {\n  /** Direction of Access Rule */\n  direction?: NspAccessRuleDirection;\n  /** Address prefixes in the CIDR format for inbound rules */\n  addressPrefixes?: string[];\n  /** Subscriptions for inbound rules */\n  subscriptions?: NspAccessRulePropertiesSubscriptionsItem[];\n  /**\n   * NetworkSecurityPerimeters for inbound rules\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly networkSecurityPerimeters?: NetworkSecurityPerimeter[];\n  /**\n   * FQDN for outbound rules\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly fullyQualifiedDomainNames?: string[];\n}\n\n/** Subscription for inbound rule */\nexport interface NspAccessRulePropertiesSubscriptionsItem {\n  /** The ARM identifier of subscription */\n  id?: string;\n}\n\n/** Common fields that are returned in the response for all Azure Resource Manager resources */\nexport interface ResourceAutoGenerated {\n  /**\n   * Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * Azure Resource Manager metadata containing createdBy and modifiedBy information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n}\n\n/** Properties of the storage task assignment. */\nexport interface StorageTaskAssignmentProperties {\n  /** Id of the corresponding storage task */\n  taskId: string;\n  /** Whether the storage task assignment is enabled or not */\n  enabled: boolean;\n  /** Text that describes the purpose of the storage task assignment */\n  description: string;\n  /** The storage task assignment execution context */\n  executionContext: StorageTaskAssignmentExecutionContext;\n  /** The storage task assignment report */\n  report: StorageTaskAssignmentReport;\n  /**\n   * Represents the provisioning state of the storage task assignment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** Run status of storage task assignment */\n  runStatus?: StorageTaskReportProperties;\n}\n\n/** Execution context of the storage task assignment. */\nexport interface StorageTaskAssignmentExecutionContext {\n  /** Execution target of the storage task assignment */\n  target?: ExecutionTarget;\n  /** Execution trigger of the storage task assignment */\n  trigger: ExecutionTrigger;\n}\n\n/** Target helps provide filter parameters for the objects in the storage account and forms the execution context for the storage task */\nexport interface ExecutionTarget {\n  /** Required list of object prefixes to be included for task execution */\n  prefix?: string[];\n  /** List of object prefixes to be excluded from task execution. If there is a conflict between include and exclude prefixes, the exclude prefix will be the determining factor */\n  excludePrefix?: string[];\n}\n\n/** Execution trigger for storage task assignment */\nexport interface ExecutionTrigger {\n  /** The trigger type of the storage task assignment execution */\n  type: TriggerType;\n  /** The trigger parameters of the storage task assignment execution */\n  parameters: TriggerParameters;\n}\n\n/** The trigger parameters update for the storage task assignment execution */\nexport interface TriggerParameters {\n  /** When to start task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce' */\n  startFrom?: Date;\n  /** Run interval of task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce' */\n  interval?: number;\n  /** Run interval unit of task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce' */\n  intervalUnit?: \"Days\";\n  /** When to end task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce' */\n  endBy?: Date;\n  /** When to start task execution. This is an optional field when ExecutionTrigger.properties.type is 'RunOnce'; this property should not be present when ExecutionTrigger.properties.type is 'OnSchedule' */\n  startOn?: Date;\n}\n\n/** The storage task assignment report */\nexport interface StorageTaskAssignmentReport {\n  /** The container prefix for the location of storage task assignment report */\n  prefix: string;\n}\n\n/** Storage task execution report for a run instance. */\nexport interface StorageTaskReportProperties {\n  /**\n   * Represents the Storage Task Assignment Id associated with the storage task that provided an execution context.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly taskAssignmentId?: string;\n  /**\n   * Represents the Storage Account Id where the storage task definition was applied and executed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly storageAccountId?: string;\n  /**\n   * Start time of the run instance. Filter options such as startTime gt '2023-06-26T20:51:24.4494016Z' and other comparison operators can be used as described for DateTime properties in https://learn.microsoft.com/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: string;\n  /**\n   * End time of the run instance. Filter options such as startTime gt '2023-06-26T20:51:24.4494016Z' and other comparison operators can be used as described for DateTime properties in https://learn.microsoft.com/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly finishTime?: string;\n  /**\n   * Total number of objects that meet the condition as defined in the storage task assignment execution context. Filter options such as objectsTargetedCount gt 50 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly objectsTargetedCount?: string;\n  /**\n   * Total number of objects that meet the storage tasks condition and were operated upon. Filter options such as objectsOperatedOnCount ge 100 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly objectsOperatedOnCount?: string;\n  /**\n   * Total number of objects where task operation failed when was attempted. Filter options such as objectFailedCount eq 0 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly objectFailedCount?: string;\n  /**\n   * Total number of objects where task operation succeeded when was attempted.Filter options such as objectsSucceededCount gt 150 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly objectsSucceededCount?: string;\n  /**\n   * Well known Azure Storage error code that represents the error encountered during execution of the run instance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly runStatusError?: string;\n  /**\n   * Represents the status of the execution.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly runStatusEnum?: RunStatusEnum;\n  /**\n   * Full path to the verbose report stored in the reporting container as specified in the assignment execution context for the storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly summaryReportPath?: string;\n  /**\n   * Storage Task Arm Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly taskId?: string;\n  /**\n   * Storage Task Version\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly taskVersion?: string;\n  /**\n   * Represents the overall result of the execution for the run instance\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly runResult?: RunResult;\n}\n\n/** Parameters of the storage task assignment update request */\nexport interface StorageTaskAssignmentUpdateParameters {\n  /** Properties of the storage task assignment. */\n  properties?: StorageTaskAssignmentUpdateProperties;\n}\n\n/** Properties of the storage task update assignment. */\nexport interface StorageTaskAssignmentUpdateProperties {\n  /**\n   * Id of the corresponding storage task\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly taskId?: string;\n  /** Whether the storage task assignment is enabled or not */\n  enabled?: boolean;\n  /** Text that describes the purpose of the storage task assignment */\n  description?: string;\n  /** The storage task assignment execution context */\n  executionContext?: StorageTaskAssignmentUpdateExecutionContext;\n  /** The storage task assignment report */\n  report?: StorageTaskAssignmentUpdateReport;\n  /**\n   * Represents the provisioning state of the storage task assignment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** Run status of storage task assignment */\n  runStatus?: StorageTaskReportProperties;\n}\n\n/** Execution context of the storage task assignment update. */\nexport interface StorageTaskAssignmentUpdateExecutionContext {\n  /** Execution target of the storage task assignment */\n  target?: ExecutionTarget;\n  /** Execution trigger of the storage task assignment */\n  trigger?: ExecutionTriggerUpdate;\n}\n\n/** Execution trigger update for storage task assignment */\nexport interface ExecutionTriggerUpdate {\n  /** The trigger type of the storage task assignment execution */\n  type?: TriggerType;\n  /** The trigger parameters of the storage task assignment execution */\n  parameters?: TriggerParametersUpdate;\n}\n\n/** The trigger parameters update for the storage task assignment execution */\nexport interface TriggerParametersUpdate {\n  /** When to start task execution. This is a mutable field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce' */\n  startFrom?: Date;\n  /** Run interval of task execution. This is a mutable field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce' */\n  interval?: number;\n  /** Run interval unit of task execution. This is a mutable field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce' */\n  intervalUnit?: \"Days\";\n  /** When to end task execution. This is a mutable field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce' */\n  endBy?: Date;\n  /** When to start task execution. This is a mutable field when ExecutionTrigger.properties.type is 'RunOnce'; this property should not be present when ExecutionTrigger.properties.type is 'OnSchedule' */\n  startOn?: Date;\n}\n\n/** The storage task assignment report */\nexport interface StorageTaskAssignmentUpdateReport {\n  /** The prefix of the storage task assignment report */\n  prefix?: string;\n}\n\n/** List of storage task assignments for the storage account */\nexport interface StorageTaskAssignmentsList {\n  /**\n   * Gets the list of storage task assignments and their properties.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: StorageTaskAssignment[];\n  /**\n   * Request URL that can be used to query next page of storage task assignments. Returned when total number of requested storage task assignments exceed maximum page size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Fetch Storage Tasks Run Summary. */\nexport interface StorageTaskReportSummary {\n  /**\n   * Gets storage tasks run result summary.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: StorageTaskReportInstance[];\n  /**\n   * Request URL that can be used to query next page of storage task run results summary. Returned when the number of run instances and summary reports exceed maximum page size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The properties of a storage account’s Blob service. */\nexport interface BlobServiceProperties extends Resource {\n  /**\n   * Sku name and tier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sku?: Sku;\n  /** Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service. */\n  cors?: CorsRules;\n  /** DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions. */\n  defaultServiceVersion?: string;\n  /** The blob service properties for blob soft delete. */\n  deleteRetentionPolicy?: DeleteRetentionPolicy;\n  /** Versioning is enabled if set to true. */\n  isVersioningEnabled?: boolean;\n  /** Deprecated in favor of isVersioningEnabled property. */\n  automaticSnapshotPolicyEnabled?: boolean;\n  /** The blob service properties for change feed events. */\n  changeFeed?: ChangeFeed;\n  /** The blob service properties for blob restore policy. */\n  restorePolicy?: RestorePolicyProperties;\n  /** The blob service properties for container soft delete. */\n  containerDeleteRetentionPolicy?: DeleteRetentionPolicy;\n  /** The blob service property to configure last access time based tracking policy. */\n  lastAccessTimeTrackingPolicy?: LastAccessTimeTrackingPolicy;\n}\n\n/** The resource model definition for an Azure Resource Manager resource with an etag. */\nexport interface AzureEntityResource extends Resource {\n  /**\n   * Resource Etag.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n}\n\n/** The properties of File services in storage account. */\nexport interface FileServiceProperties extends Resource {\n  /**\n   * Sku name and tier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sku?: Sku;\n  /** Specifies CORS rules for the File service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the File service. */\n  cors?: CorsRules;\n  /** The file service properties for share soft delete. */\n  shareDeleteRetentionPolicy?: DeleteRetentionPolicy;\n  /** Protocol settings for file service */\n  protocolSettings?: ProtocolSettings;\n}\n\n/** The usage of file service in storage account. */\nexport interface FileServiceUsage extends Resource {\n  /**\n   * File service usage in storage account including account limits, file share limits and constants used in recommendations and bursting formula.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly properties?: FileServiceUsageProperties;\n}\n\n/** The properties of a storage account’s Queue service. */\nexport interface QueueServiceProperties extends Resource {\n  /** Specifies CORS rules for the Queue service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Queue service. */\n  cors?: CorsRules;\n}\n\nexport interface StorageQueue extends Resource {\n  /** A name-value pair that represents queue metadata. */\n  metadata?: { [propertyName: string]: string };\n  /**\n   * Integer indicating an approximate number of messages in the queue. This number is not lower than the actual number of messages in the queue, but could be higher.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly approximateMessageCount?: number;\n}\n\nexport interface ListQueue extends Resource {\n  /** A name-value pair that represents queue metadata. */\n  metadata?: { [propertyName: string]: string };\n}\n\n/** The Private Endpoint Connection resource. */\nexport interface PrivateEndpointConnection extends Resource {\n  /** The resource of private end point. */\n  privateEndpoint?: PrivateEndpoint;\n  /** A collection of information about the state of the connection between service consumer and provider. */\n  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;\n  /**\n   * The provisioning state of the private endpoint connection resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: PrivateEndpointConnectionProvisioningState;\n}\n\n/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */\nexport interface TrackedResource extends Resource {\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /** The geo-location where the resource lives */\n  location: string;\n}\n\n/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */\nexport interface ProxyResource extends Resource {}\n\n/** The Get Storage Account ManagementPolicies operation response. */\nexport interface ManagementPolicy extends Resource {\n  /**\n   * Returns the date and time the ManagementPolicies was last modified.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModifiedTime?: Date;\n  /** The Storage Account ManagementPolicy, in JSON format. See more details in: https://learn.microsoft.com/azure/storage/blobs/lifecycle-management-overview. */\n  policy?: ManagementPolicySchema;\n}\n\n/** The storage account blob inventory policy. */\nexport interface BlobInventoryPolicy extends Resource {\n  /**\n   * Metadata pertaining to creation and last modification of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /**\n   * Returns the last modified date and time of the blob inventory policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModifiedTime?: Date;\n  /** The storage account blob inventory policy object. It is composed of policy rules. */\n  policy?: BlobInventoryPolicySchema;\n}\n\n/** A private link resource */\nexport interface PrivateLinkResource extends Resource {\n  /**\n   * The private link resource group id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly groupId?: string;\n  /**\n   * The private link resource required member names.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requiredMembers?: string[];\n  /** The private link resource Private link DNS zone name. */\n  requiredZoneNames?: string[];\n}\n\n/** The replication policy between two storage accounts. Multiple rules can be defined in one policy. */\nexport interface ObjectReplicationPolicy extends Resource {\n  /**\n   * A unique id for object replication policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly policyId?: string;\n  /**\n   * Indicates when the policy is enabled on the source account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly enabledTime?: Date;\n  /** Required. Source account name. It should be full resource id if allowCrossTenantReplication set to false. */\n  sourceAccount?: string;\n  /** Required. Destination account name. It should be full resource id if allowCrossTenantReplication set to false. */\n  destinationAccount?: string;\n  /** The storage account object replication rules. */\n  rules?: ObjectReplicationPolicyRule[];\n  /** Optional. The object replication policy metrics feature options. */\n  metrics?: ObjectReplicationPolicyPropertiesMetrics;\n}\n\n/** The local user associated with the storage accounts. */\nexport interface LocalUser extends Resource {\n  /**\n   * Metadata pertaining to creation and last modification of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** The permission scopes of the local user. */\n  permissionScopes?: PermissionScope[];\n  /** Optional, local user home directory. */\n  homeDirectory?: string;\n  /** Optional, local user ssh authorized keys for SFTP. */\n  sshAuthorizedKeys?: SshPublicKey[];\n  /**\n   * A unique Security Identifier that is generated by the server.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sid?: string;\n  /** Indicates whether shared key exists. Set it to false to remove existing shared key. */\n  hasSharedKey?: boolean;\n  /** Indicates whether ssh key exists. Set it to false to remove existing SSH key. */\n  hasSshKey?: boolean;\n  /** Indicates whether ssh password exists. Set it to false to remove existing SSH password. */\n  hasSshPassword?: boolean;\n  /**\n   * A unique Identifier that is generated by the server.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly userId?: number;\n  /** An identifier for associating a group of users. */\n  groupId?: number;\n  /** Indicates whether ACL authorization is allowed for this user. Set it to false to disallow using ACL authorization. */\n  allowAclAuthorization?: boolean;\n  /** Supplementary group membership. Only applicable for local users enabled for NFSv3 access. */\n  extendedGroups?: number[];\n  /** Indicates if the local user is enabled for access with NFSv3 protocol. */\n  isNFSv3Enabled?: boolean;\n}\n\n/** The Encryption Scope resource. */\nexport interface EncryptionScope extends Resource {\n  /** The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault. */\n  source?: EncryptionScopeSource;\n  /** The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled. */\n  state?: EncryptionScopeState;\n  /**\n   * Gets the creation date and time of the encryption scope in UTC.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creationTime?: Date;\n  /**\n   * Gets the last modification date and time of the encryption scope in UTC.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModifiedTime?: Date;\n  /** The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'. */\n  keyVaultProperties?: EncryptionScopeKeyVaultProperties;\n  /** A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest. */\n  requireInfrastructureEncryption?: boolean;\n}\n\n/** The properties of a storage account’s Table service. */\nexport interface TableServiceProperties extends Resource {\n  /** Specifies CORS rules for the Table service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Table service. */\n  cors?: CorsRules;\n}\n\n/** Properties of the table, including Id, resource name, resource type. */\nexport interface Table extends Resource {\n  /**\n   * Table name under the specified account\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tableName?: string;\n  /** List of stored access policies specified on the table. */\n  signedIdentifiers?: TableSignedIdentifier[];\n}\n\n/** The storage task assignment. */\nexport interface StorageTaskAssignment extends Resource {\n  /** Properties of the storage task assignment. */\n  properties: StorageTaskAssignmentProperties;\n}\n\n/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */\nexport interface ProxyResourceAutoGenerated extends ResourceAutoGenerated {}\n\n/** The blob container properties be listed out. */\nexport interface ListContainerItem extends AzureEntityResource {\n  /**\n   * The version of the deleted blob container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: string;\n  /**\n   * Indicates whether the blob container was deleted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deleted?: boolean;\n  /**\n   * Blob container deletion time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deletedTime?: Date;\n  /**\n   * Remaining retention days for soft deleted blob container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly remainingRetentionDays?: number;\n  /** Default the container to use specified encryption scope for all writes. */\n  defaultEncryptionScope?: string;\n  /** Block override of encryption scope from the container default. */\n  denyEncryptionScopeOverride?: boolean;\n  /** Specifies whether data in the container may be accessed publicly and the level of access. */\n  publicAccess?: PublicAccess;\n  /**\n   * Returns the date and time the container was last modified.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModifiedTime?: Date;\n  /**\n   * The lease status of the container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly leaseStatus?: LeaseStatus;\n  /**\n   * Lease state of the container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly leaseState?: LeaseState;\n  /**\n   * Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly leaseDuration?: LeaseDuration;\n  /** A name-value pair to associate with the container as metadata. */\n  metadata?: { [propertyName: string]: string };\n  /**\n   * The ImmutabilityPolicy property of the container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly immutabilityPolicy?: ImmutabilityPolicyProperties;\n  /**\n   * The LegalHold property of the container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly legalHold?: LegalHoldProperties;\n  /**\n   * The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hasLegalHold?: boolean;\n  /**\n   * The hasImmutabilityPolicy public property is set to true by SRP if ImmutabilityPolicy has been created for this container. The hasImmutabilityPolicy public property is set to false by SRP if ImmutabilityPolicy has not been created for this container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hasImmutabilityPolicy?: boolean;\n  /** The object level immutability property of the container. The property is immutable and can only be set to true at the container creation time. Existing containers must undergo a migration process. */\n  immutableStorageWithVersioning?: ImmutableStorageWithVersioning;\n  /** Enable NFSv3 root squash on blob container. */\n  enableNfsV3RootSquash?: boolean;\n  /** Enable NFSv3 all squash on blob container. */\n  enableNfsV3AllSquash?: boolean;\n}\n\n/** Properties of the blob container, including Id, resource name, resource type, Etag. */\nexport interface BlobContainer extends AzureEntityResource {\n  /**\n   * The version of the deleted blob container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: string;\n  /**\n   * Indicates whether the blob container was deleted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deleted?: boolean;\n  /**\n   * Blob container deletion time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deletedTime?: Date;\n  /**\n   * Remaining retention days for soft deleted blob container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly remainingRetentionDays?: number;\n  /** Default the container to use specified encryption scope for all writes. */\n  defaultEncryptionScope?: string;\n  /** Block override of encryption scope from the container default. */\n  denyEncryptionScopeOverride?: boolean;\n  /** Specifies whether data in the container may be accessed publicly and the level of access. */\n  publicAccess?: PublicAccess;\n  /**\n   * Returns the date and time the container was last modified.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModifiedTime?: Date;\n  /**\n   * The lease status of the container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly leaseStatus?: LeaseStatus;\n  /**\n   * Lease state of the container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly leaseState?: LeaseState;\n  /**\n   * Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly leaseDuration?: LeaseDuration;\n  /** A name-value pair to associate with the container as metadata. */\n  metadata?: { [propertyName: string]: string };\n  /**\n   * The ImmutabilityPolicy property of the container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly immutabilityPolicy?: ImmutabilityPolicyProperties;\n  /**\n   * The LegalHold property of the container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly legalHold?: LegalHoldProperties;\n  /**\n   * The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hasLegalHold?: boolean;\n  /**\n   * The hasImmutabilityPolicy public property is set to true by SRP if ImmutabilityPolicy has been created for this container. The hasImmutabilityPolicy public property is set to false by SRP if ImmutabilityPolicy has not been created for this container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hasImmutabilityPolicy?: boolean;\n  /** The object level immutability property of the container. The property is immutable and can only be set to true at the container creation time. Existing containers must undergo a migration process. */\n  immutableStorageWithVersioning?: ImmutableStorageWithVersioning;\n  /** Enable NFSv3 root squash on blob container. */\n  enableNfsV3RootSquash?: boolean;\n  /** Enable NFSv3 all squash on blob container. */\n  enableNfsV3AllSquash?: boolean;\n}\n\n/** The ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag. */\nexport interface ImmutabilityPolicy extends AzureEntityResource {\n  /** The immutability period for the blobs in the container since the policy creation, in days. */\n  immutabilityPeriodSinceCreationInDays?: number;\n  /**\n   * The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: ImmutabilityPolicyState;\n  /** This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. */\n  allowProtectedAppendWrites?: boolean;\n  /** This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive. */\n  allowProtectedAppendWritesAll?: boolean;\n}\n\n/** The file share properties be listed out. */\nexport interface FileShareItem extends AzureEntityResource {\n  /**\n   * Returns the date and time the share was last modified.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModifiedTime?: Date;\n  /** A name-value pair to associate with the share as metadata. */\n  metadata?: { [propertyName: string]: string };\n  /** The provisioned size of the share, in gibibytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400. For file shares created under Files Provisioned v2 account type, please refer to the GetFileServiceUsage API response for the minimum and maximum allowed provisioned storage size. */\n  shareQuota?: number;\n  /** The provisioned IOPS of the share. This property is only for file shares created under Files Provisioned v2 account type. Please refer to the GetFileServiceUsage API response for the minimum and maximum allowed value for provisioned IOPS. */\n  provisionedIops?: number;\n  /** The provisioned bandwidth of the share, in mebibytes per second. This property is only for file shares created under Files Provisioned v2 account type. Please refer to the GetFileServiceUsage API response for the minimum and maximum allowed value for provisioned bandwidth. */\n  provisionedBandwidthMibps?: number;\n  /**\n   * The calculated burst IOPS of the share. This property is only for file shares created under Files Provisioned v2 account type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly includedBurstIops?: number;\n  /**\n   * The calculated maximum burst credits for the share. This property is only for file shares created under Files Provisioned v2 account type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxBurstCreditsForIops?: number;\n  /**\n   * Returns the next allowed provisioned storage size downgrade time for the share. This property is only for file shares created under Files Provisioned v1 SSD and Files Provisioned v2 account type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextAllowedQuotaDowngradeTime?: Date;\n  /**\n   * Returns the next allowed provisioned IOPS downgrade time for the share. This property is only for file shares created under Files Provisioned v2 account type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextAllowedProvisionedIopsDowngradeTime?: Date;\n  /**\n   * Returns the next allowed provisioned bandwidth downgrade time for the share. This property is only for file shares created under Files Provisioned v2 account type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextAllowedProvisionedBandwidthDowngradeTime?: Date;\n  /** The authentication protocol that is used for the file share. Can only be specified when creating a share. */\n  enabledProtocols?: EnabledProtocols;\n  /** The property is for NFS share only. The default is NoRootSquash. */\n  rootSquash?: RootSquashType;\n  /**\n   * The version of the share.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: string;\n  /**\n   * Indicates whether the share was deleted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deleted?: boolean;\n  /**\n   * The deleted time if the share was deleted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deletedTime?: Date;\n  /**\n   * Remaining retention days for share that was soft deleted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly remainingRetentionDays?: number;\n  /** Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium. */\n  accessTier?: ShareAccessTier;\n  /**\n   * Indicates the last modification time for share access tier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly accessTierChangeTime?: Date;\n  /**\n   * Indicates if there is a pending transition for access tier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly accessTierStatus?: string;\n  /**\n   * The approximate size of the data stored on the share. Note that this value may not include all recently created or recently resized files.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly shareUsageBytes?: number;\n  /**\n   * The lease status of the share.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly leaseStatus?: LeaseStatus;\n  /**\n   * Lease state of the share.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly leaseState?: LeaseState;\n  /**\n   * Specifies whether the lease on a share is of infinite or fixed duration, only when the share is leased.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly leaseDuration?: LeaseDuration;\n  /** List of stored access policies specified on the share. */\n  signedIdentifiers?: SignedIdentifier[];\n  /**\n   * Creation time of share snapshot returned in the response of list shares with expand param \"snapshots\".\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly snapshotTime?: Date;\n  /** File Share Paid Bursting properties. */\n  fileSharePaidBursting?: FileSharePropertiesFileSharePaidBursting;\n}\n\n/** Properties of the file share, including Id, resource name, resource type, Etag. */\nexport interface FileShare extends AzureEntityResource {\n  /**\n   * Returns the date and time the share was last modified.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModifiedTime?: Date;\n  /** A name-value pair to associate with the share as metadata. */\n  metadata?: { [propertyName: string]: string };\n  /** The provisioned size of the share, in gibibytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400. For file shares created under Files Provisioned v2 account type, please refer to the GetFileServiceUsage API response for the minimum and maximum allowed provisioned storage size. */\n  shareQuota?: number;\n  /** The provisioned IOPS of the share. This property is only for file shares created under Files Provisioned v2 account type. Please refer to the GetFileServiceUsage API response for the minimum and maximum allowed value for provisioned IOPS. */\n  provisionedIops?: number;\n  /** The provisioned bandwidth of the share, in mebibytes per second. This property is only for file shares created under Files Provisioned v2 account type. Please refer to the GetFileServiceUsage API response for the minimum and maximum allowed value for provisioned bandwidth. */\n  provisionedBandwidthMibps?: number;\n  /**\n   * The calculated burst IOPS of the share. This property is only for file shares created under Files Provisioned v2 account type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly includedBurstIops?: number;\n  /**\n   * The calculated maximum burst credits for the share. This property is only for file shares created under Files Provisioned v2 account type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxBurstCreditsForIops?: number;\n  /**\n   * Returns the next allowed provisioned storage size downgrade time for the share. This property is only for file shares created under Files Provisioned v1 SSD and Files Provisioned v2 account type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextAllowedQuotaDowngradeTime?: Date;\n  /**\n   * Returns the next allowed provisioned IOPS downgrade time for the share. This property is only for file shares created under Files Provisioned v2 account type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextAllowedProvisionedIopsDowngradeTime?: Date;\n  /**\n   * Returns the next allowed provisioned bandwidth downgrade time for the share. This property is only for file shares created under Files Provisioned v2 account type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextAllowedProvisionedBandwidthDowngradeTime?: Date;\n  /** The authentication protocol that is used for the file share. Can only be specified when creating a share. */\n  enabledProtocols?: EnabledProtocols;\n  /** The property is for NFS share only. The default is NoRootSquash. */\n  rootSquash?: RootSquashType;\n  /**\n   * The version of the share.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: string;\n  /**\n   * Indicates whether the share was deleted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deleted?: boolean;\n  /**\n   * The deleted time if the share was deleted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deletedTime?: Date;\n  /**\n   * Remaining retention days for share that was soft deleted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly remainingRetentionDays?: number;\n  /** Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium. */\n  accessTier?: ShareAccessTier;\n  /**\n   * Indicates the last modification time for share access tier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly accessTierChangeTime?: Date;\n  /**\n   * Indicates if there is a pending transition for access tier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly accessTierStatus?: string;\n  /**\n   * The approximate size of the data stored on the share. Note that this value may not include all recently created or recently resized files.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly shareUsageBytes?: number;\n  /**\n   * The lease status of the share.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly leaseStatus?: LeaseStatus;\n  /**\n   * Lease state of the share.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly leaseState?: LeaseState;\n  /**\n   * Specifies whether the lease on a share is of infinite or fixed duration, only when the share is leased.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly leaseDuration?: LeaseDuration;\n  /** List of stored access policies specified on the share. */\n  signedIdentifiers?: SignedIdentifier[];\n  /**\n   * Creation time of share snapshot returned in the response of list shares with expand param \"snapshots\".\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly snapshotTime?: Date;\n  /** File Share Paid Bursting properties. */\n  fileSharePaidBursting?: FileSharePropertiesFileSharePaidBursting;\n}\n\n/** The storage account. */\nexport interface StorageAccount extends TrackedResource {\n  /**\n   * Gets the SKU.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sku?: Sku;\n  /**\n   * Gets the Kind.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: Kind;\n  /** The identity of the resource. */\n  identity?: Identity;\n  /** The extendedLocation of the resource. */\n  extendedLocation?: ExtendedLocation;\n  /**\n   * Gets the status of the storage account at the time the operation was called.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly primaryEndpoints?: Endpoints;\n  /**\n   * Gets the location of the primary data center for the storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly primaryLocation?: string;\n  /**\n   * Gets the status indicating whether the primary location of the storage account is available or unavailable.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly statusOfPrimary?: AccountStatus;\n  /**\n   * Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastGeoFailoverTime?: Date;\n  /**\n   * Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly secondaryLocation?: string;\n  /**\n   * Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly statusOfSecondary?: AccountStatus;\n  /**\n   * Gets the creation date and time of the storage account in UTC.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creationTime?: Date;\n  /**\n   * Gets the custom domain the user assigned to this storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly customDomain?: CustomDomain;\n  /**\n   * SasPolicy assigned to the storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sasPolicy?: SasPolicy;\n  /**\n   * KeyPolicy assigned to the storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly keyPolicy?: KeyPolicy;\n  /**\n   * Storage account keys creation time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly keyCreationTime?: KeyCreationTime;\n  /**\n   * Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard_RAGRS.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly secondaryEndpoints?: Endpoints;\n  /**\n   * Encryption settings to be used for server-side encryption for the storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly encryption?: Encryption;\n  /**\n   * Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly accessTier?: AccessTier;\n  /** Provides the identity based authentication settings for Azure Files. */\n  azureFilesIdentityBasedAuthentication?: AzureFilesIdentityBasedAuthentication;\n  /** Allows https traffic only to storage service if sets to true. */\n  enableHttpsTrafficOnly?: boolean;\n  /**\n   * Network rule set\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly networkRuleSet?: NetworkRuleSet;\n  /** Enables Secure File Transfer Protocol, if set to true */\n  isSftpEnabled?: boolean;\n  /** Enables local users feature, if set to true */\n  isLocalUserEnabled?: boolean;\n  /** Enables extended group support with local users feature, if set to true */\n  enableExtendedGroups?: boolean;\n  /** Account HierarchicalNamespace enabled if sets to true. */\n  isHnsEnabled?: boolean;\n  /**\n   * Geo Replication Stats\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly geoReplicationStats?: GeoReplicationStats;\n  /**\n   * If the failover is in progress, the value will be true, otherwise, it will be null.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly failoverInProgress?: boolean;\n  /** Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled. */\n  largeFileSharesState?: LargeFileSharesState;\n  /**\n   * List of private endpoint connection associated with the specified storage account\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpointConnections?: PrivateEndpointConnection[];\n  /** Maintains information about the network routing choice opted by the user for data transfer */\n  routingPreference?: RoutingPreference;\n  /**\n   * Blob restore status\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly blobRestoreStatus?: BlobRestoreStatus;\n  /** Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is false for this property. */\n  allowBlobPublicAccess?: boolean;\n  /** Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property. */\n  minimumTlsVersion?: MinimumTlsVersion;\n  /** Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true. */\n  allowSharedKeyAccess?: boolean;\n  /** NFS 3.0 protocol support enabled if set to true. */\n  enableNfsV3?: boolean;\n  /** Allow or disallow cross AAD tenant object replication. Set this property to true for new or existing accounts only if object replication policies will involve storage accounts in different AAD tenants. The default interpretation is false for new accounts to follow best security practices by default. */\n  allowCrossTenantReplication?: boolean;\n  /** A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property. */\n  defaultToOAuthAuthentication?: boolean;\n  /** Allow, disallow, or let Network Security Perimeter configuration to evaluate public network access to Storage Account. */\n  publicNetworkAccess?: PublicNetworkAccess;\n  /** The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the containers in the account by default. */\n  immutableStorageWithVersioning?: ImmutableStorageAccount;\n  /** Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet. */\n  allowedCopyScope?: AllowedCopyScope;\n  /** This property is readOnly and is set by server during asynchronous storage account sku conversion operations. */\n  storageAccountSkuConversionStatus?: StorageAccountSkuConversionStatus;\n  /** Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier. */\n  dnsEndpointType?: DnsEndpointType;\n  /**\n   * This property will be set to true or false on an event of ongoing migration. Default value is null.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isSkuConversionBlocked?: boolean;\n  /**\n   * If customer initiated account migration is in progress, the value will be true else it will be null.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly accountMigrationInProgress?: boolean;\n}\n\n/** Deleted storage account */\nexport interface DeletedAccount extends ProxyResource {\n  /**\n   * Full resource id of the original storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly storageAccountResourceId?: string;\n  /**\n   * Location of the deleted account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * Can be used to attempt recovering this deleted account via PutStorageAccount API.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly restoreReference?: string;\n  /**\n   * Creation time of the deleted account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creationTime?: string;\n  /**\n   * Deletion time of the deleted account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deletionTime?: string;\n}\n\n/** Storage Tasks run report instance */\nexport interface StorageTaskReportInstance extends ProxyResource {\n  /** Storage task execution report for a run instance. */\n  properties?: StorageTaskReportProperties;\n}\n\n/** The Network Security Perimeter configuration resource. */\nexport interface NetworkSecurityPerimeterConfiguration\n  extends ProxyResourceAutoGenerated {\n  /**\n   * Provisioning state of Network Security Perimeter configuration propagation\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: NetworkSecurityPerimeterConfigurationProvisioningState;\n  /**\n   * List of Provisioning Issues if any\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningIssues?: ProvisioningIssue[];\n  /**\n   * NetworkSecurityPerimeter related information\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly networkSecurityPerimeter?: NetworkSecurityPerimeter;\n  /**\n   * Information about resource association\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceAssociation?: NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation;\n  /**\n   * Network Security Perimeter profile\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly profile?: NetworkSecurityPerimeterConfigurationPropertiesProfile;\n}\n\n/** Defines headers for BlobContainers_createOrUpdateImmutabilityPolicy operation. */\nexport interface BlobContainersCreateOrUpdateImmutabilityPolicyHeaders {\n  /** The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers. */\n  eTag?: string;\n}\n\n/** Defines headers for BlobContainers_getImmutabilityPolicy operation. */\nexport interface BlobContainersGetImmutabilityPolicyHeaders {\n  /** The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers. */\n  eTag?: string;\n}\n\n/** Defines headers for BlobContainers_deleteImmutabilityPolicy operation. */\nexport interface BlobContainersDeleteImmutabilityPolicyHeaders {\n  /** The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers. */\n  eTag?: string;\n}\n\n/** Defines headers for BlobContainers_lockImmutabilityPolicy operation. */\nexport interface BlobContainersLockImmutabilityPolicyHeaders {\n  /** The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers. */\n  eTag?: string;\n}\n\n/** Defines headers for BlobContainers_extendImmutabilityPolicy operation. */\nexport interface BlobContainersExtendImmutabilityPolicyHeaders {\n  /** The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers. */\n  eTag?: string;\n}\n\n/** Defines headers for FileShares_lease operation. */\nexport interface FileSharesLeaseHeaders {\n  /** The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers. */\n  eTag?: string;\n}\n\n/** Defines headers for StorageAccounts_customerInitiatedMigration operation. */\nexport interface StorageAccountsCustomerInitiatedMigrationHeaders {\n  location?: string;\n}\n\n/** Defines headers for NetworkSecurityPerimeterConfigurations_reconcile operation. */\nexport interface NetworkSecurityPerimeterConfigurationsReconcileHeaders {\n  location?: string;\n}\n\n/** Defines headers for StorageTaskAssignments_create operation. */\nexport interface StorageTaskAssignmentsCreateHeaders {\n  location?: string;\n}\n\n/** Defines headers for StorageTaskAssignments_update operation. */\nexport interface StorageTaskAssignmentsUpdateHeaders {\n  location?: string;\n}\n\n/** Defines headers for StorageTaskAssignments_delete operation. */\nexport interface StorageTaskAssignmentsDeleteHeaders {\n  location?: string;\n}\n\n/** Known values of {@link AllowedMethods} that the service accepts. */\nexport enum KnownAllowedMethods {\n  /** Delete */\n  Delete = \"DELETE\",\n  /** GET */\n  GET = \"GET\",\n  /** Head */\n  Head = \"HEAD\",\n  /** Merge */\n  Merge = \"MERGE\",\n  /** Post */\n  Post = \"POST\",\n  /** Options */\n  Options = \"OPTIONS\",\n  /** PUT */\n  PUT = \"PUT\",\n  /** Patch */\n  Patch = \"PATCH\",\n  /** Connect */\n  Connect = \"CONNECT\",\n  /** Trace */\n  Trace = \"TRACE\",\n}\n\n/**\n * Defines values for AllowedMethods. \\\n * {@link KnownAllowedMethods} can be used interchangeably with AllowedMethods,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **DELETE** \\\n * **GET** \\\n * **HEAD** \\\n * **MERGE** \\\n * **POST** \\\n * **OPTIONS** \\\n * **PUT** \\\n * **PATCH** \\\n * **CONNECT** \\\n * **TRACE**\n */\nexport type AllowedMethods = string;\n\n/** Known values of {@link Name} that the service accepts. */\nexport enum KnownName {\n  /** AccessTimeTracking */\n  AccessTimeTracking = \"AccessTimeTracking\",\n}\n\n/**\n * Defines values for Name. \\\n * {@link KnownName} can be used interchangeably with Name,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AccessTimeTracking**\n */\nexport type Name = string;\n\n/** Known values of {@link SkuName} that the service accepts. */\nexport enum KnownSkuName {\n  /** StandardLRS */\n  StandardLRS = \"Standard_LRS\",\n  /** StandardGRS */\n  StandardGRS = \"Standard_GRS\",\n  /** StandardRagrs */\n  StandardRagrs = \"Standard_RAGRS\",\n  /** StandardZRS */\n  StandardZRS = \"Standard_ZRS\",\n  /** PremiumLRS */\n  PremiumLRS = \"Premium_LRS\",\n  /** PremiumZRS */\n  PremiumZRS = \"Premium_ZRS\",\n  /** StandardGzrs */\n  StandardGzrs = \"Standard_GZRS\",\n  /** StandardRagzrs */\n  StandardRagzrs = \"Standard_RAGZRS\",\n  /** StandardV2LRS */\n  StandardV2LRS = \"StandardV2_LRS\",\n  /** StandardV2GRS */\n  StandardV2GRS = \"StandardV2_GRS\",\n  /** StandardV2ZRS */\n  StandardV2ZRS = \"StandardV2_ZRS\",\n  /** StandardV2Gzrs */\n  StandardV2Gzrs = \"StandardV2_GZRS\",\n  /** PremiumV2LRS */\n  PremiumV2LRS = \"PremiumV2_LRS\",\n  /** PremiumV2ZRS */\n  PremiumV2ZRS = \"PremiumV2_ZRS\",\n}\n\n/**\n * Defines values for SkuName. \\\n * {@link KnownSkuName} can be used interchangeably with SkuName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard_LRS** \\\n * **Standard_GRS** \\\n * **Standard_RAGRS** \\\n * **Standard_ZRS** \\\n * **Premium_LRS** \\\n * **Premium_ZRS** \\\n * **Standard_GZRS** \\\n * **Standard_RAGZRS** \\\n * **StandardV2_LRS** \\\n * **StandardV2_GRS** \\\n * **StandardV2_ZRS** \\\n * **StandardV2_GZRS** \\\n * **PremiumV2_LRS** \\\n * **PremiumV2_ZRS**\n */\nexport type SkuName = string;\n\n/** Known values of {@link ListContainersInclude} that the service accepts. */\nexport enum KnownListContainersInclude {\n  /** Deleted */\n  Deleted = \"deleted\",\n}\n\n/**\n * Defines values for ListContainersInclude. \\\n * {@link KnownListContainersInclude} can be used interchangeably with ListContainersInclude,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **deleted**\n */\nexport type ListContainersInclude = string;\n\n/** Known values of {@link LeaseStatus} that the service accepts. */\nexport enum KnownLeaseStatus {\n  /** Locked */\n  Locked = \"Locked\",\n  /** Unlocked */\n  Unlocked = \"Unlocked\",\n}\n\n/**\n * Defines values for LeaseStatus. \\\n * {@link KnownLeaseStatus} can be used interchangeably with LeaseStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Locked** \\\n * **Unlocked**\n */\nexport type LeaseStatus = string;\n\n/** Known values of {@link LeaseState} that the service accepts. */\nexport enum KnownLeaseState {\n  /** Available */\n  Available = \"Available\",\n  /** Leased */\n  Leased = \"Leased\",\n  /** Expired */\n  Expired = \"Expired\",\n  /** Breaking */\n  Breaking = \"Breaking\",\n  /** Broken */\n  Broken = \"Broken\",\n}\n\n/**\n * Defines values for LeaseState. \\\n * {@link KnownLeaseState} can be used interchangeably with LeaseState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Available** \\\n * **Leased** \\\n * **Expired** \\\n * **Breaking** \\\n * **Broken**\n */\nexport type LeaseState = string;\n\n/** Known values of {@link LeaseDuration} that the service accepts. */\nexport enum KnownLeaseDuration {\n  /** Infinite */\n  Infinite = \"Infinite\",\n  /** Fixed */\n  Fixed = \"Fixed\",\n}\n\n/**\n * Defines values for LeaseDuration. \\\n * {@link KnownLeaseDuration} can be used interchangeably with LeaseDuration,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Infinite** \\\n * **Fixed**\n */\nexport type LeaseDuration = string;\n\n/** Known values of {@link ImmutabilityPolicyState} that the service accepts. */\nexport enum KnownImmutabilityPolicyState {\n  /** Locked */\n  Locked = \"Locked\",\n  /** Unlocked */\n  Unlocked = \"Unlocked\",\n}\n\n/**\n * Defines values for ImmutabilityPolicyState. \\\n * {@link KnownImmutabilityPolicyState} can be used interchangeably with ImmutabilityPolicyState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Locked** \\\n * **Unlocked**\n */\nexport type ImmutabilityPolicyState = string;\n\n/** Known values of {@link ImmutabilityPolicyUpdateType} that the service accepts. */\nexport enum KnownImmutabilityPolicyUpdateType {\n  /** Put */\n  Put = \"put\",\n  /** Lock */\n  Lock = \"lock\",\n  /** Extend */\n  Extend = \"extend\",\n}\n\n/**\n * Defines values for ImmutabilityPolicyUpdateType. \\\n * {@link KnownImmutabilityPolicyUpdateType} can be used interchangeably with ImmutabilityPolicyUpdateType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **put** \\\n * **lock** \\\n * **extend**\n */\nexport type ImmutabilityPolicyUpdateType = string;\n\n/** Known values of {@link MigrationState} that the service accepts. */\nexport enum KnownMigrationState {\n  /** InProgress */\n  InProgress = \"InProgress\",\n  /** Completed */\n  Completed = \"Completed\",\n}\n\n/**\n * Defines values for MigrationState. \\\n * {@link KnownMigrationState} can be used interchangeably with MigrationState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **InProgress** \\\n * **Completed**\n */\nexport type MigrationState = string;\n\n/** Known values of {@link LeaseContainerRequestAction} that the service accepts. */\nexport enum KnownLeaseContainerRequestAction {\n  /** Acquire */\n  Acquire = \"Acquire\",\n  /** Renew */\n  Renew = \"Renew\",\n  /** Change */\n  Change = \"Change\",\n  /** Release */\n  Release = \"Release\",\n  /** Break */\n  Break = \"Break\",\n}\n\n/**\n * Defines values for LeaseContainerRequestAction. \\\n * {@link KnownLeaseContainerRequestAction} can be used interchangeably with LeaseContainerRequestAction,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Acquire** \\\n * **Renew** \\\n * **Change** \\\n * **Release** \\\n * **Break**\n */\nexport type LeaseContainerRequestAction = string;\n\n/** Known values of {@link EnabledProtocols} that the service accepts. */\nexport enum KnownEnabledProtocols {\n  /** SMB */\n  SMB = \"SMB\",\n  /** NFS */\n  NFS = \"NFS\",\n}\n\n/**\n * Defines values for EnabledProtocols. \\\n * {@link KnownEnabledProtocols} can be used interchangeably with EnabledProtocols,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **SMB** \\\n * **NFS**\n */\nexport type EnabledProtocols = string;\n\n/** Known values of {@link RootSquashType} that the service accepts. */\nexport enum KnownRootSquashType {\n  /** NoRootSquash */\n  NoRootSquash = \"NoRootSquash\",\n  /** RootSquash */\n  RootSquash = \"RootSquash\",\n  /** AllSquash */\n  AllSquash = \"AllSquash\",\n}\n\n/**\n * Defines values for RootSquashType. \\\n * {@link KnownRootSquashType} can be used interchangeably with RootSquashType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NoRootSquash** \\\n * **RootSquash** \\\n * **AllSquash**\n */\nexport type RootSquashType = string;\n\n/** Known values of {@link ShareAccessTier} that the service accepts. */\nexport enum KnownShareAccessTier {\n  /** TransactionOptimized */\n  TransactionOptimized = \"TransactionOptimized\",\n  /** Hot */\n  Hot = \"Hot\",\n  /** Cool */\n  Cool = \"Cool\",\n  /** Premium */\n  Premium = \"Premium\",\n}\n\n/**\n * Defines values for ShareAccessTier. \\\n * {@link KnownShareAccessTier} can be used interchangeably with ShareAccessTier,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **TransactionOptimized** \\\n * **Hot** \\\n * **Cool** \\\n * **Premium**\n */\nexport type ShareAccessTier = string;\n\n/** Known values of {@link LeaseShareAction} that the service accepts. */\nexport enum KnownLeaseShareAction {\n  /** Acquire */\n  Acquire = \"Acquire\",\n  /** Renew */\n  Renew = \"Renew\",\n  /** Change */\n  Change = \"Change\",\n  /** Release */\n  Release = \"Release\",\n  /** Break */\n  Break = \"Break\",\n}\n\n/**\n * Defines values for LeaseShareAction. \\\n * {@link KnownLeaseShareAction} can be used interchangeably with LeaseShareAction,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Acquire** \\\n * **Renew** \\\n * **Change** \\\n * **Release** \\\n * **Break**\n */\nexport type LeaseShareAction = string;\n\n/** Known values of {@link Kind} that the service accepts. */\nexport enum KnownKind {\n  /** Storage */\n  Storage = \"Storage\",\n  /** StorageV2 */\n  StorageV2 = \"StorageV2\",\n  /** BlobStorage */\n  BlobStorage = \"BlobStorage\",\n  /** FileStorage */\n  FileStorage = \"FileStorage\",\n  /** BlockBlobStorage */\n  BlockBlobStorage = \"BlockBlobStorage\",\n}\n\n/**\n * Defines values for Kind. \\\n * {@link KnownKind} can be used interchangeably with Kind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Storage** \\\n * **StorageV2** \\\n * **BlobStorage** \\\n * **FileStorage** \\\n * **BlockBlobStorage**\n */\nexport type Kind = string;\n\n/** Known values of {@link ReasonCode} that the service accepts. */\nexport enum KnownReasonCode {\n  /** QuotaId */\n  QuotaId = \"QuotaId\",\n  /** NotAvailableForSubscription */\n  NotAvailableForSubscription = \"NotAvailableForSubscription\",\n}\n\n/**\n * Defines values for ReasonCode. \\\n * {@link KnownReasonCode} can be used interchangeably with ReasonCode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **QuotaId** \\\n * **NotAvailableForSubscription**\n */\nexport type ReasonCode = string;\n\n/** Known values of {@link ExtendedLocationTypes} that the service accepts. */\nexport enum KnownExtendedLocationTypes {\n  /** EdgeZone */\n  EdgeZone = \"EdgeZone\",\n}\n\n/**\n * Defines values for ExtendedLocationTypes. \\\n * {@link KnownExtendedLocationTypes} can be used interchangeably with ExtendedLocationTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **EdgeZone**\n */\nexport type ExtendedLocationTypes = string;\n\n/** Known values of {@link IdentityType} that the service accepts. */\nexport enum KnownIdentityType {\n  /** None */\n  None = \"None\",\n  /** SystemAssigned */\n  SystemAssigned = \"SystemAssigned\",\n  /** UserAssigned */\n  UserAssigned = \"UserAssigned\",\n  /** SystemAssignedUserAssigned */\n  SystemAssignedUserAssigned = \"SystemAssigned,UserAssigned\",\n}\n\n/**\n * Defines values for IdentityType. \\\n * {@link KnownIdentityType} can be used interchangeably with IdentityType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **SystemAssigned** \\\n * **UserAssigned** \\\n * **SystemAssigned,UserAssigned**\n */\nexport type IdentityType = string;\n\n/** Known values of {@link AllowedCopyScope} that the service accepts. */\nexport enum KnownAllowedCopyScope {\n  /** PrivateLink */\n  PrivateLink = \"PrivateLink\",\n  /** AAD */\n  AAD = \"AAD\",\n}\n\n/**\n * Defines values for AllowedCopyScope. \\\n * {@link KnownAllowedCopyScope} can be used interchangeably with AllowedCopyScope,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **PrivateLink** \\\n * **AAD**\n */\nexport type AllowedCopyScope = string;\n\n/** Known values of {@link PublicNetworkAccess} that the service accepts. */\nexport enum KnownPublicNetworkAccess {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** SecuredByPerimeter */\n  SecuredByPerimeter = \"SecuredByPerimeter\",\n}\n\n/**\n * Defines values for PublicNetworkAccess. \\\n * {@link KnownPublicNetworkAccess} can be used interchangeably with PublicNetworkAccess,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled** \\\n * **SecuredByPerimeter**\n */\nexport type PublicNetworkAccess = string;\n\n/** Known values of {@link ExpirationAction} that the service accepts. */\nexport enum KnownExpirationAction {\n  /** Log */\n  Log = \"Log\",\n  /** Block */\n  Block = \"Block\",\n}\n\n/**\n * Defines values for ExpirationAction. \\\n * {@link KnownExpirationAction} can be used interchangeably with ExpirationAction,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Log** \\\n * **Block**\n */\nexport type ExpirationAction = string;\n\n/** Known values of {@link KeyType} that the service accepts. */\nexport enum KnownKeyType {\n  /** Service */\n  Service = \"Service\",\n  /** Account */\n  Account = \"Account\",\n}\n\n/**\n * Defines values for KeyType. \\\n * {@link KnownKeyType} can be used interchangeably with KeyType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Service** \\\n * **Account**\n */\nexport type KeyType = string;\n\n/** Known values of {@link KeySource} that the service accepts. */\nexport enum KnownKeySource {\n  /** MicrosoftStorage */\n  MicrosoftStorage = \"Microsoft.Storage\",\n  /** MicrosoftKeyvault */\n  MicrosoftKeyvault = \"Microsoft.Keyvault\",\n}\n\n/**\n * Defines values for KeySource. \\\n * {@link KnownKeySource} can be used interchangeably with KeySource,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Microsoft.Storage** \\\n * **Microsoft.Keyvault**\n */\nexport type KeySource = string;\n\n/** Known values of {@link Bypass} that the service accepts. */\nexport enum KnownBypass {\n  /** None */\n  None = \"None\",\n  /** Logging */\n  Logging = \"Logging\",\n  /** Metrics */\n  Metrics = \"Metrics\",\n  /** AzureServices */\n  AzureServices = \"AzureServices\",\n}\n\n/**\n * Defines values for Bypass. \\\n * {@link KnownBypass} can be used interchangeably with Bypass,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Logging** \\\n * **Metrics** \\\n * **AzureServices**\n */\nexport type Bypass = string;\n\n/** Known values of {@link State} that the service accepts. */\nexport enum KnownState {\n  /** Provisioning */\n  Provisioning = \"Provisioning\",\n  /** Deprovisioning */\n  Deprovisioning = \"Deprovisioning\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** NetworkSourceDeleted */\n  NetworkSourceDeleted = \"NetworkSourceDeleted\",\n}\n\n/**\n * Defines values for State. \\\n * {@link KnownState} can be used interchangeably with State,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Provisioning** \\\n * **Deprovisioning** \\\n * **Succeeded** \\\n * **Failed** \\\n * **NetworkSourceDeleted**\n */\nexport type State = string;\n\n/** Known values of {@link DirectoryServiceOptions} that the service accepts. */\nexport enum KnownDirectoryServiceOptions {\n  /** None */\n  None = \"None\",\n  /** Aadds */\n  Aadds = \"AADDS\",\n  /** AD */\n  AD = \"AD\",\n  /** Aadkerb */\n  Aadkerb = \"AADKERB\",\n}\n\n/**\n * Defines values for DirectoryServiceOptions. \\\n * {@link KnownDirectoryServiceOptions} can be used interchangeably with DirectoryServiceOptions,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **AADDS** \\\n * **AD** \\\n * **AADKERB**\n */\nexport type DirectoryServiceOptions = string;\n\n/** Known values of {@link AccountType} that the service accepts. */\nexport enum KnownAccountType {\n  /** User */\n  User = \"User\",\n  /** Computer */\n  Computer = \"Computer\",\n}\n\n/**\n * Defines values for AccountType. \\\n * {@link KnownAccountType} can be used interchangeably with AccountType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User** \\\n * **Computer**\n */\nexport type AccountType = string;\n\n/** Known values of {@link DefaultSharePermission} that the service accepts. */\nexport enum KnownDefaultSharePermission {\n  /** None */\n  None = \"None\",\n  /** StorageFileDataSmbShareReader */\n  StorageFileDataSmbShareReader = \"StorageFileDataSmbShareReader\",\n  /** StorageFileDataSmbShareContributor */\n  StorageFileDataSmbShareContributor = \"StorageFileDataSmbShareContributor\",\n  /** StorageFileDataSmbShareElevatedContributor */\n  StorageFileDataSmbShareElevatedContributor = \"StorageFileDataSmbShareElevatedContributor\",\n}\n\n/**\n * Defines values for DefaultSharePermission. \\\n * {@link KnownDefaultSharePermission} can be used interchangeably with DefaultSharePermission,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **StorageFileDataSmbShareReader** \\\n * **StorageFileDataSmbShareContributor** \\\n * **StorageFileDataSmbShareElevatedContributor**\n */\nexport type DefaultSharePermission = string;\n\n/** Known values of {@link LargeFileSharesState} that the service accepts. */\nexport enum KnownLargeFileSharesState {\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** Enabled */\n  Enabled = \"Enabled\",\n}\n\n/**\n * Defines values for LargeFileSharesState. \\\n * {@link KnownLargeFileSharesState} can be used interchangeably with LargeFileSharesState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Disabled** \\\n * **Enabled**\n */\nexport type LargeFileSharesState = string;\n\n/** Known values of {@link RoutingChoice} that the service accepts. */\nexport enum KnownRoutingChoice {\n  /** MicrosoftRouting */\n  MicrosoftRouting = \"MicrosoftRouting\",\n  /** InternetRouting */\n  InternetRouting = \"InternetRouting\",\n}\n\n/**\n * Defines values for RoutingChoice. \\\n * {@link KnownRoutingChoice} can be used interchangeably with RoutingChoice,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **MicrosoftRouting** \\\n * **InternetRouting**\n */\nexport type RoutingChoice = string;\n\n/** Known values of {@link MinimumTlsVersion} that the service accepts. */\nexport enum KnownMinimumTlsVersion {\n  /** TLS10 */\n  TLS10 = \"TLS1_0\",\n  /** TLS11 */\n  TLS11 = \"TLS1_1\",\n  /** TLS12 */\n  TLS12 = \"TLS1_2\",\n  /** TLS13 */\n  TLS13 = \"TLS1_3\",\n}\n\n/**\n * Defines values for MinimumTlsVersion. \\\n * {@link KnownMinimumTlsVersion} can be used interchangeably with MinimumTlsVersion,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **TLS1_0** \\\n * **TLS1_1** \\\n * **TLS1_2** \\\n * **TLS1_3**\n */\nexport type MinimumTlsVersion = string;\n\n/** Known values of {@link AccountImmutabilityPolicyState} that the service accepts. */\nexport enum KnownAccountImmutabilityPolicyState {\n  /** Unlocked */\n  Unlocked = \"Unlocked\",\n  /** Locked */\n  Locked = \"Locked\",\n  /** Disabled */\n  Disabled = \"Disabled\",\n}\n\n/**\n * Defines values for AccountImmutabilityPolicyState. \\\n * {@link KnownAccountImmutabilityPolicyState} can be used interchangeably with AccountImmutabilityPolicyState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unlocked** \\\n * **Locked** \\\n * **Disabled**\n */\nexport type AccountImmutabilityPolicyState = string;\n\n/** Known values of {@link DnsEndpointType} that the service accepts. */\nexport enum KnownDnsEndpointType {\n  /** Standard */\n  Standard = \"Standard\",\n  /** AzureDnsZone */\n  AzureDnsZone = \"AzureDnsZone\",\n}\n\n/**\n * Defines values for DnsEndpointType. \\\n * {@link KnownDnsEndpointType} can be used interchangeably with DnsEndpointType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard** \\\n * **AzureDnsZone**\n */\nexport type DnsEndpointType = string;\n\n/** Known values of {@link GeoReplicationStatus} that the service accepts. */\nexport enum KnownGeoReplicationStatus {\n  /** Live */\n  Live = \"Live\",\n  /** Bootstrap */\n  Bootstrap = \"Bootstrap\",\n  /** Unavailable */\n  Unavailable = \"Unavailable\",\n}\n\n/**\n * Defines values for GeoReplicationStatus. \\\n * {@link KnownGeoReplicationStatus} can be used interchangeably with GeoReplicationStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Live** \\\n * **Bootstrap** \\\n * **Unavailable**\n */\nexport type GeoReplicationStatus = string;\n\n/** Known values of {@link PostFailoverRedundancy} that the service accepts. */\nexport enum KnownPostFailoverRedundancy {\n  /** StandardLRS */\n  StandardLRS = \"Standard_LRS\",\n  /** StandardZRS */\n  StandardZRS = \"Standard_ZRS\",\n}\n\n/**\n * Defines values for PostFailoverRedundancy. \\\n * {@link KnownPostFailoverRedundancy} can be used interchangeably with PostFailoverRedundancy,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard_LRS** \\\n * **Standard_ZRS**\n */\nexport type PostFailoverRedundancy = string;\n\n/** Known values of {@link PostPlannedFailoverRedundancy} that the service accepts. */\nexport enum KnownPostPlannedFailoverRedundancy {\n  /** StandardGRS */\n  StandardGRS = \"Standard_GRS\",\n  /** StandardGzrs */\n  StandardGzrs = \"Standard_GZRS\",\n  /** StandardRagrs */\n  StandardRagrs = \"Standard_RAGRS\",\n  /** StandardRagzrs */\n  StandardRagzrs = \"Standard_RAGZRS\",\n}\n\n/**\n * Defines values for PostPlannedFailoverRedundancy. \\\n * {@link KnownPostPlannedFailoverRedundancy} can be used interchangeably with PostPlannedFailoverRedundancy,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard_GRS** \\\n * **Standard_GZRS** \\\n * **Standard_RAGRS** \\\n * **Standard_RAGZRS**\n */\nexport type PostPlannedFailoverRedundancy = string;\n\n/** Known values of {@link PrivateEndpointServiceConnectionStatus} that the service accepts. */\nexport enum KnownPrivateEndpointServiceConnectionStatus {\n  /** Pending */\n  Pending = \"Pending\",\n  /** Approved */\n  Approved = \"Approved\",\n  /** Rejected */\n  Rejected = \"Rejected\",\n}\n\n/**\n * Defines values for PrivateEndpointServiceConnectionStatus. \\\n * {@link KnownPrivateEndpointServiceConnectionStatus} can be used interchangeably with PrivateEndpointServiceConnectionStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Pending** \\\n * **Approved** \\\n * **Rejected**\n */\nexport type PrivateEndpointServiceConnectionStatus = string;\n\n/** Known values of {@link PrivateEndpointConnectionProvisioningState} that the service accepts. */\nexport enum KnownPrivateEndpointConnectionProvisioningState {\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Creating */\n  Creating = \"Creating\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Failed */\n  Failed = \"Failed\",\n}\n\n/**\n * Defines values for PrivateEndpointConnectionProvisioningState. \\\n * {@link KnownPrivateEndpointConnectionProvisioningState} can be used interchangeably with PrivateEndpointConnectionProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded** \\\n * **Creating** \\\n * **Deleting** \\\n * **Failed**\n */\nexport type PrivateEndpointConnectionProvisioningState = string;\n\n/** Known values of {@link BlobRestoreProgressStatus} that the service accepts. */\nexport enum KnownBlobRestoreProgressStatus {\n  /** InProgress */\n  InProgress = \"InProgress\",\n  /** Complete */\n  Complete = \"Complete\",\n  /** Failed */\n  Failed = \"Failed\",\n}\n\n/**\n * Defines values for BlobRestoreProgressStatus. \\\n * {@link KnownBlobRestoreProgressStatus} can be used interchangeably with BlobRestoreProgressStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **InProgress** \\\n * **Complete** \\\n * **Failed**\n */\nexport type BlobRestoreProgressStatus = string;\n\n/** Known values of {@link SkuConversionStatus} that the service accepts. */\nexport enum KnownSkuConversionStatus {\n  /** InProgress */\n  InProgress = \"InProgress\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n}\n\n/**\n * Defines values for SkuConversionStatus. \\\n * {@link KnownSkuConversionStatus} can be used interchangeably with SkuConversionStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **InProgress** \\\n * **Succeeded** \\\n * **Failed**\n */\nexport type SkuConversionStatus = string;\n\n/** Known values of {@link Services} that the service accepts. */\nexport enum KnownServices {\n  /** B */\n  B = \"b\",\n  /** Q */\n  Q = \"q\",\n  /** T */\n  T = \"t\",\n  /** F */\n  F = \"f\",\n}\n\n/**\n * Defines values for Services. \\\n * {@link KnownServices} can be used interchangeably with Services,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **b** \\\n * **q** \\\n * **t** \\\n * **f**\n */\nexport type Services = string;\n\n/** Known values of {@link SignedResourceTypes} that the service accepts. */\nexport enum KnownSignedResourceTypes {\n  /** S */\n  S = \"s\",\n  /** C */\n  C = \"c\",\n  /** O */\n  O = \"o\",\n}\n\n/**\n * Defines values for SignedResourceTypes. \\\n * {@link KnownSignedResourceTypes} can be used interchangeably with SignedResourceTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **s** \\\n * **c** \\\n * **o**\n */\nexport type SignedResourceTypes = string;\n\n/** Known values of {@link Permissions} that the service accepts. */\nexport enum KnownPermissions {\n  /** R */\n  R = \"r\",\n  /** D */\n  D = \"d\",\n  /** W */\n  W = \"w\",\n  /** L */\n  L = \"l\",\n  /** A */\n  A = \"a\",\n  /** C */\n  C = \"c\",\n  /** U */\n  U = \"u\",\n  /** P */\n  P = \"p\",\n}\n\n/**\n * Defines values for Permissions. \\\n * {@link KnownPermissions} can be used interchangeably with Permissions,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **r** \\\n * **d** \\\n * **w** \\\n * **l** \\\n * **a** \\\n * **c** \\\n * **u** \\\n * **p**\n */\nexport type Permissions = string;\n\n/** Known values of {@link SignedResource} that the service accepts. */\nexport enum KnownSignedResource {\n  /** B */\n  B = \"b\",\n  /** C */\n  C = \"c\",\n  /** F */\n  F = \"f\",\n  /** S */\n  S = \"s\",\n}\n\n/**\n * Defines values for SignedResource. \\\n * {@link KnownSignedResource} can be used interchangeably with SignedResource,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **b** \\\n * **c** \\\n * **f** \\\n * **s**\n */\nexport type SignedResource = string;\n\n/** Known values of {@link MigrationStatus} that the service accepts. */\nexport enum KnownMigrationStatus {\n  /** Invalid */\n  Invalid = \"Invalid\",\n  /** SubmittedForConversion */\n  SubmittedForConversion = \"SubmittedForConversion\",\n  /** InProgress */\n  InProgress = \"InProgress\",\n  /** Complete */\n  Complete = \"Complete\",\n  /** Failed */\n  Failed = \"Failed\",\n}\n\n/**\n * Defines values for MigrationStatus. \\\n * {@link KnownMigrationStatus} can be used interchangeably with MigrationStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Invalid** \\\n * **SubmittedForConversion** \\\n * **InProgress** \\\n * **Complete** \\\n * **Failed**\n */\nexport type MigrationStatus = string;\n\n/** Known values of {@link MigrationName} that the service accepts. */\nexport enum KnownMigrationName {\n  /** Default */\n  Default = \"default\",\n}\n\n/**\n * Defines values for MigrationName. \\\n * {@link KnownMigrationName} can be used interchangeably with MigrationName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **default**\n */\nexport type MigrationName = string;\n\n/** Known values of {@link ManagementPolicyName} that the service accepts. */\nexport enum KnownManagementPolicyName {\n  /** Default */\n  Default = \"default\",\n}\n\n/**\n * Defines values for ManagementPolicyName. \\\n * {@link KnownManagementPolicyName} can be used interchangeably with ManagementPolicyName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **default**\n */\nexport type ManagementPolicyName = string;\n\n/** Known values of {@link RuleType} that the service accepts. */\nexport enum KnownRuleType {\n  /** Lifecycle */\n  Lifecycle = \"Lifecycle\",\n}\n\n/**\n * Defines values for RuleType. \\\n * {@link KnownRuleType} can be used interchangeably with RuleType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Lifecycle**\n */\nexport type RuleType = string;\n\n/** Known values of {@link BlobInventoryPolicyName} that the service accepts. */\nexport enum KnownBlobInventoryPolicyName {\n  /** Default */\n  Default = \"default\",\n}\n\n/**\n * Defines values for BlobInventoryPolicyName. \\\n * {@link KnownBlobInventoryPolicyName} can be used interchangeably with BlobInventoryPolicyName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **default**\n */\nexport type BlobInventoryPolicyName = string;\n\n/** Known values of {@link InventoryRuleType} that the service accepts. */\nexport enum KnownInventoryRuleType {\n  /** Inventory */\n  Inventory = \"Inventory\",\n}\n\n/**\n * Defines values for InventoryRuleType. \\\n * {@link KnownInventoryRuleType} can be used interchangeably with InventoryRuleType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Inventory**\n */\nexport type InventoryRuleType = string;\n\n/** Known values of {@link Format} that the service accepts. */\nexport enum KnownFormat {\n  /** Csv */\n  Csv = \"Csv\",\n  /** Parquet */\n  Parquet = \"Parquet\",\n}\n\n/**\n * Defines values for Format. \\\n * {@link KnownFormat} can be used interchangeably with Format,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Csv** \\\n * **Parquet**\n */\nexport type Format = string;\n\n/** Known values of {@link Schedule} that the service accepts. */\nexport enum KnownSchedule {\n  /** Daily */\n  Daily = \"Daily\",\n  /** Weekly */\n  Weekly = \"Weekly\",\n}\n\n/**\n * Defines values for Schedule. \\\n * {@link KnownSchedule} can be used interchangeably with Schedule,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Daily** \\\n * **Weekly**\n */\nexport type Schedule = string;\n\n/** Known values of {@link ObjectType} that the service accepts. */\nexport enum KnownObjectType {\n  /** Blob */\n  Blob = \"Blob\",\n  /** Container */\n  Container = \"Container\",\n}\n\n/**\n * Defines values for ObjectType. \\\n * {@link KnownObjectType} can be used interchangeably with ObjectType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Blob** \\\n * **Container**\n */\nexport type ObjectType = string;\n\n/** Known values of {@link CreatedByType} that the service accepts. */\nexport enum KnownCreatedByType {\n  /** User */\n  User = \"User\",\n  /** Application */\n  Application = \"Application\",\n  /** ManagedIdentity */\n  ManagedIdentity = \"ManagedIdentity\",\n  /** Key */\n  Key = \"Key\",\n}\n\n/**\n * Defines values for CreatedByType. \\\n * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User** \\\n * **Application** \\\n * **ManagedIdentity** \\\n * **Key**\n */\nexport type CreatedByType = string;\n\n/** Known values of {@link ListLocalUserIncludeParam} that the service accepts. */\nexport enum KnownListLocalUserIncludeParam {\n  /** Nfsv3 */\n  Nfsv3 = \"nfsv3\",\n}\n\n/**\n * Defines values for ListLocalUserIncludeParam. \\\n * {@link KnownListLocalUserIncludeParam} can be used interchangeably with ListLocalUserIncludeParam,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **nfsv3**\n */\nexport type ListLocalUserIncludeParam = string;\n\n/** Known values of {@link EncryptionScopeSource} that the service accepts. */\nexport enum KnownEncryptionScopeSource {\n  /** MicrosoftStorage */\n  MicrosoftStorage = \"Microsoft.Storage\",\n  /** MicrosoftKeyVault */\n  MicrosoftKeyVault = \"Microsoft.KeyVault\",\n}\n\n/**\n * Defines values for EncryptionScopeSource. \\\n * {@link KnownEncryptionScopeSource} can be used interchangeably with EncryptionScopeSource,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Microsoft.Storage** \\\n * **Microsoft.KeyVault**\n */\nexport type EncryptionScopeSource = string;\n\n/** Known values of {@link EncryptionScopeState} that the service accepts. */\nexport enum KnownEncryptionScopeState {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\",\n}\n\n/**\n * Defines values for EncryptionScopeState. \\\n * {@link KnownEncryptionScopeState} can be used interchangeably with EncryptionScopeState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type EncryptionScopeState = string;\n\n/** Known values of {@link ListEncryptionScopesInclude} that the service accepts. */\nexport enum KnownListEncryptionScopesInclude {\n  /** All */\n  All = \"All\",\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\",\n}\n\n/**\n * Defines values for ListEncryptionScopesInclude. \\\n * {@link KnownListEncryptionScopesInclude} can be used interchangeably with ListEncryptionScopesInclude,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **All** \\\n * **Enabled** \\\n * **Disabled**\n */\nexport type ListEncryptionScopesInclude = string;\n\n/** Known values of {@link NetworkSecurityPerimeterConfigurationProvisioningState} that the service accepts. */\nexport enum KnownNetworkSecurityPerimeterConfigurationProvisioningState {\n  /** Accepted */\n  Accepted = \"Accepted\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Canceled */\n  Canceled = \"Canceled\",\n}\n\n/**\n * Defines values for NetworkSecurityPerimeterConfigurationProvisioningState. \\\n * {@link KnownNetworkSecurityPerimeterConfigurationProvisioningState} can be used interchangeably with NetworkSecurityPerimeterConfigurationProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Accepted** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Deleting** \\\n * **Canceled**\n */\nexport type NetworkSecurityPerimeterConfigurationProvisioningState = string;\n\n/** Known values of {@link IssueType} that the service accepts. */\nexport enum KnownIssueType {\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** ConfigurationPropagationFailure */\n  ConfigurationPropagationFailure = \"ConfigurationPropagationFailure\",\n}\n\n/**\n * Defines values for IssueType. \\\n * {@link KnownIssueType} can be used interchangeably with IssueType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **ConfigurationPropagationFailure**\n */\nexport type IssueType = string;\n\n/** Known values of {@link Severity} that the service accepts. */\nexport enum KnownSeverity {\n  /** Warning */\n  Warning = \"Warning\",\n  /** Error */\n  Error = \"Error\",\n}\n\n/**\n * Defines values for Severity. \\\n * {@link KnownSeverity} can be used interchangeably with Severity,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Warning** \\\n * **Error**\n */\nexport type Severity = string;\n\n/** Known values of {@link ResourceAssociationAccessMode} that the service accepts. */\nexport enum KnownResourceAssociationAccessMode {\n  /** Enforced */\n  Enforced = \"Enforced\",\n  /** Learning */\n  Learning = \"Learning\",\n  /** Audit */\n  Audit = \"Audit\",\n}\n\n/**\n * Defines values for ResourceAssociationAccessMode. \\\n * {@link KnownResourceAssociationAccessMode} can be used interchangeably with ResourceAssociationAccessMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enforced** \\\n * **Learning** \\\n * **Audit**\n */\nexport type ResourceAssociationAccessMode = string;\n\n/** Known values of {@link NspAccessRuleDirection} that the service accepts. */\nexport enum KnownNspAccessRuleDirection {\n  /** Inbound */\n  Inbound = \"Inbound\",\n  /** Outbound */\n  Outbound = \"Outbound\",\n}\n\n/**\n * Defines values for NspAccessRuleDirection. \\\n * {@link KnownNspAccessRuleDirection} can be used interchangeably with NspAccessRuleDirection,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Inbound** \\\n * **Outbound**\n */\nexport type NspAccessRuleDirection = string;\n\n/** Known values of {@link RunStatusEnum} that the service accepts. */\nexport enum KnownRunStatusEnum {\n  /** InProgress */\n  InProgress = \"InProgress\",\n  /** Finished */\n  Finished = \"Finished\",\n}\n\n/**\n * Defines values for RunStatusEnum. \\\n * {@link KnownRunStatusEnum} can be used interchangeably with RunStatusEnum,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **InProgress** \\\n * **Finished**\n */\nexport type RunStatusEnum = string;\n\n/** Known values of {@link RunResult} that the service accepts. */\nexport enum KnownRunResult {\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n}\n\n/**\n * Defines values for RunResult. \\\n * {@link KnownRunResult} can be used interchangeably with RunResult,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded** \\\n * **Failed**\n */\nexport type RunResult = string;\n/** Defines values for SkuTier. */\nexport type SkuTier = \"Standard\" | \"Premium\";\n/** Defines values for PublicAccess. */\nexport type PublicAccess = \"Container\" | \"Blob\" | \"None\";\n/** Defines values for Reason. */\nexport type Reason = \"AccountNameInvalid\" | \"AlreadyExists\";\n/** Defines values for DefaultAction. */\nexport type DefaultAction = \"Allow\" | \"Deny\";\n/** Defines values for AccessTier. */\nexport type AccessTier = \"Hot\" | \"Cool\" | \"Premium\" | \"Cold\";\n/** Defines values for ProvisioningState. */\nexport type ProvisioningState =\n  | \"Creating\"\n  | \"ResolvingDNS\"\n  | \"Succeeded\"\n  | \"ValidateSubscriptionQuotaBegin\"\n  | \"ValidateSubscriptionQuotaEnd\"\n  | \"Accepted\"\n  | \"Deleting\"\n  | \"Canceled\"\n  | \"Failed\";\n/** Defines values for AccountStatus. */\nexport type AccountStatus = \"available\" | \"unavailable\";\n/** Defines values for StorageAccountExpand. */\nexport type StorageAccountExpand = \"geoReplicationStats\" | \"blobRestoreStatus\";\n/** Defines values for KeyPermission. */\nexport type KeyPermission = \"Read\" | \"Full\";\n/** Defines values for UsageUnit. */\nexport type UsageUnit =\n  | \"Count\"\n  | \"Bytes\"\n  | \"Seconds\"\n  | \"Percent\"\n  | \"CountsPerSecond\"\n  | \"BytesPerSecond\";\n/** Defines values for HttpProtocol. */\nexport type HttpProtocol = \"https,http\" | \"https\";\n/** Defines values for TriggerType. */\nexport type TriggerType = \"RunOnce\" | \"OnSchedule\";\n\n/** Optional parameters. */\nexport interface BlobServicesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type BlobServicesListResponse = BlobServiceItems;\n\n/** Optional parameters. */\nexport interface BlobServicesSetServicePropertiesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the setServiceProperties operation. */\nexport type BlobServicesSetServicePropertiesResponse = BlobServiceProperties;\n\n/** Optional parameters. */\nexport interface BlobServicesGetServicePropertiesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getServiceProperties operation. */\nexport type BlobServicesGetServicePropertiesResponse = BlobServiceProperties;\n\n/** Optional parameters. */\nexport interface BlobContainersListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional. Specified maximum number of containers that can be included in the list. */\n  maxpagesize?: string;\n  /** Optional. When specified, only container names starting with the filter will be listed. */\n  filter?: string;\n  /** Optional, used to include the properties for soft deleted blob containers. */\n  include?: ListContainersInclude;\n}\n\n/** Contains response data for the list operation. */\nexport type BlobContainersListResponse = ListContainerItems;\n\n/** Optional parameters. */\nexport interface BlobContainersCreateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the create operation. */\nexport type BlobContainersCreateResponse = BlobContainer;\n\n/** Optional parameters. */\nexport interface BlobContainersUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type BlobContainersUpdateResponse = BlobContainer;\n\n/** Optional parameters. */\nexport interface BlobContainersGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type BlobContainersGetResponse = BlobContainer;\n\n/** Optional parameters. */\nexport interface BlobContainersDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface BlobContainersSetLegalHoldOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the setLegalHold operation. */\nexport type BlobContainersSetLegalHoldResponse = LegalHold;\n\n/** Optional parameters. */\nexport interface BlobContainersClearLegalHoldOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the clearLegalHold operation. */\nexport type BlobContainersClearLegalHoldResponse = LegalHold;\n\n/** Optional parameters. */\nexport interface BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams\n  extends coreClient.OperationOptions {\n  /** The ImmutabilityPolicy Properties that will be created or updated to a blob container. */\n  parameters?: ImmutabilityPolicy;\n  /** The entity state (ETag) version of the immutability policy to update must be returned to the server for all update operations. The ETag value must include the leading and trailing double quotes as returned by the service. */\n  ifMatch?: string;\n}\n\n/** Contains response data for the createOrUpdateImmutabilityPolicy operation. */\nexport type BlobContainersCreateOrUpdateImmutabilityPolicyResponse =\n  BlobContainersCreateOrUpdateImmutabilityPolicyHeaders & ImmutabilityPolicy;\n\n/** Optional parameters. */\nexport interface BlobContainersGetImmutabilityPolicyOptionalParams\n  extends coreClient.OperationOptions {\n  /** The entity state (ETag) version of the immutability policy to update must be returned to the server for all update operations. The ETag value must include the leading and trailing double quotes as returned by the service. */\n  ifMatch?: string;\n}\n\n/** Contains response data for the getImmutabilityPolicy operation. */\nexport type BlobContainersGetImmutabilityPolicyResponse =\n  BlobContainersGetImmutabilityPolicyHeaders & ImmutabilityPolicy;\n\n/** Optional parameters. */\nexport interface BlobContainersDeleteImmutabilityPolicyOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the deleteImmutabilityPolicy operation. */\nexport type BlobContainersDeleteImmutabilityPolicyResponse =\n  BlobContainersDeleteImmutabilityPolicyHeaders & ImmutabilityPolicy;\n\n/** Optional parameters. */\nexport interface BlobContainersLockImmutabilityPolicyOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the lockImmutabilityPolicy operation. */\nexport type BlobContainersLockImmutabilityPolicyResponse =\n  BlobContainersLockImmutabilityPolicyHeaders & ImmutabilityPolicy;\n\n/** Optional parameters. */\nexport interface BlobContainersExtendImmutabilityPolicyOptionalParams\n  extends coreClient.OperationOptions {\n  /** The ImmutabilityPolicy Properties that will be extended for a blob container. */\n  parameters?: ImmutabilityPolicy;\n}\n\n/** Contains response data for the extendImmutabilityPolicy operation. */\nexport type BlobContainersExtendImmutabilityPolicyResponse =\n  BlobContainersExtendImmutabilityPolicyHeaders & ImmutabilityPolicy;\n\n/** Optional parameters. */\nexport interface BlobContainersLeaseOptionalParams\n  extends coreClient.OperationOptions {\n  /** Lease Container request body. */\n  parameters?: LeaseContainerRequest;\n}\n\n/** Contains response data for the lease operation. */\nexport type BlobContainersLeaseResponse = LeaseContainerResponse;\n\n/** Optional parameters. */\nexport interface BlobContainersObjectLevelWormOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface BlobContainersListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type BlobContainersListNextResponse = ListContainerItems;\n\n/** Optional parameters. */\nexport interface FileServicesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type FileServicesListResponse = FileServiceItems;\n\n/** Optional parameters. */\nexport interface FileServicesSetServicePropertiesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the setServiceProperties operation. */\nexport type FileServicesSetServicePropertiesResponse = FileServiceProperties;\n\n/** Optional parameters. */\nexport interface FileServicesGetServicePropertiesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getServiceProperties operation. */\nexport type FileServicesGetServicePropertiesResponse = FileServiceProperties;\n\n/** Optional parameters. */\nexport interface FileServicesListServiceUsagesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional, specifies the maximum number of file service usages to be included in the list response. */\n  maxpagesize?: number;\n}\n\n/** Contains response data for the listServiceUsages operation. */\nexport type FileServicesListServiceUsagesResponse = FileServiceUsages;\n\n/** Optional parameters. */\nexport interface FileServicesGetServiceUsageOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getServiceUsage operation. */\nexport type FileServicesGetServiceUsageResponse = FileServiceUsage;\n\n/** Optional parameters. */\nexport interface FileServicesListServiceUsagesNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listServiceUsagesNext operation. */\nexport type FileServicesListServiceUsagesNextResponse = FileServiceUsages;\n\n/** Optional parameters. */\nexport interface FileSharesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional. Specified maximum number of shares that can be included in the list. */\n  maxpagesize?: string;\n  /** Optional. When specified, only share names starting with the filter will be listed. */\n  filter?: string;\n  /** Optional, used to expand the properties within share's properties. Valid values are: deleted, snapshots. Should be passed as a string with delimiter ',' */\n  expand?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type FileSharesListResponse = FileShareItems;\n\n/** Optional parameters. */\nexport interface FileSharesCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional, used to expand the properties within share's properties. Valid values are: snapshots. Should be passed as a string with delimiter ',' */\n  expand?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type FileSharesCreateResponse = FileShare;\n\n/** Optional parameters. */\nexport interface FileSharesUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type FileSharesUpdateResponse = FileShare;\n\n/** Optional parameters. */\nexport interface FileSharesGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional, used to expand the properties within share's properties. Valid values are: stats. Should be passed as a string with delimiter ','. */\n  expand?: string;\n  /** Optional, used to retrieve properties of a snapshot. */\n  xMsSnapshot?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type FileSharesGetResponse = FileShare;\n\n/** Optional parameters. */\nexport interface FileSharesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional, used to delete a snapshot. */\n  xMsSnapshot?: string;\n  /** Optional. Valid values are: snapshots, leased-snapshots, none. The default value is snapshots. For 'snapshots', the file share is deleted including all of its file share snapshots. If the file share contains leased-snapshots, the deletion fails. For 'leased-snapshots', the file share is deleted included all of its file share snapshots (leased/unleased). For 'none', the file share is deleted if it has no share snapshots. If the file share contains any snapshots (leased or unleased), the deletion fails. */\n  include?: string;\n}\n\n/** Optional parameters. */\nexport interface FileSharesRestoreOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface FileSharesLeaseOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional. Specify the snapshot time to lease a snapshot. */\n  xMsSnapshot?: string;\n  /** Lease Share request body. */\n  parameters?: LeaseShareRequest;\n}\n\n/** Contains response data for the lease operation. */\nexport type FileSharesLeaseResponse = FileSharesLeaseHeaders &\n  LeaseShareResponse;\n\n/** Optional parameters. */\nexport interface FileSharesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type FileSharesListNextResponse = FileShareItems;\n\n/** Optional parameters. */\nexport interface QueueServicesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type QueueServicesListResponse = ListQueueServices;\n\n/** Optional parameters. */\nexport interface QueueServicesSetServicePropertiesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the setServiceProperties operation. */\nexport type QueueServicesSetServicePropertiesResponse = QueueServiceProperties;\n\n/** Optional parameters. */\nexport interface QueueServicesGetServicePropertiesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getServiceProperties operation. */\nexport type QueueServicesGetServicePropertiesResponse = QueueServiceProperties;\n\n/** Optional parameters. */\nexport interface QueueCreateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the create operation. */\nexport type QueueCreateResponse = StorageQueue;\n\n/** Optional parameters. */\nexport interface QueueUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type QueueUpdateResponse = StorageQueue;\n\n/** Optional parameters. */\nexport interface QueueGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type QueueGetResponse = StorageQueue;\n\n/** Optional parameters. */\nexport interface QueueDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface QueueListOptionalParams extends coreClient.OperationOptions {\n  /** Optional, a maximum number of queues that should be included in a list queue response */\n  maxpagesize?: string;\n  /** Optional, When specified, only the queues with a name starting with the given filter will be listed. */\n  filter?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type QueueListResponse = ListQueueResource;\n\n/** Optional parameters. */\nexport interface QueueListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type QueueListNextResponse = ListQueueResource;\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface SkusListOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type SkusListResponse = StorageSkuListResult;\n\n/** Optional parameters. */\nexport interface StorageAccountsCheckNameAvailabilityOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkNameAvailability operation. */\nexport type StorageAccountsCheckNameAvailabilityResponse =\n  CheckNameAvailabilityResult;\n\n/** Optional parameters. */\nexport interface StorageAccountsCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type StorageAccountsCreateResponse = StorageAccount;\n\n/** Optional parameters. */\nexport interface StorageAccountsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface StorageAccountsGetPropertiesOptionalParams\n  extends coreClient.OperationOptions {\n  /** May be used to expand the properties within account's properties. By default, data is not included when fetching properties. Currently we only support geoReplicationStats and blobRestoreStatus. */\n  expand?: StorageAccountExpand;\n}\n\n/** Contains response data for the getProperties operation. */\nexport type StorageAccountsGetPropertiesResponse = StorageAccount;\n\n/** Optional parameters. */\nexport interface StorageAccountsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type StorageAccountsUpdateResponse = StorageAccount;\n\n/** Optional parameters. */\nexport interface StorageAccountsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type StorageAccountsListResponse = StorageAccountListResult;\n\n/** Optional parameters. */\nexport interface StorageAccountsListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type StorageAccountsListByResourceGroupResponse =\n  StorageAccountListResult;\n\n/** Optional parameters. */\nexport interface StorageAccountsListKeysOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listKeys operation. */\nexport type StorageAccountsListKeysResponse = StorageAccountListKeysResult;\n\n/** Optional parameters. */\nexport interface StorageAccountsRegenerateKeyOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the regenerateKey operation. */\nexport type StorageAccountsRegenerateKeyResponse = StorageAccountListKeysResult;\n\n/** Optional parameters. */\nexport interface StorageAccountsListAccountSASOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAccountSAS operation. */\nexport type StorageAccountsListAccountSASResponse = ListAccountSasResponse;\n\n/** Optional parameters. */\nexport interface StorageAccountsListServiceSASOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listServiceSAS operation. */\nexport type StorageAccountsListServiceSASResponse = ListServiceSasResponse;\n\n/** Optional parameters. */\nexport interface StorageAccountsFailoverOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface StorageAccountsHierarchicalNamespaceMigrationOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface StorageAccountsAbortHierarchicalNamespaceMigrationOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface StorageAccountsCustomerInitiatedMigrationOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface StorageAccountsGetCustomerInitiatedMigrationOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getCustomerInitiatedMigration operation. */\nexport type StorageAccountsGetCustomerInitiatedMigrationResponse =\n  StorageAccountMigration;\n\n/** Optional parameters. */\nexport interface StorageAccountsRestoreBlobRangesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the restoreBlobRanges operation. */\nexport type StorageAccountsRestoreBlobRangesResponse = BlobRestoreStatus;\n\n/** Optional parameters. */\nexport interface StorageAccountsRevokeUserDelegationKeysOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface StorageAccountsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type StorageAccountsListNextResponse = StorageAccountListResult;\n\n/** Optional parameters. */\nexport interface StorageAccountsListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type StorageAccountsListByResourceGroupNextResponse =\n  StorageAccountListResult;\n\n/** Optional parameters. */\nexport interface DeletedAccountsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type DeletedAccountsListResponse = DeletedAccountListResult;\n\n/** Optional parameters. */\nexport interface DeletedAccountsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DeletedAccountsGetResponse = DeletedAccount;\n\n/** Optional parameters. */\nexport interface DeletedAccountsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type DeletedAccountsListNextResponse = DeletedAccountListResult;\n\n/** Optional parameters. */\nexport interface UsagesListByLocationOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByLocation operation. */\nexport type UsagesListByLocationResponse = UsageListResult;\n\n/** Optional parameters. */\nexport interface ManagementPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagementPoliciesGetResponse = ManagementPolicy;\n\n/** Optional parameters. */\nexport interface ManagementPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ManagementPoliciesCreateOrUpdateResponse = ManagementPolicy;\n\n/** Optional parameters. */\nexport interface ManagementPoliciesDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface BlobInventoryPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type BlobInventoryPoliciesGetResponse = BlobInventoryPolicy;\n\n/** Optional parameters. */\nexport interface BlobInventoryPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type BlobInventoryPoliciesCreateOrUpdateResponse = BlobInventoryPolicy;\n\n/** Optional parameters. */\nexport interface BlobInventoryPoliciesDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface BlobInventoryPoliciesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type BlobInventoryPoliciesListResponse = ListBlobInventoryPolicy;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type PrivateEndpointConnectionsListResponse =\n  PrivateEndpointConnectionListResult;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsPutOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the put operation. */\nexport type PrivateEndpointConnectionsPutResponse = PrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface PrivateLinkResourcesListByStorageAccountOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByStorageAccount operation. */\nexport type PrivateLinkResourcesListByStorageAccountResponse =\n  PrivateLinkResourceListResult;\n\n/** Optional parameters. */\nexport interface ObjectReplicationPoliciesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ObjectReplicationPoliciesListResponse = ObjectReplicationPolicies;\n\n/** Optional parameters. */\nexport interface ObjectReplicationPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ObjectReplicationPoliciesGetResponse = ObjectReplicationPolicy;\n\n/** Optional parameters. */\nexport interface ObjectReplicationPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ObjectReplicationPoliciesCreateOrUpdateResponse =\n  ObjectReplicationPolicy;\n\n/** Optional parameters. */\nexport interface ObjectReplicationPoliciesDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface LocalUsersListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional. When specified, only local user names starting with the filter will be listed. */\n  filter?: string;\n  /** Optional, specifies the maximum number of local users that will be included in the list response. */\n  maxpagesize?: number;\n  /** Optional, when specified, will list local users enabled for the specific protocol. Lists all users by default. */\n  include?: ListLocalUserIncludeParam;\n}\n\n/** Contains response data for the list operation. */\nexport type LocalUsersListResponse = LocalUsers;\n\n/** Optional parameters. */\nexport interface LocalUsersGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type LocalUsersGetResponse = LocalUser;\n\n/** Optional parameters. */\nexport interface LocalUsersCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type LocalUsersCreateOrUpdateResponse = LocalUser;\n\n/** Optional parameters. */\nexport interface LocalUsersDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface LocalUsersListKeysOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listKeys operation. */\nexport type LocalUsersListKeysResponse = LocalUserKeys;\n\n/** Optional parameters. */\nexport interface LocalUsersRegeneratePasswordOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the regeneratePassword operation. */\nexport type LocalUsersRegeneratePasswordResponse =\n  LocalUserRegeneratePasswordResult;\n\n/** Optional parameters. */\nexport interface EncryptionScopesPutOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the put operation. */\nexport type EncryptionScopesPutResponse = EncryptionScope;\n\n/** Optional parameters. */\nexport interface EncryptionScopesPatchOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the patch operation. */\nexport type EncryptionScopesPatchResponse = EncryptionScope;\n\n/** Optional parameters. */\nexport interface EncryptionScopesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type EncryptionScopesGetResponse = EncryptionScope;\n\n/** Optional parameters. */\nexport interface EncryptionScopesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional. When specified, only encryption scope names starting with the filter will be listed. */\n  filter?: string;\n  /** Optional, specifies the maximum number of encryption scopes that will be included in the list response. */\n  maxpagesize?: number;\n  /** Optional, when specified, will list encryption scopes with the specific state. Defaults to All */\n  include?: ListEncryptionScopesInclude;\n}\n\n/** Contains response data for the list operation. */\nexport type EncryptionScopesListResponse = EncryptionScopeListResult;\n\n/** Optional parameters. */\nexport interface EncryptionScopesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type EncryptionScopesListNextResponse = EncryptionScopeListResult;\n\n/** Optional parameters. */\nexport interface TableServicesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type TableServicesListResponse = ListTableServices;\n\n/** Optional parameters. */\nexport interface TableServicesSetServicePropertiesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the setServiceProperties operation. */\nexport type TableServicesSetServicePropertiesResponse = TableServiceProperties;\n\n/** Optional parameters. */\nexport interface TableServicesGetServicePropertiesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getServiceProperties operation. */\nexport type TableServicesGetServicePropertiesResponse = TableServiceProperties;\n\n/** Optional parameters. */\nexport interface TableCreateOptionalParams extends coreClient.OperationOptions {\n  /** The parameters to provide to create a table. */\n  parameters?: Table;\n}\n\n/** Contains response data for the create operation. */\nexport type TableCreateResponse = Table;\n\n/** Optional parameters. */\nexport interface TableUpdateOptionalParams extends coreClient.OperationOptions {\n  /** The parameters to provide to create a table. */\n  parameters?: Table;\n}\n\n/** Contains response data for the update operation. */\nexport type TableUpdateResponse = Table;\n\n/** Optional parameters. */\nexport interface TableGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type TableGetResponse = Table;\n\n/** Optional parameters. */\nexport interface TableDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface TableListOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type TableListResponse = ListTableResource;\n\n/** Optional parameters. */\nexport interface TableListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type TableListNextResponse = ListTableResource;\n\n/** Optional parameters. */\nexport interface NetworkSecurityPerimeterConfigurationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type NetworkSecurityPerimeterConfigurationsListResponse =\n  NetworkSecurityPerimeterConfigurationList;\n\n/** Optional parameters. */\nexport interface NetworkSecurityPerimeterConfigurationsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type NetworkSecurityPerimeterConfigurationsGetResponse =\n  NetworkSecurityPerimeterConfiguration;\n\n/** Optional parameters. */\nexport interface NetworkSecurityPerimeterConfigurationsReconcileOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the reconcile operation. */\nexport type NetworkSecurityPerimeterConfigurationsReconcileResponse =\n  NetworkSecurityPerimeterConfigurationsReconcileHeaders;\n\n/** Optional parameters. */\nexport interface StorageTaskAssignmentsCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type StorageTaskAssignmentsCreateResponse = StorageTaskAssignment;\n\n/** Optional parameters. */\nexport interface StorageTaskAssignmentsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type StorageTaskAssignmentsUpdateResponse = StorageTaskAssignment;\n\n/** Optional parameters. */\nexport interface StorageTaskAssignmentsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type StorageTaskAssignmentsGetResponse = StorageTaskAssignment;\n\n/** Optional parameters. */\nexport interface StorageTaskAssignmentsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the delete operation. */\nexport type StorageTaskAssignmentsDeleteResponse =\n  StorageTaskAssignmentsDeleteHeaders;\n\n/** Optional parameters. */\nexport interface StorageTaskAssignmentsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional, specifies the maximum number of storage task assignment Ids to be included in the list response. */\n  maxpagesize?: number;\n}\n\n/** Contains response data for the list operation. */\nexport type StorageTaskAssignmentsListResponse = StorageTaskAssignmentsList;\n\n/** Optional parameters. */\nexport interface StorageTaskAssignmentsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type StorageTaskAssignmentsListNextResponse = StorageTaskAssignmentsList;\n\n/** Optional parameters. */\nexport interface StorageTaskAssignmentsInstancesReportListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional. When specified, it can be used to query using reporting properties. See [Constructing Filter Strings](https://learn.microsoft.com/rest/api/storageservices/querying-tables-and-entities#constructing-filter-strings) for details. */\n  filter?: string;\n  /** Optional, specifies the maximum number of storage task assignment instances to be included in the list response. */\n  maxpagesize?: number;\n}\n\n/** Contains response data for the list operation. */\nexport type StorageTaskAssignmentsInstancesReportListResponse =\n  StorageTaskReportSummary;\n\n/** Optional parameters. */\nexport interface StorageTaskAssignmentsInstancesReportListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type StorageTaskAssignmentsInstancesReportListNextResponse =\n  StorageTaskReportSummary;\n\n/** Optional parameters. */\nexport interface StorageTaskAssignmentInstancesReportListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional. When specified, it can be used to query using reporting properties. See [Constructing Filter Strings](https://learn.microsoft.com/rest/api/storageservices/querying-tables-and-entities#constructing-filter-strings) for details. */\n  filter?: string;\n  /** Optional, specifies the maximum number of storage task assignment instances to be included in the list response. */\n  maxpagesize?: number;\n}\n\n/** Contains response data for the list operation. */\nexport type StorageTaskAssignmentInstancesReportListResponse =\n  StorageTaskReportSummary;\n\n/** Optional parameters. */\nexport interface StorageTaskAssignmentInstancesReportListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type StorageTaskAssignmentInstancesReportListNextResponse =\n  StorageTaskReportSummary;\n\n/** Optional parameters. */\nexport interface StorageManagementClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n"]}