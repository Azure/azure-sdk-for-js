/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
/** Known values of {@link AllowedMethods} that the service accepts. */
export var KnownAllowedMethods;
(function (KnownAllowedMethods) {
    /** Delete */
    KnownAllowedMethods["Delete"] = "DELETE";
    /** GET */
    KnownAllowedMethods["GET"] = "GET";
    /** Head */
    KnownAllowedMethods["Head"] = "HEAD";
    /** Merge */
    KnownAllowedMethods["Merge"] = "MERGE";
    /** Post */
    KnownAllowedMethods["Post"] = "POST";
    /** Options */
    KnownAllowedMethods["Options"] = "OPTIONS";
    /** PUT */
    KnownAllowedMethods["PUT"] = "PUT";
    /** Patch */
    KnownAllowedMethods["Patch"] = "PATCH";
    /** Connect */
    KnownAllowedMethods["Connect"] = "CONNECT";
    /** Trace */
    KnownAllowedMethods["Trace"] = "TRACE";
})(KnownAllowedMethods || (KnownAllowedMethods = {}));
/** Known values of {@link Name} that the service accepts. */
export var KnownName;
(function (KnownName) {
    /** AccessTimeTracking */
    KnownName["AccessTimeTracking"] = "AccessTimeTracking";
})(KnownName || (KnownName = {}));
/** Known values of {@link SkuName} that the service accepts. */
export var KnownSkuName;
(function (KnownSkuName) {
    /** StandardLRS */
    KnownSkuName["StandardLRS"] = "Standard_LRS";
    /** StandardGRS */
    KnownSkuName["StandardGRS"] = "Standard_GRS";
    /** StandardRagrs */
    KnownSkuName["StandardRagrs"] = "Standard_RAGRS";
    /** StandardZRS */
    KnownSkuName["StandardZRS"] = "Standard_ZRS";
    /** PremiumLRS */
    KnownSkuName["PremiumLRS"] = "Premium_LRS";
    /** PremiumZRS */
    KnownSkuName["PremiumZRS"] = "Premium_ZRS";
    /** StandardGzrs */
    KnownSkuName["StandardGzrs"] = "Standard_GZRS";
    /** StandardRagzrs */
    KnownSkuName["StandardRagzrs"] = "Standard_RAGZRS";
    /** StandardV2LRS */
    KnownSkuName["StandardV2LRS"] = "StandardV2_LRS";
    /** StandardV2GRS */
    KnownSkuName["StandardV2GRS"] = "StandardV2_GRS";
    /** StandardV2ZRS */
    KnownSkuName["StandardV2ZRS"] = "StandardV2_ZRS";
    /** StandardV2Gzrs */
    KnownSkuName["StandardV2Gzrs"] = "StandardV2_GZRS";
    /** PremiumV2LRS */
    KnownSkuName["PremiumV2LRS"] = "PremiumV2_LRS";
    /** PremiumV2ZRS */
    KnownSkuName["PremiumV2ZRS"] = "PremiumV2_ZRS";
})(KnownSkuName || (KnownSkuName = {}));
/** Known values of {@link ListContainersInclude} that the service accepts. */
export var KnownListContainersInclude;
(function (KnownListContainersInclude) {
    /** Deleted */
    KnownListContainersInclude["Deleted"] = "deleted";
})(KnownListContainersInclude || (KnownListContainersInclude = {}));
/** Known values of {@link LeaseStatus} that the service accepts. */
export var KnownLeaseStatus;
(function (KnownLeaseStatus) {
    /** Locked */
    KnownLeaseStatus["Locked"] = "Locked";
    /** Unlocked */
    KnownLeaseStatus["Unlocked"] = "Unlocked";
})(KnownLeaseStatus || (KnownLeaseStatus = {}));
/** Known values of {@link LeaseState} that the service accepts. */
export var KnownLeaseState;
(function (KnownLeaseState) {
    /** Available */
    KnownLeaseState["Available"] = "Available";
    /** Leased */
    KnownLeaseState["Leased"] = "Leased";
    /** Expired */
    KnownLeaseState["Expired"] = "Expired";
    /** Breaking */
    KnownLeaseState["Breaking"] = "Breaking";
    /** Broken */
    KnownLeaseState["Broken"] = "Broken";
})(KnownLeaseState || (KnownLeaseState = {}));
/** Known values of {@link LeaseDuration} that the service accepts. */
export var KnownLeaseDuration;
(function (KnownLeaseDuration) {
    /** Infinite */
    KnownLeaseDuration["Infinite"] = "Infinite";
    /** Fixed */
    KnownLeaseDuration["Fixed"] = "Fixed";
})(KnownLeaseDuration || (KnownLeaseDuration = {}));
/** Known values of {@link ImmutabilityPolicyState} that the service accepts. */
export var KnownImmutabilityPolicyState;
(function (KnownImmutabilityPolicyState) {
    /** Locked */
    KnownImmutabilityPolicyState["Locked"] = "Locked";
    /** Unlocked */
    KnownImmutabilityPolicyState["Unlocked"] = "Unlocked";
})(KnownImmutabilityPolicyState || (KnownImmutabilityPolicyState = {}));
/** Known values of {@link ImmutabilityPolicyUpdateType} that the service accepts. */
export var KnownImmutabilityPolicyUpdateType;
(function (KnownImmutabilityPolicyUpdateType) {
    /** Put */
    KnownImmutabilityPolicyUpdateType["Put"] = "put";
    /** Lock */
    KnownImmutabilityPolicyUpdateType["Lock"] = "lock";
    /** Extend */
    KnownImmutabilityPolicyUpdateType["Extend"] = "extend";
})(KnownImmutabilityPolicyUpdateType || (KnownImmutabilityPolicyUpdateType = {}));
/** Known values of {@link MigrationState} that the service accepts. */
export var KnownMigrationState;
(function (KnownMigrationState) {
    /** InProgress */
    KnownMigrationState["InProgress"] = "InProgress";
    /** Completed */
    KnownMigrationState["Completed"] = "Completed";
})(KnownMigrationState || (KnownMigrationState = {}));
/** Known values of {@link LeaseContainerRequestAction} that the service accepts. */
export var KnownLeaseContainerRequestAction;
(function (KnownLeaseContainerRequestAction) {
    /** Acquire */
    KnownLeaseContainerRequestAction["Acquire"] = "Acquire";
    /** Renew */
    KnownLeaseContainerRequestAction["Renew"] = "Renew";
    /** Change */
    KnownLeaseContainerRequestAction["Change"] = "Change";
    /** Release */
    KnownLeaseContainerRequestAction["Release"] = "Release";
    /** Break */
    KnownLeaseContainerRequestAction["Break"] = "Break";
})(KnownLeaseContainerRequestAction || (KnownLeaseContainerRequestAction = {}));
/** Known values of {@link EnabledProtocols} that the service accepts. */
export var KnownEnabledProtocols;
(function (KnownEnabledProtocols) {
    /** SMB */
    KnownEnabledProtocols["SMB"] = "SMB";
    /** NFS */
    KnownEnabledProtocols["NFS"] = "NFS";
})(KnownEnabledProtocols || (KnownEnabledProtocols = {}));
/** Known values of {@link RootSquashType} that the service accepts. */
export var KnownRootSquashType;
(function (KnownRootSquashType) {
    /** NoRootSquash */
    KnownRootSquashType["NoRootSquash"] = "NoRootSquash";
    /** RootSquash */
    KnownRootSquashType["RootSquash"] = "RootSquash";
    /** AllSquash */
    KnownRootSquashType["AllSquash"] = "AllSquash";
})(KnownRootSquashType || (KnownRootSquashType = {}));
/** Known values of {@link ShareAccessTier} that the service accepts. */
export var KnownShareAccessTier;
(function (KnownShareAccessTier) {
    /** TransactionOptimized */
    KnownShareAccessTier["TransactionOptimized"] = "TransactionOptimized";
    /** Hot */
    KnownShareAccessTier["Hot"] = "Hot";
    /** Cool */
    KnownShareAccessTier["Cool"] = "Cool";
    /** Premium */
    KnownShareAccessTier["Premium"] = "Premium";
})(KnownShareAccessTier || (KnownShareAccessTier = {}));
/** Known values of {@link LeaseShareAction} that the service accepts. */
export var KnownLeaseShareAction;
(function (KnownLeaseShareAction) {
    /** Acquire */
    KnownLeaseShareAction["Acquire"] = "Acquire";
    /** Renew */
    KnownLeaseShareAction["Renew"] = "Renew";
    /** Change */
    KnownLeaseShareAction["Change"] = "Change";
    /** Release */
    KnownLeaseShareAction["Release"] = "Release";
    /** Break */
    KnownLeaseShareAction["Break"] = "Break";
})(KnownLeaseShareAction || (KnownLeaseShareAction = {}));
/** Known values of {@link Kind} that the service accepts. */
export var KnownKind;
(function (KnownKind) {
    /** Storage */
    KnownKind["Storage"] = "Storage";
    /** StorageV2 */
    KnownKind["StorageV2"] = "StorageV2";
    /** BlobStorage */
    KnownKind["BlobStorage"] = "BlobStorage";
    /** FileStorage */
    KnownKind["FileStorage"] = "FileStorage";
    /** BlockBlobStorage */
    KnownKind["BlockBlobStorage"] = "BlockBlobStorage";
})(KnownKind || (KnownKind = {}));
/** Known values of {@link ReasonCode} that the service accepts. */
export var KnownReasonCode;
(function (KnownReasonCode) {
    /** QuotaId */
    KnownReasonCode["QuotaId"] = "QuotaId";
    /** NotAvailableForSubscription */
    KnownReasonCode["NotAvailableForSubscription"] = "NotAvailableForSubscription";
})(KnownReasonCode || (KnownReasonCode = {}));
/** Known values of {@link ExtendedLocationTypes} that the service accepts. */
export var KnownExtendedLocationTypes;
(function (KnownExtendedLocationTypes) {
    /** EdgeZone */
    KnownExtendedLocationTypes["EdgeZone"] = "EdgeZone";
})(KnownExtendedLocationTypes || (KnownExtendedLocationTypes = {}));
/** Known values of {@link IdentityType} that the service accepts. */
export var KnownIdentityType;
(function (KnownIdentityType) {
    /** None */
    KnownIdentityType["None"] = "None";
    /** SystemAssigned */
    KnownIdentityType["SystemAssigned"] = "SystemAssigned";
    /** UserAssigned */
    KnownIdentityType["UserAssigned"] = "UserAssigned";
    /** SystemAssignedUserAssigned */
    KnownIdentityType["SystemAssignedUserAssigned"] = "SystemAssigned,UserAssigned";
})(KnownIdentityType || (KnownIdentityType = {}));
/** Known values of {@link AllowedCopyScope} that the service accepts. */
export var KnownAllowedCopyScope;
(function (KnownAllowedCopyScope) {
    /** PrivateLink */
    KnownAllowedCopyScope["PrivateLink"] = "PrivateLink";
    /** AAD */
    KnownAllowedCopyScope["AAD"] = "AAD";
})(KnownAllowedCopyScope || (KnownAllowedCopyScope = {}));
/** Known values of {@link PublicNetworkAccess} that the service accepts. */
export var KnownPublicNetworkAccess;
(function (KnownPublicNetworkAccess) {
    /** Enabled */
    KnownPublicNetworkAccess["Enabled"] = "Enabled";
    /** Disabled */
    KnownPublicNetworkAccess["Disabled"] = "Disabled";
    /** SecuredByPerimeter */
    KnownPublicNetworkAccess["SecuredByPerimeter"] = "SecuredByPerimeter";
})(KnownPublicNetworkAccess || (KnownPublicNetworkAccess = {}));
/** Known values of {@link ExpirationAction} that the service accepts. */
export var KnownExpirationAction;
(function (KnownExpirationAction) {
    /** Log */
    KnownExpirationAction["Log"] = "Log";
    /** Block */
    KnownExpirationAction["Block"] = "Block";
})(KnownExpirationAction || (KnownExpirationAction = {}));
/** Known values of {@link KeyType} that the service accepts. */
export var KnownKeyType;
(function (KnownKeyType) {
    /** Service */
    KnownKeyType["Service"] = "Service";
    /** Account */
    KnownKeyType["Account"] = "Account";
})(KnownKeyType || (KnownKeyType = {}));
/** Known values of {@link KeySource} that the service accepts. */
export var KnownKeySource;
(function (KnownKeySource) {
    /** MicrosoftStorage */
    KnownKeySource["MicrosoftStorage"] = "Microsoft.Storage";
    /** MicrosoftKeyvault */
    KnownKeySource["MicrosoftKeyvault"] = "Microsoft.Keyvault";
})(KnownKeySource || (KnownKeySource = {}));
/** Known values of {@link Bypass} that the service accepts. */
export var KnownBypass;
(function (KnownBypass) {
    /** None */
    KnownBypass["None"] = "None";
    /** Logging */
    KnownBypass["Logging"] = "Logging";
    /** Metrics */
    KnownBypass["Metrics"] = "Metrics";
    /** AzureServices */
    KnownBypass["AzureServices"] = "AzureServices";
})(KnownBypass || (KnownBypass = {}));
/** Known values of {@link State} that the service accepts. */
export var KnownState;
(function (KnownState) {
    /** Provisioning */
    KnownState["Provisioning"] = "Provisioning";
    /** Deprovisioning */
    KnownState["Deprovisioning"] = "Deprovisioning";
    /** Succeeded */
    KnownState["Succeeded"] = "Succeeded";
    /** Failed */
    KnownState["Failed"] = "Failed";
    /** NetworkSourceDeleted */
    KnownState["NetworkSourceDeleted"] = "NetworkSourceDeleted";
})(KnownState || (KnownState = {}));
/** Known values of {@link DirectoryServiceOptions} that the service accepts. */
export var KnownDirectoryServiceOptions;
(function (KnownDirectoryServiceOptions) {
    /** None */
    KnownDirectoryServiceOptions["None"] = "None";
    /** Aadds */
    KnownDirectoryServiceOptions["Aadds"] = "AADDS";
    /** AD */
    KnownDirectoryServiceOptions["AD"] = "AD";
    /** Aadkerb */
    KnownDirectoryServiceOptions["Aadkerb"] = "AADKERB";
})(KnownDirectoryServiceOptions || (KnownDirectoryServiceOptions = {}));
/** Known values of {@link AccountType} that the service accepts. */
export var KnownAccountType;
(function (KnownAccountType) {
    /** User */
    KnownAccountType["User"] = "User";
    /** Computer */
    KnownAccountType["Computer"] = "Computer";
})(KnownAccountType || (KnownAccountType = {}));
/** Known values of {@link DefaultSharePermission} that the service accepts. */
export var KnownDefaultSharePermission;
(function (KnownDefaultSharePermission) {
    /** None */
    KnownDefaultSharePermission["None"] = "None";
    /** StorageFileDataSmbShareReader */
    KnownDefaultSharePermission["StorageFileDataSmbShareReader"] = "StorageFileDataSmbShareReader";
    /** StorageFileDataSmbShareContributor */
    KnownDefaultSharePermission["StorageFileDataSmbShareContributor"] = "StorageFileDataSmbShareContributor";
    /** StorageFileDataSmbShareElevatedContributor */
    KnownDefaultSharePermission["StorageFileDataSmbShareElevatedContributor"] = "StorageFileDataSmbShareElevatedContributor";
})(KnownDefaultSharePermission || (KnownDefaultSharePermission = {}));
/** Known values of {@link LargeFileSharesState} that the service accepts. */
export var KnownLargeFileSharesState;
(function (KnownLargeFileSharesState) {
    /** Disabled */
    KnownLargeFileSharesState["Disabled"] = "Disabled";
    /** Enabled */
    KnownLargeFileSharesState["Enabled"] = "Enabled";
})(KnownLargeFileSharesState || (KnownLargeFileSharesState = {}));
/** Known values of {@link RoutingChoice} that the service accepts. */
export var KnownRoutingChoice;
(function (KnownRoutingChoice) {
    /** MicrosoftRouting */
    KnownRoutingChoice["MicrosoftRouting"] = "MicrosoftRouting";
    /** InternetRouting */
    KnownRoutingChoice["InternetRouting"] = "InternetRouting";
})(KnownRoutingChoice || (KnownRoutingChoice = {}));
/** Known values of {@link MinimumTlsVersion} that the service accepts. */
export var KnownMinimumTlsVersion;
(function (KnownMinimumTlsVersion) {
    /** TLS10 */
    KnownMinimumTlsVersion["TLS10"] = "TLS1_0";
    /** TLS11 */
    KnownMinimumTlsVersion["TLS11"] = "TLS1_1";
    /** TLS12 */
    KnownMinimumTlsVersion["TLS12"] = "TLS1_2";
    /** TLS13 */
    KnownMinimumTlsVersion["TLS13"] = "TLS1_3";
})(KnownMinimumTlsVersion || (KnownMinimumTlsVersion = {}));
/** Known values of {@link AccountImmutabilityPolicyState} that the service accepts. */
export var KnownAccountImmutabilityPolicyState;
(function (KnownAccountImmutabilityPolicyState) {
    /** Unlocked */
    KnownAccountImmutabilityPolicyState["Unlocked"] = "Unlocked";
    /** Locked */
    KnownAccountImmutabilityPolicyState["Locked"] = "Locked";
    /** Disabled */
    KnownAccountImmutabilityPolicyState["Disabled"] = "Disabled";
})(KnownAccountImmutabilityPolicyState || (KnownAccountImmutabilityPolicyState = {}));
/** Known values of {@link DnsEndpointType} that the service accepts. */
export var KnownDnsEndpointType;
(function (KnownDnsEndpointType) {
    /** Standard */
    KnownDnsEndpointType["Standard"] = "Standard";
    /** AzureDnsZone */
    KnownDnsEndpointType["AzureDnsZone"] = "AzureDnsZone";
})(KnownDnsEndpointType || (KnownDnsEndpointType = {}));
/** Known values of {@link GeoReplicationStatus} that the service accepts. */
export var KnownGeoReplicationStatus;
(function (KnownGeoReplicationStatus) {
    /** Live */
    KnownGeoReplicationStatus["Live"] = "Live";
    /** Bootstrap */
    KnownGeoReplicationStatus["Bootstrap"] = "Bootstrap";
    /** Unavailable */
    KnownGeoReplicationStatus["Unavailable"] = "Unavailable";
})(KnownGeoReplicationStatus || (KnownGeoReplicationStatus = {}));
/** Known values of {@link PostFailoverRedundancy} that the service accepts. */
export var KnownPostFailoverRedundancy;
(function (KnownPostFailoverRedundancy) {
    /** StandardLRS */
    KnownPostFailoverRedundancy["StandardLRS"] = "Standard_LRS";
    /** StandardZRS */
    KnownPostFailoverRedundancy["StandardZRS"] = "Standard_ZRS";
})(KnownPostFailoverRedundancy || (KnownPostFailoverRedundancy = {}));
/** Known values of {@link PostPlannedFailoverRedundancy} that the service accepts. */
export var KnownPostPlannedFailoverRedundancy;
(function (KnownPostPlannedFailoverRedundancy) {
    /** StandardGRS */
    KnownPostPlannedFailoverRedundancy["StandardGRS"] = "Standard_GRS";
    /** StandardGzrs */
    KnownPostPlannedFailoverRedundancy["StandardGzrs"] = "Standard_GZRS";
    /** StandardRagrs */
    KnownPostPlannedFailoverRedundancy["StandardRagrs"] = "Standard_RAGRS";
    /** StandardRagzrs */
    KnownPostPlannedFailoverRedundancy["StandardRagzrs"] = "Standard_RAGZRS";
})(KnownPostPlannedFailoverRedundancy || (KnownPostPlannedFailoverRedundancy = {}));
/** Known values of {@link PrivateEndpointServiceConnectionStatus} that the service accepts. */
export var KnownPrivateEndpointServiceConnectionStatus;
(function (KnownPrivateEndpointServiceConnectionStatus) {
    /** Pending */
    KnownPrivateEndpointServiceConnectionStatus["Pending"] = "Pending";
    /** Approved */
    KnownPrivateEndpointServiceConnectionStatus["Approved"] = "Approved";
    /** Rejected */
    KnownPrivateEndpointServiceConnectionStatus["Rejected"] = "Rejected";
})(KnownPrivateEndpointServiceConnectionStatus || (KnownPrivateEndpointServiceConnectionStatus = {}));
/** Known values of {@link PrivateEndpointConnectionProvisioningState} that the service accepts. */
export var KnownPrivateEndpointConnectionProvisioningState;
(function (KnownPrivateEndpointConnectionProvisioningState) {
    /** Succeeded */
    KnownPrivateEndpointConnectionProvisioningState["Succeeded"] = "Succeeded";
    /** Creating */
    KnownPrivateEndpointConnectionProvisioningState["Creating"] = "Creating";
    /** Deleting */
    KnownPrivateEndpointConnectionProvisioningState["Deleting"] = "Deleting";
    /** Failed */
    KnownPrivateEndpointConnectionProvisioningState["Failed"] = "Failed";
})(KnownPrivateEndpointConnectionProvisioningState || (KnownPrivateEndpointConnectionProvisioningState = {}));
/** Known values of {@link BlobRestoreProgressStatus} that the service accepts. */
export var KnownBlobRestoreProgressStatus;
(function (KnownBlobRestoreProgressStatus) {
    /** InProgress */
    KnownBlobRestoreProgressStatus["InProgress"] = "InProgress";
    /** Complete */
    KnownBlobRestoreProgressStatus["Complete"] = "Complete";
    /** Failed */
    KnownBlobRestoreProgressStatus["Failed"] = "Failed";
})(KnownBlobRestoreProgressStatus || (KnownBlobRestoreProgressStatus = {}));
/** Known values of {@link SkuConversionStatus} that the service accepts. */
export var KnownSkuConversionStatus;
(function (KnownSkuConversionStatus) {
    /** InProgress */
    KnownSkuConversionStatus["InProgress"] = "InProgress";
    /** Succeeded */
    KnownSkuConversionStatus["Succeeded"] = "Succeeded";
    /** Failed */
    KnownSkuConversionStatus["Failed"] = "Failed";
})(KnownSkuConversionStatus || (KnownSkuConversionStatus = {}));
/** Known values of {@link Services} that the service accepts. */
export var KnownServices;
(function (KnownServices) {
    /** B */
    KnownServices["B"] = "b";
    /** Q */
    KnownServices["Q"] = "q";
    /** T */
    KnownServices["T"] = "t";
    /** F */
    KnownServices["F"] = "f";
})(KnownServices || (KnownServices = {}));
/** Known values of {@link SignedResourceTypes} that the service accepts. */
export var KnownSignedResourceTypes;
(function (KnownSignedResourceTypes) {
    /** S */
    KnownSignedResourceTypes["S"] = "s";
    /** C */
    KnownSignedResourceTypes["C"] = "c";
    /** O */
    KnownSignedResourceTypes["O"] = "o";
})(KnownSignedResourceTypes || (KnownSignedResourceTypes = {}));
/** Known values of {@link Permissions} that the service accepts. */
export var KnownPermissions;
(function (KnownPermissions) {
    /** R */
    KnownPermissions["R"] = "r";
    /** D */
    KnownPermissions["D"] = "d";
    /** W */
    KnownPermissions["W"] = "w";
    /** L */
    KnownPermissions["L"] = "l";
    /** A */
    KnownPermissions["A"] = "a";
    /** C */
    KnownPermissions["C"] = "c";
    /** U */
    KnownPermissions["U"] = "u";
    /** P */
    KnownPermissions["P"] = "p";
})(KnownPermissions || (KnownPermissions = {}));
/** Known values of {@link SignedResource} that the service accepts. */
export var KnownSignedResource;
(function (KnownSignedResource) {
    /** B */
    KnownSignedResource["B"] = "b";
    /** C */
    KnownSignedResource["C"] = "c";
    /** F */
    KnownSignedResource["F"] = "f";
    /** S */
    KnownSignedResource["S"] = "s";
})(KnownSignedResource || (KnownSignedResource = {}));
/** Known values of {@link MigrationStatus} that the service accepts. */
export var KnownMigrationStatus;
(function (KnownMigrationStatus) {
    /** Invalid */
    KnownMigrationStatus["Invalid"] = "Invalid";
    /** SubmittedForConversion */
    KnownMigrationStatus["SubmittedForConversion"] = "SubmittedForConversion";
    /** InProgress */
    KnownMigrationStatus["InProgress"] = "InProgress";
    /** Complete */
    KnownMigrationStatus["Complete"] = "Complete";
    /** Failed */
    KnownMigrationStatus["Failed"] = "Failed";
})(KnownMigrationStatus || (KnownMigrationStatus = {}));
/** Known values of {@link MigrationName} that the service accepts. */
export var KnownMigrationName;
(function (KnownMigrationName) {
    /** Default */
    KnownMigrationName["Default"] = "default";
})(KnownMigrationName || (KnownMigrationName = {}));
/** Known values of {@link ManagementPolicyName} that the service accepts. */
export var KnownManagementPolicyName;
(function (KnownManagementPolicyName) {
    /** Default */
    KnownManagementPolicyName["Default"] = "default";
})(KnownManagementPolicyName || (KnownManagementPolicyName = {}));
/** Known values of {@link RuleType} that the service accepts. */
export var KnownRuleType;
(function (KnownRuleType) {
    /** Lifecycle */
    KnownRuleType["Lifecycle"] = "Lifecycle";
})(KnownRuleType || (KnownRuleType = {}));
/** Known values of {@link BlobInventoryPolicyName} that the service accepts. */
export var KnownBlobInventoryPolicyName;
(function (KnownBlobInventoryPolicyName) {
    /** Default */
    KnownBlobInventoryPolicyName["Default"] = "default";
})(KnownBlobInventoryPolicyName || (KnownBlobInventoryPolicyName = {}));
/** Known values of {@link InventoryRuleType} that the service accepts. */
export var KnownInventoryRuleType;
(function (KnownInventoryRuleType) {
    /** Inventory */
    KnownInventoryRuleType["Inventory"] = "Inventory";
})(KnownInventoryRuleType || (KnownInventoryRuleType = {}));
/** Known values of {@link Format} that the service accepts. */
export var KnownFormat;
(function (KnownFormat) {
    /** Csv */
    KnownFormat["Csv"] = "Csv";
    /** Parquet */
    KnownFormat["Parquet"] = "Parquet";
})(KnownFormat || (KnownFormat = {}));
/** Known values of {@link Schedule} that the service accepts. */
export var KnownSchedule;
(function (KnownSchedule) {
    /** Daily */
    KnownSchedule["Daily"] = "Daily";
    /** Weekly */
    KnownSchedule["Weekly"] = "Weekly";
})(KnownSchedule || (KnownSchedule = {}));
/** Known values of {@link ObjectType} that the service accepts. */
export var KnownObjectType;
(function (KnownObjectType) {
    /** Blob */
    KnownObjectType["Blob"] = "Blob";
    /** Container */
    KnownObjectType["Container"] = "Container";
})(KnownObjectType || (KnownObjectType = {}));
/** Known values of {@link CreatedByType} that the service accepts. */
export var KnownCreatedByType;
(function (KnownCreatedByType) {
    /** User */
    KnownCreatedByType["User"] = "User";
    /** Application */
    KnownCreatedByType["Application"] = "Application";
    /** ManagedIdentity */
    KnownCreatedByType["ManagedIdentity"] = "ManagedIdentity";
    /** Key */
    KnownCreatedByType["Key"] = "Key";
})(KnownCreatedByType || (KnownCreatedByType = {}));
/** Known values of {@link ListLocalUserIncludeParam} that the service accepts. */
export var KnownListLocalUserIncludeParam;
(function (KnownListLocalUserIncludeParam) {
    /** Nfsv3 */
    KnownListLocalUserIncludeParam["Nfsv3"] = "nfsv3";
})(KnownListLocalUserIncludeParam || (KnownListLocalUserIncludeParam = {}));
/** Known values of {@link EncryptionScopeSource} that the service accepts. */
export var KnownEncryptionScopeSource;
(function (KnownEncryptionScopeSource) {
    /** MicrosoftStorage */
    KnownEncryptionScopeSource["MicrosoftStorage"] = "Microsoft.Storage";
    /** MicrosoftKeyVault */
    KnownEncryptionScopeSource["MicrosoftKeyVault"] = "Microsoft.KeyVault";
})(KnownEncryptionScopeSource || (KnownEncryptionScopeSource = {}));
/** Known values of {@link EncryptionScopeState} that the service accepts. */
export var KnownEncryptionScopeState;
(function (KnownEncryptionScopeState) {
    /** Enabled */
    KnownEncryptionScopeState["Enabled"] = "Enabled";
    /** Disabled */
    KnownEncryptionScopeState["Disabled"] = "Disabled";
})(KnownEncryptionScopeState || (KnownEncryptionScopeState = {}));
/** Known values of {@link ListEncryptionScopesInclude} that the service accepts. */
export var KnownListEncryptionScopesInclude;
(function (KnownListEncryptionScopesInclude) {
    /** All */
    KnownListEncryptionScopesInclude["All"] = "All";
    /** Enabled */
    KnownListEncryptionScopesInclude["Enabled"] = "Enabled";
    /** Disabled */
    KnownListEncryptionScopesInclude["Disabled"] = "Disabled";
})(KnownListEncryptionScopesInclude || (KnownListEncryptionScopesInclude = {}));
/** Known values of {@link NetworkSecurityPerimeterConfigurationProvisioningState} that the service accepts. */
export var KnownNetworkSecurityPerimeterConfigurationProvisioningState;
(function (KnownNetworkSecurityPerimeterConfigurationProvisioningState) {
    /** Accepted */
    KnownNetworkSecurityPerimeterConfigurationProvisioningState["Accepted"] = "Accepted";
    /** Succeeded */
    KnownNetworkSecurityPerimeterConfigurationProvisioningState["Succeeded"] = "Succeeded";
    /** Failed */
    KnownNetworkSecurityPerimeterConfigurationProvisioningState["Failed"] = "Failed";
    /** Deleting */
    KnownNetworkSecurityPerimeterConfigurationProvisioningState["Deleting"] = "Deleting";
    /** Canceled */
    KnownNetworkSecurityPerimeterConfigurationProvisioningState["Canceled"] = "Canceled";
})(KnownNetworkSecurityPerimeterConfigurationProvisioningState || (KnownNetworkSecurityPerimeterConfigurationProvisioningState = {}));
/** Known values of {@link IssueType} that the service accepts. */
export var KnownIssueType;
(function (KnownIssueType) {
    /** Unknown */
    KnownIssueType["Unknown"] = "Unknown";
    /** ConfigurationPropagationFailure */
    KnownIssueType["ConfigurationPropagationFailure"] = "ConfigurationPropagationFailure";
})(KnownIssueType || (KnownIssueType = {}));
/** Known values of {@link Severity} that the service accepts. */
export var KnownSeverity;
(function (KnownSeverity) {
    /** Warning */
    KnownSeverity["Warning"] = "Warning";
    /** Error */
    KnownSeverity["Error"] = "Error";
})(KnownSeverity || (KnownSeverity = {}));
/** Known values of {@link ResourceAssociationAccessMode} that the service accepts. */
export var KnownResourceAssociationAccessMode;
(function (KnownResourceAssociationAccessMode) {
    /** Enforced */
    KnownResourceAssociationAccessMode["Enforced"] = "Enforced";
    /** Learning */
    KnownResourceAssociationAccessMode["Learning"] = "Learning";
    /** Audit */
    KnownResourceAssociationAccessMode["Audit"] = "Audit";
})(KnownResourceAssociationAccessMode || (KnownResourceAssociationAccessMode = {}));
/** Known values of {@link NspAccessRuleDirection} that the service accepts. */
export var KnownNspAccessRuleDirection;
(function (KnownNspAccessRuleDirection) {
    /** Inbound */
    KnownNspAccessRuleDirection["Inbound"] = "Inbound";
    /** Outbound */
    KnownNspAccessRuleDirection["Outbound"] = "Outbound";
})(KnownNspAccessRuleDirection || (KnownNspAccessRuleDirection = {}));
/** Known values of {@link RunStatusEnum} that the service accepts. */
export var KnownRunStatusEnum;
(function (KnownRunStatusEnum) {
    /** InProgress */
    KnownRunStatusEnum["InProgress"] = "InProgress";
    /** Finished */
    KnownRunStatusEnum["Finished"] = "Finished";
})(KnownRunStatusEnum || (KnownRunStatusEnum = {}));
/** Known values of {@link RunResult} that the service accepts. */
export var KnownRunResult;
(function (KnownRunResult) {
    /** Succeeded */
    KnownRunResult["Succeeded"] = "Succeeded";
    /** Failed */
    KnownRunResult["Failed"] = "Failed";
})(KnownRunResult || (KnownRunResult = {}));
//# sourceMappingURL=index.js.map