{"version":3,"file":"localUsersOperations.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/localUsersOperations.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport {\n  LocalUser,\n  LocalUsersListOptionalParams,\n  LocalUsersGetOptionalParams,\n  LocalUsersGetResponse,\n  LocalUsersCreateOrUpdateOptionalParams,\n  LocalUsersCreateOrUpdateResponse,\n  LocalUsersDeleteOptionalParams,\n  LocalUsersListKeysOptionalParams,\n  LocalUsersListKeysResponse,\n  LocalUsersRegeneratePasswordOptionalParams,\n  LocalUsersRegeneratePasswordResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a LocalUsersOperations. */\nexport interface LocalUsersOperations {\n  /**\n   * List the local users associated with the storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: LocalUsersListOptionalParams,\n  ): PagedAsyncIterableIterator<LocalUser>;\n  /**\n   * Get the local user of the storage account by username.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param username The name of local user. The username must contain lowercase letters and numbers\n   *                 only. It must be unique only within the storage account.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    accountName: string,\n    username: string,\n    options?: LocalUsersGetOptionalParams,\n  ): Promise<LocalUsersGetResponse>;\n  /**\n   * Create or update the properties of a local user associated with the storage account. Properties for\n   * NFSv3 enablement and extended groups cannot be set with other properties.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param username The name of local user. The username must contain lowercase letters and numbers\n   *                 only. It must be unique only within the storage account.\n   * @param properties The local user associated with a storage account.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    accountName: string,\n    username: string,\n    properties: LocalUser,\n    options?: LocalUsersCreateOrUpdateOptionalParams,\n  ): Promise<LocalUsersCreateOrUpdateResponse>;\n  /**\n   * Deletes the local user associated with the specified storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param username The name of local user. The username must contain lowercase letters and numbers\n   *                 only. It must be unique only within the storage account.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    accountName: string,\n    username: string,\n    options?: LocalUsersDeleteOptionalParams,\n  ): Promise<void>;\n  /**\n   * List SSH authorized keys and shared key of the local user.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param username The name of local user. The username must contain lowercase letters and numbers\n   *                 only. It must be unique only within the storage account.\n   * @param options The options parameters.\n   */\n  listKeys(\n    resourceGroupName: string,\n    accountName: string,\n    username: string,\n    options?: LocalUsersListKeysOptionalParams,\n  ): Promise<LocalUsersListKeysResponse>;\n  /**\n   * Regenerate the local user SSH password.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param username The name of local user. The username must contain lowercase letters and numbers\n   *                 only. It must be unique only within the storage account.\n   * @param options The options parameters.\n   */\n  regeneratePassword(\n    resourceGroupName: string,\n    accountName: string,\n    username: string,\n    options?: LocalUsersRegeneratePasswordOptionalParams,\n  ): Promise<LocalUsersRegeneratePasswordResponse>;\n}\n"]}