{"version":3,"file":"encryptionScopes.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/encryptionScopes.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport {\n  EncryptionScope,\n  EncryptionScopesListOptionalParams,\n  EncryptionScopesPutOptionalParams,\n  EncryptionScopesPutResponse,\n  EncryptionScopesPatchOptionalParams,\n  EncryptionScopesPatchResponse,\n  EncryptionScopesGetOptionalParams,\n  EncryptionScopesGetResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a EncryptionScopes. */\nexport interface EncryptionScopes {\n  /**\n   * Lists all the encryption scopes available under the specified storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: EncryptionScopesListOptionalParams,\n  ): PagedAsyncIterableIterator<EncryptionScope>;\n  /**\n   * Synchronously creates or updates an encryption scope under the specified storage account. If an\n   * encryption scope is already created and a subsequent request is issued with different properties,\n   * the encryption scope properties will be updated per the specified request.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param encryptionScopeName The name of the encryption scope within the specified storage account.\n   *                            Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case\n   *                            letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a\n   *                            letter or number.\n   * @param encryptionScope Encryption scope properties to be used for the create or update.\n   * @param options The options parameters.\n   */\n  put(\n    resourceGroupName: string,\n    accountName: string,\n    encryptionScopeName: string,\n    encryptionScope: EncryptionScope,\n    options?: EncryptionScopesPutOptionalParams,\n  ): Promise<EncryptionScopesPutResponse>;\n  /**\n   * Update encryption scope properties as specified in the request body. Update fails if the specified\n   * encryption scope does not already exist.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param encryptionScopeName The name of the encryption scope within the specified storage account.\n   *                            Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case\n   *                            letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a\n   *                            letter or number.\n   * @param encryptionScope Encryption scope properties to be used for the update.\n   * @param options The options parameters.\n   */\n  patch(\n    resourceGroupName: string,\n    accountName: string,\n    encryptionScopeName: string,\n    encryptionScope: EncryptionScope,\n    options?: EncryptionScopesPatchOptionalParams,\n  ): Promise<EncryptionScopesPatchResponse>;\n  /**\n   * Returns the properties for the specified encryption scope.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param encryptionScopeName The name of the encryption scope within the specified storage account.\n   *                            Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case\n   *                            letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a\n   *                            letter or number.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    accountName: string,\n    encryptionScopeName: string,\n    options?: EncryptionScopesGetOptionalParams,\n  ): Promise<EncryptionScopesGetResponse>;\n}\n"]}