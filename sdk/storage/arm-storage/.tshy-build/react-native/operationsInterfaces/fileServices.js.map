{"version":3,"file":"fileServices.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/fileServices.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport {\n  FileServiceUsage,\n  FileServicesListServiceUsagesOptionalParams,\n  FileServicesListOptionalParams,\n  FileServicesListResponse,\n  FileServiceProperties,\n  FileServicesSetServicePropertiesOptionalParams,\n  FileServicesSetServicePropertiesResponse,\n  FileServicesGetServicePropertiesOptionalParams,\n  FileServicesGetServicePropertiesResponse,\n  FileServicesGetServiceUsageOptionalParams,\n  FileServicesGetServiceUsageResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a FileServices. */\nexport interface FileServices {\n  /**\n   * Gets the usages of file service in storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  listServiceUsages(\n    resourceGroupName: string,\n    accountName: string,\n    options?: FileServicesListServiceUsagesOptionalParams,\n  ): PagedAsyncIterableIterator<FileServiceUsage>;\n  /**\n   * List all file services in storage accounts\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: FileServicesListOptionalParams,\n  ): Promise<FileServicesListResponse>;\n  /**\n   * Sets the properties of file services in storage accounts, including CORS (Cross-Origin Resource\n   * Sharing) rules.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param parameters The properties of file services in storage accounts, including CORS (Cross-Origin\n   *                   Resource Sharing) rules.\n   * @param options The options parameters.\n   */\n  setServiceProperties(\n    resourceGroupName: string,\n    accountName: string,\n    parameters: FileServiceProperties,\n    options?: FileServicesSetServicePropertiesOptionalParams,\n  ): Promise<FileServicesSetServicePropertiesResponse>;\n  /**\n   * Gets the properties of file services in storage accounts, including CORS (Cross-Origin Resource\n   * Sharing) rules.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  getServiceProperties(\n    resourceGroupName: string,\n    accountName: string,\n    options?: FileServicesGetServicePropertiesOptionalParams,\n  ): Promise<FileServicesGetServicePropertiesResponse>;\n  /**\n   * Gets the usage of file service in storage account including account limits, file share limits and\n   * constants used in recommendations and bursting formula.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  getServiceUsage(\n    resourceGroupName: string,\n    accountName: string,\n    options?: FileServicesGetServiceUsageOptionalParams,\n  ): Promise<FileServicesGetServiceUsageResponse>;\n}\n"]}