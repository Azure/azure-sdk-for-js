{"version":3,"file":"blobServices.js","sourceRoot":"","sources":["../../../src/operations/blobServices.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAIH,OAAO,KAAK,UAAU,MAAM,oBAAoB,CAAC;AACjD,OAAO,KAAK,OAAO,MAAM,sBAAsB,CAAC;AAChD,OAAO,KAAK,UAAU,MAAM,yBAAyB,CAAC;AAYtD,4CAA4C;AAC5C,gDAAgD;AAChD,MAAM,OAAO,gBAAgB;IAG3B;;;OAGG;IACH,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED;;;;;;;;OAQG;IACI,IAAI,CACT,iBAAyB,EACzB,WAAmB,EACnB,OAAwC;QAExC,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;QACzE,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,cAAc,CACxB,iBAAiB,EACjB,WAAW,EACX,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,cAAc,CAC3B,iBAAyB,EACzB,WAAmB,EACnB,OAAwC,EACxC,SAAwB;;YAExB,IAAI,MAAgC,CAAC;YACrC,MAAM,GAAG,cAAM,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,WAAW,EAAE,OAAO,CAAC,CAAA,CAAC;YACnE,oBAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;QAC3B,CAAC;KAAA;IAEc,aAAa,CAC1B,iBAAyB,EACzB,WAAmB,EACnB,OAAwC;;;;gBAExC,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,cAAc,CAC1C,iBAAiB,EACjB,WAAW,EACX,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAJqB,cAIxB;oBAJwB,WAIxB;oBAJU,MAAM,IAAI,KAAA,CAAA;oBAKnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;;OAQG;IACK,KAAK,CACX,iBAAyB,EACzB,WAAmB,EACnB,OAAwC;QAExC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,WAAW,EAAE,OAAO,EAAE,EAC3C,iBAAiB,CAClB,CAAC;IACJ,CAAC;IAED;;;;;;;;;;;OAWG;IACH,oBAAoB,CAClB,iBAAyB,EACzB,WAAmB,EACnB,UAAiC,EACjC,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,WAAW,EAAE,UAAU,EAAE,OAAO,EAAE,EACvD,iCAAiC,CAClC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,oBAAoB,CAClB,iBAAyB,EACzB,WAAmB,EACnB,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,WAAW,EAAE,OAAO,EAAE,EAC3C,iCAAiC,CAClC,CAAC;IACJ,CAAC;CACF;AACD,2BAA2B;AAC3B,MAAM,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;AAE3E,MAAM,iBAAiB,GAA6B;IAClD,IAAI,EAAE,2IAA2I;IACjJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,WAAW;QACtB,UAAU,CAAC,cAAc;KAC1B;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,8JAA8J;IACpK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,qBAAqB;SAC1C;KACF;IACD,WAAW,EAAE,UAAU,CAAC,UAAU;IAClC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,WAAW;QACtB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,gBAAgB;KAC5B;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,8JAA8J;IACpK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,qBAAqB;SAC1C;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,WAAW;QACtB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,gBAAgB;KAC5B;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { BlobServices } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { StorageManagementClient } from \"../storageManagementClient.js\";\nimport {\n  BlobServiceProperties,\n  BlobServicesListOptionalParams,\n  BlobServicesListResponse,\n  BlobServicesSetServicePropertiesOptionalParams,\n  BlobServicesSetServicePropertiesResponse,\n  BlobServicesGetServicePropertiesOptionalParams,\n  BlobServicesGetServicePropertiesResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing BlobServices operations. */\nexport class BlobServicesImpl implements BlobServices {\n  private readonly client: StorageManagementClient;\n\n  /**\n   * Initialize a new instance of the class BlobServices class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List blob services of storage account. It returns a collection of one object named default.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: BlobServicesListOptionalParams,\n  ): PagedAsyncIterableIterator<BlobServiceProperties> {\n    const iter = this.listPagingAll(resourceGroupName, accountName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          accountName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    accountName: string,\n    options?: BlobServicesListOptionalParams,\n    _settings?: PageSettings,\n  ): AsyncIterableIterator<BlobServiceProperties[]> {\n    let result: BlobServicesListResponse;\n    result = await this._list(resourceGroupName, accountName, options);\n    yield result.value || [];\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    accountName: string,\n    options?: BlobServicesListOptionalParams,\n  ): AsyncIterableIterator<BlobServiceProperties> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      accountName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List blob services of storage account. It returns a collection of one object named default.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: BlobServicesListOptionalParams,\n  ): Promise<BlobServicesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, options },\n      listOperationSpec,\n    );\n  }\n\n  /**\n   * Sets the properties of a storage account’s Blob service, including properties for Storage Analytics\n   * and CORS (Cross-Origin Resource Sharing) rules.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param parameters The properties of a storage account’s Blob service, including properties for\n   *                   Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.\n   * @param options The options parameters.\n   */\n  setServiceProperties(\n    resourceGroupName: string,\n    accountName: string,\n    parameters: BlobServiceProperties,\n    options?: BlobServicesSetServicePropertiesOptionalParams,\n  ): Promise<BlobServicesSetServicePropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, parameters, options },\n      setServicePropertiesOperationSpec,\n    );\n  }\n\n  /**\n   * Gets the properties of a storage account’s Blob service, including properties for Storage Analytics\n   * and CORS (Cross-Origin Resource Sharing) rules.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  getServiceProperties(\n    resourceGroupName: string,\n    accountName: string,\n    options?: BlobServicesGetServicePropertiesOptionalParams,\n  ): Promise<BlobServicesGetServicePropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, options },\n      getServicePropertiesOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlobServiceItems,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.accountName,\n    Parameters.subscriptionId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst setServicePropertiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/{BlobServicesName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlobServiceProperties,\n    },\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.accountName,\n    Parameters.subscriptionId,\n    Parameters.blobServicesName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getServicePropertiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/{BlobServicesName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlobServiceProperties,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.accountName,\n    Parameters.subscriptionId,\n    Parameters.blobServicesName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n"]}