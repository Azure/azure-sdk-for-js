/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
export const BlobServiceItems = {
    type: {
        name: "Composite",
        className: "BlobServiceItems",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "BlobServiceProperties",
                        },
                    },
                },
            },
        },
    },
};
export const CorsRules = {
    type: {
        name: "Composite",
        className: "CorsRules",
        modelProperties: {
            corsRules: {
                serializedName: "corsRules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CorsRule",
                        },
                    },
                },
            },
        },
    },
};
export const CorsRule = {
    type: {
        name: "Composite",
        className: "CorsRule",
        modelProperties: {
            allowedOrigins: {
                serializedName: "allowedOrigins",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            allowedMethods: {
                serializedName: "allowedMethods",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            maxAgeInSeconds: {
                serializedName: "maxAgeInSeconds",
                required: true,
                type: {
                    name: "Number",
                },
            },
            exposedHeaders: {
                serializedName: "exposedHeaders",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            allowedHeaders: {
                serializedName: "allowedHeaders",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
        },
    },
};
export const DeleteRetentionPolicy = {
    type: {
        name: "Composite",
        className: "DeleteRetentionPolicy",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean",
                },
            },
            days: {
                constraints: {
                    InclusiveMaximum: 365,
                    InclusiveMinimum: 1,
                },
                serializedName: "days",
                type: {
                    name: "Number",
                },
            },
            allowPermanentDelete: {
                serializedName: "allowPermanentDelete",
                type: {
                    name: "Boolean",
                },
            },
        },
    },
};
export const ChangeFeed = {
    type: {
        name: "Composite",
        className: "ChangeFeed",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean",
                },
            },
            retentionInDays: {
                constraints: {
                    InclusiveMaximum: 146000,
                    InclusiveMinimum: 1,
                },
                serializedName: "retentionInDays",
                type: {
                    name: "Number",
                },
            },
        },
    },
};
export const RestorePolicyProperties = {
    type: {
        name: "Composite",
        className: "RestorePolicyProperties",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                required: true,
                type: {
                    name: "Boolean",
                },
            },
            days: {
                constraints: {
                    InclusiveMaximum: 365,
                    InclusiveMinimum: 1,
                },
                serializedName: "days",
                type: {
                    name: "Number",
                },
            },
            lastEnabledTime: {
                serializedName: "lastEnabledTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            },
            minRestoreTime: {
                serializedName: "minRestoreTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            },
        },
    },
};
export const LastAccessTimeTrackingPolicy = {
    type: {
        name: "Composite",
        className: "LastAccessTimeTrackingPolicy",
        modelProperties: {
            enable: {
                serializedName: "enable",
                required: true,
                type: {
                    name: "Boolean",
                },
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String",
                },
            },
            trackingGranularityInDays: {
                serializedName: "trackingGranularityInDays",
                type: {
                    name: "Number",
                },
            },
            blobType: {
                serializedName: "blobType",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
        },
    },
};
export const Sku = {
    type: {
        name: "Composite",
        className: "Sku",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String",
                },
            },
            tier: {
                serializedName: "tier",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Standard", "Premium"],
                },
            },
        },
    },
};
export const Resource = {
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ListContainerItems = {
    type: {
        name: "Composite",
        className: "ListContainerItems",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ListContainerItem",
                        },
                    },
                },
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ImmutabilityPolicyProperties = {
    type: {
        name: "Composite",
        className: "ImmutabilityPolicyProperties",
        modelProperties: {
            etag: {
                serializedName: "etag",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            updateHistory: {
                serializedName: "updateHistory",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "UpdateHistoryProperty",
                        },
                    },
                },
            },
            immutabilityPeriodSinceCreationInDays: {
                serializedName: "properties.immutabilityPeriodSinceCreationInDays",
                type: {
                    name: "Number",
                },
            },
            state: {
                serializedName: "properties.state",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            allowProtectedAppendWrites: {
                serializedName: "properties.allowProtectedAppendWrites",
                type: {
                    name: "Boolean",
                },
            },
            allowProtectedAppendWritesAll: {
                serializedName: "properties.allowProtectedAppendWritesAll",
                type: {
                    name: "Boolean",
                },
            },
        },
    },
};
export const UpdateHistoryProperty = {
    type: {
        name: "Composite",
        className: "UpdateHistoryProperty",
        modelProperties: {
            update: {
                serializedName: "update",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            immutabilityPeriodSinceCreationInDays: {
                serializedName: "immutabilityPeriodSinceCreationInDays",
                readOnly: true,
                type: {
                    name: "Number",
                },
            },
            timestamp: {
                serializedName: "timestamp",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            },
            objectIdentifier: {
                serializedName: "objectIdentifier",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            tenantId: {
                serializedName: "tenantId",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            upn: {
                serializedName: "upn",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            allowProtectedAppendWrites: {
                serializedName: "allowProtectedAppendWrites",
                type: {
                    name: "Boolean",
                },
            },
            allowProtectedAppendWritesAll: {
                serializedName: "allowProtectedAppendWritesAll",
                type: {
                    name: "Boolean",
                },
            },
        },
    },
};
export const LegalHoldProperties = {
    type: {
        name: "Composite",
        className: "LegalHoldProperties",
        modelProperties: {
            hasLegalHold: {
                serializedName: "hasLegalHold",
                readOnly: true,
                type: {
                    name: "Boolean",
                },
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TagProperty",
                        },
                    },
                },
            },
            protectedAppendWritesHistory: {
                serializedName: "protectedAppendWritesHistory",
                type: {
                    name: "Composite",
                    className: "ProtectedAppendWritesHistory",
                },
            },
        },
    },
};
export const TagProperty = {
    type: {
        name: "Composite",
        className: "TagProperty",
        modelProperties: {
            tag: {
                serializedName: "tag",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            timestamp: {
                serializedName: "timestamp",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            },
            objectIdentifier: {
                serializedName: "objectIdentifier",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            tenantId: {
                serializedName: "tenantId",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            upn: {
                serializedName: "upn",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ProtectedAppendWritesHistory = {
    type: {
        name: "Composite",
        className: "ProtectedAppendWritesHistory",
        modelProperties: {
            allowProtectedAppendWritesAll: {
                serializedName: "allowProtectedAppendWritesAll",
                type: {
                    name: "Boolean",
                },
            },
            timestamp: {
                serializedName: "timestamp",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            },
        },
    },
};
export const ImmutableStorageWithVersioning = {
    type: {
        name: "Composite",
        className: "ImmutableStorageWithVersioning",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean",
                },
            },
            timeStamp: {
                serializedName: "timeStamp",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            },
            migrationState: {
                serializedName: "migrationState",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const LegalHold = {
    type: {
        name: "Composite",
        className: "LegalHold",
        modelProperties: {
            hasLegalHold: {
                serializedName: "hasLegalHold",
                readOnly: true,
                type: {
                    name: "Boolean",
                },
            },
            tags: {
                serializedName: "tags",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        constraints: {
                            MaxLength: 23,
                            MinLength: 3,
                        },
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            allowProtectedAppendWritesAll: {
                serializedName: "allowProtectedAppendWritesAll",
                type: {
                    name: "Boolean",
                },
            },
        },
    },
};
export const LeaseContainerRequest = {
    type: {
        name: "Composite",
        className: "LeaseContainerRequest",
        modelProperties: {
            action: {
                serializedName: "action",
                required: true,
                type: {
                    name: "String",
                },
            },
            leaseId: {
                serializedName: "leaseId",
                type: {
                    name: "String",
                },
            },
            breakPeriod: {
                serializedName: "breakPeriod",
                type: {
                    name: "Number",
                },
            },
            leaseDuration: {
                serializedName: "leaseDuration",
                type: {
                    name: "Number",
                },
            },
            proposedLeaseId: {
                serializedName: "proposedLeaseId",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const LeaseContainerResponse = {
    type: {
        name: "Composite",
        className: "LeaseContainerResponse",
        modelProperties: {
            leaseId: {
                serializedName: "leaseId",
                type: {
                    name: "String",
                },
            },
            leaseTimeSeconds: {
                serializedName: "leaseTimeSeconds",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const CloudError = {
    type: {
        name: "Composite",
        className: "CloudError",
        modelProperties: {
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "CloudErrorBody",
                },
            },
        },
    },
};
export const CloudErrorBody = {
    type: {
        name: "Composite",
        className: "CloudErrorBody",
        modelProperties: {
            code: {
                serializedName: "code",
                type: {
                    name: "String",
                },
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String",
                },
            },
            target: {
                serializedName: "target",
                type: {
                    name: "String",
                },
            },
            details: {
                serializedName: "details",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CloudErrorBody",
                        },
                    },
                },
            },
        },
    },
};
export const FileServiceItems = {
    type: {
        name: "Composite",
        className: "FileServiceItems",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "FileServiceProperties",
                        },
                    },
                },
            },
        },
    },
};
export const ProtocolSettings = {
    type: {
        name: "Composite",
        className: "ProtocolSettings",
        modelProperties: {
            smb: {
                serializedName: "smb",
                type: {
                    name: "Composite",
                    className: "SmbSetting",
                },
            },
        },
    },
};
export const SmbSetting = {
    type: {
        name: "Composite",
        className: "SmbSetting",
        modelProperties: {
            multichannel: {
                serializedName: "multichannel",
                type: {
                    name: "Composite",
                    className: "Multichannel",
                },
            },
            versions: {
                serializedName: "versions",
                type: {
                    name: "String",
                },
            },
            authenticationMethods: {
                serializedName: "authenticationMethods",
                type: {
                    name: "String",
                },
            },
            kerberosTicketEncryption: {
                serializedName: "kerberosTicketEncryption",
                type: {
                    name: "String",
                },
            },
            channelEncryption: {
                serializedName: "channelEncryption",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const Multichannel = {
    type: {
        name: "Composite",
        className: "Multichannel",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean",
                },
            },
        },
    },
};
export const FileServiceUsages = {
    type: {
        name: "Composite",
        className: "FileServiceUsages",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "FileServiceUsage",
                        },
                    },
                },
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const FileServiceUsageProperties = {
    type: {
        name: "Composite",
        className: "FileServiceUsageProperties",
        modelProperties: {
            storageAccountLimits: {
                serializedName: "storageAccountLimits",
                type: {
                    name: "Composite",
                    className: "AccountLimits",
                },
            },
            fileShareLimits: {
                serializedName: "fileShareLimits",
                type: {
                    name: "Composite",
                    className: "FileShareLimits",
                },
            },
            fileShareRecommendations: {
                serializedName: "fileShareRecommendations",
                type: {
                    name: "Composite",
                    className: "FileShareRecommendations",
                },
            },
            burstingConstants: {
                serializedName: "burstingConstants",
                type: {
                    name: "Composite",
                    className: "BurstingConstants",
                },
            },
            storageAccountUsage: {
                serializedName: "storageAccountUsage",
                type: {
                    name: "Composite",
                    className: "AccountUsage",
                },
            },
        },
    },
};
export const AccountLimits = {
    type: {
        name: "Composite",
        className: "AccountLimits",
        modelProperties: {
            maxFileShares: {
                serializedName: "maxFileShares",
                readOnly: true,
                type: {
                    name: "Number",
                },
            },
            maxProvisionedStorageGiB: {
                serializedName: "maxProvisionedStorageGiB",
                readOnly: true,
                type: {
                    name: "Number",
                },
            },
            maxProvisionedIops: {
                serializedName: "maxProvisionedIOPS",
                readOnly: true,
                type: {
                    name: "Number",
                },
            },
            maxProvisionedBandwidthMiBPerSec: {
                serializedName: "maxProvisionedBandwidthMiBPerSec",
                readOnly: true,
                type: {
                    name: "Number",
                },
            },
        },
    },
};
export const FileShareLimits = {
    type: {
        name: "Composite",
        className: "FileShareLimits",
        modelProperties: {
            minProvisionedStorageGiB: {
                serializedName: "minProvisionedStorageGiB",
                readOnly: true,
                type: {
                    name: "Number",
                },
            },
            maxProvisionedStorageGiB: {
                serializedName: "maxProvisionedStorageGiB",
                readOnly: true,
                type: {
                    name: "Number",
                },
            },
            minProvisionedIops: {
                serializedName: "minProvisionedIOPS",
                readOnly: true,
                type: {
                    name: "Number",
                },
            },
            maxProvisionedIops: {
                serializedName: "maxProvisionedIOPS",
                readOnly: true,
                type: {
                    name: "Number",
                },
            },
            minProvisionedBandwidthMiBPerSec: {
                serializedName: "minProvisionedBandwidthMiBPerSec",
                readOnly: true,
                type: {
                    name: "Number",
                },
            },
            maxProvisionedBandwidthMiBPerSec: {
                serializedName: "maxProvisionedBandwidthMiBPerSec",
                readOnly: true,
                type: {
                    name: "Number",
                },
            },
        },
    },
};
export const FileShareRecommendations = {
    type: {
        name: "Composite",
        className: "FileShareRecommendations",
        modelProperties: {
            baseIops: {
                serializedName: "baseIOPS",
                readOnly: true,
                type: {
                    name: "Number",
                },
            },
            ioScalar: {
                serializedName: "ioScalar",
                readOnly: true,
                type: {
                    name: "Number",
                },
            },
            baseBandwidthMiBPerSec: {
                serializedName: "baseBandwidthMiBPerSec",
                readOnly: true,
                type: {
                    name: "Number",
                },
            },
            bandwidthScalar: {
                serializedName: "bandwidthScalar",
                readOnly: true,
                type: {
                    name: "Number",
                },
            },
        },
    },
};
export const BurstingConstants = {
    type: {
        name: "Composite",
        className: "BurstingConstants",
        modelProperties: {
            burstFloorIops: {
                serializedName: "burstFloorIOPS",
                readOnly: true,
                type: {
                    name: "Number",
                },
            },
            burstIOScalar: {
                serializedName: "burstIOScalar",
                readOnly: true,
                type: {
                    name: "Number",
                },
            },
            burstTimeframeSeconds: {
                serializedName: "burstTimeframeSeconds",
                readOnly: true,
                type: {
                    name: "Number",
                },
            },
        },
    },
};
export const AccountUsage = {
    type: {
        name: "Composite",
        className: "AccountUsage",
        modelProperties: {
            liveShares: {
                serializedName: "liveShares",
                type: {
                    name: "Composite",
                    className: "AccountUsageElements",
                },
            },
            softDeletedShares: {
                serializedName: "softDeletedShares",
                type: {
                    name: "Composite",
                    className: "AccountUsageElements",
                },
            },
        },
    },
};
export const AccountUsageElements = {
    type: {
        name: "Composite",
        className: "AccountUsageElements",
        modelProperties: {
            fileShareCount: {
                serializedName: "fileShareCount",
                readOnly: true,
                type: {
                    name: "Number",
                },
            },
            provisionedStorageGiB: {
                serializedName: "provisionedStorageGiB",
                readOnly: true,
                type: {
                    name: "Number",
                },
            },
            provisionedIops: {
                serializedName: "provisionedIOPS",
                readOnly: true,
                type: {
                    name: "Number",
                },
            },
            provisionedBandwidthMiBPerSec: {
                serializedName: "provisionedBandwidthMiBPerSec",
                readOnly: true,
                type: {
                    name: "Number",
                },
            },
        },
    },
};
export const FileShareItems = {
    type: {
        name: "Composite",
        className: "FileShareItems",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "FileShareItem",
                        },
                    },
                },
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const SignedIdentifier = {
    type: {
        name: "Composite",
        className: "SignedIdentifier",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String",
                },
            },
            accessPolicy: {
                serializedName: "accessPolicy",
                type: {
                    name: "Composite",
                    className: "AccessPolicy",
                },
            },
        },
    },
};
export const AccessPolicy = {
    type: {
        name: "Composite",
        className: "AccessPolicy",
        modelProperties: {
            startTime: {
                serializedName: "startTime",
                type: {
                    name: "DateTime",
                },
            },
            expiryTime: {
                serializedName: "expiryTime",
                type: {
                    name: "DateTime",
                },
            },
            permission: {
                serializedName: "permission",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const FileSharePropertiesFileSharePaidBursting = {
    type: {
        name: "Composite",
        className: "FileSharePropertiesFileSharePaidBursting",
        modelProperties: {
            paidBurstingEnabled: {
                serializedName: "paidBurstingEnabled",
                type: {
                    name: "Boolean",
                },
            },
            paidBurstingMaxIops: {
                serializedName: "paidBurstingMaxIops",
                type: {
                    name: "Number",
                },
            },
            paidBurstingMaxBandwidthMibps: {
                serializedName: "paidBurstingMaxBandwidthMibps",
                type: {
                    name: "Number",
                },
            },
        },
    },
};
export const DeletedShare = {
    type: {
        name: "Composite",
        className: "DeletedShare",
        modelProperties: {
            deletedShareName: {
                serializedName: "deletedShareName",
                required: true,
                type: {
                    name: "String",
                },
            },
            deletedShareVersion: {
                serializedName: "deletedShareVersion",
                required: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const LeaseShareRequest = {
    type: {
        name: "Composite",
        className: "LeaseShareRequest",
        modelProperties: {
            action: {
                serializedName: "action",
                required: true,
                type: {
                    name: "String",
                },
            },
            leaseId: {
                serializedName: "leaseId",
                type: {
                    name: "String",
                },
            },
            breakPeriod: {
                serializedName: "breakPeriod",
                type: {
                    name: "Number",
                },
            },
            leaseDuration: {
                serializedName: "leaseDuration",
                type: {
                    name: "Number",
                },
            },
            proposedLeaseId: {
                serializedName: "proposedLeaseId",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const LeaseShareResponse = {
    type: {
        name: "Composite",
        className: "LeaseShareResponse",
        modelProperties: {
            leaseId: {
                serializedName: "leaseId",
                type: {
                    name: "String",
                },
            },
            leaseTimeSeconds: {
                serializedName: "leaseTimeSeconds",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ListQueueServices = {
    type: {
        name: "Composite",
        className: "ListQueueServices",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "QueueServiceProperties",
                        },
                    },
                },
            },
        },
    },
};
export const ListQueueResource = {
    type: {
        name: "Composite",
        className: "ListQueueResource",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ListQueue",
                        },
                    },
                },
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const OperationListResult = {
    type: {
        name: "Composite",
        className: "OperationListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Operation",
                        },
                    },
                },
            },
        },
    },
};
export const Operation = {
    type: {
        name: "Composite",
        className: "Operation",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String",
                },
            },
            display: {
                serializedName: "display",
                type: {
                    name: "Composite",
                    className: "OperationDisplay",
                },
            },
            origin: {
                serializedName: "origin",
                type: {
                    name: "String",
                },
            },
            serviceSpecification: {
                serializedName: "properties.serviceSpecification",
                type: {
                    name: "Composite",
                    className: "ServiceSpecification",
                },
            },
        },
    },
};
export const OperationDisplay = {
    type: {
        name: "Composite",
        className: "OperationDisplay",
        modelProperties: {
            provider: {
                serializedName: "provider",
                type: {
                    name: "String",
                },
            },
            resource: {
                serializedName: "resource",
                type: {
                    name: "String",
                },
            },
            operation: {
                serializedName: "operation",
                type: {
                    name: "String",
                },
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ServiceSpecification = {
    type: {
        name: "Composite",
        className: "ServiceSpecification",
        modelProperties: {
            metricSpecifications: {
                serializedName: "metricSpecifications",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MetricSpecification",
                        },
                    },
                },
            },
        },
    },
};
export const MetricSpecification = {
    type: {
        name: "Composite",
        className: "MetricSpecification",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String",
                },
            },
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String",
                },
            },
            displayDescription: {
                serializedName: "displayDescription",
                type: {
                    name: "String",
                },
            },
            unit: {
                serializedName: "unit",
                type: {
                    name: "String",
                },
            },
            dimensions: {
                serializedName: "dimensions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Dimension",
                        },
                    },
                },
            },
            aggregationType: {
                serializedName: "aggregationType",
                type: {
                    name: "String",
                },
            },
            fillGapWithZero: {
                serializedName: "fillGapWithZero",
                type: {
                    name: "Boolean",
                },
            },
            category: {
                serializedName: "category",
                type: {
                    name: "String",
                },
            },
            resourceIdDimensionNameOverride: {
                serializedName: "resourceIdDimensionNameOverride",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const Dimension = {
    type: {
        name: "Composite",
        className: "Dimension",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String",
                },
            },
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const StorageSkuListResult = {
    type: {
        name: "Composite",
        className: "StorageSkuListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SkuInformation",
                        },
                    },
                },
            },
        },
    },
};
export const SkuInformation = {
    type: {
        name: "Composite",
        className: "SkuInformation",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String",
                },
            },
            tier: {
                serializedName: "tier",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Standard", "Premium"],
                },
            },
            resourceType: {
                serializedName: "resourceType",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            kind: {
                serializedName: "kind",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            locations: {
                serializedName: "locations",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            capabilities: {
                serializedName: "capabilities",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SKUCapability",
                        },
                    },
                },
            },
            restrictions: {
                serializedName: "restrictions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Restriction",
                        },
                    },
                },
            },
        },
    },
};
export const SKUCapability = {
    type: {
        name: "Composite",
        className: "SKUCapability",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const Restriction = {
    type: {
        name: "Composite",
        className: "Restriction",
        modelProperties: {
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            values: {
                serializedName: "values",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            reasonCode: {
                serializedName: "reasonCode",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const StorageAccountCheckNameAvailabilityParameters = {
    type: {
        name: "Composite",
        className: "StorageAccountCheckNameAvailabilityParameters",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String",
                },
            },
            type: {
                defaultValue: "Microsoft.Storage/storageAccounts",
                isConstant: true,
                serializedName: "type",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const CheckNameAvailabilityResult = {
    type: {
        name: "Composite",
        className: "CheckNameAvailabilityResult",
        modelProperties: {
            nameAvailable: {
                serializedName: "nameAvailable",
                readOnly: true,
                type: {
                    name: "Boolean",
                },
            },
            reason: {
                serializedName: "reason",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["AccountNameInvalid", "AlreadyExists"],
                },
            },
            message: {
                serializedName: "message",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const StorageAccountCreateParameters = {
    type: {
        name: "Composite",
        className: "StorageAccountCreateParameters",
        modelProperties: {
            sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku",
                },
            },
            kind: {
                serializedName: "kind",
                required: true,
                type: {
                    name: "String",
                },
            },
            location: {
                serializedName: "location",
                required: true,
                type: {
                    name: "String",
                },
            },
            extendedLocation: {
                serializedName: "extendedLocation",
                type: {
                    name: "Composite",
                    className: "ExtendedLocation",
                },
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } },
                },
            },
            identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "Identity",
                },
            },
            allowedCopyScope: {
                serializedName: "properties.allowedCopyScope",
                type: {
                    name: "String",
                },
            },
            publicNetworkAccess: {
                serializedName: "properties.publicNetworkAccess",
                type: {
                    name: "String",
                },
            },
            sasPolicy: {
                serializedName: "properties.sasPolicy",
                type: {
                    name: "Composite",
                    className: "SasPolicy",
                },
            },
            keyPolicy: {
                serializedName: "properties.keyPolicy",
                type: {
                    name: "Composite",
                    className: "KeyPolicy",
                },
            },
            customDomain: {
                serializedName: "properties.customDomain",
                type: {
                    name: "Composite",
                    className: "CustomDomain",
                },
            },
            encryption: {
                serializedName: "properties.encryption",
                type: {
                    name: "Composite",
                    className: "Encryption",
                },
            },
            networkRuleSet: {
                serializedName: "properties.networkAcls",
                type: {
                    name: "Composite",
                    className: "NetworkRuleSet",
                },
            },
            accessTier: {
                serializedName: "properties.accessTier",
                type: {
                    name: "Enum",
                    allowedValues: ["Hot", "Cool", "Premium", "Cold"],
                },
            },
            azureFilesIdentityBasedAuthentication: {
                serializedName: "properties.azureFilesIdentityBasedAuthentication",
                type: {
                    name: "Composite",
                    className: "AzureFilesIdentityBasedAuthentication",
                },
            },
            enableHttpsTrafficOnly: {
                serializedName: "properties.supportsHttpsTrafficOnly",
                type: {
                    name: "Boolean",
                },
            },
            isSftpEnabled: {
                serializedName: "properties.isSftpEnabled",
                type: {
                    name: "Boolean",
                },
            },
            isLocalUserEnabled: {
                serializedName: "properties.isLocalUserEnabled",
                type: {
                    name: "Boolean",
                },
            },
            enableExtendedGroups: {
                serializedName: "properties.enableExtendedGroups",
                type: {
                    name: "Boolean",
                },
            },
            isHnsEnabled: {
                serializedName: "properties.isHnsEnabled",
                type: {
                    name: "Boolean",
                },
            },
            largeFileSharesState: {
                serializedName: "properties.largeFileSharesState",
                type: {
                    name: "String",
                },
            },
            routingPreference: {
                serializedName: "properties.routingPreference",
                type: {
                    name: "Composite",
                    className: "RoutingPreference",
                },
            },
            allowBlobPublicAccess: {
                serializedName: "properties.allowBlobPublicAccess",
                type: {
                    name: "Boolean",
                },
            },
            minimumTlsVersion: {
                serializedName: "properties.minimumTlsVersion",
                type: {
                    name: "String",
                },
            },
            allowSharedKeyAccess: {
                serializedName: "properties.allowSharedKeyAccess",
                type: {
                    name: "Boolean",
                },
            },
            enableNfsV3: {
                serializedName: "properties.isNfsV3Enabled",
                type: {
                    name: "Boolean",
                },
            },
            allowCrossTenantReplication: {
                serializedName: "properties.allowCrossTenantReplication",
                type: {
                    name: "Boolean",
                },
            },
            defaultToOAuthAuthentication: {
                serializedName: "properties.defaultToOAuthAuthentication",
                type: {
                    name: "Boolean",
                },
            },
            immutableStorageWithVersioning: {
                serializedName: "properties.immutableStorageWithVersioning",
                type: {
                    name: "Composite",
                    className: "ImmutableStorageAccount",
                },
            },
            dnsEndpointType: {
                serializedName: "properties.dnsEndpointType",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ExtendedLocation = {
    type: {
        name: "Composite",
        className: "ExtendedLocation",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String",
                },
            },
            type: {
                serializedName: "type",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const Identity = {
    type: {
        name: "Composite",
        className: "Identity",
        modelProperties: {
            principalId: {
                serializedName: "principalId",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            tenantId: {
                serializedName: "tenantId",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            type: {
                serializedName: "type",
                required: true,
                type: {
                    name: "String",
                },
            },
            userAssignedIdentities: {
                serializedName: "userAssignedIdentities",
                type: {
                    name: "Dictionary",
                    value: {
                        type: { name: "Composite", className: "UserAssignedIdentity" },
                    },
                },
            },
        },
    },
};
export const UserAssignedIdentity = {
    type: {
        name: "Composite",
        className: "UserAssignedIdentity",
        modelProperties: {
            principalId: {
                serializedName: "principalId",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            clientId: {
                serializedName: "clientId",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const SasPolicy = {
    type: {
        name: "Composite",
        className: "SasPolicy",
        modelProperties: {
            sasExpirationPeriod: {
                serializedName: "sasExpirationPeriod",
                required: true,
                type: {
                    name: "String",
                },
            },
            expirationAction: {
                defaultValue: "Log",
                serializedName: "expirationAction",
                required: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const KeyPolicy = {
    type: {
        name: "Composite",
        className: "KeyPolicy",
        modelProperties: {
            keyExpirationPeriodInDays: {
                serializedName: "keyExpirationPeriodInDays",
                required: true,
                type: {
                    name: "Number",
                },
            },
        },
    },
};
export const CustomDomain = {
    type: {
        name: "Composite",
        className: "CustomDomain",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String",
                },
            },
            useSubDomainName: {
                serializedName: "useSubDomainName",
                type: {
                    name: "Boolean",
                },
            },
        },
    },
};
export const Encryption = {
    type: {
        name: "Composite",
        className: "Encryption",
        modelProperties: {
            services: {
                serializedName: "services",
                type: {
                    name: "Composite",
                    className: "EncryptionServices",
                },
            },
            keySource: {
                defaultValue: "Microsoft.Storage",
                serializedName: "keySource",
                type: {
                    name: "String",
                },
            },
            requireInfrastructureEncryption: {
                serializedName: "requireInfrastructureEncryption",
                type: {
                    name: "Boolean",
                },
            },
            keyVaultProperties: {
                serializedName: "keyvaultproperties",
                type: {
                    name: "Composite",
                    className: "KeyVaultProperties",
                },
            },
            encryptionIdentity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "EncryptionIdentity",
                },
            },
        },
    },
};
export const EncryptionServices = {
    type: {
        name: "Composite",
        className: "EncryptionServices",
        modelProperties: {
            blob: {
                serializedName: "blob",
                type: {
                    name: "Composite",
                    className: "EncryptionService",
                },
            },
            file: {
                serializedName: "file",
                type: {
                    name: "Composite",
                    className: "EncryptionService",
                },
            },
            table: {
                serializedName: "table",
                type: {
                    name: "Composite",
                    className: "EncryptionService",
                },
            },
            queue: {
                serializedName: "queue",
                type: {
                    name: "Composite",
                    className: "EncryptionService",
                },
            },
        },
    },
};
export const EncryptionService = {
    type: {
        name: "Composite",
        className: "EncryptionService",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean",
                },
            },
            lastEnabledTime: {
                serializedName: "lastEnabledTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            },
            keyType: {
                serializedName: "keyType",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const KeyVaultProperties = {
    type: {
        name: "Composite",
        className: "KeyVaultProperties",
        modelProperties: {
            keyName: {
                serializedName: "keyname",
                type: {
                    name: "String",
                },
            },
            keyVersion: {
                serializedName: "keyversion",
                type: {
                    name: "String",
                },
            },
            keyVaultUri: {
                serializedName: "keyvaulturi",
                type: {
                    name: "String",
                },
            },
            currentVersionedKeyIdentifier: {
                serializedName: "currentVersionedKeyIdentifier",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            lastKeyRotationTimestamp: {
                serializedName: "lastKeyRotationTimestamp",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            },
            currentVersionedKeyExpirationTimestamp: {
                serializedName: "currentVersionedKeyExpirationTimestamp",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            },
        },
    },
};
export const EncryptionIdentity = {
    type: {
        name: "Composite",
        className: "EncryptionIdentity",
        modelProperties: {
            encryptionUserAssignedIdentity: {
                serializedName: "userAssignedIdentity",
                type: {
                    name: "String",
                },
            },
            encryptionFederatedIdentityClientId: {
                serializedName: "federatedIdentityClientId",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const NetworkRuleSet = {
    type: {
        name: "Composite",
        className: "NetworkRuleSet",
        modelProperties: {
            bypass: {
                defaultValue: "AzureServices",
                serializedName: "bypass",
                type: {
                    name: "String",
                },
            },
            resourceAccessRules: {
                serializedName: "resourceAccessRules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ResourceAccessRule",
                        },
                    },
                },
            },
            virtualNetworkRules: {
                serializedName: "virtualNetworkRules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualNetworkRule",
                        },
                    },
                },
            },
            ipRules: {
                serializedName: "ipRules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "IPRule",
                        },
                    },
                },
            },
            defaultAction: {
                defaultValue: "Allow",
                serializedName: "defaultAction",
                required: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Allow", "Deny"],
                },
            },
        },
    },
};
export const ResourceAccessRule = {
    type: {
        name: "Composite",
        className: "ResourceAccessRule",
        modelProperties: {
            tenantId: {
                serializedName: "tenantId",
                type: {
                    name: "String",
                },
            },
            resourceId: {
                serializedName: "resourceId",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const VirtualNetworkRule = {
    type: {
        name: "Composite",
        className: "VirtualNetworkRule",
        modelProperties: {
            virtualNetworkResourceId: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String",
                },
            },
            action: {
                defaultValue: "Allow",
                isConstant: true,
                serializedName: "action",
                type: {
                    name: "String",
                },
            },
            state: {
                serializedName: "state",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const IPRule = {
    type: {
        name: "Composite",
        className: "IPRule",
        modelProperties: {
            iPAddressOrRange: {
                serializedName: "value",
                required: true,
                type: {
                    name: "String",
                },
            },
            action: {
                defaultValue: "Allow",
                isConstant: true,
                serializedName: "action",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const AzureFilesIdentityBasedAuthentication = {
    type: {
        name: "Composite",
        className: "AzureFilesIdentityBasedAuthentication",
        modelProperties: {
            directoryServiceOptions: {
                serializedName: "directoryServiceOptions",
                required: true,
                type: {
                    name: "String",
                },
            },
            activeDirectoryProperties: {
                serializedName: "activeDirectoryProperties",
                type: {
                    name: "Composite",
                    className: "ActiveDirectoryProperties",
                },
            },
            defaultSharePermission: {
                serializedName: "defaultSharePermission",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ActiveDirectoryProperties = {
    type: {
        name: "Composite",
        className: "ActiveDirectoryProperties",
        modelProperties: {
            domainName: {
                serializedName: "domainName",
                required: true,
                type: {
                    name: "String",
                },
            },
            netBiosDomainName: {
                serializedName: "netBiosDomainName",
                type: {
                    name: "String",
                },
            },
            forestName: {
                serializedName: "forestName",
                type: {
                    name: "String",
                },
            },
            domainGuid: {
                serializedName: "domainGuid",
                required: true,
                type: {
                    name: "String",
                },
            },
            domainSid: {
                serializedName: "domainSid",
                type: {
                    name: "String",
                },
            },
            azureStorageSid: {
                serializedName: "azureStorageSid",
                type: {
                    name: "String",
                },
            },
            samAccountName: {
                serializedName: "samAccountName",
                type: {
                    name: "String",
                },
            },
            accountType: {
                serializedName: "accountType",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const RoutingPreference = {
    type: {
        name: "Composite",
        className: "RoutingPreference",
        modelProperties: {
            routingChoice: {
                serializedName: "routingChoice",
                type: {
                    name: "String",
                },
            },
            publishMicrosoftEndpoints: {
                serializedName: "publishMicrosoftEndpoints",
                type: {
                    name: "Boolean",
                },
            },
            publishInternetEndpoints: {
                serializedName: "publishInternetEndpoints",
                type: {
                    name: "Boolean",
                },
            },
        },
    },
};
export const ImmutableStorageAccount = {
    type: {
        name: "Composite",
        className: "ImmutableStorageAccount",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean",
                },
            },
            immutabilityPolicy: {
                serializedName: "immutabilityPolicy",
                type: {
                    name: "Composite",
                    className: "AccountImmutabilityPolicyProperties",
                },
            },
        },
    },
};
export const AccountImmutabilityPolicyProperties = {
    type: {
        name: "Composite",
        className: "AccountImmutabilityPolicyProperties",
        modelProperties: {
            immutabilityPeriodSinceCreationInDays: {
                constraints: {
                    InclusiveMaximum: 146000,
                    InclusiveMinimum: 1,
                },
                serializedName: "immutabilityPeriodSinceCreationInDays",
                type: {
                    name: "Number",
                },
            },
            state: {
                serializedName: "state",
                type: {
                    name: "String",
                },
            },
            allowProtectedAppendWrites: {
                serializedName: "allowProtectedAppendWrites",
                type: {
                    name: "Boolean",
                },
            },
        },
    },
};
export const Endpoints = {
    type: {
        name: "Composite",
        className: "Endpoints",
        modelProperties: {
            blob: {
                serializedName: "blob",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            queue: {
                serializedName: "queue",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            table: {
                serializedName: "table",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            file: {
                serializedName: "file",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            web: {
                serializedName: "web",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            dfs: {
                serializedName: "dfs",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            microsoftEndpoints: {
                serializedName: "microsoftEndpoints",
                type: {
                    name: "Composite",
                    className: "StorageAccountMicrosoftEndpoints",
                },
            },
            internetEndpoints: {
                serializedName: "internetEndpoints",
                type: {
                    name: "Composite",
                    className: "StorageAccountInternetEndpoints",
                },
            },
        },
    },
};
export const StorageAccountMicrosoftEndpoints = {
    type: {
        name: "Composite",
        className: "StorageAccountMicrosoftEndpoints",
        modelProperties: {
            blob: {
                serializedName: "blob",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            queue: {
                serializedName: "queue",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            table: {
                serializedName: "table",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            file: {
                serializedName: "file",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            web: {
                serializedName: "web",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            dfs: {
                serializedName: "dfs",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const StorageAccountInternetEndpoints = {
    type: {
        name: "Composite",
        className: "StorageAccountInternetEndpoints",
        modelProperties: {
            blob: {
                serializedName: "blob",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            file: {
                serializedName: "file",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            web: {
                serializedName: "web",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            dfs: {
                serializedName: "dfs",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const KeyCreationTime = {
    type: {
        name: "Composite",
        className: "KeyCreationTime",
        modelProperties: {
            key1: {
                serializedName: "key1",
                type: {
                    name: "DateTime",
                },
            },
            key2: {
                serializedName: "key2",
                type: {
                    name: "DateTime",
                },
            },
        },
    },
};
export const GeoReplicationStats = {
    type: {
        name: "Composite",
        className: "GeoReplicationStats",
        modelProperties: {
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            lastSyncTime: {
                serializedName: "lastSyncTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            },
            canFailover: {
                serializedName: "canFailover",
                readOnly: true,
                type: {
                    name: "Boolean",
                },
            },
            canPlannedFailover: {
                serializedName: "canPlannedFailover",
                readOnly: true,
                type: {
                    name: "Boolean",
                },
            },
            postFailoverRedundancy: {
                serializedName: "postFailoverRedundancy",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            postPlannedFailoverRedundancy: {
                serializedName: "postPlannedFailoverRedundancy",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const PrivateEndpoint = {
    type: {
        name: "Composite",
        className: "PrivateEndpoint",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const PrivateLinkServiceConnectionState = {
    type: {
        name: "Composite",
        className: "PrivateLinkServiceConnectionState",
        modelProperties: {
            status: {
                serializedName: "status",
                type: {
                    name: "String",
                },
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String",
                },
            },
            actionRequired: {
                serializedName: "actionRequired",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const BlobRestoreStatus = {
    type: {
        name: "Composite",
        className: "BlobRestoreStatus",
        modelProperties: {
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            failureReason: {
                serializedName: "failureReason",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            restoreId: {
                serializedName: "restoreId",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            parameters: {
                serializedName: "parameters",
                type: {
                    name: "Composite",
                    className: "BlobRestoreParameters",
                },
            },
        },
    },
};
export const BlobRestoreParameters = {
    type: {
        name: "Composite",
        className: "BlobRestoreParameters",
        modelProperties: {
            timeToRestore: {
                serializedName: "timeToRestore",
                required: true,
                type: {
                    name: "DateTime",
                },
            },
            blobRanges: {
                serializedName: "blobRanges",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "BlobRestoreRange",
                        },
                    },
                },
            },
        },
    },
};
export const BlobRestoreRange = {
    type: {
        name: "Composite",
        className: "BlobRestoreRange",
        modelProperties: {
            startRange: {
                serializedName: "startRange",
                required: true,
                type: {
                    name: "String",
                },
            },
            endRange: {
                serializedName: "endRange",
                required: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const StorageAccountSkuConversionStatus = {
    type: {
        name: "Composite",
        className: "StorageAccountSkuConversionStatus",
        modelProperties: {
            skuConversionStatus: {
                serializedName: "skuConversionStatus",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            targetSkuName: {
                serializedName: "targetSkuName",
                type: {
                    name: "String",
                },
            },
            startTime: {
                serializedName: "startTime",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            endTime: {
                serializedName: "endTime",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const StorageAccountUpdateParameters = {
    type: {
        name: "Composite",
        className: "StorageAccountUpdateParameters",
        modelProperties: {
            sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku",
                },
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } },
                },
            },
            identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "Identity",
                },
            },
            kind: {
                serializedName: "kind",
                type: {
                    name: "String",
                },
            },
            customDomain: {
                serializedName: "properties.customDomain",
                type: {
                    name: "Composite",
                    className: "CustomDomain",
                },
            },
            encryption: {
                serializedName: "properties.encryption",
                type: {
                    name: "Composite",
                    className: "Encryption",
                },
            },
            sasPolicy: {
                serializedName: "properties.sasPolicy",
                type: {
                    name: "Composite",
                    className: "SasPolicy",
                },
            },
            keyPolicy: {
                serializedName: "properties.keyPolicy",
                type: {
                    name: "Composite",
                    className: "KeyPolicy",
                },
            },
            accessTier: {
                serializedName: "properties.accessTier",
                type: {
                    name: "Enum",
                    allowedValues: ["Hot", "Cool", "Premium", "Cold"],
                },
            },
            azureFilesIdentityBasedAuthentication: {
                serializedName: "properties.azureFilesIdentityBasedAuthentication",
                type: {
                    name: "Composite",
                    className: "AzureFilesIdentityBasedAuthentication",
                },
            },
            enableHttpsTrafficOnly: {
                serializedName: "properties.supportsHttpsTrafficOnly",
                type: {
                    name: "Boolean",
                },
            },
            isSftpEnabled: {
                serializedName: "properties.isSftpEnabled",
                type: {
                    name: "Boolean",
                },
            },
            isLocalUserEnabled: {
                serializedName: "properties.isLocalUserEnabled",
                type: {
                    name: "Boolean",
                },
            },
            enableExtendedGroups: {
                serializedName: "properties.enableExtendedGroups",
                type: {
                    name: "Boolean",
                },
            },
            networkRuleSet: {
                serializedName: "properties.networkAcls",
                type: {
                    name: "Composite",
                    className: "NetworkRuleSet",
                },
            },
            largeFileSharesState: {
                serializedName: "properties.largeFileSharesState",
                type: {
                    name: "String",
                },
            },
            routingPreference: {
                serializedName: "properties.routingPreference",
                type: {
                    name: "Composite",
                    className: "RoutingPreference",
                },
            },
            allowBlobPublicAccess: {
                serializedName: "properties.allowBlobPublicAccess",
                type: {
                    name: "Boolean",
                },
            },
            minimumTlsVersion: {
                serializedName: "properties.minimumTlsVersion",
                type: {
                    name: "String",
                },
            },
            allowSharedKeyAccess: {
                serializedName: "properties.allowSharedKeyAccess",
                type: {
                    name: "Boolean",
                },
            },
            allowCrossTenantReplication: {
                serializedName: "properties.allowCrossTenantReplication",
                type: {
                    name: "Boolean",
                },
            },
            defaultToOAuthAuthentication: {
                serializedName: "properties.defaultToOAuthAuthentication",
                type: {
                    name: "Boolean",
                },
            },
            publicNetworkAccess: {
                serializedName: "properties.publicNetworkAccess",
                type: {
                    name: "String",
                },
            },
            immutableStorageWithVersioning: {
                serializedName: "properties.immutableStorageWithVersioning",
                type: {
                    name: "Composite",
                    className: "ImmutableStorageAccount",
                },
            },
            allowedCopyScope: {
                serializedName: "properties.allowedCopyScope",
                type: {
                    name: "String",
                },
            },
            dnsEndpointType: {
                serializedName: "properties.dnsEndpointType",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const DeletedAccountListResult = {
    type: {
        name: "Composite",
        className: "DeletedAccountListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DeletedAccount",
                        },
                    },
                },
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ErrorResponse = {
    type: {
        name: "Composite",
        className: "ErrorResponse",
        modelProperties: {
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ErrorResponseBody",
                },
            },
        },
    },
};
export const ErrorResponseBody = {
    type: {
        name: "Composite",
        className: "ErrorResponseBody",
        modelProperties: {
            code: {
                serializedName: "code",
                type: {
                    name: "String",
                },
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const StorageAccountListResult = {
    type: {
        name: "Composite",
        className: "StorageAccountListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StorageAccount",
                        },
                    },
                },
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const StorageAccountListKeysResult = {
    type: {
        name: "Composite",
        className: "StorageAccountListKeysResult",
        modelProperties: {
            keys: {
                serializedName: "keys",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StorageAccountKey",
                        },
                    },
                },
            },
        },
    },
};
export const StorageAccountKey = {
    type: {
        name: "Composite",
        className: "StorageAccountKey",
        modelProperties: {
            keyName: {
                serializedName: "keyName",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            permissions: {
                serializedName: "permissions",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Read", "Full"],
                },
            },
            creationTime: {
                serializedName: "creationTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            },
        },
    },
};
export const StorageAccountRegenerateKeyParameters = {
    type: {
        name: "Composite",
        className: "StorageAccountRegenerateKeyParameters",
        modelProperties: {
            keyName: {
                serializedName: "keyName",
                required: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const UsageListResult = {
    type: {
        name: "Composite",
        className: "UsageListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Usage",
                        },
                    },
                },
            },
        },
    },
};
export const Usage = {
    type: {
        name: "Composite",
        className: "Usage",
        modelProperties: {
            unit: {
                serializedName: "unit",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Count",
                        "Bytes",
                        "Seconds",
                        "Percent",
                        "CountsPerSecond",
                        "BytesPerSecond",
                    ],
                },
            },
            currentValue: {
                serializedName: "currentValue",
                readOnly: true,
                type: {
                    name: "Number",
                },
            },
            limit: {
                serializedName: "limit",
                readOnly: true,
                type: {
                    name: "Number",
                },
            },
            name: {
                serializedName: "name",
                type: {
                    name: "Composite",
                    className: "UsageName",
                },
            },
        },
    },
};
export const UsageName = {
    type: {
        name: "Composite",
        className: "UsageName",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            localizedValue: {
                serializedName: "localizedValue",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const AccountSasParameters = {
    type: {
        name: "Composite",
        className: "AccountSasParameters",
        modelProperties: {
            services: {
                serializedName: "signedServices",
                required: true,
                type: {
                    name: "String",
                },
            },
            resourceTypes: {
                serializedName: "signedResourceTypes",
                required: true,
                type: {
                    name: "String",
                },
            },
            permissions: {
                serializedName: "signedPermission",
                required: true,
                type: {
                    name: "String",
                },
            },
            iPAddressOrRange: {
                serializedName: "signedIp",
                type: {
                    name: "String",
                },
            },
            protocols: {
                serializedName: "signedProtocol",
                type: {
                    name: "Enum",
                    allowedValues: ["https,http", "https"],
                },
            },
            sharedAccessStartTime: {
                serializedName: "signedStart",
                type: {
                    name: "DateTime",
                },
            },
            sharedAccessExpiryTime: {
                serializedName: "signedExpiry",
                required: true,
                type: {
                    name: "DateTime",
                },
            },
            keyToSign: {
                serializedName: "keyToSign",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ListAccountSasResponse = {
    type: {
        name: "Composite",
        className: "ListAccountSasResponse",
        modelProperties: {
            accountSasToken: {
                serializedName: "accountSasToken",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ServiceSasParameters = {
    type: {
        name: "Composite",
        className: "ServiceSasParameters",
        modelProperties: {
            canonicalizedResource: {
                serializedName: "canonicalizedResource",
                required: true,
                type: {
                    name: "String",
                },
            },
            resource: {
                serializedName: "signedResource",
                type: {
                    name: "String",
                },
            },
            permissions: {
                serializedName: "signedPermission",
                type: {
                    name: "String",
                },
            },
            iPAddressOrRange: {
                serializedName: "signedIp",
                type: {
                    name: "String",
                },
            },
            protocols: {
                serializedName: "signedProtocol",
                type: {
                    name: "Enum",
                    allowedValues: ["https,http", "https"],
                },
            },
            sharedAccessStartTime: {
                serializedName: "signedStart",
                type: {
                    name: "DateTime",
                },
            },
            sharedAccessExpiryTime: {
                serializedName: "signedExpiry",
                type: {
                    name: "DateTime",
                },
            },
            identifier: {
                constraints: {
                    MaxLength: 64,
                },
                serializedName: "signedIdentifier",
                type: {
                    name: "String",
                },
            },
            partitionKeyStart: {
                serializedName: "startPk",
                type: {
                    name: "String",
                },
            },
            partitionKeyEnd: {
                serializedName: "endPk",
                type: {
                    name: "String",
                },
            },
            rowKeyStart: {
                serializedName: "startRk",
                type: {
                    name: "String",
                },
            },
            rowKeyEnd: {
                serializedName: "endRk",
                type: {
                    name: "String",
                },
            },
            keyToSign: {
                serializedName: "keyToSign",
                type: {
                    name: "String",
                },
            },
            cacheControl: {
                serializedName: "rscc",
                type: {
                    name: "String",
                },
            },
            contentDisposition: {
                serializedName: "rscd",
                type: {
                    name: "String",
                },
            },
            contentEncoding: {
                serializedName: "rsce",
                type: {
                    name: "String",
                },
            },
            contentLanguage: {
                serializedName: "rscl",
                type: {
                    name: "String",
                },
            },
            contentType: {
                serializedName: "rsct",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ListServiceSasResponse = {
    type: {
        name: "Composite",
        className: "ListServiceSasResponse",
        modelProperties: {
            serviceSasToken: {
                serializedName: "serviceSasToken",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const StorageAccountMigration = {
    type: {
        name: "Composite",
        className: "StorageAccountMigration",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String",
                },
            },
            type: {
                serializedName: "type",
                type: {
                    name: "String",
                },
            },
            targetSkuName: {
                serializedName: "properties.targetSkuName",
                required: true,
                type: {
                    name: "String",
                },
            },
            migrationStatus: {
                serializedName: "properties.migrationStatus",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            migrationFailedReason: {
                serializedName: "properties.migrationFailedReason",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            migrationFailedDetailedReason: {
                serializedName: "properties.migrationFailedDetailedReason",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ErrorResponseAutoGenerated = {
    type: {
        name: "Composite",
        className: "ErrorResponseAutoGenerated",
        modelProperties: {
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ErrorDetail",
                },
            },
        },
    },
};
export const ErrorDetail = {
    type: {
        name: "Composite",
        className: "ErrorDetail",
        modelProperties: {
            code: {
                serializedName: "code",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            message: {
                serializedName: "message",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            target: {
                serializedName: "target",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            details: {
                serializedName: "details",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ErrorDetail",
                        },
                    },
                },
            },
            additionalInfo: {
                serializedName: "additionalInfo",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ErrorAdditionalInfo",
                        },
                    },
                },
            },
        },
    },
};
export const ErrorAdditionalInfo = {
    type: {
        name: "Composite",
        className: "ErrorAdditionalInfo",
        modelProperties: {
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            info: {
                serializedName: "info",
                readOnly: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "any" } },
                },
            },
        },
    },
};
export const ManagementPolicySchema = {
    type: {
        name: "Composite",
        className: "ManagementPolicySchema",
        modelProperties: {
            rules: {
                serializedName: "rules",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagementPolicyRule",
                        },
                    },
                },
            },
        },
    },
};
export const ManagementPolicyRule = {
    type: {
        name: "Composite",
        className: "ManagementPolicyRule",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean",
                },
            },
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String",
                },
            },
            type: {
                serializedName: "type",
                required: true,
                type: {
                    name: "String",
                },
            },
            definition: {
                serializedName: "definition",
                type: {
                    name: "Composite",
                    className: "ManagementPolicyDefinition",
                },
            },
        },
    },
};
export const ManagementPolicyDefinition = {
    type: {
        name: "Composite",
        className: "ManagementPolicyDefinition",
        modelProperties: {
            actions: {
                serializedName: "actions",
                type: {
                    name: "Composite",
                    className: "ManagementPolicyAction",
                },
            },
            filters: {
                serializedName: "filters",
                type: {
                    name: "Composite",
                    className: "ManagementPolicyFilter",
                },
            },
        },
    },
};
export const ManagementPolicyAction = {
    type: {
        name: "Composite",
        className: "ManagementPolicyAction",
        modelProperties: {
            baseBlob: {
                serializedName: "baseBlob",
                type: {
                    name: "Composite",
                    className: "ManagementPolicyBaseBlob",
                },
            },
            snapshot: {
                serializedName: "snapshot",
                type: {
                    name: "Composite",
                    className: "ManagementPolicySnapShot",
                },
            },
            version: {
                serializedName: "version",
                type: {
                    name: "Composite",
                    className: "ManagementPolicyVersion",
                },
            },
        },
    },
};
export const ManagementPolicyBaseBlob = {
    type: {
        name: "Composite",
        className: "ManagementPolicyBaseBlob",
        modelProperties: {
            tierToCool: {
                serializedName: "tierToCool",
                type: {
                    name: "Composite",
                    className: "DateAfterModification",
                },
            },
            tierToArchive: {
                serializedName: "tierToArchive",
                type: {
                    name: "Composite",
                    className: "DateAfterModification",
                },
            },
            tierToCold: {
                serializedName: "tierToCold",
                type: {
                    name: "Composite",
                    className: "DateAfterModification",
                },
            },
            tierToHot: {
                serializedName: "tierToHot",
                type: {
                    name: "Composite",
                    className: "DateAfterModification",
                },
            },
            delete: {
                serializedName: "delete",
                type: {
                    name: "Composite",
                    className: "DateAfterModification",
                },
            },
            enableAutoTierToHotFromCool: {
                serializedName: "enableAutoTierToHotFromCool",
                type: {
                    name: "Boolean",
                },
            },
        },
    },
};
export const DateAfterModification = {
    type: {
        name: "Composite",
        className: "DateAfterModification",
        modelProperties: {
            daysAfterModificationGreaterThan: {
                constraints: {
                    InclusiveMinimum: 0,
                    MultipleOf: 1,
                },
                serializedName: "daysAfterModificationGreaterThan",
                type: {
                    name: "Number",
                },
            },
            daysAfterLastAccessTimeGreaterThan: {
                constraints: {
                    InclusiveMinimum: 0,
                    MultipleOf: 1,
                },
                serializedName: "daysAfterLastAccessTimeGreaterThan",
                type: {
                    name: "Number",
                },
            },
            daysAfterLastTierChangeGreaterThan: {
                constraints: {
                    InclusiveMinimum: 0,
                    MultipleOf: 1,
                },
                serializedName: "daysAfterLastTierChangeGreaterThan",
                type: {
                    name: "Number",
                },
            },
            daysAfterCreationGreaterThan: {
                constraints: {
                    InclusiveMinimum: 0,
                    MultipleOf: 1,
                },
                serializedName: "daysAfterCreationGreaterThan",
                type: {
                    name: "Number",
                },
            },
        },
    },
};
export const ManagementPolicySnapShot = {
    type: {
        name: "Composite",
        className: "ManagementPolicySnapShot",
        modelProperties: {
            tierToCool: {
                serializedName: "tierToCool",
                type: {
                    name: "Composite",
                    className: "DateAfterCreation",
                },
            },
            tierToArchive: {
                serializedName: "tierToArchive",
                type: {
                    name: "Composite",
                    className: "DateAfterCreation",
                },
            },
            tierToCold: {
                serializedName: "tierToCold",
                type: {
                    name: "Composite",
                    className: "DateAfterCreation",
                },
            },
            tierToHot: {
                serializedName: "tierToHot",
                type: {
                    name: "Composite",
                    className: "DateAfterCreation",
                },
            },
            delete: {
                serializedName: "delete",
                type: {
                    name: "Composite",
                    className: "DateAfterCreation",
                },
            },
        },
    },
};
export const DateAfterCreation = {
    type: {
        name: "Composite",
        className: "DateAfterCreation",
        modelProperties: {
            daysAfterCreationGreaterThan: {
                constraints: {
                    InclusiveMinimum: 0,
                    MultipleOf: 1,
                },
                serializedName: "daysAfterCreationGreaterThan",
                required: true,
                type: {
                    name: "Number",
                },
            },
            daysAfterLastTierChangeGreaterThan: {
                constraints: {
                    InclusiveMinimum: 0,
                    MultipleOf: 1,
                },
                serializedName: "daysAfterLastTierChangeGreaterThan",
                type: {
                    name: "Number",
                },
            },
        },
    },
};
export const ManagementPolicyVersion = {
    type: {
        name: "Composite",
        className: "ManagementPolicyVersion",
        modelProperties: {
            tierToCool: {
                serializedName: "tierToCool",
                type: {
                    name: "Composite",
                    className: "DateAfterCreation",
                },
            },
            tierToArchive: {
                serializedName: "tierToArchive",
                type: {
                    name: "Composite",
                    className: "DateAfterCreation",
                },
            },
            tierToCold: {
                serializedName: "tierToCold",
                type: {
                    name: "Composite",
                    className: "DateAfterCreation",
                },
            },
            tierToHot: {
                serializedName: "tierToHot",
                type: {
                    name: "Composite",
                    className: "DateAfterCreation",
                },
            },
            delete: {
                serializedName: "delete",
                type: {
                    name: "Composite",
                    className: "DateAfterCreation",
                },
            },
        },
    },
};
export const ManagementPolicyFilter = {
    type: {
        name: "Composite",
        className: "ManagementPolicyFilter",
        modelProperties: {
            prefixMatch: {
                serializedName: "prefixMatch",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            blobTypes: {
                serializedName: "blobTypes",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            blobIndexMatch: {
                serializedName: "blobIndexMatch",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TagFilter",
                        },
                    },
                },
            },
        },
    },
};
export const TagFilter = {
    type: {
        name: "Composite",
        className: "TagFilter",
        modelProperties: {
            name: {
                constraints: {
                    MaxLength: 128,
                    MinLength: 1,
                },
                serializedName: "name",
                required: true,
                type: {
                    name: "String",
                },
            },
            op: {
                serializedName: "op",
                required: true,
                type: {
                    name: "String",
                },
            },
            value: {
                constraints: {
                    MaxLength: 256,
                },
                serializedName: "value",
                required: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const BlobInventoryPolicySchema = {
    type: {
        name: "Composite",
        className: "BlobInventoryPolicySchema",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                required: true,
                type: {
                    name: "Boolean",
                },
            },
            destination: {
                serializedName: "destination",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            type: {
                serializedName: "type",
                required: true,
                type: {
                    name: "String",
                },
            },
            rules: {
                serializedName: "rules",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "BlobInventoryPolicyRule",
                        },
                    },
                },
            },
        },
    },
};
export const BlobInventoryPolicyRule = {
    type: {
        name: "Composite",
        className: "BlobInventoryPolicyRule",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                required: true,
                type: {
                    name: "Boolean",
                },
            },
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String",
                },
            },
            destination: {
                serializedName: "destination",
                required: true,
                type: {
                    name: "String",
                },
            },
            definition: {
                serializedName: "definition",
                type: {
                    name: "Composite",
                    className: "BlobInventoryPolicyDefinition",
                },
            },
        },
    },
};
export const BlobInventoryPolicyDefinition = {
    type: {
        name: "Composite",
        className: "BlobInventoryPolicyDefinition",
        modelProperties: {
            filters: {
                serializedName: "filters",
                type: {
                    name: "Composite",
                    className: "BlobInventoryPolicyFilter",
                },
            },
            format: {
                serializedName: "format",
                required: true,
                type: {
                    name: "String",
                },
            },
            schedule: {
                serializedName: "schedule",
                required: true,
                type: {
                    name: "String",
                },
            },
            objectType: {
                serializedName: "objectType",
                required: true,
                type: {
                    name: "String",
                },
            },
            schemaFields: {
                serializedName: "schemaFields",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
        },
    },
};
export const BlobInventoryPolicyFilter = {
    type: {
        name: "Composite",
        className: "BlobInventoryPolicyFilter",
        modelProperties: {
            prefixMatch: {
                serializedName: "prefixMatch",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            excludePrefix: {
                serializedName: "excludePrefix",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            blobTypes: {
                serializedName: "blobTypes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            includeBlobVersions: {
                serializedName: "includeBlobVersions",
                type: {
                    name: "Boolean",
                },
            },
            includeSnapshots: {
                serializedName: "includeSnapshots",
                type: {
                    name: "Boolean",
                },
            },
            includeDeleted: {
                serializedName: "includeDeleted",
                type: {
                    name: "Boolean",
                },
            },
            creationTime: {
                serializedName: "creationTime",
                type: {
                    name: "Composite",
                    className: "BlobInventoryCreationTime",
                },
            },
        },
    },
};
export const BlobInventoryCreationTime = {
    type: {
        name: "Composite",
        className: "BlobInventoryCreationTime",
        modelProperties: {
            lastNDays: {
                constraints: {
                    InclusiveMaximum: 36500,
                    InclusiveMinimum: 1,
                },
                serializedName: "lastNDays",
                type: {
                    name: "Number",
                },
            },
        },
    },
};
export const SystemData = {
    type: {
        name: "Composite",
        className: "SystemData",
        modelProperties: {
            createdBy: {
                serializedName: "createdBy",
                type: {
                    name: "String",
                },
            },
            createdByType: {
                serializedName: "createdByType",
                type: {
                    name: "String",
                },
            },
            createdAt: {
                serializedName: "createdAt",
                type: {
                    name: "DateTime",
                },
            },
            lastModifiedBy: {
                serializedName: "lastModifiedBy",
                type: {
                    name: "String",
                },
            },
            lastModifiedByType: {
                serializedName: "lastModifiedByType",
                type: {
                    name: "String",
                },
            },
            lastModifiedAt: {
                serializedName: "lastModifiedAt",
                type: {
                    name: "DateTime",
                },
            },
        },
    },
};
export const ListBlobInventoryPolicy = {
    type: {
        name: "Composite",
        className: "ListBlobInventoryPolicy",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "BlobInventoryPolicy",
                        },
                    },
                },
            },
        },
    },
};
export const PrivateEndpointConnectionListResult = {
    type: {
        name: "Composite",
        className: "PrivateEndpointConnectionListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrivateEndpointConnection",
                        },
                    },
                },
            },
        },
    },
};
export const PrivateLinkResourceListResult = {
    type: {
        name: "Composite",
        className: "PrivateLinkResourceListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrivateLinkResource",
                        },
                    },
                },
            },
        },
    },
};
export const ObjectReplicationPolicies = {
    type: {
        name: "Composite",
        className: "ObjectReplicationPolicies",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ObjectReplicationPolicy",
                        },
                    },
                },
            },
        },
    },
};
export const ObjectReplicationPolicyRule = {
    type: {
        name: "Composite",
        className: "ObjectReplicationPolicyRule",
        modelProperties: {
            ruleId: {
                serializedName: "ruleId",
                type: {
                    name: "String",
                },
            },
            sourceContainer: {
                serializedName: "sourceContainer",
                required: true,
                type: {
                    name: "String",
                },
            },
            destinationContainer: {
                serializedName: "destinationContainer",
                required: true,
                type: {
                    name: "String",
                },
            },
            filters: {
                serializedName: "filters",
                type: {
                    name: "Composite",
                    className: "ObjectReplicationPolicyFilter",
                },
            },
        },
    },
};
export const ObjectReplicationPolicyFilter = {
    type: {
        name: "Composite",
        className: "ObjectReplicationPolicyFilter",
        modelProperties: {
            prefixMatch: {
                serializedName: "prefixMatch",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            minCreationTime: {
                serializedName: "minCreationTime",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ObjectReplicationPolicyPropertiesMetrics = {
    type: {
        name: "Composite",
        className: "ObjectReplicationPolicyPropertiesMetrics",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean",
                },
            },
        },
    },
};
export const LocalUsers = {
    type: {
        name: "Composite",
        className: "LocalUsers",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "LocalUser",
                        },
                    },
                },
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const PermissionScope = {
    type: {
        name: "Composite",
        className: "PermissionScope",
        modelProperties: {
            permissions: {
                serializedName: "permissions",
                required: true,
                type: {
                    name: "String",
                },
            },
            service: {
                serializedName: "service",
                required: true,
                type: {
                    name: "String",
                },
            },
            resourceName: {
                serializedName: "resourceName",
                required: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const SshPublicKey = {
    type: {
        name: "Composite",
        className: "SshPublicKey",
        modelProperties: {
            description: {
                serializedName: "description",
                type: {
                    name: "String",
                },
            },
            key: {
                serializedName: "key",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const LocalUserKeys = {
    type: {
        name: "Composite",
        className: "LocalUserKeys",
        modelProperties: {
            sshAuthorizedKeys: {
                serializedName: "sshAuthorizedKeys",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SshPublicKey",
                        },
                    },
                },
            },
            sharedKey: {
                serializedName: "sharedKey",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const LocalUserRegeneratePasswordResult = {
    type: {
        name: "Composite",
        className: "LocalUserRegeneratePasswordResult",
        modelProperties: {
            sshPassword: {
                serializedName: "sshPassword",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const EncryptionScopeKeyVaultProperties = {
    type: {
        name: "Composite",
        className: "EncryptionScopeKeyVaultProperties",
        modelProperties: {
            keyUri: {
                serializedName: "keyUri",
                type: {
                    name: "String",
                },
            },
            currentVersionedKeyIdentifier: {
                serializedName: "currentVersionedKeyIdentifier",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            lastKeyRotationTimestamp: {
                serializedName: "lastKeyRotationTimestamp",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            },
        },
    },
};
export const EncryptionScopeListResult = {
    type: {
        name: "Composite",
        className: "EncryptionScopeListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "EncryptionScope",
                        },
                    },
                },
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ListTableServices = {
    type: {
        name: "Composite",
        className: "ListTableServices",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TableServiceProperties",
                        },
                    },
                },
            },
        },
    },
};
export const TableSignedIdentifier = {
    type: {
        name: "Composite",
        className: "TableSignedIdentifier",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String",
                },
            },
            accessPolicy: {
                serializedName: "accessPolicy",
                type: {
                    name: "Composite",
                    className: "TableAccessPolicy",
                },
            },
        },
    },
};
export const TableAccessPolicy = {
    type: {
        name: "Composite",
        className: "TableAccessPolicy",
        modelProperties: {
            startTime: {
                serializedName: "startTime",
                type: {
                    name: "DateTime",
                },
            },
            expiryTime: {
                serializedName: "expiryTime",
                type: {
                    name: "DateTime",
                },
            },
            permission: {
                serializedName: "permission",
                required: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ListTableResource = {
    type: {
        name: "Composite",
        className: "ListTableResource",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Table",
                        },
                    },
                },
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const NetworkSecurityPerimeterConfigurationList = {
    type: {
        name: "Composite",
        className: "NetworkSecurityPerimeterConfigurationList",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "NetworkSecurityPerimeterConfiguration",
                        },
                    },
                },
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ProvisioningIssue = {
    type: {
        name: "Composite",
        className: "ProvisioningIssue",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String",
                },
            },
            properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "ProvisioningIssueProperties",
                },
            },
        },
    },
};
export const ProvisioningIssueProperties = {
    type: {
        name: "Composite",
        className: "ProvisioningIssueProperties",
        modelProperties: {
            issueType: {
                serializedName: "issueType",
                type: {
                    name: "String",
                },
            },
            severity: {
                serializedName: "severity",
                type: {
                    name: "String",
                },
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const NetworkSecurityPerimeter = {
    type: {
        name: "Composite",
        className: "NetworkSecurityPerimeter",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String",
                },
            },
            perimeterGuid: {
                serializedName: "perimeterGuid",
                type: {
                    name: "String",
                },
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation = {
    type: {
        name: "Composite",
        className: "NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String",
                },
            },
            accessMode: {
                serializedName: "accessMode",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const NetworkSecurityPerimeterConfigurationPropertiesProfile = {
    type: {
        name: "Composite",
        className: "NetworkSecurityPerimeterConfigurationPropertiesProfile",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String",
                },
            },
            accessRulesVersion: {
                serializedName: "accessRulesVersion",
                type: {
                    name: "Number",
                },
            },
            accessRules: {
                serializedName: "accessRules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "NspAccessRule",
                        },
                    },
                },
            },
            diagnosticSettingsVersion: {
                serializedName: "diagnosticSettingsVersion",
                type: {
                    name: "Number",
                },
            },
            enabledLogCategories: {
                serializedName: "enabledLogCategories",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
        },
    },
};
export const NspAccessRule = {
    type: {
        name: "Composite",
        className: "NspAccessRule",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String",
                },
            },
            properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "NspAccessRuleProperties",
                },
            },
        },
    },
};
export const NspAccessRuleProperties = {
    type: {
        name: "Composite",
        className: "NspAccessRuleProperties",
        modelProperties: {
            direction: {
                serializedName: "direction",
                type: {
                    name: "String",
                },
            },
            addressPrefixes: {
                serializedName: "addressPrefixes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            subscriptions: {
                serializedName: "subscriptions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "NspAccessRulePropertiesSubscriptionsItem",
                        },
                    },
                },
            },
            networkSecurityPerimeters: {
                serializedName: "networkSecurityPerimeters",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "NetworkSecurityPerimeter",
                        },
                    },
                },
            },
            fullyQualifiedDomainNames: {
                serializedName: "fullyQualifiedDomainNames",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
        },
    },
};
export const NspAccessRulePropertiesSubscriptionsItem = {
    type: {
        name: "Composite",
        className: "NspAccessRulePropertiesSubscriptionsItem",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ResourceAutoGenerated = {
    type: {
        name: "Composite",
        className: "ResourceAutoGenerated",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData",
                },
            },
        },
    },
};
export const StorageTaskAssignmentProperties = {
    type: {
        name: "Composite",
        className: "StorageTaskAssignmentProperties",
        modelProperties: {
            taskId: {
                serializedName: "taskId",
                required: true,
                type: {
                    name: "String",
                },
            },
            enabled: {
                serializedName: "enabled",
                required: true,
                type: {
                    name: "Boolean",
                },
            },
            description: {
                serializedName: "description",
                required: true,
                type: {
                    name: "String",
                },
            },
            executionContext: {
                serializedName: "executionContext",
                type: {
                    name: "Composite",
                    className: "StorageTaskAssignmentExecutionContext",
                },
            },
            report: {
                serializedName: "report",
                type: {
                    name: "Composite",
                    className: "StorageTaskAssignmentReport",
                },
            },
            provisioningState: {
                serializedName: "provisioningState",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Creating",
                        "ResolvingDNS",
                        "Succeeded",
                        "ValidateSubscriptionQuotaBegin",
                        "ValidateSubscriptionQuotaEnd",
                        "Accepted",
                        "Deleting",
                        "Canceled",
                        "Failed",
                    ],
                },
            },
            runStatus: {
                serializedName: "runStatus",
                type: {
                    name: "Composite",
                    className: "StorageTaskReportProperties",
                },
            },
        },
    },
};
export const StorageTaskAssignmentExecutionContext = {
    type: {
        name: "Composite",
        className: "StorageTaskAssignmentExecutionContext",
        modelProperties: {
            target: {
                serializedName: "target",
                type: {
                    name: "Composite",
                    className: "ExecutionTarget",
                },
            },
            trigger: {
                serializedName: "trigger",
                type: {
                    name: "Composite",
                    className: "ExecutionTrigger",
                },
            },
        },
    },
};
export const ExecutionTarget = {
    type: {
        name: "Composite",
        className: "ExecutionTarget",
        modelProperties: {
            prefix: {
                serializedName: "prefix",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            excludePrefix: {
                serializedName: "excludePrefix",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
        },
    },
};
export const ExecutionTrigger = {
    type: {
        name: "Composite",
        className: "ExecutionTrigger",
        modelProperties: {
            type: {
                serializedName: "type",
                required: true,
                type: {
                    name: "Enum",
                    allowedValues: ["RunOnce", "OnSchedule"],
                },
            },
            parameters: {
                serializedName: "parameters",
                type: {
                    name: "Composite",
                    className: "TriggerParameters",
                },
            },
        },
    },
};
export const TriggerParameters = {
    type: {
        name: "Composite",
        className: "TriggerParameters",
        modelProperties: {
            startFrom: {
                serializedName: "startFrom",
                type: {
                    name: "DateTime",
                },
            },
            interval: {
                constraints: {
                    InclusiveMinimum: 1,
                },
                serializedName: "interval",
                type: {
                    name: "Number",
                },
            },
            intervalUnit: {
                defaultValue: "Days",
                isConstant: true,
                serializedName: "intervalUnit",
                type: {
                    name: "String",
                },
            },
            endBy: {
                serializedName: "endBy",
                type: {
                    name: "DateTime",
                },
            },
            startOn: {
                serializedName: "startOn",
                type: {
                    name: "DateTime",
                },
            },
        },
    },
};
export const StorageTaskAssignmentReport = {
    type: {
        name: "Composite",
        className: "StorageTaskAssignmentReport",
        modelProperties: {
            prefix: {
                serializedName: "prefix",
                required: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const StorageTaskReportProperties = {
    type: {
        name: "Composite",
        className: "StorageTaskReportProperties",
        modelProperties: {
            taskAssignmentId: {
                serializedName: "taskAssignmentId",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            storageAccountId: {
                serializedName: "storageAccountId",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            startTime: {
                serializedName: "startTime",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            finishTime: {
                serializedName: "finishTime",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            objectsTargetedCount: {
                serializedName: "objectsTargetedCount",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            objectsOperatedOnCount: {
                serializedName: "objectsOperatedOnCount",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            objectFailedCount: {
                serializedName: "objectFailedCount",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            objectsSucceededCount: {
                serializedName: "objectsSucceededCount",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            runStatusError: {
                serializedName: "runStatusError",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            runStatusEnum: {
                serializedName: "runStatusEnum",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            summaryReportPath: {
                serializedName: "summaryReportPath",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            taskId: {
                serializedName: "taskId",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            taskVersion: {
                serializedName: "taskVersion",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            runResult: {
                serializedName: "runResult",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const StorageTaskAssignmentUpdateParameters = {
    type: {
        name: "Composite",
        className: "StorageTaskAssignmentUpdateParameters",
        modelProperties: {
            properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "StorageTaskAssignmentUpdateProperties",
                },
            },
        },
    },
};
export const StorageTaskAssignmentUpdateProperties = {
    type: {
        name: "Composite",
        className: "StorageTaskAssignmentUpdateProperties",
        modelProperties: {
            taskId: {
                serializedName: "taskId",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean",
                },
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String",
                },
            },
            executionContext: {
                serializedName: "executionContext",
                type: {
                    name: "Composite",
                    className: "StorageTaskAssignmentUpdateExecutionContext",
                },
            },
            report: {
                serializedName: "report",
                type: {
                    name: "Composite",
                    className: "StorageTaskAssignmentUpdateReport",
                },
            },
            provisioningState: {
                serializedName: "provisioningState",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Creating",
                        "ResolvingDNS",
                        "Succeeded",
                        "ValidateSubscriptionQuotaBegin",
                        "ValidateSubscriptionQuotaEnd",
                        "Accepted",
                        "Deleting",
                        "Canceled",
                        "Failed",
                    ],
                },
            },
            runStatus: {
                serializedName: "runStatus",
                type: {
                    name: "Composite",
                    className: "StorageTaskReportProperties",
                },
            },
        },
    },
};
export const StorageTaskAssignmentUpdateExecutionContext = {
    type: {
        name: "Composite",
        className: "StorageTaskAssignmentUpdateExecutionContext",
        modelProperties: {
            target: {
                serializedName: "target",
                type: {
                    name: "Composite",
                    className: "ExecutionTarget",
                },
            },
            trigger: {
                serializedName: "trigger",
                type: {
                    name: "Composite",
                    className: "ExecutionTriggerUpdate",
                },
            },
        },
    },
};
export const ExecutionTriggerUpdate = {
    type: {
        name: "Composite",
        className: "ExecutionTriggerUpdate",
        modelProperties: {
            type: {
                serializedName: "type",
                type: {
                    name: "Enum",
                    allowedValues: ["RunOnce", "OnSchedule"],
                },
            },
            parameters: {
                serializedName: "parameters",
                type: {
                    name: "Composite",
                    className: "TriggerParametersUpdate",
                },
            },
        },
    },
};
export const TriggerParametersUpdate = {
    type: {
        name: "Composite",
        className: "TriggerParametersUpdate",
        modelProperties: {
            startFrom: {
                serializedName: "startFrom",
                type: {
                    name: "DateTime",
                },
            },
            interval: {
                constraints: {
                    InclusiveMinimum: 1,
                },
                serializedName: "interval",
                type: {
                    name: "Number",
                },
            },
            intervalUnit: {
                defaultValue: "Days",
                isConstant: true,
                serializedName: "intervalUnit",
                type: {
                    name: "String",
                },
            },
            endBy: {
                serializedName: "endBy",
                type: {
                    name: "DateTime",
                },
            },
            startOn: {
                serializedName: "startOn",
                type: {
                    name: "DateTime",
                },
            },
        },
    },
};
export const StorageTaskAssignmentUpdateReport = {
    type: {
        name: "Composite",
        className: "StorageTaskAssignmentUpdateReport",
        modelProperties: {
            prefix: {
                serializedName: "prefix",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const StorageTaskAssignmentsList = {
    type: {
        name: "Composite",
        className: "StorageTaskAssignmentsList",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StorageTaskAssignment",
                        },
                    },
                },
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const StorageTaskReportSummary = {
    type: {
        name: "Composite",
        className: "StorageTaskReportSummary",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StorageTaskReportInstance",
                        },
                    },
                },
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const BlobServiceProperties = {
    type: {
        name: "Composite",
        className: "BlobServiceProperties",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku",
                },
            }, cors: {
                serializedName: "properties.cors",
                type: {
                    name: "Composite",
                    className: "CorsRules",
                },
            }, defaultServiceVersion: {
                serializedName: "properties.defaultServiceVersion",
                type: {
                    name: "String",
                },
            }, deleteRetentionPolicy: {
                serializedName: "properties.deleteRetentionPolicy",
                type: {
                    name: "Composite",
                    className: "DeleteRetentionPolicy",
                },
            }, isVersioningEnabled: {
                serializedName: "properties.isVersioningEnabled",
                type: {
                    name: "Boolean",
                },
            }, automaticSnapshotPolicyEnabled: {
                serializedName: "properties.automaticSnapshotPolicyEnabled",
                type: {
                    name: "Boolean",
                },
            }, changeFeed: {
                serializedName: "properties.changeFeed",
                type: {
                    name: "Composite",
                    className: "ChangeFeed",
                },
            }, restorePolicy: {
                serializedName: "properties.restorePolicy",
                type: {
                    name: "Composite",
                    className: "RestorePolicyProperties",
                },
            }, containerDeleteRetentionPolicy: {
                serializedName: "properties.containerDeleteRetentionPolicy",
                type: {
                    name: "Composite",
                    className: "DeleteRetentionPolicy",
                },
            }, lastAccessTimeTrackingPolicy: {
                serializedName: "properties.lastAccessTimeTrackingPolicy",
                type: {
                    name: "Composite",
                    className: "LastAccessTimeTrackingPolicy",
                },
            } }),
    },
};
export const AzureEntityResource = {
    type: {
        name: "Composite",
        className: "AzureEntityResource",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { etag: {
                serializedName: "etag",
                readOnly: true,
                type: {
                    name: "String",
                },
            } }),
    },
};
export const FileServiceProperties = {
    type: {
        name: "Composite",
        className: "FileServiceProperties",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku",
                },
            }, cors: {
                serializedName: "properties.cors",
                type: {
                    name: "Composite",
                    className: "CorsRules",
                },
            }, shareDeleteRetentionPolicy: {
                serializedName: "properties.shareDeleteRetentionPolicy",
                type: {
                    name: "Composite",
                    className: "DeleteRetentionPolicy",
                },
            }, protocolSettings: {
                serializedName: "properties.protocolSettings",
                type: {
                    name: "Composite",
                    className: "ProtocolSettings",
                },
            } }),
    },
};
export const FileServiceUsage = {
    type: {
        name: "Composite",
        className: "FileServiceUsage",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "FileServiceUsageProperties",
                },
            } }),
    },
};
export const QueueServiceProperties = {
    type: {
        name: "Composite",
        className: "QueueServiceProperties",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { cors: {
                serializedName: "properties.cors",
                type: {
                    name: "Composite",
                    className: "CorsRules",
                },
            } }),
    },
};
export const StorageQueue = {
    type: {
        name: "Composite",
        className: "StorageQueue",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { metadata: {
                serializedName: "properties.metadata",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } },
                },
            }, approximateMessageCount: {
                serializedName: "properties.approximateMessageCount",
                readOnly: true,
                type: {
                    name: "Number",
                },
            } }),
    },
};
export const ListQueue = {
    type: {
        name: "Composite",
        className: "ListQueue",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { metadata: {
                serializedName: "properties.metadata",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } },
                },
            } }),
    },
};
export const PrivateEndpointConnection = {
    type: {
        name: "Composite",
        className: "PrivateEndpointConnection",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { privateEndpoint: {
                serializedName: "properties.privateEndpoint",
                type: {
                    name: "Composite",
                    className: "PrivateEndpoint",
                },
            }, privateLinkServiceConnectionState: {
                serializedName: "properties.privateLinkServiceConnectionState",
                type: {
                    name: "Composite",
                    className: "PrivateLinkServiceConnectionState",
                },
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String",
                },
            } }),
    },
};
export const TrackedResource = {
    type: {
        name: "Composite",
        className: "TrackedResource",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } },
                },
            }, location: {
                serializedName: "location",
                required: true,
                type: {
                    name: "String",
                },
            } }),
    },
};
export const ProxyResource = {
    type: {
        name: "Composite",
        className: "ProxyResource",
        modelProperties: Object.assign({}, Resource.type.modelProperties),
    },
};
export const ManagementPolicy = {
    type: {
        name: "Composite",
        className: "ManagementPolicy",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { lastModifiedTime: {
                serializedName: "properties.lastModifiedTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            }, policy: {
                serializedName: "properties.policy",
                type: {
                    name: "Composite",
                    className: "ManagementPolicySchema",
                },
            } }),
    },
};
export const BlobInventoryPolicy = {
    type: {
        name: "Composite",
        className: "BlobInventoryPolicy",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData",
                },
            }, lastModifiedTime: {
                serializedName: "properties.lastModifiedTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            }, policy: {
                serializedName: "properties.policy",
                type: {
                    name: "Composite",
                    className: "BlobInventoryPolicySchema",
                },
            } }),
    },
};
export const PrivateLinkResource = {
    type: {
        name: "Composite",
        className: "PrivateLinkResource",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { groupId: {
                serializedName: "properties.groupId",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, requiredMembers: {
                serializedName: "properties.requiredMembers",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            }, requiredZoneNames: {
                serializedName: "properties.requiredZoneNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            } }),
    },
};
export const ObjectReplicationPolicy = {
    type: {
        name: "Composite",
        className: "ObjectReplicationPolicy",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { policyId: {
                serializedName: "properties.policyId",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, enabledTime: {
                serializedName: "properties.enabledTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            }, sourceAccount: {
                serializedName: "properties.sourceAccount",
                type: {
                    name: "String",
                },
            }, destinationAccount: {
                serializedName: "properties.destinationAccount",
                type: {
                    name: "String",
                },
            }, rules: {
                serializedName: "properties.rules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ObjectReplicationPolicyRule",
                        },
                    },
                },
            }, metrics: {
                serializedName: "properties.metrics",
                type: {
                    name: "Composite",
                    className: "ObjectReplicationPolicyPropertiesMetrics",
                },
            } }),
    },
};
export const LocalUser = {
    type: {
        name: "Composite",
        className: "LocalUser",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData",
                },
            }, permissionScopes: {
                serializedName: "properties.permissionScopes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PermissionScope",
                        },
                    },
                },
            }, homeDirectory: {
                serializedName: "properties.homeDirectory",
                type: {
                    name: "String",
                },
            }, sshAuthorizedKeys: {
                serializedName: "properties.sshAuthorizedKeys",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SshPublicKey",
                        },
                    },
                },
            }, sid: {
                serializedName: "properties.sid",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, hasSharedKey: {
                serializedName: "properties.hasSharedKey",
                type: {
                    name: "Boolean",
                },
            }, hasSshKey: {
                serializedName: "properties.hasSshKey",
                type: {
                    name: "Boolean",
                },
            }, hasSshPassword: {
                serializedName: "properties.hasSshPassword",
                type: {
                    name: "Boolean",
                },
            }, userId: {
                serializedName: "properties.userId",
                readOnly: true,
                type: {
                    name: "Number",
                },
            }, groupId: {
                serializedName: "properties.groupId",
                type: {
                    name: "Number",
                },
            }, allowAclAuthorization: {
                serializedName: "properties.allowAclAuthorization",
                type: {
                    name: "Boolean",
                },
            }, extendedGroups: {
                serializedName: "properties.extendedGroups",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Number",
                        },
                    },
                },
            }, isNFSv3Enabled: {
                serializedName: "properties.isNFSv3Enabled",
                type: {
                    name: "Boolean",
                },
            } }),
    },
};
export const EncryptionScope = {
    type: {
        name: "Composite",
        className: "EncryptionScope",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { source: {
                serializedName: "properties.source",
                type: {
                    name: "String",
                },
            }, state: {
                serializedName: "properties.state",
                type: {
                    name: "String",
                },
            }, creationTime: {
                serializedName: "properties.creationTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            }, lastModifiedTime: {
                serializedName: "properties.lastModifiedTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            }, keyVaultProperties: {
                serializedName: "properties.keyVaultProperties",
                type: {
                    name: "Composite",
                    className: "EncryptionScopeKeyVaultProperties",
                },
            }, requireInfrastructureEncryption: {
                serializedName: "properties.requireInfrastructureEncryption",
                type: {
                    name: "Boolean",
                },
            } }),
    },
};
export const TableServiceProperties = {
    type: {
        name: "Composite",
        className: "TableServiceProperties",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { cors: {
                serializedName: "properties.cors",
                type: {
                    name: "Composite",
                    className: "CorsRules",
                },
            } }),
    },
};
export const Table = {
    type: {
        name: "Composite",
        className: "Table",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { tableName: {
                serializedName: "properties.tableName",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, signedIdentifiers: {
                serializedName: "properties.signedIdentifiers",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TableSignedIdentifier",
                        },
                    },
                },
            } }),
    },
};
export const StorageTaskAssignment = {
    type: {
        name: "Composite",
        className: "StorageTaskAssignment",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "StorageTaskAssignmentProperties",
                },
            } }),
    },
};
export const ProxyResourceAutoGenerated = {
    type: {
        name: "Composite",
        className: "ProxyResourceAutoGenerated",
        modelProperties: Object.assign({}, ResourceAutoGenerated.type.modelProperties),
    },
};
export const ListContainerItem = {
    type: {
        name: "Composite",
        className: "ListContainerItem",
        modelProperties: Object.assign(Object.assign({}, AzureEntityResource.type.modelProperties), { version: {
                serializedName: "properties.version",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, deleted: {
                serializedName: "properties.deleted",
                readOnly: true,
                type: {
                    name: "Boolean",
                },
            }, deletedTime: {
                serializedName: "properties.deletedTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            }, remainingRetentionDays: {
                serializedName: "properties.remainingRetentionDays",
                readOnly: true,
                type: {
                    name: "Number",
                },
            }, defaultEncryptionScope: {
                serializedName: "properties.defaultEncryptionScope",
                type: {
                    name: "String",
                },
            }, denyEncryptionScopeOverride: {
                serializedName: "properties.denyEncryptionScopeOverride",
                type: {
                    name: "Boolean",
                },
            }, publicAccess: {
                serializedName: "properties.publicAccess",
                type: {
                    name: "Enum",
                    allowedValues: ["Container", "Blob", "None"],
                },
            }, lastModifiedTime: {
                serializedName: "properties.lastModifiedTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            }, leaseStatus: {
                serializedName: "properties.leaseStatus",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, leaseState: {
                serializedName: "properties.leaseState",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, leaseDuration: {
                serializedName: "properties.leaseDuration",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, metadata: {
                serializedName: "properties.metadata",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } },
                },
            }, immutabilityPolicy: {
                serializedName: "properties.immutabilityPolicy",
                type: {
                    name: "Composite",
                    className: "ImmutabilityPolicyProperties",
                },
            }, legalHold: {
                serializedName: "properties.legalHold",
                type: {
                    name: "Composite",
                    className: "LegalHoldProperties",
                },
            }, hasLegalHold: {
                serializedName: "properties.hasLegalHold",
                readOnly: true,
                type: {
                    name: "Boolean",
                },
            }, hasImmutabilityPolicy: {
                serializedName: "properties.hasImmutabilityPolicy",
                readOnly: true,
                type: {
                    name: "Boolean",
                },
            }, immutableStorageWithVersioning: {
                serializedName: "properties.immutableStorageWithVersioning",
                type: {
                    name: "Composite",
                    className: "ImmutableStorageWithVersioning",
                },
            }, enableNfsV3RootSquash: {
                serializedName: "properties.enableNfsV3RootSquash",
                type: {
                    name: "Boolean",
                },
            }, enableNfsV3AllSquash: {
                serializedName: "properties.enableNfsV3AllSquash",
                type: {
                    name: "Boolean",
                },
            } }),
    },
};
export const BlobContainer = {
    type: {
        name: "Composite",
        className: "BlobContainer",
        modelProperties: Object.assign(Object.assign({}, AzureEntityResource.type.modelProperties), { version: {
                serializedName: "properties.version",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, deleted: {
                serializedName: "properties.deleted",
                readOnly: true,
                type: {
                    name: "Boolean",
                },
            }, deletedTime: {
                serializedName: "properties.deletedTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            }, remainingRetentionDays: {
                serializedName: "properties.remainingRetentionDays",
                readOnly: true,
                type: {
                    name: "Number",
                },
            }, defaultEncryptionScope: {
                serializedName: "properties.defaultEncryptionScope",
                type: {
                    name: "String",
                },
            }, denyEncryptionScopeOverride: {
                serializedName: "properties.denyEncryptionScopeOverride",
                type: {
                    name: "Boolean",
                },
            }, publicAccess: {
                serializedName: "properties.publicAccess",
                type: {
                    name: "Enum",
                    allowedValues: ["Container", "Blob", "None"],
                },
            }, lastModifiedTime: {
                serializedName: "properties.lastModifiedTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            }, leaseStatus: {
                serializedName: "properties.leaseStatus",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, leaseState: {
                serializedName: "properties.leaseState",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, leaseDuration: {
                serializedName: "properties.leaseDuration",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, metadata: {
                serializedName: "properties.metadata",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } },
                },
            }, immutabilityPolicy: {
                serializedName: "properties.immutabilityPolicy",
                type: {
                    name: "Composite",
                    className: "ImmutabilityPolicyProperties",
                },
            }, legalHold: {
                serializedName: "properties.legalHold",
                type: {
                    name: "Composite",
                    className: "LegalHoldProperties",
                },
            }, hasLegalHold: {
                serializedName: "properties.hasLegalHold",
                readOnly: true,
                type: {
                    name: "Boolean",
                },
            }, hasImmutabilityPolicy: {
                serializedName: "properties.hasImmutabilityPolicy",
                readOnly: true,
                type: {
                    name: "Boolean",
                },
            }, immutableStorageWithVersioning: {
                serializedName: "properties.immutableStorageWithVersioning",
                type: {
                    name: "Composite",
                    className: "ImmutableStorageWithVersioning",
                },
            }, enableNfsV3RootSquash: {
                serializedName: "properties.enableNfsV3RootSquash",
                type: {
                    name: "Boolean",
                },
            }, enableNfsV3AllSquash: {
                serializedName: "properties.enableNfsV3AllSquash",
                type: {
                    name: "Boolean",
                },
            } }),
    },
};
export const ImmutabilityPolicy = {
    type: {
        name: "Composite",
        className: "ImmutabilityPolicy",
        modelProperties: Object.assign(Object.assign({}, AzureEntityResource.type.modelProperties), { immutabilityPeriodSinceCreationInDays: {
                serializedName: "properties.immutabilityPeriodSinceCreationInDays",
                type: {
                    name: "Number",
                },
            }, state: {
                serializedName: "properties.state",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, allowProtectedAppendWrites: {
                serializedName: "properties.allowProtectedAppendWrites",
                type: {
                    name: "Boolean",
                },
            }, allowProtectedAppendWritesAll: {
                serializedName: "properties.allowProtectedAppendWritesAll",
                type: {
                    name: "Boolean",
                },
            } }),
    },
};
export const FileShareItem = {
    type: {
        name: "Composite",
        className: "FileShareItem",
        modelProperties: Object.assign(Object.assign({}, AzureEntityResource.type.modelProperties), { lastModifiedTime: {
                serializedName: "properties.lastModifiedTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            }, metadata: {
                serializedName: "properties.metadata",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } },
                },
            }, shareQuota: {
                serializedName: "properties.shareQuota",
                type: {
                    name: "Number",
                },
            }, provisionedIops: {
                serializedName: "properties.provisionedIops",
                type: {
                    name: "Number",
                },
            }, provisionedBandwidthMibps: {
                serializedName: "properties.provisionedBandwidthMibps",
                type: {
                    name: "Number",
                },
            }, includedBurstIops: {
                serializedName: "properties.includedBurstIops",
                readOnly: true,
                type: {
                    name: "Number",
                },
            }, maxBurstCreditsForIops: {
                serializedName: "properties.maxBurstCreditsForIops",
                readOnly: true,
                type: {
                    name: "Number",
                },
            }, nextAllowedQuotaDowngradeTime: {
                serializedName: "properties.nextAllowedQuotaDowngradeTime",
                readOnly: true,
                type: {
                    name: "DateTimeRfc1123",
                },
            }, nextAllowedProvisionedIopsDowngradeTime: {
                serializedName: "properties.nextAllowedProvisionedIopsDowngradeTime",
                readOnly: true,
                type: {
                    name: "DateTimeRfc1123",
                },
            }, nextAllowedProvisionedBandwidthDowngradeTime: {
                serializedName: "properties.nextAllowedProvisionedBandwidthDowngradeTime",
                readOnly: true,
                type: {
                    name: "DateTimeRfc1123",
                },
            }, enabledProtocols: {
                serializedName: "properties.enabledProtocols",
                type: {
                    name: "String",
                },
            }, rootSquash: {
                serializedName: "properties.rootSquash",
                type: {
                    name: "String",
                },
            }, version: {
                serializedName: "properties.version",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, deleted: {
                serializedName: "properties.deleted",
                readOnly: true,
                type: {
                    name: "Boolean",
                },
            }, deletedTime: {
                serializedName: "properties.deletedTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            }, remainingRetentionDays: {
                serializedName: "properties.remainingRetentionDays",
                readOnly: true,
                type: {
                    name: "Number",
                },
            }, accessTier: {
                serializedName: "properties.accessTier",
                type: {
                    name: "String",
                },
            }, accessTierChangeTime: {
                serializedName: "properties.accessTierChangeTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            }, accessTierStatus: {
                serializedName: "properties.accessTierStatus",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, shareUsageBytes: {
                serializedName: "properties.shareUsageBytes",
                readOnly: true,
                type: {
                    name: "Number",
                },
            }, leaseStatus: {
                serializedName: "properties.leaseStatus",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, leaseState: {
                serializedName: "properties.leaseState",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, leaseDuration: {
                serializedName: "properties.leaseDuration",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, signedIdentifiers: {
                serializedName: "properties.signedIdentifiers",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SignedIdentifier",
                        },
                    },
                },
            }, snapshotTime: {
                serializedName: "properties.snapshotTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            }, fileSharePaidBursting: {
                serializedName: "properties.fileSharePaidBursting",
                type: {
                    name: "Composite",
                    className: "FileSharePropertiesFileSharePaidBursting",
                },
            } }),
    },
};
export const FileShare = {
    type: {
        name: "Composite",
        className: "FileShare",
        modelProperties: Object.assign(Object.assign({}, AzureEntityResource.type.modelProperties), { lastModifiedTime: {
                serializedName: "properties.lastModifiedTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            }, metadata: {
                serializedName: "properties.metadata",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } },
                },
            }, shareQuota: {
                serializedName: "properties.shareQuota",
                type: {
                    name: "Number",
                },
            }, provisionedIops: {
                serializedName: "properties.provisionedIops",
                type: {
                    name: "Number",
                },
            }, provisionedBandwidthMibps: {
                serializedName: "properties.provisionedBandwidthMibps",
                type: {
                    name: "Number",
                },
            }, includedBurstIops: {
                serializedName: "properties.includedBurstIops",
                readOnly: true,
                type: {
                    name: "Number",
                },
            }, maxBurstCreditsForIops: {
                serializedName: "properties.maxBurstCreditsForIops",
                readOnly: true,
                type: {
                    name: "Number",
                },
            }, nextAllowedQuotaDowngradeTime: {
                serializedName: "properties.nextAllowedQuotaDowngradeTime",
                readOnly: true,
                type: {
                    name: "DateTimeRfc1123",
                },
            }, nextAllowedProvisionedIopsDowngradeTime: {
                serializedName: "properties.nextAllowedProvisionedIopsDowngradeTime",
                readOnly: true,
                type: {
                    name: "DateTimeRfc1123",
                },
            }, nextAllowedProvisionedBandwidthDowngradeTime: {
                serializedName: "properties.nextAllowedProvisionedBandwidthDowngradeTime",
                readOnly: true,
                type: {
                    name: "DateTimeRfc1123",
                },
            }, enabledProtocols: {
                serializedName: "properties.enabledProtocols",
                type: {
                    name: "String",
                },
            }, rootSquash: {
                serializedName: "properties.rootSquash",
                type: {
                    name: "String",
                },
            }, version: {
                serializedName: "properties.version",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, deleted: {
                serializedName: "properties.deleted",
                readOnly: true,
                type: {
                    name: "Boolean",
                },
            }, deletedTime: {
                serializedName: "properties.deletedTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            }, remainingRetentionDays: {
                serializedName: "properties.remainingRetentionDays",
                readOnly: true,
                type: {
                    name: "Number",
                },
            }, accessTier: {
                serializedName: "properties.accessTier",
                type: {
                    name: "String",
                },
            }, accessTierChangeTime: {
                serializedName: "properties.accessTierChangeTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            }, accessTierStatus: {
                serializedName: "properties.accessTierStatus",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, shareUsageBytes: {
                serializedName: "properties.shareUsageBytes",
                readOnly: true,
                type: {
                    name: "Number",
                },
            }, leaseStatus: {
                serializedName: "properties.leaseStatus",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, leaseState: {
                serializedName: "properties.leaseState",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, leaseDuration: {
                serializedName: "properties.leaseDuration",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, signedIdentifiers: {
                serializedName: "properties.signedIdentifiers",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SignedIdentifier",
                        },
                    },
                },
            }, snapshotTime: {
                serializedName: "properties.snapshotTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            }, fileSharePaidBursting: {
                serializedName: "properties.fileSharePaidBursting",
                type: {
                    name: "Composite",
                    className: "FileSharePropertiesFileSharePaidBursting",
                },
            } }),
    },
};
export const StorageAccount = {
    type: {
        name: "Composite",
        className: "StorageAccount",
        modelProperties: Object.assign(Object.assign({}, TrackedResource.type.modelProperties), { sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku",
                },
            }, kind: {
                serializedName: "kind",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "Identity",
                },
            }, extendedLocation: {
                serializedName: "extendedLocation",
                type: {
                    name: "Composite",
                    className: "ExtendedLocation",
                },
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Creating",
                        "ResolvingDNS",
                        "Succeeded",
                        "ValidateSubscriptionQuotaBegin",
                        "ValidateSubscriptionQuotaEnd",
                        "Accepted",
                        "Deleting",
                        "Canceled",
                        "Failed",
                    ],
                },
            }, primaryEndpoints: {
                serializedName: "properties.primaryEndpoints",
                type: {
                    name: "Composite",
                    className: "Endpoints",
                },
            }, primaryLocation: {
                serializedName: "properties.primaryLocation",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, statusOfPrimary: {
                serializedName: "properties.statusOfPrimary",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["available", "unavailable"],
                },
            }, lastGeoFailoverTime: {
                serializedName: "properties.lastGeoFailoverTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            }, secondaryLocation: {
                serializedName: "properties.secondaryLocation",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, statusOfSecondary: {
                serializedName: "properties.statusOfSecondary",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["available", "unavailable"],
                },
            }, creationTime: {
                serializedName: "properties.creationTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            }, customDomain: {
                serializedName: "properties.customDomain",
                type: {
                    name: "Composite",
                    className: "CustomDomain",
                },
            }, sasPolicy: {
                serializedName: "properties.sasPolicy",
                type: {
                    name: "Composite",
                    className: "SasPolicy",
                },
            }, keyPolicy: {
                serializedName: "properties.keyPolicy",
                type: {
                    name: "Composite",
                    className: "KeyPolicy",
                },
            }, keyCreationTime: {
                serializedName: "properties.keyCreationTime",
                type: {
                    name: "Composite",
                    className: "KeyCreationTime",
                },
            }, secondaryEndpoints: {
                serializedName: "properties.secondaryEndpoints",
                type: {
                    name: "Composite",
                    className: "Endpoints",
                },
            }, encryption: {
                serializedName: "properties.encryption",
                type: {
                    name: "Composite",
                    className: "Encryption",
                },
            }, accessTier: {
                serializedName: "properties.accessTier",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Hot", "Cool", "Premium", "Cold"],
                },
            }, azureFilesIdentityBasedAuthentication: {
                serializedName: "properties.azureFilesIdentityBasedAuthentication",
                type: {
                    name: "Composite",
                    className: "AzureFilesIdentityBasedAuthentication",
                },
            }, enableHttpsTrafficOnly: {
                serializedName: "properties.supportsHttpsTrafficOnly",
                type: {
                    name: "Boolean",
                },
            }, networkRuleSet: {
                serializedName: "properties.networkAcls",
                type: {
                    name: "Composite",
                    className: "NetworkRuleSet",
                },
            }, isSftpEnabled: {
                serializedName: "properties.isSftpEnabled",
                type: {
                    name: "Boolean",
                },
            }, isLocalUserEnabled: {
                serializedName: "properties.isLocalUserEnabled",
                type: {
                    name: "Boolean",
                },
            }, enableExtendedGroups: {
                serializedName: "properties.enableExtendedGroups",
                type: {
                    name: "Boolean",
                },
            }, isHnsEnabled: {
                serializedName: "properties.isHnsEnabled",
                type: {
                    name: "Boolean",
                },
            }, geoReplicationStats: {
                serializedName: "properties.geoReplicationStats",
                type: {
                    name: "Composite",
                    className: "GeoReplicationStats",
                },
            }, failoverInProgress: {
                serializedName: "properties.failoverInProgress",
                readOnly: true,
                type: {
                    name: "Boolean",
                },
            }, largeFileSharesState: {
                serializedName: "properties.largeFileSharesState",
                type: {
                    name: "String",
                },
            }, privateEndpointConnections: {
                serializedName: "properties.privateEndpointConnections",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrivateEndpointConnection",
                        },
                    },
                },
            }, routingPreference: {
                serializedName: "properties.routingPreference",
                type: {
                    name: "Composite",
                    className: "RoutingPreference",
                },
            }, blobRestoreStatus: {
                serializedName: "properties.blobRestoreStatus",
                type: {
                    name: "Composite",
                    className: "BlobRestoreStatus",
                },
            }, allowBlobPublicAccess: {
                serializedName: "properties.allowBlobPublicAccess",
                type: {
                    name: "Boolean",
                },
            }, minimumTlsVersion: {
                serializedName: "properties.minimumTlsVersion",
                type: {
                    name: "String",
                },
            }, allowSharedKeyAccess: {
                serializedName: "properties.allowSharedKeyAccess",
                type: {
                    name: "Boolean",
                },
            }, enableNfsV3: {
                serializedName: "properties.isNfsV3Enabled",
                type: {
                    name: "Boolean",
                },
            }, allowCrossTenantReplication: {
                serializedName: "properties.allowCrossTenantReplication",
                type: {
                    name: "Boolean",
                },
            }, defaultToOAuthAuthentication: {
                serializedName: "properties.defaultToOAuthAuthentication",
                type: {
                    name: "Boolean",
                },
            }, publicNetworkAccess: {
                serializedName: "properties.publicNetworkAccess",
                type: {
                    name: "String",
                },
            }, immutableStorageWithVersioning: {
                serializedName: "properties.immutableStorageWithVersioning",
                type: {
                    name: "Composite",
                    className: "ImmutableStorageAccount",
                },
            }, allowedCopyScope: {
                serializedName: "properties.allowedCopyScope",
                type: {
                    name: "String",
                },
            }, storageAccountSkuConversionStatus: {
                serializedName: "properties.storageAccountSkuConversionStatus",
                type: {
                    name: "Composite",
                    className: "StorageAccountSkuConversionStatus",
                },
            }, dnsEndpointType: {
                serializedName: "properties.dnsEndpointType",
                type: {
                    name: "String",
                },
            }, isSkuConversionBlocked: {
                serializedName: "properties.isSkuConversionBlocked",
                readOnly: true,
                type: {
                    name: "Boolean",
                },
            }, accountMigrationInProgress: {
                serializedName: "properties.accountMigrationInProgress",
                readOnly: true,
                type: {
                    name: "Boolean",
                },
            } }),
    },
};
export const DeletedAccount = {
    type: {
        name: "Composite",
        className: "DeletedAccount",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { storageAccountResourceId: {
                serializedName: "properties.storageAccountResourceId",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, location: {
                serializedName: "properties.location",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, restoreReference: {
                serializedName: "properties.restoreReference",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, creationTime: {
                serializedName: "properties.creationTime",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, deletionTime: {
                serializedName: "properties.deletionTime",
                readOnly: true,
                type: {
                    name: "String",
                },
            } }),
    },
};
export const StorageTaskReportInstance = {
    type: {
        name: "Composite",
        className: "StorageTaskReportInstance",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "StorageTaskReportProperties",
                },
            } }),
    },
};
export const NetworkSecurityPerimeterConfiguration = {
    type: {
        name: "Composite",
        className: "NetworkSecurityPerimeterConfiguration",
        modelProperties: Object.assign(Object.assign({}, ProxyResourceAutoGenerated.type.modelProperties), { provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, provisioningIssues: {
                serializedName: "properties.provisioningIssues",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ProvisioningIssue",
                        },
                    },
                },
            }, networkSecurityPerimeter: {
                serializedName: "properties.networkSecurityPerimeter",
                type: {
                    name: "Composite",
                    className: "NetworkSecurityPerimeter",
                },
            }, resourceAssociation: {
                serializedName: "properties.resourceAssociation",
                type: {
                    name: "Composite",
                    className: "NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation",
                },
            }, profile: {
                serializedName: "properties.profile",
                type: {
                    name: "Composite",
                    className: "NetworkSecurityPerimeterConfigurationPropertiesProfile",
                },
            } }),
    },
};
export const BlobContainersCreateOrUpdateImmutabilityPolicyHeaders = {
    type: {
        name: "Composite",
        className: "BlobContainersCreateOrUpdateImmutabilityPolicyHeaders",
        modelProperties: {
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const BlobContainersGetImmutabilityPolicyHeaders = {
    type: {
        name: "Composite",
        className: "BlobContainersGetImmutabilityPolicyHeaders",
        modelProperties: {
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const BlobContainersDeleteImmutabilityPolicyHeaders = {
    type: {
        name: "Composite",
        className: "BlobContainersDeleteImmutabilityPolicyHeaders",
        modelProperties: {
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const BlobContainersLockImmutabilityPolicyHeaders = {
    type: {
        name: "Composite",
        className: "BlobContainersLockImmutabilityPolicyHeaders",
        modelProperties: {
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const BlobContainersExtendImmutabilityPolicyHeaders = {
    type: {
        name: "Composite",
        className: "BlobContainersExtendImmutabilityPolicyHeaders",
        modelProperties: {
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const FileSharesLeaseHeaders = {
    type: {
        name: "Composite",
        className: "FileSharesLeaseHeaders",
        modelProperties: {
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const StorageAccountsCustomerInitiatedMigrationHeaders = {
    type: {
        name: "Composite",
        className: "StorageAccountsCustomerInitiatedMigrationHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const NetworkSecurityPerimeterConfigurationsReconcileHeaders = {
    type: {
        name: "Composite",
        className: "NetworkSecurityPerimeterConfigurationsReconcileHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const StorageTaskAssignmentsCreateHeaders = {
    type: {
        name: "Composite",
        className: "StorageTaskAssignmentsCreateHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const StorageTaskAssignmentsUpdateHeaders = {
    type: {
        name: "Composite",
        className: "StorageTaskAssignmentsUpdateHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const StorageTaskAssignmentsDeleteHeaders = {
    type: {
        name: "Composite",
        className: "StorageTaskAssignmentsDeleteHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String",
                },
            },
        },
    },
};
//# sourceMappingURL=mappers.js.map