/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { StorageClientContext } from "../storageClientContext";
import {
  ServiceListFileSystemsOptionalParams,
  ServiceListFileSystemsResponse
} from "../models";

/** Class representing a Service. */
export class Service {
  private readonly client: StorageClientContext;

  /**
   * Initialize a new instance of the class Service class.
   * @param client Reference to the service client
   */
  constructor(client: StorageClientContext) {
    this.client = client;
  }

  /**
   * List filesystems and their properties in given account.
   * @param options The options parameters.
   */
  listFileSystems(
    options?: ServiceListFileSystemsOptionalParams
  ): Promise<ServiceListFileSystemsResponse> {
    const operationArguments: coreHttp.OperationArguments = {
      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})
    };
    return this.client.sendOperationRequest(
      operationArguments,
      listFileSystemsOperationSpec
    ) as Promise<ServiceListFileSystemsResponse>;
  }
}
// Operation Specifications
const serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);

const listFileSystemsOperationSpec: coreHttp.OperationSpec = {
  path: "/",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.FileSystemList,
      headersMapper: Mappers.ServiceListFileSystemsHeaders
    },
    default: {
      bodyMapper: Mappers.StorageError,
      headersMapper: Mappers.ServiceListFileSystemsExceptionHeaders
    }
  },
  queryParameters: [
    Parameters.resource,
    Parameters.prefix,
    Parameters.continuation,
    Parameters.maxResults,
    Parameters.timeout
  ],
  urlParameters: [Parameters.url],
  headerParameters: [
    Parameters.accept,
    Parameters.requestId,
    Parameters.version
  ],
  serializer
};
