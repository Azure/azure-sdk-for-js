/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */


import * as msRest from "@azure/ms-rest-js";

/**
 * An Access policy
 */
export interface AccessPolicy {
  /**
   * the date-time the policy is active
   * **NOTE: This entity will be treated as a string instead of a Date because the API can
   * potentially deal with a higher precision value than what is supported by JavaScript.**
   */
  start: string;
  /**
   * the date-time the policy expires
   * **NOTE: This entity will be treated as a string instead of a Date because the API can
   * potentially deal with a higher precision value than what is supported by JavaScript.**
   */
  expiry: string;
  /**
   * the permissions for the acl policy
   */
  permission: string;
}

/**
 * An Azure Storage Queue.
 */
export interface QueueItem {
  /**
   * The name of the Queue.
   */
  name: string;
  metadata?: { [propertyName: string]: string };
}

/**
 * The object returned when calling List Queues on a Queue Service.
 */
export interface ListQueuesSegmentResponse {
  serviceEndpoint: string;
  prefix: string;
  marker?: string;
  maxResults: number;
  queueItems?: QueueItem[];
  nextMarker: string;
}

/**
 * CORS is an HTTP feature that enables a web application running under one domain to access
 * resources in another domain. Web browsers implement a security restriction known as same-origin
 * policy that prevents a web page from calling APIs in a different domain; CORS provides a secure
 * way to allow one domain (the origin domain) to call APIs in another domain
 */
export interface CorsRule {
  /**
   * The origin domains that are permitted to make a request against the storage service via CORS.
   * The origin domain is the domain from which the request originates. Note that the origin must
   * be an exact case-sensitive match with the origin that the user age sends to the service. You
   * can also use the wildcard character '*' to allow all origin domains to make requests via CORS.
   */
  allowedOrigins: string;
  /**
   * The methods (HTTP request verbs) that the origin domain may use for a CORS request. (comma
   * separated)
   */
  allowedMethods: string;
  /**
   * the request headers that the origin domain may specify on the CORS request.
   */
  allowedHeaders: string;
  /**
   * The response headers that may be sent in the response to the CORS request and exposed by the
   * browser to the request issuer
   */
  exposedHeaders: string;
  /**
   * The maximum amount time that a browser should cache the preflight OPTIONS request.
   */
  maxAgeInSeconds: number;
}

/**
 * An interface representing GeoReplication.
 */
export interface GeoReplication {
  /**
   * The status of the secondary location. Possible values include: 'live', 'bootstrap',
   * 'unavailable'
   */
  status: GeoReplicationStatusType;
  /**
   * A GMT date/time value, to the second. All primary writes preceding this value are guaranteed
   * to be available for read operations at the secondary. Primary writes after this point in time
   * may or may not be available for reads.
   */
  lastSyncTime: Date;
}

/**
 * the retention policy
 */
export interface RetentionPolicy {
  /**
   * Indicates whether a retention policy is enabled for the storage service
   */
  enabled: boolean;
  /**
   * Indicates the number of days that metrics or logging or soft-deleted data should be retained.
   * All data older than this value will be deleted
   */
  days?: number;
}

/**
 * Azure Analytics Logging settings.
 */
export interface Logging {
  /**
   * The version of Storage Analytics to configure.
   */
  version: string;
  /**
   * Indicates whether all delete requests should be logged.
   */
  deleteProperty: boolean;
  /**
   * Indicates whether all read requests should be logged.
   */
  read: boolean;
  /**
   * Indicates whether all write requests should be logged.
   */
  write: boolean;
  retentionPolicy: RetentionPolicy;
}

/**
 * An interface representing StorageError.
 */
export interface StorageError {
  message?: string;
}

/**
 * An interface representing Metrics.
 */
export interface Metrics {
  /**
   * The version of Storage Analytics to configure.
   */
  version?: string;
  /**
   * Indicates whether metrics are enabled for the Queue service.
   */
  enabled: boolean;
  /**
   * Indicates whether metrics should generate summary statistics for called API operations.
   */
  includeAPIs?: boolean;
  retentionPolicy?: RetentionPolicy;
}

/**
 * A Message object which can be stored in a Queue
 */
export interface QueueMessage {
  /**
   * The content of the message
   */
  messageText: string;
}

/**
 * The object returned in the QueueMessageList array when calling Get Messages on a Queue.
 */
export interface DequeuedMessageItem {
  /**
   * The Id of the Message.
   */
  messageId: string;
  /**
   * The time the Message was inserted into the Queue.
   */
  insertionTime: Date;
  /**
   * The time that the Message will expire and be automatically deleted.
   */
  expirationTime: Date;
  /**
   * This value is required to delete the Message. If deletion fails using this popreceipt then the
   * message has been dequeued by another client.
   */
  popReceipt: string;
  /**
   * The time that the message will again become visible in the Queue.
   */
  timeNextVisible: Date;
  /**
   * The number of times the message has been dequeued.
   */
  dequeueCount: number;
  /**
   * The content of the Message.
   */
  messageText: string;
}

/**
 * The object returned in the QueueMessageList array when calling Peek Messages on a Queue
 */
export interface PeekedMessageItem {
  /**
   * The Id of the Message.
   */
  messageId: string;
  /**
   * The time the Message was inserted into the Queue.
   */
  insertionTime: Date;
  /**
   * The time that the Message will expire and be automatically deleted.
   */
  expirationTime: Date;
  /**
   * The number of times the message has been dequeued.
   */
  dequeueCount: number;
  /**
   * The content of the Message.
   */
  messageText: string;
}

/**
 * The object returned in the QueueMessageList array when calling Put Message on a Queue
 */
export interface EnqueuedMessage {
  /**
   * The Id of the Message.
   */
  messageId: string;
  /**
   * The time the Message was inserted into the Queue.
   */
  insertionTime: Date;
  /**
   * The time that the Message will expire and be automatically deleted.
   */
  expirationTime: Date;
  /**
   * This value is required to delete the Message. If deletion fails using this popreceipt then the
   * message has been dequeued by another client.
   */
  popReceipt: string;
  /**
   * The time that the message will again become visible in the Queue.
   */
  timeNextVisible: Date;
}

/**
 * signed identifier
 */
export interface SignedIdentifier {
  /**
   * a unique id
   */
  id: string;
  /**
   * The access policy
   */
  accessPolicy: AccessPolicy;
}

/**
 * Storage Service Properties.
 */
export interface StorageServiceProperties {
  /**
   * Azure Analytics Logging settings
   */
  logging?: Logging;
  /**
   * A summary of request statistics grouped by API in hourly aggregates for queues
   */
  hourMetrics?: Metrics;
  /**
   * a summary of request statistics grouped by API in minute aggregates for queues
   */
  minuteMetrics?: Metrics;
  /**
   * The set of CORS rules.
   */
  cors?: CorsRule[];
}

/**
 * Stats for the storage service.
 */
export interface StorageServiceStats {
  /**
   * Geo-Replication information for the Secondary Storage Service
   */
  geoReplication?: GeoReplication;
}

/**
 * Optional Parameters.
 */
export interface ServiceSetPropertiesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface ServiceGetPropertiesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface ServiceGetStatisticsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface ServiceListQueuesSegmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Filters the results to return only queues whose name begins with the specified prefix.
   */
  prefix?: string;
  /**
   * A string value that identifies the portion of the list of queues to be returned with the next
   * listing operation. The operation returns the NextMarker value within the response body if the
   * listing operation did not return all queues remaining to be listed with the current page. The
   * NextMarker value can be used as the value for the marker parameter in a subsequent call to
   * request the next page of list items. The marker value is opaque to the client.
   */
  marker?: string;
  /**
   * Specifies the maximum number of queues to return. If the request does not specify maxresults,
   * or specifies a value greater than 5000, the server will return up to 5000 items. Note that if
   * the listing operation crosses a partition boundary, then the service will return a
   * continuation token for retrieving the remainder of the results. For this reason, it is
   * possible that the service will return fewer results than specified by maxresults, or than the
   * default of 5000.
   */
  maxresults?: number;
  /**
   * Include this parameter to specify that the queues's metadata be returned as part of the
   * response body.
   */
  include?: ListQueuesIncludeType[];
  /**
   * The The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface QueueCreateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * Optional. Include this parameter to specify that the queue's metadata be returned as part of
   * the response body. Note that metadata requested with this parameter must be stored in
   * accordance with the naming restrictions imposed by the 2009-09-19 version of the Queue
   * service. Beginning with this version, all metadata names must adhere to the naming conventions
   * for C# identifiers.
   */
  metadata?: { [propertyName: string]: string };
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface QueueDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface QueueGetPropertiesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface QueueSetMetadataOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * Optional. Include this parameter to specify that the queue's metadata be returned as part of
   * the response body. Note that metadata requested with this parameter must be stored in
   * accordance with the naming restrictions imposed by the 2009-09-19 version of the Queue
   * service. Beginning with this version, all metadata names must adhere to the naming conventions
   * for C# identifiers.
   */
  metadata?: { [propertyName: string]: string };
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface QueueGetAccessPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface QueueSetAccessPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * the acls for the queue
   */
  queueAcl?: SignedIdentifier[];
  /**
   * The The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface MessagesDequeueOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Optional. A nonzero integer value that specifies the number of messages to retrieve from the
   * queue, up to a maximum of 32. If fewer are visible, the visible messages are returned. By
   * default, a single message is retrieved from the queue with this operation.
   */
  numberOfMessages?: number;
  /**
   * Optional. Specifies the new visibility timeout value, in seconds, relative to server time. The
   * default value is 30 seconds. A specified value must be larger than or equal to 1 second, and
   * cannot be larger than 7 days, or larger than 2 hours on REST protocol versions prior to
   * version 2011-08-18. The visibility timeout of a message can be set to a value later than the
   * expiry time.
   */
  visibilitytimeout?: number;
  /**
   * The The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface MessagesClearOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface MessagesEnqueueOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Optional. Specifies the new visibility timeout value, in seconds, relative to server time. The
   * default value is 30 seconds. A specified value must be larger than or equal to 1 second, and
   * cannot be larger than 7 days, or larger than 2 hours on REST protocol versions prior to
   * version 2011-08-18. The visibility timeout of a message can be set to a value later than the
   * expiry time.
   */
  visibilitytimeout?: number;
  /**
   * Optional. Specifies the time-to-live interval for the message, in seconds. Prior to version
   * 2017-07-29, the maximum time-to-live allowed is 7 days. For version 2017-07-29 or later, the
   * maximum time-to-live can be any positive number, as well as -1 indicating that the message
   * does not expire. If this parameter is omitted, the default time-to-live is 7 days.
   */
  messageTimeToLive?: number;
  /**
   * The The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface MessagesPeekOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Optional. A nonzero integer value that specifies the number of messages to retrieve from the
   * queue, up to a maximum of 32. If fewer are visible, the visible messages are returned. By
   * default, a single message is retrieved from the queue with this operation.
   */
  numberOfMessages?: number;
  /**
   * The The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface MessageIdUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface MessageIdDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Defines headers for SetProperties operation.
 */
export interface ServiceSetPropertiesHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Queue service used to execute the request. This header is
   * returned for requests made against version 2009-09-19 and above.
   */
  version?: string;
  errorCode?: string;
}

/**
 * Defines headers for GetProperties operation.
 */
export interface ServiceGetPropertiesHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Queue service used to execute the request. This header is
   * returned for requests made against version 2009-09-19 and above.
   */
  version?: string;
  errorCode?: string;
}

/**
 * Defines headers for GetStatistics operation.
 */
export interface ServiceGetStatisticsHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Queue service used to execute the request. This header is
   * returned for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for ListQueuesSegment operation.
 */
export interface ServiceListQueuesSegmentHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Queue service used to execute the request. This header is
   * returned for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for Create operation.
 */
export interface QueueCreateHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Queue service used to execute the request. This header is
   * returned for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for Delete operation.
 */
export interface QueueDeleteHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Queue service used to execute the request. This header is
   * returned for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for GetProperties operation.
 */
export interface QueueGetPropertiesHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  metadata?: { [propertyName: string]: string };
  /**
   * The approximate number of messages in the queue. This number is not lower than the actual
   * number of messages in the queue, but could be higher.
   */
  approximateMessagesCount?: number;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Queue service used to execute the request. This header is
   * returned for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for SetMetadata operation.
 */
export interface QueueSetMetadataHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Queue service used to execute the request. This header is
   * returned for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for GetAccessPolicy operation.
 */
export interface QueueGetAccessPolicyHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Queue service used to execute the request. This header is
   * returned for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for SetAccessPolicy operation.
 */
export interface QueueSetAccessPolicyHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Queue service used to execute the request. This header is
   * returned for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for Dequeue operation.
 */
export interface MessagesDequeueHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Queue service used to execute the request. This header is
   * returned for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for Clear operation.
 */
export interface MessagesClearHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Queue service used to execute the request. This header is
   * returned for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for Enqueue operation.
 */
export interface MessagesEnqueueHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Queue service used to execute the request. This header is
   * returned for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for Peek operation.
 */
export interface MessagesPeekHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Queue service used to execute the request. This header is
   * returned for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for Update operation.
 */
export interface MessageIdUpdateHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Queue service used to execute the request. This header is
   * returned for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * The pop receipt of the queue message.
   */
  popReceipt?: string;
  /**
   * A UTC date/time value that represents when the message will be visible on the queue.
   */
  timeNextVisible?: Date;
  errorCode?: string;
}

/**
 * Defines headers for Delete operation.
 */
export interface MessageIdDeleteHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Queue service used to execute the request. This header is
   * returned for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines values for StorageErrorCode.
 * Possible values include: 'AccountAlreadyExists', 'AccountBeingCreated', 'AccountIsDisabled',
 * 'AuthenticationFailed', 'AuthorizationFailure', 'ConditionHeadersNotSupported',
 * 'ConditionNotMet', 'EmptyMetadataKey', 'InsufficientAccountPermissions', 'InternalError',
 * 'InvalidAuthenticationInfo', 'InvalidHeaderValue', 'InvalidHttpVerb', 'InvalidInput',
 * 'InvalidMd5', 'InvalidMetadata', 'InvalidQueryParameterValue', 'InvalidRange',
 * 'InvalidResourceName', 'InvalidUri', 'InvalidXmlDocument', 'InvalidXmlNodeValue', 'Md5Mismatch',
 * 'MetadataTooLarge', 'MissingContentLengthHeader', 'MissingRequiredQueryParameter',
 * 'MissingRequiredHeader', 'MissingRequiredXmlNode', 'MultipleConditionHeadersNotSupported',
 * 'OperationTimedOut', 'OutOfRangeInput', 'OutOfRangeQueryParameterValue', 'RequestBodyTooLarge',
 * 'ResourceTypeMismatch', 'RequestUrlFailedToParse', 'ResourceAlreadyExists', 'ResourceNotFound',
 * 'ServerBusy', 'UnsupportedHeader', 'UnsupportedXmlNode', 'UnsupportedQueryParameter',
 * 'UnsupportedHttpVerb', 'InvalidMarker', 'MessageNotFound', 'MessageTooLarge',
 * 'PopReceiptMismatch', 'QueueAlreadyExists', 'QueueBeingDeleted', 'QueueDisabled',
 * 'QueueNotEmpty', 'QueueNotFound'
 * @readonly
 * @enum {string}
 */
export type StorageErrorCode = 'AccountAlreadyExists' | 'AccountBeingCreated' | 'AccountIsDisabled' | 'AuthenticationFailed' | 'AuthorizationFailure' | 'ConditionHeadersNotSupported' | 'ConditionNotMet' | 'EmptyMetadataKey' | 'InsufficientAccountPermissions' | 'InternalError' | 'InvalidAuthenticationInfo' | 'InvalidHeaderValue' | 'InvalidHttpVerb' | 'InvalidInput' | 'InvalidMd5' | 'InvalidMetadata' | 'InvalidQueryParameterValue' | 'InvalidRange' | 'InvalidResourceName' | 'InvalidUri' | 'InvalidXmlDocument' | 'InvalidXmlNodeValue' | 'Md5Mismatch' | 'MetadataTooLarge' | 'MissingContentLengthHeader' | 'MissingRequiredQueryParameter' | 'MissingRequiredHeader' | 'MissingRequiredXmlNode' | 'MultipleConditionHeadersNotSupported' | 'OperationTimedOut' | 'OutOfRangeInput' | 'OutOfRangeQueryParameterValue' | 'RequestBodyTooLarge' | 'ResourceTypeMismatch' | 'RequestUrlFailedToParse' | 'ResourceAlreadyExists' | 'ResourceNotFound' | 'ServerBusy' | 'UnsupportedHeader' | 'UnsupportedXmlNode' | 'UnsupportedQueryParameter' | 'UnsupportedHttpVerb' | 'InvalidMarker' | 'MessageNotFound' | 'MessageTooLarge' | 'PopReceiptMismatch' | 'QueueAlreadyExists' | 'QueueBeingDeleted' | 'QueueDisabled' | 'QueueNotEmpty' | 'QueueNotFound';

/**
 * Defines values for GeoReplicationStatusType.
 * Possible values include: 'live', 'bootstrap', 'unavailable'
 * @readonly
 * @enum {string}
 */
export type GeoReplicationStatusType = 'live' | 'bootstrap' | 'unavailable';

/**
 * Defines values for ListQueuesIncludeType.
 * Possible values include: 'metadata'
 * @readonly
 * @enum {string}
 */
export type ListQueuesIncludeType = 'metadata';

/**
 * Contains response data for the setProperties operation.
 */
export type ServiceSetPropertiesResponse = ServiceSetPropertiesHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ServiceSetPropertiesHeaders;
    };
};

/**
 * Contains response data for the getProperties operation.
 */
export type ServiceGetPropertiesResponse = StorageServiceProperties & ServiceGetPropertiesHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ServiceGetPropertiesHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageServiceProperties;
    };
};

/**
 * Contains response data for the getStatistics operation.
 */
export type ServiceGetStatisticsResponse = StorageServiceStats & ServiceGetStatisticsHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ServiceGetStatisticsHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageServiceStats;
    };
};

/**
 * Contains response data for the listQueuesSegment operation.
 */
export type ServiceListQueuesSegmentResponse = ListQueuesSegmentResponse & ServiceListQueuesSegmentHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ServiceListQueuesSegmentHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListQueuesSegmentResponse;
    };
};

/**
 * Contains response data for the create operation.
 */
export type QueueCreateResponse = QueueCreateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: QueueCreateHeaders;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type QueueDeleteResponse = QueueDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: QueueDeleteHeaders;
    };
};

/**
 * Contains response data for the getProperties operation.
 */
export type QueueGetPropertiesResponse = QueueGetPropertiesHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: QueueGetPropertiesHeaders;
    };
};

/**
 * Contains response data for the setMetadata operation.
 */
export type QueueSetMetadataResponse = QueueSetMetadataHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: QueueSetMetadataHeaders;
    };
};

/**
 * Contains response data for the getAccessPolicy operation.
 */
export type QueueGetAccessPolicyResponse = Array<SignedIdentifier> & QueueGetAccessPolicyHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: QueueGetAccessPolicyHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SignedIdentifier[];
    };
};

/**
 * Contains response data for the setAccessPolicy operation.
 */
export type QueueSetAccessPolicyResponse = QueueSetAccessPolicyHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: QueueSetAccessPolicyHeaders;
    };
};

/**
 * Contains response data for the dequeue operation.
 */
export type MessagesDequeueResponse = Array<DequeuedMessageItem> & MessagesDequeueHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: MessagesDequeueHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DequeuedMessageItem[];
    };
};

/**
 * Contains response data for the clear operation.
 */
export type MessagesClearResponse = MessagesClearHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: MessagesClearHeaders;
    };
};

/**
 * Contains response data for the enqueue operation.
 */
export type MessagesEnqueueResponse = Array<EnqueuedMessage> & MessagesEnqueueHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: MessagesEnqueueHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EnqueuedMessage[];
    };
};

/**
 * Contains response data for the peek operation.
 */
export type MessagesPeekResponse = Array<PeekedMessageItem> & MessagesPeekHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: MessagesPeekHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PeekedMessageItem[];
    };
};

/**
 * Contains response data for the update operation.
 */
export type MessageIdUpdateResponse = MessageIdUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: MessageIdUpdateHeaders;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type MessageIdDeleteResponse = MessageIdDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: MessageIdDeleteHeaders;
    };
};
