/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export type DraModelCustomPropertiesUnion =
  | DraModelCustomProperties
  | VMwareDraModelCustomProperties;
export type EventModelCustomPropertiesUnion =
  | EventModelCustomProperties
  | HyperVToAzStackHCIEventModelCustomProperties;
export type FabricModelCustomPropertiesUnion =
  | FabricModelCustomProperties
  | AzStackHCIFabricModelCustomProperties
  | HyperVMigrateFabricModelCustomProperties
  | VMwareMigrateFabricModelCustomProperties;
export type PolicyModelCustomPropertiesUnion =
  | PolicyModelCustomProperties
  | HyperVToAzStackHCIPolicyModelCustomProperties
  | VMwareToAzStackHCIPolicyModelCustomProperties;
export type ProtectedItemModelCustomPropertiesUnion =
  | ProtectedItemModelCustomProperties
  | HyperVToAzStackHCIProtectedItemModelCustomProperties
  | VMwareToAzStackHCIProtectedItemModelCustomProperties;
export type PlannedFailoverModelCustomPropertiesUnion =
  | PlannedFailoverModelCustomProperties
  | HyperVToAzStackHCIPlannedFailoverModelCustomProperties
  | VMwareToAzStackHCIPlannedFailoverModelCustomProperties;
export type RecoveryPointModelCustomPropertiesUnion =
  | RecoveryPointModelCustomProperties
  | HyperVToAzStackHCIRecoveryPointModelCustomProperties;
export type ReplicationExtensionModelCustomPropertiesUnion =
  | ReplicationExtensionModelCustomProperties
  | HyperVToAzStackHCIReplicationExtensionModelCustomProperties
  | VMwareToAzStackHCIReplicationExtensionModelCustomProperties;
export type WorkflowModelCustomPropertiesUnion =
  | WorkflowModelCustomProperties
  | FailoverWorkflowModelCustomProperties
  | TestFailoverCleanupWorkflowModelCustomProperties
  | TestFailoverWorkflowModelCustomProperties;

/** Dra model. */
export interface DraModel {
  /** Dra model properties. */
  properties: DraModelProperties;
  /**
   * Gets or sets the Id of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets the name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Gets or sets the type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly systemData?: DraModelSystemData;
}

/** Dra model properties. */
export interface DraModelProperties {
  /**
   * Gets or sets the Dra correlation Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly correlationId?: string;
  /** Gets or sets the machine Id where Dra is running. */
  machineId: string;
  /** Gets or sets the machine name where Dra is running. */
  machineName: string;
  /** Identity model. */
  authenticationIdentity: IdentityModel;
  /** Identity model. */
  resourceAccessIdentity: IdentityModel;
  /**
   * Gets or sets a value indicating whether Dra is responsive.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isResponsive?: boolean;
  /**
   * Gets or sets the time when last heartbeat was sent by the Dra.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastHeartbeat?: Date;
  /**
   * Gets or sets the Dra version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly versionNumber?: string;
  /**
   * Gets or sets the provisioning state of the Dra.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Gets or sets the list of health errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthErrors?: HealthErrorModel[];
  /** Dra model custom properties. */
  customProperties: DraModelCustomPropertiesUnion;
}

/** Identity model. */
export interface IdentityModel {
  /** Gets or sets the tenant Id of the SPN with which Dra communicates to service. */
  tenantId: string;
  /**
   * Gets or sets the client/application Id of the SPN with which Dra communicates to
   * service.
   */
  applicationId: string;
  /** Gets or sets the object Id of the SPN with which Dra communicates to service. */
  objectId: string;
  /** Gets or sets the audience of the SPN with which Dra communicates to service. */
  audience: string;
  /** Gets or sets the authority of the SPN with which Dra communicates to service. */
  aadAuthority: string;
}

/** Health error model. */
export interface HealthErrorModel {
  /** Gets or sets the type of affected resource type. */
  affectedResourceType?: string;
  /**
   * Gets or sets the list of affected resource correlation Ids. This can be used to
   * uniquely identify the count of items affected by a specific category and severity
   * as well as count of item affected by an specific issue.
   */
  affectedResourceCorrelationIds?: string[];
  /** Gets or sets a list of child health errors associated with this error. */
  childErrors?: InnerHealthErrorModel[];
  /**
   * Gets or sets the error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * Gets or sets the health category.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthCategory?: string;
  /**
   * Gets or sets the error category.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly category?: string;
  /**
   * Gets or sets the error severity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly severity?: string;
  /**
   * Gets or sets the error source.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly source?: string;
  /**
   * Gets or sets the error creation time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creationTime?: Date;
  /**
   * Gets or sets a value indicating whether the error is customer resolvable.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isCustomerResolvable?: boolean;
  /**
   * Gets or sets the error summary.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly summary?: string;
  /**
   * Gets or sets the error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * Gets or sets possible causes of the error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly causes?: string;
  /**
   * Gets or sets recommended action to resolve the error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recommendation?: string;
}

/** Inner health error model. */
export interface InnerHealthErrorModel {
  /**
   * Gets or sets the error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * Gets or sets the health category.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthCategory?: string;
  /**
   * Gets or sets the error category.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly category?: string;
  /**
   * Gets or sets the error severity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly severity?: string;
  /**
   * Gets or sets the error source.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly source?: string;
  /**
   * Gets or sets the error creation time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creationTime?: Date;
  /**
   * Gets or sets a value indicating whether the error is customer resolvable.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isCustomerResolvable?: boolean;
  /**
   * Gets or sets the error summary.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly summary?: string;
  /**
   * Gets or sets the error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * Gets or sets possible causes of the error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly causes?: string;
  /**
   * Gets or sets recommended action to resolve the error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recommendation?: string;
}

/** Dra model custom properties. */
export interface DraModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMware";
}

/** System data required to be defined for Azure resources. */
export interface SystemDataModel {
  /** Gets or sets identity that created the resource. */
  createdBy?: string;
  /**
   * Gets or sets the type of identity that created the resource: user, application,
   * managedIdentity.
   */
  createdByType?: string;
  /** Gets or sets the timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** Gets or sets the identity that last modified the resource. */
  lastModifiedBy?: string;
  /**
   * Gets or sets the type of identity that last modified the resource: user, application,
   * managedIdentity.
   */
  lastModifiedByType?: string;
  /** Gets or sets the timestamp of resource last modification (UTC). */
  lastModifiedAt?: Date;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** Dra model collection. */
export interface DraModelCollection {
  /** Gets or sets the list of Dras. */
  value?: DraModel[];
  /** Gets or sets the value of next link. */
  nextLink?: string;
}

/** Defines the operation status. */
export interface OperationStatus {
  /** Gets or sets the Id. */
  id?: string;
  /** Gets or sets the operation name. */
  name?: string;
  /**
   * Gets or sets the status of the operation. ARM expects the terminal status to be one of
   * Succeeded/ Failed/ Canceled. All other values imply that the operation is still running.
   */
  status?: string;
  /** Gets or sets the start time. */
  startTime?: string;
  /** Gets or sets the end time. */
  endTime?: string;
}

/** Email configuration model. */
export interface EmailConfigurationModel {
  /** Email configuration model properties. */
  properties: EmailConfigurationModelProperties;
  /**
   * Gets or sets the Id of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets the name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Gets or sets the type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly systemData?: EmailConfigurationModelSystemData;
}

/** Email configuration model properties. */
export interface EmailConfigurationModelProperties {
  /** Gets or sets a value indicating whether to send email to subscription administrator. */
  sendToOwners: boolean;
  /** Gets or sets the custom email address for sending emails. */
  customEmailAddresses?: string[];
  /** Gets or sets the locale for the email notification. */
  locale?: string;
}

/** Email configuration model collection. */
export interface EmailConfigurationModelCollection {
  /** Gets or sets the list of email configurations. */
  value?: EmailConfigurationModel[];
  /** Gets or sets the value of next link. */
  nextLink?: string;
}

/** Event model. */
export interface EventModel {
  /** Event model properties. */
  properties: EventModelProperties;
  /**
   * Gets or sets the Id of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets the name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Gets or sets the type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly systemData?: EventModelSystemData;
}

/** Event model properties. */
export interface EventModelProperties {
  /**
   * Gets or sets the resource type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceType?: string;
  /**
   * Gets or sets the resource name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceName?: string;
  /**
   * Gets or sets the event type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly eventType?: string;
  /**
   * Gets or sets the event name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly eventName?: string;
  /**
   * Gets or sets the time at which the event occurred at source.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeOfOccurrence?: Date;
  /**
   * Gets or sets the event severity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly severity?: string;
  /**
   * Gets or sets the event description.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
  /**
   * Gets or sets the event correlation Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly correlationId?: string;
  /**
   * Gets or sets the errors associated with this event.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthErrors?: HealthErrorModel[];
  /** Event model custom properties. */
  customProperties: EventModelCustomPropertiesUnion;
}

/** Event model custom properties. */
export interface EventModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVToAzStackHCI";
}

/** Event model collection. */
export interface EventModelCollection {
  /** Gets or sets the list of events. */
  value?: EventModel[];
  /** Gets or sets the value of next link. */
  nextLink?: string;
}

/** Fabric model. */
export interface FabricModel {
  /** Gets or sets the location of the fabric. */
  location: string;
  /** Gets or sets the resource tags. */
  tags?: { [propertyName: string]: string };
  /** Fabric model properties. */
  properties: FabricModelProperties;
  /**
   * Gets or sets the Id of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets the name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Gets or sets the type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly systemData?: FabricModelSystemData;
}

/** Fabric model properties. */
export interface FabricModelProperties {
  /**
   * Gets or sets the provisioning state of the fabric.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Gets or sets the service endpoint.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serviceEndpoint?: string;
  /**
   * Gets or sets the service resource Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serviceResourceId?: string;
  /**
   * Gets or sets the fabric health.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly health?: HealthStatus;
  /**
   * Gets or sets the list of health errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthErrors?: HealthErrorModel[];
  /** Fabric model custom properties. */
  customProperties: FabricModelCustomPropertiesUnion;
}

/** Fabric model custom properties. */
export interface FabricModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "AzStackHCI" | "HyperVMigrate" | "VMwareMigrate";
}

/** Fabric model for update. */
export interface FabricModelUpdate {
  /** Gets or sets the resource tags. */
  tags?: { [propertyName: string]: string };
  /** Fabric model properties. */
  properties?: FabricModelProperties;
  /**
   * Gets or sets the Id of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets the name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Gets or sets the type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly systemData?: FabricModelUpdateSystemData;
}

/** Fabric model collection. */
export interface FabricModelCollection {
  /** Gets or sets the list of fabrics. */
  value?: FabricModel[];
  /** Gets or sets the value of next link. */
  nextLink?: string;
}

/** Policy model. */
export interface PolicyModel {
  /** Policy model properties. */
  properties: PolicyModelProperties;
  /**
   * Gets or sets the Id of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets the name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Gets or sets the type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly systemData?: PolicyModelSystemData;
}

/** Policy model properties. */
export interface PolicyModelProperties {
  /**
   * Gets or sets the provisioning state of the policy.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Policy model custom properties. */
  customProperties: PolicyModelCustomPropertiesUnion;
}

/** Policy model custom properties. */
export interface PolicyModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVToAzStackHCI" | "VMwareToAzStackHCI";
}

/** Policy model collection. */
export interface PolicyModelCollection {
  /** Gets or sets the list of policies. */
  value?: PolicyModel[];
  /** Gets or sets the value of next link. */
  nextLink?: string;
}

/** Protected item model. */
export interface ProtectedItemModel {
  /** Protected item model properties. */
  properties: ProtectedItemModelProperties;
  /**
   * Gets or sets the Id of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets the name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Gets or sets the type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly systemData?: ProtectedItemModelSystemData;
}

/** Protected item model properties. */
export interface ProtectedItemModelProperties {
  /** Gets or sets the policy name. */
  policyName: string;
  /** Gets or sets the replication extension name. */
  replicationExtensionName: string;
  /**
   * Gets or sets the protected item correlation Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly correlationId?: string;
  /**
   * Gets or sets the provisioning state of the Dra.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Gets or sets the protection state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protectionState?: ProtectionState;
  /**
   * Gets or sets the protection state description.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protectionStateDescription?: string;
  /**
   * Gets or sets the test failover state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly testFailoverState?: TestFailoverState;
  /**
   * Gets or sets the Test failover state description.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly testFailoverStateDescription?: string;
  /**
   * Gets or sets the resynchronization state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resynchronizationState?: ResynchronizationState;
  /**
   * Gets or sets the fabric object Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fabricObjectId?: string;
  /**
   * Gets or sets the fabric object name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fabricObjectName?: string;
  /**
   * Gets or sets the source fabric provider Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceFabricProviderId?: string;
  /**
   * Gets or sets the target fabric provider Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetFabricProviderId?: string;
  /**
   * Gets or sets the fabric Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fabricId?: string;
  /**
   * Gets or sets the target fabric Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetFabricId?: string;
  /**
   * Gets or sets the DRA Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly draId?: string;
  /**
   * Gets or sets the target DRA Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetDraId?: string;
  /**
   * Gets or sets a value indicating whether resynchronization is required or not.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resyncRequired?: boolean;
  /**
   * Gets or sets the Last successful planned failover time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastSuccessfulPlannedFailoverTime?: Date;
  /**
   * Gets or sets the Last successful unplanned failover time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastSuccessfulUnplannedFailoverTime?: Date;
  /**
   * Gets or sets the Last successful test failover time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastSuccessfulTestFailoverTime?: Date;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly currentJob?: ProtectedItemModelPropertiesCurrentJob;
  /**
   * Gets or sets the allowed scenarios on the protected item.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly allowedJobs?: string[];
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly lastFailedEnableProtectionJob?: ProtectedItemModelPropertiesLastFailedEnableProtectionJob;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly lastFailedPlannedFailoverJob?: ProtectedItemModelPropertiesLastFailedPlannedFailoverJob;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly lastTestFailoverJob?: ProtectedItemModelPropertiesLastTestFailoverJob;
  /**
   * Gets or sets protected item replication health.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly replicationHealth?: HealthStatus;
  /**
   * Gets or sets the list of health errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthErrors?: HealthErrorModel[];
  /** Protected item model custom properties. */
  customProperties: ProtectedItemModelCustomPropertiesUnion;
}

/** Protected item job properties. */
export interface ProtectedItemJobProperties {
  /**
   * Gets or sets protection scenario name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly scenarioName?: string;
  /**
   * Gets or sets workflow Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets workflow name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Gets or sets the workflow friendly display name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * Gets or sets workflow state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly state?: string;
  /**
   * Gets or sets start time of the workflow.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startTime?: Date;
  /**
   * Gets or sets end time of the workflow.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endTime?: Date;
}

/** Protected item model custom properties. */
export interface ProtectedItemModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVToAzStackHCI" | "VMwareToAzStackHCI";
}

/** Protected item model collection. */
export interface ProtectedItemModelCollection {
  /** Gets or sets the list of protected items. */
  value?: ProtectedItemModel[];
  /** Gets or sets the value of next link. */
  nextLink?: string;
}

/** Planned failover model. */
export interface PlannedFailoverModel {
  /** Planned failover model properties. */
  properties: PlannedFailoverModelProperties;
}

/** Planned failover model properties. */
export interface PlannedFailoverModelProperties {
  /** Planned failover model custom properties. */
  customProperties: PlannedFailoverModelCustomPropertiesUnion;
}

/** Planned failover model custom properties. */
export interface PlannedFailoverModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVToAzStackHCI" | "VMwareToAzStackHCI";
}

/** Recovery point model. */
export interface RecoveryPointModel {
  /** Recovery point model properties. */
  properties: RecoveryPointModelProperties;
  /**
   * Gets or sets the Id of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets the name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Gets or sets the type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly systemData?: RecoveryPointModelSystemData;
}

/** Recovery point model properties. */
export interface RecoveryPointModelProperties {
  /** Gets or sets the recovery point time. */
  recoveryPointTime: Date;
  /** Gets or sets the recovery point type. */
  recoveryPointType: RecoveryPointType;
  /** Recovery point model custom properties. */
  customProperties: RecoveryPointModelCustomPropertiesUnion;
}

/** Recovery point model custom properties. */
export interface RecoveryPointModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVToAzStackHCI";
}

/** Recovery point model collection. */
export interface RecoveryPointModelCollection {
  /** Gets or sets the list of recovery points. */
  value?: RecoveryPointModel[];
  /** Gets or sets the value of next link. */
  nextLink?: string;
}

/** Replication extension model. */
export interface ReplicationExtensionModel {
  /** Replication extension model properties. */
  properties: ReplicationExtensionModelProperties;
  /**
   * Gets or sets the Id of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets the name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Gets or sets the type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly systemData?: ReplicationExtensionModelSystemData;
}

/** Replication extension model properties. */
export interface ReplicationExtensionModelProperties {
  /**
   * Gets or sets the provisioning state of the replication extension.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Replication extension model custom properties. */
  customProperties: ReplicationExtensionModelCustomPropertiesUnion;
}

/** Replication extension model custom properties. */
export interface ReplicationExtensionModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVToAzStackHCI" | "VMwareToAzStackHCI";
}

/** Replication extension model collection. */
export interface ReplicationExtensionModelCollection {
  /** Gets or sets the list of replication extensions. */
  value?: ReplicationExtensionModel[];
  /** Gets or sets the value of next link. */
  nextLink?: string;
}

/** Check name availability model. */
export interface CheckNameAvailabilityModel {
  /** Gets or sets the resource name. */
  name?: string;
  /** Gets or sets the resource type. */
  type?: string;
}

/** Check name availability response model. */
export interface CheckNameAvailabilityResponseModel {
  /** Gets or sets a value indicating whether resource name is available or not. */
  nameAvailable?: boolean;
  /** Gets or sets the reason for resource name unavailability. */
  reason?: string;
  /** Gets or sets the message for resource name unavailability. */
  message?: string;
}

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Deployment preflight model. */
export interface DeploymentPreflightModel {
  /** Gets or sets the list of resources. */
  resources?: DeploymentPreflightResource[];
}

/** Deployment preflight resource. */
export interface DeploymentPreflightResource {
  /** Gets or sets the resource name. */
  name?: string;
  /** Gets or sets the resource type. */
  type?: string;
  /** Gets or sets the location of the resource. */
  location?: string;
  /** Gets or sets the Api version. */
  apiVersion?: string;
}

/** Vault model. */
export interface VaultModel {
  /** Gets or sets the location of the vault. */
  location: string;
  /** Gets or sets the resource tags. */
  tags?: { [propertyName: string]: string };
  /** Vault properties. */
  properties?: VaultModelProperties;
  /**
   * Gets or sets the Id of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets the name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Gets or sets the type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly systemData?: VaultModelSystemData;
}

/** Vault properties. */
export interface VaultModelProperties {
  /**
   * Gets or sets the provisioning state of the vault.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Gets or sets the service resource Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serviceResourceId?: string;
  /** Gets or sets the type of vault. */
  vaultType?: ReplicationVaultType;
}

/** Vault model for update. */
export interface VaultModelUpdate {
  /** Gets or sets the resource tags. */
  tags?: { [propertyName: string]: string };
  /** Vault properties. */
  properties?: VaultModelProperties;
  /**
   * Gets or sets the Id of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets the name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Gets or sets the type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly systemData?: VaultModelUpdateSystemData;
}

/** Vault model collection. */
export interface VaultModelCollection {
  /** Gets or sets the list of vaults. */
  value?: VaultModel[];
  /** Gets or sets the value of next link. */
  nextLink?: string;
}

/** Workflow model. */
export interface WorkflowModel {
  /** Workflow model properties. */
  properties: WorkflowModelProperties;
  /**
   * Gets or sets the Id of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets the name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Gets or sets the type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly systemData?: WorkflowModelSystemData;
}

/** Workflow model properties. */
export interface WorkflowModelProperties {
  /**
   * Gets or sets the friendly display name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * Gets or sets the workflow state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly state?: WorkflowState;
  /**
   * Gets or sets the start time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startTime?: Date;
  /**
   * Gets or sets the end time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endTime?: Date;
  /**
   * Gets or sets the affected object Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly objectId?: string;
  /**
   * Gets or sets the affected object name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly objectName?: string;
  /**
   * Gets or sets the affected object internal Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly objectInternalId?: string;
  /**
   * Gets or sets the affected object internal name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly objectInternalName?: string;
  /**
   * Gets or sets the object type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly objectType?: WorkflowObjectType;
  /**
   * Gets or sets the replication provider.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly replicationProviderId?: string;
  /**
   * Gets or sets the source fabric provider.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceFabricProviderId?: string;
  /**
   * Gets or sets the target fabric provider.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetFabricProviderId?: string;
  /**
   * Gets or sets the list of allowed actions on the workflow.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly allowedActions?: string[];
  /**
   * Gets or sets the workflow activity id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly activityId?: string;
  /**
   * Gets or sets the list of tasks.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tasks?: TaskModel[];
  /**
   * Gets or sets the list of errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errors?: ErrorModel[];
  /** Workflow model custom properties. */
  customProperties: WorkflowModelCustomPropertiesUnion;
}

/** Task model. */
export interface TaskModel {
  /**
   * Gets or sets the task name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly taskName?: string;
  /**
   * Gets or sets the task state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly state?: TaskState;
  /**
   * Gets or sets the start time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startTime?: Date;
  /**
   * Gets or sets the end time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endTime?: Date;
  /** Task model custom properties. */
  customProperties?: TaskModelCustomProperties;
  /** Gets or sets the list of children workflow models. */
  childrenWorkflows?: WorkflowModel[];
}

/** Task model custom properties. */
export interface TaskModelCustomProperties {
  /** Gets or sets the instance type. */
  instanceType: string;
}

/** Error model. */
export interface ErrorModel {
  /**
   * Gets or sets the error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * Gets or sets the error type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Gets or sets the error severity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly severity?: string;
  /**
   * Gets or sets the creation time of error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creationTime?: Date;
  /**
   * Gets or sets the error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * Gets or sets the possible causes of error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly causes?: string;
  /**
   * Gets or sets the recommended action to resolve error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recommendation?: string;
}

/** Workflow model custom properties. */
export interface WorkflowModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType:
    | "FailoverWorkflowDetails"
    | "TestFailoverCleanupWorkflowDetails"
    | "TestFailoverWorkflowDetails";
  /**
   * Gets or sets any custom properties of the affected object.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly affectedObjectDetails?: { [propertyName: string]: string };
}

/** Workflow model collection. */
export interface WorkflowModelCollection {
  /** Gets or sets the list of workflows. */
  value?: WorkflowModel[];
  /** Gets or sets the value of next link. */
  nextLink?: string;
}

/** AzStackHCI cluster properties. */
export interface AzStackHCIClusterProperties {
  /** Gets or sets the AzStackHCICluster FQDN name. */
  clusterName: string;
  /** Gets or sets the AzStackHCICluster resource name. */
  resourceName: string;
  /** Gets or sets the Storage account name. */
  storageAccountName: string;
  /** Gets or sets the list of AzStackHCICluster Storage Container. */
  storageContainers: StorageContainerProperties[];
}

/** Storage container properties. */
export interface StorageContainerProperties {
  /** Gets or sets the Name. */
  name: string;
  /** Gets or sets the ClusterSharedVolumePath. */
  clusterSharedVolumePath: string;
}

/** Failover properties of the protected item. */
export interface FailoverProtectedItemProperties {
  /**
   * Gets or sets the protected item name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protectedItemName?: string;
  /**
   * Gets or sets the VM name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vmName?: string;
  /**
   * Gets or sets the test VM name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly testVmName?: string;
  /**
   * Gets or sets the recovery point Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recoveryPointId?: string;
  /**
   * Gets or sets the recovery point time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recoveryPointTime?: Date;
  /**
   * Gets or sets the network name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkName?: string;
  /**
   * Gets or sets the network subnet.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subnet?: string;
}

/** HyperVToAzStack disk input. */
export interface HyperVToAzStackHCIDiskInput {
  /** Gets or sets the disk Id. */
  diskId: string;
  /** Gets or sets the target storage account ARM Id. */
  storageContainerId?: string;
  /**
   * Gets or sets a value indicating whether dynamic sizing is enabled on the virtual hard
   * disk.
   */
  isDynamic?: boolean;
  /** Gets or sets the disk size in GB. */
  diskSizeGB: number;
  /** Gets or sets the type of the virtual hard disk, vhd or vhdx. */
  diskFileFormat: string;
  /** Gets or sets a value indicating whether disk is os disk. */
  isOsDisk: boolean;
}

/** HyperVToAzStackHCI NIC properties. */
export interface HyperVToAzStackHCINicInput {
  /** Gets or sets the NIC Id. */
  nicId: string;
  /**
   * Gets or sets the network name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkName?: string;
  /** Gets or sets the target network Id within AzStackHCI Cluster. */
  targetNetworkId: string;
  /** Gets or sets the target test network Id within AzStackHCI Cluster. */
  testNetworkId: string;
  /** Gets or sets the selection type of the NIC. */
  selectionTypeForFailover: VMNicSelection;
}

/** HyperVToAzStackHCI protected disk properties. */
export interface HyperVToAzStackHCIProtectedDiskProperties {
  /**
   * Gets or sets the ARM Id of the storage container.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly storageContainerId?: string;
  /**
   * Gets or sets the local path of the storage container.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly storageContainerLocalPath?: string;
  /**
   * Gets or sets the source disk Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceDiskId?: string;
  /**
   * Gets or sets the source disk Name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceDiskName?: string;
  /**
   * Gets or sets the seed disk name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly seedDiskName?: string;
  /**
   * Gets or sets the test failover clone disk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly testMigrateDiskName?: string;
  /**
   * Gets or sets the failover clone disk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly migrateDiskName?: string;
  /**
   * Gets or sets a value indicating whether the disk is the OS disk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isOsDisk?: boolean;
  /**
   * Gets or sets the disk capacity in bytes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly capacityInBytes?: number;
  /**
   * Gets or sets a value indicating whether dynamic sizing is enabled on the virtual hard
   * disk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDynamic?: boolean;
  /**
   * Gets or sets the disk type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskType?: string;
}

/** Protected item dynamic memory config. */
export interface ProtectedItemDynamicMemoryConfig {
  /** Gets or sets maximum memory in MB. */
  maximumMemoryInMegaBytes: number;
  /** Gets or sets minimum memory in MB. */
  minimumMemoryInMegaBytes: number;
  /** Gets or sets target memory buffer in %. */
  targetMemoryBufferPercentage: number;
}

/** HyperVToAzStackHCI NIC properties. */
export interface HyperVToAzStackHCIProtectedNicProperties {
  /**
   * Gets or sets the NIC Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nicId?: string;
  /**
   * Gets or sets the NIC mac address.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly macAddress?: string;
  /**
   * Gets or sets the network name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkName?: string;
  /**
   * Gets or sets the target network Id within AzStackHCI Cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetNetworkId?: string;
  /**
   * Gets or sets the target test network Id within AzStackHCI Cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly testNetworkId?: string;
  /**
   * Gets or sets the selection type of the NIC.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly selectionTypeForFailover?: VMNicSelection;
}

/** Operation model. */
export interface OperationModel {
  /** Gets or sets the name of the operation. */
  name?: string;
  /**
   * Gets or sets a value indicating whether the action is specific to data plane or
   * control plane.
   */
  isDataAction?: boolean;
  /** Gets or sets the executor of the operation. */
  origin?: string;
  /** Operation model properties. */
  display?: OperationModelProperties;
}

/** Operation model properties. */
export interface OperationModelProperties {
  /** Gets or sets the resource provider name. */
  provider?: string;
  /** Gets or sets resource name. */
  resource?: string;
  /** Gets or sets the operation. */
  operation?: string;
  /** Gets or sets the description. */
  description?: string;
}

/** Available operations of the service. */
export interface OperationModelCollection {
  /** Gets or sets the list of operations. */
  value?: OperationModel[];
  /** Gets or sets the value of next link. */
  nextLink?: string;
}

/** VMwareToAzStack disk input. */
export interface VMwareToAzStackHCIDiskInput {
  /** Gets or sets the disk Id. */
  diskId: string;
  /** Gets or sets the target storage account ARM Id. */
  storageContainerId?: string;
  /**
   * Gets or sets a value indicating whether dynamic sizing is enabled on the virtual hard
   * disk.
   */
  isDynamic?: boolean;
  /** Gets or sets the disk size in GB. */
  diskSizeGB: number;
  /** Gets or sets the type of the virtual hard disk, vhd or vhdx. */
  diskFileFormat: string;
  /** Gets or sets a value indicating whether disk is os disk. */
  isOsDisk: boolean;
}

/** VMwareToAzStackHCI NIC properties. */
export interface VMwareToAzStackHCINicInput {
  /** Gets or sets the NIC Id. */
  nicId: string;
  /** Gets or sets the NIC label. */
  label: string;
  /**
   * Gets or sets the network name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkName?: string;
  /** Gets or sets the target network Id within AzStackHCI Cluster. */
  targetNetworkId: string;
  /** Gets or sets the target test network Id within AzStackHCI Cluster. */
  testNetworkId: string;
  /** Gets or sets the selection type of the NIC. */
  selectionTypeForFailover: VMNicSelection;
}

/** VMwareToAzStackHCI protected disk properties. */
export interface VMwareToAzStackHCIProtectedDiskProperties {
  /**
   * Gets or sets the ARM Id of the storage container.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly storageContainerId?: string;
  /**
   * Gets or sets the local path of the storage container.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly storageContainerLocalPath?: string;
  /**
   * Gets or sets the source disk Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceDiskId?: string;
  /**
   * Gets or sets the source disk Name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceDiskName?: string;
  /**
   * Gets or sets the seed disk name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly seedDiskName?: string;
  /**
   * Gets or sets the test failover clone disk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly testMigrateDiskName?: string;
  /**
   * Gets or sets the failover clone disk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly migrateDiskName?: string;
  /**
   * Gets or sets a value indicating whether the disk is the OS disk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isOsDisk?: boolean;
  /**
   * Gets or sets the disk capacity in bytes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly capacityInBytes?: number;
  /**
   * Gets or sets a value indicating whether dynamic sizing is enabled on the virtual hard
   * disk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDynamic?: boolean;
  /**
   * Gets or sets the disk type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskType?: string;
}

/** VMwareToAzStackHCI NIC properties. */
export interface VMwareToAzStackHCIProtectedNicProperties {
  /**
   * Gets or sets the NIC Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nicId?: string;
  /**
   * Gets or sets the NIC mac address.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly macAddress?: string;
  /**
   * Gets or sets the NIC label.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly label?: string;
  /** Gets or sets a value indicating whether this is the primary NIC. */
  isPrimaryNic?: boolean;
  /**
   * Gets or sets the network name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkName?: string;
  /**
   * Gets or sets the target network Id within AzStackHCI Cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetNetworkId?: string;
  /**
   * Gets or sets the target test network Id within AzStackHCI Cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly testNetworkId?: string;
  /**
   * Gets or sets the selection type of the NIC.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly selectionTypeForFailover?: VMNicSelection;
}

/** VMware DRA model custom properties. */
export interface VMwareDraModelCustomProperties
  extends DraModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMware";
  /** Gets or sets the BIOS Id of the DRA machine. */
  biosId: string;
  /** Identity model. */
  marsAuthenticationIdentity: IdentityModel;
}

export interface DraModelSystemData extends SystemDataModel {}

export interface EmailConfigurationModelSystemData extends SystemDataModel {}

export interface EventModelSystemData extends SystemDataModel {}

export interface FabricModelSystemData extends SystemDataModel {}

export interface FabricModelUpdateSystemData extends SystemDataModel {}

export interface PolicyModelSystemData extends SystemDataModel {}

export interface ProtectedItemModelSystemData extends SystemDataModel {}

export interface RecoveryPointModelSystemData extends SystemDataModel {}

export interface ReplicationExtensionModelSystemData extends SystemDataModel {}

export interface VaultModelSystemData extends SystemDataModel {}

export interface VaultModelUpdateSystemData extends SystemDataModel {}

export interface WorkflowModelSystemData extends SystemDataModel {}

/**
 * HyperV to  AzStackHCI event model custom properties. This class provides provider specific
 * details for events of type DataContract.HealthEvents.HealthEventType.ProtectedItemHealth and
 * DataContract.HealthEvents.HealthEventType.AgentHealth.
 */
export interface HyperVToAzStackHCIEventModelCustomProperties
  extends EventModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVToAzStackHCI";
  /**
   * Gets or sets the friendly name of the source which has raised this health event.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly eventSourceFriendlyName?: string;
  /**
   * Gets or sets the protected item friendly name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protectedItemFriendlyName?: string;
  /**
   * Gets or sets the source appliance name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceApplianceName?: string;
  /**
   * Gets or sets the source target name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetApplianceName?: string;
  /**
   * Gets or sets the server type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serverType?: string;
}

/** AzStackHCI fabric model custom properties. */
export interface AzStackHCIFabricModelCustomProperties
  extends FabricModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "AzStackHCI";
  /** Gets or sets the ARM Id of the AzStackHCI site. */
  azStackHciSiteId: string;
  /**
   * Gets or sets the Appliance name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly applianceName?: string[];
  /** AzStackHCI cluster properties. */
  cluster: AzStackHCIClusterProperties;
  /**
   * Gets or sets the fabric resource Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fabricResourceId?: string;
  /**
   * Gets or sets the fabric container Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fabricContainerId?: string;
  /** Gets or sets the Migration solution ARM Id. */
  migrationSolutionId: string;
  /**
   * Gets or sets the migration hub Uri.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly migrationHubUri?: string;
}

/** HyperV migrate fabric model custom properties. */
export interface HyperVMigrateFabricModelCustomProperties
  extends FabricModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVMigrate";
  /** Gets or sets the ARM Id of the HyperV site. */
  hyperVSiteId: string;
  /**
   * Gets or sets the fabric resource Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fabricResourceId?: string;
  /**
   * Gets or sets the fabric container Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fabricContainerId?: string;
  /** Gets or sets the migration solution ARM Id. */
  migrationSolutionId: string;
  /**
   * Gets or sets the migration hub Uri.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly migrationHubUri?: string;
}

/** VMware migrate fabric model custom properties. */
export interface VMwareMigrateFabricModelCustomProperties
  extends FabricModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareMigrate";
  /** Gets or sets the ARM Id of the VMware site. */
  vmwareSiteId: string;
  /** Gets or sets the ARM Id of the migration solution. */
  migrationSolutionId: string;
}

/** HyperV To AzStackHCI Policy model custom properties. */
export interface HyperVToAzStackHCIPolicyModelCustomProperties
  extends PolicyModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVToAzStackHCI";
  /**
   * Gets or sets the duration in minutes until which the recovery points need to be
   * stored.
   */
  recoveryPointHistoryInMinutes: number;
  /** Gets or sets the crash consistent snapshot frequency (in minutes). */
  crashConsistentFrequencyInMinutes: number;
  /** Gets or sets the app consistent snapshot frequency (in minutes). */
  appConsistentFrequencyInMinutes: number;
}

/** VMware To AzStackHCI Policy model custom properties. */
export interface VMwareToAzStackHCIPolicyModelCustomProperties
  extends PolicyModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareToAzStackHCI";
  /**
   * Gets or sets the duration in minutes until which the recovery points need to be
   * stored.
   */
  recoveryPointHistoryInMinutes: number;
  /** Gets or sets the crash consistent snapshot frequency (in minutes). */
  crashConsistentFrequencyInMinutes: number;
  /** Gets or sets the app consistent snapshot frequency (in minutes). */
  appConsistentFrequencyInMinutes: number;
}

export interface ProtectedItemModelPropertiesCurrentJob
  extends ProtectedItemJobProperties {}

export interface ProtectedItemModelPropertiesLastFailedEnableProtectionJob
  extends ProtectedItemJobProperties {}

export interface ProtectedItemModelPropertiesLastFailedPlannedFailoverJob
  extends ProtectedItemJobProperties {}

export interface ProtectedItemModelPropertiesLastTestFailoverJob
  extends ProtectedItemJobProperties {}

/** HyperV to AzStackHCI Protected item model custom properties. */
export interface HyperVToAzStackHCIProtectedItemModelCustomProperties
  extends ProtectedItemModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVToAzStackHCI";
  /**
   * Gets or sets the location of the protected item.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly activeLocation?: ProtectedItemActiveLocation;
  /** Gets or sets the Target HCI Cluster ARM Id. */
  targetHciClusterId: string;
  /** Gets or sets the Target Arc Cluster Custom Location ARM Id. */
  targetArcClusterCustomLocationId: string;
  /**
   * Gets or sets the Target AzStackHCI cluster name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetAzStackHciClusterName?: string;
  /** Gets or sets the ARM Id of the discovered machine. */
  fabricDiscoveryMachineId: string;
  /** Gets or sets the list of disks to replicate. */
  disksToInclude: HyperVToAzStackHCIDiskInput[];
  /** Gets or sets the list of VM NIC to replicate. */
  nicsToInclude: HyperVToAzStackHCINicInput[];
  /**
   * Gets or sets the source VM display name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceVmName?: string;
  /**
   * Gets or sets the source VM CPU cores.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceCpuCores?: number;
  /**
   * Gets or sets the source VM ram memory size in megabytes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceMemoryInMegaBytes?: number;
  /** Gets or sets the target VM display name. */
  targetVmName?: string;
  /** Gets or sets the target resource group ARM Id. */
  targetResourceGroupId: string;
  /** Gets or sets the target storage container ARM Id. */
  storageContainerId: string;
  /** Gets or sets the hypervisor generation of the virtual machine. */
  hyperVGeneration: string;
  /** Gets or sets the target network Id within AzStackHCI Cluster. */
  targetNetworkId?: string;
  /** Gets or sets the target test network Id within AzStackHCI Cluster. */
  testNetworkId?: string;
  /** Gets or sets the target CPU cores. */
  targetCpuCores?: number;
  /** Gets or sets a value indicating whether memory is dynamical. */
  isDynamicRam?: boolean;
  /** Protected item dynamic memory config. */
  dynamicMemoryConfig?: ProtectedItemDynamicMemoryConfig;
  /** Gets or sets the target memory in mega-bytes. */
  targetMemoryInMegaBytes?: number;
  /** Gets or sets the Run As account Id. */
  runAsAccountId: string;
  /** Gets or sets the source DRA name. */
  sourceDraName: string;
  /** Gets or sets the target DRA name. */
  targetDraName: string;
  /**
   * Gets or sets the source appliance name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceApplianceName?: string;
  /**
   * Gets or sets the target appliance name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetApplianceName?: string;
  /**
   * Gets or sets the type of the OS.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osType?: string;
  /**
   * Gets or sets the name of the OS.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osName?: string;
  /**
   * Gets or sets the firmware type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly firmwareType?: string;
  /**
   * Gets or sets the target location.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetLocation?: string;
  /** Gets or sets the location of Azure Arc HCI custom location resource. */
  customLocationRegion: string;
  /**
   * Gets or sets the recovery point Id to which the VM was failed over.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly failoverRecoveryPointId?: string;
  /**
   * Gets or sets the last recovery point received time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastRecoveryPointReceived?: Date;
  /**
   * Gets or sets the last recovery point Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastRecoveryPointId?: string;
  /**
   * Gets or sets the initial replication progress percentage. This is calculated based on
   * total bytes processed for all disks in the source VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly initialReplicationProgressPercentage?: number;
  /**
   * Gets or sets the resync progress percentage. This is calculated based on total bytes
   * processed for all disks in the source VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resyncProgressPercentage?: number;
  /**
   * Gets or sets the list of protected disks.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protectedDisks?: HyperVToAzStackHCIProtectedDiskProperties[];
  /**
   * Gets or sets the VM NIC details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protectedNics?: HyperVToAzStackHCIProtectedNicProperties[];
  /**
   * Gets or sets the BIOS Id of the target AzStackHCI VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetVmBiosId?: string;
  /**
   * Gets or sets the latest timestamp that replication status is updated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastReplicationUpdateTime?: Date;
}

/** VMware to AzStackHCI Protected item model custom properties. */
export interface VMwareToAzStackHCIProtectedItemModelCustomProperties
  extends ProtectedItemModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareToAzStackHCI";
  /**
   * Gets or sets the location of the protected item.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly activeLocation?: ProtectedItemActiveLocation;
  /** Gets or sets the Target HCI Cluster ARM Id. */
  targetHciClusterId: string;
  /** Gets or sets the Target Arc Cluster Custom Location ARM Id. */
  targetArcClusterCustomLocationId: string;
  /**
   * Gets or sets the Target AzStackHCI cluster name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetAzStackHciClusterName?: string;
  /** Gets or sets the target storage container ARM Id. */
  storageContainerId: string;
  /** Gets or sets the target resource group ARM Id. */
  targetResourceGroupId: string;
  /**
   * Gets or sets the target location.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetLocation?: string;
  /** Gets or sets the location of Azure Arc HCI custom location resource. */
  customLocationRegion: string;
  /** Gets or sets the list of disks to replicate. */
  disksToInclude: VMwareToAzStackHCIDiskInput[];
  /** Gets or sets the list of VM NIC to replicate. */
  nicsToInclude: VMwareToAzStackHCINicInput[];
  /**
   * Gets or sets the list of protected disks.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protectedDisks?: VMwareToAzStackHCIProtectedDiskProperties[];
  /**
   * Gets or sets the VM NIC details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protectedNics?: VMwareToAzStackHCIProtectedNicProperties[];
  /**
   * Gets or sets the BIOS Id of the target AzStackHCI VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetVmBiosId?: string;
  /** Gets or sets the target VM display name. */
  targetVmName?: string;
  /** Gets or sets the hypervisor generation of the virtual machine possible values are 1,2. */
  hyperVGeneration: string;
  /** Gets or sets the target network Id within AzStackHCI Cluster. */
  targetNetworkId?: string;
  /** Gets or sets the target test network Id within AzStackHCI Cluster. */
  testNetworkId?: string;
  /** Gets or sets the target CPU cores. */
  targetCpuCores?: number;
  /** Gets or sets a value indicating whether memory is dynamical. */
  isDynamicRam?: boolean;
  /** Protected item dynamic memory config. */
  dynamicMemoryConfig?: ProtectedItemDynamicMemoryConfig;
  /** Gets or sets the target memory in mega-bytes. */
  targetMemoryInMegaBytes?: number;
  /**
   * Gets or sets the type of the OS.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osType?: string;
  /**
   * Gets or sets the name of the OS.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osName?: string;
  /**
   * Gets or sets the firmware type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly firmwareType?: string;
  /** Gets or sets the ARM Id of the discovered machine. */
  fabricDiscoveryMachineId: string;
  /**
   * Gets or sets the source VM display name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceVmName?: string;
  /**
   * Gets or sets the source VM CPU cores.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceCpuCores?: number;
  /**
   * Gets or sets the source VM ram memory size in megabytes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceMemoryInMegaBytes?: number;
  /** Gets or sets the run as account Id. */
  runAsAccountId: string;
  /** Gets or sets the source DRA name. */
  sourceDraName: string;
  /** Gets or sets the target DRA name. */
  targetDraName: string;
  /**
   * Gets or sets the source appliance name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceApplianceName?: string;
  /**
   * Gets or sets the target appliance name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetApplianceName?: string;
  /**
   * Gets or sets the recovery point Id to which the VM was failed over.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly failoverRecoveryPointId?: string;
  /**
   * Gets or sets the last recovery point received time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastRecoveryPointReceived?: Date;
  /**
   * Gets or sets the last recovery point Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastRecoveryPointId?: string;
  /**
   * Gets or sets the initial replication progress percentage. This is calculated based on
   * total bytes processed for all disks in the source VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly initialReplicationProgressPercentage?: number;
  /**
   * Gets or sets the migration progress percentage.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly migrationProgressPercentage?: number;
  /**
   * Gets or sets the resume progress percentage.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resumeProgressPercentage?: number;
  /**
   * Gets or sets the resync progress percentage. This is calculated based on total bytes
   * processed for all disks in the source VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resyncProgressPercentage?: number;
  /**
   * Gets or sets the resync retry count.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resyncRetryCount?: number;
  /**
   * Gets or sets a value indicating whether resync is required.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resyncRequired?: boolean;
  /**
   * Gets or sets the resync state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resyncState?: VMwareToAzureMigrateResyncState;
  /** Gets or sets a value indicating whether auto resync is to be done. */
  performAutoResync?: boolean;
  /**
   * Gets or sets the resume retry count.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resumeRetryCount?: number;
  /**
   * Gets or sets the latest timestamp that replication status is updated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastReplicationUpdateTime?: Date;
}

/** HyperV to AzStackHCI planned failover model custom properties. */
export interface HyperVToAzStackHCIPlannedFailoverModelCustomProperties
  extends PlannedFailoverModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVToAzStackHCI";
  /** Gets or sets a value indicating whether VM needs to be shut down. */
  shutdownSourceVM: boolean;
}

/** VMware to AzStackHCI planned failover model custom properties. */
export interface VMwareToAzStackHCIPlannedFailoverModelCustomProperties
  extends PlannedFailoverModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareToAzStackHCI";
  /** Gets or sets a value indicating whether VM needs to be shut down. */
  shutdownSourceVM: boolean;
}

/** HyperV to AzStackHCI recovery point model custom properties. */
export interface HyperVToAzStackHCIRecoveryPointModelCustomProperties
  extends RecoveryPointModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVToAzStackHCI";
  /**
   * Gets or sets the list of the disk Ids.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskIds?: string[];
}

/** HyperV to AzStackHCI Replication extension model custom properties. */
export interface HyperVToAzStackHCIReplicationExtensionModelCustomProperties
  extends ReplicationExtensionModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVToAzStackHCI";
  /** Gets or sets the ARM Id of the source HyperV fabric. */
  hyperVFabricArmId: string;
  /**
   * Gets or sets the ARM Id of the HyperV site.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hyperVSiteId?: string;
  /** Gets or sets the ARM Id of the target AzStackHCI fabric. */
  azStackHciFabricArmId: string;
  /**
   * Gets or sets the ARM Id of the AzStackHCI site.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly azStackHciSiteId?: string;
  /** Gets or sets the storage account Id. */
  storageAccountId?: string;
  /** Gets or sets the Sas Secret of storage account. */
  storageAccountSasSecretName?: string;
  /**
   * Gets or sets the Uri of ASR.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly asrServiceUri?: string;
  /**
   * Gets or sets the Uri of Rcm.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly rcmServiceUri?: string;
  /**
   * Gets or sets the Uri of Gateway.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly gatewayServiceUri?: string;
  /**
   * Gets or sets the gateway service Id of source.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceGatewayServiceId?: string;
  /**
   * Gets or sets the gateway service Id of target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetGatewayServiceId?: string;
  /**
   * Gets or sets the source storage container name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceStorageContainerName?: string;
  /**
   * Gets or sets the target storage container name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetStorageContainerName?: string;
  /**
   * Gets or sets the resource location.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceLocation?: string;
  /**
   * Gets or sets the subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionId?: string;
  /**
   * Gets or sets the resource group.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceGroup?: string;
}

/** VMware to AzStackHCI Replication extension model custom properties. */
export interface VMwareToAzStackHCIReplicationExtensionModelCustomProperties
  extends ReplicationExtensionModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareToAzStackHCI";
  /** Gets or sets the ARM Id of the source VMware fabric. */
  vmwareFabricArmId: string;
  /**
   * Gets or sets the ARM Id of the VMware site.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vmwareSiteId?: string;
  /** Gets or sets the ARM Id of the target AzStackHCI fabric. */
  azStackHciFabricArmId: string;
  /**
   * Gets or sets the ARM Id of the AzStackHCI site.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly azStackHciSiteId?: string;
  /** Gets or sets the storage account Id. */
  storageAccountId?: string;
  /** Gets or sets the Sas Secret of storage account. */
  storageAccountSasSecretName?: string;
  /**
   * Gets or sets the Uri of ASR.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly asrServiceUri?: string;
  /**
   * Gets or sets the Uri of Rcm.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly rcmServiceUri?: string;
  /**
   * Gets or sets the Uri of Gateway.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly gatewayServiceUri?: string;
  /**
   * Gets or sets the gateway service Id of source.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceGatewayServiceId?: string;
  /**
   * Gets or sets the gateway service Id of target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetGatewayServiceId?: string;
  /**
   * Gets or sets the source storage container name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceStorageContainerName?: string;
  /**
   * Gets or sets the target storage container name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetStorageContainerName?: string;
  /**
   * Gets or sets the resource location.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceLocation?: string;
  /**
   * Gets or sets the subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionId?: string;
  /**
   * Gets or sets the resource group.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceGroup?: string;
}

/** Failover workflow model custom properties. */
export interface FailoverWorkflowModelCustomProperties
  extends WorkflowModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "FailoverWorkflowDetails";
  /**
   * Gets or sets the failed over protected item details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protectedItemDetails?: FailoverProtectedItemProperties[];
}

/** Test failover cleanup workflow model custom properties. */
export interface TestFailoverCleanupWorkflowModelCustomProperties
  extends WorkflowModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "TestFailoverCleanupWorkflowDetails";
  /**
   * Gets or sets the test failover cleanup comments.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly comments?: string;
}

/** Test failover workflow model custom properties. */
export interface TestFailoverWorkflowModelCustomProperties
  extends WorkflowModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "TestFailoverWorkflowDetails";
  /**
   * Gets or sets the test VM details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protectedItemDetails?: FailoverProtectedItemProperties[];
}

/** Defines headers for Dra_delete operation. */
export interface DraDeleteHeaders {
  /** Tracking URL for long running operation. */
  azureAsyncOperation?: string;
  location?: string;
}

/** Defines headers for Fabric_update operation. */
export interface FabricUpdateHeaders {
  /** Tracking URL for long running operation. */
  azureAsyncOperation?: string;
  location?: string;
}

/** Defines headers for Fabric_delete operation. */
export interface FabricDeleteHeaders {
  /** Tracking URL for long running operation. */
  azureAsyncOperation?: string;
  location?: string;
}

/** Defines headers for Policy_delete operation. */
export interface PolicyDeleteHeaders {
  /** Tracking URL for long running operation. */
  azureAsyncOperation?: string;
  location?: string;
}

/** Defines headers for ProtectedItem_delete operation. */
export interface ProtectedItemDeleteHeaders {
  /** Tracking URL for long running operation. */
  azureAsyncOperation?: string;
  location?: string;
}

/** Defines headers for ProtectedItem_plannedFailover operation. */
export interface ProtectedItemPlannedFailoverHeaders {
  /** Tracking URL for long running operation. */
  azureAsyncOperation?: string;
  location?: string;
}

/** Defines headers for ReplicationExtension_delete operation. */
export interface ReplicationExtensionDeleteHeaders {
  /** Tracking URL for long running operation. */
  azureAsyncOperation?: string;
  location?: string;
}

/** Defines headers for Vault_update operation. */
export interface VaultUpdateHeaders {
  /** Tracking URL for long running operation. */
  azureAsyncOperation?: string;
  location?: string;
}

/** Defines headers for Vault_delete operation. */
export interface VaultDeleteHeaders {
  /** Tracking URL for long running operation. */
  azureAsyncOperation?: string;
  location?: string;
}

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Canceled */
  Canceled = "Canceled",
  /** Creating */
  Creating = "Creating",
  /** Deleting */
  Deleting = "Deleting",
  /** Deleted */
  Deleted = "Deleted",
  /** Failed */
  Failed = "Failed",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Updating */
  Updating = "Updating"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Canceled** \
 * **Creating** \
 * **Deleting** \
 * **Deleted** \
 * **Failed** \
 * **Succeeded** \
 * **Updating**
 */
export type ProvisioningState = string;

/** Known values of {@link HealthStatus} that the service accepts. */
export enum KnownHealthStatus {
  /** Normal */
  Normal = "Normal",
  /** Warning */
  Warning = "Warning",
  /** Critical */
  Critical = "Critical"
}

/**
 * Defines values for HealthStatus. \
 * {@link KnownHealthStatus} can be used interchangeably with HealthStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Normal** \
 * **Warning** \
 * **Critical**
 */
export type HealthStatus = string;

/** Known values of {@link ProtectionState} that the service accepts. */
export enum KnownProtectionState {
  /** UnprotectedStatesBegin */
  UnprotectedStatesBegin = "UnprotectedStatesBegin",
  /** EnablingProtection */
  EnablingProtection = "EnablingProtection",
  /** EnablingFailed */
  EnablingFailed = "EnablingFailed",
  /** DisablingProtection */
  DisablingProtection = "DisablingProtection",
  /** MarkedForDeletion */
  MarkedForDeletion = "MarkedForDeletion",
  /** DisablingFailed */
  DisablingFailed = "DisablingFailed",
  /** UnprotectedStatesEnd */
  UnprotectedStatesEnd = "UnprotectedStatesEnd",
  /** InitialReplicationStatesBegin */
  InitialReplicationStatesBegin = "InitialReplicationStatesBegin",
  /** InitialReplicationInProgress */
  InitialReplicationInProgress = "InitialReplicationInProgress",
  /** InitialReplicationCompletedOnPrimary */
  InitialReplicationCompletedOnPrimary = "InitialReplicationCompletedOnPrimary",
  /** InitialReplicationCompletedOnRecovery */
  InitialReplicationCompletedOnRecovery = "InitialReplicationCompletedOnRecovery",
  /** InitialReplicationFailed */
  InitialReplicationFailed = "InitialReplicationFailed",
  /** InitialReplicationStatesEnd */
  InitialReplicationStatesEnd = "InitialReplicationStatesEnd",
  /** ProtectedStatesBegin */
  ProtectedStatesBegin = "ProtectedStatesBegin",
  /** Protected */
  Protected = "Protected",
  /** ProtectedStatesEnd */
  ProtectedStatesEnd = "ProtectedStatesEnd",
  /** PlannedFailoverTransitionStatesBegin */
  PlannedFailoverTransitionStatesBegin = "PlannedFailoverTransitionStatesBegin",
  /** PlannedFailoverInitiated */
  PlannedFailoverInitiated = "PlannedFailoverInitiated",
  /** PlannedFailoverCompleting */
  PlannedFailoverCompleting = "PlannedFailoverCompleting",
  /** PlannedFailoverCompleted */
  PlannedFailoverCompleted = "PlannedFailoverCompleted",
  /** PlannedFailoverFailed */
  PlannedFailoverFailed = "PlannedFailoverFailed",
  /** PlannedFailoverCompletionFailed */
  PlannedFailoverCompletionFailed = "PlannedFailoverCompletionFailed",
  /** PlannedFailoverTransitionStatesEnd */
  PlannedFailoverTransitionStatesEnd = "PlannedFailoverTransitionStatesEnd",
  /** UnplannedFailoverTransitionStatesBegin */
  UnplannedFailoverTransitionStatesBegin = "UnplannedFailoverTransitionStatesBegin",
  /** UnplannedFailoverInitiated */
  UnplannedFailoverInitiated = "UnplannedFailoverInitiated",
  /** UnplannedFailoverCompleting */
  UnplannedFailoverCompleting = "UnplannedFailoverCompleting",
  /** UnplannedFailoverCompleted */
  UnplannedFailoverCompleted = "UnplannedFailoverCompleted",
  /** UnplannedFailoverFailed */
  UnplannedFailoverFailed = "UnplannedFailoverFailed",
  /** UnplannedFailoverCompletionFailed */
  UnplannedFailoverCompletionFailed = "UnplannedFailoverCompletionFailed",
  /** UnplannedFailoverTransitionStatesEnd */
  UnplannedFailoverTransitionStatesEnd = "UnplannedFailoverTransitionStatesEnd",
  /** CommitFailoverStatesBegin */
  CommitFailoverStatesBegin = "CommitFailoverStatesBegin",
  /** CommitFailoverInProgressOnPrimary */
  CommitFailoverInProgressOnPrimary = "CommitFailoverInProgressOnPrimary",
  /** CommitFailoverInProgressOnRecovery */
  CommitFailoverInProgressOnRecovery = "CommitFailoverInProgressOnRecovery",
  /** CommitFailoverCompleted */
  CommitFailoverCompleted = "CommitFailoverCompleted",
  /** CommitFailoverFailedOnPrimary */
  CommitFailoverFailedOnPrimary = "CommitFailoverFailedOnPrimary",
  /** CommitFailoverFailedOnRecovery */
  CommitFailoverFailedOnRecovery = "CommitFailoverFailedOnRecovery",
  /** CommitFailoverStatesEnd */
  CommitFailoverStatesEnd = "CommitFailoverStatesEnd",
  /** CancelFailoverStatesBegin */
  CancelFailoverStatesBegin = "CancelFailoverStatesBegin",
  /** CancelFailoverInProgressOnPrimary */
  CancelFailoverInProgressOnPrimary = "CancelFailoverInProgressOnPrimary",
  /** CancelFailoverInProgressOnRecovery */
  CancelFailoverInProgressOnRecovery = "CancelFailoverInProgressOnRecovery",
  /** CancelFailoverFailedOnPrimary */
  CancelFailoverFailedOnPrimary = "CancelFailoverFailedOnPrimary",
  /** CancelFailoverFailedOnRecovery */
  CancelFailoverFailedOnRecovery = "CancelFailoverFailedOnRecovery",
  /** CancelFailoverStatesEnd */
  CancelFailoverStatesEnd = "CancelFailoverStatesEnd",
  /** ChangeRecoveryPointStatesBegin */
  ChangeRecoveryPointStatesBegin = "ChangeRecoveryPointStatesBegin",
  /** ChangeRecoveryPointInitiated */
  ChangeRecoveryPointInitiated = "ChangeRecoveryPointInitiated",
  /** ChangeRecoveryPointCompleted */
  ChangeRecoveryPointCompleted = "ChangeRecoveryPointCompleted",
  /** ChangeRecoveryPointFailed */
  ChangeRecoveryPointFailed = "ChangeRecoveryPointFailed",
  /** ChangeRecoveryPointStatesEnd */
  ChangeRecoveryPointStatesEnd = "ChangeRecoveryPointStatesEnd",
  /** ReprotectStatesBegin */
  ReprotectStatesBegin = "ReprotectStatesBegin",
  /** ReprotectInitiated */
  ReprotectInitiated = "ReprotectInitiated",
  /** ReprotectFailed */
  ReprotectFailed = "ReprotectFailed",
  /** ReprotectStatesEnd */
  ReprotectStatesEnd = "ReprotectStatesEnd"
}

/**
 * Defines values for ProtectionState. \
 * {@link KnownProtectionState} can be used interchangeably with ProtectionState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **UnprotectedStatesBegin** \
 * **EnablingProtection** \
 * **EnablingFailed** \
 * **DisablingProtection** \
 * **MarkedForDeletion** \
 * **DisablingFailed** \
 * **UnprotectedStatesEnd** \
 * **InitialReplicationStatesBegin** \
 * **InitialReplicationInProgress** \
 * **InitialReplicationCompletedOnPrimary** \
 * **InitialReplicationCompletedOnRecovery** \
 * **InitialReplicationFailed** \
 * **InitialReplicationStatesEnd** \
 * **ProtectedStatesBegin** \
 * **Protected** \
 * **ProtectedStatesEnd** \
 * **PlannedFailoverTransitionStatesBegin** \
 * **PlannedFailoverInitiated** \
 * **PlannedFailoverCompleting** \
 * **PlannedFailoverCompleted** \
 * **PlannedFailoverFailed** \
 * **PlannedFailoverCompletionFailed** \
 * **PlannedFailoverTransitionStatesEnd** \
 * **UnplannedFailoverTransitionStatesBegin** \
 * **UnplannedFailoverInitiated** \
 * **UnplannedFailoverCompleting** \
 * **UnplannedFailoverCompleted** \
 * **UnplannedFailoverFailed** \
 * **UnplannedFailoverCompletionFailed** \
 * **UnplannedFailoverTransitionStatesEnd** \
 * **CommitFailoverStatesBegin** \
 * **CommitFailoverInProgressOnPrimary** \
 * **CommitFailoverInProgressOnRecovery** \
 * **CommitFailoverCompleted** \
 * **CommitFailoverFailedOnPrimary** \
 * **CommitFailoverFailedOnRecovery** \
 * **CommitFailoverStatesEnd** \
 * **CancelFailoverStatesBegin** \
 * **CancelFailoverInProgressOnPrimary** \
 * **CancelFailoverInProgressOnRecovery** \
 * **CancelFailoverFailedOnPrimary** \
 * **CancelFailoverFailedOnRecovery** \
 * **CancelFailoverStatesEnd** \
 * **ChangeRecoveryPointStatesBegin** \
 * **ChangeRecoveryPointInitiated** \
 * **ChangeRecoveryPointCompleted** \
 * **ChangeRecoveryPointFailed** \
 * **ChangeRecoveryPointStatesEnd** \
 * **ReprotectStatesBegin** \
 * **ReprotectInitiated** \
 * **ReprotectFailed** \
 * **ReprotectStatesEnd**
 */
export type ProtectionState = string;

/** Known values of {@link TestFailoverState} that the service accepts. */
export enum KnownTestFailoverState {
  /** None */
  None = "None",
  /** TestFailoverInitiated */
  TestFailoverInitiated = "TestFailoverInitiated",
  /** TestFailoverCompleting */
  TestFailoverCompleting = "TestFailoverCompleting",
  /** TestFailoverCompleted */
  TestFailoverCompleted = "TestFailoverCompleted",
  /** TestFailoverFailed */
  TestFailoverFailed = "TestFailoverFailed",
  /** TestFailoverCompletionFailed */
  TestFailoverCompletionFailed = "TestFailoverCompletionFailed",
  /** TestFailoverCleanupInitiated */
  TestFailoverCleanupInitiated = "TestFailoverCleanupInitiated",
  /** TestFailoverCleanupCompleting */
  TestFailoverCleanupCompleting = "TestFailoverCleanupCompleting",
  /** MarkedForDeletion */
  MarkedForDeletion = "MarkedForDeletion"
}

/**
 * Defines values for TestFailoverState. \
 * {@link KnownTestFailoverState} can be used interchangeably with TestFailoverState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **TestFailoverInitiated** \
 * **TestFailoverCompleting** \
 * **TestFailoverCompleted** \
 * **TestFailoverFailed** \
 * **TestFailoverCompletionFailed** \
 * **TestFailoverCleanupInitiated** \
 * **TestFailoverCleanupCompleting** \
 * **MarkedForDeletion**
 */
export type TestFailoverState = string;

/** Known values of {@link ResynchronizationState} that the service accepts. */
export enum KnownResynchronizationState {
  /** None */
  None = "None",
  /** ResynchronizationInitiated */
  ResynchronizationInitiated = "ResynchronizationInitiated",
  /** ResynchronizationCompleted */
  ResynchronizationCompleted = "ResynchronizationCompleted",
  /** ResynchronizationFailed */
  ResynchronizationFailed = "ResynchronizationFailed"
}

/**
 * Defines values for ResynchronizationState. \
 * {@link KnownResynchronizationState} can be used interchangeably with ResynchronizationState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **ResynchronizationInitiated** \
 * **ResynchronizationCompleted** \
 * **ResynchronizationFailed**
 */
export type ResynchronizationState = string;

/** Known values of {@link RecoveryPointType} that the service accepts. */
export enum KnownRecoveryPointType {
  /** ApplicationConsistent */
  ApplicationConsistent = "ApplicationConsistent",
  /** CrashConsistent */
  CrashConsistent = "CrashConsistent"
}

/**
 * Defines values for RecoveryPointType. \
 * {@link KnownRecoveryPointType} can be used interchangeably with RecoveryPointType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ApplicationConsistent** \
 * **CrashConsistent**
 */
export type RecoveryPointType = string;

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system"
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link ReplicationVaultType} that the service accepts. */
export enum KnownReplicationVaultType {
  /** DisasterRecovery */
  DisasterRecovery = "DisasterRecovery",
  /** Migrate */
  Migrate = "Migrate"
}

/**
 * Defines values for ReplicationVaultType. \
 * {@link KnownReplicationVaultType} can be used interchangeably with ReplicationVaultType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **DisasterRecovery** \
 * **Migrate**
 */
export type ReplicationVaultType = string;

/** Known values of {@link WorkflowState} that the service accepts. */
export enum KnownWorkflowState {
  /** Pending */
  Pending = "Pending",
  /** Started */
  Started = "Started",
  /** Cancelling */
  Cancelling = "Cancelling",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Cancelled */
  Cancelled = "Cancelled",
  /** CompletedWithInformation */
  CompletedWithInformation = "CompletedWithInformation",
  /** CompletedWithWarnings */
  CompletedWithWarnings = "CompletedWithWarnings",
  /** CompletedWithErrors */
  CompletedWithErrors = "CompletedWithErrors"
}

/**
 * Defines values for WorkflowState. \
 * {@link KnownWorkflowState} can be used interchangeably with WorkflowState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Started** \
 * **Cancelling** \
 * **Succeeded** \
 * **Failed** \
 * **Cancelled** \
 * **CompletedWithInformation** \
 * **CompletedWithWarnings** \
 * **CompletedWithErrors**
 */
export type WorkflowState = string;

/** Known values of {@link WorkflowObjectType} that the service accepts. */
export enum KnownWorkflowObjectType {
  /** AvsDiskPool */
  AvsDiskPool = "AvsDiskPool",
  /** Dra */
  Dra = "Dra",
  /** Fabric */
  Fabric = "Fabric",
  /** Policy */
  Policy = "Policy",
  /** ProtectedItem */
  ProtectedItem = "ProtectedItem",
  /** RecoveryPlan */
  RecoveryPlan = "RecoveryPlan",
  /** ReplicationExtension */
  ReplicationExtension = "ReplicationExtension",
  /** Vault */
  Vault = "Vault"
}

/**
 * Defines values for WorkflowObjectType. \
 * {@link KnownWorkflowObjectType} can be used interchangeably with WorkflowObjectType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AvsDiskPool** \
 * **Dra** \
 * **Fabric** \
 * **Policy** \
 * **ProtectedItem** \
 * **RecoveryPlan** \
 * **ReplicationExtension** \
 * **Vault**
 */
export type WorkflowObjectType = string;

/** Known values of {@link TaskState} that the service accepts. */
export enum KnownTaskState {
  /** Pending */
  Pending = "Pending",
  /** Started */
  Started = "Started",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Cancelled */
  Cancelled = "Cancelled",
  /** Skipped */
  Skipped = "Skipped"
}

/**
 * Defines values for TaskState. \
 * {@link KnownTaskState} can be used interchangeably with TaskState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Started** \
 * **Succeeded** \
 * **Failed** \
 * **Cancelled** \
 * **Skipped**
 */
export type TaskState = string;

/** Known values of {@link VMNicSelection} that the service accepts. */
export enum KnownVMNicSelection {
  /** NotSelected */
  NotSelected = "NotSelected",
  /** SelectedByUser */
  SelectedByUser = "SelectedByUser",
  /** SelectedByDefault */
  SelectedByDefault = "SelectedByDefault",
  /** SelectedByUserOverride */
  SelectedByUserOverride = "SelectedByUserOverride"
}

/**
 * Defines values for VMNicSelection. \
 * {@link KnownVMNicSelection} can be used interchangeably with VMNicSelection,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotSelected** \
 * **SelectedByUser** \
 * **SelectedByDefault** \
 * **SelectedByUserOverride**
 */
export type VMNicSelection = string;

/** Known values of {@link ProtectedItemActiveLocation} that the service accepts. */
export enum KnownProtectedItemActiveLocation {
  /** Primary */
  Primary = "Primary",
  /** Recovery */
  Recovery = "Recovery"
}

/**
 * Defines values for ProtectedItemActiveLocation. \
 * {@link KnownProtectedItemActiveLocation} can be used interchangeably with ProtectedItemActiveLocation,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Primary** \
 * **Recovery**
 */
export type ProtectedItemActiveLocation = string;

/** Known values of {@link VMwareToAzureMigrateResyncState} that the service accepts. */
export enum KnownVMwareToAzureMigrateResyncState {
  /** None */
  None = "None",
  /** PreparedForResynchronization */
  PreparedForResynchronization = "PreparedForResynchronization",
  /** StartedResynchronization */
  StartedResynchronization = "StartedResynchronization"
}

/**
 * Defines values for VMwareToAzureMigrateResyncState. \
 * {@link KnownVMwareToAzureMigrateResyncState} can be used interchangeably with VMwareToAzureMigrateResyncState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **PreparedForResynchronization** \
 * **StartedResynchronization**
 */
export type VMwareToAzureMigrateResyncState = string;

/** Optional parameters. */
export interface DraGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DraGetResponse = DraModel;

/** Optional parameters. */
export interface DraCreateOptionalParams extends coreClient.OperationOptions {
  /** Dra model. */
  body?: DraModel;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type DraCreateResponse = DraModel;

/** Optional parameters. */
export interface DraDeleteOptionalParams extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type DraDeleteResponse = DraDeleteHeaders;

/** Optional parameters. */
export interface DraListOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type DraListResponse = DraModelCollection;

/** Optional parameters. */
export interface DraListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type DraListNextResponse = DraModelCollection;

/** Optional parameters. */
export interface DraOperationStatusGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DraOperationStatusGetResponse = OperationStatus;

/** Optional parameters. */
export interface EmailConfigurationGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type EmailConfigurationGetResponse = EmailConfigurationModel;

/** Optional parameters. */
export interface EmailConfigurationCreateOptionalParams
  extends coreClient.OperationOptions {
  /** EmailConfiguration model. */
  body?: EmailConfigurationModel;
}

/** Contains response data for the create operation. */
export type EmailConfigurationCreateResponse = EmailConfigurationModel;

/** Optional parameters. */
export interface EmailConfigurationListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type EmailConfigurationListResponse = EmailConfigurationModelCollection;

/** Optional parameters. */
export interface EmailConfigurationListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type EmailConfigurationListNextResponse = EmailConfigurationModelCollection;

/** Optional parameters. */
export interface EventGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type EventGetResponse = EventModel;

/** Optional parameters. */
export interface EventListOptionalParams extends coreClient.OperationOptions {
  /** Filter string. */
  filter?: string;
  /** Continuation token. */
  continuationToken?: string;
}

/** Contains response data for the list operation. */
export type EventListResponse = EventModelCollection;

/** Optional parameters. */
export interface EventListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type EventListNextResponse = EventModelCollection;

/** Optional parameters. */
export interface FabricGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type FabricGetResponse = FabricModel;

/** Optional parameters. */
export interface FabricCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Fabric properties. */
  body?: FabricModel;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type FabricCreateResponse = FabricModel;

/** Optional parameters. */
export interface FabricUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Fabric properties. */
  body?: FabricModelUpdate;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type FabricUpdateResponse = FabricModel;

/** Optional parameters. */
export interface FabricDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type FabricDeleteResponse = FabricDeleteHeaders;

/** Optional parameters. */
export interface FabricListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {
  /** Continuation token from the previous call. */
  continuationToken?: string;
}

/** Contains response data for the listBySubscription operation. */
export type FabricListBySubscriptionResponse = FabricModelCollection;

/** Optional parameters. */
export interface FabricListOptionalParams extends coreClient.OperationOptions {
  /** Continuation token from the previous call. */
  continuationToken?: string;
}

/** Contains response data for the list operation. */
export type FabricListResponse = FabricModelCollection;

/** Optional parameters. */
export interface FabricListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type FabricListBySubscriptionNextResponse = FabricModelCollection;

/** Optional parameters. */
export interface FabricListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type FabricListNextResponse = FabricModelCollection;

/** Optional parameters. */
export interface FabricOperationsStatusGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type FabricOperationsStatusGetResponse = OperationStatus;

/** Optional parameters. */
export interface PolicyGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PolicyGetResponse = PolicyModel;

/** Optional parameters. */
export interface PolicyCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Policy model. */
  body?: PolicyModel;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type PolicyCreateResponse = PolicyModel;

/** Optional parameters. */
export interface PolicyDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type PolicyDeleteResponse = PolicyDeleteHeaders;

/** Optional parameters. */
export interface PolicyListOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type PolicyListResponse = PolicyModelCollection;

/** Optional parameters. */
export interface PolicyListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type PolicyListNextResponse = PolicyModelCollection;

/** Optional parameters. */
export interface PolicyOperationStatusGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PolicyOperationStatusGetResponse = OperationStatus;

/** Optional parameters. */
export interface ProtectedItemGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ProtectedItemGetResponse = ProtectedItemModel;

/** Optional parameters. */
export interface ProtectedItemCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Protected item model. */
  body?: ProtectedItemModel;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ProtectedItemCreateResponse = ProtectedItemModel;

/** Optional parameters. */
export interface ProtectedItemDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** A flag indicating whether to do force delete or not. */
  forceDelete?: boolean;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type ProtectedItemDeleteResponse = ProtectedItemDeleteHeaders;

/** Optional parameters. */
export interface ProtectedItemListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ProtectedItemListResponse = ProtectedItemModelCollection;

/** Optional parameters. */
export interface ProtectedItemPlannedFailoverOptionalParams
  extends coreClient.OperationOptions {
  /** Planned failover model. */
  body?: PlannedFailoverModel;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the plannedFailover operation. */
export type ProtectedItemPlannedFailoverResponse = PlannedFailoverModel;

/** Optional parameters. */
export interface ProtectedItemListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ProtectedItemListNextResponse = ProtectedItemModelCollection;

/** Optional parameters. */
export interface ProtectedItemOperationStatusGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ProtectedItemOperationStatusGetResponse = OperationStatus;

/** Optional parameters. */
export interface RecoveryPointsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type RecoveryPointsGetResponse = RecoveryPointModel;

/** Optional parameters. */
export interface RecoveryPointsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type RecoveryPointsListResponse = RecoveryPointModelCollection;

/** Optional parameters. */
export interface RecoveryPointsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type RecoveryPointsListNextResponse = RecoveryPointModelCollection;

/** Optional parameters. */
export interface ReplicationExtensionGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ReplicationExtensionGetResponse = ReplicationExtensionModel;

/** Optional parameters. */
export interface ReplicationExtensionCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Replication extension model. */
  body?: ReplicationExtensionModel;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ReplicationExtensionCreateResponse = ReplicationExtensionModel;

/** Optional parameters. */
export interface ReplicationExtensionDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type ReplicationExtensionDeleteResponse = ReplicationExtensionDeleteHeaders;

/** Optional parameters. */
export interface ReplicationExtensionListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ReplicationExtensionListResponse = ReplicationExtensionModelCollection;

/** Optional parameters. */
export interface ReplicationExtensionListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ReplicationExtensionListNextResponse = ReplicationExtensionModelCollection;

/** Optional parameters. */
export interface ReplicationExtensionOperationStatusGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ReplicationExtensionOperationStatusGetResponse = OperationStatus;

/** Optional parameters. */
export interface CheckNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {
  /** Resource details. */
  body?: CheckNameAvailabilityModel;
}

/** Contains response data for the checkNameAvailability operation. */
export type CheckNameAvailabilityResponse = CheckNameAvailabilityResponseModel;

/** Optional parameters. */
export interface DeploymentPreflightOptionalParams
  extends coreClient.OperationOptions {
  /** Deployment preflight model. */
  body?: DeploymentPreflightModel;
}

/** Contains response data for the deploymentPreflight operation. */
export type DeploymentPreflightResponse = DeploymentPreflightModel;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface VaultGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type VaultGetResponse = VaultModel;

/** Optional parameters. */
export interface VaultCreateOptionalParams extends coreClient.OperationOptions {
  /** Vault properties. */
  body?: VaultModel;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type VaultCreateResponse = VaultModel;

/** Optional parameters. */
export interface VaultUpdateOptionalParams extends coreClient.OperationOptions {
  /** Vault properties. */
  body?: VaultModelUpdate;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type VaultUpdateResponse = VaultModel;

/** Optional parameters. */
export interface VaultDeleteOptionalParams extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type VaultDeleteResponse = VaultDeleteHeaders;

/** Optional parameters. */
export interface VaultListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {
  /** Continuation token from the previous call. */
  continuationToken?: string;
}

/** Contains response data for the listBySubscription operation. */
export type VaultListBySubscriptionResponse = VaultModelCollection;

/** Optional parameters. */
export interface VaultListOptionalParams extends coreClient.OperationOptions {
  /** Continuation token from the previous call. */
  continuationToken?: string;
}

/** Contains response data for the list operation. */
export type VaultListResponse = VaultModelCollection;

/** Optional parameters. */
export interface VaultListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type VaultListBySubscriptionNextResponse = VaultModelCollection;

/** Optional parameters. */
export interface VaultListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type VaultListNextResponse = VaultModelCollection;

/** Optional parameters. */
export interface VaultOperationStatusGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type VaultOperationStatusGetResponse = OperationStatus;

/** Optional parameters. */
export interface WorkflowGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type WorkflowGetResponse = WorkflowModel;

/** Optional parameters. */
export interface WorkflowListOptionalParams
  extends coreClient.OperationOptions {
  /** Filter string. */
  filter?: string;
  /** Continuation token. */
  continuationToken?: string;
}

/** Contains response data for the list operation. */
export type WorkflowListResponse = WorkflowModelCollection;

/** Optional parameters. */
export interface WorkflowListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type WorkflowListNextResponse = WorkflowModelCollection;

/** Optional parameters. */
export interface WorkflowOperationStatusGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type WorkflowOperationStatusGetResponse = OperationStatus;

/** Optional parameters. */
export interface AzureSiteRecoveryManagementServiceAPIOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
