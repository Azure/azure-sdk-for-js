/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreAuth from "@azure/core-auth";
import {
  OperationsImpl,
  RedisImpl,
  FirewallRulesImpl,
  PatchSchedulesImpl,
  LinkedServerImpl,
  PrivateEndpointConnectionsImpl,
  PrivateLinkResourcesImpl
} from "./operations";
import {
  Operations,
  Redis,
  FirewallRules,
  PatchSchedules,
  LinkedServer,
  PrivateEndpointConnections,
  PrivateLinkResources
} from "./operationsInterfaces";
import { RedisManagementClientContext } from "./redisManagementClientContext";
import { RedisManagementClientOptionalParams } from "./models";

export class RedisManagementClient extends RedisManagementClientContext {
  /**
   * Initializes a new instance of the RedisManagementClient class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param subscriptionId Gets subscription credentials which uniquely identify the Microsoft Azure
   *                       subscription. The subscription ID forms part of the URI for every service call.
   * @param options The parameter options
   */
  constructor(
    credentials: coreAuth.TokenCredential,
    subscriptionId: string,
    options?: RedisManagementClientOptionalParams
  ) {
    super(credentials, subscriptionId, options);
    this.operations = new OperationsImpl(this);
    this.redis = new RedisImpl(this);
    this.firewallRules = new FirewallRulesImpl(this);
    this.patchSchedules = new PatchSchedulesImpl(this);
    this.linkedServer = new LinkedServerImpl(this);
    this.privateEndpointConnections = new PrivateEndpointConnectionsImpl(this);
    this.privateLinkResources = new PrivateLinkResourcesImpl(this);
  }

  operations: Operations;
  redis: Redis;
  firewallRules: FirewallRules;
  patchSchedules: PatchSchedules;
  linkedServer: LinkedServer;
  privateEndpointConnections: PrivateEndpointConnections;
  privateLinkResources: PrivateLinkResources;
}
