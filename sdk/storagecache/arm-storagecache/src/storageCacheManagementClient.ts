/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as operations from "./operations";
import { StorageCacheManagementClientContext } from "./storageCacheManagementClientContext";


class StorageCacheManagementClient extends StorageCacheManagementClientContext {
  // Operation groups
  operations: operations.Operations;
  skus: operations.Skus;
  usageModels: operations.UsageModels;
  caches: operations.Caches;
  storageTargets: operations.StorageTargets;

  /**
   * Initializes a new instance of the StorageCacheManagementClient class.
   * @param credentials Credentials needed for the client to connect to Azure.
   * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure
   * subscription. The subscription ID forms part of the URI for every service call.
   * @param [options] The parameter options
   */
  constructor(credentials: msRest.ServiceClientCredentials, subscriptionId: string, options?: Models.StorageCacheManagementClientOptions) {
    super(credentials, subscriptionId, options);
    this.operations = new operations.Operations(this);
    this.skus = new operations.Skus(this);
    this.usageModels = new operations.UsageModels(this);
    this.caches = new operations.Caches(this);
    this.storageTargets = new operations.StorageTargets(this);
  }
}

// Operation Specifications

export {
  StorageCacheManagementClient,
  StorageCacheManagementClientContext,
  Models as StorageCacheManagementModels,
  Mappers as StorageCacheManagementMappers
};
export * from "./operations";
