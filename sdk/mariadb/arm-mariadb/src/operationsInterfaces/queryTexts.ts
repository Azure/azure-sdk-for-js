/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  QueryText,
  QueryTextsListByServerOptionalParams,
  QueryTextsGetOptionalParams,
  QueryTextsGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a QueryTexts. */
export interface QueryTexts {
  /**
   * Retrieve the Query-Store query texts for specified queryIds.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param queryIds The query identifiers
   * @param options The options parameters.
   */
  listByServer(
    resourceGroupName: string,
    serverName: string,
    queryIds: string[],
    options?: QueryTextsListByServerOptionalParams
  ): PagedAsyncIterableIterator<QueryText>;
  /**
   * Retrieve the Query-Store query texts for the queryId.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param queryId The Query-Store query identifier.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serverName: string,
    queryId: string,
    options?: QueryTextsGetOptionalParams
  ): Promise<QueryTextsGetResponse>;
}
