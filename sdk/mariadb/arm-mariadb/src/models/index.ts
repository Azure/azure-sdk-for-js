/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export type ServerPropertiesForCreateUnion =
  | ServerPropertiesForCreate
  | ServerPropertiesForDefaultCreate
  | ServerPropertiesForRestore
  | ServerPropertiesForGeoRestore
  | ServerPropertiesForReplica;

/** Represents a server to be created. */
export interface ServerForCreate {
  /** The SKU (pricing tier) of the server. */
  sku?: Sku;
  /** Properties of the server. */
  properties: ServerPropertiesForCreateUnion;
  /** The location the resource resides in. */
  location: string;
  /** Application-specific metadata in the form of key-value pairs. */
  tags?: { [propertyName: string]: string };
}

/** Billing information related properties of a server. */
export interface Sku {
  /** The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8. */
  name: string;
  /** The tier of the particular SKU, e.g. Basic. */
  tier?: SkuTier;
  /** The scale up/out capacity, representing server's compute units. */
  capacity?: number;
  /** The size code, to be interpreted by resource as appropriate. */
  size?: string;
  /** The family of hardware. */
  family?: string;
}

/** The properties used to create a new server. */
export interface ServerPropertiesForCreate {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  createMode: "Default" | "PointInTimeRestore" | "GeoRestore" | "Replica";
  /** Server version. */
  version?: ServerVersion;
  /** Enable ssl enforcement or not when connect to server. */
  sslEnforcement?: SslEnforcementEnum;
  /** Enforce a minimal Tls version for the server. */
  minimalTlsVersion?: MinimalTlsVersionEnum;
  /** Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled' */
  publicNetworkAccess?: PublicNetworkAccessEnum;
  /** Storage profile of a server. */
  storageProfile?: StorageProfile;
}

/** Storage Profile properties of a server */
export interface StorageProfile {
  /** Backup retention days for the server. */
  backupRetentionDays?: number;
  /** Enable Geo-redundant or not for server backup. */
  geoRedundantBackup?: GeoRedundantBackup;
  /** Max storage allowed for a server. */
  storageMB?: number;
  /** Enable Storage Auto Grow. */
  storageAutogrow?: StorageAutogrow;
}

/** A private endpoint connection under a server */
export interface ServerPrivateEndpointConnection {
  /**
   * Resource Id of the private endpoint connection.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Private endpoint connection properties
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly properties?: ServerPrivateEndpointConnectionProperties;
}

/** Properties of a private endpoint connection. */
export interface ServerPrivateEndpointConnectionProperties {
  /** Private endpoint which the connection belongs to. */
  privateEndpoint?: PrivateEndpointProperty;
  /** Connection state of the private endpoint connection. */
  privateLinkServiceConnectionState?: ServerPrivateLinkServiceConnectionStateProperty;
  /**
   * State of the private endpoint connection.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: PrivateEndpointProvisioningState;
}

export interface PrivateEndpointProperty {
  /** Resource id of the private endpoint. */
  id?: string;
}

export interface ServerPrivateLinkServiceConnectionStateProperty {
  /** The private link service connection status. */
  status: PrivateLinkServiceConnectionStateStatus;
  /** The private link service connection description. */
  description: string;
  /**
   * The actions required for private link service connection.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionsRequired?: PrivateLinkServiceConnectionStateActionsRequire;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** An error response from the Batch service. */
export interface CloudError {
  /** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.) */
  error?: ErrorResponse;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.) */
export interface ErrorResponse {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorResponse[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** Parameters allowed to update for a server. */
export interface ServerUpdateParameters {
  /** The SKU (pricing tier) of the server. */
  sku?: Sku;
  /** Application-specific metadata in the form of key-value pairs. */
  tags?: { [propertyName: string]: string };
  /** Storage profile of a server. */
  storageProfile?: StorageProfile;
  /**
   * The password of the administrator login.
   * This value contains a credential. Consider obscuring before showing to users
   */
  administratorLoginPassword?: string;
  /** The version of a server. */
  version?: ServerVersion;
  /** Enable ssl enforcement or not when connect to server. */
  sslEnforcement?: SslEnforcementEnum;
  /** Enforce a minimal Tls version for the server. */
  minimalTlsVersion?: MinimalTlsVersionEnum;
  /** Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled' */
  publicNetworkAccess?: PublicNetworkAccessEnum;
  /** The replication role of the server. */
  replicationRole?: string;
}

/** A list of servers. */
export interface ServerListResult {
  /** The list of servers */
  value?: Server[];
}

/** A list of firewall rules. */
export interface FirewallRuleListResult {
  /** The list of firewall rules in a server. */
  value?: FirewallRule[];
}

/** A list of virtual network rules. */
export interface VirtualNetworkRuleListResult {
  /**
   * Array of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: VirtualNetworkRule[];
  /**
   * Link to retrieve next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** A List of databases. */
export interface DatabaseListResult {
  /** The list of databases housed in a server */
  value?: Database[];
}

/** A list of server configurations. */
export interface ConfigurationListResult {
  /** The list of server configurations. */
  value?: Configuration[];
}

/** A list of log files. */
export interface LogFileListResult {
  /** The list of log files. */
  value?: LogFile[];
}

/** A list of performance tiers. */
export interface PerformanceTierListResult {
  /** The list of performance tiers */
  value?: PerformanceTierProperties[];
}

/** Performance tier properties */
export interface PerformanceTierProperties {
  /** ID of the performance tier. */
  id?: string;
  /** Maximum Backup retention in days for the performance tier edition */
  maxBackupRetentionDays?: number;
  /** Minimum Backup retention in days for the performance tier edition */
  minBackupRetentionDays?: number;
  /** Max storage allowed for a server. */
  maxStorageMB?: number;
  /** Max storage allowed for a server. */
  minLargeStorageMB?: number;
  /** Max storage allowed for a server. */
  maxLargeStorageMB?: number;
  /** Max storage allowed for a server. */
  minStorageMB?: number;
  /** Service level objectives associated with the performance tier */
  serviceLevelObjectives?: PerformanceTierServiceLevelObjectives[];
}

/** Service level objectives for performance tier. */
export interface PerformanceTierServiceLevelObjectives {
  /** ID for the service level objective. */
  id?: string;
  /** Edition of the performance tier. */
  edition?: string;
  /** vCore associated with the service level objective */
  vCore?: number;
  /** Hardware generation associated with the service level objective */
  hardwareGeneration?: string;
  /** Maximum Backup retention in days for the performance tier edition */
  maxBackupRetentionDays?: number;
  /** Minimum Backup retention in days for the performance tier edition */
  minBackupRetentionDays?: number;
  /** Max storage allowed for a server. */
  maxStorageMB?: number;
  /** Max storage allowed for a server. */
  minStorageMB?: number;
}

/** Request from client to check resource name availability. */
export interface NameAvailabilityRequest {
  /** Resource name to verify. */
  name: string;
  /** Resource type used for verification. */
  type?: string;
}

/** Represents a resource name availability. */
export interface NameAvailability {
  /** Error Message. */
  message?: string;
  /** Indicates whether the resource name is available. */
  nameAvailable?: boolean;
  /** Reason for name being unavailable. */
  reason?: string;
}

/** A list of resource provider operations. */
export interface OperationListResult {
  /** The list of resource provider operations. */
  value?: Operation[];
}

/** REST API operation definition. */
export interface Operation {
  /**
   * The name of the operation being performed on this particular object.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The localized display information for this particular operation or action.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly display?: OperationDisplay;
  /**
   * The intended executor of the operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: OperationOrigin;
  /**
   * Additional descriptions for the operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly properties?: { [propertyName: string]: Record<string, unknown> };
}

/** Display metadata associated with the operation. */
export interface OperationDisplay {
  /**
   * Operation resource provider name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * Resource on which the operation is performed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * Localized friendly name for the operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * Operation description.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** A list of query texts. */
export interface QueryTextsResultList {
  /**
   * The list of query texts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: QueryText[];
  /**
   * Link to retrieve next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Input to get top query statistics */
export interface TopQueryStatisticsInput {
  /** Max number of top queries to return. */
  numberOfTopQueries: number;
  /** Aggregation function name. */
  aggregationFunction: string;
  /** Observed metric name. */
  observedMetric: string;
  /** Observation start time. */
  observationStartTime: Date;
  /** Observation end time. */
  observationEndTime: Date;
  /** Aggregation interval type in ISO 8601 format. */
  aggregationWindow: string;
}

/** A list of query statistics. */
export interface TopQueryStatisticsResultList {
  /**
   * The list of top query statistics.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: QueryStatistic[];
  /**
   * Link to retrieve next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Input to get wait statistics */
export interface WaitStatisticsInput {
  /** Observation start time. */
  observationStartTime: Date;
  /** Observation end time. */
  observationEndTime: Date;
  /** Aggregation interval type in ISO 8601 format. */
  aggregationWindow: string;
}

/** A list of wait statistics. */
export interface WaitStatisticsResultList {
  /**
   * The list of wait statistics.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: WaitStatistic[];
  /**
   * Link to retrieve next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Result of Query Performance Insight data reset. */
export interface QueryPerformanceInsightResetDataResult {
  /** Indicates result of the operation. */
  status?: QueryPerformanceInsightResetDataResultState;
  /** operation message. */
  message?: string;
}

/** A list of query statistics. */
export interface AdvisorsResultList {
  /**
   * The list of recommendation action advisors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Advisor[];
  /**
   * Link to retrieve next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** A list of recommendation actions. */
export interface RecommendationActionsResultList {
  /**
   * The list of recommendation action advisors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: RecommendationAction[];
  /**
   * Link to retrieve next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Recommendation action session operation status. */
export interface RecommendedActionSessionsOperationStatus {
  /** Operation identifier. */
  name?: string;
  /** Operation start time. */
  startTime?: Date;
  /** Operation status. */
  status?: string;
}

export interface PrivateLinkServiceConnectionStateProperty {
  /** The private link service connection status. */
  status: string;
  /** The private link service connection description. */
  description: string;
  /**
   * The actions required for private link service connection.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionsRequired?: string;
}

/** Tags object for patch operations. */
export interface TagsObject {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** A list of private endpoint connections. */
export interface PrivateEndpointConnectionListResult {
  /**
   * Array of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: PrivateEndpointConnection[];
  /**
   * Link to retrieve next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** A list of private link resources */
export interface PrivateLinkResourceListResult {
  /**
   * Array of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: PrivateLinkResource[];
  /**
   * Link to retrieve next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Properties of a private link resource. */
export interface PrivateLinkResourceProperties {
  /**
   * The private link resource group id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly groupId?: string;
  /**
   * The private link resource required member names.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly requiredMembers?: string[];
}

/** A list of the server's security alert policies. */
export interface ServerSecurityAlertPolicyListResult {
  /**
   * Array of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: ServerSecurityAlertPolicy[];
  /**
   * Link to retrieve next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** An error response from the Batch service. */
export interface CloudErrorAutoGenerated {
  /** Error message */
  error?: ErrorResponse;
}

/** The properties used to create a new server. */
export type ServerPropertiesForDefaultCreate = ServerPropertiesForCreate & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  createMode: "Default";
  /** The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation). */
  administratorLogin: string;
  /**
   * The password of the administrator login.
   * This value contains a credential. Consider obscuring before showing to users
   */
  administratorLoginPassword: string;
};

/** The properties used to create a new server by restoring from a backup. */
export type ServerPropertiesForRestore = ServerPropertiesForCreate & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  createMode: "PointInTimeRestore";
  /** The source server id to restore from. */
  sourceServerId: string;
  /** Restore point creation time (ISO8601 format), specifying the time to restore from. */
  restorePointInTime: Date;
};

/** The properties used to create a new server by restoring to a different region from a geo replicated backup. */
export type ServerPropertiesForGeoRestore = ServerPropertiesForCreate & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  createMode: "GeoRestore";
  /** The source server id to restore from. */
  sourceServerId: string;
};

/** The properties to create a new replica. */
export type ServerPropertiesForReplica = ServerPropertiesForCreate & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  createMode: "Replica";
  /** The master server id to create replica from. */
  sourceServerId: string;
};

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export type TrackedResource = Resource & {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
};

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export type ProxyResource = Resource & {};

/** Represents a server. */
export type Server = TrackedResource & {
  /** The SKU (pricing tier) of the server. */
  sku?: Sku;
  /** The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation). */
  administratorLogin?: string;
  /** Server version. */
  version?: ServerVersion;
  /** Enable ssl enforcement or not when connect to server. */
  sslEnforcement?: SslEnforcementEnum;
  /** Enforce a minimal Tls version for the server. */
  minimalTlsVersion?: MinimalTlsVersionEnum;
  /** A state of a server that is visible to user. */
  userVisibleState?: ServerState;
  /** The fully qualified domain name of a server. */
  fullyQualifiedDomainName?: string;
  /** Earliest restore point creation time (ISO8601 format) */
  earliestRestoreDate?: Date;
  /** Storage profile of a server. */
  storageProfile?: StorageProfile;
  /** The replication role of the server. */
  replicationRole?: string;
  /** The master server id of a replica server. */
  masterServerId?: string;
  /** The maximum number of replicas that a master server can have. */
  replicaCapacity?: number;
  /** Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled' */
  publicNetworkAccess?: PublicNetworkAccessEnum;
  /**
   * List of private endpoint connections on a server
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateEndpointConnections?: ServerPrivateEndpointConnection[];
};

/** Represents a server firewall rule. */
export type FirewallRule = ProxyResource & {
  /** The start IP address of the server firewall rule. Must be IPv4 format. */
  startIpAddress: string;
  /** The end IP address of the server firewall rule. Must be IPv4 format. */
  endIpAddress: string;
};

/** A virtual network rule. */
export type VirtualNetworkRule = ProxyResource & {
  /** The ARM resource id of the virtual network subnet. */
  virtualNetworkSubnetId?: string;
  /** Create firewall rule before the virtual network has vnet service endpoint enabled. */
  ignoreMissingVnetServiceEndpoint?: boolean;
  /**
   * Virtual Network Rule State
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly state?: VirtualNetworkRuleState;
};

/** Represents a Database. */
export type Database = ProxyResource & {
  /** The charset of the database. */
  charset?: string;
  /** The collation of the database. */
  collation?: string;
};

/** Represents a Configuration. */
export type Configuration = ProxyResource & {
  /** Value of the configuration. */
  value?: string;
  /**
   * Description of the configuration.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
  /**
   * Default value of the configuration.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly defaultValue?: string;
  /**
   * Data type of the configuration.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dataType?: string;
  /**
   * Allowed values of the configuration.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly allowedValues?: string;
  /** Source of the configuration. */
  source?: string;
};

/** Represents a log file. */
export type LogFile = ProxyResource & {
  /** Size of the log file. */
  sizeInKB?: number;
  /**
   * Creation timestamp of the log file.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdTime?: Date;
  /**
   * Last modified timestamp of the log file.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastModifiedTime?: Date;
  /** Type of the log file. */
  typePropertiesType?: string;
  /**
   * The url to download the log file from.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly url?: string;
};

/** A recoverable server resource. */
export type RecoverableServerResource = ProxyResource & {
  /**
   * The last available backup date time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastAvailableBackupDateTime?: string;
  /**
   * The service level objective
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serviceLevelObjective?: string;
  /**
   * Edition of the performance tier.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly edition?: string;
  /**
   * vCore associated with the service level objective
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vCore?: number;
  /**
   * Hardware generation associated with the service level objective
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hardwareGeneration?: string;
  /**
   * The MariaDB version
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly version?: string;
};

/** Represents a Query Text. */
export type QueryText = ProxyResource & {
  /** Query identifier unique to the server. */
  queryId?: string;
  /** Query text. */
  queryText?: string;
};

/** Represents a Query Statistic. */
export type QueryStatistic = ProxyResource & {
  /** Database query identifier. */
  queryId?: string;
  /** Observation start time. */
  startTime?: Date;
  /** Observation end time. */
  endTime?: Date;
  /** Aggregation function name. */
  aggregationFunction?: string;
  /** The list of database names. */
  databaseNames?: string[];
  /** Number of query executions in this time interval. */
  queryExecutionCount?: number;
  /** Metric name. */
  metricName?: string;
  /** Metric display name. */
  metricDisplayName?: string;
  /** Metric value. */
  metricValue?: number;
  /** Metric value unit. */
  metricValueUnit?: string;
};

/** Represents a Wait Statistic. */
export type WaitStatistic = ProxyResource & {
  /** Observation start time. */
  startTime?: Date;
  /** Observation end time. */
  endTime?: Date;
  /** Wait event name. */
  eventName?: string;
  /** Wait event type name. */
  eventTypeName?: string;
  /** Database query identifier. */
  queryId?: number;
  /** Database Name. */
  databaseName?: string;
  /** Database user identifier. */
  userId?: number;
  /** Wait event count observed in this time interval. */
  count?: number;
  /** Total time of wait in milliseconds in this time interval. */
  totalTimeInMs?: number;
};

/** Represents a recommendation action advisor. */
export type Advisor = ProxyResource & {
  /** The properties of a recommendation action advisor. */
  properties?: Record<string, unknown>;
};

/** Represents a Recommendation Action. */
export type RecommendationAction = ProxyResource & {
  /** Advisor name. */
  advisorName?: string;
  /** Recommendation action session identifier. */
  sessionId?: string;
  /** Recommendation action identifier. */
  actionId?: number;
  /** Recommendation action creation time. */
  createdTime?: Date;
  /** Recommendation action expiration time. */
  expirationTime?: Date;
  /** Recommendation action reason. */
  reason?: string;
  /** Recommendation action type. */
  recommendationType?: string;
  /** Recommendation action details. */
  details?: { [propertyName: string]: string };
};

/** A private endpoint connection */
export type PrivateEndpointConnection = ProxyResource & {
  /** Private endpoint which the connection belongs to. */
  privateEndpoint?: PrivateEndpointProperty;
  /** Connection state of the private endpoint connection. */
  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionStateProperty;
  /**
   * State of the private endpoint connection.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
};

/** A private link resource */
export type PrivateLinkResource = ProxyResource & {
  /**
   * The private link resource group id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly properties?: PrivateLinkResourceProperties;
};

/** A server security alert policy. */
export type ServerSecurityAlertPolicy = ProxyResource & {
  /** Specifies the state of the policy, whether it is enabled or disabled. */
  state?: ServerSecurityAlertPolicyState;
  /** Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly */
  disabledAlerts?: string[];
  /** Specifies an array of e-mail addresses to which the alert is sent. */
  emailAddresses?: string[];
  /** Specifies that the alert is sent to the account administrators. */
  emailAccountAdmins?: boolean;
  /** Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs. */
  storageEndpoint?: string;
  /** Specifies the identifier key of the Threat Detection audit storage account. */
  storageAccountAccessKey?: string;
  /** Specifies the number of days to keep in the Threat Detection audit logs. */
  retentionDays?: number;
};

/** Known values of {@link SkuTier} that the service accepts. */
export enum KnownSkuTier {
  Basic = "Basic",
  GeneralPurpose = "GeneralPurpose",
  MemoryOptimized = "MemoryOptimized"
}

/**
 * Defines values for SkuTier. \
 * {@link KnownSkuTier} can be used interchangeably with SkuTier,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Basic** \
 * **GeneralPurpose** \
 * **MemoryOptimized**
 */
export type SkuTier = string;

/** Known values of {@link ServerVersion} that the service accepts. */
export enum KnownServerVersion {
  Ten2 = "10.2",
  Ten3 = "10.3"
}

/**
 * Defines values for ServerVersion. \
 * {@link KnownServerVersion} can be used interchangeably with ServerVersion,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **10.2** \
 * **10.3**
 */
export type ServerVersion = string;

/** Known values of {@link MinimalTlsVersionEnum} that the service accepts. */
export enum KnownMinimalTlsVersionEnum {
  TLS10 = "TLS1_0",
  TLS11 = "TLS1_1",
  TLS12 = "TLS1_2",
  TLSEnforcementDisabled = "TLSEnforcementDisabled"
}

/**
 * Defines values for MinimalTlsVersionEnum. \
 * {@link KnownMinimalTlsVersionEnum} can be used interchangeably with MinimalTlsVersionEnum,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **TLS1_0** \
 * **TLS1_1** \
 * **TLS1_2** \
 * **TLSEnforcementDisabled**
 */
export type MinimalTlsVersionEnum = string;

/** Known values of {@link PublicNetworkAccessEnum} that the service accepts. */
export enum KnownPublicNetworkAccessEnum {
  Enabled = "Enabled",
  Disabled = "Disabled"
}

/**
 * Defines values for PublicNetworkAccessEnum. \
 * {@link KnownPublicNetworkAccessEnum} can be used interchangeably with PublicNetworkAccessEnum,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export type PublicNetworkAccessEnum = string;

/** Known values of {@link GeoRedundantBackup} that the service accepts. */
export enum KnownGeoRedundantBackup {
  Enabled = "Enabled",
  Disabled = "Disabled"
}

/**
 * Defines values for GeoRedundantBackup. \
 * {@link KnownGeoRedundantBackup} can be used interchangeably with GeoRedundantBackup,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export type GeoRedundantBackup = string;

/** Known values of {@link StorageAutogrow} that the service accepts. */
export enum KnownStorageAutogrow {
  Enabled = "Enabled",
  Disabled = "Disabled"
}

/**
 * Defines values for StorageAutogrow. \
 * {@link KnownStorageAutogrow} can be used interchangeably with StorageAutogrow,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export type StorageAutogrow = string;

/** Known values of {@link CreateMode} that the service accepts. */
export enum KnownCreateMode {
  Default = "Default",
  PointInTimeRestore = "PointInTimeRestore",
  GeoRestore = "GeoRestore",
  Replica = "Replica"
}

/**
 * Defines values for CreateMode. \
 * {@link KnownCreateMode} can be used interchangeably with CreateMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Default** \
 * **PointInTimeRestore** \
 * **GeoRestore** \
 * **Replica**
 */
export type CreateMode = string;

/** Known values of {@link ServerState} that the service accepts. */
export enum KnownServerState {
  Ready = "Ready",
  Dropping = "Dropping",
  Disabled = "Disabled"
}

/**
 * Defines values for ServerState. \
 * {@link KnownServerState} can be used interchangeably with ServerState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Ready** \
 * **Dropping** \
 * **Disabled**
 */
export type ServerState = string;

/** Known values of {@link PrivateLinkServiceConnectionStateStatus} that the service accepts. */
export enum KnownPrivateLinkServiceConnectionStateStatus {
  Approved = "Approved",
  Pending = "Pending",
  Rejected = "Rejected",
  Disconnected = "Disconnected"
}

/**
 * Defines values for PrivateLinkServiceConnectionStateStatus. \
 * {@link KnownPrivateLinkServiceConnectionStateStatus} can be used interchangeably with PrivateLinkServiceConnectionStateStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Approved** \
 * **Pending** \
 * **Rejected** \
 * **Disconnected**
 */
export type PrivateLinkServiceConnectionStateStatus = string;

/** Known values of {@link PrivateLinkServiceConnectionStateActionsRequire} that the service accepts. */
export enum KnownPrivateLinkServiceConnectionStateActionsRequire {
  None = "None"
}

/**
 * Defines values for PrivateLinkServiceConnectionStateActionsRequire. \
 * {@link KnownPrivateLinkServiceConnectionStateActionsRequire} can be used interchangeably with PrivateLinkServiceConnectionStateActionsRequire,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None**
 */
export type PrivateLinkServiceConnectionStateActionsRequire = string;

/** Known values of {@link PrivateEndpointProvisioningState} that the service accepts. */
export enum KnownPrivateEndpointProvisioningState {
  Approving = "Approving",
  Ready = "Ready",
  Dropping = "Dropping",
  Failed = "Failed",
  Rejecting = "Rejecting"
}

/**
 * Defines values for PrivateEndpointProvisioningState. \
 * {@link KnownPrivateEndpointProvisioningState} can be used interchangeably with PrivateEndpointProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Approving** \
 * **Ready** \
 * **Dropping** \
 * **Failed** \
 * **Rejecting**
 */
export type PrivateEndpointProvisioningState = string;

/** Known values of {@link VirtualNetworkRuleState} that the service accepts. */
export enum KnownVirtualNetworkRuleState {
  Initializing = "Initializing",
  InProgress = "InProgress",
  Ready = "Ready",
  Deleting = "Deleting",
  Unknown = "Unknown"
}

/**
 * Defines values for VirtualNetworkRuleState. \
 * {@link KnownVirtualNetworkRuleState} can be used interchangeably with VirtualNetworkRuleState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Initializing** \
 * **InProgress** \
 * **Ready** \
 * **Deleting** \
 * **Unknown**
 */
export type VirtualNetworkRuleState = string;

/** Known values of {@link OperationOrigin} that the service accepts. */
export enum KnownOperationOrigin {
  NotSpecified = "NotSpecified",
  User = "user",
  System = "system"
}

/**
 * Defines values for OperationOrigin. \
 * {@link KnownOperationOrigin} can be used interchangeably with OperationOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotSpecified** \
 * **user** \
 * **system**
 */
export type OperationOrigin = string;

/** Known values of {@link QueryPerformanceInsightResetDataResultState} that the service accepts. */
export enum KnownQueryPerformanceInsightResetDataResultState {
  Succeeded = "Succeeded",
  Failed = "Failed"
}

/**
 * Defines values for QueryPerformanceInsightResetDataResultState. \
 * {@link KnownQueryPerformanceInsightResetDataResultState} can be used interchangeably with QueryPerformanceInsightResetDataResultState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Failed**
 */
export type QueryPerformanceInsightResetDataResultState = string;

/** Known values of {@link SecurityAlertPolicyName} that the service accepts. */
export enum KnownSecurityAlertPolicyName {
  Default = "Default"
}

/**
 * Defines values for SecurityAlertPolicyName. \
 * {@link KnownSecurityAlertPolicyName} can be used interchangeably with SecurityAlertPolicyName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Default**
 */
export type SecurityAlertPolicyName = string;
/** Defines values for SslEnforcementEnum. */
export type SslEnforcementEnum = "Enabled" | "Disabled";
/** Defines values for ServerSecurityAlertPolicyState. */
export type ServerSecurityAlertPolicyState = "Enabled" | "Disabled";

/** Optional parameters. */
export interface ServersCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ServersCreateResponse = Server;

/** Optional parameters. */
export interface ServersUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type ServersUpdateResponse = Server;

/** Optional parameters. */
export interface ServersDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ServersGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ServersGetResponse = Server;

/** Optional parameters. */
export interface ServersListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type ServersListByResourceGroupResponse = ServerListResult;

/** Optional parameters. */
export interface ServersListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ServersListResponse = ServerListResult;

/** Optional parameters. */
export interface ServersRestartOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ServersStartOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ServersStopOptionalParams extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ReplicasListByServerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByServer operation. */
export type ReplicasListByServerResponse = ServerListResult;

/** Optional parameters. */
export interface FirewallRulesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type FirewallRulesCreateOrUpdateResponse = FirewallRule;

/** Optional parameters. */
export interface FirewallRulesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface FirewallRulesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type FirewallRulesGetResponse = FirewallRule;

/** Optional parameters. */
export interface FirewallRulesListByServerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByServer operation. */
export type FirewallRulesListByServerResponse = FirewallRuleListResult;

/** Optional parameters. */
export interface VirtualNetworkRulesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type VirtualNetworkRulesGetResponse = VirtualNetworkRule;

/** Optional parameters. */
export interface VirtualNetworkRulesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type VirtualNetworkRulesCreateOrUpdateResponse = VirtualNetworkRule;

/** Optional parameters. */
export interface VirtualNetworkRulesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface VirtualNetworkRulesListByServerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByServer operation. */
export type VirtualNetworkRulesListByServerResponse = VirtualNetworkRuleListResult;

/** Optional parameters. */
export interface VirtualNetworkRulesListByServerNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByServerNext operation. */
export type VirtualNetworkRulesListByServerNextResponse = VirtualNetworkRuleListResult;

/** Optional parameters. */
export interface DatabasesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type DatabasesCreateOrUpdateResponse = Database;

/** Optional parameters. */
export interface DatabasesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface DatabasesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DatabasesGetResponse = Database;

/** Optional parameters. */
export interface DatabasesListByServerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByServer operation. */
export type DatabasesListByServerResponse = DatabaseListResult;

/** Optional parameters. */
export interface ConfigurationsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ConfigurationsCreateOrUpdateResponse = Configuration;

/** Optional parameters. */
export interface ConfigurationsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ConfigurationsGetResponse = Configuration;

/** Optional parameters. */
export interface ConfigurationsListByServerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByServer operation. */
export type ConfigurationsListByServerResponse = ConfigurationListResult;

/** Optional parameters. */
export interface ServerParametersListUpdateConfigurationsOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the listUpdateConfigurations operation. */
export type ServerParametersListUpdateConfigurationsResponse = ConfigurationListResult;

/** Optional parameters. */
export interface LogFilesListByServerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByServer operation. */
export type LogFilesListByServerResponse = LogFileListResult;

/** Optional parameters. */
export interface RecoverableServersGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type RecoverableServersGetResponse = RecoverableServerResource;

/** Optional parameters. */
export interface ServerBasedPerformanceTierListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ServerBasedPerformanceTierListResponse = PerformanceTierListResult;

/** Optional parameters. */
export interface LocationBasedPerformanceTierListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type LocationBasedPerformanceTierListResponse = PerformanceTierListResult;

/** Optional parameters. */
export interface CheckNameAvailabilityExecuteOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the execute operation. */
export type CheckNameAvailabilityExecuteResponse = NameAvailability;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface QueryTextsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type QueryTextsGetResponse = QueryText;

/** Optional parameters. */
export interface QueryTextsListByServerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByServer operation. */
export type QueryTextsListByServerResponse = QueryTextsResultList;

/** Optional parameters. */
export interface QueryTextsListByServerNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByServerNext operation. */
export type QueryTextsListByServerNextResponse = QueryTextsResultList;

/** Optional parameters. */
export interface TopQueryStatisticsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type TopQueryStatisticsGetResponse = QueryStatistic;

/** Optional parameters. */
export interface TopQueryStatisticsListByServerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByServer operation. */
export type TopQueryStatisticsListByServerResponse = TopQueryStatisticsResultList;

/** Optional parameters. */
export interface TopQueryStatisticsListByServerNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByServerNext operation. */
export type TopQueryStatisticsListByServerNextResponse = TopQueryStatisticsResultList;

/** Optional parameters. */
export interface WaitStatisticsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type WaitStatisticsGetResponse = WaitStatistic;

/** Optional parameters. */
export interface WaitStatisticsListByServerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByServer operation. */
export type WaitStatisticsListByServerResponse = WaitStatisticsResultList;

/** Optional parameters. */
export interface WaitStatisticsListByServerNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByServerNext operation. */
export type WaitStatisticsListByServerNextResponse = WaitStatisticsResultList;

/** Optional parameters. */
export interface ResetQueryPerformanceInsightDataOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the resetQueryPerformanceInsightData operation. */
export type ResetQueryPerformanceInsightDataResponse = QueryPerformanceInsightResetDataResult;

/** Optional parameters. */
export interface CreateRecommendedActionSessionOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface AdvisorsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AdvisorsGetResponse = Advisor;

/** Optional parameters. */
export interface AdvisorsListByServerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByServer operation. */
export type AdvisorsListByServerResponse = AdvisorsResultList;

/** Optional parameters. */
export interface AdvisorsListByServerNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByServerNext operation. */
export type AdvisorsListByServerNextResponse = AdvisorsResultList;

/** Optional parameters. */
export interface RecommendedActionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type RecommendedActionsGetResponse = RecommendationAction;

/** Optional parameters. */
export interface RecommendedActionsListByServerOptionalParams
  extends coreClient.OperationOptions {
  /** The recommendation action session identifier. */
  sessionId?: string;
}

/** Contains response data for the listByServer operation. */
export type RecommendedActionsListByServerResponse = RecommendationActionsResultList;

/** Optional parameters. */
export interface RecommendedActionsListByServerNextOptionalParams
  extends coreClient.OperationOptions {
  /** The recommendation action session identifier. */
  sessionId?: string;
}

/** Contains response data for the listByServerNext operation. */
export type RecommendedActionsListByServerNextResponse = RecommendationActionsResultList;

/** Optional parameters. */
export interface LocationBasedRecommendedActionSessionsOperationStatusGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type LocationBasedRecommendedActionSessionsOperationStatusGetResponse = RecommendedActionSessionsOperationStatus;

/** Optional parameters. */
export interface LocationBasedRecommendedActionSessionsResultListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type LocationBasedRecommendedActionSessionsResultListResponse = RecommendationActionsResultList;

/** Optional parameters. */
export interface LocationBasedRecommendedActionSessionsResultListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type LocationBasedRecommendedActionSessionsResultListNextResponse = RecommendationActionsResultList;

/** Optional parameters. */
export interface PrivateEndpointConnectionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;

/** Optional parameters. */
export interface PrivateEndpointConnectionsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type PrivateEndpointConnectionsCreateOrUpdateResponse = PrivateEndpointConnection;

/** Optional parameters. */
export interface PrivateEndpointConnectionsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface PrivateEndpointConnectionsUpdateTagsOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the updateTags operation. */
export type PrivateEndpointConnectionsUpdateTagsResponse = PrivateEndpointConnection;

/** Optional parameters. */
export interface PrivateEndpointConnectionsListByServerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByServer operation. */
export type PrivateEndpointConnectionsListByServerResponse = PrivateEndpointConnectionListResult;

/** Optional parameters. */
export interface PrivateEndpointConnectionsListByServerNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByServerNext operation. */
export type PrivateEndpointConnectionsListByServerNextResponse = PrivateEndpointConnectionListResult;

/** Optional parameters. */
export interface PrivateLinkResourcesListByServerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByServer operation. */
export type PrivateLinkResourcesListByServerResponse = PrivateLinkResourceListResult;

/** Optional parameters. */
export interface PrivateLinkResourcesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PrivateLinkResourcesGetResponse = PrivateLinkResource;

/** Optional parameters. */
export interface PrivateLinkResourcesListByServerNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByServerNext operation. */
export type PrivateLinkResourcesListByServerNextResponse = PrivateLinkResourceListResult;

/** Optional parameters. */
export interface ServerSecurityAlertPoliciesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ServerSecurityAlertPoliciesGetResponse = ServerSecurityAlertPolicy;

/** Optional parameters. */
export interface ServerSecurityAlertPoliciesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ServerSecurityAlertPoliciesCreateOrUpdateResponse = ServerSecurityAlertPolicy;

/** Optional parameters. */
export interface ServerSecurityAlertPoliciesListByServerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByServer operation. */
export type ServerSecurityAlertPoliciesListByServerResponse = ServerSecurityAlertPolicyListResult;

/** Optional parameters. */
export interface ServerSecurityAlertPoliciesListByServerNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByServerNext operation. */
export type ServerSecurityAlertPoliciesListByServerNextResponse = ServerSecurityAlertPolicyListResult;

/** Optional parameters. */
export interface MariaDBManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
