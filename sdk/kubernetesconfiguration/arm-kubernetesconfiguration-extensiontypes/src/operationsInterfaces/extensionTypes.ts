/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ExtensionType,
  ExtensionTypesLocationListOptionalParams,
  ExtensionTypeVersionForReleaseTrain,
  ExtensionTypesListVersionsOptionalParams,
  ExtensionTypesListOptionalParams,
  ExtensionTypesClusterListVersionsOptionalParams,
  ExtensionTypesLocationGetOptionalParams,
  ExtensionTypesLocationGetResponse,
  ExtensionTypesGetVersionOptionalParams,
  ExtensionTypesGetVersionResponse,
  ExtensionTypesGetOptionalParams,
  ExtensionTypesGetResponse,
  ExtensionTypesClusterGetVersionOptionalParams,
  ExtensionTypesClusterGetVersionResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ExtensionTypes. */
export interface ExtensionTypes {
  /**
   * List all Extension Types for the location.
   * @param location The name of Azure region.
   * @param options The options parameters.
   */
  listLocationList(
    location: string,
    options?: ExtensionTypesLocationListOptionalParams,
  ): PagedAsyncIterableIterator<ExtensionType>;
  /**
   * List the versions for an extension type and location.
   * @param location The name of Azure region.
   * @param extensionTypeName Name of the Extension Type.
   * @param options The options parameters.
   */
  listVersions(
    location: string,
    extensionTypeName: string,
    options?: ExtensionTypesListVersionsOptionalParams,
  ): PagedAsyncIterableIterator<ExtensionTypeVersionForReleaseTrain>;
  /**
   * List installable Extension Types for the cluster based region and type for the cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterRp The Kubernetes cluster RP - i.e. Microsoft.ContainerService, Microsoft.Kubernetes,
   *                  Microsoft.HybridContainerService.
   * @param clusterResourceName The Kubernetes cluster resource name - i.e. managedClusters,
   *                            connectedClusters, provisionedClusters, appliances.
   * @param clusterName The name of the kubernetes cluster.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    clusterRp: string,
    clusterResourceName: string,
    clusterName: string,
    options?: ExtensionTypesListOptionalParams,
  ): PagedAsyncIterableIterator<ExtensionType>;
  /**
   * List the version for an Extension Type installable to the cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterRp The Kubernetes cluster RP - i.e. Microsoft.ContainerService, Microsoft.Kubernetes,
   *                  Microsoft.HybridContainerService.
   * @param clusterResourceName The Kubernetes cluster resource name - i.e. managedClusters,
   *                            connectedClusters, provisionedClusters, appliances.
   * @param clusterName The name of the kubernetes cluster.
   * @param extensionTypeName Name of the Extension Type.
   * @param options The options parameters.
   */
  listClusterListVersions(
    resourceGroupName: string,
    clusterRp: string,
    clusterResourceName: string,
    clusterName: string,
    extensionTypeName: string,
    options?: ExtensionTypesClusterListVersionsOptionalParams,
  ): PagedAsyncIterableIterator<ExtensionTypeVersionForReleaseTrain>;
  /**
   * Get an extension type for the location.
   * @param location The name of Azure region.
   * @param extensionTypeName Name of the Extension Type.
   * @param options The options parameters.
   */
  locationGet(
    location: string,
    extensionTypeName: string,
    options?: ExtensionTypesLocationGetOptionalParams,
  ): Promise<ExtensionTypesLocationGetResponse>;
  /**
   * Get details of a version for an extension type and location
   * @param location The name of Azure region.
   * @param extensionTypeName Name of the Extension Type.
   * @param versionNumber Version number of the Extension Type.
   * @param options The options parameters.
   */
  getVersion(
    location: string,
    extensionTypeName: string,
    versionNumber: string,
    options?: ExtensionTypesGetVersionOptionalParams,
  ): Promise<ExtensionTypesGetVersionResponse>;
  /**
   * Get an Extension Type installable to the cluster based region and type for the cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterRp The Kubernetes cluster RP - i.e. Microsoft.ContainerService, Microsoft.Kubernetes,
   *                  Microsoft.HybridContainerService.
   * @param clusterResourceName The Kubernetes cluster resource name - i.e. managedClusters,
   *                            connectedClusters, provisionedClusters, appliances.
   * @param clusterName The name of the kubernetes cluster.
   * @param extensionTypeName Name of the Extension Type.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    clusterRp: string,
    clusterResourceName: string,
    clusterName: string,
    extensionTypeName: string,
    options?: ExtensionTypesGetOptionalParams,
  ): Promise<ExtensionTypesGetResponse>;
  /**
   * Get details of a version for an Extension Type installable to the cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterRp The Kubernetes cluster RP - i.e. Microsoft.ContainerService, Microsoft.Kubernetes,
   *                  Microsoft.HybridContainerService.
   * @param clusterResourceName The Kubernetes cluster resource name - i.e. managedClusters,
   *                            connectedClusters, provisionedClusters, appliances.
   * @param clusterName The name of the kubernetes cluster.
   * @param extensionTypeName Name of the Extension Type.
   * @param versionNumber Version number of the Extension Type.
   * @param options The options parameters.
   */
  clusterGetVersion(
    resourceGroupName: string,
    clusterRp: string,
    clusterResourceName: string,
    clusterName: string,
    extensionTypeName: string,
    versionNumber: string,
    options?: ExtensionTypesClusterGetVersionOptionalParams,
  ): Promise<ExtensionTypesClusterGetVersionResponse>;
}
