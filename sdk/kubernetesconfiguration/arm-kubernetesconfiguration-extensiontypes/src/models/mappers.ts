/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const ExtensionTypesList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExtensionTypesList",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExtensionType",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ExtensionTypeProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExtensionTypeProperties",
    modelProperties: {
      isSystemExtension: {
        serializedName: "isSystemExtension",
        type: {
          name: "Boolean",
        },
      },
      isManagedIdentityRequired: {
        serializedName: "isManagedIdentityRequired",
        type: {
          name: "Boolean",
        },
      },
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
      publisher: {
        serializedName: "publisher",
        type: {
          name: "String",
        },
      },
      planInfo: {
        serializedName: "planInfo",
        type: {
          name: "Composite",
          className: "ExtensionTypePropertiesPlanInfo",
        },
      },
      supportedClusterTypes: {
        serializedName: "supportedClusterTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      supportedScopes: {
        serializedName: "supportedScopes",
        type: {
          name: "Composite",
          className: "ExtensionTypePropertiesSupportedScopes",
        },
      },
    },
  },
};

export const ExtensionTypePropertiesPlanInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExtensionTypePropertiesPlanInfo",
    modelProperties: {
      publisherId: {
        serializedName: "publisherId",
        type: {
          name: "String",
        },
      },
      planId: {
        serializedName: "planId",
        type: {
          name: "String",
        },
      },
      offerId: {
        serializedName: "offerId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ExtensionTypePropertiesSupportedScopes: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExtensionTypePropertiesSupportedScopes",
    modelProperties: {
      defaultScope: {
        serializedName: "defaultScope",
        type: {
          name: "String",
        },
      },
      clusterScopeSettings: {
        serializedName: "clusterScopeSettings",
        type: {
          name: "Composite",
          className: "ClusterScopeSettings",
        },
      },
    },
  },
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const ExtensionTypeVersionsList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExtensionTypeVersionsList",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExtensionTypeVersionForReleaseTrain",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ExtensionTypeVersionForReleaseTrainProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExtensionTypeVersionForReleaseTrainProperties",
    modelProperties: {
      version: {
        serializedName: "version",
        type: {
          name: "String",
        },
      },
      unsupportedKubernetesVersions: {
        serializedName: "unsupportedKubernetesVersions",
        type: {
          name: "Composite",
          className: "ExtensionTypeVersionForReleaseTrainPropertiesUnsupportedKubernetesVersions",
        },
      },
      supportedClusterTypes: {
        serializedName: "supportedClusterTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const ExtensionTypeVersionForReleaseTrainPropertiesUnsupportedKubernetesVersions: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "ExtensionTypeVersionForReleaseTrainPropertiesUnsupportedKubernetesVersions",
      modelProperties: {
        connectedCluster: {
          serializedName: "connectedCluster",
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "ExtensionTypeVersionUnsupportedKubernetesMatrixItem",
              },
            },
          },
        },
        appliances: {
          serializedName: "appliances",
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "ExtensionTypeVersionUnsupportedKubernetesMatrixItem",
              },
            },
          },
        },
        provisionedCluster: {
          serializedName: "provisionedCluster",
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "ExtensionTypeVersionUnsupportedKubernetesMatrixItem",
              },
            },
          },
        },
        managedCluster: {
          serializedName: "managedCluster",
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "ExtensionTypeVersionUnsupportedKubernetesMatrixItem",
              },
            },
          },
        },
      },
    },
  };

export const ExtensionTypeVersionUnsupportedKubernetesMatrixItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExtensionTypeVersionUnsupportedKubernetesMatrixItem",
    modelProperties: {
      distributions: {
        serializedName: "distributions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      unsupportedVersions: {
        serializedName: "unsupportedVersions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties,
    },
  },
};

export const ClusterScopeSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ClusterScopeSettings",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      allowMultipleInstances: {
        serializedName: "properties.allowMultipleInstances",
        type: {
          name: "Boolean",
        },
      },
      defaultReleaseNamespace: {
        serializedName: "properties.defaultReleaseNamespace",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ExtensionType: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExtensionType",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ExtensionTypeProperties",
        },
      },
    },
  },
};

export const ExtensionTypeVersionForReleaseTrain: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExtensionTypeVersionForReleaseTrain",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ExtensionTypeVersionForReleaseTrainProperties",
        },
      },
    },
  },
};
