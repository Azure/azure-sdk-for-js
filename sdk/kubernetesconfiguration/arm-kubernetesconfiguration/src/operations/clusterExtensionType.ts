/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/clusterExtensionTypeMappers";
import * as Parameters from "../models/parameters";
import { SourceControlConfigurationClientContext } from "../sourceControlConfigurationClientContext";

/** Class representing a ClusterExtensionType. */
export class ClusterExtensionType {
  private readonly client: SourceControlConfigurationClientContext;

  /**
   * Create a ClusterExtensionType.
   * @param {SourceControlConfigurationClientContext} client Reference to the service client.
   */
  constructor(client: SourceControlConfigurationClientContext) {
    this.client = client;
  }

  /**
   * Get Extension Type details
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterRp The Kubernetes cluster RP - either Microsoft.ContainerService (for AKS
   * clusters) or Microsoft.Kubernetes (for OnPrem K8S clusters). Possible values include:
   * 'Microsoft.ContainerService', 'Microsoft.Kubernetes'
   * @param clusterResourceName The Kubernetes cluster resource name - either managedClusters (for
   * AKS clusters) or connectedClusters (for OnPrem K8S clusters). Possible values include:
   * 'managedClusters', 'connectedClusters'
   * @param clusterName The name of the kubernetes cluster.
   * @param extensionTypeName Extension type name
   * @param [options] The optional parameters
   * @returns Promise<Models.ClusterExtensionTypeGetResponse>
   */
  get(resourceGroupName: string, clusterRp: Models.ClusterRp, clusterResourceName: Models.ClusterResourceName, clusterName: string, extensionTypeName: string, options?: msRest.RequestOptionsBase): Promise<Models.ClusterExtensionTypeGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterRp The Kubernetes cluster RP - either Microsoft.ContainerService (for AKS
   * clusters) or Microsoft.Kubernetes (for OnPrem K8S clusters). Possible values include:
   * 'Microsoft.ContainerService', 'Microsoft.Kubernetes'
   * @param clusterResourceName The Kubernetes cluster resource name - either managedClusters (for
   * AKS clusters) or connectedClusters (for OnPrem K8S clusters). Possible values include:
   * 'managedClusters', 'connectedClusters'
   * @param clusterName The name of the kubernetes cluster.
   * @param extensionTypeName Extension type name
   * @param callback The callback
   */
  get(resourceGroupName: string, clusterRp: Models.ClusterRp, clusterResourceName: Models.ClusterResourceName, clusterName: string, extensionTypeName: string, callback: msRest.ServiceCallback<Models.ExtensionType>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterRp The Kubernetes cluster RP - either Microsoft.ContainerService (for AKS
   * clusters) or Microsoft.Kubernetes (for OnPrem K8S clusters). Possible values include:
   * 'Microsoft.ContainerService', 'Microsoft.Kubernetes'
   * @param clusterResourceName The Kubernetes cluster resource name - either managedClusters (for
   * AKS clusters) or connectedClusters (for OnPrem K8S clusters). Possible values include:
   * 'managedClusters', 'connectedClusters'
   * @param clusterName The name of the kubernetes cluster.
   * @param extensionTypeName Extension type name
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, clusterRp: Models.ClusterRp, clusterResourceName: Models.ClusterResourceName, clusterName: string, extensionTypeName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ExtensionType>): void;
  get(resourceGroupName: string, clusterRp: Models.ClusterRp, clusterResourceName: Models.ClusterResourceName, clusterName: string, extensionTypeName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ExtensionType>, callback?: msRest.ServiceCallback<Models.ExtensionType>): Promise<Models.ClusterExtensionTypeGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        clusterRp,
        clusterResourceName,
        clusterName,
        extensionTypeName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.ClusterExtensionTypeGetResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{clusterRp}/{clusterResourceName}/{clusterName}/providers/Microsoft.KubernetesConfiguration/extensionTypes/{extensionTypeName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.clusterRp,
    Parameters.clusterResourceName,
    Parameters.clusterName,
    Parameters.extensionTypeName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ExtensionType
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
