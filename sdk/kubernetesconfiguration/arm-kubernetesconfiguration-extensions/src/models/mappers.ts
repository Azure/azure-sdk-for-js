/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const Scope: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Scope",
    modelProperties: {
      cluster: {
        serializedName: "cluster",
        type: {
          name: "Composite",
          className: "ScopeCluster",
        },
      },
      namespace: {
        serializedName: "namespace",
        type: {
          name: "Composite",
          className: "ScopeNamespace",
        },
      },
    },
  },
};

export const ScopeCluster: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScopeCluster",
    modelProperties: {
      releaseNamespace: {
        serializedName: "releaseNamespace",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ScopeNamespace: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScopeNamespace",
    modelProperties: {
      targetNamespace: {
        serializedName: "targetNamespace",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ExtensionStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExtensionStatus",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String",
        },
      },
      displayStatus: {
        serializedName: "displayStatus",
        type: {
          name: "String",
        },
      },
      level: {
        defaultValue: "Information",
        serializedName: "level",
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        type: {
          name: "String",
        },
      },
      time: {
        serializedName: "time",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const ExtensionPropertiesAksAssignedIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExtensionPropertiesAksAssignedIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      tenantId: {
        serializedName: "tenantId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        type: {
          name: "Enum",
          allowedValues: ["SystemAssigned", "UserAssigned"],
        },
      },
    },
  },
};

export const Identity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Identity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      tenantId: {
        serializedName: "tenantId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        defaultValue: "SystemAssigned",
        isConstant: true,
        serializedName: "type",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String",
        },
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String",
        },
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime",
        },
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String",
        },
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String",
        },
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const Plan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Plan",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
      publisher: {
        serializedName: "publisher",
        required: true,
        type: {
          name: "String",
        },
      },
      product: {
        serializedName: "product",
        required: true,
        type: {
          name: "String",
        },
      },
      promotionCode: {
        serializedName: "promotionCode",
        type: {
          name: "String",
        },
      },
      version: {
        serializedName: "version",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const PatchExtension: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PatchExtension",
    modelProperties: {
      autoUpgradeMinorVersion: {
        defaultValue: true,
        serializedName: "properties.autoUpgradeMinorVersion",
        type: {
          name: "Boolean",
        },
      },
      releaseTrain: {
        defaultValue: "Stable",
        serializedName: "properties.releaseTrain",
        type: {
          name: "String",
        },
      },
      version: {
        serializedName: "properties.version",
        nullable: true,
        type: {
          name: "String",
        },
      },
      configurationSettings: {
        serializedName: "properties.configurationSettings",
        nullable: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      configurationProtectedSettings: {
        serializedName: "properties.configurationProtectedSettings",
        nullable: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const ExtensionsList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExtensionsList",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Extension",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationStatusResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationStatusResult",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        nullable: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties,
    },
  },
};

export const Extension: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Extension",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "Identity",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className: "Plan",
        },
      },
      extensionType: {
        serializedName: "properties.extensionType",
        type: {
          name: "String",
        },
      },
      autoUpgradeMinorVersion: {
        defaultValue: true,
        serializedName: "properties.autoUpgradeMinorVersion",
        type: {
          name: "Boolean",
        },
      },
      releaseTrain: {
        defaultValue: "Stable",
        serializedName: "properties.releaseTrain",
        type: {
          name: "String",
        },
      },
      version: {
        serializedName: "properties.version",
        nullable: true,
        type: {
          name: "String",
        },
      },
      scope: {
        serializedName: "properties.scope",
        type: {
          name: "Composite",
          className: "Scope",
        },
      },
      configurationSettings: {
        serializedName: "properties.configurationSettings",
        nullable: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      configurationProtectedSettings: {
        serializedName: "properties.configurationProtectedSettings",
        nullable: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      currentVersion: {
        serializedName: "properties.currentVersion",
        readOnly: true,
        nullable: true,
        type: {
          name: "String",
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      statuses: {
        serializedName: "properties.statuses",
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExtensionStatus",
            },
          },
        },
      },
      errorInfo: {
        serializedName: "properties.errorInfo",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
      customLocationSettings: {
        serializedName: "properties.customLocationSettings",
        readOnly: true,
        nullable: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      packageUri: {
        serializedName: "properties.packageUri",
        readOnly: true,
        nullable: true,
        type: {
          name: "String",
        },
      },
      aksAssignedIdentity: {
        serializedName: "properties.aksAssignedIdentity",
        type: {
          name: "Composite",
          className: "ExtensionPropertiesAksAssignedIdentity",
        },
      },
      isSystemExtension: {
        defaultValue: false,
        serializedName: "properties.isSystemExtension",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
    },
  },
};
