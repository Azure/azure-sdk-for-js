/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  WorkloadNetwork,
  WorkloadNetworksListOptionalParams,
  WorkloadNetworkDhcp,
  WorkloadNetworksListDhcpOptionalParams,
  WorkloadNetworkDnsService,
  WorkloadNetworksListDnsServicesOptionalParams,
  WorkloadNetworkDnsZone,
  WorkloadNetworksListDnsZonesOptionalParams,
  WorkloadNetworkGateway,
  WorkloadNetworksListGatewaysOptionalParams,
  WorkloadNetworkPortMirroring,
  WorkloadNetworksListPortMirroringOptionalParams,
  WorkloadNetworkPublicIP,
  WorkloadNetworksListPublicIPsOptionalParams,
  WorkloadNetworkSegment,
  WorkloadNetworksListSegmentsOptionalParams,
  WorkloadNetworkVirtualMachine,
  WorkloadNetworksListVirtualMachinesOptionalParams,
  WorkloadNetworkVMGroup,
  WorkloadNetworksListVMGroupsOptionalParams,
  WorkloadNetworksGetOptionalParams,
  WorkloadNetworksGetResponse,
  WorkloadNetworksGetDhcpOptionalParams,
  WorkloadNetworksGetDhcpResponse,
  WorkloadNetworksCreateDhcpOptionalParams,
  WorkloadNetworksCreateDhcpResponse,
  WorkloadNetworksUpdateDhcpOptionalParams,
  WorkloadNetworksUpdateDhcpResponse,
  WorkloadNetworksDeleteDhcpOptionalParams,
  WorkloadNetworksGetDnsServiceOptionalParams,
  WorkloadNetworksGetDnsServiceResponse,
  WorkloadNetworksCreateDnsServiceOptionalParams,
  WorkloadNetworksCreateDnsServiceResponse,
  WorkloadNetworksUpdateDnsServiceOptionalParams,
  WorkloadNetworksUpdateDnsServiceResponse,
  WorkloadNetworksDeleteDnsServiceOptionalParams,
  WorkloadNetworksGetDnsZoneOptionalParams,
  WorkloadNetworksGetDnsZoneResponse,
  WorkloadNetworksCreateDnsZoneOptionalParams,
  WorkloadNetworksCreateDnsZoneResponse,
  WorkloadNetworksUpdateDnsZoneOptionalParams,
  WorkloadNetworksUpdateDnsZoneResponse,
  WorkloadNetworksDeleteDnsZoneOptionalParams,
  WorkloadNetworksGetGatewayOptionalParams,
  WorkloadNetworksGetGatewayResponse,
  WorkloadNetworksGetPortMirroringOptionalParams,
  WorkloadNetworksGetPortMirroringResponse,
  WorkloadNetworksCreatePortMirroringOptionalParams,
  WorkloadNetworksCreatePortMirroringResponse,
  WorkloadNetworksUpdatePortMirroringOptionalParams,
  WorkloadNetworksUpdatePortMirroringResponse,
  WorkloadNetworksDeletePortMirroringOptionalParams,
  WorkloadNetworksGetPublicIPOptionalParams,
  WorkloadNetworksGetPublicIPResponse,
  WorkloadNetworksCreatePublicIPOptionalParams,
  WorkloadNetworksCreatePublicIPResponse,
  WorkloadNetworksDeletePublicIPOptionalParams,
  WorkloadNetworksGetSegmentOptionalParams,
  WorkloadNetworksGetSegmentResponse,
  WorkloadNetworksCreateSegmentsOptionalParams,
  WorkloadNetworksCreateSegmentsResponse,
  WorkloadNetworksUpdateSegmentsOptionalParams,
  WorkloadNetworksUpdateSegmentsResponse,
  WorkloadNetworksDeleteSegmentOptionalParams,
  WorkloadNetworksGetVirtualMachineOptionalParams,
  WorkloadNetworksGetVirtualMachineResponse,
  WorkloadNetworksGetVMGroupOptionalParams,
  WorkloadNetworksGetVMGroupResponse,
  WorkloadNetworksCreateVMGroupOptionalParams,
  WorkloadNetworksCreateVMGroupResponse,
  WorkloadNetworksUpdateVMGroupOptionalParams,
  WorkloadNetworksUpdateVMGroupResponse,
  WorkloadNetworksDeleteVMGroupOptionalParams,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a WorkloadNetworks. */
export interface WorkloadNetworks {
  /**
   * List WorkloadNetwork resources by PrivateCloud
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    privateCloudName: string,
    options?: WorkloadNetworksListOptionalParams,
  ): PagedAsyncIterableIterator<WorkloadNetwork>;
  /**
   * List WorkloadNetworkDhcp resources by WorkloadNetwork
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  listDhcp(
    resourceGroupName: string,
    privateCloudName: string,
    options?: WorkloadNetworksListDhcpOptionalParams,
  ): PagedAsyncIterableIterator<WorkloadNetworkDhcp>;
  /**
   * List WorkloadNetworkDnsService resources by WorkloadNetwork
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  listDnsServices(
    resourceGroupName: string,
    privateCloudName: string,
    options?: WorkloadNetworksListDnsServicesOptionalParams,
  ): PagedAsyncIterableIterator<WorkloadNetworkDnsService>;
  /**
   * List WorkloadNetworkDnsZone resources by WorkloadNetwork
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  listDnsZones(
    resourceGroupName: string,
    privateCloudName: string,
    options?: WorkloadNetworksListDnsZonesOptionalParams,
  ): PagedAsyncIterableIterator<WorkloadNetworkDnsZone>;
  /**
   * List WorkloadNetworkGateway resources by WorkloadNetwork
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  listGateways(
    resourceGroupName: string,
    privateCloudName: string,
    options?: WorkloadNetworksListGatewaysOptionalParams,
  ): PagedAsyncIterableIterator<WorkloadNetworkGateway>;
  /**
   * List WorkloadNetworkPortMirroring resources by WorkloadNetwork
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  listPortMirroring(
    resourceGroupName: string,
    privateCloudName: string,
    options?: WorkloadNetworksListPortMirroringOptionalParams,
  ): PagedAsyncIterableIterator<WorkloadNetworkPortMirroring>;
  /**
   * List WorkloadNetworkPublicIP resources by WorkloadNetwork
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  listPublicIPs(
    resourceGroupName: string,
    privateCloudName: string,
    options?: WorkloadNetworksListPublicIPsOptionalParams,
  ): PagedAsyncIterableIterator<WorkloadNetworkPublicIP>;
  /**
   * List WorkloadNetworkSegment resources by WorkloadNetwork
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  listSegments(
    resourceGroupName: string,
    privateCloudName: string,
    options?: WorkloadNetworksListSegmentsOptionalParams,
  ): PagedAsyncIterableIterator<WorkloadNetworkSegment>;
  /**
   * List WorkloadNetworkVirtualMachine resources by WorkloadNetwork
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  listVirtualMachines(
    resourceGroupName: string,
    privateCloudName: string,
    options?: WorkloadNetworksListVirtualMachinesOptionalParams,
  ): PagedAsyncIterableIterator<WorkloadNetworkVirtualMachine>;
  /**
   * List WorkloadNetworkVMGroup resources by WorkloadNetwork
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  listVMGroups(
    resourceGroupName: string,
    privateCloudName: string,
    options?: WorkloadNetworksListVMGroupsOptionalParams,
  ): PagedAsyncIterableIterator<WorkloadNetworkVMGroup>;
  /**
   * Get a WorkloadNetwork
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    privateCloudName: string,
    options?: WorkloadNetworksGetOptionalParams,
  ): Promise<WorkloadNetworksGetResponse>;
  /**
   * Get a WorkloadNetworkDhcp
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dhcpId The ID of the DHCP configuration
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  getDhcp(
    resourceGroupName: string,
    dhcpId: string,
    privateCloudName: string,
    options?: WorkloadNetworksGetDhcpOptionalParams,
  ): Promise<WorkloadNetworksGetDhcpResponse>;
  /**
   * Create a WorkloadNetworkDhcp
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param dhcpId The ID of the DHCP configuration
   * @param workloadNetworkDhcp Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateDhcp(
    resourceGroupName: string,
    privateCloudName: string,
    dhcpId: string,
    workloadNetworkDhcp: WorkloadNetworkDhcp,
    options?: WorkloadNetworksCreateDhcpOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<WorkloadNetworksCreateDhcpResponse>,
      WorkloadNetworksCreateDhcpResponse
    >
  >;
  /**
   * Create a WorkloadNetworkDhcp
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param dhcpId The ID of the DHCP configuration
   * @param workloadNetworkDhcp Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateDhcpAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    dhcpId: string,
    workloadNetworkDhcp: WorkloadNetworkDhcp,
    options?: WorkloadNetworksCreateDhcpOptionalParams,
  ): Promise<WorkloadNetworksCreateDhcpResponse>;
  /**
   * Update a WorkloadNetworkDhcp
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param dhcpId The ID of the DHCP configuration
   * @param workloadNetworkDhcp The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdateDhcp(
    resourceGroupName: string,
    privateCloudName: string,
    dhcpId: string,
    workloadNetworkDhcp: WorkloadNetworkDhcp,
    options?: WorkloadNetworksUpdateDhcpOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<WorkloadNetworksUpdateDhcpResponse>,
      WorkloadNetworksUpdateDhcpResponse
    >
  >;
  /**
   * Update a WorkloadNetworkDhcp
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param dhcpId The ID of the DHCP configuration
   * @param workloadNetworkDhcp The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdateDhcpAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    dhcpId: string,
    workloadNetworkDhcp: WorkloadNetworkDhcp,
    options?: WorkloadNetworksUpdateDhcpOptionalParams,
  ): Promise<WorkloadNetworksUpdateDhcpResponse>;
  /**
   * Delete a WorkloadNetworkDhcp
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param dhcpId The ID of the DHCP configuration
   * @param options The options parameters.
   */
  beginDeleteDhcp(
    resourceGroupName: string,
    privateCloudName: string,
    dhcpId: string,
    options?: WorkloadNetworksDeleteDhcpOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete a WorkloadNetworkDhcp
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param dhcpId The ID of the DHCP configuration
   * @param options The options parameters.
   */
  beginDeleteDhcpAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    dhcpId: string,
    options?: WorkloadNetworksDeleteDhcpOptionalParams,
  ): Promise<void>;
  /**
   * Get a WorkloadNetworkDnsService
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param dnsServiceId ID of the DNS service.
   * @param options The options parameters.
   */
  getDnsService(
    resourceGroupName: string,
    privateCloudName: string,
    dnsServiceId: string,
    options?: WorkloadNetworksGetDnsServiceOptionalParams,
  ): Promise<WorkloadNetworksGetDnsServiceResponse>;
  /**
   * Create a WorkloadNetworkDnsService
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param dnsServiceId ID of the DNS service.
   * @param workloadNetworkDnsService Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateDnsService(
    resourceGroupName: string,
    privateCloudName: string,
    dnsServiceId: string,
    workloadNetworkDnsService: WorkloadNetworkDnsService,
    options?: WorkloadNetworksCreateDnsServiceOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<WorkloadNetworksCreateDnsServiceResponse>,
      WorkloadNetworksCreateDnsServiceResponse
    >
  >;
  /**
   * Create a WorkloadNetworkDnsService
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param dnsServiceId ID of the DNS service.
   * @param workloadNetworkDnsService Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateDnsServiceAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    dnsServiceId: string,
    workloadNetworkDnsService: WorkloadNetworkDnsService,
    options?: WorkloadNetworksCreateDnsServiceOptionalParams,
  ): Promise<WorkloadNetworksCreateDnsServiceResponse>;
  /**
   * Update a WorkloadNetworkDnsService
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param dnsServiceId ID of the DNS service.
   * @param workloadNetworkDnsService The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdateDnsService(
    resourceGroupName: string,
    privateCloudName: string,
    dnsServiceId: string,
    workloadNetworkDnsService: WorkloadNetworkDnsService,
    options?: WorkloadNetworksUpdateDnsServiceOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<WorkloadNetworksUpdateDnsServiceResponse>,
      WorkloadNetworksUpdateDnsServiceResponse
    >
  >;
  /**
   * Update a WorkloadNetworkDnsService
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param dnsServiceId ID of the DNS service.
   * @param workloadNetworkDnsService The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdateDnsServiceAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    dnsServiceId: string,
    workloadNetworkDnsService: WorkloadNetworkDnsService,
    options?: WorkloadNetworksUpdateDnsServiceOptionalParams,
  ): Promise<WorkloadNetworksUpdateDnsServiceResponse>;
  /**
   * Delete a WorkloadNetworkDnsService
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsServiceId ID of the DNS service.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  beginDeleteDnsService(
    resourceGroupName: string,
    dnsServiceId: string,
    privateCloudName: string,
    options?: WorkloadNetworksDeleteDnsServiceOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete a WorkloadNetworkDnsService
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsServiceId ID of the DNS service.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  beginDeleteDnsServiceAndWait(
    resourceGroupName: string,
    dnsServiceId: string,
    privateCloudName: string,
    options?: WorkloadNetworksDeleteDnsServiceOptionalParams,
  ): Promise<void>;
  /**
   * Get a WorkloadNetworkDnsZone
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param dnsZoneId ID of the DNS zone.
   * @param options The options parameters.
   */
  getDnsZone(
    resourceGroupName: string,
    privateCloudName: string,
    dnsZoneId: string,
    options?: WorkloadNetworksGetDnsZoneOptionalParams,
  ): Promise<WorkloadNetworksGetDnsZoneResponse>;
  /**
   * Create a WorkloadNetworkDnsZone
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param dnsZoneId ID of the DNS zone.
   * @param workloadNetworkDnsZone Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateDnsZone(
    resourceGroupName: string,
    privateCloudName: string,
    dnsZoneId: string,
    workloadNetworkDnsZone: WorkloadNetworkDnsZone,
    options?: WorkloadNetworksCreateDnsZoneOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<WorkloadNetworksCreateDnsZoneResponse>,
      WorkloadNetworksCreateDnsZoneResponse
    >
  >;
  /**
   * Create a WorkloadNetworkDnsZone
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param dnsZoneId ID of the DNS zone.
   * @param workloadNetworkDnsZone Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateDnsZoneAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    dnsZoneId: string,
    workloadNetworkDnsZone: WorkloadNetworkDnsZone,
    options?: WorkloadNetworksCreateDnsZoneOptionalParams,
  ): Promise<WorkloadNetworksCreateDnsZoneResponse>;
  /**
   * Update a WorkloadNetworkDnsZone
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param dnsZoneId ID of the DNS zone.
   * @param workloadNetworkDnsZone The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdateDnsZone(
    resourceGroupName: string,
    privateCloudName: string,
    dnsZoneId: string,
    workloadNetworkDnsZone: WorkloadNetworkDnsZone,
    options?: WorkloadNetworksUpdateDnsZoneOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<WorkloadNetworksUpdateDnsZoneResponse>,
      WorkloadNetworksUpdateDnsZoneResponse
    >
  >;
  /**
   * Update a WorkloadNetworkDnsZone
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param dnsZoneId ID of the DNS zone.
   * @param workloadNetworkDnsZone The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdateDnsZoneAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    dnsZoneId: string,
    workloadNetworkDnsZone: WorkloadNetworkDnsZone,
    options?: WorkloadNetworksUpdateDnsZoneOptionalParams,
  ): Promise<WorkloadNetworksUpdateDnsZoneResponse>;
  /**
   * Delete a WorkloadNetworkDnsZone
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsZoneId ID of the DNS zone.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  beginDeleteDnsZone(
    resourceGroupName: string,
    dnsZoneId: string,
    privateCloudName: string,
    options?: WorkloadNetworksDeleteDnsZoneOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete a WorkloadNetworkDnsZone
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsZoneId ID of the DNS zone.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  beginDeleteDnsZoneAndWait(
    resourceGroupName: string,
    dnsZoneId: string,
    privateCloudName: string,
    options?: WorkloadNetworksDeleteDnsZoneOptionalParams,
  ): Promise<void>;
  /**
   * Get a WorkloadNetworkGateway
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param gatewayId The ID of the NSX Gateway
   * @param options The options parameters.
   */
  getGateway(
    resourceGroupName: string,
    privateCloudName: string,
    gatewayId: string,
    options?: WorkloadNetworksGetGatewayOptionalParams,
  ): Promise<WorkloadNetworksGetGatewayResponse>;
  /**
   * Get a WorkloadNetworkPortMirroring
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param portMirroringId ID of the NSX port mirroring profile.
   * @param options The options parameters.
   */
  getPortMirroring(
    resourceGroupName: string,
    privateCloudName: string,
    portMirroringId: string,
    options?: WorkloadNetworksGetPortMirroringOptionalParams,
  ): Promise<WorkloadNetworksGetPortMirroringResponse>;
  /**
   * Create a WorkloadNetworkPortMirroring
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param portMirroringId ID of the NSX port mirroring profile.
   * @param workloadNetworkPortMirroring Resource create parameters.
   * @param options The options parameters.
   */
  beginCreatePortMirroring(
    resourceGroupName: string,
    privateCloudName: string,
    portMirroringId: string,
    workloadNetworkPortMirroring: WorkloadNetworkPortMirroring,
    options?: WorkloadNetworksCreatePortMirroringOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<WorkloadNetworksCreatePortMirroringResponse>,
      WorkloadNetworksCreatePortMirroringResponse
    >
  >;
  /**
   * Create a WorkloadNetworkPortMirroring
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param portMirroringId ID of the NSX port mirroring profile.
   * @param workloadNetworkPortMirroring Resource create parameters.
   * @param options The options parameters.
   */
  beginCreatePortMirroringAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    portMirroringId: string,
    workloadNetworkPortMirroring: WorkloadNetworkPortMirroring,
    options?: WorkloadNetworksCreatePortMirroringOptionalParams,
  ): Promise<WorkloadNetworksCreatePortMirroringResponse>;
  /**
   * Update a WorkloadNetworkPortMirroring
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param portMirroringId ID of the NSX port mirroring profile.
   * @param workloadNetworkPortMirroring The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdatePortMirroring(
    resourceGroupName: string,
    privateCloudName: string,
    portMirroringId: string,
    workloadNetworkPortMirroring: WorkloadNetworkPortMirroring,
    options?: WorkloadNetworksUpdatePortMirroringOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<WorkloadNetworksUpdatePortMirroringResponse>,
      WorkloadNetworksUpdatePortMirroringResponse
    >
  >;
  /**
   * Update a WorkloadNetworkPortMirroring
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param portMirroringId ID of the NSX port mirroring profile.
   * @param workloadNetworkPortMirroring The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdatePortMirroringAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    portMirroringId: string,
    workloadNetworkPortMirroring: WorkloadNetworkPortMirroring,
    options?: WorkloadNetworksUpdatePortMirroringOptionalParams,
  ): Promise<WorkloadNetworksUpdatePortMirroringResponse>;
  /**
   * Delete a WorkloadNetworkPortMirroring
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param portMirroringId ID of the NSX port mirroring profile.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  beginDeletePortMirroring(
    resourceGroupName: string,
    portMirroringId: string,
    privateCloudName: string,
    options?: WorkloadNetworksDeletePortMirroringOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete a WorkloadNetworkPortMirroring
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param portMirroringId ID of the NSX port mirroring profile.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  beginDeletePortMirroringAndWait(
    resourceGroupName: string,
    portMirroringId: string,
    privateCloudName: string,
    options?: WorkloadNetworksDeletePortMirroringOptionalParams,
  ): Promise<void>;
  /**
   * Get a WorkloadNetworkPublicIP
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param publicIPId ID of the DNS zone.
   * @param options The options parameters.
   */
  getPublicIP(
    resourceGroupName: string,
    privateCloudName: string,
    publicIPId: string,
    options?: WorkloadNetworksGetPublicIPOptionalParams,
  ): Promise<WorkloadNetworksGetPublicIPResponse>;
  /**
   * Create a WorkloadNetworkPublicIP
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param publicIPId ID of the DNS zone.
   * @param workloadNetworkPublicIP Resource create parameters.
   * @param options The options parameters.
   */
  beginCreatePublicIP(
    resourceGroupName: string,
    privateCloudName: string,
    publicIPId: string,
    workloadNetworkPublicIP: WorkloadNetworkPublicIP,
    options?: WorkloadNetworksCreatePublicIPOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<WorkloadNetworksCreatePublicIPResponse>,
      WorkloadNetworksCreatePublicIPResponse
    >
  >;
  /**
   * Create a WorkloadNetworkPublicIP
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param publicIPId ID of the DNS zone.
   * @param workloadNetworkPublicIP Resource create parameters.
   * @param options The options parameters.
   */
  beginCreatePublicIPAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    publicIPId: string,
    workloadNetworkPublicIP: WorkloadNetworkPublicIP,
    options?: WorkloadNetworksCreatePublicIPOptionalParams,
  ): Promise<WorkloadNetworksCreatePublicIPResponse>;
  /**
   * Delete a WorkloadNetworkPublicIP
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publicIPId ID of the DNS zone.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  beginDeletePublicIP(
    resourceGroupName: string,
    publicIPId: string,
    privateCloudName: string,
    options?: WorkloadNetworksDeletePublicIPOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete a WorkloadNetworkPublicIP
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publicIPId ID of the DNS zone.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  beginDeletePublicIPAndWait(
    resourceGroupName: string,
    publicIPId: string,
    privateCloudName: string,
    options?: WorkloadNetworksDeletePublicIPOptionalParams,
  ): Promise<void>;
  /**
   * Get a WorkloadNetworkSegment
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param segmentId The ID of the NSX Segment
   * @param options The options parameters.
   */
  getSegment(
    resourceGroupName: string,
    privateCloudName: string,
    segmentId: string,
    options?: WorkloadNetworksGetSegmentOptionalParams,
  ): Promise<WorkloadNetworksGetSegmentResponse>;
  /**
   * Create a WorkloadNetworkSegment
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param segmentId The ID of the NSX Segment
   * @param workloadNetworkSegment Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateSegments(
    resourceGroupName: string,
    privateCloudName: string,
    segmentId: string,
    workloadNetworkSegment: WorkloadNetworkSegment,
    options?: WorkloadNetworksCreateSegmentsOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<WorkloadNetworksCreateSegmentsResponse>,
      WorkloadNetworksCreateSegmentsResponse
    >
  >;
  /**
   * Create a WorkloadNetworkSegment
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param segmentId The ID of the NSX Segment
   * @param workloadNetworkSegment Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateSegmentsAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    segmentId: string,
    workloadNetworkSegment: WorkloadNetworkSegment,
    options?: WorkloadNetworksCreateSegmentsOptionalParams,
  ): Promise<WorkloadNetworksCreateSegmentsResponse>;
  /**
   * Update a WorkloadNetworkSegment
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param segmentId The ID of the NSX Segment
   * @param workloadNetworkSegment The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdateSegments(
    resourceGroupName: string,
    privateCloudName: string,
    segmentId: string,
    workloadNetworkSegment: WorkloadNetworkSegment,
    options?: WorkloadNetworksUpdateSegmentsOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<WorkloadNetworksUpdateSegmentsResponse>,
      WorkloadNetworksUpdateSegmentsResponse
    >
  >;
  /**
   * Update a WorkloadNetworkSegment
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param segmentId The ID of the NSX Segment
   * @param workloadNetworkSegment The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdateSegmentsAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    segmentId: string,
    workloadNetworkSegment: WorkloadNetworkSegment,
    options?: WorkloadNetworksUpdateSegmentsOptionalParams,
  ): Promise<WorkloadNetworksUpdateSegmentsResponse>;
  /**
   * Delete a WorkloadNetworkSegment
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param segmentId The ID of the NSX Segment
   * @param options The options parameters.
   */
  beginDeleteSegment(
    resourceGroupName: string,
    privateCloudName: string,
    segmentId: string,
    options?: WorkloadNetworksDeleteSegmentOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete a WorkloadNetworkSegment
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param segmentId The ID of the NSX Segment
   * @param options The options parameters.
   */
  beginDeleteSegmentAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    segmentId: string,
    options?: WorkloadNetworksDeleteSegmentOptionalParams,
  ): Promise<void>;
  /**
   * Get a WorkloadNetworkVirtualMachine
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param virtualMachineId ID of the virtual machine.
   * @param options The options parameters.
   */
  getVirtualMachine(
    resourceGroupName: string,
    privateCloudName: string,
    virtualMachineId: string,
    options?: WorkloadNetworksGetVirtualMachineOptionalParams,
  ): Promise<WorkloadNetworksGetVirtualMachineResponse>;
  /**
   * Get a WorkloadNetworkVMGroup
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param vmGroupId ID of the VM group.
   * @param options The options parameters.
   */
  getVMGroup(
    resourceGroupName: string,
    privateCloudName: string,
    vmGroupId: string,
    options?: WorkloadNetworksGetVMGroupOptionalParams,
  ): Promise<WorkloadNetworksGetVMGroupResponse>;
  /**
   * Create a WorkloadNetworkVMGroup
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param vmGroupId ID of the VM group.
   * @param workloadNetworkVMGroup Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateVMGroup(
    resourceGroupName: string,
    privateCloudName: string,
    vmGroupId: string,
    workloadNetworkVMGroup: WorkloadNetworkVMGroup,
    options?: WorkloadNetworksCreateVMGroupOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<WorkloadNetworksCreateVMGroupResponse>,
      WorkloadNetworksCreateVMGroupResponse
    >
  >;
  /**
   * Create a WorkloadNetworkVMGroup
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param vmGroupId ID of the VM group.
   * @param workloadNetworkVMGroup Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateVMGroupAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    vmGroupId: string,
    workloadNetworkVMGroup: WorkloadNetworkVMGroup,
    options?: WorkloadNetworksCreateVMGroupOptionalParams,
  ): Promise<WorkloadNetworksCreateVMGroupResponse>;
  /**
   * Update a WorkloadNetworkVMGroup
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param vmGroupId ID of the VM group.
   * @param workloadNetworkVMGroup The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdateVMGroup(
    resourceGroupName: string,
    privateCloudName: string,
    vmGroupId: string,
    workloadNetworkVMGroup: WorkloadNetworkVMGroup,
    options?: WorkloadNetworksUpdateVMGroupOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<WorkloadNetworksUpdateVMGroupResponse>,
      WorkloadNetworksUpdateVMGroupResponse
    >
  >;
  /**
   * Update a WorkloadNetworkVMGroup
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param vmGroupId ID of the VM group.
   * @param workloadNetworkVMGroup The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdateVMGroupAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    vmGroupId: string,
    workloadNetworkVMGroup: WorkloadNetworkVMGroup,
    options?: WorkloadNetworksUpdateVMGroupOptionalParams,
  ): Promise<WorkloadNetworksUpdateVMGroupResponse>;
  /**
   * Delete a WorkloadNetworkVMGroup
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param vmGroupId ID of the VM group.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  beginDeleteVMGroup(
    resourceGroupName: string,
    vmGroupId: string,
    privateCloudName: string,
    options?: WorkloadNetworksDeleteVMGroupOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete a WorkloadNetworkVMGroup
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param vmGroupId ID of the VM group.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  beginDeleteVMGroupAndWait(
    resourceGroupName: string,
    vmGroupId: string,
    privateCloudName: string,
    options?: WorkloadNetworksDeleteVMGroupOptionalParams,
  ): Promise<void>;
}
