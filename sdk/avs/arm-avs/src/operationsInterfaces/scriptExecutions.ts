/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  ScriptExecution,
  ScriptExecutionsListOptionalParams,
  ScriptExecutionsGetOptionalParams,
  ScriptExecutionsGetResponse,
  ScriptExecutionsCreateOrUpdateOptionalParams,
  ScriptExecutionsCreateOrUpdateResponse,
  ScriptExecutionsDeleteOptionalParams,
  ScriptExecutionsGetExecutionLogsOptionalParams,
  ScriptExecutionsGetExecutionLogsResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ScriptExecutions. */
export interface ScriptExecutions {
  /**
   * List script executions in a private cloud
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    privateCloudName: string,
    options?: ScriptExecutionsListOptionalParams
  ): PagedAsyncIterableIterator<ScriptExecution>;
  /**
   * Get an script execution by name in a private cloud
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param scriptExecutionName Name of the user-invoked script execution resource
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    privateCloudName: string,
    scriptExecutionName: string,
    options?: ScriptExecutionsGetOptionalParams
  ): Promise<ScriptExecutionsGetResponse>;
  /**
   * Create or update a script execution in a private cloud
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName The name of the private cloud.
   * @param scriptExecutionName Name of the user-invoked script execution resource
   * @param scriptExecution A script running in the private cloud
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    privateCloudName: string,
    scriptExecutionName: string,
    scriptExecution: ScriptExecution,
    options?: ScriptExecutionsCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ScriptExecutionsCreateOrUpdateResponse>,
      ScriptExecutionsCreateOrUpdateResponse
    >
  >;
  /**
   * Create or update a script execution in a private cloud
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName The name of the private cloud.
   * @param scriptExecutionName Name of the user-invoked script execution resource
   * @param scriptExecution A script running in the private cloud
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    scriptExecutionName: string,
    scriptExecution: ScriptExecution,
    options?: ScriptExecutionsCreateOrUpdateOptionalParams
  ): Promise<ScriptExecutionsCreateOrUpdateResponse>;
  /**
   * Cancel a ScriptExecution in a private cloud
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param scriptExecutionName Name of the user-invoked script execution resource
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    privateCloudName: string,
    scriptExecutionName: string,
    options?: ScriptExecutionsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Cancel a ScriptExecution in a private cloud
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param scriptExecutionName Name of the user-invoked script execution resource
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    scriptExecutionName: string,
    options?: ScriptExecutionsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Return the logs for a script execution resource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param scriptExecutionName Name of the user-invoked script execution resource
   * @param options The options parameters.
   */
  getExecutionLogs(
    resourceGroupName: string,
    privateCloudName: string,
    scriptExecutionName: string,
    options?: ScriptExecutionsGetExecutionLogsOptionalParams
  ): Promise<ScriptExecutionsGetExecutionLogsResponse>;
}
