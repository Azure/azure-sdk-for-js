/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  PrivateCloud,
  PrivateCloudsListOptionalParams,
  PrivateCloudsListInSubscriptionOptionalParams,
  PrivateCloudsGetOptionalParams,
  PrivateCloudsGetResponse,
  PrivateCloudsCreateOrUpdateOptionalParams,
  PrivateCloudsCreateOrUpdateResponse,
  PrivateCloudUpdate,
  PrivateCloudsUpdateOptionalParams,
  PrivateCloudsUpdateResponse,
  PrivateCloudsDeleteOptionalParams,
  PrivateCloudsRotateVcenterPasswordOptionalParams,
  PrivateCloudsRotateNsxtPasswordOptionalParams,
  PrivateCloudsListAdminCredentialsOptionalParams,
  PrivateCloudsListAdminCredentialsResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a PrivateClouds. */
export interface PrivateClouds {
  /**
   * List private clouds in a resource group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    options?: PrivateCloudsListOptionalParams
  ): PagedAsyncIterableIterator<PrivateCloud>;
  /**
   * List private clouds in a subscription
   * @param options The options parameters.
   */
  listInSubscription(
    options?: PrivateCloudsListInSubscriptionOptionalParams
  ): PagedAsyncIterableIterator<PrivateCloud>;
  /**
   * Get a private cloud
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    privateCloudName: string,
    options?: PrivateCloudsGetOptionalParams
  ): Promise<PrivateCloudsGetResponse>;
  /**
   * Create or update a private cloud
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param privateCloud The private cloud
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    privateCloudName: string,
    privateCloud: PrivateCloud,
    options?: PrivateCloudsCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<PrivateCloudsCreateOrUpdateResponse>,
      PrivateCloudsCreateOrUpdateResponse
    >
  >;
  /**
   * Create or update a private cloud
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param privateCloud The private cloud
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    privateCloud: PrivateCloud,
    options?: PrivateCloudsCreateOrUpdateOptionalParams
  ): Promise<PrivateCloudsCreateOrUpdateResponse>;
  /**
   * Update a private cloud
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param privateCloudUpdate The private cloud properties to be updated
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    privateCloudName: string,
    privateCloudUpdate: PrivateCloudUpdate,
    options?: PrivateCloudsUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<PrivateCloudsUpdateResponse>,
      PrivateCloudsUpdateResponse
    >
  >;
  /**
   * Update a private cloud
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param privateCloudUpdate The private cloud properties to be updated
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    privateCloudUpdate: PrivateCloudUpdate,
    options?: PrivateCloudsUpdateOptionalParams
  ): Promise<PrivateCloudsUpdateResponse>;
  /**
   * Delete a private cloud
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    privateCloudName: string,
    options?: PrivateCloudsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Delete a private cloud
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    options?: PrivateCloudsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Rotate the vCenter password
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  beginRotateVcenterPassword(
    resourceGroupName: string,
    privateCloudName: string,
    options?: PrivateCloudsRotateVcenterPasswordOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Rotate the vCenter password
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  beginRotateVcenterPasswordAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    options?: PrivateCloudsRotateVcenterPasswordOptionalParams
  ): Promise<void>;
  /**
   * Rotate the NSX-T Manager password
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  beginRotateNsxtPassword(
    resourceGroupName: string,
    privateCloudName: string,
    options?: PrivateCloudsRotateNsxtPasswordOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Rotate the NSX-T Manager password
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  beginRotateNsxtPasswordAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    options?: PrivateCloudsRotateNsxtPasswordOptionalParams
  ): Promise<void>;
  /**
   * List the admin credentials for the private cloud
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  listAdminCredentials(
    resourceGroupName: string,
    privateCloudName: string,
    options?: PrivateCloudsListAdminCredentialsOptionalParams
  ): Promise<PrivateCloudsListAdminCredentialsResponse>;
}
