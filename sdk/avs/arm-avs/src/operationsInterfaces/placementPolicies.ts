/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  PlacementPolicy,
  PlacementPoliciesListOptionalParams,
  PlacementPoliciesGetOptionalParams,
  PlacementPoliciesGetResponse,
  PlacementPoliciesCreateOrUpdateOptionalParams,
  PlacementPoliciesCreateOrUpdateResponse,
  PlacementPolicyUpdate,
  PlacementPoliciesUpdateOptionalParams,
  PlacementPoliciesUpdateResponse,
  PlacementPoliciesDeleteOptionalParams,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a PlacementPolicies. */
export interface PlacementPolicies {
  /**
   * List PlacementPolicy resources by Cluster
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param clusterName Name of the cluster
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    privateCloudName: string,
    clusterName: string,
    options?: PlacementPoliciesListOptionalParams,
  ): PagedAsyncIterableIterator<PlacementPolicy>;
  /**
   * Get a PlacementPolicy
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param clusterName Name of the cluster
   * @param placementPolicyName Name of the placement policy.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    privateCloudName: string,
    clusterName: string,
    placementPolicyName: string,
    options?: PlacementPoliciesGetOptionalParams,
  ): Promise<PlacementPoliciesGetResponse>;
  /**
   * Create a PlacementPolicy
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param clusterName Name of the cluster
   * @param placementPolicyName Name of the placement policy.
   * @param placementPolicy Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    privateCloudName: string,
    clusterName: string,
    placementPolicyName: string,
    placementPolicy: PlacementPolicy,
    options?: PlacementPoliciesCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<PlacementPoliciesCreateOrUpdateResponse>,
      PlacementPoliciesCreateOrUpdateResponse
    >
  >;
  /**
   * Create a PlacementPolicy
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param clusterName Name of the cluster
   * @param placementPolicyName Name of the placement policy.
   * @param placementPolicy Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    clusterName: string,
    placementPolicyName: string,
    placementPolicy: PlacementPolicy,
    options?: PlacementPoliciesCreateOrUpdateOptionalParams,
  ): Promise<PlacementPoliciesCreateOrUpdateResponse>;
  /**
   * Update a PlacementPolicy
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param clusterName Name of the cluster
   * @param placementPolicyName Name of the placement policy.
   * @param placementPolicyUpdate The placement policy properties to be updated.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    privateCloudName: string,
    clusterName: string,
    placementPolicyName: string,
    placementPolicyUpdate: PlacementPolicyUpdate,
    options?: PlacementPoliciesUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<PlacementPoliciesUpdateResponse>,
      PlacementPoliciesUpdateResponse
    >
  >;
  /**
   * Update a PlacementPolicy
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param clusterName Name of the cluster
   * @param placementPolicyName Name of the placement policy.
   * @param placementPolicyUpdate The placement policy properties to be updated.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    clusterName: string,
    placementPolicyName: string,
    placementPolicyUpdate: PlacementPolicyUpdate,
    options?: PlacementPoliciesUpdateOptionalParams,
  ): Promise<PlacementPoliciesUpdateResponse>;
  /**
   * Delete a PlacementPolicy
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param clusterName Name of the cluster
   * @param placementPolicyName Name of the placement policy.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    privateCloudName: string,
    clusterName: string,
    placementPolicyName: string,
    options?: PlacementPoliciesDeleteOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete a PlacementPolicy
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param clusterName Name of the cluster
   * @param placementPolicyName Name of the placement policy.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    clusterName: string,
    placementPolicyName: string,
    options?: PlacementPoliciesDeleteOptionalParams,
  ): Promise<void>;
}
