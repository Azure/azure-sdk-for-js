/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import { TokenCredential } from "@azure/core-auth";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as operations from "./operations";
import { AvsClientContext } from "./avsClientContext";


class AvsClient extends AvsClientContext {
  // Operation groups
  operations: operations.Operations;
  locations: operations.Locations;
  privateClouds: operations.PrivateClouds;
  clusters: operations.Clusters;
  datastores: operations.Datastores;
  hcxEnterpriseSites: operations.HcxEnterpriseSites;
  authorizations: operations.Authorizations;
  globalReachConnections: operations.GlobalReachConnections;
  workloadNetworks: operations.WorkloadNetworks;
  cloudLinks: operations.CloudLinks;
  addons: operations.Addons;
  scriptPackages: operations.ScriptPackages;
  scriptCmdlets: operations.ScriptCmdlets;
  scriptExecutions: operations.ScriptExecutions;

  /**
   * Initializes a new instance of the AvsClient class.
   * @param credentials Credentials needed for the client to connect to Azure. Credentials
   * implementing the TokenCredential interface from the @azure/identity package are recommended. For
   * more information about these credentials, see
   * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the
   * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and
   * @azure/ms-rest-browserauth are also supported.
   * @param subscriptionId The ID of the target subscription.
   * @param [options] The parameter options
   */
  constructor(credentials: msRest.ServiceClientCredentials | TokenCredential, subscriptionId: string, options?: Models.AvsClientOptions) {
    super(credentials, subscriptionId, options);
    this.operations = new operations.Operations(this);
    this.locations = new operations.Locations(this);
    this.privateClouds = new operations.PrivateClouds(this);
    this.clusters = new operations.Clusters(this);
    this.datastores = new operations.Datastores(this);
    this.hcxEnterpriseSites = new operations.HcxEnterpriseSites(this);
    this.authorizations = new operations.Authorizations(this);
    this.globalReachConnections = new operations.GlobalReachConnections(this);
    this.workloadNetworks = new operations.WorkloadNetworks(this);
    this.cloudLinks = new operations.CloudLinks(this);
    this.addons = new operations.Addons(this);
    this.scriptPackages = new operations.ScriptPackages(this);
    this.scriptCmdlets = new operations.ScriptCmdlets(this);
    this.scriptExecutions = new operations.ScriptExecutions(this);
  }
}

// Operation Specifications

export {
  AvsClient,
  AvsClientContext,
  Models as AvsModels,
  Mappers as AvsMappers
};
export * from "./operations";
