/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/workloadNetworksMappers";
import * as Parameters from "../models/parameters";
import { AvsClientContext } from "../avsClientContext";

/** Class representing a WorkloadNetworks. */
export class WorkloadNetworks {
  private readonly client: AvsClientContext;

  /**
   * Create a WorkloadNetworks.
   * @param {AvsClientContext} client Reference to the service client.
   */
  constructor(client: AvsClientContext) {
    this.client = client;
  }

  /**
   * @summary List of segments in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkloadNetworksListSegmentsResponse>
   */
  listSegments(resourceGroupName: string, privateCloudName: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkloadNetworksListSegmentsResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param callback The callback
   */
  listSegments(resourceGroupName: string, privateCloudName: string, callback: msRest.ServiceCallback<Models.WorkloadNetworkSegmentsList>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The optional parameters
   * @param callback The callback
   */
  listSegments(resourceGroupName: string, privateCloudName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkloadNetworkSegmentsList>): void;
  listSegments(resourceGroupName: string, privateCloudName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkloadNetworkSegmentsList>, callback?: msRest.ServiceCallback<Models.WorkloadNetworkSegmentsList>): Promise<Models.WorkloadNetworksListSegmentsResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        privateCloudName,
        options
      },
      listSegmentsOperationSpec,
      callback) as Promise<Models.WorkloadNetworksListSegmentsResponse>;
  }

  /**
   * @summary Get a segment by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param segmentId NSX Segment identifier. Generally the same as the Segment's display name
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkloadNetworksGetSegmentResponse>
   */
  getSegment(resourceGroupName: string, privateCloudName: string, segmentId: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkloadNetworksGetSegmentResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param segmentId NSX Segment identifier. Generally the same as the Segment's display name
   * @param callback The callback
   */
  getSegment(resourceGroupName: string, privateCloudName: string, segmentId: string, callback: msRest.ServiceCallback<Models.WorkloadNetworkSegment>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param segmentId NSX Segment identifier. Generally the same as the Segment's display name
   * @param options The optional parameters
   * @param callback The callback
   */
  getSegment(resourceGroupName: string, privateCloudName: string, segmentId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkloadNetworkSegment>): void;
  getSegment(resourceGroupName: string, privateCloudName: string, segmentId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkloadNetworkSegment>, callback?: msRest.ServiceCallback<Models.WorkloadNetworkSegment>): Promise<Models.WorkloadNetworksGetSegmentResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        privateCloudName,
        segmentId,
        options
      },
      getSegmentOperationSpec,
      callback) as Promise<Models.WorkloadNetworksGetSegmentResponse>;
  }

  /**
   * @summary Create a segment by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param segmentId NSX Segment identifier. Generally the same as the Segment's display name
   * @param workloadNetworkSegment NSX Segment
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkloadNetworksCreateSegmentsResponse>
   */
  createSegments(resourceGroupName: string, privateCloudName: string, segmentId: string, workloadNetworkSegment: Models.WorkloadNetworkSegment, options?: msRest.RequestOptionsBase): Promise<Models.WorkloadNetworksCreateSegmentsResponse> {
    return this.beginCreateSegments(resourceGroupName,privateCloudName,segmentId,workloadNetworkSegment,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.WorkloadNetworksCreateSegmentsResponse>;
  }

  /**
   * @summary Create or update a segment by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param segmentId NSX Segment identifier. Generally the same as the Segment's display name
   * @param workloadNetworkSegment NSX Segment
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkloadNetworksUpdateSegmentsResponse>
   */
  updateSegments(resourceGroupName: string, privateCloudName: string, segmentId: string, workloadNetworkSegment: Models.WorkloadNetworkSegment, options?: msRest.RequestOptionsBase): Promise<Models.WorkloadNetworksUpdateSegmentsResponse> {
    return this.beginUpdateSegments(resourceGroupName,privateCloudName,segmentId,workloadNetworkSegment,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.WorkloadNetworksUpdateSegmentsResponse>;
  }

  /**
   * @summary Delete a segment by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param segmentId NSX Segment identifier. Generally the same as the Segment's display name
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteSegment(resourceGroupName: string, privateCloudName: string, segmentId: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {
    return this.beginDeleteSegment(resourceGroupName,privateCloudName,segmentId,options)
      .then(lroPoller => lroPoller.pollUntilFinished());
  }

  /**
   * @summary List dhcp in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkloadNetworksListDhcpResponse>
   */
  listDhcp(resourceGroupName: string, privateCloudName: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkloadNetworksListDhcpResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param callback The callback
   */
  listDhcp(resourceGroupName: string, privateCloudName: string, callback: msRest.ServiceCallback<Models.WorkloadNetworkDhcpList>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The optional parameters
   * @param callback The callback
   */
  listDhcp(resourceGroupName: string, privateCloudName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkloadNetworkDhcpList>): void;
  listDhcp(resourceGroupName: string, privateCloudName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkloadNetworkDhcpList>, callback?: msRest.ServiceCallback<Models.WorkloadNetworkDhcpList>): Promise<Models.WorkloadNetworksListDhcpResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        privateCloudName,
        options
      },
      listDhcpOperationSpec,
      callback) as Promise<Models.WorkloadNetworksListDhcpResponse>;
  }

  /**
   * @summary Get dhcp by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dhcpId NSX DHCP identifier. Generally the same as the DHCP display name
   * @param privateCloudName Name of the private cloud
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkloadNetworksGetDhcpResponse>
   */
  getDhcp(resourceGroupName: string, dhcpId: string, privateCloudName: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkloadNetworksGetDhcpResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dhcpId NSX DHCP identifier. Generally the same as the DHCP display name
   * @param privateCloudName Name of the private cloud
   * @param callback The callback
   */
  getDhcp(resourceGroupName: string, dhcpId: string, privateCloudName: string, callback: msRest.ServiceCallback<Models.WorkloadNetworkDhcp>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dhcpId NSX DHCP identifier. Generally the same as the DHCP display name
   * @param privateCloudName Name of the private cloud
   * @param options The optional parameters
   * @param callback The callback
   */
  getDhcp(resourceGroupName: string, dhcpId: string, privateCloudName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkloadNetworkDhcp>): void;
  getDhcp(resourceGroupName: string, dhcpId: string, privateCloudName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkloadNetworkDhcp>, callback?: msRest.ServiceCallback<Models.WorkloadNetworkDhcp>): Promise<Models.WorkloadNetworksGetDhcpResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        dhcpId,
        privateCloudName,
        options
      },
      getDhcpOperationSpec,
      callback) as Promise<Models.WorkloadNetworksGetDhcpResponse>;
  }

  /**
   * @summary Create dhcp by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param dhcpId NSX DHCP identifier. Generally the same as the DHCP display name
   * @param workloadNetworkDhcp NSX DHCP
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkloadNetworksCreateDhcpResponse>
   */
  createDhcp(resourceGroupName: string, privateCloudName: string, dhcpId: string, workloadNetworkDhcp: Models.WorkloadNetworkDhcp, options?: msRest.RequestOptionsBase): Promise<Models.WorkloadNetworksCreateDhcpResponse> {
    return this.beginCreateDhcp(resourceGroupName,privateCloudName,dhcpId,workloadNetworkDhcp,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.WorkloadNetworksCreateDhcpResponse>;
  }

  /**
   * @summary Create or update dhcp by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param dhcpId NSX DHCP identifier. Generally the same as the DHCP display name
   * @param workloadNetworkDhcp NSX DHCP
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkloadNetworksUpdateDhcpResponse>
   */
  updateDhcp(resourceGroupName: string, privateCloudName: string, dhcpId: string, workloadNetworkDhcp: Models.WorkloadNetworkDhcp, options?: msRest.RequestOptionsBase): Promise<Models.WorkloadNetworksUpdateDhcpResponse> {
    return this.beginUpdateDhcp(resourceGroupName,privateCloudName,dhcpId,workloadNetworkDhcp,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.WorkloadNetworksUpdateDhcpResponse>;
  }

  /**
   * @summary Delete dhcp by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param dhcpId NSX DHCP identifier. Generally the same as the DHCP display name
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteDhcp(resourceGroupName: string, privateCloudName: string, dhcpId: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {
    return this.beginDeleteDhcp(resourceGroupName,privateCloudName,dhcpId,options)
      .then(lroPoller => lroPoller.pollUntilFinished());
  }

  /**
   * @summary List of gateways in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkloadNetworksListGatewaysResponse>
   */
  listGateways(resourceGroupName: string, privateCloudName: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkloadNetworksListGatewaysResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param callback The callback
   */
  listGateways(resourceGroupName: string, privateCloudName: string, callback: msRest.ServiceCallback<Models.WorkloadNetworkGatewayList>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The optional parameters
   * @param callback The callback
   */
  listGateways(resourceGroupName: string, privateCloudName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkloadNetworkGatewayList>): void;
  listGateways(resourceGroupName: string, privateCloudName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkloadNetworkGatewayList>, callback?: msRest.ServiceCallback<Models.WorkloadNetworkGatewayList>): Promise<Models.WorkloadNetworksListGatewaysResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        privateCloudName,
        options
      },
      listGatewaysOperationSpec,
      callback) as Promise<Models.WorkloadNetworksListGatewaysResponse>;
  }

  /**
   * @summary Get a gateway by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param gatewayId NSX Gateway identifier. Generally the same as the Gateway's display name
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkloadNetworksGetGatewayResponse>
   */
  getGateway(resourceGroupName: string, privateCloudName: string, gatewayId: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkloadNetworksGetGatewayResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param gatewayId NSX Gateway identifier. Generally the same as the Gateway's display name
   * @param callback The callback
   */
  getGateway(resourceGroupName: string, privateCloudName: string, gatewayId: string, callback: msRest.ServiceCallback<Models.WorkloadNetworkGateway>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param gatewayId NSX Gateway identifier. Generally the same as the Gateway's display name
   * @param options The optional parameters
   * @param callback The callback
   */
  getGateway(resourceGroupName: string, privateCloudName: string, gatewayId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkloadNetworkGateway>): void;
  getGateway(resourceGroupName: string, privateCloudName: string, gatewayId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkloadNetworkGateway>, callback?: msRest.ServiceCallback<Models.WorkloadNetworkGateway>): Promise<Models.WorkloadNetworksGetGatewayResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        privateCloudName,
        gatewayId,
        options
      },
      getGatewayOperationSpec,
      callback) as Promise<Models.WorkloadNetworksGetGatewayResponse>;
  }

  /**
   * @summary List of port mirroring profiles in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkloadNetworksListPortMirroringResponse>
   */
  listPortMirroring(resourceGroupName: string, privateCloudName: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkloadNetworksListPortMirroringResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param callback The callback
   */
  listPortMirroring(resourceGroupName: string, privateCloudName: string, callback: msRest.ServiceCallback<Models.WorkloadNetworkPortMirroringList>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The optional parameters
   * @param callback The callback
   */
  listPortMirroring(resourceGroupName: string, privateCloudName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkloadNetworkPortMirroringList>): void;
  listPortMirroring(resourceGroupName: string, privateCloudName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkloadNetworkPortMirroringList>, callback?: msRest.ServiceCallback<Models.WorkloadNetworkPortMirroringList>): Promise<Models.WorkloadNetworksListPortMirroringResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        privateCloudName,
        options
      },
      listPortMirroringOperationSpec,
      callback) as Promise<Models.WorkloadNetworksListPortMirroringResponse>;
  }

  /**
   * @summary Get a port mirroring profile by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param portMirroringId NSX Port Mirroring identifier. Generally the same as the Port Mirroring
   * display name
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkloadNetworksGetPortMirroringResponse>
   */
  getPortMirroring(resourceGroupName: string, privateCloudName: string, portMirroringId: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkloadNetworksGetPortMirroringResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param portMirroringId NSX Port Mirroring identifier. Generally the same as the Port Mirroring
   * display name
   * @param callback The callback
   */
  getPortMirroring(resourceGroupName: string, privateCloudName: string, portMirroringId: string, callback: msRest.ServiceCallback<Models.WorkloadNetworkPortMirroring>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param portMirroringId NSX Port Mirroring identifier. Generally the same as the Port Mirroring
   * display name
   * @param options The optional parameters
   * @param callback The callback
   */
  getPortMirroring(resourceGroupName: string, privateCloudName: string, portMirroringId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkloadNetworkPortMirroring>): void;
  getPortMirroring(resourceGroupName: string, privateCloudName: string, portMirroringId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkloadNetworkPortMirroring>, callback?: msRest.ServiceCallback<Models.WorkloadNetworkPortMirroring>): Promise<Models.WorkloadNetworksGetPortMirroringResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        privateCloudName,
        portMirroringId,
        options
      },
      getPortMirroringOperationSpec,
      callback) as Promise<Models.WorkloadNetworksGetPortMirroringResponse>;
  }

  /**
   * @summary Create a port mirroring profile by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param portMirroringId NSX Port Mirroring identifier. Generally the same as the Port Mirroring
   * display name
   * @param workloadNetworkPortMirroring NSX port mirroring
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkloadNetworksCreatePortMirroringResponse>
   */
  createPortMirroring(resourceGroupName: string, privateCloudName: string, portMirroringId: string, workloadNetworkPortMirroring: Models.WorkloadNetworkPortMirroring, options?: msRest.RequestOptionsBase): Promise<Models.WorkloadNetworksCreatePortMirroringResponse> {
    return this.beginCreatePortMirroring(resourceGroupName,privateCloudName,portMirroringId,workloadNetworkPortMirroring,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.WorkloadNetworksCreatePortMirroringResponse>;
  }

  /**
   * @summary Create or update a port mirroring profile by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param portMirroringId NSX Port Mirroring identifier. Generally the same as the Port Mirroring
   * display name
   * @param workloadNetworkPortMirroring NSX port mirroring
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkloadNetworksUpdatePortMirroringResponse>
   */
  updatePortMirroring(resourceGroupName: string, privateCloudName: string, portMirroringId: string, workloadNetworkPortMirroring: Models.WorkloadNetworkPortMirroring, options?: msRest.RequestOptionsBase): Promise<Models.WorkloadNetworksUpdatePortMirroringResponse> {
    return this.beginUpdatePortMirroring(resourceGroupName,privateCloudName,portMirroringId,workloadNetworkPortMirroring,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.WorkloadNetworksUpdatePortMirroringResponse>;
  }

  /**
   * @summary Delete a port mirroring profile by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param portMirroringId NSX Port Mirroring identifier. Generally the same as the Port Mirroring
   * display name
   * @param privateCloudName Name of the private cloud
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deletePortMirroring(resourceGroupName: string, portMirroringId: string, privateCloudName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {
    return this.beginDeletePortMirroring(resourceGroupName,portMirroringId,privateCloudName,options)
      .then(lroPoller => lroPoller.pollUntilFinished());
  }

  /**
   * @summary List of vm groups in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkloadNetworksListVMGroupsResponse>
   */
  listVMGroups(resourceGroupName: string, privateCloudName: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkloadNetworksListVMGroupsResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param callback The callback
   */
  listVMGroups(resourceGroupName: string, privateCloudName: string, callback: msRest.ServiceCallback<Models.WorkloadNetworkVMGroupsList>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The optional parameters
   * @param callback The callback
   */
  listVMGroups(resourceGroupName: string, privateCloudName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkloadNetworkVMGroupsList>): void;
  listVMGroups(resourceGroupName: string, privateCloudName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkloadNetworkVMGroupsList>, callback?: msRest.ServiceCallback<Models.WorkloadNetworkVMGroupsList>): Promise<Models.WorkloadNetworksListVMGroupsResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        privateCloudName,
        options
      },
      listVMGroupsOperationSpec,
      callback) as Promise<Models.WorkloadNetworksListVMGroupsResponse>;
  }

  /**
   * @summary Get a vm group by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param vmGroupId NSX VM Group identifier. Generally the same as the VM Group's display name
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkloadNetworksGetVMGroupResponse>
   */
  getVMGroup(resourceGroupName: string, privateCloudName: string, vmGroupId: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkloadNetworksGetVMGroupResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param vmGroupId NSX VM Group identifier. Generally the same as the VM Group's display name
   * @param callback The callback
   */
  getVMGroup(resourceGroupName: string, privateCloudName: string, vmGroupId: string, callback: msRest.ServiceCallback<Models.WorkloadNetworkVMGroup>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param vmGroupId NSX VM Group identifier. Generally the same as the VM Group's display name
   * @param options The optional parameters
   * @param callback The callback
   */
  getVMGroup(resourceGroupName: string, privateCloudName: string, vmGroupId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkloadNetworkVMGroup>): void;
  getVMGroup(resourceGroupName: string, privateCloudName: string, vmGroupId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkloadNetworkVMGroup>, callback?: msRest.ServiceCallback<Models.WorkloadNetworkVMGroup>): Promise<Models.WorkloadNetworksGetVMGroupResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        privateCloudName,
        vmGroupId,
        options
      },
      getVMGroupOperationSpec,
      callback) as Promise<Models.WorkloadNetworksGetVMGroupResponse>;
  }

  /**
   * @summary Create a vm group by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param vmGroupId NSX VM Group identifier. Generally the same as the VM Group's display name
   * @param workloadNetworkVMGroup NSX VM Group
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkloadNetworksCreateVMGroupResponse>
   */
  createVMGroup(resourceGroupName: string, privateCloudName: string, vmGroupId: string, workloadNetworkVMGroup: Models.WorkloadNetworkVMGroup, options?: msRest.RequestOptionsBase): Promise<Models.WorkloadNetworksCreateVMGroupResponse> {
    return this.beginCreateVMGroup(resourceGroupName,privateCloudName,vmGroupId,workloadNetworkVMGroup,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.WorkloadNetworksCreateVMGroupResponse>;
  }

  /**
   * @summary Create or update a vm group by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param vmGroupId NSX VM Group identifier. Generally the same as the VM Group's display name
   * @param workloadNetworkVMGroup NSX VM Group
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkloadNetworksUpdateVMGroupResponse>
   */
  updateVMGroup(resourceGroupName: string, privateCloudName: string, vmGroupId: string, workloadNetworkVMGroup: Models.WorkloadNetworkVMGroup, options?: msRest.RequestOptionsBase): Promise<Models.WorkloadNetworksUpdateVMGroupResponse> {
    return this.beginUpdateVMGroup(resourceGroupName,privateCloudName,vmGroupId,workloadNetworkVMGroup,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.WorkloadNetworksUpdateVMGroupResponse>;
  }

  /**
   * @summary Delete a vm group by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param vmGroupId NSX VM Group identifier. Generally the same as the VM Group's display name
   * @param privateCloudName Name of the private cloud
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteVMGroup(resourceGroupName: string, vmGroupId: string, privateCloudName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {
    return this.beginDeleteVMGroup(resourceGroupName,vmGroupId,privateCloudName,options)
      .then(lroPoller => lroPoller.pollUntilFinished());
  }

  /**
   * @summary List of virtual machines in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkloadNetworksListVirtualMachinesResponse>
   */
  listVirtualMachines(resourceGroupName: string, privateCloudName: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkloadNetworksListVirtualMachinesResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param callback The callback
   */
  listVirtualMachines(resourceGroupName: string, privateCloudName: string, callback: msRest.ServiceCallback<Models.WorkloadNetworkVirtualMachinesList>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The optional parameters
   * @param callback The callback
   */
  listVirtualMachines(resourceGroupName: string, privateCloudName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkloadNetworkVirtualMachinesList>): void;
  listVirtualMachines(resourceGroupName: string, privateCloudName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkloadNetworkVirtualMachinesList>, callback?: msRest.ServiceCallback<Models.WorkloadNetworkVirtualMachinesList>): Promise<Models.WorkloadNetworksListVirtualMachinesResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        privateCloudName,
        options
      },
      listVirtualMachinesOperationSpec,
      callback) as Promise<Models.WorkloadNetworksListVirtualMachinesResponse>;
  }

  /**
   * @summary Get a virtual machine by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param virtualMachineId NSX Virtual Machine identifier.
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkloadNetworksGetVirtualMachineResponse>
   */
  getVirtualMachine(resourceGroupName: string, privateCloudName: string, virtualMachineId: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkloadNetworksGetVirtualMachineResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param virtualMachineId NSX Virtual Machine identifier.
   * @param callback The callback
   */
  getVirtualMachine(resourceGroupName: string, privateCloudName: string, virtualMachineId: string, callback: msRest.ServiceCallback<Models.WorkloadNetworkVirtualMachine>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param virtualMachineId NSX Virtual Machine identifier.
   * @param options The optional parameters
   * @param callback The callback
   */
  getVirtualMachine(resourceGroupName: string, privateCloudName: string, virtualMachineId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkloadNetworkVirtualMachine>): void;
  getVirtualMachine(resourceGroupName: string, privateCloudName: string, virtualMachineId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkloadNetworkVirtualMachine>, callback?: msRest.ServiceCallback<Models.WorkloadNetworkVirtualMachine>): Promise<Models.WorkloadNetworksGetVirtualMachineResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        privateCloudName,
        virtualMachineId,
        options
      },
      getVirtualMachineOperationSpec,
      callback) as Promise<Models.WorkloadNetworksGetVirtualMachineResponse>;
  }

  /**
   * @summary Create a segment by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param segmentId NSX Segment identifier. Generally the same as the Segment's display name
   * @param workloadNetworkSegment NSX Segment
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginCreateSegments(resourceGroupName: string, privateCloudName: string, segmentId: string, workloadNetworkSegment: Models.WorkloadNetworkSegment, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        privateCloudName,
        segmentId,
        workloadNetworkSegment,
        options
      },
      beginCreateSegmentsOperationSpec,
      options);
  }

  /**
   * @summary Create or update a segment by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param segmentId NSX Segment identifier. Generally the same as the Segment's display name
   * @param workloadNetworkSegment NSX Segment
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginUpdateSegments(resourceGroupName: string, privateCloudName: string, segmentId: string, workloadNetworkSegment: Models.WorkloadNetworkSegment, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        privateCloudName,
        segmentId,
        workloadNetworkSegment,
        options
      },
      beginUpdateSegmentsOperationSpec,
      options);
  }

  /**
   * @summary Delete a segment by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param segmentId NSX Segment identifier. Generally the same as the Segment's display name
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeleteSegment(resourceGroupName: string, privateCloudName: string, segmentId: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        privateCloudName,
        segmentId,
        options
      },
      beginDeleteSegmentOperationSpec,
      options);
  }

  /**
   * @summary Create dhcp by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param dhcpId NSX DHCP identifier. Generally the same as the DHCP display name
   * @param workloadNetworkDhcp NSX DHCP
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginCreateDhcp(resourceGroupName: string, privateCloudName: string, dhcpId: string, workloadNetworkDhcp: Models.WorkloadNetworkDhcp, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        privateCloudName,
        dhcpId,
        workloadNetworkDhcp,
        options
      },
      beginCreateDhcpOperationSpec,
      options);
  }

  /**
   * @summary Create or update dhcp by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param dhcpId NSX DHCP identifier. Generally the same as the DHCP display name
   * @param workloadNetworkDhcp NSX DHCP
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginUpdateDhcp(resourceGroupName: string, privateCloudName: string, dhcpId: string, workloadNetworkDhcp: Models.WorkloadNetworkDhcp, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        privateCloudName,
        dhcpId,
        workloadNetworkDhcp,
        options
      },
      beginUpdateDhcpOperationSpec,
      options);
  }

  /**
   * @summary Delete dhcp by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param dhcpId NSX DHCP identifier. Generally the same as the DHCP display name
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeleteDhcp(resourceGroupName: string, privateCloudName: string, dhcpId: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        privateCloudName,
        dhcpId,
        options
      },
      beginDeleteDhcpOperationSpec,
      options);
  }

  /**
   * @summary Create a port mirroring profile by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param portMirroringId NSX Port Mirroring identifier. Generally the same as the Port Mirroring
   * display name
   * @param workloadNetworkPortMirroring NSX port mirroring
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginCreatePortMirroring(resourceGroupName: string, privateCloudName: string, portMirroringId: string, workloadNetworkPortMirroring: Models.WorkloadNetworkPortMirroring, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        privateCloudName,
        portMirroringId,
        workloadNetworkPortMirroring,
        options
      },
      beginCreatePortMirroringOperationSpec,
      options);
  }

  /**
   * @summary Create or update a port mirroring profile by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param portMirroringId NSX Port Mirroring identifier. Generally the same as the Port Mirroring
   * display name
   * @param workloadNetworkPortMirroring NSX port mirroring
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginUpdatePortMirroring(resourceGroupName: string, privateCloudName: string, portMirroringId: string, workloadNetworkPortMirroring: Models.WorkloadNetworkPortMirroring, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        privateCloudName,
        portMirroringId,
        workloadNetworkPortMirroring,
        options
      },
      beginUpdatePortMirroringOperationSpec,
      options);
  }

  /**
   * @summary Delete a port mirroring profile by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param portMirroringId NSX Port Mirroring identifier. Generally the same as the Port Mirroring
   * display name
   * @param privateCloudName Name of the private cloud
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeletePortMirroring(resourceGroupName: string, portMirroringId: string, privateCloudName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        portMirroringId,
        privateCloudName,
        options
      },
      beginDeletePortMirroringOperationSpec,
      options);
  }

  /**
   * @summary Create a vm group by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param vmGroupId NSX VM Group identifier. Generally the same as the VM Group's display name
   * @param workloadNetworkVMGroup NSX VM Group
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginCreateVMGroup(resourceGroupName: string, privateCloudName: string, vmGroupId: string, workloadNetworkVMGroup: Models.WorkloadNetworkVMGroup, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        privateCloudName,
        vmGroupId,
        workloadNetworkVMGroup,
        options
      },
      beginCreateVMGroupOperationSpec,
      options);
  }

  /**
   * @summary Create or update a vm group by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param vmGroupId NSX VM Group identifier. Generally the same as the VM Group's display name
   * @param workloadNetworkVMGroup NSX VM Group
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginUpdateVMGroup(resourceGroupName: string, privateCloudName: string, vmGroupId: string, workloadNetworkVMGroup: Models.WorkloadNetworkVMGroup, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        privateCloudName,
        vmGroupId,
        workloadNetworkVMGroup,
        options
      },
      beginUpdateVMGroupOperationSpec,
      options);
  }

  /**
   * @summary Delete a vm group by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param vmGroupId NSX VM Group identifier. Generally the same as the VM Group's display name
   * @param privateCloudName Name of the private cloud
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeleteVMGroup(resourceGroupName: string, vmGroupId: string, privateCloudName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        vmGroupId,
        privateCloudName,
        options
      },
      beginDeleteVMGroupOperationSpec,
      options);
  }

  /**
   * @summary List of segments in a private cloud workload network.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkloadNetworksListSegmentsNextResponse>
   */
  listSegmentsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkloadNetworksListSegmentsNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listSegmentsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.WorkloadNetworkSegmentsList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listSegmentsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkloadNetworkSegmentsList>): void;
  listSegmentsNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkloadNetworkSegmentsList>, callback?: msRest.ServiceCallback<Models.WorkloadNetworkSegmentsList>): Promise<Models.WorkloadNetworksListSegmentsNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listSegmentsNextOperationSpec,
      callback) as Promise<Models.WorkloadNetworksListSegmentsNextResponse>;
  }

  /**
   * @summary List dhcp in a private cloud workload network.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkloadNetworksListDhcpNextResponse>
   */
  listDhcpNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkloadNetworksListDhcpNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listDhcpNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.WorkloadNetworkDhcpList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listDhcpNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkloadNetworkDhcpList>): void;
  listDhcpNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkloadNetworkDhcpList>, callback?: msRest.ServiceCallback<Models.WorkloadNetworkDhcpList>): Promise<Models.WorkloadNetworksListDhcpNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listDhcpNextOperationSpec,
      callback) as Promise<Models.WorkloadNetworksListDhcpNextResponse>;
  }

  /**
   * @summary List of gateways in a private cloud workload network.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkloadNetworksListGatewaysNextResponse>
   */
  listGatewaysNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkloadNetworksListGatewaysNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listGatewaysNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.WorkloadNetworkGatewayList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listGatewaysNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkloadNetworkGatewayList>): void;
  listGatewaysNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkloadNetworkGatewayList>, callback?: msRest.ServiceCallback<Models.WorkloadNetworkGatewayList>): Promise<Models.WorkloadNetworksListGatewaysNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listGatewaysNextOperationSpec,
      callback) as Promise<Models.WorkloadNetworksListGatewaysNextResponse>;
  }

  /**
   * @summary List of port mirroring profiles in a private cloud workload network.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkloadNetworksListPortMirroringNextResponse>
   */
  listPortMirroringNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkloadNetworksListPortMirroringNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listPortMirroringNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.WorkloadNetworkPortMirroringList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listPortMirroringNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkloadNetworkPortMirroringList>): void;
  listPortMirroringNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkloadNetworkPortMirroringList>, callback?: msRest.ServiceCallback<Models.WorkloadNetworkPortMirroringList>): Promise<Models.WorkloadNetworksListPortMirroringNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listPortMirroringNextOperationSpec,
      callback) as Promise<Models.WorkloadNetworksListPortMirroringNextResponse>;
  }

  /**
   * @summary List of vm groups in a private cloud workload network.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkloadNetworksListVMGroupsNextResponse>
   */
  listVMGroupsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkloadNetworksListVMGroupsNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listVMGroupsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.WorkloadNetworkVMGroupsList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listVMGroupsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkloadNetworkVMGroupsList>): void;
  listVMGroupsNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkloadNetworkVMGroupsList>, callback?: msRest.ServiceCallback<Models.WorkloadNetworkVMGroupsList>): Promise<Models.WorkloadNetworksListVMGroupsNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listVMGroupsNextOperationSpec,
      callback) as Promise<Models.WorkloadNetworksListVMGroupsNextResponse>;
  }

  /**
   * @summary List of virtual machines in a private cloud workload network.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkloadNetworksListVirtualMachinesNextResponse>
   */
  listVirtualMachinesNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkloadNetworksListVirtualMachinesNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listVirtualMachinesNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.WorkloadNetworkVirtualMachinesList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listVirtualMachinesNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkloadNetworkVirtualMachinesList>): void;
  listVirtualMachinesNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkloadNetworkVirtualMachinesList>, callback?: msRest.ServiceCallback<Models.WorkloadNetworkVirtualMachinesList>): Promise<Models.WorkloadNetworksListVirtualMachinesNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listVirtualMachinesNextOperationSpec,
      callback) as Promise<Models.WorkloadNetworksListVirtualMachinesNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listSegmentsOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/segments",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.privateCloudName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkSegmentsList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getSegmentOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/segments/{segmentId}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.privateCloudName,
    Parameters.segmentId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkSegment
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listDhcpOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dhcpConfigurations",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.privateCloudName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkDhcpList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getDhcpOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dhcpConfigurations/{dhcpId}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.dhcpId,
    Parameters.privateCloudName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkDhcp
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listGatewaysOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/gateways",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.privateCloudName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkGatewayList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getGatewayOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/gateways/{gatewayId}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.privateCloudName,
    Parameters.gatewayId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkGateway
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listPortMirroringOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/portMirroringProfiles",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.privateCloudName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkPortMirroringList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getPortMirroringOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/portMirroringProfiles/{portMirroringId}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.privateCloudName,
    Parameters.portMirroringId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkPortMirroring
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listVMGroupsOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/vmGroups",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.privateCloudName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkVMGroupsList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getVMGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/vmGroups/{vmGroupId}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.privateCloudName,
    Parameters.vmGroupId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkVMGroup
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listVirtualMachinesOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/virtualMachines",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.privateCloudName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkVirtualMachinesList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getVirtualMachineOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/virtualMachines/{virtualMachineId}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.privateCloudName,
    Parameters.virtualMachineId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkVirtualMachine
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginCreateSegmentsOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/segments/{segmentId}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.privateCloudName,
    Parameters.segmentId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "workloadNetworkSegment",
    mapper: {
      ...Mappers.WorkloadNetworkSegment,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkSegment
    },
    201: {
      bodyMapper: Mappers.WorkloadNetworkSegment
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginUpdateSegmentsOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/segments/{segmentId}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.privateCloudName,
    Parameters.segmentId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "workloadNetworkSegment",
    mapper: {
      ...Mappers.WorkloadNetworkSegment,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkSegment
    },
    202: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginDeleteSegmentOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/segments/{segmentId}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.privateCloudName,
    Parameters.segmentId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    202: {},
    204: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginCreateDhcpOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dhcpConfigurations/{dhcpId}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.privateCloudName,
    Parameters.dhcpId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "workloadNetworkDhcp",
    mapper: {
      ...Mappers.WorkloadNetworkDhcp,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkDhcp
    },
    201: {
      bodyMapper: Mappers.WorkloadNetworkDhcp
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginUpdateDhcpOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dhcpConfigurations/{dhcpId}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.privateCloudName,
    Parameters.dhcpId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "workloadNetworkDhcp",
    mapper: {
      ...Mappers.WorkloadNetworkDhcp,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkDhcp
    },
    202: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginDeleteDhcpOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dhcpConfigurations/{dhcpId}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.privateCloudName,
    Parameters.dhcpId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    202: {},
    204: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginCreatePortMirroringOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/portMirroringProfiles/{portMirroringId}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.privateCloudName,
    Parameters.portMirroringId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "workloadNetworkPortMirroring",
    mapper: {
      ...Mappers.WorkloadNetworkPortMirroring,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkPortMirroring
    },
    201: {
      bodyMapper: Mappers.WorkloadNetworkPortMirroring
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginUpdatePortMirroringOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/portMirroringProfiles/{portMirroringId}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.privateCloudName,
    Parameters.portMirroringId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "workloadNetworkPortMirroring",
    mapper: {
      ...Mappers.WorkloadNetworkPortMirroring,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkPortMirroring
    },
    202: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginDeletePortMirroringOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/portMirroringProfiles/{portMirroringId}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.portMirroringId,
    Parameters.privateCloudName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    202: {},
    204: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginCreateVMGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/vmGroups/{vmGroupId}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.privateCloudName,
    Parameters.vmGroupId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "workloadNetworkVMGroup",
    mapper: {
      ...Mappers.WorkloadNetworkVMGroup,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkVMGroup
    },
    201: {
      bodyMapper: Mappers.WorkloadNetworkVMGroup
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginUpdateVMGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/vmGroups/{vmGroupId}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.privateCloudName,
    Parameters.vmGroupId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "workloadNetworkVMGroup",
    mapper: {
      ...Mappers.WorkloadNetworkVMGroup,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkVMGroup
    },
    202: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginDeleteVMGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/vmGroups/{vmGroupId}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.vmGroupId,
    Parameters.privateCloudName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    202: {},
    204: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listSegmentsNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkSegmentsList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listDhcpNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkDhcpList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listGatewaysNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkGatewayList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listPortMirroringNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkPortMirroringList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listVMGroupsNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkVMGroupsList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listVirtualMachinesNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkVirtualMachinesList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
