/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/virtualMachinesMappers";
import * as Parameters from "../models/parameters";
import { AvsClientContext } from "../avsClientContext";

/** Class representing a VirtualMachines. */
export class VirtualMachines {
  private readonly client: AvsClientContext;

  /**
   * Create a VirtualMachines.
   * @param {AvsClientContext} client Reference to the service client.
   */
  constructor(client: AvsClientContext) {
    this.client = client;
  }

  /**
   * @summary List of virtual machines in a private cloud cluster
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param clusterName Name of the cluster in the private cloud
   * @param [options] The optional parameters
   * @returns Promise<Models.VirtualMachinesListResponse>
   */
  list(resourceGroupName: string, privateCloudName: string, clusterName: string, options?: msRest.RequestOptionsBase): Promise<Models.VirtualMachinesListResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param clusterName Name of the cluster in the private cloud
   * @param callback The callback
   */
  list(resourceGroupName: string, privateCloudName: string, clusterName: string, callback: msRest.ServiceCallback<Models.VirtualMachinesList>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param clusterName Name of the cluster in the private cloud
   * @param options The optional parameters
   * @param callback The callback
   */
  list(resourceGroupName: string, privateCloudName: string, clusterName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.VirtualMachinesList>): void;
  list(resourceGroupName: string, privateCloudName: string, clusterName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.VirtualMachinesList>, callback?: msRest.ServiceCallback<Models.VirtualMachinesList>): Promise<Models.VirtualMachinesListResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        privateCloudName,
        clusterName,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.VirtualMachinesListResponse>;
  }

  /**
   * @summary Get a virtual machine by id in a private cloud cluster
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param clusterName Name of the cluster in the private cloud
   * @param virtualMachineId Virtual Machine identifier
   * @param [options] The optional parameters
   * @returns Promise<Models.VirtualMachinesGetResponse>
   */
  get(resourceGroupName: string, privateCloudName: string, clusterName: string, virtualMachineId: string, options?: msRest.RequestOptionsBase): Promise<Models.VirtualMachinesGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param clusterName Name of the cluster in the private cloud
   * @param virtualMachineId Virtual Machine identifier
   * @param callback The callback
   */
  get(resourceGroupName: string, privateCloudName: string, clusterName: string, virtualMachineId: string, callback: msRest.ServiceCallback<Models.VirtualMachine>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param clusterName Name of the cluster in the private cloud
   * @param virtualMachineId Virtual Machine identifier
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, privateCloudName: string, clusterName: string, virtualMachineId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.VirtualMachine>): void;
  get(resourceGroupName: string, privateCloudName: string, clusterName: string, virtualMachineId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.VirtualMachine>, callback?: msRest.ServiceCallback<Models.VirtualMachine>): Promise<Models.VirtualMachinesGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        privateCloudName,
        clusterName,
        virtualMachineId,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.VirtualMachinesGetResponse>;
  }

  /**
   * @summary Enable or disable DRS-driven VM movement restriction
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param clusterName Name of the cluster in the private cloud
   * @param virtualMachineId Virtual Machine identifier
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  restrictMovement(resourceGroupName: string, privateCloudName: string, clusterName: string, virtualMachineId: string, options?: Models.VirtualMachinesRestrictMovementOptionalParams): Promise<msRest.RestResponse> {
    return this.beginRestrictMovement(resourceGroupName,privateCloudName,clusterName,virtualMachineId,options)
      .then(lroPoller => lroPoller.pollUntilFinished());
  }

  /**
   * @summary Enable or disable DRS-driven VM movement restriction
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param clusterName Name of the cluster in the private cloud
   * @param virtualMachineId Virtual Machine identifier
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginRestrictMovement(resourceGroupName: string, privateCloudName: string, clusterName: string, virtualMachineId: string, options?: Models.VirtualMachinesBeginRestrictMovementOptionalParams): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        privateCloudName,
        clusterName,
        virtualMachineId,
        options
      },
      beginRestrictMovementOperationSpec,
      options);
  }

  /**
   * @summary List of virtual machines in a private cloud cluster
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.VirtualMachinesListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.VirtualMachinesListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.VirtualMachinesList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.VirtualMachinesList>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.VirtualMachinesList>, callback?: msRest.ServiceCallback<Models.VirtualMachinesList>): Promise<Models.VirtualMachinesListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.VirtualMachinesListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/virtualMachines",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.privateCloudName,
    Parameters.clusterName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.VirtualMachinesList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/virtualMachines/{virtualMachineId}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.privateCloudName,
    Parameters.clusterName,
    Parameters.virtualMachineId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.VirtualMachine
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginRestrictMovementOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/virtualMachines/{virtualMachineId}/restrictMovement",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.privateCloudName,
    Parameters.clusterName,
    Parameters.virtualMachineId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: {
      restrictMovement: [
        "options",
        "restrictMovementParameter"
      ]
    },
    mapper: {
      ...Mappers.VirtualMachineRestrictMovement,
      required: true
    }
  },
  responses: {
    202: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.VirtualMachinesList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
