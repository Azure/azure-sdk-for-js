/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Subscription trial availability
 */
export interface Trial {
  /**
   * Trial status. Possible values include: 'TrialAvailable', 'TrialUsed', 'TrialDisabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: TrialStatus;
  /**
   * Number of trial hosts available
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly availableHosts?: number;
}

/**
 * Subscription quotas
 */
export interface Quota {
  /**
   * Remaining hosts quota by sku type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hostsRemaining?: { [propertyName: string]: number };
  /**
   * Host quota is active for current subscription. Possible values include: 'Enabled', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly quotaEnabled?: QuotaEnabled;
}

/**
 * The core properties of ARM resources
 */
export interface Resource extends BaseResource {
  /**
   * Resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * The resource model definition for a ARM tracked top level resource
 */
export interface TrackedResource extends Resource {
  /**
   * Resource location
   */
  location?: string;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * The resource model definition for a ARM proxy resource
 */
export interface ProxyResource extends Resource {
}

/**
 * The resource management error additional info.
 */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly info?: any;
}

/**
 * Common error response for all Azure Resource Manager APIs to return error details for failed
 * operations. (This also follows the OData error response format.)
 * @summary Error Response
 */
export interface ErrorResponse {
  /**
   * The error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The error target.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly target?: string;
  /**
   * The error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: ErrorResponse[];
  /**
   * The error additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/**
 * Contains the localized display information for this operation
 */
export interface OperationDisplay {
  /**
   * Localized friendly form of the resource provider name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: string;
  /**
   * Localized friendly form of the resource type related to this operation
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resource?: string;
  /**
   * Localized friendly name for the operation
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operation?: string;
  /**
   * Localized friendly description for the operation
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
}

/**
 * Specifications of the Log for Azure Monitoring
 */
export interface LogSpecification {
  /**
   * Name of the log
   */
  name?: string;
  /**
   * Localized friendly display name of the log
   */
  displayName?: string;
  /**
   * Blob duration of the log
   */
  blobDuration?: string;
}

/**
 * Specifications of the Dimension of metrics
 */
export interface MetricDimension {
  /**
   * Name of the dimension
   */
  name?: string;
  /**
   * Localized friendly display name of the dimension
   */
  displayName?: string;
  /**
   * Name of the dimension as it appears in MDM
   */
  internalName?: string;
  /**
   * A boolean flag indicating whether this dimension should be included for the shoebox export
   * scenario
   */
  toBeExportedForShoebox?: boolean;
}

/**
 * Specifications of the Metrics for Azure Monitoring
 */
export interface MetricSpecification {
  /**
   * Name of the metric
   */
  name?: string;
  /**
   * Localized friendly display name of the metric
   */
  displayName?: string;
  /**
   * Localized friendly description of the metric
   */
  displayDescription?: string;
  /**
   * Unit that makes sense for the metric
   */
  unit?: string;
  /**
   * Name of the metric category that the metric belongs to. A metric can only belong to a single
   * category.
   */
  category?: string;
  /**
   * Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.
   */
  aggregationType?: string;
  /**
   * Supported aggregation types
   */
  supportedAggregationTypes?: string[];
  /**
   * Supported time grain types
   */
  supportedTimeGrainTypes?: string[];
  /**
   * Optional. If set to true, then zero will be returned for time duration where no metric is
   * emitted/published.
   */
  fillGapWithZero?: boolean;
  /**
   * Dimensions of the metric
   */
  dimensions?: MetricDimension[];
  /**
   * Whether or not the service is using regional MDM accounts.
   */
  enableRegionalMdmAccount?: string;
  /**
   * The name of the MDM account.
   */
  sourceMdmAccount?: string;
  /**
   * The name of the MDM namespace.
   */
  sourceMdmNamespace?: string;
}

/**
 * Service specification payload
 */
export interface ServiceSpecification {
  /**
   * Specifications of the Log for Azure Monitoring
   */
  logSpecifications?: LogSpecification[];
  /**
   * Specifications of the Metrics for Azure Monitoring
   */
  metricSpecifications?: MetricSpecification[];
}

/**
 * Extra Operation properties
 */
export interface OperationProperties {
  /**
   * Service specifications of the operation
   */
  serviceSpecification?: ServiceSpecification;
}

/**
 * A REST API operation
 */
export interface Operation {
  /**
   * Name of the operation being performed on this object
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Contains the localized display information for this operation
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly display?: OperationDisplay;
  /**
   * Gets or sets a value indicating whether the operation is a data action or not
   */
  isDataAction?: boolean;
  /**
   * Origin of the operation
   */
  origin?: string;
  /**
   * Properties of the operation
   */
  properties?: OperationProperties;
}

/**
 * ExpressRoute Circuit Authorization
 */
export interface ExpressRouteAuthorization extends Resource {
  /**
   * The state of the  ExpressRoute Circuit Authorization provisioning. Possible values include:
   * 'Succeeded', 'Failed', 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ExpressRouteAuthorizationProvisioningState;
  /**
   * The ID of the ExpressRoute Circuit Authorization
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly expressRouteAuthorizationId?: string;
  /**
   * The key of the ExpressRoute Circuit Authorization
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly expressRouteAuthorizationKey?: string;
  /**
   * The ID of the ExpressRoute Circuit
   */
  expressRouteId?: string;
}

/**
 * An ExpressRoute Circuit
 */
export interface Circuit {
  /**
   * CIDR of primary subnet
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly primarySubnet?: string;
  /**
   * CIDR of secondary subnet
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly secondarySubnet?: string;
  /**
   * Identifier of the ExpressRoute Circuit (Microsoft Colo only)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly expressRouteID?: string;
  /**
   * ExpressRoute Circuit private peering identifier
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly expressRoutePrivatePeeringID?: string;
}

/**
 * An Encryption Key
 */
export interface EncryptionKeyVaultProperties {
  /**
   * The name of the key.
   */
  keyName?: string;
  /**
   * The version of the key.
   */
  keyVersion?: string;
  /**
   * The URL of the vault.
   */
  keyVaultUrl?: string;
  /**
   * The state of key provided. Possible values include: 'Connected', 'AccessDenied'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly keyState?: EncryptionKeyStatus;
  /**
   * Property of the key if user provided or auto detected. Possible values include: 'Fixed',
   * 'AutoDetected'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly versionType?: EncryptionVersionType;
}

/**
 * The properties of customer managed encryption key
 */
export interface Encryption {
  /**
   * Status of customer managed encryption key. Possible values include: 'Enabled', 'Disabled'
   */
  status?: EncryptionState;
  /**
   * The key vault where the encryption key is stored
   */
  keyVaultProperties?: EncryptionKeyVaultProperties;
}

/**
 * Endpoint addresses
 */
export interface Endpoints {
  /**
   * Endpoint for the NSX-T Data Center manager
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nsxtManager?: string;
  /**
   * Endpoint for Virtual Center Server Appliance
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly vcsa?: string;
  /**
   * Endpoint for the HCX Cloud Manager
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hcxCloudManager?: string;
}

/**
 * vCenter Single Sign On Identity Source
 */
export interface IdentitySource {
  /**
   * The name of the identity source
   */
  name?: string;
  /**
   * The domain's NetBIOS name
   */
  alias?: string;
  /**
   * The domain's dns name
   */
  domain?: string;
  /**
   * The base distinguished name for users
   */
  baseUserDN?: string;
  /**
   * The base distinguished name for groups
   */
  baseGroupDN?: string;
  /**
   * Primary server URL
   */
  primaryServer?: string;
  /**
   * Secondary server URL
   */
  secondaryServer?: string;
  /**
   * Protect LDAP communication using SSL certificate (LDAPS). Possible values include: 'Enabled',
   * 'Disabled'
   */
  ssl?: SslEnum;
  /**
   * The ID of an Active Directory user with a minimum of read-only access to Base DN for users and
   * group
   */
  username?: string;
  /**
   * The password of the Active Directory user with a minimum of read-only access to Base DN for
   * users and groups.
   */
  password?: string;
}

/**
 * The properties describing private cloud availability zone distribution
 */
export interface AvailabilityProperties {
  /**
   * The availability strategy for the private cloud. Possible values include: 'SingleZone',
   * 'DualZone'
   */
  strategy?: AvailabilityStrategy;
  /**
   * The primary availability zone for the private cloud
   */
  zone?: number;
  /**
   * The secondary availability zone for the private cloud
   */
  secondaryZone?: number;
}

/**
 * The resource model definition representing SKU
 */
export interface Sku {
  /**
   * The name of the SKU.
   */
  name: string;
}

/**
 * Identity for the virtual machine.
 */
export interface PrivateCloudIdentity {
  /**
   * The principal ID of private cloud identity. This property will only be provided for a system
   * assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The tenant ID associated with the private cloud. This property will only be provided for a
   * system assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
  /**
   * The type of identity used for the private cloud. The type 'SystemAssigned' refers to an
   * implicitly created identity. The type 'None' will remove any identities from the Private
   * Cloud. Possible values include: 'SystemAssigned', 'None'
   */
  type?: ResourceIdentityType;
}

/**
 * A private cloud resource
 */
export interface PrivateCloud extends TrackedResource {
  /**
   * The private cloud SKU
   */
  sku: Sku;
  /**
   * The default cluster used for management
   */
  managementCluster?: ManagementCluster;
  /**
   * Connectivity to internet is enabled or disabled. Possible values include: 'Enabled',
   * 'Disabled'. Default value: 'Disabled'.
   */
  internet?: InternetEnum;
  /**
   * vCenter Single Sign On Identity Sources
   */
  identitySources?: IdentitySource[];
  /**
   * Properties describing how the cloud is distributed across availability zones
   */
  availability?: AvailabilityProperties;
  /**
   * Customer managed key encryption, can be enabled or disabled
   */
  encryption?: Encryption;
  /**
   * The provisioning state. Possible values include: 'Succeeded', 'Failed', 'Cancelled',
   * 'Pending', 'Building', 'Deleting', 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: PrivateCloudProvisioningState;
  /**
   * An ExpressRoute Circuit
   */
  circuit?: Circuit;
  /**
   * The endpoints
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endpoints?: Endpoints;
  /**
   * The block of addresses should be unique across VNet in your subscription as well as
   * on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0
   * and 255, and X is between 0 and 22
   */
  networkBlock: string;
  /**
   * Network used to access vCenter Server and NSX-T Manager
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly managementNetwork?: string;
  /**
   * Used for virtual machine cold migration, cloning, and snapshot migration
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningNetwork?: string;
  /**
   * Used for live migration of virtual machines
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly vmotionNetwork?: string;
  /**
   * Optionally, set the vCenter admin password when the private cloud is created
   */
  vcenterPassword?: string;
  /**
   * Optionally, set the NSX-T Manager password when the private cloud is created
   */
  nsxtPassword?: string;
  /**
   * Thumbprint of the vCenter Server SSL certificate
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly vcenterCertificateThumbprint?: string;
  /**
   * Thumbprint of the NSX-T Manager SSL certificate
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nsxtCertificateThumbprint?: string;
  /**
   * Array of cloud link IDs from other clouds that connect to this one
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly externalCloudLinks?: string[];
  /**
   * A secondary expressRoute circuit from a separate AZ. Only present in a stretched private cloud
   */
  secondaryCircuit?: Circuit;
  /**
   * The identity of the private cloud, if configured.
   */
  identity?: PrivateCloudIdentity;
}

/**
 * The common properties of a cluster
 */
export interface CommonClusterProperties {
  /**
   * The cluster size
   */
  clusterSize?: number;
  /**
   * The state of the cluster provisioning. Possible values include: 'Succeeded', 'Failed',
   * 'Cancelled', 'Deleting', 'Updating'
   */
  provisioningState?: ClusterProvisioningState;
  /**
   * The identity
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly clusterId?: number;
  /**
   * The hosts
   */
  hosts?: string[];
}

/**
 * The properties of a management cluster
 */
export interface ManagementCluster extends CommonClusterProperties {
}

/**
 * An update to a private cloud resource
 */
export interface PrivateCloudUpdate {
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * The default cluster used for management
   */
  managementCluster?: ManagementCluster;
  /**
   * Connectivity to internet is enabled or disabled. Possible values include: 'Enabled',
   * 'Disabled'. Default value: 'Disabled'.
   */
  internet?: InternetEnum;
  /**
   * vCenter Single Sign On Identity Sources
   */
  identitySources?: IdentitySource[];
  /**
   * Properties describing how the cloud is distributed across availability zones
   */
  availability?: AvailabilityProperties;
  /**
   * Customer managed key encryption, can be enabled or disabled
   */
  encryption?: Encryption;
  /**
   * The identity of the private cloud, if configured.
   */
  identity?: PrivateCloudIdentity;
}

/**
 * A cluster resource
 */
export interface Cluster extends Resource {
  /**
   * The cluster SKU
   */
  sku: Sku;
  /**
   * The cluster size
   */
  clusterSize?: number;
  /**
   * The state of the cluster provisioning. Possible values include: 'Succeeded', 'Failed',
   * 'Cancelled', 'Deleting', 'Updating'
   */
  provisioningState?: ClusterProvisioningState;
  /**
   * The identity
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly clusterId?: number;
  /**
   * The hosts
   */
  hosts?: string[];
}

/**
 * An update of a cluster resource
 */
export interface ClusterUpdate {
  /**
   * The cluster size
   */
  clusterSize?: number;
  /**
   * The hosts
   */
  hosts?: string[];
}

/**
 * Contains the possible cases for AddonProperties.
 */
export type AddonPropertiesUnion = AddonProperties | AddonSrmProperties | AddonVrProperties | AddonHcxProperties;

/**
 * The properties of an addon
 */
export interface AddonProperties {
  /**
   * Polymorphic Discriminator
   */
  addonType: "AddonProperties";
  /**
   * The state of the addon provisioning. Possible values include: 'Succeeded', 'Failed',
   * 'Cancelled', 'Building', 'Deleting', 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: AddonProvisioningState;
}

/**
 * An addon resource
 */
export interface Addon extends Resource {
  /**
   * The properties of an addon resource
   */
  properties?: AddonPropertiesUnion;
}

/**
 * The properties of a Site Recovery Manager (SRM) addon
 */
export interface AddonSrmProperties {
  /**
   * Polymorphic Discriminator
   */
  addonType: "SRM";
  /**
   * The state of the addon provisioning. Possible values include: 'Succeeded', 'Failed',
   * 'Cancelled', 'Building', 'Deleting', 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: AddonProvisioningState;
  /**
   * The Site Recovery Manager (SRM) license
   */
  licenseKey?: string;
}

/**
 * The properties of a vSphere Replication (VR) addon
 */
export interface AddonVrProperties {
  /**
   * Polymorphic Discriminator
   */
  addonType: "VR";
  /**
   * The state of the addon provisioning. Possible values include: 'Succeeded', 'Failed',
   * 'Cancelled', 'Building', 'Deleting', 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: AddonProvisioningState;
  /**
   * The vSphere Replication Server (VRS) count
   */
  vrsCount: number;
}

/**
 * The properties of an HCX addon
 */
export interface AddonHcxProperties {
  /**
   * Polymorphic Discriminator
   */
  addonType: "HCX";
  /**
   * The state of the addon provisioning. Possible values include: 'Succeeded', 'Failed',
   * 'Cancelled', 'Building', 'Deleting', 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: AddonProvisioningState;
  /**
   * The HCX offer, example VMware MaaS Cloud Provider (Enterprise)
   */
  offer: string;
}

/**
 * An Azure NetApp Files volume from Microsoft.NetApp provider
 */
export interface NetAppVolume {
  /**
   * Azure resource ID of the NetApp volume
   */
  id: string;
}

/**
 * An iSCSI volume from Microsoft.StoragePool provider
 */
export interface DiskPoolVolume {
  /**
   * Azure resource ID of the iSCSI target
   */
  targetId: string;
  /**
   * Name of the LUN to be used for datastore
   */
  lunName: string;
  /**
   * Mode that describes whether the LUN has to be mounted as a datastore or attached as a LUN.
   * Possible values include: 'MOUNT', 'ATTACH'. Default value: 'MOUNT'.
   */
  mountOption?: MountOptionEnum;
  /**
   * Device path
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly path?: string;
}

/**
 * A datastore resource
 */
export interface Datastore extends Resource {
  /**
   * The state of the datastore provisioning. Possible values include: 'Succeeded', 'Failed',
   * 'Cancelled', 'Pending', 'Creating', 'Updating', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: DatastoreProvisioningState;
  /**
   * An Azure NetApp Files volume
   */
  netAppVolume?: NetAppVolume;
  /**
   * An iSCSI volume
   */
  diskPoolVolume?: DiskPoolVolume;
  /**
   * The operational status of the datastore. Possible values include: 'Unknown', 'Accessible',
   * 'Inaccessible', 'Attached', 'Detached', 'LostCommunication', 'DeadOrError'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: DatastoreStatus;
}

/**
 * Administrative credentials for accessing vCenter and NSX-T
 */
export interface AdminCredentials {
  /**
   * NSX-T Manager username
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nsxtUsername?: string;
  /**
   * NSX-T Manager password
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nsxtPassword?: string;
  /**
   * vCenter admin username
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly vcenterUsername?: string;
  /**
   * vCenter admin password
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly vcenterPassword?: string;
}

/**
 * An HCX Enterprise Site resource
 */
export interface HcxEnterpriseSite extends Resource {
  /**
   * The activation key
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly activationKey?: string;
  /**
   * The status of the HCX Enterprise Site. Possible values include: 'Available', 'Consumed',
   * 'Deactivated', 'Deleted'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: HcxEnterpriseSiteStatus;
}

/**
 * A global reach connection resource
 */
export interface GlobalReachConnection extends Resource {
  /**
   * The state of the  ExpressRoute Circuit Authorization provisioning. Possible values include:
   * 'Succeeded', 'Failed', 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: GlobalReachConnectionProvisioningState;
  /**
   * The network used for global reach carved out from the original network block provided for the
   * private cloud
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly addressPrefix?: string;
  /**
   * Authorization key from the peer express route used for the global reach connection
   */
  authorizationKey?: string;
  /**
   * The connection status of the global reach connection. Possible values include: 'Connected',
   * 'Connecting', 'Disconnected'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly circuitConnectionStatus?: GlobalReachConnectionStatus;
  /**
   * Identifier of the ExpressRoute Circuit to peer with in the global reach connection
   */
  peerExpressRouteCircuit?: string;
  /**
   * The ID of the Private Cloud's ExpressRoute Circuit that is participating in the global reach
   * connection
   */
  expressRouteId?: string;
}

/**
 * A cloud link resource
 */
export interface CloudLink extends Resource {
  /**
   * The state of the cloud link. Possible values include: 'Active', 'Building', 'Deleting',
   * 'Failed', 'Disconnected'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CloudLinkStatus;
  /**
   * Identifier of the other private cloud participating in the link.
   */
  linkedCloud?: string;
}

/**
 * Subnet configuration for segment
 */
export interface WorkloadNetworkSegmentSubnet {
  /**
   * DHCP Range assigned for subnet.
   */
  dhcpRanges?: string[];
  /**
   * Gateway address.
   */
  gatewayAddress?: string;
}

/**
 * Ports and any VIF attached to segment.
 */
export interface WorkloadNetworkSegmentPortVif {
  /**
   * Name of port or VIF attached to segment.
   */
  portName?: string;
}

/**
 * NSX Segment
 */
export interface WorkloadNetworkSegment extends ProxyResource {
  /**
   * Display name of the segment.
   */
  displayName?: string;
  /**
   * Gateway which to connect segment to.
   */
  connectedGateway?: string;
  /**
   * Subnet which to connect segment to.
   */
  subnet?: WorkloadNetworkSegmentSubnet;
  /**
   * Port Vif which segment is associated with.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly portVif?: WorkloadNetworkSegmentPortVif[];
  /**
   * Segment status. Possible values include: 'SUCCESS', 'FAILURE'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: SegmentStatusEnum;
  /**
   * The provisioning state. Possible values include: 'Succeeded', 'Failed', 'Building',
   * 'Deleting', 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: WorkloadNetworkSegmentProvisioningState;
  /**
   * NSX revision number.
   */
  revision?: number;
}

/**
 * Contains the possible cases for WorkloadNetworkDhcpEntity.
 */
export type WorkloadNetworkDhcpEntityUnion = WorkloadNetworkDhcpEntity | WorkloadNetworkDhcpServer | WorkloadNetworkDhcpRelay;

/**
 * Base class for WorkloadNetworkDhcpServer and WorkloadNetworkDhcpRelay to inherit from
 */
export interface WorkloadNetworkDhcpEntity {
  /**
   * Polymorphic Discriminator
   */
  dhcpType: "WorkloadNetworkDhcpEntity";
  /**
   * Display name of the DHCP entity.
   */
  displayName?: string;
  /**
   * NSX Segments consuming DHCP.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly segments?: string[];
  /**
   * The provisioning state. Possible values include: 'Succeeded', 'Failed', 'Building',
   * 'Deleting', 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: WorkloadNetworkDhcpProvisioningState;
  /**
   * NSX revision number.
   */
  revision?: number;
}

/**
 * NSX DHCP Server
 */
export interface WorkloadNetworkDhcpServer {
  /**
   * Polymorphic Discriminator
   */
  dhcpType: "SERVER";
  /**
   * Display name of the DHCP entity.
   */
  displayName?: string;
  /**
   * NSX Segments consuming DHCP.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly segments?: string[];
  /**
   * The provisioning state. Possible values include: 'Succeeded', 'Failed', 'Building',
   * 'Deleting', 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: WorkloadNetworkDhcpProvisioningState;
  /**
   * NSX revision number.
   */
  revision?: number;
  /**
   * DHCP Server Address.
   */
  serverAddress?: string;
  /**
   * DHCP Server Lease Time.
   */
  leaseTime?: number;
}

/**
 * NSX DHCP Relay
 */
export interface WorkloadNetworkDhcpRelay {
  /**
   * Polymorphic Discriminator
   */
  dhcpType: "RELAY";
  /**
   * Display name of the DHCP entity.
   */
  displayName?: string;
  /**
   * NSX Segments consuming DHCP.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly segments?: string[];
  /**
   * The provisioning state. Possible values include: 'Succeeded', 'Failed', 'Building',
   * 'Deleting', 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: WorkloadNetworkDhcpProvisioningState;
  /**
   * NSX revision number.
   */
  revision?: number;
  /**
   * DHCP Relay Addresses. Max 3.
   */
  serverAddresses?: string[];
}

/**
 * NSX DHCP
 */
export interface WorkloadNetworkDhcp extends ProxyResource {
  /**
   * DHCP properties.
   */
  properties?: WorkloadNetworkDhcpEntityUnion;
}

/**
 * NSX Port Mirroring
 */
export interface WorkloadNetworkPortMirroring extends ProxyResource {
  /**
   * Display name of the port mirroring profile.
   */
  displayName?: string;
  /**
   * Direction of port mirroring profile. Possible values include: 'INGRESS', 'EGRESS',
   * 'BIDIRECTIONAL'
   */
  direction?: PortMirroringDirectionEnum;
  /**
   * Source VM Group.
   */
  source?: string;
  /**
   * Destination VM Group.
   */
  destination?: string;
  /**
   * Port Mirroring Status. Possible values include: 'SUCCESS', 'FAILURE'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: PortMirroringStatusEnum;
  /**
   * The provisioning state. Possible values include: 'Succeeded', 'Failed', 'Building',
   * 'Deleting', 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: WorkloadNetworkPortMirroringProvisioningState;
  /**
   * NSX revision number.
   */
  revision?: number;
}

/**
 * NSX VM Group
 */
export interface WorkloadNetworkVMGroup extends ProxyResource {
  /**
   * Display name of the VM group.
   */
  displayName?: string;
  /**
   * Virtual machine members of this group.
   */
  members?: string[];
  /**
   * VM Group status. Possible values include: 'SUCCESS', 'FAILURE'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: VMGroupStatusEnum;
  /**
   * The provisioning state. Possible values include: 'Succeeded', 'Failed', 'Building',
   * 'Deleting', 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: WorkloadNetworkVMGroupProvisioningState;
  /**
   * NSX revision number.
   */
  revision?: number;
}

/**
 * NSX Virtual Machine
 */
export interface WorkloadNetworkVirtualMachine extends ProxyResource {
  /**
   * Display name of the VM.
   */
  displayName?: string;
  /**
   * Virtual machine type. Possible values include: 'REGULAR', 'EDGE', 'SERVICE'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly vmType?: VMTypeEnum;
}

/**
 * NSX Gateway.
 */
export interface WorkloadNetworkGateway extends ProxyResource {
  /**
   * Display name of the DHCP entity.
   */
  displayName?: string;
  /**
   * NSX Gateway Path.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly path?: string;
}

/**
 * NSX DNS Service
 */
export interface WorkloadNetworkDnsService extends ProxyResource {
  /**
   * Display name of the DNS Service.
   */
  displayName?: string;
  /**
   * DNS service IP of the DNS Service.
   */
  dnsServiceIp?: string;
  /**
   * Default DNS zone of the DNS Service.
   */
  defaultDnsZone?: string;
  /**
   * FQDN zones of the DNS Service.
   */
  fqdnZones?: string[];
  /**
   * DNS Service log level. Possible values include: 'DEBUG', 'INFO', 'WARNING', 'ERROR', 'FATAL'
   */
  logLevel?: DnsServiceLogLevelEnum;
  /**
   * DNS Service status. Possible values include: 'SUCCESS', 'FAILURE'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: DnsServiceStatusEnum;
  /**
   * The provisioning state. Possible values include: 'Succeeded', 'Failed', 'Building',
   * 'Deleting', 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: WorkloadNetworkDnsServiceProvisioningState;
  /**
   * NSX revision number.
   */
  revision?: number;
}

/**
 * NSX DNS Zone
 */
export interface WorkloadNetworkDnsZone extends ProxyResource {
  /**
   * Display name of the DNS Zone.
   */
  displayName?: string;
  /**
   * Domain names of the DNS Zone.
   */
  domain?: string[];
  /**
   * DNS Server IP array of the DNS Zone.
   */
  dnsServerIps?: string[];
  /**
   * Source IP of the DNS Zone.
   */
  sourceIp?: string;
  /**
   * Number of DNS Services using the DNS zone.
   */
  dnsServices?: number;
  /**
   * The provisioning state. Possible values include: 'Succeeded', 'Failed', 'Building',
   * 'Deleting', 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: WorkloadNetworkDnsZoneProvisioningState;
  /**
   * NSX revision number.
   */
  revision?: number;
}

/**
 * NSX Public IP Block
 */
export interface WorkloadNetworkPublicIP extends ProxyResource {
  /**
   * Display name of the Public IP Block.
   */
  displayName?: string;
  /**
   * Number of Public IPs requested.
   */
  numberOfPublicIPs?: number;
  /**
   * CIDR Block of the Public IP Block.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly publicIPBlock?: string;
  /**
   * The provisioning state. Possible values include: 'Succeeded', 'Failed', 'Building',
   * 'Deleting', 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: WorkloadNetworkPublicIPProvisioningState;
}

/**
 * Set VM DRS-driven movement to restricted (enabled) or not (disabled)
 */
export interface VirtualMachineRestrictMovement {
  /**
   * Possible values include: 'Enabled', 'Disabled'
   */
  restrictMovement?: VirtualMachineRestrictMovementState;
}

/**
 * Virtual Machine
 */
export interface VirtualMachine extends ProxyResource {
  /**
   * Display name of the VM.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * Virtual machine managed object reference id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly moRefId?: string;
  /**
   * Path to virtual machine's folder starting from datacenter virtual machine folder
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly folderPath?: string;
  /**
   * Possible values include: 'Enabled', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly restrictMovement?: VirtualMachineRestrictMovementState;
}

/**
 * Contains the possible cases for PlacementPolicyProperties.
 */
export type PlacementPolicyPropertiesUnion = PlacementPolicyProperties | VmVmPlacementPolicyProperties | VmHostPlacementPolicyProperties;

/**
 * Abstract placement policy properties
 */
export interface PlacementPolicyProperties {
  /**
   * Polymorphic Discriminator
   */
  type: "PlacementPolicyProperties";
  /**
   * Whether the placement policy is enabled or disabled. Possible values include: 'Enabled',
   * 'Disabled'
   */
  state?: PlacementPolicyState;
  /**
   * Display name of the placement policy
   */
  displayName?: string;
  /**
   * The provisioning state. Possible values include: 'Succeeded', 'Failed', 'Building',
   * 'Deleting', 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: PlacementPolicyProvisioningState;
}

/**
 * VM-VM placement policy properties
 */
export interface VmVmPlacementPolicyProperties {
  /**
   * Polymorphic Discriminator
   */
  type: "VmVm";
  /**
   * Whether the placement policy is enabled or disabled. Possible values include: 'Enabled',
   * 'Disabled'
   */
  state?: PlacementPolicyState;
  /**
   * Display name of the placement policy
   */
  displayName?: string;
  /**
   * The provisioning state. Possible values include: 'Succeeded', 'Failed', 'Building',
   * 'Deleting', 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: PlacementPolicyProvisioningState;
  /**
   * Virtual machine members list
   */
  vmMembers: string[];
  /**
   * placement policy affinity type. Possible values include: 'Affinity', 'AntiAffinity'
   */
  affinityType: AffinityType;
}

/**
 * VM-Host placement policy properties
 */
export interface VmHostPlacementPolicyProperties {
  /**
   * Polymorphic Discriminator
   */
  type: "VmHost";
  /**
   * Whether the placement policy is enabled or disabled. Possible values include: 'Enabled',
   * 'Disabled'
   */
  state?: PlacementPolicyState;
  /**
   * Display name of the placement policy
   */
  displayName?: string;
  /**
   * The provisioning state. Possible values include: 'Succeeded', 'Failed', 'Building',
   * 'Deleting', 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: PlacementPolicyProvisioningState;
  /**
   * Virtual machine members list
   */
  vmMembers: string[];
  /**
   * Host members list
   */
  hostMembers: string[];
  /**
   * placement policy affinity type. Possible values include: 'Affinity', 'AntiAffinity'
   */
  affinityType: AffinityType;
}

/**
 * A vSphere Distributed Resource Scheduler (DRS) placement policy
 */
export interface PlacementPolicy extends Resource {
  /**
   * placement policy properties
   */
  properties?: PlacementPolicyPropertiesUnion;
}

/**
 * An update of a DRS placement policy resource
 */
export interface PlacementPolicyUpdate {
  /**
   * Whether the placement policy is enabled or disabled. Possible values include: 'Enabled',
   * 'Disabled'
   */
  state?: PlacementPolicyState;
  /**
   * Virtual machine members list
   */
  vmMembers?: string[];
  /**
   * Host members list
   */
  hostMembers?: string[];
}

/**
 * Script Package resources available for execution
 */
export interface ScriptPackage extends ProxyResource {
  /**
   * User friendly description of the package
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Module version
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly version?: string;
}

/**
 * An parameter that the script will accept
 */
export interface ScriptParameter {
  /**
   * The type of parameter the script is expecting. psCredential is a PSCredentialObject. Possible
   * values include: 'String', 'SecureString', 'Credential', 'Int', 'Bool', 'Float'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: ScriptParameterTypes;
  /**
   * The parameter name that the script will expect a parameter value for
   */
  name?: string;
  /**
   * User friendly description of the parameter
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Should this parameter be visible to arm and passed in the parameters argument when executing.
   * Possible values include: 'Visible', 'Hidden'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly visibility?: VisibilityParameterEnum;
  /**
   * Is this parameter required or optional. Possible values include: 'Optional', 'Required'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly optional?: OptionalParamEnum;
}

/**
 * A cmdlet available for script execution
 */
export interface ScriptCmdlet extends ProxyResource {
  /**
   * Description of the scripts functionality
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Recommended time limit for execution
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timeout?: string;
  /**
   * Parameters the script will accept
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly parameters?: ScriptParameter[];
}

/**
 * Contains the possible cases for ScriptExecutionParameter.
 */
export type ScriptExecutionParameterUnion = ScriptExecutionParameter | ScriptSecureStringExecutionParameter | ScriptStringExecutionParameter | PSCredentialExecutionParameter;

/**
 * The arguments passed in to the execution
 */
export interface ScriptExecutionParameter {
  /**
   * Polymorphic Discriminator
   */
  type: "ScriptExecutionParameter";
  /**
   * The parameter name
   */
  name: string;
}

/**
 * An instance of a script executed by a user - custom or AVS
 */
export interface ScriptExecution extends ProxyResource {
  /**
   * A reference to the script cmdlet resource if user is running a AVS script
   */
  scriptCmdletId?: string;
  /**
   * Parameters the script will accept
   */
  parameters?: ScriptExecutionParameterUnion[];
  /**
   * Parameters that will be hidden/not visible to ARM, such as passwords and credentials
   */
  hiddenParameters?: ScriptExecutionParameterUnion[];
  /**
   * Error message if the script was able to run, but if the script itself had errors or powershell
   * threw an exception
   */
  failureReason?: string;
  /**
   * Time limit for execution
   */
  timeout: string;
  /**
   * Time to live for the resource. If not provided, will be available for 60 days
   */
  retention?: string;
  /**
   * Time the script execution was submitted
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly submittedAt?: Date;
  /**
   * Time the script execution was started
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startedAt?: Date;
  /**
   * Time the script execution was finished
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly finishedAt?: Date;
  /**
   * The state of the script execution resource. Possible values include: 'Pending', 'Running',
   * 'Succeeded', 'Failed', 'Cancelling', 'Cancelled', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ScriptExecutionProvisioningState;
  /**
   * Standard output stream from the powershell execution
   */
  output?: string[];
  /**
   * User-defined dictionary.
   */
  namedOutputs?: { [propertyName: string]: any };
  /**
   * Standard information out stream from the powershell execution
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly information?: string[];
  /**
   * Standard warning out stream from the powershell execution
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly warnings?: string[];
  /**
   * Standard error output stream from the powershell execution
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errors?: string[];
}

/**
 * a plain text value execution parameter
 */
export interface ScriptSecureStringExecutionParameter {
  /**
   * Polymorphic Discriminator
   */
  type: "SecureValue";
  /**
   * The parameter name
   */
  name: string;
  /**
   * A secure value for the passed parameter, not to be stored in logs
   */
  secureValue?: string;
}

/**
 * a plain text value execution parameter
 */
export interface ScriptStringExecutionParameter {
  /**
   * Polymorphic Discriminator
   */
  type: "Value";
  /**
   * The parameter name
   */
  name: string;
  /**
   * The value for the passed parameter
   */
  value?: string;
}

/**
 * a powershell credential object
 */
export interface PSCredentialExecutionParameter {
  /**
   * Polymorphic Discriminator
   */
  type: "Credential";
  /**
   * The parameter name
   */
  name: string;
  /**
   * username for login
   */
  username?: string;
  /**
   * password for login
   */
  password?: string;
}

/**
 * Optional Parameters.
 */
export interface AuthorizationsCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The ID of the ExpressRoute Circuit
   */
  expressRouteId?: string;
}

/**
 * Optional Parameters.
 */
export interface AuthorizationsBeginCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The ID of the ExpressRoute Circuit
   */
  expressRouteId?: string;
}

/**
 * Optional Parameters.
 */
export interface WorkloadNetworksCreateDhcpOptionalParams extends msRest.RequestOptionsBase {
  /**
   * DHCP properties.
   */
  properties?: WorkloadNetworkDhcpEntityUnion;
}

/**
 * Optional Parameters.
 */
export interface WorkloadNetworksUpdateDhcpOptionalParams extends msRest.RequestOptionsBase {
  /**
   * DHCP properties.
   */
  properties?: WorkloadNetworkDhcpEntityUnion;
}

/**
 * Optional Parameters.
 */
export interface WorkloadNetworksBeginCreateDhcpOptionalParams extends msRest.RequestOptionsBase {
  /**
   * DHCP properties.
   */
  properties?: WorkloadNetworkDhcpEntityUnion;
}

/**
 * Optional Parameters.
 */
export interface WorkloadNetworksBeginUpdateDhcpOptionalParams extends msRest.RequestOptionsBase {
  /**
   * DHCP properties.
   */
  properties?: WorkloadNetworkDhcpEntityUnion;
}

/**
 * Optional Parameters.
 */
export interface CloudLinksCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Identifier of the other private cloud participating in the link.
   */
  linkedCloud?: string;
}

/**
 * Optional Parameters.
 */
export interface CloudLinksBeginCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Identifier of the other private cloud participating in the link.
   */
  linkedCloud?: string;
}

/**
 * Optional Parameters.
 */
export interface AddonsCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The properties of an addon resource
   */
  properties?: AddonPropertiesUnion;
}

/**
 * Optional Parameters.
 */
export interface AddonsBeginCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The properties of an addon resource
   */
  properties?: AddonPropertiesUnion;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachinesRestrictMovementOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Possible values include: 'Enabled', 'Disabled'
   */
  restrictMovementParameter?: VirtualMachineRestrictMovementState;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachinesBeginRestrictMovementOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Possible values include: 'Enabled', 'Disabled'
   */
  restrictMovementParameter?: VirtualMachineRestrictMovementState;
}

/**
 * Optional Parameters.
 */
export interface PlacementPoliciesCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * placement policy properties
   */
  properties?: PlacementPolicyPropertiesUnion;
}

/**
 * Optional Parameters.
 */
export interface PlacementPoliciesBeginCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * placement policy properties
   */
  properties?: PlacementPolicyPropertiesUnion;
}

/**
 * Optional Parameters.
 */
export interface ScriptExecutionsGetExecutionLogsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Name of the desired output stream to return. If not provided, will return all. An empty array
   * will return nothing
   */
  scriptOutputStreamType?: ScriptOutputStreamType[];
}

/**
 * An interface representing AvsClientOptions.
 */
export interface AvsClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * Pageable list of operations
 * @extends Array<Operation>
 */
export interface OperationList extends Array<Operation> {
  /**
   * URL to get the next page if any
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A paged list of private clouds
 * @extends Array<PrivateCloud>
 */
export interface PrivateCloudList extends Array<PrivateCloud> {
  /**
   * URL to get the next page if any
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A paged list of clusters
 * @extends Array<Cluster>
 */
export interface ClusterList extends Array<Cluster> {
  /**
   * URL to get the next page if any
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A paged list of datastores
 * @extends Array<Datastore>
 */
export interface DatastoreList extends Array<Datastore> {
  /**
   * URL to get the next page if any
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A paged list of HCX Enterprise Sites
 * @extends Array<HcxEnterpriseSite>
 */
export interface HcxEnterpriseSiteList extends Array<HcxEnterpriseSite> {
  /**
   * URL to get the next page if any
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A paged list of ExpressRoute Circuit Authorizations
 * @extends Array<ExpressRouteAuthorization>
 */
export interface ExpressRouteAuthorizationList extends Array<ExpressRouteAuthorization> {
  /**
   * URL to get the next page if any
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A paged list of global reach connections
 * @extends Array<GlobalReachConnection>
 */
export interface GlobalReachConnectionList extends Array<GlobalReachConnection> {
  /**
   * URL to get the next page if any
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of NSX Segments
 * @extends Array<WorkloadNetworkSegment>
 */
export interface WorkloadNetworkSegmentsList extends Array<WorkloadNetworkSegment> {
  /**
   * URL to get the next page if any
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of NSX dhcp entities
 * @extends Array<WorkloadNetworkDhcp>
 */
export interface WorkloadNetworkDhcpList extends Array<WorkloadNetworkDhcp> {
  /**
   * URL to get the next page if any
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of NSX Gateways
 * @extends Array<WorkloadNetworkGateway>
 */
export interface WorkloadNetworkGatewayList extends Array<WorkloadNetworkGateway> {
  /**
   * URL to get the next page if any
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of NSX Port Mirroring
 * @extends Array<WorkloadNetworkPortMirroring>
 */
export interface WorkloadNetworkPortMirroringList extends Array<WorkloadNetworkPortMirroring> {
  /**
   * URL to get the next page if any
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of NSX VM Groups
 * @extends Array<WorkloadNetworkVMGroup>
 */
export interface WorkloadNetworkVMGroupsList extends Array<WorkloadNetworkVMGroup> {
  /**
   * URL to get the next page if any
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of NSX Virtual Machines
 * @extends Array<WorkloadNetworkVirtualMachine>
 */
export interface WorkloadNetworkVirtualMachinesList extends Array<WorkloadNetworkVirtualMachine> {
  /**
   * URL to get the next page if any
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of NSX DNS Services
 * @extends Array<WorkloadNetworkDnsService>
 */
export interface WorkloadNetworkDnsServicesList extends Array<WorkloadNetworkDnsService> {
  /**
   * URL to get the next page if any
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of NSX DNS Zones
 * @extends Array<WorkloadNetworkDnsZone>
 */
export interface WorkloadNetworkDnsZonesList extends Array<WorkloadNetworkDnsZone> {
  /**
   * URL to get the next page if any
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of NSX Public IP Blocks
 * @extends Array<WorkloadNetworkPublicIP>
 */
export interface WorkloadNetworkPublicIPsList extends Array<WorkloadNetworkPublicIP> {
  /**
   * URL to get the next page if any
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A paged list of cloud links
 * @extends Array<CloudLink>
 */
export interface CloudLinkList extends Array<CloudLink> {
  /**
   * URL to get the next page if any
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A paged list of addons
 * @extends Array<Addon>
 */
export interface AddonList extends Array<Addon> {
  /**
   * URL to get the next page if any
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of Virtual Machines
 * @extends Array<VirtualMachine>
 */
export interface VirtualMachinesList extends Array<VirtualMachine> {
  /**
   * URL to get the next page if any
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Represents list of placement policies
 * @extends Array<PlacementPolicy>
 */
export interface PlacementPoliciesList extends Array<PlacementPolicy> {
  /**
   * URL to get the next page if any
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of the available script packages
 * @extends Array<ScriptPackage>
 */
export interface ScriptPackagesList extends Array<ScriptPackage> {
  /**
   * URL to get the next page if any
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Pageable list of scripts/cmdlets
 * @extends Array<ScriptCmdlet>
 */
export interface ScriptCmdletsList extends Array<ScriptCmdlet> {
  /**
   * URL to get the next page if any
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Pageable list of script executions
 * @extends Array<ScriptExecution>
 */
export interface ScriptExecutionsList extends Array<ScriptExecution> {
  /**
   * URL to get the next page if any
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for TrialStatus.
 * Possible values include: 'TrialAvailable', 'TrialUsed', 'TrialDisabled'
 * @readonly
 * @enum {string}
 */
export type TrialStatus = 'TrialAvailable' | 'TrialUsed' | 'TrialDisabled';

/**
 * Defines values for QuotaEnabled.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type QuotaEnabled = 'Enabled' | 'Disabled';

/**
 * Defines values for ExpressRouteAuthorizationProvisioningState.
 * Possible values include: 'Succeeded', 'Failed', 'Updating'
 * @readonly
 * @enum {string}
 */
export type ExpressRouteAuthorizationProvisioningState = 'Succeeded' | 'Failed' | 'Updating';

/**
 * Defines values for EncryptionKeyStatus.
 * Possible values include: 'Connected', 'AccessDenied'
 * @readonly
 * @enum {string}
 */
export type EncryptionKeyStatus = 'Connected' | 'AccessDenied';

/**
 * Defines values for EncryptionVersionType.
 * Possible values include: 'Fixed', 'AutoDetected'
 * @readonly
 * @enum {string}
 */
export type EncryptionVersionType = 'Fixed' | 'AutoDetected';

/**
 * Defines values for EncryptionState.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type EncryptionState = 'Enabled' | 'Disabled';

/**
 * Defines values for SslEnum.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type SslEnum = 'Enabled' | 'Disabled';

/**
 * Defines values for AvailabilityStrategy.
 * Possible values include: 'SingleZone', 'DualZone'
 * @readonly
 * @enum {string}
 */
export type AvailabilityStrategy = 'SingleZone' | 'DualZone';

/**
 * Defines values for PrivateCloudProvisioningState.
 * Possible values include: 'Succeeded', 'Failed', 'Cancelled', 'Pending', 'Building', 'Deleting',
 * 'Updating'
 * @readonly
 * @enum {string}
 */
export type PrivateCloudProvisioningState = 'Succeeded' | 'Failed' | 'Cancelled' | 'Pending' | 'Building' | 'Deleting' | 'Updating';

/**
 * Defines values for ResourceIdentityType.
 * Possible values include: 'SystemAssigned', 'None'
 * @readonly
 * @enum {string}
 */
export type ResourceIdentityType = 'SystemAssigned' | 'None';

/**
 * Defines values for InternetEnum.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type InternetEnum = 'Enabled' | 'Disabled';

/**
 * Defines values for ClusterProvisioningState.
 * Possible values include: 'Succeeded', 'Failed', 'Cancelled', 'Deleting', 'Updating'
 * @readonly
 * @enum {string}
 */
export type ClusterProvisioningState = 'Succeeded' | 'Failed' | 'Cancelled' | 'Deleting' | 'Updating';

/**
 * Defines values for AddonProvisioningState.
 * Possible values include: 'Succeeded', 'Failed', 'Cancelled', 'Building', 'Deleting', 'Updating'
 * @readonly
 * @enum {string}
 */
export type AddonProvisioningState = 'Succeeded' | 'Failed' | 'Cancelled' | 'Building' | 'Deleting' | 'Updating';

/**
 * Defines values for DatastoreProvisioningState.
 * Possible values include: 'Succeeded', 'Failed', 'Cancelled', 'Pending', 'Creating', 'Updating',
 * 'Deleting'
 * @readonly
 * @enum {string}
 */
export type DatastoreProvisioningState = 'Succeeded' | 'Failed' | 'Cancelled' | 'Pending' | 'Creating' | 'Updating' | 'Deleting';

/**
 * Defines values for MountOptionEnum.
 * Possible values include: 'MOUNT', 'ATTACH'
 * @readonly
 * @enum {string}
 */
export type MountOptionEnum = 'MOUNT' | 'ATTACH';

/**
 * Defines values for DatastoreStatus.
 * Possible values include: 'Unknown', 'Accessible', 'Inaccessible', 'Attached', 'Detached',
 * 'LostCommunication', 'DeadOrError'
 * @readonly
 * @enum {string}
 */
export type DatastoreStatus = 'Unknown' | 'Accessible' | 'Inaccessible' | 'Attached' | 'Detached' | 'LostCommunication' | 'DeadOrError';

/**
 * Defines values for HcxEnterpriseSiteStatus.
 * Possible values include: 'Available', 'Consumed', 'Deactivated', 'Deleted'
 * @readonly
 * @enum {string}
 */
export type HcxEnterpriseSiteStatus = 'Available' | 'Consumed' | 'Deactivated' | 'Deleted';

/**
 * Defines values for GlobalReachConnectionProvisioningState.
 * Possible values include: 'Succeeded', 'Failed', 'Updating'
 * @readonly
 * @enum {string}
 */
export type GlobalReachConnectionProvisioningState = 'Succeeded' | 'Failed' | 'Updating';

/**
 * Defines values for GlobalReachConnectionStatus.
 * Possible values include: 'Connected', 'Connecting', 'Disconnected'
 * @readonly
 * @enum {string}
 */
export type GlobalReachConnectionStatus = 'Connected' | 'Connecting' | 'Disconnected';

/**
 * Defines values for CloudLinkStatus.
 * Possible values include: 'Active', 'Building', 'Deleting', 'Failed', 'Disconnected'
 * @readonly
 * @enum {string}
 */
export type CloudLinkStatus = 'Active' | 'Building' | 'Deleting' | 'Failed' | 'Disconnected';

/**
 * Defines values for SegmentStatusEnum.
 * Possible values include: 'SUCCESS', 'FAILURE'
 * @readonly
 * @enum {string}
 */
export type SegmentStatusEnum = 'SUCCESS' | 'FAILURE';

/**
 * Defines values for WorkloadNetworkSegmentProvisioningState.
 * Possible values include: 'Succeeded', 'Failed', 'Building', 'Deleting', 'Updating'
 * @readonly
 * @enum {string}
 */
export type WorkloadNetworkSegmentProvisioningState = 'Succeeded' | 'Failed' | 'Building' | 'Deleting' | 'Updating';

/**
 * Defines values for WorkloadNetworkDhcpProvisioningState.
 * Possible values include: 'Succeeded', 'Failed', 'Building', 'Deleting', 'Updating'
 * @readonly
 * @enum {string}
 */
export type WorkloadNetworkDhcpProvisioningState = 'Succeeded' | 'Failed' | 'Building' | 'Deleting' | 'Updating';

/**
 * Defines values for PortMirroringDirectionEnum.
 * Possible values include: 'INGRESS', 'EGRESS', 'BIDIRECTIONAL'
 * @readonly
 * @enum {string}
 */
export type PortMirroringDirectionEnum = 'INGRESS' | 'EGRESS' | 'BIDIRECTIONAL';

/**
 * Defines values for PortMirroringStatusEnum.
 * Possible values include: 'SUCCESS', 'FAILURE'
 * @readonly
 * @enum {string}
 */
export type PortMirroringStatusEnum = 'SUCCESS' | 'FAILURE';

/**
 * Defines values for WorkloadNetworkPortMirroringProvisioningState.
 * Possible values include: 'Succeeded', 'Failed', 'Building', 'Deleting', 'Updating'
 * @readonly
 * @enum {string}
 */
export type WorkloadNetworkPortMirroringProvisioningState = 'Succeeded' | 'Failed' | 'Building' | 'Deleting' | 'Updating';

/**
 * Defines values for VMGroupStatusEnum.
 * Possible values include: 'SUCCESS', 'FAILURE'
 * @readonly
 * @enum {string}
 */
export type VMGroupStatusEnum = 'SUCCESS' | 'FAILURE';

/**
 * Defines values for WorkloadNetworkVMGroupProvisioningState.
 * Possible values include: 'Succeeded', 'Failed', 'Building', 'Deleting', 'Updating'
 * @readonly
 * @enum {string}
 */
export type WorkloadNetworkVMGroupProvisioningState = 'Succeeded' | 'Failed' | 'Building' | 'Deleting' | 'Updating';

/**
 * Defines values for VMTypeEnum.
 * Possible values include: 'REGULAR', 'EDGE', 'SERVICE'
 * @readonly
 * @enum {string}
 */
export type VMTypeEnum = 'REGULAR' | 'EDGE' | 'SERVICE';

/**
 * Defines values for DnsServiceLogLevelEnum.
 * Possible values include: 'DEBUG', 'INFO', 'WARNING', 'ERROR', 'FATAL'
 * @readonly
 * @enum {string}
 */
export type DnsServiceLogLevelEnum = 'DEBUG' | 'INFO' | 'WARNING' | 'ERROR' | 'FATAL';

/**
 * Defines values for DnsServiceStatusEnum.
 * Possible values include: 'SUCCESS', 'FAILURE'
 * @readonly
 * @enum {string}
 */
export type DnsServiceStatusEnum = 'SUCCESS' | 'FAILURE';

/**
 * Defines values for WorkloadNetworkDnsServiceProvisioningState.
 * Possible values include: 'Succeeded', 'Failed', 'Building', 'Deleting', 'Updating'
 * @readonly
 * @enum {string}
 */
export type WorkloadNetworkDnsServiceProvisioningState = 'Succeeded' | 'Failed' | 'Building' | 'Deleting' | 'Updating';

/**
 * Defines values for WorkloadNetworkDnsZoneProvisioningState.
 * Possible values include: 'Succeeded', 'Failed', 'Building', 'Deleting', 'Updating'
 * @readonly
 * @enum {string}
 */
export type WorkloadNetworkDnsZoneProvisioningState = 'Succeeded' | 'Failed' | 'Building' | 'Deleting' | 'Updating';

/**
 * Defines values for WorkloadNetworkPublicIPProvisioningState.
 * Possible values include: 'Succeeded', 'Failed', 'Building', 'Deleting', 'Updating'
 * @readonly
 * @enum {string}
 */
export type WorkloadNetworkPublicIPProvisioningState = 'Succeeded' | 'Failed' | 'Building' | 'Deleting' | 'Updating';

/**
 * Defines values for VirtualMachineRestrictMovementState.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type VirtualMachineRestrictMovementState = 'Enabled' | 'Disabled';

/**
 * Defines values for PlacementPolicyState.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type PlacementPolicyState = 'Enabled' | 'Disabled';

/**
 * Defines values for PlacementPolicyProvisioningState.
 * Possible values include: 'Succeeded', 'Failed', 'Building', 'Deleting', 'Updating'
 * @readonly
 * @enum {string}
 */
export type PlacementPolicyProvisioningState = 'Succeeded' | 'Failed' | 'Building' | 'Deleting' | 'Updating';

/**
 * Defines values for AffinityType.
 * Possible values include: 'Affinity', 'AntiAffinity'
 * @readonly
 * @enum {string}
 */
export type AffinityType = 'Affinity' | 'AntiAffinity';

/**
 * Defines values for ScriptParameterTypes.
 * Possible values include: 'String', 'SecureString', 'Credential', 'Int', 'Bool', 'Float'
 * @readonly
 * @enum {string}
 */
export type ScriptParameterTypes = 'String' | 'SecureString' | 'Credential' | 'Int' | 'Bool' | 'Float';

/**
 * Defines values for VisibilityParameterEnum.
 * Possible values include: 'Visible', 'Hidden'
 * @readonly
 * @enum {string}
 */
export type VisibilityParameterEnum = 'Visible' | 'Hidden';

/**
 * Defines values for OptionalParamEnum.
 * Possible values include: 'Optional', 'Required'
 * @readonly
 * @enum {string}
 */
export type OptionalParamEnum = 'Optional' | 'Required';

/**
 * Defines values for ScriptExecutionProvisioningState.
 * Possible values include: 'Pending', 'Running', 'Succeeded', 'Failed', 'Cancelling', 'Cancelled',
 * 'Deleting'
 * @readonly
 * @enum {string}
 */
export type ScriptExecutionProvisioningState = 'Pending' | 'Running' | 'Succeeded' | 'Failed' | 'Cancelling' | 'Cancelled' | 'Deleting';

/**
 * Defines values for ScriptOutputStreamType.
 * Possible values include: 'Information', 'Warning', 'Output', 'Error'
 * @readonly
 * @enum {string}
 */
export type ScriptOutputStreamType = 'Information' | 'Warning' | 'Output' | 'Error';

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationList;
    };
};

/**
 * Contains response data for the checkTrialAvailability operation.
 */
export type LocationsCheckTrialAvailabilityResponse = Trial & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Trial;
    };
};

/**
 * Contains response data for the checkQuotaAvailability operation.
 */
export type LocationsCheckQuotaAvailabilityResponse = Quota & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Quota;
    };
};

/**
 * Contains response data for the list operation.
 */
export type PrivateCloudsListResponse = PrivateCloudList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateCloudList;
    };
};

/**
 * Contains response data for the listInSubscription operation.
 */
export type PrivateCloudsListInSubscriptionResponse = PrivateCloudList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateCloudList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PrivateCloudsGetResponse = PrivateCloud & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateCloud;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type PrivateCloudsCreateOrUpdateResponse = PrivateCloud & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateCloud;
    };
};

/**
 * Contains response data for the update operation.
 */
export type PrivateCloudsUpdateResponse = PrivateCloud & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateCloud;
    };
};

/**
 * Contains response data for the listAdminCredentials operation.
 */
export type PrivateCloudsListAdminCredentialsResponse = AdminCredentials & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AdminCredentials;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type PrivateCloudsBeginCreateOrUpdateResponse = PrivateCloud & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateCloud;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type PrivateCloudsBeginUpdateResponse = PrivateCloud & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateCloud;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type PrivateCloudsListNextResponse = PrivateCloudList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateCloudList;
    };
};

/**
 * Contains response data for the listInSubscriptionNext operation.
 */
export type PrivateCloudsListInSubscriptionNextResponse = PrivateCloudList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateCloudList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ClustersListResponse = ClusterList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClusterList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ClustersGetResponse = Cluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Cluster;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ClustersCreateOrUpdateResponse = Cluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Cluster;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ClustersUpdateResponse = Cluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Cluster;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ClustersBeginCreateOrUpdateResponse = Cluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Cluster;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ClustersBeginUpdateResponse = Cluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Cluster;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ClustersListNextResponse = ClusterList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClusterList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type DatastoresListResponse = DatastoreList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatastoreList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatastoresGetResponse = Datastore & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Datastore;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DatastoresCreateOrUpdateResponse = Datastore & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Datastore;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type DatastoresBeginCreateOrUpdateResponse = Datastore & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Datastore;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type DatastoresListNextResponse = DatastoreList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatastoreList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type HcxEnterpriseSitesListResponse = HcxEnterpriseSiteList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HcxEnterpriseSiteList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type HcxEnterpriseSitesGetResponse = HcxEnterpriseSite & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HcxEnterpriseSite;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type HcxEnterpriseSitesCreateOrUpdateResponse = HcxEnterpriseSite & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HcxEnterpriseSite;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type HcxEnterpriseSitesListNextResponse = HcxEnterpriseSiteList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HcxEnterpriseSiteList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type AuthorizationsListResponse = ExpressRouteAuthorizationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExpressRouteAuthorizationList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AuthorizationsGetResponse = ExpressRouteAuthorization & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExpressRouteAuthorization;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type AuthorizationsCreateOrUpdateResponse = ExpressRouteAuthorization & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExpressRouteAuthorization;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type AuthorizationsBeginCreateOrUpdateResponse = ExpressRouteAuthorization & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExpressRouteAuthorization;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type AuthorizationsListNextResponse = ExpressRouteAuthorizationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExpressRouteAuthorizationList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type GlobalReachConnectionsListResponse = GlobalReachConnectionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GlobalReachConnectionList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type GlobalReachConnectionsGetResponse = GlobalReachConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GlobalReachConnection;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type GlobalReachConnectionsCreateOrUpdateResponse = GlobalReachConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GlobalReachConnection;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type GlobalReachConnectionsBeginCreateOrUpdateResponse = GlobalReachConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GlobalReachConnection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type GlobalReachConnectionsListNextResponse = GlobalReachConnectionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GlobalReachConnectionList;
    };
};

/**
 * Contains response data for the listSegments operation.
 */
export type WorkloadNetworksListSegmentsResponse = WorkloadNetworkSegmentsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkSegmentsList;
    };
};

/**
 * Contains response data for the getSegment operation.
 */
export type WorkloadNetworksGetSegmentResponse = WorkloadNetworkSegment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkSegment;
    };
};

/**
 * Contains response data for the createSegments operation.
 */
export type WorkloadNetworksCreateSegmentsResponse = WorkloadNetworkSegment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkSegment;
    };
};

/**
 * Contains response data for the updateSegments operation.
 */
export type WorkloadNetworksUpdateSegmentsResponse = WorkloadNetworkSegment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkSegment;
    };
};

/**
 * Contains response data for the listDhcp operation.
 */
export type WorkloadNetworksListDhcpResponse = WorkloadNetworkDhcpList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkDhcpList;
    };
};

/**
 * Contains response data for the getDhcp operation.
 */
export type WorkloadNetworksGetDhcpResponse = WorkloadNetworkDhcp & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkDhcp;
    };
};

/**
 * Contains response data for the createDhcp operation.
 */
export type WorkloadNetworksCreateDhcpResponse = WorkloadNetworkDhcp & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkDhcp;
    };
};

/**
 * Contains response data for the updateDhcp operation.
 */
export type WorkloadNetworksUpdateDhcpResponse = WorkloadNetworkDhcp & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkDhcp;
    };
};

/**
 * Contains response data for the listGateways operation.
 */
export type WorkloadNetworksListGatewaysResponse = WorkloadNetworkGatewayList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkGatewayList;
    };
};

/**
 * Contains response data for the getGateway operation.
 */
export type WorkloadNetworksGetGatewayResponse = WorkloadNetworkGateway & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkGateway;
    };
};

/**
 * Contains response data for the listPortMirroring operation.
 */
export type WorkloadNetworksListPortMirroringResponse = WorkloadNetworkPortMirroringList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkPortMirroringList;
    };
};

/**
 * Contains response data for the getPortMirroring operation.
 */
export type WorkloadNetworksGetPortMirroringResponse = WorkloadNetworkPortMirroring & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkPortMirroring;
    };
};

/**
 * Contains response data for the createPortMirroring operation.
 */
export type WorkloadNetworksCreatePortMirroringResponse = WorkloadNetworkPortMirroring & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkPortMirroring;
    };
};

/**
 * Contains response data for the updatePortMirroring operation.
 */
export type WorkloadNetworksUpdatePortMirroringResponse = WorkloadNetworkPortMirroring & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkPortMirroring;
    };
};

/**
 * Contains response data for the listVMGroups operation.
 */
export type WorkloadNetworksListVMGroupsResponse = WorkloadNetworkVMGroupsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkVMGroupsList;
    };
};

/**
 * Contains response data for the getVMGroup operation.
 */
export type WorkloadNetworksGetVMGroupResponse = WorkloadNetworkVMGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkVMGroup;
    };
};

/**
 * Contains response data for the createVMGroup operation.
 */
export type WorkloadNetworksCreateVMGroupResponse = WorkloadNetworkVMGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkVMGroup;
    };
};

/**
 * Contains response data for the updateVMGroup operation.
 */
export type WorkloadNetworksUpdateVMGroupResponse = WorkloadNetworkVMGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkVMGroup;
    };
};

/**
 * Contains response data for the listVirtualMachines operation.
 */
export type WorkloadNetworksListVirtualMachinesResponse = WorkloadNetworkVirtualMachinesList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkVirtualMachinesList;
    };
};

/**
 * Contains response data for the getVirtualMachine operation.
 */
export type WorkloadNetworksGetVirtualMachineResponse = WorkloadNetworkVirtualMachine & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkVirtualMachine;
    };
};

/**
 * Contains response data for the listDnsServices operation.
 */
export type WorkloadNetworksListDnsServicesResponse = WorkloadNetworkDnsServicesList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkDnsServicesList;
    };
};

/**
 * Contains response data for the getDnsService operation.
 */
export type WorkloadNetworksGetDnsServiceResponse = WorkloadNetworkDnsService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkDnsService;
    };
};

/**
 * Contains response data for the createDnsService operation.
 */
export type WorkloadNetworksCreateDnsServiceResponse = WorkloadNetworkDnsService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkDnsService;
    };
};

/**
 * Contains response data for the updateDnsService operation.
 */
export type WorkloadNetworksUpdateDnsServiceResponse = WorkloadNetworkDnsService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkDnsService;
    };
};

/**
 * Contains response data for the listDnsZones operation.
 */
export type WorkloadNetworksListDnsZonesResponse = WorkloadNetworkDnsZonesList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkDnsZonesList;
    };
};

/**
 * Contains response data for the getDnsZone operation.
 */
export type WorkloadNetworksGetDnsZoneResponse = WorkloadNetworkDnsZone & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkDnsZone;
    };
};

/**
 * Contains response data for the createDnsZone operation.
 */
export type WorkloadNetworksCreateDnsZoneResponse = WorkloadNetworkDnsZone & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkDnsZone;
    };
};

/**
 * Contains response data for the updateDnsZone operation.
 */
export type WorkloadNetworksUpdateDnsZoneResponse = WorkloadNetworkDnsZone & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkDnsZone;
    };
};

/**
 * Contains response data for the listPublicIPs operation.
 */
export type WorkloadNetworksListPublicIPsResponse = WorkloadNetworkPublicIPsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkPublicIPsList;
    };
};

/**
 * Contains response data for the getPublicIP operation.
 */
export type WorkloadNetworksGetPublicIPResponse = WorkloadNetworkPublicIP & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkPublicIP;
    };
};

/**
 * Contains response data for the createPublicIP operation.
 */
export type WorkloadNetworksCreatePublicIPResponse = WorkloadNetworkPublicIP & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkPublicIP;
    };
};

/**
 * Contains response data for the beginCreateSegments operation.
 */
export type WorkloadNetworksBeginCreateSegmentsResponse = WorkloadNetworkSegment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkSegment;
    };
};

/**
 * Contains response data for the beginUpdateSegments operation.
 */
export type WorkloadNetworksBeginUpdateSegmentsResponse = WorkloadNetworkSegment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkSegment;
    };
};

/**
 * Contains response data for the beginCreateDhcp operation.
 */
export type WorkloadNetworksBeginCreateDhcpResponse = WorkloadNetworkDhcp & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkDhcp;
    };
};

/**
 * Contains response data for the beginUpdateDhcp operation.
 */
export type WorkloadNetworksBeginUpdateDhcpResponse = WorkloadNetworkDhcp & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkDhcp;
    };
};

/**
 * Contains response data for the beginCreatePortMirroring operation.
 */
export type WorkloadNetworksBeginCreatePortMirroringResponse = WorkloadNetworkPortMirroring & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkPortMirroring;
    };
};

/**
 * Contains response data for the beginUpdatePortMirroring operation.
 */
export type WorkloadNetworksBeginUpdatePortMirroringResponse = WorkloadNetworkPortMirroring & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkPortMirroring;
    };
};

/**
 * Contains response data for the beginCreateVMGroup operation.
 */
export type WorkloadNetworksBeginCreateVMGroupResponse = WorkloadNetworkVMGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkVMGroup;
    };
};

/**
 * Contains response data for the beginUpdateVMGroup operation.
 */
export type WorkloadNetworksBeginUpdateVMGroupResponse = WorkloadNetworkVMGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkVMGroup;
    };
};

/**
 * Contains response data for the beginCreateDnsService operation.
 */
export type WorkloadNetworksBeginCreateDnsServiceResponse = WorkloadNetworkDnsService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkDnsService;
    };
};

/**
 * Contains response data for the beginUpdateDnsService operation.
 */
export type WorkloadNetworksBeginUpdateDnsServiceResponse = WorkloadNetworkDnsService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkDnsService;
    };
};

/**
 * Contains response data for the beginCreateDnsZone operation.
 */
export type WorkloadNetworksBeginCreateDnsZoneResponse = WorkloadNetworkDnsZone & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkDnsZone;
    };
};

/**
 * Contains response data for the beginUpdateDnsZone operation.
 */
export type WorkloadNetworksBeginUpdateDnsZoneResponse = WorkloadNetworkDnsZone & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkDnsZone;
    };
};

/**
 * Contains response data for the beginCreatePublicIP operation.
 */
export type WorkloadNetworksBeginCreatePublicIPResponse = WorkloadNetworkPublicIP & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkPublicIP;
    };
};

/**
 * Contains response data for the listSegmentsNext operation.
 */
export type WorkloadNetworksListSegmentsNextResponse = WorkloadNetworkSegmentsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkSegmentsList;
    };
};

/**
 * Contains response data for the listDhcpNext operation.
 */
export type WorkloadNetworksListDhcpNextResponse = WorkloadNetworkDhcpList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkDhcpList;
    };
};

/**
 * Contains response data for the listGatewaysNext operation.
 */
export type WorkloadNetworksListGatewaysNextResponse = WorkloadNetworkGatewayList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkGatewayList;
    };
};

/**
 * Contains response data for the listPortMirroringNext operation.
 */
export type WorkloadNetworksListPortMirroringNextResponse = WorkloadNetworkPortMirroringList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkPortMirroringList;
    };
};

/**
 * Contains response data for the listVMGroupsNext operation.
 */
export type WorkloadNetworksListVMGroupsNextResponse = WorkloadNetworkVMGroupsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkVMGroupsList;
    };
};

/**
 * Contains response data for the listVirtualMachinesNext operation.
 */
export type WorkloadNetworksListVirtualMachinesNextResponse = WorkloadNetworkVirtualMachinesList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkVirtualMachinesList;
    };
};

/**
 * Contains response data for the listDnsServicesNext operation.
 */
export type WorkloadNetworksListDnsServicesNextResponse = WorkloadNetworkDnsServicesList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkDnsServicesList;
    };
};

/**
 * Contains response data for the listDnsZonesNext operation.
 */
export type WorkloadNetworksListDnsZonesNextResponse = WorkloadNetworkDnsZonesList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkDnsZonesList;
    };
};

/**
 * Contains response data for the listPublicIPsNext operation.
 */
export type WorkloadNetworksListPublicIPsNextResponse = WorkloadNetworkPublicIPsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadNetworkPublicIPsList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type CloudLinksListResponse = CloudLinkList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CloudLinkList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type CloudLinksGetResponse = CloudLink & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CloudLink;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type CloudLinksCreateOrUpdateResponse = CloudLink & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CloudLink;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type CloudLinksBeginCreateOrUpdateResponse = CloudLink & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CloudLink;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type CloudLinksListNextResponse = CloudLinkList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CloudLinkList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type AddonsListResponse = AddonList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AddonList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AddonsGetResponse = Addon & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Addon;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type AddonsCreateOrUpdateResponse = Addon & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Addon;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type AddonsBeginCreateOrUpdateResponse = Addon & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Addon;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type AddonsListNextResponse = AddonList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AddonList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type VirtualMachinesListResponse = VirtualMachinesList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachinesList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type VirtualMachinesGetResponse = VirtualMachine & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachine;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type VirtualMachinesListNextResponse = VirtualMachinesList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachinesList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type PlacementPoliciesListResponse = PlacementPoliciesList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PlacementPoliciesList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PlacementPoliciesGetResponse = PlacementPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PlacementPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type PlacementPoliciesCreateOrUpdateResponse = PlacementPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PlacementPolicy;
    };
};

/**
 * Contains response data for the update operation.
 */
export type PlacementPoliciesUpdateResponse = PlacementPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PlacementPolicy;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type PlacementPoliciesBeginCreateOrUpdateResponse = PlacementPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PlacementPolicy;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type PlacementPoliciesBeginUpdateResponse = PlacementPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PlacementPolicy;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type PlacementPoliciesListNextResponse = PlacementPoliciesList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PlacementPoliciesList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ScriptPackagesListResponse = ScriptPackagesList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScriptPackagesList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ScriptPackagesGetResponse = ScriptPackage & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScriptPackage;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ScriptPackagesListNextResponse = ScriptPackagesList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScriptPackagesList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ScriptCmdletsListResponse = ScriptCmdletsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScriptCmdletsList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ScriptCmdletsGetResponse = ScriptCmdlet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScriptCmdlet;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ScriptCmdletsListNextResponse = ScriptCmdletsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScriptCmdletsList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ScriptExecutionsListResponse = ScriptExecutionsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScriptExecutionsList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ScriptExecutionsGetResponse = ScriptExecution & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScriptExecution;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ScriptExecutionsCreateOrUpdateResponse = ScriptExecution & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScriptExecution;
    };
};

/**
 * Contains response data for the getExecutionLogs operation.
 */
export type ScriptExecutionsGetExecutionLogsResponse = ScriptExecution & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScriptExecution;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ScriptExecutionsBeginCreateOrUpdateResponse = ScriptExecution & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScriptExecution;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ScriptExecutionsListNextResponse = ScriptExecutionsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScriptExecutionsList;
    };
};
