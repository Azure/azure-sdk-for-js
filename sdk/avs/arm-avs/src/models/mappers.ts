/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const Trial: msRest.CompositeMapper = {
  serializedName: "Trial",
  type: {
    name: "Composite",
    className: "Trial",
    modelProperties: {
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      availableHosts: {
        readOnly: true,
        serializedName: "availableHosts",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Quota: msRest.CompositeMapper = {
  serializedName: "Quota",
  type: {
    name: "Composite",
    className: "Quota",
    modelProperties: {
      hostsRemaining: {
        readOnly: true,
        serializedName: "hostsRemaining",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Number"
            }
          }
        }
      },
      quotaEnabled: {
        readOnly: true,
        serializedName: "quotaEnabled",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: msRest.CompositeMapper = {
  serializedName: "ErrorAdditionalInfo",
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      info: {
        readOnly: true,
        serializedName: "info",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        readOnly: true,
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        readOnly: true,
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorResponse"
            }
          }
        }
      },
      additionalInfo: {
        readOnly: true,
        serializedName: "additionalInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "Operation_display",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        readOnly: true,
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        readOnly: true,
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        readOnly: true,
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        readOnly: true,
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      }
    }
  }
};

export const ExpressRouteAuthorization: msRest.CompositeMapper = {
  serializedName: "ExpressRouteAuthorization",
  type: {
    name: "Composite",
    className: "ExpressRouteAuthorization",
    modelProperties: {
      ...Resource.type.modelProperties,
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      expressRouteAuthorizationId: {
        readOnly: true,
        serializedName: "properties.expressRouteAuthorizationId",
        type: {
          name: "String"
        }
      },
      expressRouteAuthorizationKey: {
        readOnly: true,
        serializedName: "properties.expressRouteAuthorizationKey",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Circuit: msRest.CompositeMapper = {
  serializedName: "Circuit",
  type: {
    name: "Composite",
    className: "Circuit",
    modelProperties: {
      primarySubnet: {
        readOnly: true,
        serializedName: "primarySubnet",
        type: {
          name: "String"
        }
      },
      secondarySubnet: {
        readOnly: true,
        serializedName: "secondarySubnet",
        type: {
          name: "String"
        }
      },
      expressRouteID: {
        readOnly: true,
        serializedName: "expressRouteID",
        type: {
          name: "String"
        }
      },
      expressRoutePrivatePeeringID: {
        readOnly: true,
        serializedName: "expressRoutePrivatePeeringID",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Endpoints: msRest.CompositeMapper = {
  serializedName: "Endpoints",
  type: {
    name: "Composite",
    className: "Endpoints",
    modelProperties: {
      nsxtManager: {
        readOnly: true,
        serializedName: "nsxtManager",
        type: {
          name: "String"
        }
      },
      vcsa: {
        readOnly: true,
        serializedName: "vcsa",
        type: {
          name: "String"
        }
      },
      hcxCloudManager: {
        readOnly: true,
        serializedName: "hcxCloudManager",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IdentitySource: msRest.CompositeMapper = {
  serializedName: "IdentitySource",
  type: {
    name: "Composite",
    className: "IdentitySource",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      alias: {
        serializedName: "alias",
        type: {
          name: "String"
        }
      },
      domain: {
        serializedName: "domain",
        type: {
          name: "String"
        }
      },
      baseUserDN: {
        serializedName: "baseUserDN",
        type: {
          name: "String"
        }
      },
      baseGroupDN: {
        serializedName: "baseGroupDN",
        type: {
          name: "String"
        }
      },
      primaryServer: {
        serializedName: "primaryServer",
        type: {
          name: "String"
        }
      },
      secondaryServer: {
        serializedName: "secondaryServer",
        type: {
          name: "String"
        }
      },
      ssl: {
        serializedName: "ssl",
        type: {
          name: "String"
        }
      },
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Sku: msRest.CompositeMapper = {
  serializedName: "Sku",
  type: {
    name: "Composite",
    className: "Sku",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateCloud: msRest.CompositeMapper = {
  serializedName: "PrivateCloud",
  type: {
    name: "Composite",
    className: "PrivateCloud",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      sku: {
        required: true,
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      managementCluster: {
        serializedName: "properties.managementCluster",
        type: {
          name: "Composite",
          className: "ManagementCluster"
        }
      },
      internet: {
        serializedName: "properties.internet",
        type: {
          name: "String"
        }
      },
      identitySources: {
        serializedName: "properties.identitySources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IdentitySource"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      circuit: {
        serializedName: "properties.circuit",
        type: {
          name: "Composite",
          className: "Circuit"
        }
      },
      endpoints: {
        readOnly: true,
        serializedName: "properties.endpoints",
        type: {
          name: "Composite",
          className: "Endpoints"
        }
      },
      networkBlock: {
        required: true,
        serializedName: "properties.networkBlock",
        type: {
          name: "String"
        }
      },
      managementNetwork: {
        readOnly: true,
        serializedName: "properties.managementNetwork",
        type: {
          name: "String"
        }
      },
      provisioningNetwork: {
        readOnly: true,
        serializedName: "properties.provisioningNetwork",
        type: {
          name: "String"
        }
      },
      vmotionNetwork: {
        readOnly: true,
        serializedName: "properties.vmotionNetwork",
        type: {
          name: "String"
        }
      },
      vcenterPassword: {
        serializedName: "properties.vcenterPassword",
        type: {
          name: "String"
        }
      },
      nsxtPassword: {
        serializedName: "properties.nsxtPassword",
        type: {
          name: "String"
        }
      },
      vcenterCertificateThumbprint: {
        readOnly: true,
        serializedName: "properties.vcenterCertificateThumbprint",
        type: {
          name: "String"
        }
      },
      nsxtCertificateThumbprint: {
        readOnly: true,
        serializedName: "properties.nsxtCertificateThumbprint",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClusterUpdateProperties: msRest.CompositeMapper = {
  serializedName: "ClusterUpdateProperties",
  type: {
    name: "Composite",
    className: "ClusterUpdateProperties",
    modelProperties: {
      clusterSize: {
        serializedName: "clusterSize",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ManagementCluster: msRest.CompositeMapper = {
  serializedName: "ManagementCluster",
  type: {
    name: "Composite",
    className: "ManagementCluster",
    modelProperties: {
      ...ClusterUpdateProperties.type.modelProperties,
      clusterId: {
        readOnly: true,
        serializedName: "clusterId",
        type: {
          name: "Number"
        }
      },
      hosts: {
        readOnly: true,
        serializedName: "hosts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PrivateCloudUpdate: msRest.CompositeMapper = {
  serializedName: "PrivateCloudUpdate",
  type: {
    name: "Composite",
    className: "PrivateCloudUpdate",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      managementCluster: {
        serializedName: "properties.managementCluster",
        type: {
          name: "Composite",
          className: "ManagementCluster"
        }
      },
      internet: {
        serializedName: "properties.internet",
        type: {
          name: "String"
        }
      },
      identitySources: {
        serializedName: "properties.identitySources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IdentitySource"
            }
          }
        }
      }
    }
  }
};

export const Cluster: msRest.CompositeMapper = {
  serializedName: "Cluster",
  type: {
    name: "Composite",
    className: "Cluster",
    modelProperties: {
      ...Resource.type.modelProperties,
      sku: {
        required: true,
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      clusterSize: {
        serializedName: "properties.clusterSize",
        type: {
          name: "Number"
        }
      },
      clusterId: {
        readOnly: true,
        serializedName: "properties.clusterId",
        type: {
          name: "Number"
        }
      },
      hosts: {
        readOnly: true,
        serializedName: "properties.hosts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClusterUpdate: msRest.CompositeMapper = {
  serializedName: "ClusterUpdate",
  type: {
    name: "Composite",
    className: "ClusterUpdate",
    modelProperties: {
      clusterSize: {
        serializedName: "properties.clusterSize",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AdminCredentials: msRest.CompositeMapper = {
  serializedName: "AdminCredentials",
  type: {
    name: "Composite",
    className: "AdminCredentials",
    modelProperties: {
      nsxtUsername: {
        readOnly: true,
        serializedName: "nsxtUsername",
        type: {
          name: "String"
        }
      },
      nsxtPassword: {
        readOnly: true,
        serializedName: "nsxtPassword",
        type: {
          name: "String"
        }
      },
      vcenterUsername: {
        readOnly: true,
        serializedName: "vcenterUsername",
        type: {
          name: "String"
        }
      },
      vcenterPassword: {
        readOnly: true,
        serializedName: "vcenterPassword",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HcxEnterpriseSite: msRest.CompositeMapper = {
  serializedName: "HcxEnterpriseSite",
  type: {
    name: "Composite",
    className: "HcxEnterpriseSite",
    modelProperties: {
      ...Resource.type.modelProperties,
      activationKey: {
        readOnly: true,
        serializedName: "properties.activationKey",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationList: msRest.CompositeMapper = {
  serializedName: "OperationList",
  type: {
    name: "Composite",
    className: "OperationList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateCloudList: msRest.CompositeMapper = {
  serializedName: "PrivateCloudList",
  type: {
    name: "Composite",
    className: "PrivateCloudList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateCloud"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClusterList: msRest.CompositeMapper = {
  serializedName: "ClusterList",
  type: {
    name: "Composite",
    className: "ClusterList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Cluster"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HcxEnterpriseSiteList: msRest.CompositeMapper = {
  serializedName: "HcxEnterpriseSiteList",
  type: {
    name: "Composite",
    className: "HcxEnterpriseSiteList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HcxEnterpriseSite"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExpressRouteAuthorizationList: msRest.CompositeMapper = {
  serializedName: "ExpressRouteAuthorizationList",
  type: {
    name: "Composite",
    className: "ExpressRouteAuthorizationList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExpressRouteAuthorization"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
