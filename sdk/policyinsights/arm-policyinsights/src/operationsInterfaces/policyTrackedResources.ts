/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  PolicyTrackedResource,
  PolicyTrackedResourcesResourceType,
  PolicyTrackedResourcesListQueryResultsForManagementGroupOptionalParams,
  PolicyTrackedResourcesListQueryResultsForSubscriptionOptionalParams,
  PolicyTrackedResourcesListQueryResultsForResourceGroupOptionalParams,
  PolicyTrackedResourcesListQueryResultsForResourceOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a PolicyTrackedResources. */
export interface PolicyTrackedResources {
  /**
   * Queries policy tracked resources under the management group.
   * @param managementGroupName Management group name.
   * @param policyTrackedResourcesResource The name of the virtual resource under PolicyTrackedResources
   *                                       resource type; only "default" is allowed.
   * @param options The options parameters.
   */
  listQueryResultsForManagementGroup(
    managementGroupName: string,
    policyTrackedResourcesResource: PolicyTrackedResourcesResourceType,
    options?: PolicyTrackedResourcesListQueryResultsForManagementGroupOptionalParams
  ): PagedAsyncIterableIterator<PolicyTrackedResource>;
  /**
   * Queries policy tracked resources under the subscription.
   * @param policyTrackedResourcesResource The name of the virtual resource under PolicyTrackedResources
   *                                       resource type; only "default" is allowed.
   * @param options The options parameters.
   */
  listQueryResultsForSubscription(
    policyTrackedResourcesResource: PolicyTrackedResourcesResourceType,
    options?: PolicyTrackedResourcesListQueryResultsForSubscriptionOptionalParams
  ): PagedAsyncIterableIterator<PolicyTrackedResource>;
  /**
   * Queries policy tracked resources under the resource group.
   * @param resourceGroupName Resource group name.
   * @param policyTrackedResourcesResource The name of the virtual resource under PolicyTrackedResources
   *                                       resource type; only "default" is allowed.
   * @param options The options parameters.
   */
  listQueryResultsForResourceGroup(
    resourceGroupName: string,
    policyTrackedResourcesResource: PolicyTrackedResourcesResourceType,
    options?: PolicyTrackedResourcesListQueryResultsForResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<PolicyTrackedResource>;
  /**
   * Queries policy tracked resources under the resource.
   * @param resourceId Resource ID.
   * @param policyTrackedResourcesResource The name of the virtual resource under PolicyTrackedResources
   *                                       resource type; only "default" is allowed.
   * @param options The options parameters.
   */
  listQueryResultsForResource(
    resourceId: string,
    policyTrackedResourcesResource: PolicyTrackedResourcesResourceType,
    options?: PolicyTrackedResourcesListQueryResultsForResourceOptionalParams
  ): PagedAsyncIterableIterator<PolicyTrackedResource>;
}
