/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * The policy details.
 */
export interface PolicyDetails {
  /**
   * The ID of the policy definition.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly policyDefinitionId?: string;
  /**
   * The ID of the policy assignment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly policyAssignmentId?: string;
  /**
   * The display name of the policy assignment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly policyAssignmentDisplayName?: string;
  /**
   * The scope of the policy assignment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly policyAssignmentScope?: string;
  /**
   * The ID of the policy set definition.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly policySetDefinitionId?: string;
  /**
   * The policy definition reference ID within the policy set definition.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly policyDefinitionReferenceId?: string;
}

/**
 * The details of the policy triggered deployment that created or modified the tracked resource.
 */
export interface TrackedResourceModificationDetails {
  /**
   * The details of the policy that created or modified the tracked resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly policyDetails?: PolicyDetails;
  /**
   * The ID of the deployment that created or modified the tracked resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly deploymentId?: string;
  /**
   * Timestamp of the deployment that created or modified the tracked resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly deploymentTime?: Date;
}

/**
 * Policy tracked resource record.
 */
export interface PolicyTrackedResource {
  /**
   * The ID of the policy tracked resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly trackedResourceId?: string;
  /**
   * The details of the policy that require the tracked resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly policyDetails?: PolicyDetails;
  /**
   * The details of the policy triggered deployment that created the tracked resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdBy?: TrackedResourceModificationDetails;
  /**
   * The details of the policy triggered deployment that modified the tracked resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastModifiedBy?: TrackedResourceModificationDetails;
  /**
   * Timestamp of the last update to the tracked resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastUpdateUtc?: Date;
}

/**
 * Error definition.
 */
export interface QueryFailureError {
  /**
   * Service specific error code which serves as the substatus for the HTTP error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * Description of the error.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
}

/**
 * Error response.
 */
export interface QueryFailure {
  /**
   * Error definition.
   */
  error?: QueryFailureError;
}

/**
 * The filters that will be applied to determine which resources to remediate.
 */
export interface RemediationFilters {
  /**
   * The resource locations that will be remediated.
   */
  locations?: string[];
}

/**
 * The deployment status summary for all deployments created by the remediation.
 */
export interface RemediationDeploymentSummary {
  /**
   * The number of deployments required by the remediation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly totalDeployments?: number;
  /**
   * The number of deployments required by the remediation that have succeeded.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly successfulDeployments?: number;
  /**
   * The number of deployments required by the remediation that have failed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly failedDeployments?: number;
}

/**
 * The remediation definition.
 */
export interface Remediation extends BaseResource {
  /**
   * The resource ID of the policy assignment that should be remediated.
   */
  policyAssignmentId?: string;
  /**
   * The policy definition reference ID of the individual definition that should be remediated.
   * Required when the policy assignment being remediated assigns a policy set definition.
   */
  policyDefinitionReferenceId?: string;
  /**
   * The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not
   * specified. Possible values include: 'ExistingNonCompliant', 'ReEvaluateCompliance'
   */
  resourceDiscoveryMode?: ResourceDiscoveryMode;
  /**
   * The status of the remediation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * The time at which the remediation was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdOn?: Date;
  /**
   * The time at which the remediation was last updated.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastUpdatedOn?: Date;
  /**
   * The filters that will be applied to determine which resources to remediate.
   */
  filters?: RemediationFilters;
  /**
   * The deployment status summary for all deployments created by the remediation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly deploymentStatus?: RemediationDeploymentSummary;
  /**
   * The ID of the remediation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The type of the remediation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The name of the remediation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
}

/**
 * Scenario specific error details.
 */
export interface TypedErrorInfo {
  /**
   * The type of included error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The scenario specific error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly info?: any;
}

/**
 * Error definition.
 */
export interface ErrorDefinition {
  /**
   * Service specific error code which serves as the substatus for the HTTP error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * Description of the error.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The target of the error.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly target?: string;
  /**
   * Internal error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: ErrorDefinition[];
  /**
   * Additional scenario specific error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly additionalInfo?: TypedErrorInfo[];
}

/**
 * Details of a single deployment created by the remediation.
 */
export interface RemediationDeployment {
  /**
   * Resource ID of the resource that is being remediated by the deployment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly remediatedResourceId?: string;
  /**
   * Resource ID of the template deployment that will remediate the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly deploymentId?: string;
  /**
   * Status of the remediation deployment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: string;
  /**
   * Location of the resource that is being remediated.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceLocation?: string;
  /**
   * Error encountered while remediated the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: ErrorDefinition;
  /**
   * The time at which the remediation was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdOn?: Date;
  /**
   * The time at which the remediation deployment was last updated.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastUpdatedOn?: Date;
}

/**
 * Error response.
 */
export interface ErrorResponse {
  /**
   * The error details.
   */
  error?: ErrorDefinition;
}

/**
 * Policy event record.
 */
export interface PolicyEvent {
  /**
   * OData entity ID; always set to null since policy event records do not have an entity ID.
   */
  odataid?: string;
  /**
   * OData context string; used by OData clients to resolve type information based on metadata.
   */
  odatacontext?: string;
  /**
   * Timestamp for the policy event record.
   */
  timestamp?: Date;
  /**
   * Resource ID.
   */
  resourceId?: string;
  /**
   * Policy assignment ID.
   */
  policyAssignmentId?: string;
  /**
   * Policy definition ID.
   */
  policyDefinitionId?: string;
  /**
   * Effective parameters for the policy assignment.
   */
  effectiveParameters?: string;
  /**
   * Flag which states whether the resource is compliant against the policy assignment it was
   * evaluated against.
   */
  isCompliant?: boolean;
  /**
   * Subscription ID.
   */
  subscriptionId?: string;
  /**
   * Resource type.
   */
  resourceType?: string;
  /**
   * Resource location.
   */
  resourceLocation?: string;
  /**
   * Resource group name.
   */
  resourceGroup?: string;
  /**
   * List of resource tags.
   */
  resourceTags?: string;
  /**
   * Policy assignment name.
   */
  policyAssignmentName?: string;
  /**
   * Policy assignment owner.
   */
  policyAssignmentOwner?: string;
  /**
   * Policy assignment parameters.
   */
  policyAssignmentParameters?: string;
  /**
   * Policy assignment scope.
   */
  policyAssignmentScope?: string;
  /**
   * Policy definition name.
   */
  policyDefinitionName?: string;
  /**
   * Policy definition action, i.e. effect.
   */
  policyDefinitionAction?: string;
  /**
   * Policy definition category.
   */
  policyDefinitionCategory?: string;
  /**
   * Policy set definition ID, if the policy assignment is for a policy set.
   */
  policySetDefinitionId?: string;
  /**
   * Policy set definition name, if the policy assignment is for a policy set.
   */
  policySetDefinitionName?: string;
  /**
   * Policy set definition owner, if the policy assignment is for a policy set.
   */
  policySetDefinitionOwner?: string;
  /**
   * Policy set definition category, if the policy assignment is for a policy set.
   */
  policySetDefinitionCategory?: string;
  /**
   * Policy set definition parameters, if the policy assignment is for a policy set.
   */
  policySetDefinitionParameters?: string;
  /**
   * Comma separated list of management group IDs, which represent the hierarchy of the management
   * groups the resource is under.
   */
  managementGroupIds?: string;
  /**
   * Reference ID for the policy definition inside the policy set, if the policy assignment is for
   * a policy set.
   */
  policyDefinitionReferenceId?: string;
  /**
   * Tenant ID for the policy event record.
   */
  tenantId?: string;
  /**
   * Principal object ID for the user who initiated the resource operation that triggered the
   * policy event.
   */
  principalOid?: string;
  /**
   * Describes unknown properties. The value of an unknown property can be of "any" type.
   */
  [property: string]: any;
}

/**
 * Query results.
 */
export interface PolicyEventsQueryResults {
  /**
   * OData context string; used by OData clients to resolve type information based on metadata.
   */
  odatacontext?: string;
  /**
   * OData entity count; represents the number of policy event records returned.
   */
  odatacount?: number;
  /**
   * Query results.
   */
  value?: PolicyEvent[];
}

/**
 * Evaluation details of policy language expressions.
 */
export interface ExpressionEvaluationDetails {
  /**
   * Evaluation result.
   */
  result?: string;
  /**
   * Expression evaluated.
   */
  expression?: string;
  /**
   * Property path if the expression is a field or an alias.
   */
  path?: string;
  /**
   * Value of the expression.
   */
  expressionValue?: any;
  /**
   * Target value to be compared with the expression value.
   */
  targetValue?: any;
  /**
   * Operator to compare the expression value and the target value.
   */
  operator?: string;
}

/**
 * Evaluation details of IfNotExists effect.
 */
export interface IfNotExistsEvaluationDetails {
  /**
   * ID of the last evaluated resource for IfNotExists effect.
   */
  resourceId?: string;
  /**
   * Total number of resources to which the existence condition is applicable.
   */
  totalResources?: number;
}

/**
 * Policy evaluation details.
 */
export interface PolicyEvaluationDetails {
  /**
   * Details of the evaluated expressions.
   */
  evaluatedExpressions?: ExpressionEvaluationDetails[];
  /**
   * Evaluation details of IfNotExists effect.
   */
  ifNotExistsDetails?: IfNotExistsEvaluationDetails;
}

/**
 * Policy state record.
 */
export interface PolicyState {
  /**
   * OData entity ID; always set to null since policy state records do not have an entity ID.
   */
  odataid?: string;
  /**
   * OData context string; used by OData clients to resolve type information based on metadata.
   */
  odatacontext?: string;
  /**
   * Timestamp for the policy state record.
   */
  timestamp?: Date;
  /**
   * Resource ID.
   */
  resourceId?: string;
  /**
   * Policy assignment ID.
   */
  policyAssignmentId?: string;
  /**
   * Policy definition ID.
   */
  policyDefinitionId?: string;
  /**
   * Effective parameters for the policy assignment.
   */
  effectiveParameters?: string;
  /**
   * Flag which states whether the resource is compliant against the policy assignment it was
   * evaluated against. This property is deprecated; please use ComplianceState instead.
   */
  isCompliant?: boolean;
  /**
   * Subscription ID.
   */
  subscriptionId?: string;
  /**
   * Resource type.
   */
  resourceType?: string;
  /**
   * Resource location.
   */
  resourceLocation?: string;
  /**
   * Resource group name.
   */
  resourceGroup?: string;
  /**
   * List of resource tags.
   */
  resourceTags?: string;
  /**
   * Policy assignment name.
   */
  policyAssignmentName?: string;
  /**
   * Policy assignment owner.
   */
  policyAssignmentOwner?: string;
  /**
   * Policy assignment parameters.
   */
  policyAssignmentParameters?: string;
  /**
   * Policy assignment scope.
   */
  policyAssignmentScope?: string;
  /**
   * Policy definition name.
   */
  policyDefinitionName?: string;
  /**
   * Policy definition action, i.e. effect.
   */
  policyDefinitionAction?: string;
  /**
   * Policy definition category.
   */
  policyDefinitionCategory?: string;
  /**
   * Policy set definition ID, if the policy assignment is for a policy set.
   */
  policySetDefinitionId?: string;
  /**
   * Policy set definition name, if the policy assignment is for a policy set.
   */
  policySetDefinitionName?: string;
  /**
   * Policy set definition owner, if the policy assignment is for a policy set.
   */
  policySetDefinitionOwner?: string;
  /**
   * Policy set definition category, if the policy assignment is for a policy set.
   */
  policySetDefinitionCategory?: string;
  /**
   * Policy set definition parameters, if the policy assignment is for a policy set.
   */
  policySetDefinitionParameters?: string;
  /**
   * Comma separated list of management group IDs, which represent the hierarchy of the management
   * groups the resource is under.
   */
  managementGroupIds?: string;
  /**
   * Reference ID for the policy definition inside the policy set, if the policy assignment is for
   * a policy set.
   */
  policyDefinitionReferenceId?: string;
  /**
   * Compliance state of the resource.
   */
  complianceState?: string;
  /**
   * Policy evaluation details.
   */
  policyEvaluationDetails?: PolicyEvaluationDetails;
  /**
   * Policy definition group names.
   */
  policyDefinitionGroupNames?: string[];
  /**
   * Evaluated policy definition version.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly policyDefinitionVersion?: string;
  /**
   * Evaluated policy set definition version.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly policySetDefinitionVersion?: string;
  /**
   * Evaluated policy assignment version.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly policyAssignmentVersion?: string;
  /**
   * Describes unknown properties. The value of an unknown property can be of "any" type.
   */
  [property: string]: any;
}

/**
 * Query results.
 */
export interface PolicyStatesQueryResults {
  /**
   * OData context string; used by OData clients to resolve type information based on metadata.
   */
  odatacontext?: string;
  /**
   * OData entity count; represents the number of policy state records returned.
   */
  odatacount?: number;
  /**
   * Query results.
   */
  value?: PolicyState[];
}

/**
 * The compliance state rollup.
 */
export interface ComplianceDetail {
  /**
   * The compliance state.
   */
  complianceState?: string;
  /**
   * Summarized count value for this compliance state.
   */
  count?: number;
}

/**
 * Compliance summary on a particular summary level.
 */
export interface SummaryResults {
  /**
   * HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for
   * the compliance summary. This property will not be available by default in future API versions,
   * but could be queried explicitly.
   */
  queryResultsUri?: string;
  /**
   * Number of non-compliant resources.
   */
  nonCompliantResources?: number;
  /**
   * Number of non-compliant policies.
   */
  nonCompliantPolicies?: number;
  /**
   * The resources summary at this level.
   */
  resourceDetails?: ComplianceDetail[];
  /**
   * The policy artifact summary at this level. For query scope level, it represents policy
   * assignment summary. For policy assignment level, it represents policy definitions summary.
   */
  policyDetails?: ComplianceDetail[];
  /**
   * The policy definition group summary at this level.
   */
  policyGroupDetails?: ComplianceDetail[];
}

/**
 * Policy definition summary.
 */
export interface PolicyDefinitionSummary {
  /**
   * Policy definition ID.
   */
  policyDefinitionId?: string;
  /**
   * Policy definition reference ID.
   */
  policyDefinitionReferenceId?: string;
  /**
   * Policy definition group names.
   */
  policyDefinitionGroupNames?: string[];
  /**
   * Policy effect, i.e. policy definition action.
   */
  effect?: string;
  /**
   * Compliance summary for the policy definition.
   */
  results?: SummaryResults;
}

/**
 * Policy definition group summary.
 */
export interface PolicyGroupSummary {
  /**
   * Policy group name.
   */
  policyGroupName?: string;
  /**
   * Compliance summary for the policy definition group.
   */
  results?: SummaryResults;
}

/**
 * Policy assignment summary.
 */
export interface PolicyAssignmentSummary {
  /**
   * Policy assignment ID.
   */
  policyAssignmentId?: string;
  /**
   * Policy set definition ID, if the policy assignment is for a policy set.
   */
  policySetDefinitionId?: string;
  /**
   * Compliance summary for the policy assignment.
   */
  results?: SummaryResults;
  /**
   * Policy definitions summary.
   */
  policyDefinitions?: PolicyDefinitionSummary[];
  /**
   * Policy definition group summary.
   */
  policyGroups?: PolicyGroupSummary[];
}

/**
 * Summary results.
 */
export interface Summary {
  /**
   * OData entity ID; always set to null since summaries do not have an entity ID.
   */
  odataid?: string;
  /**
   * OData context string; used by OData clients to resolve type information based on metadata.
   */
  odatacontext?: string;
  /**
   * Compliance summary for all policy assignments.
   */
  results?: SummaryResults;
  /**
   * Policy assignments summary.
   */
  policyAssignments?: PolicyAssignmentSummary[];
}

/**
 * Summarize action results.
 */
export interface SummarizeResults {
  /**
   * OData context string; used by OData clients to resolve type information based on metadata.
   */
  odatacontext?: string;
  /**
   * OData entity count; represents the number of summaries returned; always set to 1.
   */
  odatacount?: number;
  /**
   * Summarize action results.
   */
  value?: Summary[];
}

/**
 * Display metadata associated with the operation.
 */
export interface OperationDisplay {
  /**
   * Resource provider name.
   */
  provider?: string;
  /**
   * Resource name on which the operation is performed.
   */
  resource?: string;
  /**
   * Operation name.
   */
  operation?: string;
  /**
   * Operation description.
   */
  description?: string;
}

/**
 * Operation definition.
 */
export interface Operation {
  /**
   * Operation name.
   */
  name?: string;
  /**
   * Display metadata associated with the operation.
   */
  display?: OperationDisplay;
}

/**
 * List of available operations.
 */
export interface OperationsListResults {
  /**
   * OData entity count; represents the number of operations returned.
   */
  odatacount?: number;
  /**
   * List of available operations.
   */
  value?: Operation[];
}

/**
 * Policy metadata resource definition.
 */
export interface PolicyMetadata {
  /**
   * The policy metadata identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly metadataId?: string;
  /**
   * The category of the policy metadata.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly category?: string;
  /**
   * The title of the policy metadata.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly title?: string;
  /**
   * The owner of the policy metadata.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly owner?: string;
  /**
   * Url for getting additional content about the resource metadata.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly additionalContentUrl?: string;
  /**
   * Additional metadata.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly metadata?: any;
  /**
   * The description of the policy metadata.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * The requirements of the policy metadata.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requirements?: string;
  /**
   * The ID of the policy metadata.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The type of the policy metadata.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The name of the policy metadata.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
}

/**
 * Slim version of policy metadata resource definition, excluding properties with large strings
 */
export interface SlimPolicyMetadata {
  /**
   * The policy metadata identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly metadataId?: string;
  /**
   * The category of the policy metadata.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly category?: string;
  /**
   * The title of the policy metadata.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly title?: string;
  /**
   * The owner of the policy metadata.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly owner?: string;
  /**
   * Url for getting additional content about the resource metadata.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly additionalContentUrl?: string;
  /**
   * Additional metadata.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly metadata?: any;
  /**
   * The ID of the policy metadata.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The type of the policy metadata.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The name of the policy metadata.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
}

/**
 * Additional parameters for a set of operations.
 */
export interface QueryOptions {
  /**
   * Maximum number of records to return.
   */
  top?: number;
  /**
   * OData filter expression.
   */
  filter?: string;
  /**
   * Ordering expression using OData notation. One or more comma-separated column names with an
   * optional "desc" (the default) or "asc", e.g. "$orderby=PolicyAssignmentId, ResourceId asc".
   */
  orderBy?: string;
  /**
   * Select expression using OData notation. Limits the columns on each record to just those
   * requested, e.g. "$select=PolicyAssignmentId, ResourceId".
   */
  select?: string;
  /**
   * ISO 8601 formatted timestamp specifying the start time of the interval to query. When not
   * specified, the service uses ($to - 1-day).
   */
  from?: Date;
  /**
   * ISO 8601 formatted timestamp specifying the end time of the interval to query. When not
   * specified, the service uses request time.
   */
  to?: Date;
  /**
   * OData apply expression for aggregations.
   */
  apply?: string;
  /**
   * The $expand query parameter. For example, to expand policyEvaluationDetails, use
   * $expand=policyEvaluationDetails
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface PolicyTrackedResourcesListQueryResultsForManagementGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface PolicyTrackedResourcesListQueryResultsForSubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface PolicyTrackedResourcesListQueryResultsForResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface PolicyTrackedResourcesListQueryResultsForResourceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface RemediationsListDeploymentsAtManagementGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface RemediationsListForManagementGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface RemediationsListDeploymentsAtSubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface RemediationsListForSubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface RemediationsListDeploymentsAtResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface RemediationsListForResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface RemediationsListDeploymentsAtResourceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface RemediationsListForResourceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface PolicyEventsListQueryResultsForManagementGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface PolicyEventsListQueryResultsForSubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface PolicyEventsListQueryResultsForResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface PolicyEventsListQueryResultsForResourceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface PolicyEventsListQueryResultsForPolicySetDefinitionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface PolicyEventsListQueryResultsForPolicyDefinitionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface PolicyEventsListQueryResultsForSubscriptionLevelPolicyAssignmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface PolicyEventsListQueryResultsForResourceGroupLevelPolicyAssignmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface PolicyStatesListQueryResultsForManagementGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface PolicyStatesSummarizeForManagementGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface PolicyStatesListQueryResultsForSubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface PolicyStatesSummarizeForSubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface PolicyStatesListQueryResultsForResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface PolicyStatesSummarizeForResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface PolicyStatesListQueryResultsForResourceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface PolicyStatesSummarizeForResourceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface PolicyStatesListQueryResultsForPolicySetDefinitionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface PolicyStatesSummarizeForPolicySetDefinitionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface PolicyStatesListQueryResultsForPolicyDefinitionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface PolicyStatesSummarizeForPolicyDefinitionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface PolicyStatesListQueryResultsForSubscriptionLevelPolicyAssignmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface PolicyStatesSummarizeForSubscriptionLevelPolicyAssignmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface PolicyStatesListQueryResultsForResourceGroupLevelPolicyAssignmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface PolicyStatesSummarizeForResourceGroupLevelPolicyAssignmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * Optional Parameters.
 */
export interface PolicyMetadataListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Additional parameters for the operation
   */
  queryOptions?: QueryOptions;
}

/**
 * An interface representing PolicyInsightsClientOptions.
 */
export interface PolicyInsightsClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * Query results.
 * @extends Array<PolicyTrackedResource>
 */
export interface PolicyTrackedResourcesQueryResults extends Array<PolicyTrackedResource> {
  /**
   * The URL to get the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * List of deployments for a remediation.
 * @extends Array<RemediationDeployment>
 */
export interface RemediationDeploymentsListResult extends Array<RemediationDeployment> {
  /**
   * The URL to get the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * List of remediations.
 * @extends Array<Remediation>
 */
export interface RemediationListResult extends Array<Remediation> {
  /**
   * The URL to get the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of policy metadata resources.
 * @extends Array<SlimPolicyMetadata>
 */
export interface PolicyMetadataCollection extends Array<SlimPolicyMetadata> {
  /**
   * The URL to get the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for ResourceDiscoveryMode.
 * Possible values include: 'ExistingNonCompliant', 'ReEvaluateCompliance'
 * @readonly
 * @enum {string}
 */
export type ResourceDiscoveryMode = 'ExistingNonCompliant' | 'ReEvaluateCompliance';

/**
 * Defines values for PolicyStatesResource.
 * Possible values include: 'default', 'latest'
 * @readonly
 * @enum {string}
 */
export type PolicyStatesResource = 'default' | 'latest';

/**
 * Contains response data for the listQueryResultsForManagementGroup operation.
 */
export type PolicyTrackedResourcesListQueryResultsForManagementGroupResponse = PolicyTrackedResourcesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyTrackedResourcesQueryResults;
    };
};

/**
 * Contains response data for the listQueryResultsForSubscription operation.
 */
export type PolicyTrackedResourcesListQueryResultsForSubscriptionResponse = PolicyTrackedResourcesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyTrackedResourcesQueryResults;
    };
};

/**
 * Contains response data for the listQueryResultsForResourceGroup operation.
 */
export type PolicyTrackedResourcesListQueryResultsForResourceGroupResponse = PolicyTrackedResourcesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyTrackedResourcesQueryResults;
    };
};

/**
 * Contains response data for the listQueryResultsForResource operation.
 */
export type PolicyTrackedResourcesListQueryResultsForResourceResponse = PolicyTrackedResourcesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyTrackedResourcesQueryResults;
    };
};

/**
 * Contains response data for the listQueryResultsForManagementGroupNext operation.
 */
export type PolicyTrackedResourcesListQueryResultsForManagementGroupNextResponse = PolicyTrackedResourcesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyTrackedResourcesQueryResults;
    };
};

/**
 * Contains response data for the listQueryResultsForSubscriptionNext operation.
 */
export type PolicyTrackedResourcesListQueryResultsForSubscriptionNextResponse = PolicyTrackedResourcesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyTrackedResourcesQueryResults;
    };
};

/**
 * Contains response data for the listQueryResultsForResourceGroupNext operation.
 */
export type PolicyTrackedResourcesListQueryResultsForResourceGroupNextResponse = PolicyTrackedResourcesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyTrackedResourcesQueryResults;
    };
};

/**
 * Contains response data for the listQueryResultsForResourceNext operation.
 */
export type PolicyTrackedResourcesListQueryResultsForResourceNextResponse = PolicyTrackedResourcesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyTrackedResourcesQueryResults;
    };
};

/**
 * Contains response data for the listDeploymentsAtManagementGroup operation.
 */
export type RemediationsListDeploymentsAtManagementGroupResponse = RemediationDeploymentsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationDeploymentsListResult;
    };
};

/**
 * Contains response data for the cancelAtManagementGroup operation.
 */
export type RemediationsCancelAtManagementGroupResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the listForManagementGroup operation.
 */
export type RemediationsListForManagementGroupResponse = RemediationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationListResult;
    };
};

/**
 * Contains response data for the createOrUpdateAtManagementGroup operation.
 */
export type RemediationsCreateOrUpdateAtManagementGroupResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the getAtManagementGroup operation.
 */
export type RemediationsGetAtManagementGroupResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the deleteAtManagementGroup operation.
 */
export type RemediationsDeleteAtManagementGroupResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the listDeploymentsAtSubscription operation.
 */
export type RemediationsListDeploymentsAtSubscriptionResponse = RemediationDeploymentsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationDeploymentsListResult;
    };
};

/**
 * Contains response data for the cancelAtSubscription operation.
 */
export type RemediationsCancelAtSubscriptionResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the listForSubscription operation.
 */
export type RemediationsListForSubscriptionResponse = RemediationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationListResult;
    };
};

/**
 * Contains response data for the createOrUpdateAtSubscription operation.
 */
export type RemediationsCreateOrUpdateAtSubscriptionResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the getAtSubscription operation.
 */
export type RemediationsGetAtSubscriptionResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the deleteAtSubscription operation.
 */
export type RemediationsDeleteAtSubscriptionResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the listDeploymentsAtResourceGroup operation.
 */
export type RemediationsListDeploymentsAtResourceGroupResponse = RemediationDeploymentsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationDeploymentsListResult;
    };
};

/**
 * Contains response data for the cancelAtResourceGroup operation.
 */
export type RemediationsCancelAtResourceGroupResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the listForResourceGroup operation.
 */
export type RemediationsListForResourceGroupResponse = RemediationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationListResult;
    };
};

/**
 * Contains response data for the createOrUpdateAtResourceGroup operation.
 */
export type RemediationsCreateOrUpdateAtResourceGroupResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the getAtResourceGroup operation.
 */
export type RemediationsGetAtResourceGroupResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the deleteAtResourceGroup operation.
 */
export type RemediationsDeleteAtResourceGroupResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the listDeploymentsAtResource operation.
 */
export type RemediationsListDeploymentsAtResourceResponse = RemediationDeploymentsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationDeploymentsListResult;
    };
};

/**
 * Contains response data for the cancelAtResource operation.
 */
export type RemediationsCancelAtResourceResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the listForResource operation.
 */
export type RemediationsListForResourceResponse = RemediationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationListResult;
    };
};

/**
 * Contains response data for the createOrUpdateAtResource operation.
 */
export type RemediationsCreateOrUpdateAtResourceResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the getAtResource operation.
 */
export type RemediationsGetAtResourceResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the deleteAtResource operation.
 */
export type RemediationsDeleteAtResourceResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the listDeploymentsAtManagementGroupNext operation.
 */
export type RemediationsListDeploymentsAtManagementGroupNextResponse = RemediationDeploymentsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationDeploymentsListResult;
    };
};

/**
 * Contains response data for the listForManagementGroupNext operation.
 */
export type RemediationsListForManagementGroupNextResponse = RemediationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationListResult;
    };
};

/**
 * Contains response data for the listDeploymentsAtSubscriptionNext operation.
 */
export type RemediationsListDeploymentsAtSubscriptionNextResponse = RemediationDeploymentsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationDeploymentsListResult;
    };
};

/**
 * Contains response data for the listForSubscriptionNext operation.
 */
export type RemediationsListForSubscriptionNextResponse = RemediationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationListResult;
    };
};

/**
 * Contains response data for the listDeploymentsAtResourceGroupNext operation.
 */
export type RemediationsListDeploymentsAtResourceGroupNextResponse = RemediationDeploymentsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationDeploymentsListResult;
    };
};

/**
 * Contains response data for the listForResourceGroupNext operation.
 */
export type RemediationsListForResourceGroupNextResponse = RemediationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationListResult;
    };
};

/**
 * Contains response data for the listDeploymentsAtResourceNext operation.
 */
export type RemediationsListDeploymentsAtResourceNextResponse = RemediationDeploymentsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationDeploymentsListResult;
    };
};

/**
 * Contains response data for the listForResourceNext operation.
 */
export type RemediationsListForResourceNextResponse = RemediationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationListResult;
    };
};

/**
 * Contains response data for the listQueryResultsForManagementGroup operation.
 */
export type PolicyEventsListQueryResultsForManagementGroupResponse = PolicyEventsQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyEventsQueryResults;
    };
};

/**
 * Contains response data for the listQueryResultsForSubscription operation.
 */
export type PolicyEventsListQueryResultsForSubscriptionResponse = PolicyEventsQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyEventsQueryResults;
    };
};

/**
 * Contains response data for the listQueryResultsForResourceGroup operation.
 */
export type PolicyEventsListQueryResultsForResourceGroupResponse = PolicyEventsQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyEventsQueryResults;
    };
};

/**
 * Contains response data for the listQueryResultsForResource operation.
 */
export type PolicyEventsListQueryResultsForResourceResponse = PolicyEventsQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyEventsQueryResults;
    };
};

/**
 * Contains response data for the listQueryResultsForPolicySetDefinition operation.
 */
export type PolicyEventsListQueryResultsForPolicySetDefinitionResponse = PolicyEventsQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyEventsQueryResults;
    };
};

/**
 * Contains response data for the listQueryResultsForPolicyDefinition operation.
 */
export type PolicyEventsListQueryResultsForPolicyDefinitionResponse = PolicyEventsQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyEventsQueryResults;
    };
};

/**
 * Contains response data for the listQueryResultsForSubscriptionLevelPolicyAssignment operation.
 */
export type PolicyEventsListQueryResultsForSubscriptionLevelPolicyAssignmentResponse = PolicyEventsQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyEventsQueryResults;
    };
};

/**
 * Contains response data for the listQueryResultsForResourceGroupLevelPolicyAssignment operation.
 */
export type PolicyEventsListQueryResultsForResourceGroupLevelPolicyAssignmentResponse = PolicyEventsQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyEventsQueryResults;
    };
};

/**
 * Contains response data for the getMetadata operation.
 */
export type PolicyEventsGetMetadataResponse = {
  /**
   * The parsed response body.
   */
  body: string;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the listQueryResultsForManagementGroup operation.
 */
export type PolicyStatesListQueryResultsForManagementGroupResponse = PolicyStatesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyStatesQueryResults;
    };
};

/**
 * Contains response data for the summarizeForManagementGroup operation.
 */
export type PolicyStatesSummarizeForManagementGroupResponse = SummarizeResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SummarizeResults;
    };
};

/**
 * Contains response data for the listQueryResultsForSubscription operation.
 */
export type PolicyStatesListQueryResultsForSubscriptionResponse = PolicyStatesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyStatesQueryResults;
    };
};

/**
 * Contains response data for the summarizeForSubscription operation.
 */
export type PolicyStatesSummarizeForSubscriptionResponse = SummarizeResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SummarizeResults;
    };
};

/**
 * Contains response data for the listQueryResultsForResourceGroup operation.
 */
export type PolicyStatesListQueryResultsForResourceGroupResponse = PolicyStatesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyStatesQueryResults;
    };
};

/**
 * Contains response data for the summarizeForResourceGroup operation.
 */
export type PolicyStatesSummarizeForResourceGroupResponse = SummarizeResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SummarizeResults;
    };
};

/**
 * Contains response data for the listQueryResultsForResource operation.
 */
export type PolicyStatesListQueryResultsForResourceResponse = PolicyStatesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyStatesQueryResults;
    };
};

/**
 * Contains response data for the summarizeForResource operation.
 */
export type PolicyStatesSummarizeForResourceResponse = SummarizeResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SummarizeResults;
    };
};

/**
 * Contains response data for the listQueryResultsForPolicySetDefinition operation.
 */
export type PolicyStatesListQueryResultsForPolicySetDefinitionResponse = PolicyStatesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyStatesQueryResults;
    };
};

/**
 * Contains response data for the summarizeForPolicySetDefinition operation.
 */
export type PolicyStatesSummarizeForPolicySetDefinitionResponse = SummarizeResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SummarizeResults;
    };
};

/**
 * Contains response data for the listQueryResultsForPolicyDefinition operation.
 */
export type PolicyStatesListQueryResultsForPolicyDefinitionResponse = PolicyStatesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyStatesQueryResults;
    };
};

/**
 * Contains response data for the summarizeForPolicyDefinition operation.
 */
export type PolicyStatesSummarizeForPolicyDefinitionResponse = SummarizeResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SummarizeResults;
    };
};

/**
 * Contains response data for the listQueryResultsForSubscriptionLevelPolicyAssignment operation.
 */
export type PolicyStatesListQueryResultsForSubscriptionLevelPolicyAssignmentResponse = PolicyStatesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyStatesQueryResults;
    };
};

/**
 * Contains response data for the summarizeForSubscriptionLevelPolicyAssignment operation.
 */
export type PolicyStatesSummarizeForSubscriptionLevelPolicyAssignmentResponse = SummarizeResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SummarizeResults;
    };
};

/**
 * Contains response data for the listQueryResultsForResourceGroupLevelPolicyAssignment operation.
 */
export type PolicyStatesListQueryResultsForResourceGroupLevelPolicyAssignmentResponse = PolicyStatesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyStatesQueryResults;
    };
};

/**
 * Contains response data for the summarizeForResourceGroupLevelPolicyAssignment operation.
 */
export type PolicyStatesSummarizeForResourceGroupLevelPolicyAssignmentResponse = SummarizeResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SummarizeResults;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationsListResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationsListResults;
    };
};

/**
 * Contains response data for the getResource operation.
 */
export type PolicyMetadataGetResourceResponse = PolicyMetadata & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyMetadata;
    };
};

/**
 * Contains response data for the list operation.
 */
export type PolicyMetadataListResponse = PolicyMetadataCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyMetadataCollection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type PolicyMetadataListNextResponse = PolicyMetadataCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyMetadataCollection;
    };
};
