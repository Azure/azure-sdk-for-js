/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  PrivateEndpointConnectionGetOptionalParams,
  PrivateEndpointConnectionGetResponse,
  PrivateEndpointConnectionResource,
  PrivateEndpointConnectionPutOptionalParams,
  PrivateEndpointConnectionPutResponse,
  PrivateEndpointConnectionDeleteOptionalParams
} from "../models";

/** Interface representing a PrivateEndpointConnectionOperations. */
export interface PrivateEndpointConnectionOperations {
  /**
   * Get Private Endpoint Connection. This call is made by Backup Admin.
   * @param vaultName The name of the recovery services vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param privateEndpointConnectionName The name of the private endpoint connection.
   * @param options The options parameters.
   */
  get(
    vaultName: string,
    resourceGroupName: string,
    privateEndpointConnectionName: string,
    options?: PrivateEndpointConnectionGetOptionalParams
  ): Promise<PrivateEndpointConnectionGetResponse>;
  /**
   * Approve or Reject Private Endpoint requests. This call is made by Backup Admin.
   * @param vaultName The name of the recovery services vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param privateEndpointConnectionName The name of the private endpoint connection.
   * @param parameters Request body for operation
   * @param options The options parameters.
   */
  beginPut(
    vaultName: string,
    resourceGroupName: string,
    privateEndpointConnectionName: string,
    parameters: PrivateEndpointConnectionResource,
    options?: PrivateEndpointConnectionPutOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<PrivateEndpointConnectionPutResponse>,
      PrivateEndpointConnectionPutResponse
    >
  >;
  /**
   * Approve or Reject Private Endpoint requests. This call is made by Backup Admin.
   * @param vaultName The name of the recovery services vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param privateEndpointConnectionName The name of the private endpoint connection.
   * @param parameters Request body for operation
   * @param options The options parameters.
   */
  beginPutAndWait(
    vaultName: string,
    resourceGroupName: string,
    privateEndpointConnectionName: string,
    parameters: PrivateEndpointConnectionResource,
    options?: PrivateEndpointConnectionPutOptionalParams
  ): Promise<PrivateEndpointConnectionPutResponse>;
  /**
   * Delete Private Endpoint requests. This call is made by Backup Admin.
   * @param vaultName The name of the recovery services vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param privateEndpointConnectionName The name of the private endpoint connection.
   * @param options The options parameters.
   */
  beginDelete(
    vaultName: string,
    resourceGroupName: string,
    privateEndpointConnectionName: string,
    options?: PrivateEndpointConnectionDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete Private Endpoint requests. This call is made by Backup Admin.
   * @param vaultName The name of the recovery services vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param privateEndpointConnectionName The name of the private endpoint connection.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    vaultName: string,
    resourceGroupName: string,
    privateEndpointConnectionName: string,
    options?: PrivateEndpointConnectionDeleteOptionalParams
  ): Promise<void>;
}
