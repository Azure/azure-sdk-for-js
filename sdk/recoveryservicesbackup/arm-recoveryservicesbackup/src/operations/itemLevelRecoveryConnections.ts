/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/itemLevelRecoveryConnectionsMappers";
import * as Parameters from "../models/parameters";
import { RecoveryServicesBackupClientContext } from "../recoveryServicesBackupClientContext";

/** Class representing a ItemLevelRecoveryConnections. */
export class ItemLevelRecoveryConnections {
  private readonly client: RecoveryServicesBackupClientContext;

  /**
   * Create a ItemLevelRecoveryConnections.
   * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
   */
  constructor(client: RecoveryServicesBackupClientContext) {
    this.client = client;
  }

  /**
   * Provisions a script which invokes an iSCSI connection to the backup data. Executing this script
   * opens a file
   * explorer displaying all the recoverable files and folders. This is an asynchronous operation. To
   * know the status of
   * provisioning, call GetProtectedItemOperationResult API.
   * @param vaultName The name of the recovery services vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   * present.
   * @param fabricName Fabric name associated with the backed up items.
   * @param containerName Container name associated with the backed up items.
   * @param protectedItemName Backed up item name whose files/folders are to be restored.
   * @param recoveryPointId Recovery point ID which represents backed up data. iSCSI connection will
   * be provisioned
   * for this backed up data.
   * @param parameters resource ILR request
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  provision(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, parameters: Models.ILRRequestResource, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param vaultName The name of the recovery services vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   * present.
   * @param fabricName Fabric name associated with the backed up items.
   * @param containerName Container name associated with the backed up items.
   * @param protectedItemName Backed up item name whose files/folders are to be restored.
   * @param recoveryPointId Recovery point ID which represents backed up data. iSCSI connection will
   * be provisioned
   * for this backed up data.
   * @param parameters resource ILR request
   * @param callback The callback
   */
  provision(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, parameters: Models.ILRRequestResource, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param vaultName The name of the recovery services vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   * present.
   * @param fabricName Fabric name associated with the backed up items.
   * @param containerName Container name associated with the backed up items.
   * @param protectedItemName Backed up item name whose files/folders are to be restored.
   * @param recoveryPointId Recovery point ID which represents backed up data. iSCSI connection will
   * be provisioned
   * for this backed up data.
   * @param parameters resource ILR request
   * @param options The optional parameters
   * @param callback The callback
   */
  provision(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, parameters: Models.ILRRequestResource, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  provision(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, parameters: Models.ILRRequestResource, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        vaultName,
        resourceGroupName,
        fabricName,
        containerName,
        protectedItemName,
        recoveryPointId,
        parameters,
        options
      },
      provisionOperationSpec,
      callback);
  }

  /**
   * Revokes an iSCSI connection which can be used to download a script. Executing this script opens
   * a file explorer
   * displaying all recoverable files and folders. This is an asynchronous operation.
   * @param vaultName The name of the recovery services vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   * present.
   * @param fabricName Fabric name associated with the backed up items.
   * @param containerName Container name associated with the backed up items.
   * @param protectedItemName Backed up item name whose files/folders are to be restored.
   * @param recoveryPointId Recovery point ID which represents backed up data. iSCSI connection will
   * be revoked for
   * this backed up data.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  revoke(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param vaultName The name of the recovery services vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   * present.
   * @param fabricName Fabric name associated with the backed up items.
   * @param containerName Container name associated with the backed up items.
   * @param protectedItemName Backed up item name whose files/folders are to be restored.
   * @param recoveryPointId Recovery point ID which represents backed up data. iSCSI connection will
   * be revoked for
   * this backed up data.
   * @param callback The callback
   */
  revoke(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param vaultName The name of the recovery services vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   * present.
   * @param fabricName Fabric name associated with the backed up items.
   * @param containerName Container name associated with the backed up items.
   * @param protectedItemName Backed up item name whose files/folders are to be restored.
   * @param recoveryPointId Recovery point ID which represents backed up data. iSCSI connection will
   * be revoked for
   * this backed up data.
   * @param options The optional parameters
   * @param callback The callback
   */
  revoke(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  revoke(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        vaultName,
        resourceGroupName,
        fabricName,
        containerName,
        protectedItemName,
        recoveryPointId,
        options
      },
      revokeOperationSpec,
      callback);
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const provisionOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/recoveryPoints/{recoveryPointId}/provisionInstantItemRecovery",
  urlParameters: [
    Parameters.vaultName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.fabricName,
    Parameters.containerName,
    Parameters.protectedItemName,
    Parameters.recoveryPointId
  ],
  queryParameters: [
    Parameters.apiVersion2
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.ILRRequestResource,
      required: true
    }
  },
  responses: {
    202: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const revokeOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/recoveryPoints/{recoveryPointId}/revokeInstantItemRecovery",
  urlParameters: [
    Parameters.vaultName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.fabricName,
    Parameters.containerName,
    Parameters.protectedItemName,
    Parameters.recoveryPointId
  ],
  queryParameters: [
    Parameters.apiVersion2
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    202: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
