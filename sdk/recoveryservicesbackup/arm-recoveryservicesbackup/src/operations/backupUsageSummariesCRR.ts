/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/backupUsageSummariesCRRMappers";
import * as Parameters from "../models/parameters";
import { RecoveryServicesBackupClientContext } from "../recoveryServicesBackupClientContext";

/** Class representing a BackupUsageSummariesCRR. */
export class BackupUsageSummariesCRR {
  private readonly client: RecoveryServicesBackupClientContext;

  /**
   * Create a BackupUsageSummariesCRR.
   * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
   */
  constructor(client: RecoveryServicesBackupClientContext) {
    this.client = client;
  }

  /**
   * Fetches the backup management usage summaries of the vault.
   * @param vaultName The name of the recovery services vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   * present.
   * @param [options] The optional parameters
   * @returns Promise<Models.BackupUsageSummariesCRRListResponse>
   */
  list(
    vaultName: string,
    resourceGroupName: string,
    options?: Models.BackupUsageSummariesCRRListOptionalParams
  ): Promise<Models.BackupUsageSummariesCRRListResponse>;
  /**
   * @param vaultName The name of the recovery services vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   * present.
   * @param callback The callback
   */
  list(
    vaultName: string,
    resourceGroupName: string,
    callback: msRest.ServiceCallback<Models.BackupManagementUsageList>
  ): void;
  /**
   * @param vaultName The name of the recovery services vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   * present.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(
    vaultName: string,
    resourceGroupName: string,
    options: Models.BackupUsageSummariesCRRListOptionalParams,
    callback: msRest.ServiceCallback<Models.BackupManagementUsageList>
  ): void;
  list(
    vaultName: string,
    resourceGroupName: string,
    options?:
      | Models.BackupUsageSummariesCRRListOptionalParams
      | msRest.ServiceCallback<Models.BackupManagementUsageList>,
    callback?: msRest.ServiceCallback<Models.BackupManagementUsageList>
  ): Promise<Models.BackupUsageSummariesCRRListResponse> {
    return this.client.sendOperationRequest(
      {
        vaultName,
        resourceGroupName,
        options
      },
      listOperationSpec,
      callback
    ) as Promise<Models.BackupUsageSummariesCRRListResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path:
    "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupUsageSummaries",
  urlParameters: [Parameters.vaultName, Parameters.resourceGroupName, Parameters.subscriptionId],
  queryParameters: [Parameters.apiVersion1, Parameters.filter, Parameters.skipToken],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.BackupManagementUsageList
    },
    default: {
      bodyMapper: Mappers.NewErrorResponse
    }
  },
  serializer
};
