/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { ValidateOperationStatuses } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { RecoveryServicesBackupClient } from "../recoveryServicesBackupClient";
import {
  ValidateOperationStatusesGetOptionalParams,
  ValidateOperationStatusesGetResponse
} from "../models";

/** Class containing ValidateOperationStatuses operations. */
export class ValidateOperationStatusesImpl
  implements ValidateOperationStatuses {
  private readonly client: RecoveryServicesBackupClient;

  /**
   * Initialize a new instance of the class ValidateOperationStatuses class.
   * @param client Reference to the service client
   */
  constructor(client: RecoveryServicesBackupClient) {
    this.client = client;
  }

  /**
   * Fetches the status of a triggered validate operation. The status can be in progress, completed
   * or failed. You can refer to the OperationStatus enum for all the possible states of the operation.
   * If operation has completed, this method returns the list of errors obtained while validating the
   * operation.
   * @param vaultName The name of the recovery services vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param operationId OperationID represents the operation whose status needs to be fetched.
   * @param options The options parameters.
   */
  get(
    vaultName: string,
    resourceGroupName: string,
    operationId: string,
    options?: ValidateOperationStatusesGetOptionalParams
  ): Promise<ValidateOperationStatusesGetResponse> {
    return this.client.sendOperationRequest(
      { vaultName, resourceGroupName, operationId, options },
      getOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupValidateOperationsStatuses/{operationId}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.OperationStatus
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.vaultName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.operationId
  ],
  headerParameters: [Parameters.accept],
  serializer
};
