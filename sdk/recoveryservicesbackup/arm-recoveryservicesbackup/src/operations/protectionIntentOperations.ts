/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/protectionIntentOperationsMappers";
import * as Parameters from "../models/parameters";
import { RecoveryServicesBackupClientContext } from "../recoveryServicesBackupClientContext";

/** Class representing a ProtectionIntentOperations. */
export class ProtectionIntentOperations {
  private readonly client: RecoveryServicesBackupClientContext;

  /**
   * Create a ProtectionIntentOperations.
   * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
   */
  constructor(client: RecoveryServicesBackupClientContext) {
    this.client = client;
  }

  /**
   * @summary It will validate followings
   * 1. Vault capacity
   * 2. VM is already protected
   * 3. Any VM related configuration passed in properties.
   * @param azureRegion Azure region to hit Api
   * @param parameters Enable backup validation request on Virtual Machine
   * @param [options] The optional parameters
   * @returns Promise<Models.ProtectionIntentValidateResponse>
   */
  validate(azureRegion: string, parameters: Models.PreValidateEnableBackupRequest, options?: msRest.RequestOptionsBase): Promise<Models.ProtectionIntentValidateResponse>;
  /**
   * @param azureRegion Azure region to hit Api
   * @param parameters Enable backup validation request on Virtual Machine
   * @param callback The callback
   */
  validate(azureRegion: string, parameters: Models.PreValidateEnableBackupRequest, callback: msRest.ServiceCallback<Models.PreValidateEnableBackupResponse>): void;
  /**
   * @param azureRegion Azure region to hit Api
   * @param parameters Enable backup validation request on Virtual Machine
   * @param options The optional parameters
   * @param callback The callback
   */
  validate(azureRegion: string, parameters: Models.PreValidateEnableBackupRequest, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PreValidateEnableBackupResponse>): void;
  validate(azureRegion: string, parameters: Models.PreValidateEnableBackupRequest, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PreValidateEnableBackupResponse>, callback?: msRest.ServiceCallback<Models.PreValidateEnableBackupResponse>): Promise<Models.ProtectionIntentValidateResponse> {
    return this.client.sendOperationRequest(
      {
        azureRegion,
        parameters,
        options
      },
      validateOperationSpec,
      callback) as Promise<Models.ProtectionIntentValidateResponse>;
  }

  /**
   * Provides the details of the protection intent up item. This is an asynchronous operation. To
   * know the status of the operation,
   * call the GetItemOperationResult API.
   * @param vaultName The name of the recovery services vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   * present.
   * @param fabricName Fabric name associated with the backed up item.
   * @param intentObjectName Backed up item name whose details are to be fetched.
   * @param [options] The optional parameters
   * @returns Promise<Models.ProtectionIntentGetResponse>
   */
  get(vaultName: string, resourceGroupName: string, fabricName: string, intentObjectName: string, options?: msRest.RequestOptionsBase): Promise<Models.ProtectionIntentGetResponse>;
  /**
   * @param vaultName The name of the recovery services vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   * present.
   * @param fabricName Fabric name associated with the backed up item.
   * @param intentObjectName Backed up item name whose details are to be fetched.
   * @param callback The callback
   */
  get(vaultName: string, resourceGroupName: string, fabricName: string, intentObjectName: string, callback: msRest.ServiceCallback<Models.ProtectionIntentResource>): void;
  /**
   * @param vaultName The name of the recovery services vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   * present.
   * @param fabricName Fabric name associated with the backed up item.
   * @param intentObjectName Backed up item name whose details are to be fetched.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(vaultName: string, resourceGroupName: string, fabricName: string, intentObjectName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProtectionIntentResource>): void;
  get(vaultName: string, resourceGroupName: string, fabricName: string, intentObjectName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProtectionIntentResource>, callback?: msRest.ServiceCallback<Models.ProtectionIntentResource>): Promise<Models.ProtectionIntentGetResponse> {
    return this.client.sendOperationRequest(
      {
        vaultName,
        resourceGroupName,
        fabricName,
        intentObjectName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.ProtectionIntentGetResponse>;
  }

  /**
   * Create Intent for Enabling backup of an item. This is a synchronous operation.
   * @param vaultName The name of the recovery services vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   * present.
   * @param fabricName Fabric name associated with the backup item.
   * @param intentObjectName Intent object name.
   * @param parameters resource backed up item
   * @param [options] The optional parameters
   * @returns Promise<Models.ProtectionIntentCreateOrUpdateResponse>
   */
  createOrUpdate(vaultName: string, resourceGroupName: string, fabricName: string, intentObjectName: string, parameters: Models.ProtectionIntentResource, options?: msRest.RequestOptionsBase): Promise<Models.ProtectionIntentCreateOrUpdateResponse>;
  /**
   * @param vaultName The name of the recovery services vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   * present.
   * @param fabricName Fabric name associated with the backup item.
   * @param intentObjectName Intent object name.
   * @param parameters resource backed up item
   * @param callback The callback
   */
  createOrUpdate(vaultName: string, resourceGroupName: string, fabricName: string, intentObjectName: string, parameters: Models.ProtectionIntentResource, callback: msRest.ServiceCallback<Models.ProtectionIntentResource>): void;
  /**
   * @param vaultName The name of the recovery services vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   * present.
   * @param fabricName Fabric name associated with the backup item.
   * @param intentObjectName Intent object name.
   * @param parameters resource backed up item
   * @param options The optional parameters
   * @param callback The callback
   */
  createOrUpdate(vaultName: string, resourceGroupName: string, fabricName: string, intentObjectName: string, parameters: Models.ProtectionIntentResource, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProtectionIntentResource>): void;
  createOrUpdate(vaultName: string, resourceGroupName: string, fabricName: string, intentObjectName: string, parameters: Models.ProtectionIntentResource, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProtectionIntentResource>, callback?: msRest.ServiceCallback<Models.ProtectionIntentResource>): Promise<Models.ProtectionIntentCreateOrUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        vaultName,
        resourceGroupName,
        fabricName,
        intentObjectName,
        parameters,
        options
      },
      createOrUpdateOperationSpec,
      callback) as Promise<Models.ProtectionIntentCreateOrUpdateResponse>;
  }

  /**
   * Used to remove intent from an item
   * @param vaultName The name of the recovery services vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   * present.
   * @param fabricName Fabric name associated with the intent.
   * @param intentObjectName Intent to be deleted.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(vaultName: string, resourceGroupName: string, fabricName: string, intentObjectName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param vaultName The name of the recovery services vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   * present.
   * @param fabricName Fabric name associated with the intent.
   * @param intentObjectName Intent to be deleted.
   * @param callback The callback
   */
  deleteMethod(vaultName: string, resourceGroupName: string, fabricName: string, intentObjectName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param vaultName The name of the recovery services vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   * present.
   * @param fabricName Fabric name associated with the intent.
   * @param intentObjectName Intent to be deleted.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(vaultName: string, resourceGroupName: string, fabricName: string, intentObjectName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(vaultName: string, resourceGroupName: string, fabricName: string, intentObjectName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        vaultName,
        resourceGroupName,
        fabricName,
        intentObjectName,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const validateOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "Subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/locations/{azureRegion}/backupPreValidateProtection",
  urlParameters: [
    Parameters.azureRegion,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion3
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.PreValidateEnableBackupRequest,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.PreValidateEnableBackupResponse
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/backupProtectionIntent/{intentObjectName}",
  urlParameters: [
    Parameters.vaultName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.fabricName,
    Parameters.intentObjectName
  ],
  queryParameters: [
    Parameters.apiVersion3
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ProtectionIntentResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const createOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/backupProtectionIntent/{intentObjectName}",
  urlParameters: [
    Parameters.vaultName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.fabricName,
    Parameters.intentObjectName
  ],
  queryParameters: [
    Parameters.apiVersion3
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.ProtectionIntentResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.ProtectionIntentResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/backupProtectionIntent/{intentObjectName}",
  urlParameters: [
    Parameters.vaultName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.fabricName,
    Parameters.intentObjectName
  ],
  queryParameters: [
    Parameters.apiVersion3
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    204: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
