/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const OperationStatusError: msRest.CompositeMapper = {
  serializedName: "OperationStatusError",
  type: {
    name: "Composite",
    className: "OperationStatusError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationStatusExtendedInfo: msRest.CompositeMapper = {
  serializedName: "OperationStatusExtendedInfo",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "objectType",
      clientName: "objectType"
    },
    uberParent: "OperationStatusExtendedInfo",
    className: "OperationStatusExtendedInfo",
    modelProperties: {
      objectType: {
        required: true,
        serializedName: "objectType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationStatus: msRest.CompositeMapper = {
  serializedName: "OperationStatus",
  type: {
    name: "Composite",
    className: "OperationStatus",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "OperationStatusError"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "OperationStatusExtendedInfo"
        }
      }
    }
  }
};

export const PrivateEndpoint: msRest.CompositeMapper = {
  serializedName: "PrivateEndpoint",
  type: {
    name: "Composite",
    className: "PrivateEndpoint",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateLinkServiceConnectionState: msRest.CompositeMapper = {
  serializedName: "PrivateLinkServiceConnectionState",
  type: {
    name: "Composite",
    className: "PrivateLinkServiceConnectionState",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      actionRequired: {
        serializedName: "actionRequired",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointConnection: msRest.CompositeMapper = {
  serializedName: "PrivateEndpointConnection",
  type: {
    name: "Composite",
    className: "PrivateEndpointConnection",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      privateEndpoint: {
        serializedName: "privateEndpoint",
        type: {
          name: "Composite",
          className: "PrivateEndpoint"
        }
      },
      privateLinkServiceConnectionState: {
        serializedName: "privateLinkServiceConnectionState",
        type: {
          name: "Composite",
          className: "PrivateLinkServiceConnectionState"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointConnectionResource: msRest.CompositeMapper = {
  serializedName: "PrivateEndpointConnectionResource",
  type: {
    name: "Composite",
    className: "PrivateEndpointConnectionResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "PrivateEndpointConnection"
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: msRest.CompositeMapper = {
  serializedName: "ErrorAdditionalInfo",
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      info: {
        readOnly: true,
        serializedName: "info",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        readOnly: true,
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        readOnly: true,
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorResponse"
            }
          }
        }
      },
      additionalInfo: {
        readOnly: true,
        serializedName: "additionalInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const AzureFileshareProtectedItemExtendedInfo: msRest.CompositeMapper = {
  serializedName: "AzureFileshareProtectedItemExtendedInfo",
  type: {
    name: "Composite",
    className: "AzureFileshareProtectedItemExtendedInfo",
    modelProperties: {
      oldestRecoveryPoint: {
        serializedName: "oldestRecoveryPoint",
        type: {
          name: "DateTime"
        }
      },
      recoveryPointCount: {
        serializedName: "recoveryPointCount",
        type: {
          name: "Number"
        }
      },
      policyState: {
        serializedName: "policyState",
        type: {
          name: "String"
        }
      },
      resourceState: {
        readOnly: true,
        serializedName: "resourceState",
        type: {
          name: "String"
        }
      },
      resourceStateSyncTime: {
        readOnly: true,
        serializedName: "resourceStateSyncTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ProtectedItem: msRest.CompositeMapper = {
  serializedName: "ProtectedItem",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "protectedItemType",
      clientName: "protectedItemType"
    },
    uberParent: "ProtectedItem",
    className: "ProtectedItem",
    modelProperties: {
      backupManagementType: {
        serializedName: "backupManagementType",
        type: {
          name: "String"
        }
      },
      workloadType: {
        serializedName: "workloadType",
        type: {
          name: "String"
        }
      },
      containerName: {
        serializedName: "containerName",
        type: {
          name: "String"
        }
      },
      sourceResourceId: {
        serializedName: "sourceResourceId",
        type: {
          name: "String"
        }
      },
      policyId: {
        serializedName: "policyId",
        type: {
          name: "String"
        }
      },
      lastRecoveryPoint: {
        serializedName: "lastRecoveryPoint",
        type: {
          name: "DateTime"
        }
      },
      backupSetName: {
        serializedName: "backupSetName",
        type: {
          name: "String"
        }
      },
      createMode: {
        serializedName: "createMode",
        type: {
          name: "String"
        }
      },
      deferredDeleteTimeInUTC: {
        serializedName: "deferredDeleteTimeInUTC",
        type: {
          name: "DateTime"
        }
      },
      isScheduledForDeferredDelete: {
        serializedName: "isScheduledForDeferredDelete",
        type: {
          name: "Boolean"
        }
      },
      deferredDeleteTimeRemaining: {
        serializedName: "deferredDeleteTimeRemaining",
        type: {
          name: "String"
        }
      },
      isDeferredDeleteScheduleUpcoming: {
        serializedName: "isDeferredDeleteScheduleUpcoming",
        type: {
          name: "Boolean"
        }
      },
      isRehydrate: {
        serializedName: "isRehydrate",
        type: {
          name: "Boolean"
        }
      },
      protectedItemType: {
        required: true,
        serializedName: "protectedItemType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureFileshareProtectedItem: msRest.CompositeMapper = {
  serializedName: "AzureFileShareProtectedItem",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectedItem.type.polymorphicDiscriminator,
    uberParent: "ProtectedItem",
    className: "AzureFileshareProtectedItem",
    modelProperties: {
      ...ProtectedItem.type.modelProperties,
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String"
        }
      },
      protectionStatus: {
        serializedName: "protectionStatus",
        type: {
          name: "String"
        }
      },
      protectionState: {
        serializedName: "protectionState",
        type: {
          name: "String"
        }
      },
      healthStatus: {
        serializedName: "healthStatus",
        type: {
          name: "String"
        }
      },
      lastBackupStatus: {
        serializedName: "lastBackupStatus",
        type: {
          name: "String"
        }
      },
      lastBackupTime: {
        serializedName: "lastBackupTime",
        type: {
          name: "DateTime"
        }
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Composite",
          className: "AzureFileshareProtectedItemExtendedInfo"
        }
      }
    }
  }
};

export const RecoveryPoint: msRest.CompositeMapper = {
  serializedName: "RecoveryPoint",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "objectType",
      clientName: "objectType"
    },
    uberParent: "RecoveryPoint",
    className: "RecoveryPoint",
    modelProperties: {
      objectType: {
        required: true,
        serializedName: "objectType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureFileShareRecoveryPoint: msRest.CompositeMapper = {
  serializedName: "AzureFileShareRecoveryPoint",
  type: {
    name: "Composite",
    polymorphicDiscriminator: RecoveryPoint.type.polymorphicDiscriminator,
    uberParent: "RecoveryPoint",
    className: "AzureFileShareRecoveryPoint",
    modelProperties: {
      ...RecoveryPoint.type.modelProperties,
      recoveryPointType: {
        readOnly: true,
        serializedName: "recoveryPointType",
        type: {
          name: "String"
        }
      },
      recoveryPointTime: {
        readOnly: true,
        serializedName: "recoveryPointTime",
        type: {
          name: "DateTime"
        }
      },
      fileShareSnapshotUri: {
        readOnly: true,
        serializedName: "fileShareSnapshotUri",
        type: {
          name: "String"
        }
      },
      recoveryPointSizeInGB: {
        readOnly: true,
        serializedName: "recoveryPointSizeInGB",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const RestoreFileSpecs: msRest.CompositeMapper = {
  serializedName: "RestoreFileSpecs",
  type: {
    name: "Composite",
    className: "RestoreFileSpecs",
    modelProperties: {
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      fileSpecType: {
        serializedName: "fileSpecType",
        type: {
          name: "String"
        }
      },
      targetFolderPath: {
        serializedName: "targetFolderPath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TargetAFSRestoreInfo: msRest.CompositeMapper = {
  serializedName: "TargetAFSRestoreInfo",
  type: {
    name: "Composite",
    className: "TargetAFSRestoreInfo",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      targetResourceId: {
        serializedName: "targetResourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RestoreRequest: msRest.CompositeMapper = {
  serializedName: "RestoreRequest",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "objectType",
      clientName: "objectType"
    },
    uberParent: "RestoreRequest",
    className: "RestoreRequest",
    modelProperties: {
      objectType: {
        required: true,
        serializedName: "objectType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureFileShareRestoreRequest: msRest.CompositeMapper = {
  serializedName: "AzureFileShareRestoreRequest",
  type: {
    name: "Composite",
    polymorphicDiscriminator: RestoreRequest.type.polymorphicDiscriminator,
    uberParent: "RestoreRequest",
    className: "AzureFileShareRestoreRequest",
    modelProperties: {
      ...RestoreRequest.type.modelProperties,
      recoveryType: {
        serializedName: "recoveryType",
        type: {
          name: "String"
        }
      },
      sourceResourceId: {
        serializedName: "sourceResourceId",
        type: {
          name: "String"
        }
      },
      copyOptions: {
        serializedName: "copyOptions",
        type: {
          name: "String"
        }
      },
      restoreRequestType: {
        serializedName: "restoreRequestType",
        type: {
          name: "String"
        }
      },
      restoreFileSpecs: {
        serializedName: "restoreFileSpecs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RestoreFileSpecs"
            }
          }
        }
      },
      targetDetails: {
        serializedName: "targetDetails",
        type: {
          name: "Composite",
          className: "TargetAFSRestoreInfo"
        }
      }
    }
  }
};

export const Settings: msRest.CompositeMapper = {
  serializedName: "Settings",
  type: {
    name: "Composite",
    className: "Settings",
    modelProperties: {
      timeZone: {
        serializedName: "timeZone",
        type: {
          name: "String"
        }
      },
      issqlcompression: {
        serializedName: "issqlcompression",
        type: {
          name: "Boolean"
        }
      },
      isCompression: {
        serializedName: "isCompression",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const SchedulePolicy: msRest.CompositeMapper = {
  serializedName: "SchedulePolicy",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "schedulePolicyType",
      clientName: "schedulePolicyType"
    },
    uberParent: "SchedulePolicy",
    className: "SchedulePolicy",
    modelProperties: {
      schedulePolicyType: {
        required: true,
        serializedName: "schedulePolicyType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RetentionPolicy: msRest.CompositeMapper = {
  serializedName: "RetentionPolicy",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "retentionPolicyType",
      clientName: "retentionPolicyType"
    },
    uberParent: "RetentionPolicy",
    className: "RetentionPolicy",
    modelProperties: {
      retentionPolicyType: {
        required: true,
        serializedName: "retentionPolicyType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubProtectionPolicy: msRest.CompositeMapper = {
  serializedName: "SubProtectionPolicy",
  type: {
    name: "Composite",
    className: "SubProtectionPolicy",
    modelProperties: {
      policyType: {
        serializedName: "policyType",
        type: {
          name: "String"
        }
      },
      schedulePolicy: {
        serializedName: "schedulePolicy",
        type: {
          name: "Composite",
          className: "SchedulePolicy"
        }
      },
      retentionPolicy: {
        serializedName: "retentionPolicy",
        type: {
          name: "Composite",
          className: "RetentionPolicy"
        }
      }
    }
  }
};

export const ProtectionPolicy: msRest.CompositeMapper = {
  serializedName: "ProtectionPolicy",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "backupManagementType",
      clientName: "backupManagementType"
    },
    uberParent: "ProtectionPolicy",
    className: "ProtectionPolicy",
    modelProperties: {
      protectedItemsCount: {
        serializedName: "protectedItemsCount",
        type: {
          name: "Number"
        }
      },
      backupManagementType: {
        required: true,
        serializedName: "backupManagementType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureVmWorkloadProtectionPolicy: msRest.CompositeMapper = {
  serializedName: "AzureWorkload",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectionPolicy.type.polymorphicDiscriminator,
    uberParent: "ProtectionPolicy",
    className: "AzureVmWorkloadProtectionPolicy",
    modelProperties: {
      ...ProtectionPolicy.type.modelProperties,
      workLoadType: {
        serializedName: "workLoadType",
        type: {
          name: "String"
        }
      },
      settings: {
        serializedName: "settings",
        type: {
          name: "Composite",
          className: "Settings"
        }
      },
      subProtectionPolicy: {
        serializedName: "subProtectionPolicy",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubProtectionPolicy"
            }
          }
        }
      },
      makePolicyConsistent: {
        serializedName: "makePolicyConsistent",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AzureFileShareProtectionPolicy: msRest.CompositeMapper = {
  serializedName: "AzureStorage",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectionPolicy.type.polymorphicDiscriminator,
    uberParent: "ProtectionPolicy",
    className: "AzureFileShareProtectionPolicy",
    modelProperties: {
      ...ProtectionPolicy.type.modelProperties,
      workLoadType: {
        serializedName: "workLoadType",
        type: {
          name: "String"
        }
      },
      schedulePolicy: {
        serializedName: "schedulePolicy",
        type: {
          name: "Composite",
          className: "SchedulePolicy"
        }
      },
      retentionPolicy: {
        serializedName: "retentionPolicy",
        type: {
          name: "Composite",
          className: "RetentionPolicy"
        }
      },
      timeZone: {
        serializedName: "timeZone",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureIaaSVMProtectedItem: msRest.CompositeMapper = {
  serializedName: "AzureIaaSVMProtectedItem",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectedItem.type.polymorphicDiscriminator,
    uberParent: "ProtectedItem",
    className: "AzureIaaSVMProtectedItem",
    modelProperties: {
      ...ProtectedItem.type.modelProperties,
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String"
        }
      },
      virtualMachineId: {
        serializedName: "virtualMachineId",
        type: {
          name: "String"
        }
      },
      protectionStatus: {
        serializedName: "protectionStatus",
        type: {
          name: "String"
        }
      },
      protectionState: {
        serializedName: "protectionState",
        type: {
          name: "String"
        }
      },
      healthStatus: {
        serializedName: "healthStatus",
        type: {
          name: "String"
        }
      },
      healthDetails: {
        serializedName: "healthDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureIaaSVMHealthDetails"
            }
          }
        }
      },
      lastBackupStatus: {
        serializedName: "lastBackupStatus",
        type: {
          name: "String"
        }
      },
      lastBackupTime: {
        serializedName: "lastBackupTime",
        type: {
          name: "DateTime"
        }
      },
      protectedItemDataId: {
        serializedName: "protectedItemDataId",
        type: {
          name: "String"
        }
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Composite",
          className: "AzureIaaSVMProtectedItemExtendedInfo"
        }
      },
      extendedProperties: {
        serializedName: "extendedProperties",
        type: {
          name: "Composite",
          className: "ExtendedProperties"
        }
      }
    }
  }
};

export const AzureIaaSClassicComputeVMProtectedItem: msRest.CompositeMapper = {
  serializedName: "Microsoft.ClassicCompute/virtualMachines",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectedItem.type.polymorphicDiscriminator,
    uberParent: "ProtectedItem",
    className: "AzureIaaSClassicComputeVMProtectedItem",
    modelProperties: {
      ...AzureIaaSVMProtectedItem.type.modelProperties
    }
  }
};

export const AzureIaaSComputeVMProtectedItem: msRest.CompositeMapper = {
  serializedName: "Microsoft.Compute/virtualMachines",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectedItem.type.polymorphicDiscriminator,
    uberParent: "ProtectedItem",
    className: "AzureIaaSComputeVMProtectedItem",
    modelProperties: {
      ...AzureIaaSVMProtectedItem.type.modelProperties
    }
  }
};

export const AzureIaaSVMErrorInfo: msRest.CompositeMapper = {
  serializedName: "AzureIaaSVMErrorInfo",
  type: {
    name: "Composite",
    className: "AzureIaaSVMErrorInfo",
    modelProperties: {
      errorCode: {
        readOnly: true,
        serializedName: "errorCode",
        type: {
          name: "Number"
        }
      },
      errorTitle: {
        readOnly: true,
        serializedName: "errorTitle",
        type: {
          name: "String"
        }
      },
      errorString: {
        readOnly: true,
        serializedName: "errorString",
        type: {
          name: "String"
        }
      },
      recommendations: {
        readOnly: true,
        serializedName: "recommendations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AzureIaaSVMHealthDetails: msRest.CompositeMapper = {
  serializedName: "AzureIaaSVMHealthDetails",
  type: {
    name: "Composite",
    className: "AzureIaaSVMHealthDetails",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      title: {
        readOnly: true,
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      recommendations: {
        readOnly: true,
        serializedName: "recommendations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AzureIaaSVMJobTaskDetails: msRest.CompositeMapper = {
  serializedName: "AzureIaaSVMJobTaskDetails",
  type: {
    name: "Composite",
    className: "AzureIaaSVMJobTaskDetails",
    modelProperties: {
      taskId: {
        serializedName: "taskId",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      instanceId: {
        serializedName: "instanceId",
        type: {
          name: "String"
        }
      },
      duration: {
        serializedName: "duration",
        type: {
          name: "TimeSpan"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      progressPercentage: {
        serializedName: "progressPercentage",
        type: {
          name: "Number"
        }
      },
      taskExecutionDetails: {
        serializedName: "taskExecutionDetails",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureIaaSVMJobExtendedInfo: msRest.CompositeMapper = {
  serializedName: "AzureIaaSVMJobExtendedInfo",
  type: {
    name: "Composite",
    className: "AzureIaaSVMJobExtendedInfo",
    modelProperties: {
      tasksList: {
        serializedName: "tasksList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureIaaSVMJobTaskDetails"
            }
          }
        }
      },
      propertyBag: {
        serializedName: "propertyBag",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      internalPropertyBag: {
        serializedName: "internalPropertyBag",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      progressPercentage: {
        serializedName: "progressPercentage",
        type: {
          name: "Number"
        }
      },
      estimatedRemainingDuration: {
        serializedName: "estimatedRemainingDuration",
        type: {
          name: "String"
        }
      },
      dynamicErrorMessage: {
        serializedName: "dynamicErrorMessage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Job: msRest.CompositeMapper = {
  serializedName: "Job",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "jobType",
      clientName: "jobType"
    },
    uberParent: "Job",
    className: "Job",
    modelProperties: {
      entityFriendlyName: {
        serializedName: "entityFriendlyName",
        type: {
          name: "String"
        }
      },
      backupManagementType: {
        serializedName: "backupManagementType",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      activityId: {
        serializedName: "activityId",
        type: {
          name: "String"
        }
      },
      jobType: {
        required: true,
        serializedName: "jobType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureIaaSVMJob: msRest.CompositeMapper = {
  serializedName: "AzureIaaSVMJob",
  type: {
    name: "Composite",
    polymorphicDiscriminator: Job.type.polymorphicDiscriminator,
    uberParent: "Job",
    className: "AzureIaaSVMJob",
    modelProperties: {
      ...Job.type.modelProperties,
      duration: {
        serializedName: "duration",
        type: {
          name: "TimeSpan"
        }
      },
      actionsInfo: {
        serializedName: "actionsInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: [
                "Invalid",
                "Cancellable",
                "Retriable"
              ]
            }
          }
        }
      },
      errorDetails: {
        serializedName: "errorDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureIaaSVMErrorInfo"
            }
          }
        }
      },
      virtualMachineVersion: {
        serializedName: "virtualMachineVersion",
        type: {
          name: "String"
        }
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Composite",
          className: "AzureIaaSVMJobExtendedInfo"
        }
      }
    }
  }
};

export const AzureIaaSVMProtectedItemExtendedInfo: msRest.CompositeMapper = {
  serializedName: "AzureIaaSVMProtectedItemExtendedInfo",
  type: {
    name: "Composite",
    className: "AzureIaaSVMProtectedItemExtendedInfo",
    modelProperties: {
      oldestRecoveryPoint: {
        serializedName: "oldestRecoveryPoint",
        type: {
          name: "DateTime"
        }
      },
      recoveryPointCount: {
        serializedName: "recoveryPointCount",
        type: {
          name: "Number"
        }
      },
      policyInconsistent: {
        serializedName: "policyInconsistent",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DiskExclusionProperties: msRest.CompositeMapper = {
  serializedName: "DiskExclusionProperties",
  type: {
    name: "Composite",
    className: "DiskExclusionProperties",
    modelProperties: {
      diskLunList: {
        serializedName: "diskLunList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      },
      isInclusionList: {
        serializedName: "isInclusionList",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ExtendedProperties: msRest.CompositeMapper = {
  serializedName: "ExtendedProperties",
  type: {
    name: "Composite",
    className: "ExtendedProperties",
    modelProperties: {
      diskExclusionProperties: {
        serializedName: "diskExclusionProperties",
        type: {
          name: "Composite",
          className: "DiskExclusionProperties"
        }
      }
    }
  }
};

export const InstantRPAdditionalDetails: msRest.CompositeMapper = {
  serializedName: "InstantRPAdditionalDetails",
  type: {
    name: "Composite",
    className: "InstantRPAdditionalDetails",
    modelProperties: {
      azureBackupRGNamePrefix: {
        serializedName: "azureBackupRGNamePrefix",
        type: {
          name: "String"
        }
      },
      azureBackupRGNameSuffix: {
        serializedName: "azureBackupRGNameSuffix",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureIaaSVMProtectionPolicy: msRest.CompositeMapper = {
  serializedName: "AzureIaasVM",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectionPolicy.type.polymorphicDiscriminator,
    uberParent: "ProtectionPolicy",
    className: "AzureIaaSVMProtectionPolicy",
    modelProperties: {
      ...ProtectionPolicy.type.modelProperties,
      instantRPDetails: {
        serializedName: "instantRPDetails",
        type: {
          name: "Composite",
          className: "InstantRPAdditionalDetails"
        }
      },
      schedulePolicy: {
        serializedName: "schedulePolicy",
        type: {
          name: "Composite",
          className: "SchedulePolicy"
        }
      },
      retentionPolicy: {
        serializedName: "retentionPolicy",
        type: {
          name: "Composite",
          className: "RetentionPolicy"
        }
      },
      instantRpRetentionRangeInDays: {
        serializedName: "instantRpRetentionRangeInDays",
        type: {
          name: "Number"
        }
      },
      timeZone: {
        serializedName: "timeZone",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureSqlProtectedItemExtendedInfo: msRest.CompositeMapper = {
  serializedName: "AzureSqlProtectedItemExtendedInfo",
  type: {
    name: "Composite",
    className: "AzureSqlProtectedItemExtendedInfo",
    modelProperties: {
      oldestRecoveryPoint: {
        serializedName: "oldestRecoveryPoint",
        type: {
          name: "DateTime"
        }
      },
      recoveryPointCount: {
        serializedName: "recoveryPointCount",
        type: {
          name: "Number"
        }
      },
      policyState: {
        serializedName: "policyState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureSqlProtectedItem: msRest.CompositeMapper = {
  serializedName: "Microsoft.Sql/servers/databases",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectedItem.type.polymorphicDiscriminator,
    uberParent: "ProtectedItem",
    className: "AzureSqlProtectedItem",
    modelProperties: {
      ...ProtectedItem.type.modelProperties,
      protectedItemDataId: {
        serializedName: "protectedItemDataId",
        type: {
          name: "String"
        }
      },
      protectionState: {
        serializedName: "protectionState",
        type: {
          name: "String"
        }
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Composite",
          className: "AzureSqlProtectedItemExtendedInfo"
        }
      }
    }
  }
};

export const AzureStorageErrorInfo: msRest.CompositeMapper = {
  serializedName: "AzureStorageErrorInfo",
  type: {
    name: "Composite",
    className: "AzureStorageErrorInfo",
    modelProperties: {
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "Number"
        }
      },
      errorString: {
        serializedName: "errorString",
        type: {
          name: "String"
        }
      },
      recommendations: {
        serializedName: "recommendations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AzureSqlProtectionPolicy: msRest.CompositeMapper = {
  serializedName: "AzureSql",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectionPolicy.type.polymorphicDiscriminator,
    uberParent: "ProtectionPolicy",
    className: "AzureSqlProtectionPolicy",
    modelProperties: {
      ...ProtectionPolicy.type.modelProperties,
      retentionPolicy: {
        serializedName: "retentionPolicy",
        type: {
          name: "Composite",
          className: "RetentionPolicy"
        }
      }
    }
  }
};

export const AzureStorageJobTaskDetails: msRest.CompositeMapper = {
  serializedName: "AzureStorageJobTaskDetails",
  type: {
    name: "Composite",
    className: "AzureStorageJobTaskDetails",
    modelProperties: {
      taskId: {
        serializedName: "taskId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureStorageJobExtendedInfo: msRest.CompositeMapper = {
  serializedName: "AzureStorageJobExtendedInfo",
  type: {
    name: "Composite",
    className: "AzureStorageJobExtendedInfo",
    modelProperties: {
      tasksList: {
        serializedName: "tasksList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureStorageJobTaskDetails"
            }
          }
        }
      },
      propertyBag: {
        serializedName: "propertyBag",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      dynamicErrorMessage: {
        serializedName: "dynamicErrorMessage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureStorageJob: msRest.CompositeMapper = {
  serializedName: "AzureStorageJob",
  type: {
    name: "Composite",
    polymorphicDiscriminator: Job.type.polymorphicDiscriminator,
    uberParent: "Job",
    className: "AzureStorageJob",
    modelProperties: {
      ...Job.type.modelProperties,
      duration: {
        serializedName: "duration",
        type: {
          name: "TimeSpan"
        }
      },
      actionsInfo: {
        serializedName: "actionsInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: [
                "Invalid",
                "Cancellable",
                "Retriable"
              ]
            }
          }
        }
      },
      errorDetails: {
        serializedName: "errorDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureStorageErrorInfo"
            }
          }
        }
      },
      storageAccountName: {
        serializedName: "storageAccountName",
        type: {
          name: "String"
        }
      },
      storageAccountVersion: {
        serializedName: "storageAccountVersion",
        type: {
          name: "String"
        }
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Composite",
          className: "AzureStorageJobExtendedInfo"
        }
      }
    }
  }
};

export const ErrorDetail: msRest.CompositeMapper = {
  serializedName: "ErrorDetail",
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      recommendations: {
        readOnly: true,
        serializedName: "recommendations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AzureVmWorkloadProtectedItemExtendedInfo: msRest.CompositeMapper = {
  serializedName: "AzureVmWorkloadProtectedItemExtendedInfo",
  type: {
    name: "Composite",
    className: "AzureVmWorkloadProtectedItemExtendedInfo",
    modelProperties: {
      oldestRecoveryPoint: {
        serializedName: "oldestRecoveryPoint",
        type: {
          name: "DateTime"
        }
      },
      recoveryPointCount: {
        serializedName: "recoveryPointCount",
        type: {
          name: "Number"
        }
      },
      policyState: {
        serializedName: "policyState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureVmWorkloadProtectedItem: msRest.CompositeMapper = {
  serializedName: "AzureVmWorkloadProtectedItem",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectedItem.type.polymorphicDiscriminator,
    uberParent: "ProtectedItem",
    className: "AzureVmWorkloadProtectedItem",
    modelProperties: {
      ...ProtectedItem.type.modelProperties,
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String"
        }
      },
      serverName: {
        serializedName: "serverName",
        type: {
          name: "String"
        }
      },
      parentName: {
        serializedName: "parentName",
        type: {
          name: "String"
        }
      },
      parentType: {
        serializedName: "parentType",
        type: {
          name: "String"
        }
      },
      protectionStatus: {
        serializedName: "protectionStatus",
        type: {
          name: "String"
        }
      },
      protectionState: {
        serializedName: "protectionState",
        type: {
          name: "String"
        }
      },
      lastBackupStatus: {
        serializedName: "lastBackupStatus",
        type: {
          name: "String"
        }
      },
      lastBackupTime: {
        serializedName: "lastBackupTime",
        type: {
          name: "DateTime"
        }
      },
      lastBackupErrorDetail: {
        serializedName: "lastBackupErrorDetail",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      },
      protectedItemDataSourceId: {
        serializedName: "protectedItemDataSourceId",
        type: {
          name: "String"
        }
      },
      protectedItemHealthStatus: {
        serializedName: "protectedItemHealthStatus",
        type: {
          name: "String"
        }
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Composite",
          className: "AzureVmWorkloadProtectedItemExtendedInfo"
        }
      }
    }
  }
};

export const AzureVmWorkloadSAPAseDatabaseProtectedItem: msRest.CompositeMapper = {
  serializedName: "AzureVmWorkloadSAPAseDatabase",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectedItem.type.polymorphicDiscriminator,
    uberParent: "ProtectedItem",
    className: "AzureVmWorkloadSAPAseDatabaseProtectedItem",
    modelProperties: {
      ...AzureVmWorkloadProtectedItem.type.modelProperties
    }
  }
};

export const AzureVmWorkloadSAPHanaDatabaseProtectedItem: msRest.CompositeMapper = {
  serializedName: "AzureVmWorkloadSAPHanaDatabase",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectedItem.type.polymorphicDiscriminator,
    uberParent: "ProtectedItem",
    className: "AzureVmWorkloadSAPHanaDatabaseProtectedItem",
    modelProperties: {
      ...AzureVmWorkloadProtectedItem.type.modelProperties
    }
  }
};

export const AzureVmWorkloadSQLDatabaseProtectedItem: msRest.CompositeMapper = {
  serializedName: "AzureVmWorkloadSQLDatabase",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectedItem.type.polymorphicDiscriminator,
    uberParent: "ProtectedItem",
    className: "AzureVmWorkloadSQLDatabaseProtectedItem",
    modelProperties: {
      ...AzureVmWorkloadProtectedItem.type.modelProperties
    }
  }
};

export const AzureWorkloadErrorInfo: msRest.CompositeMapper = {
  serializedName: "AzureWorkloadErrorInfo",
  type: {
    name: "Composite",
    className: "AzureWorkloadErrorInfo",
    modelProperties: {
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "Number"
        }
      },
      errorString: {
        serializedName: "errorString",
        type: {
          name: "String"
        }
      },
      errorTitle: {
        serializedName: "errorTitle",
        type: {
          name: "String"
        }
      },
      recommendations: {
        serializedName: "recommendations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      additionalDetails: {
        serializedName: "additionalDetails",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureWorkloadJobTaskDetails: msRest.CompositeMapper = {
  serializedName: "AzureWorkloadJobTaskDetails",
  type: {
    name: "Composite",
    className: "AzureWorkloadJobTaskDetails",
    modelProperties: {
      taskId: {
        serializedName: "taskId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureWorkloadJobExtendedInfo: msRest.CompositeMapper = {
  serializedName: "AzureWorkloadJobExtendedInfo",
  type: {
    name: "Composite",
    className: "AzureWorkloadJobExtendedInfo",
    modelProperties: {
      tasksList: {
        serializedName: "tasksList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureWorkloadJobTaskDetails"
            }
          }
        }
      },
      propertyBag: {
        serializedName: "propertyBag",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      dynamicErrorMessage: {
        serializedName: "dynamicErrorMessage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureWorkloadJob: msRest.CompositeMapper = {
  serializedName: "AzureWorkloadJob",
  type: {
    name: "Composite",
    polymorphicDiscriminator: Job.type.polymorphicDiscriminator,
    uberParent: "Job",
    className: "AzureWorkloadJob",
    modelProperties: {
      ...Job.type.modelProperties,
      workloadType: {
        serializedName: "workloadType",
        type: {
          name: "String"
        }
      },
      duration: {
        serializedName: "duration",
        type: {
          name: "TimeSpan"
        }
      },
      actionsInfo: {
        serializedName: "actionsInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: [
                "Invalid",
                "Cancellable",
                "Retriable"
              ]
            }
          }
        }
      },
      errorDetails: {
        serializedName: "errorDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureWorkloadErrorInfo"
            }
          }
        }
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Composite",
          className: "AzureWorkloadJobExtendedInfo"
        }
      }
    }
  }
};

export const PointInTimeRange: msRest.CompositeMapper = {
  serializedName: "PointInTimeRange",
  type: {
    name: "Composite",
    className: "PointInTimeRange",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const AzureWorkloadRecoveryPoint: msRest.CompositeMapper = {
  serializedName: "AzureWorkloadRecoveryPoint",
  type: {
    name: "Composite",
    polymorphicDiscriminator: RecoveryPoint.type.polymorphicDiscriminator,
    uberParent: "RecoveryPoint",
    className: "AzureWorkloadRecoveryPoint",
    modelProperties: {
      ...RecoveryPoint.type.modelProperties,
      recoveryPointTimeInUTC: {
        readOnly: true,
        serializedName: "recoveryPointTimeInUTC",
        type: {
          name: "DateTime"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureWorkloadPointInTimeRecoveryPoint: msRest.CompositeMapper = {
  serializedName: "AzureWorkloadPointInTimeRecoveryPoint",
  type: {
    name: "Composite",
    polymorphicDiscriminator: RecoveryPoint.type.polymorphicDiscriminator,
    uberParent: "RecoveryPoint",
    className: "AzureWorkloadPointInTimeRecoveryPoint",
    modelProperties: {
      ...AzureWorkloadRecoveryPoint.type.modelProperties,
      timeRanges: {
        serializedName: "timeRanges",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PointInTimeRange"
            }
          }
        }
      }
    }
  }
};

export const AzureWorkloadRestoreRequest: msRest.CompositeMapper = {
  serializedName: "AzureWorkloadRestoreRequest",
  type: {
    name: "Composite",
    polymorphicDiscriminator: RestoreRequest.type.polymorphicDiscriminator,
    uberParent: "RestoreRequest",
    className: "AzureWorkloadRestoreRequest",
    modelProperties: {
      ...RestoreRequest.type.modelProperties,
      recoveryType: {
        serializedName: "recoveryType",
        type: {
          name: "String"
        }
      },
      sourceResourceId: {
        serializedName: "sourceResourceId",
        type: {
          name: "String"
        }
      },
      propertyBag: {
        serializedName: "propertyBag",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      targetInfo: {
        serializedName: "targetInfo",
        type: {
          name: "Composite",
          className: "TargetRestoreInfo"
        }
      },
      recoveryMode: {
        serializedName: "recoveryMode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureWorkloadPointInTimeRestoreRequest: msRest.CompositeMapper = {
  serializedName: "AzureWorkloadPointInTimeRestoreRequest",
  type: {
    name: "Composite",
    polymorphicDiscriminator: RestoreRequest.type.polymorphicDiscriminator,
    uberParent: "RestoreRequest",
    className: "AzureWorkloadPointInTimeRestoreRequest",
    modelProperties: {
      ...AzureWorkloadRestoreRequest.type.modelProperties,
      pointInTime: {
        serializedName: "pointInTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const TargetRestoreInfo: msRest.CompositeMapper = {
  serializedName: "TargetRestoreInfo",
  type: {
    name: "Composite",
    className: "TargetRestoreInfo",
    modelProperties: {
      overwriteOption: {
        serializedName: "overwriteOption",
        type: {
          name: "String"
        }
      },
      containerId: {
        serializedName: "containerId",
        type: {
          name: "String"
        }
      },
      databaseName: {
        serializedName: "databaseName",
        type: {
          name: "String"
        }
      },
      targetDirectoryForFileRestore: {
        serializedName: "targetDirectoryForFileRestore",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureWorkloadSAPHanaPointInTimeRecoveryPoint: msRest.CompositeMapper = {
  serializedName: "AzureWorkloadSAPHanaPointInTimeRecoveryPoint",
  type: {
    name: "Composite",
    polymorphicDiscriminator: RecoveryPoint.type.polymorphicDiscriminator,
    uberParent: "RecoveryPoint",
    className: "AzureWorkloadSAPHanaPointInTimeRecoveryPoint",
    modelProperties: {
      ...AzureWorkloadPointInTimeRecoveryPoint.type.modelProperties
    }
  }
};

export const AzureWorkloadSAPHanaRestoreRequest: msRest.CompositeMapper = {
  serializedName: "AzureWorkloadSAPHanaRestoreRequest",
  type: {
    name: "Composite",
    polymorphicDiscriminator: RestoreRequest.type.polymorphicDiscriminator,
    uberParent: "RestoreRequest",
    className: "AzureWorkloadSAPHanaRestoreRequest",
    modelProperties: {
      ...AzureWorkloadRestoreRequest.type.modelProperties
    }
  }
};

export const AzureWorkloadSAPHanaPointInTimeRestoreRequest: msRest.CompositeMapper = {
  serializedName: "AzureWorkloadSAPHanaPointInTimeRestoreRequest",
  type: {
    name: "Composite",
    polymorphicDiscriminator: RestoreRequest.type.polymorphicDiscriminator,
    uberParent: "RestoreRequest",
    className: "AzureWorkloadSAPHanaPointInTimeRestoreRequest",
    modelProperties: {
      ...AzureWorkloadSAPHanaRestoreRequest.type.modelProperties,
      pointInTime: {
        serializedName: "pointInTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const AzureWorkloadSAPHanaRecoveryPoint: msRest.CompositeMapper = {
  serializedName: "AzureWorkloadSAPHanaRecoveryPoint",
  type: {
    name: "Composite",
    polymorphicDiscriminator: RecoveryPoint.type.polymorphicDiscriminator,
    uberParent: "RecoveryPoint",
    className: "AzureWorkloadSAPHanaRecoveryPoint",
    modelProperties: {
      ...AzureWorkloadRecoveryPoint.type.modelProperties
    }
  }
};

export const AzureWorkloadSQLRecoveryPoint: msRest.CompositeMapper = {
  serializedName: "AzureWorkloadSQLRecoveryPoint",
  type: {
    name: "Composite",
    polymorphicDiscriminator: RecoveryPoint.type.polymorphicDiscriminator,
    uberParent: "RecoveryPoint",
    className: "AzureWorkloadSQLRecoveryPoint",
    modelProperties: {
      ...AzureWorkloadRecoveryPoint.type.modelProperties,
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Composite",
          className: "AzureWorkloadSQLRecoveryPointExtendedInfo"
        }
      }
    }
  }
};

export const AzureWorkloadSQLPointInTimeRecoveryPoint: msRest.CompositeMapper = {
  serializedName: "AzureWorkloadSQLPointInTimeRecoveryPoint",
  type: {
    name: "Composite",
    polymorphicDiscriminator: RecoveryPoint.type.polymorphicDiscriminator,
    uberParent: "RecoveryPoint",
    className: "AzureWorkloadSQLPointInTimeRecoveryPoint",
    modelProperties: {
      ...AzureWorkloadSQLRecoveryPoint.type.modelProperties,
      timeRanges: {
        serializedName: "timeRanges",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PointInTimeRange"
            }
          }
        }
      }
    }
  }
};

export const AzureWorkloadSQLRestoreRequest: msRest.CompositeMapper = {
  serializedName: "AzureWorkloadSQLRestoreRequest",
  type: {
    name: "Composite",
    polymorphicDiscriminator: RestoreRequest.type.polymorphicDiscriminator,
    uberParent: "RestoreRequest",
    className: "AzureWorkloadSQLRestoreRequest",
    modelProperties: {
      ...AzureWorkloadRestoreRequest.type.modelProperties,
      shouldUseAlternateTargetLocation: {
        serializedName: "shouldUseAlternateTargetLocation",
        type: {
          name: "Boolean"
        }
      },
      isNonRecoverable: {
        serializedName: "isNonRecoverable",
        type: {
          name: "Boolean"
        }
      },
      alternateDirectoryPaths: {
        serializedName: "alternateDirectoryPaths",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SQLDataDirectoryMapping"
            }
          }
        }
      }
    }
  }
};

export const AzureWorkloadSQLPointInTimeRestoreRequest: msRest.CompositeMapper = {
  serializedName: "AzureWorkloadSQLPointInTimeRestoreRequest",
  type: {
    name: "Composite",
    polymorphicDiscriminator: RestoreRequest.type.polymorphicDiscriminator,
    uberParent: "RestoreRequest",
    className: "AzureWorkloadSQLPointInTimeRestoreRequest",
    modelProperties: {
      ...AzureWorkloadSQLRestoreRequest.type.modelProperties,
      pointInTime: {
        serializedName: "pointInTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const SQLDataDirectory: msRest.CompositeMapper = {
  serializedName: "SQLDataDirectory",
  type: {
    name: "Composite",
    className: "SQLDataDirectory",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      logicalName: {
        serializedName: "logicalName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureWorkloadSQLRecoveryPointExtendedInfo: msRest.CompositeMapper = {
  serializedName: "AzureWorkloadSQLRecoveryPointExtendedInfo",
  type: {
    name: "Composite",
    className: "AzureWorkloadSQLRecoveryPointExtendedInfo",
    modelProperties: {
      dataDirectoryTimeInUTC: {
        readOnly: true,
        serializedName: "dataDirectoryTimeInUTC",
        type: {
          name: "DateTime"
        }
      },
      dataDirectoryPaths: {
        readOnly: true,
        serializedName: "dataDirectoryPaths",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SQLDataDirectory"
            }
          }
        }
      }
    }
  }
};

export const SQLDataDirectoryMapping: msRest.CompositeMapper = {
  serializedName: "SQLDataDirectoryMapping",
  type: {
    name: "Composite",
    className: "SQLDataDirectoryMapping",
    modelProperties: {
      mappingType: {
        serializedName: "mappingType",
        type: {
          name: "String"
        }
      },
      sourceLogicalName: {
        serializedName: "sourceLogicalName",
        type: {
          name: "String"
        }
      },
      sourcePath: {
        serializedName: "sourcePath",
        type: {
          name: "String"
        }
      },
      targetPath: {
        serializedName: "targetPath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BackupResourceVaultConfig: msRest.CompositeMapper = {
  serializedName: "BackupResourceVaultConfig",
  type: {
    name: "Composite",
    className: "BackupResourceVaultConfig",
    modelProperties: {
      storageModelType: {
        serializedName: "storageModelType",
        type: {
          name: "String"
        }
      },
      storageType: {
        serializedName: "storageType",
        type: {
          name: "String"
        }
      },
      storageTypeState: {
        serializedName: "storageTypeState",
        type: {
          name: "String"
        }
      },
      enhancedSecurityState: {
        serializedName: "enhancedSecurityState",
        type: {
          name: "String"
        }
      },
      softDeleteFeatureState: {
        serializedName: "softDeleteFeatureState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BackupResourceVaultConfigResource: msRest.CompositeMapper = {
  serializedName: "BackupResourceVaultConfigResource",
  type: {
    name: "Composite",
    className: "BackupResourceVaultConfigResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "BackupResourceVaultConfig"
        }
      }
    }
  }
};

export const BEKDetails: msRest.CompositeMapper = {
  serializedName: "BEKDetails",
  type: {
    name: "Composite",
    className: "BEKDetails",
    modelProperties: {
      secretUrl: {
        serializedName: "secretUrl",
        type: {
          name: "String"
        }
      },
      secretVaultId: {
        serializedName: "secretVaultId",
        type: {
          name: "String"
        }
      },
      secretData: {
        serializedName: "secretData",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BMSRPQueryObject: msRest.CompositeMapper = {
  serializedName: "BMSRPQueryObject",
  type: {
    name: "Composite",
    className: "BMSRPQueryObject",
    modelProperties: {
      startDate: {
        serializedName: "startDate",
        type: {
          name: "DateTime"
        }
      },
      endDate: {
        serializedName: "endDate",
        type: {
          name: "DateTime"
        }
      },
      restorePointQueryType: {
        serializedName: "restorePointQueryType",
        type: {
          name: "String"
        }
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DiskInformation: msRest.CompositeMapper = {
  serializedName: "DiskInformation",
  type: {
    name: "Composite",
    className: "DiskInformation",
    modelProperties: {
      lun: {
        serializedName: "lun",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Day: msRest.CompositeMapper = {
  serializedName: "Day",
  type: {
    name: "Composite",
    className: "Day",
    modelProperties: {
      date: {
        serializedName: "date",
        type: {
          name: "Number"
        }
      },
      isLast: {
        serializedName: "isLast",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DailyRetentionFormat: msRest.CompositeMapper = {
  serializedName: "DailyRetentionFormat",
  type: {
    name: "Composite",
    className: "DailyRetentionFormat",
    modelProperties: {
      daysOfTheMonth: {
        serializedName: "daysOfTheMonth",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Day"
            }
          }
        }
      }
    }
  }
};

export const RetentionDuration: msRest.CompositeMapper = {
  serializedName: "RetentionDuration",
  type: {
    name: "Composite",
    className: "RetentionDuration",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      durationType: {
        serializedName: "durationType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DailyRetentionSchedule: msRest.CompositeMapper = {
  serializedName: "DailyRetentionSchedule",
  type: {
    name: "Composite",
    className: "DailyRetentionSchedule",
    modelProperties: {
      retentionTimes: {
        serializedName: "retentionTimes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "DateTime"
            }
          }
        }
      },
      retentionDuration: {
        serializedName: "retentionDuration",
        type: {
          name: "Composite",
          className: "RetentionDuration"
        }
      }
    }
  }
};

export const DpmErrorInfo: msRest.CompositeMapper = {
  serializedName: "DpmErrorInfo",
  type: {
    name: "Composite",
    className: "DpmErrorInfo",
    modelProperties: {
      errorString: {
        serializedName: "errorString",
        type: {
          name: "String"
        }
      },
      recommendations: {
        serializedName: "recommendations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const DpmJobTaskDetails: msRest.CompositeMapper = {
  serializedName: "DpmJobTaskDetails",
  type: {
    name: "Composite",
    className: "DpmJobTaskDetails",
    modelProperties: {
      taskId: {
        serializedName: "taskId",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      duration: {
        serializedName: "duration",
        type: {
          name: "TimeSpan"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DpmJobExtendedInfo: msRest.CompositeMapper = {
  serializedName: "DpmJobExtendedInfo",
  type: {
    name: "Composite",
    className: "DpmJobExtendedInfo",
    modelProperties: {
      tasksList: {
        serializedName: "tasksList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DpmJobTaskDetails"
            }
          }
        }
      },
      propertyBag: {
        serializedName: "propertyBag",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      dynamicErrorMessage: {
        serializedName: "dynamicErrorMessage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DpmJob: msRest.CompositeMapper = {
  serializedName: "DpmJob",
  type: {
    name: "Composite",
    polymorphicDiscriminator: Job.type.polymorphicDiscriminator,
    uberParent: "Job",
    className: "DpmJob",
    modelProperties: {
      ...Job.type.modelProperties,
      duration: {
        serializedName: "duration",
        type: {
          name: "TimeSpan"
        }
      },
      dpmServerName: {
        serializedName: "dpmServerName",
        type: {
          name: "String"
        }
      },
      containerName: {
        serializedName: "containerName",
        type: {
          name: "String"
        }
      },
      containerType: {
        serializedName: "containerType",
        type: {
          name: "String"
        }
      },
      workloadType: {
        serializedName: "workloadType",
        type: {
          name: "String"
        }
      },
      actionsInfo: {
        serializedName: "actionsInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: [
                "Invalid",
                "Cancellable",
                "Retriable"
              ]
            }
          }
        }
      },
      errorDetails: {
        serializedName: "errorDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DpmErrorInfo"
            }
          }
        }
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Composite",
          className: "DpmJobExtendedInfo"
        }
      }
    }
  }
};

export const DPMProtectedItemExtendedInfo: msRest.CompositeMapper = {
  serializedName: "DPMProtectedItemExtendedInfo",
  type: {
    name: "Composite",
    className: "DPMProtectedItemExtendedInfo",
    modelProperties: {
      protectableObjectLoadPath: {
        serializedName: "protectableObjectLoadPath",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      protectedProperty: {
        serializedName: "protected",
        type: {
          name: "Boolean"
        }
      },
      isPresentOnCloud: {
        serializedName: "isPresentOnCloud",
        type: {
          name: "Boolean"
        }
      },
      lastBackupStatus: {
        serializedName: "lastBackupStatus",
        type: {
          name: "String"
        }
      },
      lastRefreshedAt: {
        serializedName: "lastRefreshedAt",
        type: {
          name: "DateTime"
        }
      },
      oldestRecoveryPoint: {
        serializedName: "oldestRecoveryPoint",
        type: {
          name: "DateTime"
        }
      },
      recoveryPointCount: {
        serializedName: "recoveryPointCount",
        type: {
          name: "Number"
        }
      },
      onPremiseOldestRecoveryPoint: {
        serializedName: "onPremiseOldestRecoveryPoint",
        type: {
          name: "DateTime"
        }
      },
      onPremiseLatestRecoveryPoint: {
        serializedName: "onPremiseLatestRecoveryPoint",
        type: {
          name: "DateTime"
        }
      },
      onPremiseRecoveryPointCount: {
        serializedName: "onPremiseRecoveryPointCount",
        type: {
          name: "Number"
        }
      },
      isCollocated: {
        serializedName: "isCollocated",
        type: {
          name: "Boolean"
        }
      },
      protectionGroupName: {
        serializedName: "protectionGroupName",
        type: {
          name: "String"
        }
      },
      diskStorageUsedInBytes: {
        serializedName: "diskStorageUsedInBytes",
        type: {
          name: "String"
        }
      },
      totalDiskStorageSizeInBytes: {
        serializedName: "totalDiskStorageSizeInBytes",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DPMProtectedItem: msRest.CompositeMapper = {
  serializedName: "DPMProtectedItem",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectedItem.type.polymorphicDiscriminator,
    uberParent: "ProtectedItem",
    className: "DPMProtectedItem",
    modelProperties: {
      ...ProtectedItem.type.modelProperties,
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String"
        }
      },
      backupEngineName: {
        serializedName: "backupEngineName",
        type: {
          name: "String"
        }
      },
      protectionState: {
        serializedName: "protectionState",
        type: {
          name: "String"
        }
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Composite",
          className: "DPMProtectedItemExtendedInfo"
        }
      }
    }
  }
};

export const EncryptionDetails: msRest.CompositeMapper = {
  serializedName: "EncryptionDetails",
  type: {
    name: "Composite",
    className: "EncryptionDetails",
    modelProperties: {
      encryptionEnabled: {
        serializedName: "encryptionEnabled",
        type: {
          name: "Boolean"
        }
      },
      kekUrl: {
        serializedName: "kekUrl",
        type: {
          name: "String"
        }
      },
      secretKeyUrl: {
        serializedName: "secretKeyUrl",
        type: {
          name: "String"
        }
      },
      kekVaultId: {
        serializedName: "kekVaultId",
        type: {
          name: "String"
        }
      },
      secretKeyVaultId: {
        serializedName: "secretKeyVaultId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationResultInfoBase: msRest.CompositeMapper = {
  serializedName: "OperationResultInfoBase",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "objectType",
      clientName: "objectType"
    },
    uberParent: "OperationResultInfoBase",
    className: "OperationResultInfoBase",
    modelProperties: {
      objectType: {
        required: true,
        serializedName: "objectType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExportJobsOperationResultInfo: msRest.CompositeMapper = {
  serializedName: "ExportJobsOperationResultInfo",
  type: {
    name: "Composite",
    polymorphicDiscriminator: OperationResultInfoBase.type.polymorphicDiscriminator,
    uberParent: "OperationResultInfoBase",
    className: "ExportJobsOperationResultInfo",
    modelProperties: {
      ...OperationResultInfoBase.type.modelProperties,
      blobUrl: {
        serializedName: "blobUrl",
        type: {
          name: "String"
        }
      },
      blobSasKey: {
        serializedName: "blobSasKey",
        type: {
          name: "String"
        }
      },
      excelFileBlobUrl: {
        serializedName: "excelFileBlobUrl",
        type: {
          name: "String"
        }
      },
      excelFileBlobSasKey: {
        serializedName: "excelFileBlobSasKey",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GenericProtectionPolicy: msRest.CompositeMapper = {
  serializedName: "GenericProtectionPolicy",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectionPolicy.type.polymorphicDiscriminator,
    uberParent: "ProtectionPolicy",
    className: "GenericProtectionPolicy",
    modelProperties: {
      ...ProtectionPolicy.type.modelProperties,
      subProtectionPolicy: {
        serializedName: "subProtectionPolicy",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubProtectionPolicy"
            }
          }
        }
      },
      timeZone: {
        serializedName: "timeZone",
        type: {
          name: "String"
        }
      },
      fabricName: {
        serializedName: "fabricName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GenericProtectedItem: msRest.CompositeMapper = {
  serializedName: "GenericProtectedItem",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectedItem.type.polymorphicDiscriminator,
    uberParent: "ProtectedItem",
    className: "GenericProtectedItem",
    modelProperties: {
      ...ProtectedItem.type.modelProperties,
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String"
        }
      },
      policyState: {
        serializedName: "policyState",
        type: {
          name: "String"
        }
      },
      protectionState: {
        serializedName: "protectionState",
        type: {
          name: "String"
        }
      },
      protectedItemId: {
        serializedName: "protectedItemId",
        type: {
          name: "Number"
        }
      },
      sourceAssociations: {
        serializedName: "sourceAssociations",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      fabricName: {
        serializedName: "fabricName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GenericRecoveryPoint: msRest.CompositeMapper = {
  serializedName: "GenericRecoveryPoint",
  type: {
    name: "Composite",
    polymorphicDiscriminator: RecoveryPoint.type.polymorphicDiscriminator,
    uberParent: "RecoveryPoint",
    className: "GenericRecoveryPoint",
    modelProperties: {
      ...RecoveryPoint.type.modelProperties,
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String"
        }
      },
      recoveryPointType: {
        serializedName: "recoveryPointType",
        type: {
          name: "String"
        }
      },
      recoveryPointTime: {
        serializedName: "recoveryPointTime",
        type: {
          name: "DateTime"
        }
      },
      recoveryPointAdditionalInfo: {
        serializedName: "recoveryPointAdditionalInfo",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetProtectedItemQueryObject: msRest.CompositeMapper = {
  serializedName: "GetProtectedItemQueryObject",
  type: {
    name: "Composite",
    className: "GetProtectedItemQueryObject",
    modelProperties: {
      expand: {
        serializedName: "expand",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const KEKDetails: msRest.CompositeMapper = {
  serializedName: "KEKDetails",
  type: {
    name: "Composite",
    className: "KEKDetails",
    modelProperties: {
      keyUrl: {
        serializedName: "keyUrl",
        type: {
          name: "String"
        }
      },
      keyVaultId: {
        serializedName: "keyVaultId",
        type: {
          name: "String"
        }
      },
      keyBackupData: {
        serializedName: "keyBackupData",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const KeyAndSecretDetails: msRest.CompositeMapper = {
  serializedName: "KeyAndSecretDetails",
  type: {
    name: "Composite",
    className: "KeyAndSecretDetails",
    modelProperties: {
      kekDetails: {
        serializedName: "kekDetails",
        type: {
          name: "Composite",
          className: "KEKDetails"
        }
      },
      bekDetails: {
        serializedName: "bekDetails",
        type: {
          name: "Composite",
          className: "BEKDetails"
        }
      },
      encryptionMechanism: {
        serializedName: "encryptionMechanism",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RecoveryPointTierInformation: msRest.CompositeMapper = {
  serializedName: "RecoveryPointTierInformation",
  type: {
    name: "Composite",
    className: "RecoveryPointTierInformation",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "Enum",
          allowedValues: [
            "Invalid",
            "InstantRP",
            "HardenedRP"
          ]
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Enum",
          allowedValues: [
            "Invalid",
            "Valid",
            "Disabled",
            "Deleted"
          ]
        }
      }
    }
  }
};

export const RecoveryPointDiskConfiguration: msRest.CompositeMapper = {
  serializedName: "RecoveryPointDiskConfiguration",
  type: {
    name: "Composite",
    className: "RecoveryPointDiskConfiguration",
    modelProperties: {
      numberOfDisksIncludedInBackup: {
        serializedName: "numberOfDisksIncludedInBackup",
        type: {
          name: "Number"
        }
      },
      numberOfDisksAttachedToVm: {
        serializedName: "numberOfDisksAttachedToVm",
        type: {
          name: "Number"
        }
      },
      includedDiskList: {
        serializedName: "includedDiskList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DiskInformation"
            }
          }
        }
      },
      excludedDiskList: {
        serializedName: "excludedDiskList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DiskInformation"
            }
          }
        }
      }
    }
  }
};

export const IaasVMRecoveryPoint: msRest.CompositeMapper = {
  serializedName: "IaasVMRecoveryPoint",
  type: {
    name: "Composite",
    polymorphicDiscriminator: RecoveryPoint.type.polymorphicDiscriminator,
    uberParent: "RecoveryPoint",
    className: "IaasVMRecoveryPoint",
    modelProperties: {
      ...RecoveryPoint.type.modelProperties,
      recoveryPointType: {
        readOnly: true,
        serializedName: "recoveryPointType",
        type: {
          name: "String"
        }
      },
      recoveryPointTime: {
        readOnly: true,
        serializedName: "recoveryPointTime",
        type: {
          name: "DateTime"
        }
      },
      recoveryPointAdditionalInfo: {
        readOnly: true,
        serializedName: "recoveryPointAdditionalInfo",
        type: {
          name: "String"
        }
      },
      sourceVMStorageType: {
        readOnly: true,
        serializedName: "sourceVMStorageType",
        type: {
          name: "String"
        }
      },
      isSourceVMEncrypted: {
        readOnly: true,
        serializedName: "isSourceVMEncrypted",
        type: {
          name: "Boolean"
        }
      },
      keyAndSecret: {
        serializedName: "keyAndSecret",
        type: {
          name: "Composite",
          className: "KeyAndSecretDetails"
        }
      },
      isInstantIlrSessionActive: {
        serializedName: "isInstantIlrSessionActive",
        type: {
          name: "Boolean"
        }
      },
      recoveryPointTierDetails: {
        serializedName: "recoveryPointTierDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RecoveryPointTierInformation"
            }
          }
        }
      },
      isManagedVirtualMachine: {
        serializedName: "isManagedVirtualMachine",
        type: {
          name: "Boolean"
        }
      },
      virtualMachineSize: {
        serializedName: "virtualMachineSize",
        type: {
          name: "String"
        }
      },
      originalStorageAccountOption: {
        serializedName: "originalStorageAccountOption",
        type: {
          name: "Boolean"
        }
      },
      osType: {
        serializedName: "osType",
        type: {
          name: "String"
        }
      },
      recoveryPointDiskConfiguration: {
        serializedName: "recoveryPointDiskConfiguration",
        type: {
          name: "Composite",
          className: "RecoveryPointDiskConfiguration"
        }
      }
    }
  }
};

export const IaasVMRestoreRequest: msRest.CompositeMapper = {
  serializedName: "IaasVMRestoreRequest",
  type: {
    name: "Composite",
    polymorphicDiscriminator: RestoreRequest.type.polymorphicDiscriminator,
    uberParent: "RestoreRequest",
    className: "IaasVMRestoreRequest",
    modelProperties: {
      ...RestoreRequest.type.modelProperties,
      recoveryPointId: {
        serializedName: "recoveryPointId",
        type: {
          name: "String"
        }
      },
      recoveryType: {
        serializedName: "recoveryType",
        type: {
          name: "String"
        }
      },
      sourceResourceId: {
        serializedName: "sourceResourceId",
        type: {
          name: "String"
        }
      },
      targetVirtualMachineId: {
        serializedName: "targetVirtualMachineId",
        type: {
          name: "String"
        }
      },
      targetResourceGroupId: {
        serializedName: "targetResourceGroupId",
        type: {
          name: "String"
        }
      },
      storageAccountId: {
        serializedName: "storageAccountId",
        type: {
          name: "String"
        }
      },
      virtualNetworkId: {
        serializedName: "virtualNetworkId",
        type: {
          name: "String"
        }
      },
      subnetId: {
        serializedName: "subnetId",
        type: {
          name: "String"
        }
      },
      targetDomainNameId: {
        serializedName: "targetDomainNameId",
        type: {
          name: "String"
        }
      },
      region: {
        serializedName: "region",
        type: {
          name: "String"
        }
      },
      affinityGroup: {
        serializedName: "affinityGroup",
        type: {
          name: "String"
        }
      },
      createNewCloudService: {
        serializedName: "createNewCloudService",
        type: {
          name: "Boolean"
        }
      },
      originalStorageAccountOption: {
        serializedName: "originalStorageAccountOption",
        type: {
          name: "Boolean"
        }
      },
      encryptionDetails: {
        serializedName: "encryptionDetails",
        type: {
          name: "Composite",
          className: "EncryptionDetails"
        }
      },
      restoreDiskLunList: {
        serializedName: "restoreDiskLunList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      }
    }
  }
};

export const JobQueryObject: msRest.CompositeMapper = {
  serializedName: "JobQueryObject",
  type: {
    name: "Composite",
    className: "JobQueryObject",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      backupManagementType: {
        serializedName: "backupManagementType",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      jobId: {
        serializedName: "jobId",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const JobResource: msRest.CompositeMapper = {
  serializedName: "JobResource",
  type: {
    name: "Composite",
    className: "JobResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "Job"
        }
      }
    }
  }
};

export const LogSchedulePolicy: msRest.CompositeMapper = {
  serializedName: "LogSchedulePolicy",
  type: {
    name: "Composite",
    polymorphicDiscriminator: SchedulePolicy.type.polymorphicDiscriminator,
    uberParent: "SchedulePolicy",
    className: "LogSchedulePolicy",
    modelProperties: {
      ...SchedulePolicy.type.modelProperties,
      scheduleFrequencyInMins: {
        serializedName: "scheduleFrequencyInMins",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const WeeklyRetentionSchedule: msRest.CompositeMapper = {
  serializedName: "WeeklyRetentionSchedule",
  type: {
    name: "Composite",
    className: "WeeklyRetentionSchedule",
    modelProperties: {
      daysOfTheWeek: {
        serializedName: "daysOfTheWeek",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ]
            }
          }
        }
      },
      retentionTimes: {
        serializedName: "retentionTimes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "DateTime"
            }
          }
        }
      },
      retentionDuration: {
        serializedName: "retentionDuration",
        type: {
          name: "Composite",
          className: "RetentionDuration"
        }
      }
    }
  }
};

export const WeeklyRetentionFormat: msRest.CompositeMapper = {
  serializedName: "WeeklyRetentionFormat",
  type: {
    name: "Composite",
    className: "WeeklyRetentionFormat",
    modelProperties: {
      daysOfTheWeek: {
        serializedName: "daysOfTheWeek",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ]
            }
          }
        }
      },
      weeksOfTheMonth: {
        serializedName: "weeksOfTheMonth",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: [
                "First",
                "Second",
                "Third",
                "Fourth",
                "Last",
                "Invalid"
              ]
            }
          }
        }
      }
    }
  }
};

export const MonthlyRetentionSchedule: msRest.CompositeMapper = {
  serializedName: "MonthlyRetentionSchedule",
  type: {
    name: "Composite",
    className: "MonthlyRetentionSchedule",
    modelProperties: {
      retentionScheduleFormatType: {
        serializedName: "retentionScheduleFormatType",
        type: {
          name: "String"
        }
      },
      retentionScheduleDaily: {
        serializedName: "retentionScheduleDaily",
        type: {
          name: "Composite",
          className: "DailyRetentionFormat"
        }
      },
      retentionScheduleWeekly: {
        serializedName: "retentionScheduleWeekly",
        type: {
          name: "Composite",
          className: "WeeklyRetentionFormat"
        }
      },
      retentionTimes: {
        serializedName: "retentionTimes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "DateTime"
            }
          }
        }
      },
      retentionDuration: {
        serializedName: "retentionDuration",
        type: {
          name: "Composite",
          className: "RetentionDuration"
        }
      }
    }
  }
};

export const YearlyRetentionSchedule: msRest.CompositeMapper = {
  serializedName: "YearlyRetentionSchedule",
  type: {
    name: "Composite",
    className: "YearlyRetentionSchedule",
    modelProperties: {
      retentionScheduleFormatType: {
        serializedName: "retentionScheduleFormatType",
        type: {
          name: "String"
        }
      },
      monthsOfYear: {
        serializedName: "monthsOfYear",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: [
                "Invalid",
                "January",
                "February",
                "March",
                "April",
                "May",
                "June",
                "July",
                "August",
                "September",
                "October",
                "November",
                "December"
              ]
            }
          }
        }
      },
      retentionScheduleDaily: {
        serializedName: "retentionScheduleDaily",
        type: {
          name: "Composite",
          className: "DailyRetentionFormat"
        }
      },
      retentionScheduleWeekly: {
        serializedName: "retentionScheduleWeekly",
        type: {
          name: "Composite",
          className: "WeeklyRetentionFormat"
        }
      },
      retentionTimes: {
        serializedName: "retentionTimes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "DateTime"
            }
          }
        }
      },
      retentionDuration: {
        serializedName: "retentionDuration",
        type: {
          name: "Composite",
          className: "RetentionDuration"
        }
      }
    }
  }
};

export const LongTermRetentionPolicy: msRest.CompositeMapper = {
  serializedName: "LongTermRetentionPolicy",
  type: {
    name: "Composite",
    polymorphicDiscriminator: RetentionPolicy.type.polymorphicDiscriminator,
    uberParent: "RetentionPolicy",
    className: "LongTermRetentionPolicy",
    modelProperties: {
      ...RetentionPolicy.type.modelProperties,
      dailySchedule: {
        serializedName: "dailySchedule",
        type: {
          name: "Composite",
          className: "DailyRetentionSchedule"
        }
      },
      weeklySchedule: {
        serializedName: "weeklySchedule",
        type: {
          name: "Composite",
          className: "WeeklyRetentionSchedule"
        }
      },
      monthlySchedule: {
        serializedName: "monthlySchedule",
        type: {
          name: "Composite",
          className: "MonthlyRetentionSchedule"
        }
      },
      yearlySchedule: {
        serializedName: "yearlySchedule",
        type: {
          name: "Composite",
          className: "YearlyRetentionSchedule"
        }
      }
    }
  }
};

export const LongTermSchedulePolicy: msRest.CompositeMapper = {
  serializedName: "LongTermSchedulePolicy",
  type: {
    name: "Composite",
    polymorphicDiscriminator: SchedulePolicy.type.polymorphicDiscriminator,
    uberParent: "SchedulePolicy",
    className: "LongTermSchedulePolicy",
    modelProperties: {
      ...SchedulePolicy.type.modelProperties
    }
  }
};

export const MabErrorInfo: msRest.CompositeMapper = {
  serializedName: "MabErrorInfo",
  type: {
    name: "Composite",
    className: "MabErrorInfo",
    modelProperties: {
      errorString: {
        readOnly: true,
        serializedName: "errorString",
        type: {
          name: "String"
        }
      },
      recommendations: {
        readOnly: true,
        serializedName: "recommendations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const MabFileFolderProtectedItemExtendedInfo: msRest.CompositeMapper = {
  serializedName: "MabFileFolderProtectedItemExtendedInfo",
  type: {
    name: "Composite",
    className: "MabFileFolderProtectedItemExtendedInfo",
    modelProperties: {
      lastRefreshedAt: {
        serializedName: "lastRefreshedAt",
        type: {
          name: "DateTime"
        }
      },
      oldestRecoveryPoint: {
        serializedName: "oldestRecoveryPoint",
        type: {
          name: "DateTime"
        }
      },
      recoveryPointCount: {
        serializedName: "recoveryPointCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const MabFileFolderProtectedItem: msRest.CompositeMapper = {
  serializedName: "MabFileFolderProtectedItem",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectedItem.type.polymorphicDiscriminator,
    uberParent: "ProtectedItem",
    className: "MabFileFolderProtectedItem",
    modelProperties: {
      ...ProtectedItem.type.modelProperties,
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String"
        }
      },
      computerName: {
        serializedName: "computerName",
        type: {
          name: "String"
        }
      },
      lastBackupStatus: {
        serializedName: "lastBackupStatus",
        type: {
          name: "String"
        }
      },
      lastBackupTime: {
        serializedName: "lastBackupTime",
        type: {
          name: "DateTime"
        }
      },
      protectionState: {
        serializedName: "protectionState",
        type: {
          name: "String"
        }
      },
      deferredDeleteSyncTimeInUTC: {
        serializedName: "deferredDeleteSyncTimeInUTC",
        type: {
          name: "Number"
        }
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Composite",
          className: "MabFileFolderProtectedItemExtendedInfo"
        }
      }
    }
  }
};

export const MabJobTaskDetails: msRest.CompositeMapper = {
  serializedName: "MabJobTaskDetails",
  type: {
    name: "Composite",
    className: "MabJobTaskDetails",
    modelProperties: {
      taskId: {
        serializedName: "taskId",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      duration: {
        serializedName: "duration",
        type: {
          name: "TimeSpan"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MabJobExtendedInfo: msRest.CompositeMapper = {
  serializedName: "MabJobExtendedInfo",
  type: {
    name: "Composite",
    className: "MabJobExtendedInfo",
    modelProperties: {
      tasksList: {
        serializedName: "tasksList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MabJobTaskDetails"
            }
          }
        }
      },
      propertyBag: {
        serializedName: "propertyBag",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      dynamicErrorMessage: {
        serializedName: "dynamicErrorMessage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MabJob: msRest.CompositeMapper = {
  serializedName: "MabJob",
  type: {
    name: "Composite",
    polymorphicDiscriminator: Job.type.polymorphicDiscriminator,
    uberParent: "Job",
    className: "MabJob",
    modelProperties: {
      ...Job.type.modelProperties,
      duration: {
        serializedName: "duration",
        type: {
          name: "TimeSpan"
        }
      },
      actionsInfo: {
        serializedName: "actionsInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: [
                "Invalid",
                "Cancellable",
                "Retriable"
              ]
            }
          }
        }
      },
      mabServerName: {
        serializedName: "mabServerName",
        type: {
          name: "String"
        }
      },
      mabServerType: {
        serializedName: "mabServerType",
        type: {
          name: "String"
        }
      },
      workloadType: {
        serializedName: "workloadType",
        type: {
          name: "String"
        }
      },
      errorDetails: {
        serializedName: "errorDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MabErrorInfo"
            }
          }
        }
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Composite",
          className: "MabJobExtendedInfo"
        }
      }
    }
  }
};

export const MabProtectionPolicy: msRest.CompositeMapper = {
  serializedName: "MAB",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectionPolicy.type.polymorphicDiscriminator,
    uberParent: "ProtectionPolicy",
    className: "MabProtectionPolicy",
    modelProperties: {
      ...ProtectionPolicy.type.modelProperties,
      schedulePolicy: {
        serializedName: "schedulePolicy",
        type: {
          name: "Composite",
          className: "SchedulePolicy"
        }
      },
      retentionPolicy: {
        serializedName: "retentionPolicy",
        type: {
          name: "Composite",
          className: "RetentionPolicy"
        }
      }
    }
  }
};

export const OperationResultInfo: msRest.CompositeMapper = {
  serializedName: "OperationResultInfo",
  type: {
    name: "Composite",
    polymorphicDiscriminator: OperationResultInfoBase.type.polymorphicDiscriminator,
    uberParent: "OperationResultInfoBase",
    className: "OperationResultInfo",
    modelProperties: {
      ...OperationResultInfoBase.type.modelProperties,
      jobList: {
        serializedName: "jobList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const OperationWorkerResponse: msRest.CompositeMapper = {
  serializedName: "OperationWorkerResponse",
  type: {
    name: "Composite",
    className: "OperationWorkerResponse",
    modelProperties: {
      statusCode: {
        serializedName: "statusCode",
        type: {
          name: "Enum",
          allowedValues: [
            "Continue",
            "SwitchingProtocols",
            "OK",
            "Created",
            "Accepted",
            "NonAuthoritativeInformation",
            "NoContent",
            "ResetContent",
            "PartialContent",
            "MultipleChoices",
            "Ambiguous",
            "MovedPermanently",
            "Moved",
            "Found",
            "Redirect",
            "SeeOther",
            "RedirectMethod",
            "NotModified",
            "UseProxy",
            "Unused",
            "TemporaryRedirect",
            "RedirectKeepVerb",
            "BadRequest",
            "Unauthorized",
            "PaymentRequired",
            "Forbidden",
            "NotFound",
            "MethodNotAllowed",
            "NotAcceptable",
            "ProxyAuthenticationRequired",
            "RequestTimeout",
            "Conflict",
            "Gone",
            "LengthRequired",
            "PreconditionFailed",
            "RequestEntityTooLarge",
            "RequestUriTooLong",
            "UnsupportedMediaType",
            "RequestedRangeNotSatisfiable",
            "ExpectationFailed",
            "UpgradeRequired",
            "InternalServerError",
            "NotImplemented",
            "BadGateway",
            "ServiceUnavailable",
            "GatewayTimeout",
            "HttpVersionNotSupported"
          ]
        }
      },
      headers: {
        serializedName: "headers",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      }
    }
  }
};

export const OperationResultInfoBaseResource: msRest.CompositeMapper = {
  serializedName: "OperationResultInfoBaseResource",
  type: {
    name: "Composite",
    className: "OperationResultInfoBaseResource",
    modelProperties: {
      ...OperationWorkerResponse.type.modelProperties,
      operation: {
        serializedName: "operation",
        type: {
          name: "Composite",
          className: "OperationResultInfoBase"
        }
      }
    }
  }
};

export const ProtectedItemQueryObject: msRest.CompositeMapper = {
  serializedName: "ProtectedItemQueryObject",
  type: {
    name: "Composite",
    className: "ProtectedItemQueryObject",
    modelProperties: {
      healthState: {
        serializedName: "healthState",
        type: {
          name: "String"
        }
      },
      backupManagementType: {
        serializedName: "backupManagementType",
        type: {
          name: "String"
        }
      },
      itemType: {
        serializedName: "itemType",
        type: {
          name: "String"
        }
      },
      policyName: {
        serializedName: "policyName",
        type: {
          name: "String"
        }
      },
      containerName: {
        serializedName: "containerName",
        type: {
          name: "String"
        }
      },
      backupEngineName: {
        serializedName: "backupEngineName",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String"
        }
      },
      fabricName: {
        serializedName: "fabricName",
        type: {
          name: "String"
        }
      },
      backupSetName: {
        serializedName: "backupSetName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProtectedItemResource: msRest.CompositeMapper = {
  serializedName: "ProtectedItemResource",
  type: {
    name: "Composite",
    className: "ProtectedItemResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ProtectedItem"
        }
      }
    }
  }
};

export const ProtectionPolicyQueryObject: msRest.CompositeMapper = {
  serializedName: "ProtectionPolicyQueryObject",
  type: {
    name: "Composite",
    className: "ProtectionPolicyQueryObject",
    modelProperties: {
      backupManagementType: {
        serializedName: "backupManagementType",
        type: {
          name: "String"
        }
      },
      fabricName: {
        serializedName: "fabricName",
        type: {
          name: "String"
        }
      },
      workloadType: {
        serializedName: "workloadType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProtectionPolicyResource: msRest.CompositeMapper = {
  serializedName: "ProtectionPolicyResource",
  type: {
    name: "Composite",
    className: "ProtectionPolicyResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ProtectionPolicy"
        }
      }
    }
  }
};

export const RecoveryPointResource: msRest.CompositeMapper = {
  serializedName: "RecoveryPointResource",
  type: {
    name: "Composite",
    className: "RecoveryPointResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "RecoveryPoint"
        }
      }
    }
  }
};

export const ResourceList: msRest.CompositeMapper = {
  serializedName: "ResourceList",
  type: {
    name: "Composite",
    className: "ResourceList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RestoreRequestResource: msRest.CompositeMapper = {
  serializedName: "RestoreRequestResource",
  type: {
    name: "Composite",
    className: "RestoreRequestResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "RestoreRequest"
        }
      }
    }
  }
};

export const SimpleRetentionPolicy: msRest.CompositeMapper = {
  serializedName: "SimpleRetentionPolicy",
  type: {
    name: "Composite",
    polymorphicDiscriminator: RetentionPolicy.type.polymorphicDiscriminator,
    uberParent: "RetentionPolicy",
    className: "SimpleRetentionPolicy",
    modelProperties: {
      ...RetentionPolicy.type.modelProperties,
      retentionDuration: {
        serializedName: "retentionDuration",
        type: {
          name: "Composite",
          className: "RetentionDuration"
        }
      }
    }
  }
};

export const SimpleSchedulePolicy: msRest.CompositeMapper = {
  serializedName: "SimpleSchedulePolicy",
  type: {
    name: "Composite",
    polymorphicDiscriminator: SchedulePolicy.type.polymorphicDiscriminator,
    uberParent: "SchedulePolicy",
    className: "SimpleSchedulePolicy",
    modelProperties: {
      ...SchedulePolicy.type.modelProperties,
      scheduleRunFrequency: {
        serializedName: "scheduleRunFrequency",
        type: {
          name: "String"
        }
      },
      scheduleRunDays: {
        serializedName: "scheduleRunDays",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ]
            }
          }
        }
      },
      scheduleRunTimes: {
        serializedName: "scheduleRunTimes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "DateTime"
            }
          }
        }
      },
      scheduleWeeklyFrequency: {
        serializedName: "scheduleWeeklyFrequency",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ValidateOperationRequest: msRest.CompositeMapper = {
  serializedName: "ValidateOperationRequest",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "objectType",
      clientName: "objectType"
    },
    uberParent: "ValidateOperationRequest",
    className: "ValidateOperationRequest",
    modelProperties: {
      objectType: {
        required: true,
        serializedName: "objectType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ValidateRestoreOperationRequest: msRest.CompositeMapper = {
  serializedName: "ValidateRestoreOperationRequest",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ValidateOperationRequest.type.polymorphicDiscriminator,
    uberParent: "ValidateOperationRequest",
    className: "ValidateRestoreOperationRequest",
    modelProperties: {
      ...ValidateOperationRequest.type.modelProperties,
      restoreRequest: {
        serializedName: "restoreRequest",
        type: {
          name: "Composite",
          className: "RestoreRequest"
        }
      }
    }
  }
};

export const ValidateIaasVMRestoreOperationRequest: msRest.CompositeMapper = {
  serializedName: "ValidateIaasVMRestoreOperationRequest",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ValidateOperationRequest.type.polymorphicDiscriminator,
    uberParent: "ValidateOperationRequest",
    className: "ValidateIaasVMRestoreOperationRequest",
    modelProperties: {
      ...ValidateRestoreOperationRequest.type.modelProperties
    }
  }
};

export const ValidateOperationResponse: msRest.CompositeMapper = {
  serializedName: "ValidateOperationResponse",
  type: {
    name: "Composite",
    className: "ValidateOperationResponse",
    modelProperties: {
      validationResults: {
        serializedName: "validationResults",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      }
    }
  }
};

export const ValidateOperationsResponse: msRest.CompositeMapper = {
  serializedName: "ValidateOperationsResponse",
  type: {
    name: "Composite",
    className: "ValidateOperationsResponse",
    modelProperties: {
      validateOperationResponse: {
        serializedName: "validateOperationResponse",
        type: {
          name: "Composite",
          className: "ValidateOperationResponse"
        }
      }
    }
  }
};

export const FeatureSupportRequest: msRest.CompositeMapper = {
  serializedName: "FeatureSupportRequest",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "featureType",
      clientName: "featureType"
    },
    uberParent: "FeatureSupportRequest",
    className: "FeatureSupportRequest",
    modelProperties: {
      featureType: {
        required: true,
        serializedName: "featureType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureBackupGoalFeatureSupportRequest: msRest.CompositeMapper = {
  serializedName: "AzureBackupGoals",
  type: {
    name: "Composite",
    polymorphicDiscriminator: FeatureSupportRequest.type.polymorphicDiscriminator,
    uberParent: "FeatureSupportRequest",
    className: "AzureBackupGoalFeatureSupportRequest",
    modelProperties: {
      ...FeatureSupportRequest.type.modelProperties
    }
  }
};

export const ProtectionIntent: msRest.CompositeMapper = {
  serializedName: "ProtectionIntent",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "protectionIntentItemType",
      clientName: "protectionIntentItemType"
    },
    uberParent: "ProtectionIntent",
    className: "ProtectionIntent",
    modelProperties: {
      backupManagementType: {
        serializedName: "backupManagementType",
        type: {
          name: "String"
        }
      },
      sourceResourceId: {
        serializedName: "sourceResourceId",
        type: {
          name: "String"
        }
      },
      itemId: {
        serializedName: "itemId",
        type: {
          name: "String"
        }
      },
      policyId: {
        serializedName: "policyId",
        type: {
          name: "String"
        }
      },
      protectionState: {
        serializedName: "protectionState",
        type: {
          name: "String"
        }
      },
      protectionIntentItemType: {
        required: true,
        serializedName: "protectionIntentItemType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureRecoveryServiceVaultProtectionIntent: msRest.CompositeMapper = {
  serializedName: "RecoveryServiceVaultItem",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectionIntent.type.polymorphicDiscriminator,
    uberParent: "ProtectionIntent",
    className: "AzureRecoveryServiceVaultProtectionIntent",
    modelProperties: {
      ...ProtectionIntent.type.modelProperties
    }
  }
};

export const AzureResourceProtectionIntent: msRest.CompositeMapper = {
  serializedName: "AzureResourceItem",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectionIntent.type.polymorphicDiscriminator,
    uberParent: "ProtectionIntent",
    className: "AzureResourceProtectionIntent",
    modelProperties: {
      ...ProtectionIntent.type.modelProperties,
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureVMResourceFeatureSupportRequest: msRest.CompositeMapper = {
  serializedName: "AzureVMResourceBackup",
  type: {
    name: "Composite",
    polymorphicDiscriminator: FeatureSupportRequest.type.polymorphicDiscriminator,
    uberParent: "FeatureSupportRequest",
    className: "AzureVMResourceFeatureSupportRequest",
    modelProperties: {
      ...FeatureSupportRequest.type.modelProperties,
      vmSize: {
        serializedName: "vmSize",
        type: {
          name: "String"
        }
      },
      vmSku: {
        serializedName: "vmSku",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureVMResourceFeatureSupportResponse: msRest.CompositeMapper = {
  serializedName: "AzureVMResourceFeatureSupportResponse",
  type: {
    name: "Composite",
    className: "AzureVMResourceFeatureSupportResponse",
    modelProperties: {
      supportStatus: {
        serializedName: "supportStatus",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureWorkloadAutoProtectionIntent: msRest.CompositeMapper = {
  serializedName: "AzureWorkloadAutoProtectionIntent",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectionIntent.type.polymorphicDiscriminator,
    uberParent: "ProtectionIntent",
    className: "AzureWorkloadAutoProtectionIntent",
    modelProperties: {
      ...AzureRecoveryServiceVaultProtectionIntent.type.modelProperties
    }
  }
};

export const AzureWorkloadSQLAutoProtectionIntent: msRest.CompositeMapper = {
  serializedName: "AzureWorkloadSQLAutoProtectionIntent",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectionIntent.type.polymorphicDiscriminator,
    uberParent: "ProtectionIntent",
    className: "AzureWorkloadSQLAutoProtectionIntent",
    modelProperties: {
      ...AzureWorkloadAutoProtectionIntent.type.modelProperties,
      workloadItemType: {
        serializedName: "workloadItemType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NameInfo: msRest.CompositeMapper = {
  serializedName: "NameInfo",
  type: {
    name: "Composite",
    className: "NameInfo",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      localizedValue: {
        serializedName: "localizedValue",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BackupManagementUsage: msRest.CompositeMapper = {
  serializedName: "BackupManagementUsage",
  type: {
    name: "Composite",
    className: "BackupManagementUsage",
    modelProperties: {
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      quotaPeriod: {
        serializedName: "quotaPeriod",
        type: {
          name: "String"
        }
      },
      nextResetTime: {
        serializedName: "nextResetTime",
        type: {
          name: "DateTime"
        }
      },
      currentValue: {
        serializedName: "currentValue",
        type: {
          name: "Number"
        }
      },
      limit: {
        serializedName: "limit",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "Composite",
          className: "NameInfo"
        }
      }
    }
  }
};

export const BackupStatusRequest: msRest.CompositeMapper = {
  serializedName: "BackupStatusRequest",
  type: {
    name: "Composite",
    className: "BackupStatusRequest",
    modelProperties: {
      resourceType: {
        serializedName: "resourceType",
        type: {
          name: "String"
        }
      },
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      poLogicalName: {
        serializedName: "poLogicalName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BackupStatusResponse: msRest.CompositeMapper = {
  serializedName: "BackupStatusResponse",
  type: {
    name: "Composite",
    className: "BackupStatusResponse",
    modelProperties: {
      protectionStatus: {
        serializedName: "protectionStatus",
        type: {
          name: "String"
        }
      },
      vaultId: {
        serializedName: "vaultId",
        type: {
          name: "String"
        }
      },
      fabricName: {
        serializedName: "fabricName",
        type: {
          name: "String"
        }
      },
      containerName: {
        serializedName: "containerName",
        type: {
          name: "String"
        }
      },
      protectedItemName: {
        serializedName: "protectedItemName",
        type: {
          name: "String"
        }
      },
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      },
      policyName: {
        serializedName: "policyName",
        type: {
          name: "String"
        }
      },
      registrationStatus: {
        serializedName: "registrationStatus",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BMSBackupSummariesQueryObject: msRest.CompositeMapper = {
  serializedName: "BMSBackupSummariesQueryObject",
  type: {
    name: "Composite",
    className: "BMSBackupSummariesQueryObject",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PreValidateEnableBackupRequest: msRest.CompositeMapper = {
  serializedName: "PreValidateEnableBackupRequest",
  type: {
    name: "Composite",
    className: "PreValidateEnableBackupRequest",
    modelProperties: {
      resourceType: {
        serializedName: "resourceType",
        type: {
          name: "String"
        }
      },
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      vaultId: {
        serializedName: "vaultId",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PreValidateEnableBackupResponse: msRest.CompositeMapper = {
  serializedName: "PreValidateEnableBackupResponse",
  type: {
    name: "Composite",
    className: "PreValidateEnableBackupResponse",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      },
      recommendation: {
        serializedName: "recommendation",
        type: {
          name: "String"
        }
      },
      containerName: {
        serializedName: "containerName",
        type: {
          name: "String"
        }
      },
      protectedItemName: {
        serializedName: "protectedItemName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProtectionIntentQueryObject: msRest.CompositeMapper = {
  serializedName: "ProtectionIntentQueryObject",
  type: {
    name: "Composite",
    className: "ProtectionIntentQueryObject",
    modelProperties: {
      backupManagementType: {
        serializedName: "backupManagementType",
        type: {
          name: "String"
        }
      },
      itemType: {
        serializedName: "itemType",
        type: {
          name: "String"
        }
      },
      parentName: {
        serializedName: "parentName",
        type: {
          name: "String"
        }
      },
      itemName: {
        serializedName: "itemName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProtectionIntentResource: msRest.CompositeMapper = {
  serializedName: "ProtectionIntentResource",
  type: {
    name: "Composite",
    className: "ProtectionIntentResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ProtectionIntent"
        }
      }
    }
  }
};

export const ProtectionContainer: msRest.CompositeMapper = {
  serializedName: "ProtectionContainer",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "containerType",
      clientName: "containerType"
    },
    uberParent: "ProtectionContainer",
    className: "ProtectionContainer",
    modelProperties: {
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String"
        }
      },
      backupManagementType: {
        serializedName: "backupManagementType",
        type: {
          name: "String"
        }
      },
      registrationStatus: {
        serializedName: "registrationStatus",
        type: {
          name: "String"
        }
      },
      healthStatus: {
        serializedName: "healthStatus",
        type: {
          name: "String"
        }
      },
      containerType: {
        required: true,
        serializedName: "containerType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DpmContainer: msRest.CompositeMapper = {
  serializedName: "DPMContainer",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectionContainer.type.polymorphicDiscriminator,
    uberParent: "ProtectionContainer",
    className: "DpmContainer",
    modelProperties: {
      ...ProtectionContainer.type.modelProperties,
      canReRegister: {
        serializedName: "canReRegister",
        type: {
          name: "Boolean"
        }
      },
      containerId: {
        serializedName: "containerId",
        type: {
          name: "String"
        }
      },
      protectedItemCount: {
        serializedName: "protectedItemCount",
        type: {
          name: "Number"
        }
      },
      dpmAgentVersion: {
        serializedName: "dpmAgentVersion",
        type: {
          name: "String"
        }
      },
      dpmServers: {
        serializedName: "dpmServers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      upgradeAvailable: {
        serializedName: "upgradeAvailable",
        type: {
          name: "Boolean"
        }
      },
      protectionStatus: {
        serializedName: "protectionStatus",
        type: {
          name: "String"
        }
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Composite",
          className: "DPMContainerExtendedInfo"
        }
      }
    }
  }
};

export const AzureBackupServerContainer: msRest.CompositeMapper = {
  serializedName: "AzureBackupServerContainer",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectionContainer.type.polymorphicDiscriminator,
    uberParent: "ProtectionContainer",
    className: "AzureBackupServerContainer",
    modelProperties: {
      ...DpmContainer.type.modelProperties
    }
  }
};

export const BackupEngineBase: msRest.CompositeMapper = {
  serializedName: "BackupEngineBase",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "backupEngineType",
      clientName: "backupEngineType"
    },
    uberParent: "BackupEngineBase",
    className: "BackupEngineBase",
    modelProperties: {
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String"
        }
      },
      backupManagementType: {
        serializedName: "backupManagementType",
        type: {
          name: "String"
        }
      },
      registrationStatus: {
        serializedName: "registrationStatus",
        type: {
          name: "String"
        }
      },
      backupEngineState: {
        serializedName: "backupEngineState",
        type: {
          name: "String"
        }
      },
      healthStatus: {
        serializedName: "healthStatus",
        type: {
          name: "String"
        }
      },
      canReRegister: {
        serializedName: "canReRegister",
        type: {
          name: "Boolean"
        }
      },
      backupEngineId: {
        serializedName: "backupEngineId",
        type: {
          name: "String"
        }
      },
      dpmVersion: {
        serializedName: "dpmVersion",
        type: {
          name: "String"
        }
      },
      azureBackupAgentVersion: {
        serializedName: "azureBackupAgentVersion",
        type: {
          name: "String"
        }
      },
      isAzureBackupAgentUpgradeAvailable: {
        serializedName: "isAzureBackupAgentUpgradeAvailable",
        type: {
          name: "Boolean"
        }
      },
      isDpmUpgradeAvailable: {
        serializedName: "isDpmUpgradeAvailable",
        type: {
          name: "Boolean"
        }
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Composite",
          className: "BackupEngineExtendedInfo"
        }
      },
      backupEngineType: {
        required: true,
        serializedName: "backupEngineType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureBackupServerEngine: msRest.CompositeMapper = {
  serializedName: "AzureBackupServerEngine",
  type: {
    name: "Composite",
    polymorphicDiscriminator: BackupEngineBase.type.polymorphicDiscriminator,
    uberParent: "BackupEngineBase",
    className: "AzureBackupServerEngine",
    modelProperties: {
      ...BackupEngineBase.type.modelProperties
    }
  }
};

export const BackupRequest: msRest.CompositeMapper = {
  serializedName: "BackupRequest",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "objectType",
      clientName: "objectType"
    },
    uberParent: "BackupRequest",
    className: "BackupRequest",
    modelProperties: {
      objectType: {
        required: true,
        serializedName: "objectType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureFileShareBackupRequest: msRest.CompositeMapper = {
  serializedName: "AzureFileShareBackupRequest",
  type: {
    name: "Composite",
    polymorphicDiscriminator: BackupRequest.type.polymorphicDiscriminator,
    uberParent: "BackupRequest",
    className: "AzureFileShareBackupRequest",
    modelProperties: {
      ...BackupRequest.type.modelProperties,
      recoveryPointExpiryTimeInUTC: {
        serializedName: "recoveryPointExpiryTimeInUTC",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const WorkloadProtectableItem: msRest.CompositeMapper = {
  serializedName: "WorkloadProtectableItem",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "protectableItemType",
      clientName: "protectableItemType"
    },
    uberParent: "WorkloadProtectableItem",
    className: "WorkloadProtectableItem",
    modelProperties: {
      backupManagementType: {
        serializedName: "backupManagementType",
        type: {
          name: "String"
        }
      },
      workloadType: {
        serializedName: "workloadType",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String"
        }
      },
      protectionState: {
        serializedName: "protectionState",
        type: {
          name: "String"
        }
      },
      protectableItemType: {
        required: true,
        serializedName: "protectableItemType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureFileShareProtectableItem: msRest.CompositeMapper = {
  serializedName: "AzureFileShare",
  type: {
    name: "Composite",
    polymorphicDiscriminator: WorkloadProtectableItem.type.polymorphicDiscriminator,
    uberParent: "WorkloadProtectableItem",
    className: "AzureFileShareProtectableItem",
    modelProperties: {
      ...WorkloadProtectableItem.type.modelProperties,
      parentContainerFabricId: {
        serializedName: "parentContainerFabricId",
        type: {
          name: "String"
        }
      },
      parentContainerFriendlyName: {
        serializedName: "parentContainerFriendlyName",
        type: {
          name: "String"
        }
      },
      azureFileShareType: {
        serializedName: "azureFileShareType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ILRRequest: msRest.CompositeMapper = {
  serializedName: "ILRRequest",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "objectType",
      clientName: "objectType"
    },
    uberParent: "ILRRequest",
    className: "ILRRequest",
    modelProperties: {
      objectType: {
        required: true,
        serializedName: "objectType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureFileShareProvisionILRRequest: msRest.CompositeMapper = {
  serializedName: "AzureFileShareProvisionILRRequest",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ILRRequest.type.polymorphicDiscriminator,
    uberParent: "ILRRequest",
    className: "AzureFileShareProvisionILRRequest",
    modelProperties: {
      ...ILRRequest.type.modelProperties,
      recoveryPointId: {
        serializedName: "recoveryPointId",
        type: {
          name: "String"
        }
      },
      sourceResourceId: {
        serializedName: "sourceResourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IaaSVMContainer: msRest.CompositeMapper = {
  serializedName: "IaaSVMContainer",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectionContainer.type.polymorphicDiscriminator,
    uberParent: "ProtectionContainer",
    className: "IaaSVMContainer",
    modelProperties: {
      ...ProtectionContainer.type.modelProperties,
      virtualMachineId: {
        serializedName: "virtualMachineId",
        type: {
          name: "String"
        }
      },
      virtualMachineVersion: {
        serializedName: "virtualMachineVersion",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureIaaSClassicComputeVMContainer: msRest.CompositeMapper = {
  serializedName: "Microsoft.ClassicCompute/virtualMachines",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectionContainer.type.polymorphicDiscriminator,
    uberParent: "ProtectionContainer",
    className: "AzureIaaSClassicComputeVMContainer",
    modelProperties: {
      ...IaaSVMContainer.type.modelProperties
    }
  }
};

export const IaaSVMProtectableItem: msRest.CompositeMapper = {
  serializedName: "IaaSVMProtectableItem",
  type: {
    name: "Composite",
    polymorphicDiscriminator: WorkloadProtectableItem.type.polymorphicDiscriminator,
    uberParent: "WorkloadProtectableItem",
    className: "IaaSVMProtectableItem",
    modelProperties: {
      ...WorkloadProtectableItem.type.modelProperties,
      virtualMachineId: {
        serializedName: "virtualMachineId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureIaaSClassicComputeVMProtectableItem: msRest.CompositeMapper = {
  serializedName: "Microsoft.ClassicCompute/virtualMachines",
  type: {
    name: "Composite",
    polymorphicDiscriminator: WorkloadProtectableItem.type.polymorphicDiscriminator,
    uberParent: "WorkloadProtectableItem",
    className: "AzureIaaSClassicComputeVMProtectableItem",
    modelProperties: {
      ...IaaSVMProtectableItem.type.modelProperties
    }
  }
};

export const AzureIaaSComputeVMContainer: msRest.CompositeMapper = {
  serializedName: "Microsoft.Compute/virtualMachines",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectionContainer.type.polymorphicDiscriminator,
    uberParent: "ProtectionContainer",
    className: "AzureIaaSComputeVMContainer",
    modelProperties: {
      ...IaaSVMContainer.type.modelProperties
    }
  }
};

export const AzureIaaSComputeVMProtectableItem: msRest.CompositeMapper = {
  serializedName: "Microsoft.Compute/virtualMachines",
  type: {
    name: "Composite",
    polymorphicDiscriminator: WorkloadProtectableItem.type.polymorphicDiscriminator,
    uberParent: "WorkloadProtectableItem",
    className: "AzureIaaSComputeVMProtectableItem",
    modelProperties: {
      ...IaaSVMProtectableItem.type.modelProperties
    }
  }
};

export const AzureWorkloadContainer: msRest.CompositeMapper = {
  serializedName: "AzureWorkloadContainer",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectionContainer.type.polymorphicDiscriminator,
    uberParent: "ProtectionContainer",
    className: "AzureWorkloadContainer",
    modelProperties: {
      ...ProtectionContainer.type.modelProperties,
      sourceResourceId: {
        serializedName: "sourceResourceId",
        type: {
          name: "String"
        }
      },
      lastUpdatedTime: {
        serializedName: "lastUpdatedTime",
        type: {
          name: "DateTime"
        }
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Composite",
          className: "AzureWorkloadContainerExtendedInfo"
        }
      },
      workloadType: {
        serializedName: "workloadType",
        type: {
          name: "String"
        }
      },
      operationType: {
        serializedName: "operationType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureSQLAGWorkloadContainerProtectionContainer: msRest.CompositeMapper = {
  serializedName: "SQLAGWorkLoadContainer",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectionContainer.type.polymorphicDiscriminator,
    uberParent: "ProtectionContainer",
    className: "AzureSQLAGWorkloadContainerProtectionContainer",
    modelProperties: {
      ...AzureWorkloadContainer.type.modelProperties
    }
  }
};

export const AzureSqlContainer: msRest.CompositeMapper = {
  serializedName: "AzureSqlContainer",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectionContainer.type.polymorphicDiscriminator,
    uberParent: "ProtectionContainer",
    className: "AzureSqlContainer",
    modelProperties: {
      ...ProtectionContainer.type.modelProperties
    }
  }
};

export const AzureStorageContainer: msRest.CompositeMapper = {
  serializedName: "StorageContainer",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectionContainer.type.polymorphicDiscriminator,
    uberParent: "ProtectionContainer",
    className: "AzureStorageContainer",
    modelProperties: {
      ...ProtectionContainer.type.modelProperties,
      sourceResourceId: {
        serializedName: "sourceResourceId",
        type: {
          name: "String"
        }
      },
      storageAccountVersion: {
        serializedName: "storageAccountVersion",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      protectedItemCount: {
        serializedName: "protectedItemCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ProtectableContainer: msRest.CompositeMapper = {
  serializedName: "ProtectableContainer",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "protectableContainerType",
      clientName: "protectableContainerType"
    },
    uberParent: "ProtectableContainer",
    className: "ProtectableContainer",
    modelProperties: {
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String"
        }
      },
      backupManagementType: {
        serializedName: "backupManagementType",
        type: {
          name: "String"
        }
      },
      healthStatus: {
        serializedName: "healthStatus",
        type: {
          name: "String"
        }
      },
      containerId: {
        serializedName: "containerId",
        type: {
          name: "String"
        }
      },
      protectableContainerType: {
        required: true,
        serializedName: "protectableContainerType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureStorageProtectableContainer: msRest.CompositeMapper = {
  serializedName: "StorageContainer",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectableContainer.type.polymorphicDiscriminator,
    uberParent: "ProtectableContainer",
    className: "AzureStorageProtectableContainer",
    modelProperties: {
      ...ProtectableContainer.type.modelProperties
    }
  }
};

export const AzureVMAppContainerProtectableContainer: msRest.CompositeMapper = {
  serializedName: "VMAppContainer",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectableContainer.type.polymorphicDiscriminator,
    uberParent: "ProtectableContainer",
    className: "AzureVMAppContainerProtectableContainer",
    modelProperties: {
      ...ProtectableContainer.type.modelProperties
    }
  }
};

export const AzureVMAppContainerProtectionContainer: msRest.CompositeMapper = {
  serializedName: "VMAppContainer",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectionContainer.type.polymorphicDiscriminator,
    uberParent: "ProtectionContainer",
    className: "AzureVMAppContainerProtectionContainer",
    modelProperties: {
      ...AzureWorkloadContainer.type.modelProperties
    }
  }
};

export const WorkloadItem: msRest.CompositeMapper = {
  serializedName: "WorkloadItem",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "workloadItemType",
      clientName: "workloadItemType"
    },
    uberParent: "WorkloadItem",
    className: "WorkloadItem",
    modelProperties: {
      backupManagementType: {
        serializedName: "backupManagementType",
        type: {
          name: "String"
        }
      },
      workloadType: {
        serializedName: "workloadType",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String"
        }
      },
      protectionState: {
        serializedName: "protectionState",
        type: {
          name: "String"
        }
      },
      workloadItemType: {
        required: true,
        serializedName: "workloadItemType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureVmWorkloadItem: msRest.CompositeMapper = {
  serializedName: "AzureVmWorkloadItem",
  type: {
    name: "Composite",
    polymorphicDiscriminator: WorkloadItem.type.polymorphicDiscriminator,
    uberParent: "WorkloadItem",
    className: "AzureVmWorkloadItem",
    modelProperties: {
      ...WorkloadItem.type.modelProperties,
      parentName: {
        serializedName: "parentName",
        type: {
          name: "String"
        }
      },
      serverName: {
        serializedName: "serverName",
        type: {
          name: "String"
        }
      },
      isAutoProtectable: {
        serializedName: "isAutoProtectable",
        type: {
          name: "Boolean"
        }
      },
      subinquireditemcount: {
        serializedName: "subinquireditemcount",
        type: {
          name: "Number"
        }
      },
      subWorkloadItemCount: {
        serializedName: "subWorkloadItemCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PreBackupValidation: msRest.CompositeMapper = {
  serializedName: "PreBackupValidation",
  type: {
    name: "Composite",
    className: "PreBackupValidation",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureVmWorkloadProtectableItem: msRest.CompositeMapper = {
  serializedName: "AzureVmWorkloadProtectableItem",
  type: {
    name: "Composite",
    polymorphicDiscriminator: WorkloadProtectableItem.type.polymorphicDiscriminator,
    uberParent: "WorkloadProtectableItem",
    className: "AzureVmWorkloadProtectableItem",
    modelProperties: {
      ...WorkloadProtectableItem.type.modelProperties,
      parentName: {
        serializedName: "parentName",
        type: {
          name: "String"
        }
      },
      parentUniqueName: {
        serializedName: "parentUniqueName",
        type: {
          name: "String"
        }
      },
      serverName: {
        serializedName: "serverName",
        type: {
          name: "String"
        }
      },
      isAutoProtectable: {
        serializedName: "isAutoProtectable",
        type: {
          name: "Boolean"
        }
      },
      isAutoProtected: {
        serializedName: "isAutoProtected",
        type: {
          name: "Boolean"
        }
      },
      subinquireditemcount: {
        serializedName: "subinquireditemcount",
        type: {
          name: "Number"
        }
      },
      subprotectableitemcount: {
        serializedName: "subprotectableitemcount",
        type: {
          name: "Number"
        }
      },
      prebackupvalidation: {
        serializedName: "prebackupvalidation",
        type: {
          name: "Composite",
          className: "PreBackupValidation"
        }
      }
    }
  }
};

export const AzureVmWorkloadSAPAseDatabaseWorkloadItem: msRest.CompositeMapper = {
  serializedName: "SAPAseDatabase",
  type: {
    name: "Composite",
    polymorphicDiscriminator: WorkloadItem.type.polymorphicDiscriminator,
    uberParent: "WorkloadItem",
    className: "AzureVmWorkloadSAPAseDatabaseWorkloadItem",
    modelProperties: {
      ...AzureVmWorkloadItem.type.modelProperties
    }
  }
};

export const AzureVmWorkloadSAPAseSystemProtectableItem: msRest.CompositeMapper = {
  serializedName: "SAPAseSystem",
  type: {
    name: "Composite",
    polymorphicDiscriminator: WorkloadProtectableItem.type.polymorphicDiscriminator,
    uberParent: "WorkloadProtectableItem",
    className: "AzureVmWorkloadSAPAseSystemProtectableItem",
    modelProperties: {
      ...AzureVmWorkloadProtectableItem.type.modelProperties
    }
  }
};

export const AzureVmWorkloadSAPAseSystemWorkloadItem: msRest.CompositeMapper = {
  serializedName: "SAPAseSystem",
  type: {
    name: "Composite",
    polymorphicDiscriminator: WorkloadItem.type.polymorphicDiscriminator,
    uberParent: "WorkloadItem",
    className: "AzureVmWorkloadSAPAseSystemWorkloadItem",
    modelProperties: {
      ...AzureVmWorkloadItem.type.modelProperties
    }
  }
};

export const AzureVmWorkloadSAPHanaDatabaseProtectableItem: msRest.CompositeMapper = {
  serializedName: "SAPHanaDatabase",
  type: {
    name: "Composite",
    polymorphicDiscriminator: WorkloadProtectableItem.type.polymorphicDiscriminator,
    uberParent: "WorkloadProtectableItem",
    className: "AzureVmWorkloadSAPHanaDatabaseProtectableItem",
    modelProperties: {
      ...AzureVmWorkloadProtectableItem.type.modelProperties
    }
  }
};

export const AzureVmWorkloadSAPHanaDatabaseWorkloadItem: msRest.CompositeMapper = {
  serializedName: "SAPHanaDatabase",
  type: {
    name: "Composite",
    polymorphicDiscriminator: WorkloadItem.type.polymorphicDiscriminator,
    uberParent: "WorkloadItem",
    className: "AzureVmWorkloadSAPHanaDatabaseWorkloadItem",
    modelProperties: {
      ...AzureVmWorkloadItem.type.modelProperties
    }
  }
};

export const AzureVmWorkloadSAPHanaSystemProtectableItem: msRest.CompositeMapper = {
  serializedName: "SAPHanaSystem",
  type: {
    name: "Composite",
    polymorphicDiscriminator: WorkloadProtectableItem.type.polymorphicDiscriminator,
    uberParent: "WorkloadProtectableItem",
    className: "AzureVmWorkloadSAPHanaSystemProtectableItem",
    modelProperties: {
      ...AzureVmWorkloadProtectableItem.type.modelProperties
    }
  }
};

export const AzureVmWorkloadSAPHanaSystemWorkloadItem: msRest.CompositeMapper = {
  serializedName: "SAPHanaSystem",
  type: {
    name: "Composite",
    polymorphicDiscriminator: WorkloadItem.type.polymorphicDiscriminator,
    uberParent: "WorkloadItem",
    className: "AzureVmWorkloadSAPHanaSystemWorkloadItem",
    modelProperties: {
      ...AzureVmWorkloadItem.type.modelProperties
    }
  }
};

export const AzureVmWorkloadSQLAvailabilityGroupProtectableItem: msRest.CompositeMapper = {
  serializedName: "SQLAvailabilityGroupContainer",
  type: {
    name: "Composite",
    polymorphicDiscriminator: WorkloadProtectableItem.type.polymorphicDiscriminator,
    uberParent: "WorkloadProtectableItem",
    className: "AzureVmWorkloadSQLAvailabilityGroupProtectableItem",
    modelProperties: {
      ...AzureVmWorkloadProtectableItem.type.modelProperties
    }
  }
};

export const AzureVmWorkloadSQLDatabaseProtectableItem: msRest.CompositeMapper = {
  serializedName: "SQLDataBase",
  type: {
    name: "Composite",
    polymorphicDiscriminator: WorkloadProtectableItem.type.polymorphicDiscriminator,
    uberParent: "WorkloadProtectableItem",
    className: "AzureVmWorkloadSQLDatabaseProtectableItem",
    modelProperties: {
      ...AzureVmWorkloadProtectableItem.type.modelProperties
    }
  }
};

export const AzureVmWorkloadSQLDatabaseWorkloadItem: msRest.CompositeMapper = {
  serializedName: "SQLDataBase",
  type: {
    name: "Composite",
    polymorphicDiscriminator: WorkloadItem.type.polymorphicDiscriminator,
    uberParent: "WorkloadItem",
    className: "AzureVmWorkloadSQLDatabaseWorkloadItem",
    modelProperties: {
      ...AzureVmWorkloadItem.type.modelProperties
    }
  }
};

export const AzureVmWorkloadSQLInstanceProtectableItem: msRest.CompositeMapper = {
  serializedName: "SQLInstance",
  type: {
    name: "Composite",
    polymorphicDiscriminator: WorkloadProtectableItem.type.polymorphicDiscriminator,
    uberParent: "WorkloadProtectableItem",
    className: "AzureVmWorkloadSQLInstanceProtectableItem",
    modelProperties: {
      ...AzureVmWorkloadProtectableItem.type.modelProperties
    }
  }
};

export const AzureVmWorkloadSQLInstanceWorkloadItem: msRest.CompositeMapper = {
  serializedName: "SQLInstance",
  type: {
    name: "Composite",
    polymorphicDiscriminator: WorkloadItem.type.polymorphicDiscriminator,
    uberParent: "WorkloadItem",
    className: "AzureVmWorkloadSQLInstanceWorkloadItem",
    modelProperties: {
      ...AzureVmWorkloadItem.type.modelProperties,
      dataDirectoryPaths: {
        serializedName: "dataDirectoryPaths",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SQLDataDirectory"
            }
          }
        }
      }
    }
  }
};

export const AzureWorkloadBackupRequest: msRest.CompositeMapper = {
  serializedName: "AzureWorkloadBackupRequest",
  type: {
    name: "Composite",
    polymorphicDiscriminator: BackupRequest.type.polymorphicDiscriminator,
    uberParent: "BackupRequest",
    className: "AzureWorkloadBackupRequest",
    modelProperties: {
      ...BackupRequest.type.modelProperties,
      backupType: {
        serializedName: "backupType",
        type: {
          name: "String"
        }
      },
      enableCompression: {
        serializedName: "enableCompression",
        type: {
          name: "Boolean"
        }
      },
      recoveryPointExpiryTimeInUTC: {
        serializedName: "recoveryPointExpiryTimeInUTC",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const InquiryValidation: msRest.CompositeMapper = {
  serializedName: "InquiryValidation",
  type: {
    name: "Composite",
    className: "InquiryValidation",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      errorDetail: {
        serializedName: "errorDetail",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      },
      additionalDetail: {
        readOnly: true,
        serializedName: "additionalDetail",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkloadInquiryDetails: msRest.CompositeMapper = {
  serializedName: "WorkloadInquiryDetails",
  type: {
    name: "Composite",
    className: "WorkloadInquiryDetails",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      itemCount: {
        serializedName: "itemCount",
        type: {
          name: "Number"
        }
      },
      inquiryValidation: {
        serializedName: "inquiryValidation",
        type: {
          name: "Composite",
          className: "InquiryValidation"
        }
      }
    }
  }
};

export const InquiryInfo: msRest.CompositeMapper = {
  serializedName: "InquiryInfo",
  type: {
    name: "Composite",
    className: "InquiryInfo",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      errorDetail: {
        serializedName: "errorDetail",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      },
      inquiryDetails: {
        serializedName: "inquiryDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WorkloadInquiryDetails"
            }
          }
        }
      }
    }
  }
};

export const DistributedNodesInfo: msRest.CompositeMapper = {
  serializedName: "DistributedNodesInfo",
  type: {
    name: "Composite",
    className: "DistributedNodesInfo",
    modelProperties: {
      nodeName: {
        serializedName: "nodeName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      errorDetail: {
        serializedName: "errorDetail",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      }
    }
  }
};

export const AzureWorkloadContainerExtendedInfo: msRest.CompositeMapper = {
  serializedName: "AzureWorkloadContainerExtendedInfo",
  type: {
    name: "Composite",
    className: "AzureWorkloadContainerExtendedInfo",
    modelProperties: {
      hostServerName: {
        serializedName: "hostServerName",
        type: {
          name: "String"
        }
      },
      inquiryInfo: {
        serializedName: "inquiryInfo",
        type: {
          name: "Composite",
          className: "InquiryInfo"
        }
      },
      nodesList: {
        serializedName: "nodesList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DistributedNodesInfo"
            }
          }
        }
      }
    }
  }
};

export const BackupEngineExtendedInfo: msRest.CompositeMapper = {
  serializedName: "BackupEngineExtendedInfo",
  type: {
    name: "Composite",
    className: "BackupEngineExtendedInfo",
    modelProperties: {
      databaseName: {
        serializedName: "databaseName",
        type: {
          name: "String"
        }
      },
      protectedItemsCount: {
        serializedName: "protectedItemsCount",
        type: {
          name: "Number"
        }
      },
      protectedServersCount: {
        serializedName: "protectedServersCount",
        type: {
          name: "Number"
        }
      },
      diskCount: {
        serializedName: "diskCount",
        type: {
          name: "Number"
        }
      },
      usedDiskSpace: {
        serializedName: "usedDiskSpace",
        type: {
          name: "Number"
        }
      },
      availableDiskSpace: {
        serializedName: "availableDiskSpace",
        type: {
          name: "Number"
        }
      },
      refreshedAt: {
        serializedName: "refreshedAt",
        type: {
          name: "DateTime"
        }
      },
      azureProtectedInstances: {
        serializedName: "azureProtectedInstances",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const BackupEngineBaseResource: msRest.CompositeMapper = {
  serializedName: "BackupEngineBaseResource",
  type: {
    name: "Composite",
    className: "BackupEngineBaseResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "BackupEngineBase"
        }
      }
    }
  }
};

export const BackupRequestResource: msRest.CompositeMapper = {
  serializedName: "BackupRequestResource",
  type: {
    name: "Composite",
    className: "BackupRequestResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "BackupRequest"
        }
      }
    }
  }
};

export const BackupResourceConfig: msRest.CompositeMapper = {
  serializedName: "BackupResourceConfig",
  type: {
    name: "Composite",
    className: "BackupResourceConfig",
    modelProperties: {
      storageModelType: {
        serializedName: "storageModelType",
        type: {
          name: "String"
        }
      },
      storageType: {
        serializedName: "storageType",
        type: {
          name: "String"
        }
      },
      storageTypeState: {
        serializedName: "storageTypeState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BackupResourceConfigResource: msRest.CompositeMapper = {
  serializedName: "BackupResourceConfigResource",
  type: {
    name: "Composite",
    className: "BackupResourceConfigResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "BackupResourceConfig"
        }
      }
    }
  }
};

export const BMSBackupEngineQueryObject: msRest.CompositeMapper = {
  serializedName: "BMSBackupEngineQueryObject",
  type: {
    name: "Composite",
    className: "BMSBackupEngineQueryObject",
    modelProperties: {
      expand: {
        serializedName: "expand",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BMSBackupEnginesQueryObject: msRest.CompositeMapper = {
  serializedName: "BMSBackupEnginesQueryObject",
  type: {
    name: "Composite",
    className: "BMSBackupEnginesQueryObject",
    modelProperties: {
      backupManagementType: {
        serializedName: "backupManagementType",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String"
        }
      },
      expand: {
        serializedName: "expand",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BMSContainerQueryObject: msRest.CompositeMapper = {
  serializedName: "BMSContainerQueryObject",
  type: {
    name: "Composite",
    className: "BMSContainerQueryObject",
    modelProperties: {
      backupManagementType: {
        required: true,
        serializedName: "backupManagementType",
        type: {
          name: "String"
        }
      },
      containerType: {
        serializedName: "containerType",
        type: {
          name: "String"
        }
      },
      backupEngineName: {
        serializedName: "backupEngineName",
        type: {
          name: "String"
        }
      },
      fabricName: {
        serializedName: "fabricName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BMSContainersInquiryQueryObject: msRest.CompositeMapper = {
  serializedName: "BMSContainersInquiryQueryObject",
  type: {
    name: "Composite",
    className: "BMSContainersInquiryQueryObject",
    modelProperties: {
      backupManagementType: {
        serializedName: "backupManagementType",
        type: {
          name: "String"
        }
      },
      workloadType: {
        serializedName: "workloadType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BMSPOQueryObject: msRest.CompositeMapper = {
  serializedName: "BMSPOQueryObject",
  type: {
    name: "Composite",
    className: "BMSPOQueryObject",
    modelProperties: {
      backupManagementType: {
        serializedName: "backupManagementType",
        type: {
          name: "String"
        }
      },
      workloadType: {
        serializedName: "workloadType",
        type: {
          name: "String"
        }
      },
      containerName: {
        serializedName: "containerName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BMSRefreshContainersQueryObject: msRest.CompositeMapper = {
  serializedName: "BMSRefreshContainersQueryObject",
  type: {
    name: "Composite",
    className: "BMSRefreshContainersQueryObject",
    modelProperties: {
      backupManagementType: {
        serializedName: "backupManagementType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BMSWorkloadItemQueryObject: msRest.CompositeMapper = {
  serializedName: "BMSWorkloadItemQueryObject",
  type: {
    name: "Composite",
    className: "BMSWorkloadItemQueryObject",
    modelProperties: {
      backupManagementType: {
        serializedName: "backupManagementType",
        type: {
          name: "String"
        }
      },
      workloadItemType: {
        serializedName: "workloadItemType",
        type: {
          name: "String"
        }
      },
      workloadType: {
        serializedName: "workloadType",
        type: {
          name: "String"
        }
      },
      protectionStatus: {
        serializedName: "protectionStatus",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClientScriptForConnect: msRest.CompositeMapper = {
  serializedName: "ClientScriptForConnect",
  type: {
    name: "Composite",
    className: "ClientScriptForConnect",
    modelProperties: {
      scriptContent: {
        serializedName: "scriptContent",
        type: {
          name: "String"
        }
      },
      scriptExtension: {
        serializedName: "scriptExtension",
        type: {
          name: "String"
        }
      },
      osType: {
        serializedName: "osType",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      scriptNameSuffix: {
        serializedName: "scriptNameSuffix",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ContainerIdentityInfo: msRest.CompositeMapper = {
  serializedName: "ContainerIdentityInfo",
  type: {
    name: "Composite",
    className: "ContainerIdentityInfo",
    modelProperties: {
      uniqueName: {
        serializedName: "uniqueName",
        type: {
          name: "String"
        }
      },
      aadTenantId: {
        serializedName: "aadTenantId",
        type: {
          name: "String"
        }
      },
      servicePrincipalClientId: {
        serializedName: "servicePrincipalClientId",
        type: {
          name: "String"
        }
      },
      audience: {
        serializedName: "audience",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DpmBackupEngine: msRest.CompositeMapper = {
  serializedName: "DpmBackupEngine",
  type: {
    name: "Composite",
    polymorphicDiscriminator: BackupEngineBase.type.polymorphicDiscriminator,
    uberParent: "BackupEngineBase",
    className: "DpmBackupEngine",
    modelProperties: {
      ...BackupEngineBase.type.modelProperties
    }
  }
};

export const DPMContainerExtendedInfo: msRest.CompositeMapper = {
  serializedName: "DPMContainerExtendedInfo",
  type: {
    name: "Composite",
    className: "DPMContainerExtendedInfo",
    modelProperties: {
      lastRefreshedAt: {
        serializedName: "lastRefreshedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const GenericContainerExtendedInfo: msRest.CompositeMapper = {
  serializedName: "GenericContainerExtendedInfo",
  type: {
    name: "Composite",
    className: "GenericContainerExtendedInfo",
    modelProperties: {
      rawCertData: {
        serializedName: "rawCertData",
        type: {
          name: "String"
        }
      },
      containerIdentityInfo: {
        serializedName: "containerIdentityInfo",
        type: {
          name: "Composite",
          className: "ContainerIdentityInfo"
        }
      },
      serviceEndpoints: {
        serializedName: "serviceEndpoints",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const GenericContainer: msRest.CompositeMapper = {
  serializedName: "GenericContainer",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectionContainer.type.polymorphicDiscriminator,
    uberParent: "ProtectionContainer",
    className: "GenericContainer",
    modelProperties: {
      ...ProtectionContainer.type.modelProperties,
      fabricName: {
        serializedName: "fabricName",
        type: {
          name: "String"
        }
      },
      extendedInformation: {
        serializedName: "extendedInformation",
        type: {
          name: "Composite",
          className: "GenericContainerExtendedInfo"
        }
      }
    }
  }
};

export const IaasVMBackupRequest: msRest.CompositeMapper = {
  serializedName: "IaasVMBackupRequest",
  type: {
    name: "Composite",
    polymorphicDiscriminator: BackupRequest.type.polymorphicDiscriminator,
    uberParent: "BackupRequest",
    className: "IaasVMBackupRequest",
    modelProperties: {
      ...BackupRequest.type.modelProperties,
      recoveryPointExpiryTimeInUTC: {
        serializedName: "recoveryPointExpiryTimeInUTC",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const IaasVMILRRegistrationRequest: msRest.CompositeMapper = {
  serializedName: "IaasVMILRRegistrationRequest",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ILRRequest.type.polymorphicDiscriminator,
    uberParent: "ILRRequest",
    className: "IaasVMILRRegistrationRequest",
    modelProperties: {
      ...ILRRequest.type.modelProperties,
      recoveryPointId: {
        serializedName: "recoveryPointId",
        type: {
          name: "String"
        }
      },
      virtualMachineId: {
        serializedName: "virtualMachineId",
        type: {
          name: "String"
        }
      },
      initiatorName: {
        serializedName: "initiatorName",
        type: {
          name: "String"
        }
      },
      renewExistingRegistration: {
        serializedName: "renewExistingRegistration",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ILRRequestResource: msRest.CompositeMapper = {
  serializedName: "ILRRequestResource",
  type: {
    name: "Composite",
    className: "ILRRequestResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ILRRequest"
        }
      }
    }
  }
};

export const InstantItemRecoveryTarget: msRest.CompositeMapper = {
  serializedName: "InstantItemRecoveryTarget",
  type: {
    name: "Composite",
    className: "InstantItemRecoveryTarget",
    modelProperties: {
      clientScripts: {
        serializedName: "clientScripts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ClientScriptForConnect"
            }
          }
        }
      }
    }
  }
};

export const MabContainerExtendedInfo: msRest.CompositeMapper = {
  serializedName: "MabContainerExtendedInfo",
  type: {
    name: "Composite",
    className: "MabContainerExtendedInfo",
    modelProperties: {
      lastRefreshedAt: {
        serializedName: "lastRefreshedAt",
        type: {
          name: "DateTime"
        }
      },
      backupItemType: {
        serializedName: "backupItemType",
        type: {
          name: "String"
        }
      },
      backupItems: {
        serializedName: "backupItems",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      policyName: {
        serializedName: "policyName",
        type: {
          name: "String"
        }
      },
      lastBackupStatus: {
        serializedName: "lastBackupStatus",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MABContainerHealthDetails: msRest.CompositeMapper = {
  serializedName: "MABContainerHealthDetails",
  type: {
    name: "Composite",
    className: "MABContainerHealthDetails",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      title: {
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      recommendations: {
        serializedName: "recommendations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const MabContainer: msRest.CompositeMapper = {
  serializedName: "Windows",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ProtectionContainer.type.polymorphicDiscriminator,
    uberParent: "ProtectionContainer",
    className: "MabContainer",
    modelProperties: {
      ...ProtectionContainer.type.modelProperties,
      canReRegister: {
        serializedName: "canReRegister",
        type: {
          name: "Boolean"
        }
      },
      containerId: {
        serializedName: "containerId",
        type: {
          name: "Number"
        }
      },
      protectedItemCount: {
        serializedName: "protectedItemCount",
        type: {
          name: "Number"
        }
      },
      agentVersion: {
        serializedName: "agentVersion",
        type: {
          name: "String"
        }
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Composite",
          className: "MabContainerExtendedInfo"
        }
      },
      mabContainerHealthDetails: {
        serializedName: "mabContainerHealthDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MABContainerHealthDetails"
            }
          }
        }
      },
      containerHealthState: {
        serializedName: "containerHealthState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationStatusJobExtendedInfo: msRest.CompositeMapper = {
  serializedName: "OperationStatusJobExtendedInfo",
  type: {
    name: "Composite",
    polymorphicDiscriminator: OperationStatusExtendedInfo.type.polymorphicDiscriminator,
    uberParent: "OperationStatusExtendedInfo",
    className: "OperationStatusJobExtendedInfo",
    modelProperties: {
      ...OperationStatusExtendedInfo.type.modelProperties,
      jobId: {
        serializedName: "jobId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationStatusJobsExtendedInfo: msRest.CompositeMapper = {
  serializedName: "OperationStatusJobsExtendedInfo",
  type: {
    name: "Composite",
    polymorphicDiscriminator: OperationStatusExtendedInfo.type.polymorphicDiscriminator,
    uberParent: "OperationStatusExtendedInfo",
    className: "OperationStatusJobsExtendedInfo",
    modelProperties: {
      ...OperationStatusExtendedInfo.type.modelProperties,
      jobIds: {
        serializedName: "jobIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      failedJobsError: {
        serializedName: "failedJobsError",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const OperationStatusProvisionILRExtendedInfo: msRest.CompositeMapper = {
  serializedName: "OperationStatusProvisionILRExtendedInfo",
  type: {
    name: "Composite",
    polymorphicDiscriminator: OperationStatusExtendedInfo.type.polymorphicDiscriminator,
    uberParent: "OperationStatusExtendedInfo",
    className: "OperationStatusProvisionILRExtendedInfo",
    modelProperties: {
      ...OperationStatusExtendedInfo.type.modelProperties,
      recoveryTarget: {
        serializedName: "recoveryTarget",
        type: {
          name: "Composite",
          className: "InstantItemRecoveryTarget"
        }
      }
    }
  }
};

export const ProtectableContainerResource: msRest.CompositeMapper = {
  serializedName: "ProtectableContainerResource",
  type: {
    name: "Composite",
    className: "ProtectableContainerResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ProtectableContainer"
        }
      }
    }
  }
};

export const ProtectionContainerResource: msRest.CompositeMapper = {
  serializedName: "ProtectionContainerResource",
  type: {
    name: "Composite",
    className: "ProtectionContainerResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ProtectionContainer"
        }
      }
    }
  }
};

export const TokenInformation: msRest.CompositeMapper = {
  serializedName: "TokenInformation",
  type: {
    name: "Composite",
    className: "TokenInformation",
    modelProperties: {
      token: {
        serializedName: "token",
        type: {
          name: "String"
        }
      },
      expiryTimeInUtcTicks: {
        serializedName: "expiryTimeInUtcTicks",
        type: {
          name: "Number"
        }
      },
      securityPIN: {
        serializedName: "securityPIN",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkloadItemResource: msRest.CompositeMapper = {
  serializedName: "WorkloadItemResource",
  type: {
    name: "Composite",
    className: "WorkloadItemResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "WorkloadItem"
        }
      }
    }
  }
};

export const WorkloadProtectableItemResource: msRest.CompositeMapper = {
  serializedName: "WorkloadProtectableItemResource",
  type: {
    name: "Composite",
    className: "WorkloadProtectableItemResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "WorkloadProtectableItem"
        }
      }
    }
  }
};

export const ClientDiscoveryDisplay: msRest.CompositeMapper = {
  serializedName: "ClientDiscoveryDisplay",
  type: {
    name: "Composite",
    className: "ClientDiscoveryDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClientDiscoveryForLogSpecification: msRest.CompositeMapper = {
  serializedName: "ClientDiscoveryForLogSpecification",
  type: {
    name: "Composite",
    className: "ClientDiscoveryForLogSpecification",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      blobDuration: {
        serializedName: "blobDuration",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClientDiscoveryForServiceSpecification: msRest.CompositeMapper = {
  serializedName: "ClientDiscoveryForServiceSpecification",
  type: {
    name: "Composite",
    className: "ClientDiscoveryForServiceSpecification",
    modelProperties: {
      logSpecifications: {
        serializedName: "logSpecifications",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ClientDiscoveryForLogSpecification"
            }
          }
        }
      }
    }
  }
};

export const ClientDiscoveryForProperties: msRest.CompositeMapper = {
  serializedName: "ClientDiscoveryForProperties",
  type: {
    name: "Composite",
    className: "ClientDiscoveryForProperties",
    modelProperties: {
      serviceSpecification: {
        serializedName: "serviceSpecification",
        type: {
          name: "Composite",
          className: "ClientDiscoveryForServiceSpecification"
        }
      }
    }
  }
};

export const ClientDiscoveryValueForSingleApi: msRest.CompositeMapper = {
  serializedName: "ClientDiscoveryValueForSingleApi",
  type: {
    name: "Composite",
    className: "ClientDiscoveryValueForSingleApi",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "ClientDiscoveryDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ClientDiscoveryForProperties"
        }
      }
    }
  }
};

export const RecoveryPointResourceList: msRest.CompositeMapper = {
  serializedName: "RecoveryPointResourceList",
  type: {
    name: "Composite",
    className: "RecoveryPointResourceList",
    modelProperties: {
      ...ResourceList.type.modelProperties,
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RecoveryPointResource"
            }
          }
        }
      }
    }
  }
};

export const ProtectionPolicyResourceList: msRest.CompositeMapper = {
  serializedName: "ProtectionPolicyResourceList",
  type: {
    name: "Composite",
    className: "ProtectionPolicyResourceList",
    modelProperties: {
      ...ResourceList.type.modelProperties,
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ProtectionPolicyResource"
            }
          }
        }
      }
    }
  }
};

export const JobResourceList: msRest.CompositeMapper = {
  serializedName: "JobResourceList",
  type: {
    name: "Composite",
    className: "JobResourceList",
    modelProperties: {
      ...ResourceList.type.modelProperties,
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JobResource"
            }
          }
        }
      }
    }
  }
};

export const ProtectedItemResourceList: msRest.CompositeMapper = {
  serializedName: "ProtectedItemResourceList",
  type: {
    name: "Composite",
    className: "ProtectedItemResourceList",
    modelProperties: {
      ...ResourceList.type.modelProperties,
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ProtectedItemResource"
            }
          }
        }
      }
    }
  }
};

export const ProtectionIntentResourceList: msRest.CompositeMapper = {
  serializedName: "ProtectionIntentResourceList",
  type: {
    name: "Composite",
    className: "ProtectionIntentResourceList",
    modelProperties: {
      ...ResourceList.type.modelProperties,
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ProtectionIntentResource"
            }
          }
        }
      }
    }
  }
};

export const BackupManagementUsageList: msRest.CompositeMapper = {
  serializedName: "BackupManagementUsageList",
  type: {
    name: "Composite",
    className: "BackupManagementUsageList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BackupManagementUsage"
            }
          }
        }
      }
    }
  }
};

export const BackupEngineBaseResourceList: msRest.CompositeMapper = {
  serializedName: "BackupEngineBaseResourceList",
  type: {
    name: "Composite",
    className: "BackupEngineBaseResourceList",
    modelProperties: {
      ...ResourceList.type.modelProperties,
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BackupEngineBaseResource"
            }
          }
        }
      }
    }
  }
};

export const ProtectableContainerResourceList: msRest.CompositeMapper = {
  serializedName: "ProtectableContainerResourceList",
  type: {
    name: "Composite",
    className: "ProtectableContainerResourceList",
    modelProperties: {
      ...ResourceList.type.modelProperties,
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ProtectableContainerResource"
            }
          }
        }
      }
    }
  }
};

export const WorkloadItemResourceList: msRest.CompositeMapper = {
  serializedName: "WorkloadItemResourceList",
  type: {
    name: "Composite",
    className: "WorkloadItemResourceList",
    modelProperties: {
      ...ResourceList.type.modelProperties,
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WorkloadItemResource"
            }
          }
        }
      }
    }
  }
};

export const WorkloadProtectableItemResourceList: msRest.CompositeMapper = {
  serializedName: "WorkloadProtectableItemResourceList",
  type: {
    name: "Composite",
    className: "WorkloadProtectableItemResourceList",
    modelProperties: {
      ...ResourceList.type.modelProperties,
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WorkloadProtectableItemResource"
            }
          }
        }
      }
    }
  }
};

export const ProtectionContainerResourceList: msRest.CompositeMapper = {
  serializedName: "ProtectionContainerResourceList",
  type: {
    name: "Composite",
    className: "ProtectionContainerResourceList",
    modelProperties: {
      ...ResourceList.type.modelProperties,
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ProtectionContainerResource"
            }
          }
        }
      }
    }
  }
};

export const ClientDiscoveryResponse: msRest.CompositeMapper = {
  serializedName: "ClientDiscoveryResponse",
  type: {
    name: "Composite",
    className: "ClientDiscoveryResponse",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ClientDiscoveryValueForSingleApi"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const discriminators = {
  'OperationStatusExtendedInfo' : OperationStatusExtendedInfo,
  'ProtectedItem.AzureFileShareProtectedItem' : AzureFileshareProtectedItem,
  'RecoveryPoint.AzureFileShareRecoveryPoint' : AzureFileShareRecoveryPoint,
  'RestoreRequest.AzureFileShareRestoreRequest' : AzureFileShareRestoreRequest,
  'SchedulePolicy' : SchedulePolicy,
  'RetentionPolicy' : RetentionPolicy,
  'ProtectionPolicy.AzureWorkload' : AzureVmWorkloadProtectionPolicy,
  'ProtectionPolicy.AzureStorage' : AzureFileShareProtectionPolicy,
  'ProtectedItem.Microsoft.ClassicCompute/virtualMachines' : AzureIaaSClassicComputeVMProtectedItem,
  'ProtectedItem.Microsoft.Compute/virtualMachines' : AzureIaaSComputeVMProtectedItem,
  'Job.AzureIaaSVMJob' : AzureIaaSVMJob,
  'ProtectedItem.AzureIaaSVMProtectedItem' : AzureIaaSVMProtectedItem,
  'ProtectionPolicy.AzureIaasVM' : AzureIaaSVMProtectionPolicy,
  'ProtectedItem.Microsoft.Sql/servers/databases' : AzureSqlProtectedItem,
  'ProtectionPolicy.AzureSql' : AzureSqlProtectionPolicy,
  'Job.AzureStorageJob' : AzureStorageJob,
  'ProtectedItem.AzureVmWorkloadProtectedItem' : AzureVmWorkloadProtectedItem,
  'ProtectedItem.AzureVmWorkloadSAPAseDatabase' : AzureVmWorkloadSAPAseDatabaseProtectedItem,
  'ProtectedItem.AzureVmWorkloadSAPHanaDatabase' : AzureVmWorkloadSAPHanaDatabaseProtectedItem,
  'ProtectedItem.AzureVmWorkloadSQLDatabase' : AzureVmWorkloadSQLDatabaseProtectedItem,
  'Job.AzureWorkloadJob' : AzureWorkloadJob,
  'RecoveryPoint.AzureWorkloadPointInTimeRecoveryPoint' : AzureWorkloadPointInTimeRecoveryPoint,
  'RestoreRequest.AzureWorkloadPointInTimeRestoreRequest' : AzureWorkloadPointInTimeRestoreRequest,
  'RecoveryPoint.AzureWorkloadRecoveryPoint' : AzureWorkloadRecoveryPoint,
  'RestoreRequest.AzureWorkloadRestoreRequest' : AzureWorkloadRestoreRequest,
  'RecoveryPoint.AzureWorkloadSAPHanaPointInTimeRecoveryPoint' : AzureWorkloadSAPHanaPointInTimeRecoveryPoint,
  'RestoreRequest.AzureWorkloadSAPHanaPointInTimeRestoreRequest' : AzureWorkloadSAPHanaPointInTimeRestoreRequest,
  'RecoveryPoint.AzureWorkloadSAPHanaRecoveryPoint' : AzureWorkloadSAPHanaRecoveryPoint,
  'RestoreRequest.AzureWorkloadSAPHanaRestoreRequest' : AzureWorkloadSAPHanaRestoreRequest,
  'RecoveryPoint.AzureWorkloadSQLPointInTimeRecoveryPoint' : AzureWorkloadSQLPointInTimeRecoveryPoint,
  'RestoreRequest.AzureWorkloadSQLPointInTimeRestoreRequest' : AzureWorkloadSQLPointInTimeRestoreRequest,
  'RecoveryPoint.AzureWorkloadSQLRecoveryPoint' : AzureWorkloadSQLRecoveryPoint,
  'RestoreRequest.AzureWorkloadSQLRestoreRequest' : AzureWorkloadSQLRestoreRequest,
  'Job.DpmJob' : DpmJob,
  'ProtectedItem.DPMProtectedItem' : DPMProtectedItem,
  'OperationResultInfoBase.ExportJobsOperationResultInfo' : ExportJobsOperationResultInfo,
  'ProtectionPolicy.GenericProtectionPolicy' : GenericProtectionPolicy,
  'ProtectedItem.GenericProtectedItem' : GenericProtectedItem,
  'RecoveryPoint.GenericRecoveryPoint' : GenericRecoveryPoint,
  'RecoveryPoint.IaasVMRecoveryPoint' : IaasVMRecoveryPoint,
  'RestoreRequest.IaasVMRestoreRequest' : IaasVMRestoreRequest,
  'Job' : Job,
  'SchedulePolicy.LogSchedulePolicy' : LogSchedulePolicy,
  'RetentionPolicy.LongTermRetentionPolicy' : LongTermRetentionPolicy,
  'SchedulePolicy.LongTermSchedulePolicy' : LongTermSchedulePolicy,
  'ProtectedItem.MabFileFolderProtectedItem' : MabFileFolderProtectedItem,
  'Job.MabJob' : MabJob,
  'ProtectionPolicy.MAB' : MabProtectionPolicy,
  'OperationResultInfoBase.OperationResultInfo' : OperationResultInfo,
  'OperationResultInfoBase' : OperationResultInfoBase,
  'ProtectedItem' : ProtectedItem,
  'ProtectionPolicy' : ProtectionPolicy,
  'RecoveryPoint' : RecoveryPoint,
  'RestoreRequest' : RestoreRequest,
  'RetentionPolicy.SimpleRetentionPolicy' : SimpleRetentionPolicy,
  'SchedulePolicy.SimpleSchedulePolicy' : SimpleSchedulePolicy,
  'ValidateOperationRequest.ValidateIaasVMRestoreOperationRequest' : ValidateIaasVMRestoreOperationRequest,
  'ValidateOperationRequest' : ValidateOperationRequest,
  'ValidateOperationRequest.ValidateRestoreOperationRequest' : ValidateRestoreOperationRequest,
  'FeatureSupportRequest.AzureBackupGoals' : AzureBackupGoalFeatureSupportRequest,
  'ProtectionIntent.RecoveryServiceVaultItem' : AzureRecoveryServiceVaultProtectionIntent,
  'ProtectionIntent.AzureResourceItem' : AzureResourceProtectionIntent,
  'FeatureSupportRequest.AzureVMResourceBackup' : AzureVMResourceFeatureSupportRequest,
  'ProtectionIntent.AzureWorkloadAutoProtectionIntent' : AzureWorkloadAutoProtectionIntent,
  'ProtectionIntent.AzureWorkloadSQLAutoProtectionIntent' : AzureWorkloadSQLAutoProtectionIntent,
  'FeatureSupportRequest' : FeatureSupportRequest,
  'ProtectionIntent' : ProtectionIntent,
  'ProtectionContainer.AzureBackupServerContainer' : AzureBackupServerContainer,
  'BackupEngineBase.AzureBackupServerEngine' : AzureBackupServerEngine,
  'BackupRequest.AzureFileShareBackupRequest' : AzureFileShareBackupRequest,
  'WorkloadProtectableItem.AzureFileShare' : AzureFileShareProtectableItem,
  'ILRRequest.AzureFileShareProvisionILRRequest' : AzureFileShareProvisionILRRequest,
  'ProtectionContainer.Microsoft.ClassicCompute/virtualMachines' : AzureIaaSClassicComputeVMContainer,
  'WorkloadProtectableItem.Microsoft.ClassicCompute/virtualMachines' : AzureIaaSClassicComputeVMProtectableItem,
  'ProtectionContainer.Microsoft.Compute/virtualMachines' : AzureIaaSComputeVMContainer,
  'WorkloadProtectableItem.Microsoft.Compute/virtualMachines' : AzureIaaSComputeVMProtectableItem,
  'ProtectionContainer.SQLAGWorkLoadContainer' : AzureSQLAGWorkloadContainerProtectionContainer,
  'ProtectionContainer.AzureSqlContainer' : AzureSqlContainer,
  'ProtectionContainer.StorageContainer' : AzureStorageContainer,
  'ProtectableContainer.StorageContainer' : AzureStorageProtectableContainer,
  'ProtectableContainer.VMAppContainer' : AzureVMAppContainerProtectableContainer,
  'ProtectionContainer.VMAppContainer' : AzureVMAppContainerProtectionContainer,
  'WorkloadItem.AzureVmWorkloadItem' : AzureVmWorkloadItem,
  'WorkloadProtectableItem.AzureVmWorkloadProtectableItem' : AzureVmWorkloadProtectableItem,
  'WorkloadItem.SAPAseDatabase' : AzureVmWorkloadSAPAseDatabaseWorkloadItem,
  'WorkloadProtectableItem.SAPAseSystem' : AzureVmWorkloadSAPAseSystemProtectableItem,
  'WorkloadItem.SAPAseSystem' : AzureVmWorkloadSAPAseSystemWorkloadItem,
  'WorkloadProtectableItem.SAPHanaDatabase' : AzureVmWorkloadSAPHanaDatabaseProtectableItem,
  'WorkloadItem.SAPHanaDatabase' : AzureVmWorkloadSAPHanaDatabaseWorkloadItem,
  'WorkloadProtectableItem.SAPHanaSystem' : AzureVmWorkloadSAPHanaSystemProtectableItem,
  'WorkloadItem.SAPHanaSystem' : AzureVmWorkloadSAPHanaSystemWorkloadItem,
  'WorkloadProtectableItem.SQLAvailabilityGroupContainer' : AzureVmWorkloadSQLAvailabilityGroupProtectableItem,
  'WorkloadProtectableItem.SQLDataBase' : AzureVmWorkloadSQLDatabaseProtectableItem,
  'WorkloadItem.SQLDataBase' : AzureVmWorkloadSQLDatabaseWorkloadItem,
  'WorkloadProtectableItem.SQLInstance' : AzureVmWorkloadSQLInstanceProtectableItem,
  'WorkloadItem.SQLInstance' : AzureVmWorkloadSQLInstanceWorkloadItem,
  'BackupRequest.AzureWorkloadBackupRequest' : AzureWorkloadBackupRequest,
  'ProtectionContainer.AzureWorkloadContainer' : AzureWorkloadContainer,
  'BackupEngineBase' : BackupEngineBase,
  'BackupRequest' : BackupRequest,
  'BackupEngineBase.DpmBackupEngine' : DpmBackupEngine,
  'ProtectionContainer.DPMContainer' : DpmContainer,
  'ProtectionContainer.GenericContainer' : GenericContainer,
  'BackupRequest.IaasVMBackupRequest' : IaasVMBackupRequest,
  'ProtectionContainer.IaaSVMContainer' : IaaSVMContainer,
  'ILRRequest.IaasVMILRRegistrationRequest' : IaasVMILRRegistrationRequest,
  'WorkloadProtectableItem.IaaSVMProtectableItem' : IaaSVMProtectableItem,
  'ILRRequest' : ILRRequest,
  'ProtectionContainer.Windows' : MabContainer,
  'OperationStatusExtendedInfo.OperationStatusJobExtendedInfo' : OperationStatusJobExtendedInfo,
  'OperationStatusExtendedInfo.OperationStatusJobsExtendedInfo' : OperationStatusJobsExtendedInfo,
  'OperationStatusExtendedInfo.OperationStatusProvisionILRExtendedInfo' : OperationStatusProvisionILRExtendedInfo,
  'ProtectableContainer' : ProtectableContainer,
  'ProtectionContainer' : ProtectionContainer,
  'WorkloadItem' : WorkloadItem,
  'WorkloadProtectableItem' : WorkloadProtectableItem

};
