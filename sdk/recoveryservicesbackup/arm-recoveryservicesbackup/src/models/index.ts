/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Error information associated with operation status call.
 */
export interface OperationStatusError {
  /**
   * Error code of the operation failure.
   */
  code?: string;
  /**
   * Error message displayed if the operation failure.
   */
  message?: string;
}

/**
 * Contains the possible cases for OperationStatusExtendedInfo.
 */
export type OperationStatusExtendedInfoUnion = OperationStatusExtendedInfo | OperationStatusJobExtendedInfo | OperationStatusJobsExtendedInfo | OperationStatusProvisionILRExtendedInfo;

/**
 * Base class for additional information of operation status.
 */
export interface OperationStatusExtendedInfo {
  /**
   * Polymorphic Discriminator
   */
  objectType: "OperationStatusExtendedInfo";
}

/**
 * Operation status.
 */
export interface OperationStatus {
  /**
   * ID of the operation.
   */
  id?: string;
  /**
   * Name of the operation.
   */
  name?: string;
  /**
   * Operation status. Possible values include: 'Invalid', 'InProgress', 'Succeeded', 'Failed',
   * 'Canceled'
   */
  status?: OperationStatusValues;
  /**
   * Operation start time. Format: ISO-8601.
   */
  startTime?: Date;
  /**
   * Operation end time. Format: ISO-8601.
   */
  endTime?: Date;
  /**
   * Error information related to this operation.
   */
  error?: OperationStatusError;
  /**
   * Additional information associated with this operation.
   */
  properties?: OperationStatusExtendedInfoUnion;
}

/**
 * The Private Endpoint network resource that is linked to the Private Endpoint connection
 */
export interface PrivateEndpoint {
  /**
   * Gets or sets id
   */
  id?: string;
}

/**
 * Private Link Service Connection State
 */
export interface PrivateLinkServiceConnectionState {
  /**
   * Gets or sets the status. Possible values include: 'Pending', 'Approved', 'Rejected',
   * 'Disconnected'
   */
  status?: PrivateEndpointConnectionStatus;
  /**
   * Gets or sets description
   */
  description?: string;
  /**
   * Gets or sets actions required
   */
  actionRequired?: string;
}

/**
 * Private Endpoint Connection Response Properties
 */
export interface PrivateEndpointConnection {
  /**
   * Gets or sets provisioning state of the private endpoint connection. Possible values include:
   * 'Succeeded', 'Deleting', 'Failed', 'Pending'
   */
  provisioningState?: ProvisioningState;
  /**
   * Gets or sets private endpoint associated with the private endpoint connection
   */
  privateEndpoint?: PrivateEndpoint;
  /**
   * Gets or sets private link service connection state
   */
  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;
}

/**
 * ARM Resource.
 */
export interface Resource extends BaseResource {
  /**
   * Resource Id represents the complete path to the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name associated with the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource location.
   */
  location?: string;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * Optional ETag.
   */
  eTag?: string;
}

/**
 * Private Endpoint Connection Response Properties
 */
export interface PrivateEndpointConnectionResource extends Resource {
  /**
   * PrivateEndpointConnectionResource properties
   */
  properties?: PrivateEndpointConnection;
}

/**
 * The resource management error additional info.
 */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly info?: any;
}

/**
 * The resource management error response.
 */
export interface ErrorResponse {
  /**
   * The error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The error target.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly target?: string;
  /**
   * The error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: ErrorResponse[];
  /**
   * The error additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/**
 * Additional information about Azure File Share backup item.
 */
export interface AzureFileshareProtectedItemExtendedInfo {
  /**
   * The oldest backup copy available for this item in the service.
   */
  oldestRecoveryPoint?: Date;
  /**
   * Number of available backup copies associated with this backup item.
   */
  recoveryPointCount?: number;
  /**
   * Indicates consistency of policy object and policy applied to this backup item.
   */
  policyState?: string;
  /**
   * Indicates the state of this resource. Possible values are from enum ResourceState {Invalid,
   * Active, SoftDeleted, Deleted}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceState?: string;
  /**
   * The resource state sync time for this backup item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceStateSyncTime?: Date;
}

/**
 * Contains the possible cases for ProtectedItem.
 */
export type ProtectedItemUnion = ProtectedItem | AzureFileshareProtectedItem | AzureIaaSVMProtectedItemUnion | AzureSqlProtectedItem | AzureVmWorkloadProtectedItemUnion | DPMProtectedItem | GenericProtectedItem | MabFileFolderProtectedItem;

/**
 * Base class for backup items.
 */
export interface ProtectedItem {
  /**
   * Polymorphic Discriminator
   */
  protectedItemType: "ProtectedItem";
  /**
   * Type of backup management for the backed up item. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Type of workload this item represents. Possible values include: 'Invalid', 'VM', 'FileFolder',
   * 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
   * 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase', 'SAPAseDatabase'
   */
  workloadType?: DataSourceType;
  /**
   * Unique name of container
   */
  containerName?: string;
  /**
   * ARM ID of the resource to be backed up.
   */
  sourceResourceId?: string;
  /**
   * ID of the backup policy with which this item is backed up.
   */
  policyId?: string;
  /**
   * Timestamp when the last (latest) backup copy was created for this backup item.
   */
  lastRecoveryPoint?: Date;
  /**
   * Name of the backup set the backup item belongs to
   */
  backupSetName?: string;
  /**
   * Create mode to indicate recovery of existing soft deleted data source or creation of new data
   * source. Possible values include: 'Invalid', 'Default', 'Recover'
   */
  createMode?: CreateMode;
  /**
   * Time for deferred deletion in UTC
   */
  deferredDeleteTimeInUTC?: Date;
  /**
   * Flag to identify whether the DS is scheduled for deferred delete
   */
  isScheduledForDeferredDelete?: boolean;
  /**
   * Time remaining before the DS marked for deferred delete is permanently deleted
   */
  deferredDeleteTimeRemaining?: string;
  /**
   * Flag to identify whether the deferred deleted DS is to be purged soon
   */
  isDeferredDeleteScheduleUpcoming?: boolean;
  /**
   * Flag to identify that deferred deleted DS is to be moved into Pause state
   */
  isRehydrate?: boolean;
}

/**
 * Azure File Share workload-specific backup item.
 */
export interface AzureFileshareProtectedItem {
  /**
   * Polymorphic Discriminator
   */
  protectedItemType: "AzureFileShareProtectedItem";
  /**
   * Type of backup management for the backed up item. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Type of workload this item represents. Possible values include: 'Invalid', 'VM', 'FileFolder',
   * 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
   * 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase', 'SAPAseDatabase'
   */
  workloadType?: DataSourceType;
  /**
   * Unique name of container
   */
  containerName?: string;
  /**
   * ARM ID of the resource to be backed up.
   */
  sourceResourceId?: string;
  /**
   * ID of the backup policy with which this item is backed up.
   */
  policyId?: string;
  /**
   * Timestamp when the last (latest) backup copy was created for this backup item.
   */
  lastRecoveryPoint?: Date;
  /**
   * Name of the backup set the backup item belongs to
   */
  backupSetName?: string;
  /**
   * Create mode to indicate recovery of existing soft deleted data source or creation of new data
   * source. Possible values include: 'Invalid', 'Default', 'Recover'
   */
  createMode?: CreateMode;
  /**
   * Time for deferred deletion in UTC
   */
  deferredDeleteTimeInUTC?: Date;
  /**
   * Flag to identify whether the DS is scheduled for deferred delete
   */
  isScheduledForDeferredDelete?: boolean;
  /**
   * Time remaining before the DS marked for deferred delete is permanently deleted
   */
  deferredDeleteTimeRemaining?: string;
  /**
   * Flag to identify whether the deferred deleted DS is to be purged soon
   */
  isDeferredDeleteScheduleUpcoming?: boolean;
  /**
   * Flag to identify that deferred deleted DS is to be moved into Pause state
   */
  isRehydrate?: boolean;
  /**
   * Friendly name of the fileshare represented by this backup item.
   */
  friendlyName?: string;
  /**
   * Backup status of this backup item.
   */
  protectionStatus?: string;
  /**
   * Backup state of this backup item. Possible values include: 'Invalid', 'IRPending',
   * 'Protected', 'ProtectionError', 'ProtectionStopped', 'ProtectionPaused'
   */
  protectionState?: ProtectionState;
  /**
   * backups running status for this backup item. Possible values include: 'Passed',
   * 'ActionRequired', 'ActionSuggested', 'Invalid'
   */
  healthStatus?: HealthStatus;
  /**
   * Last backup operation status. Possible values: Healthy, Unhealthy.
   */
  lastBackupStatus?: string;
  /**
   * Timestamp of the last backup operation on this backup item.
   */
  lastBackupTime?: Date;
  /**
   * Additional information with this backup item.
   */
  extendedInfo?: AzureFileshareProtectedItemExtendedInfo;
}

/**
 * Contains the possible cases for RecoveryPoint.
 */
export type RecoveryPointUnion = RecoveryPoint | AzureFileShareRecoveryPoint | AzureWorkloadRecoveryPointUnion | GenericRecoveryPoint | IaasVMRecoveryPoint;

/**
 * Base class for backup copies. Workload-specific backup copies are derived from this class.
 */
export interface RecoveryPoint {
  /**
   * Polymorphic Discriminator
   */
  objectType: "RecoveryPoint";
}

/**
 * Azure File Share workload specific backup copy.
 */
export interface AzureFileShareRecoveryPoint {
  /**
   * Polymorphic Discriminator
   */
  objectType: "AzureFileShareRecoveryPoint";
  /**
   * Type of the backup copy. Specifies whether it is a crash consistent backup or app consistent.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recoveryPointType?: string;
  /**
   * Time at which this backup copy was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recoveryPointTime?: Date;
  /**
   * Contains Url to the snapshot of fileshare, if applicable
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly fileShareSnapshotUri?: string;
  /**
   * Contains recovery point size
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recoveryPointSizeInGB?: number;
}

/**
 * Restore file specs like file path, type and target folder path info.
 */
export interface RestoreFileSpecs {
  /**
   * Source File/Folder path
   */
  path?: string;
  /**
   * Indicates what the Path variable stands for
   */
  fileSpecType?: string;
  /**
   * Destination folder path in target FileShare
   */
  targetFolderPath?: string;
}

/**
 * Target Azure File Share Info.
 */
export interface TargetAFSRestoreInfo {
  /**
   * File share name
   */
  name?: string;
  /**
   * Target file share resource ARM ID
   */
  targetResourceId?: string;
}

/**
 * Contains the possible cases for RestoreRequest.
 */
export type RestoreRequestUnion = RestoreRequest | AzureFileShareRestoreRequest | AzureWorkloadRestoreRequestUnion | IaasVMRestoreRequest;

/**
 * Base class for restore request. Workload-specific restore requests are derived from this class.
 */
export interface RestoreRequest {
  /**
   * Polymorphic Discriminator
   */
  objectType: "RestoreRequest";
}

/**
 * AzureFileShare Restore Request
 */
export interface AzureFileShareRestoreRequest {
  /**
   * Polymorphic Discriminator
   */
  objectType: "AzureFileShareRestoreRequest";
  /**
   * Type of this recovery. Possible values include: 'Invalid', 'OriginalLocation',
   * 'AlternateLocation', 'RestoreDisks', 'Offline'
   */
  recoveryType?: RecoveryType;
  /**
   * Source storage account ARM Id
   */
  sourceResourceId?: string;
  /**
   * Options to resolve copy conflicts. Possible values include: 'Invalid', 'CreateCopy', 'Skip',
   * 'Overwrite', 'FailOnConflict'
   */
  copyOptions?: CopyOptions;
  /**
   * Restore Type (FullShareRestore or ItemLevelRestore). Possible values include: 'Invalid',
   * 'FullShareRestore', 'ItemLevelRestore'
   */
  restoreRequestType?: RestoreRequestType;
  /**
   * List of Source Files/Folders(which need to recover) and TargetFolderPath details
   */
  restoreFileSpecs?: RestoreFileSpecs[];
  /**
   * Target File Share Details
   */
  targetDetails?: TargetAFSRestoreInfo;
}

/**
 * Common settings field for backup management
 */
export interface Settings {
  /**
   * TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
   */
  timeZone?: string;
  /**
   * SQL compression flag
   */
  issqlcompression?: boolean;
  /**
   * Workload compression flag. This has been added so that 'isSqlCompression'
   * will be deprecated once clients upgrade to consider this flag.
   */
  isCompression?: boolean;
}

/**
 * Contains the possible cases for SchedulePolicy.
 */
export type SchedulePolicyUnion = SchedulePolicy | LogSchedulePolicy | LongTermSchedulePolicy | SimpleSchedulePolicy;

/**
 * Base class for backup schedule.
 */
export interface SchedulePolicy {
  /**
   * Polymorphic Discriminator
   */
  schedulePolicyType: "SchedulePolicy";
}

/**
 * Contains the possible cases for RetentionPolicy.
 */
export type RetentionPolicyUnion = RetentionPolicy | LongTermRetentionPolicy | SimpleRetentionPolicy;

/**
 * Base class for retention policy.
 */
export interface RetentionPolicy {
  /**
   * Polymorphic Discriminator
   */
  retentionPolicyType: "RetentionPolicy";
}

/**
 * Sub-protection policy which includes schedule and retention
 */
export interface SubProtectionPolicy {
  /**
   * Type of backup policy type. Possible values include: 'Invalid', 'Full', 'Differential', 'Log',
   * 'CopyOnlyFull'
   */
  policyType?: PolicyType;
  /**
   * Backup schedule specified as part of backup policy.
   */
  schedulePolicy?: SchedulePolicyUnion;
  /**
   * Retention policy with the details on backup copy retention ranges.
   */
  retentionPolicy?: RetentionPolicyUnion;
}

/**
 * Contains the possible cases for ProtectionPolicy.
 */
export type ProtectionPolicyUnion = ProtectionPolicy | AzureVmWorkloadProtectionPolicy | AzureFileShareProtectionPolicy | AzureIaaSVMProtectionPolicy | AzureSqlProtectionPolicy | GenericProtectionPolicy | MabProtectionPolicy;

/**
 * Base class for backup policy. Workload-specific backup policies are derived from this class.
 */
export interface ProtectionPolicy {
  /**
   * Polymorphic Discriminator
   */
  backupManagementType: "ProtectionPolicy";
  /**
   * Number of items associated with this policy.
   */
  protectedItemsCount?: number;
}

/**
 * Azure VM (Mercury) workload-specific backup policy.
 */
export interface AzureVmWorkloadProtectionPolicy {
  /**
   * Polymorphic Discriminator
   */
  backupManagementType: "AzureWorkload";
  /**
   * Number of items associated with this policy.
   */
  protectedItemsCount?: number;
  /**
   * Type of workload for the backup management. Possible values include: 'Invalid', 'VM',
   * 'FileFolder', 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState',
   * 'Client', 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase',
   * 'SAPAseDatabase'
   */
  workLoadType?: WorkloadType;
  /**
   * Common settings for the backup management
   */
  settings?: Settings;
  /**
   * List of sub-protection policies which includes schedule and retention
   */
  subProtectionPolicy?: SubProtectionPolicy[];
  /**
   * Fix the policy inconsistency
   */
  makePolicyConsistent?: boolean;
}

/**
 * AzureStorage backup policy.
 */
export interface AzureFileShareProtectionPolicy {
  /**
   * Polymorphic Discriminator
   */
  backupManagementType: "AzureStorage";
  /**
   * Number of items associated with this policy.
   */
  protectedItemsCount?: number;
  /**
   * Type of workload for the backup management. Possible values include: 'Invalid', 'VM',
   * 'FileFolder', 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState',
   * 'Client', 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase',
   * 'SAPAseDatabase'
   */
  workLoadType?: WorkloadType;
  /**
   * Backup schedule specified as part of backup policy.
   */
  schedulePolicy?: SchedulePolicyUnion;
  /**
   * Retention policy with the details on backup copy retention ranges.
   */
  retentionPolicy?: RetentionPolicyUnion;
  /**
   * TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
   */
  timeZone?: string;
}

/**
 * Contains the possible cases for AzureIaaSVMProtectedItem.
 */
export type AzureIaaSVMProtectedItemUnion = AzureIaaSVMProtectedItem | AzureIaaSClassicComputeVMProtectedItem | AzureIaaSComputeVMProtectedItem;

/**
 * IaaS VM workload-specific backup item.
 */
export interface AzureIaaSVMProtectedItem {
  /**
   * Polymorphic Discriminator
   */
  protectedItemType: "AzureIaaSVMProtectedItem";
  /**
   * Type of backup management for the backed up item. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Type of workload this item represents. Possible values include: 'Invalid', 'VM', 'FileFolder',
   * 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
   * 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase', 'SAPAseDatabase'
   */
  workloadType?: DataSourceType;
  /**
   * Unique name of container
   */
  containerName?: string;
  /**
   * ARM ID of the resource to be backed up.
   */
  sourceResourceId?: string;
  /**
   * ID of the backup policy with which this item is backed up.
   */
  policyId?: string;
  /**
   * Timestamp when the last (latest) backup copy was created for this backup item.
   */
  lastRecoveryPoint?: Date;
  /**
   * Name of the backup set the backup item belongs to
   */
  backupSetName?: string;
  /**
   * Create mode to indicate recovery of existing soft deleted data source or creation of new data
   * source. Possible values include: 'Invalid', 'Default', 'Recover'
   */
  createMode?: CreateMode;
  /**
   * Time for deferred deletion in UTC
   */
  deferredDeleteTimeInUTC?: Date;
  /**
   * Flag to identify whether the DS is scheduled for deferred delete
   */
  isScheduledForDeferredDelete?: boolean;
  /**
   * Time remaining before the DS marked for deferred delete is permanently deleted
   */
  deferredDeleteTimeRemaining?: string;
  /**
   * Flag to identify whether the deferred deleted DS is to be purged soon
   */
  isDeferredDeleteScheduleUpcoming?: boolean;
  /**
   * Flag to identify that deferred deleted DS is to be moved into Pause state
   */
  isRehydrate?: boolean;
  /**
   * Friendly name of the VM represented by this backup item.
   */
  friendlyName?: string;
  /**
   * Fully qualified ARM ID of the virtual machine represented by this item.
   */
  virtualMachineId?: string;
  /**
   * Backup status of this backup item.
   */
  protectionStatus?: string;
  /**
   * Backup state of this backup item. Possible values include: 'Invalid', 'IRPending',
   * 'Protected', 'ProtectionError', 'ProtectionStopped', 'ProtectionPaused'
   */
  protectionState?: ProtectionState;
  /**
   * Health status of protected item. Possible values include: 'Passed', 'ActionRequired',
   * 'ActionSuggested', 'Invalid'
   */
  healthStatus?: HealthStatus;
  /**
   * Health details on this backup item.
   */
  healthDetails?: AzureIaaSVMHealthDetails[];
  /**
   * Last backup operation status.
   */
  lastBackupStatus?: string;
  /**
   * Timestamp of the last backup operation on this backup item.
   */
  lastBackupTime?: Date;
  /**
   * Data ID of the protected item.
   */
  protectedItemDataId?: string;
  /**
   * Additional information for this backup item.
   */
  extendedInfo?: AzureIaaSVMProtectedItemExtendedInfo;
  extendedProperties?: ExtendedProperties;
}

/**
 * IaaS VM workload-specific backup item representing the Classic Compute VM.
 */
export interface AzureIaaSClassicComputeVMProtectedItem {
  /**
   * Polymorphic Discriminator
   */
  protectedItemType: "Microsoft.ClassicCompute/virtualMachines";
  /**
   * Type of backup management for the backed up item. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Type of workload this item represents. Possible values include: 'Invalid', 'VM', 'FileFolder',
   * 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
   * 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase', 'SAPAseDatabase'
   */
  workloadType?: DataSourceType;
  /**
   * Unique name of container
   */
  containerName?: string;
  /**
   * ARM ID of the resource to be backed up.
   */
  sourceResourceId?: string;
  /**
   * ID of the backup policy with which this item is backed up.
   */
  policyId?: string;
  /**
   * Timestamp when the last (latest) backup copy was created for this backup item.
   */
  lastRecoveryPoint?: Date;
  /**
   * Name of the backup set the backup item belongs to
   */
  backupSetName?: string;
  /**
   * Create mode to indicate recovery of existing soft deleted data source or creation of new data
   * source. Possible values include: 'Invalid', 'Default', 'Recover'
   */
  createMode?: CreateMode;
  /**
   * Time for deferred deletion in UTC
   */
  deferredDeleteTimeInUTC?: Date;
  /**
   * Flag to identify whether the DS is scheduled for deferred delete
   */
  isScheduledForDeferredDelete?: boolean;
  /**
   * Time remaining before the DS marked for deferred delete is permanently deleted
   */
  deferredDeleteTimeRemaining?: string;
  /**
   * Flag to identify whether the deferred deleted DS is to be purged soon
   */
  isDeferredDeleteScheduleUpcoming?: boolean;
  /**
   * Flag to identify that deferred deleted DS is to be moved into Pause state
   */
  isRehydrate?: boolean;
  /**
   * Friendly name of the VM represented by this backup item.
   */
  friendlyName?: string;
  /**
   * Fully qualified ARM ID of the virtual machine represented by this item.
   */
  virtualMachineId?: string;
  /**
   * Backup status of this backup item.
   */
  protectionStatus?: string;
  /**
   * Backup state of this backup item. Possible values include: 'Invalid', 'IRPending',
   * 'Protected', 'ProtectionError', 'ProtectionStopped', 'ProtectionPaused'
   */
  protectionState?: ProtectionState;
  /**
   * Health status of protected item. Possible values include: 'Passed', 'ActionRequired',
   * 'ActionSuggested', 'Invalid'
   */
  healthStatus?: HealthStatus;
  /**
   * Health details on this backup item.
   */
  healthDetails?: AzureIaaSVMHealthDetails[];
  /**
   * Last backup operation status.
   */
  lastBackupStatus?: string;
  /**
   * Timestamp of the last backup operation on this backup item.
   */
  lastBackupTime?: Date;
  /**
   * Data ID of the protected item.
   */
  protectedItemDataId?: string;
  /**
   * Additional information for this backup item.
   */
  extendedInfo?: AzureIaaSVMProtectedItemExtendedInfo;
  extendedProperties?: ExtendedProperties;
}

/**
 * IaaS VM workload-specific backup item representing the Azure Resource Manager VM.
 */
export interface AzureIaaSComputeVMProtectedItem {
  /**
   * Polymorphic Discriminator
   */
  protectedItemType: "Microsoft.Compute/virtualMachines";
  /**
   * Type of backup management for the backed up item. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Type of workload this item represents. Possible values include: 'Invalid', 'VM', 'FileFolder',
   * 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
   * 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase', 'SAPAseDatabase'
   */
  workloadType?: DataSourceType;
  /**
   * Unique name of container
   */
  containerName?: string;
  /**
   * ARM ID of the resource to be backed up.
   */
  sourceResourceId?: string;
  /**
   * ID of the backup policy with which this item is backed up.
   */
  policyId?: string;
  /**
   * Timestamp when the last (latest) backup copy was created for this backup item.
   */
  lastRecoveryPoint?: Date;
  /**
   * Name of the backup set the backup item belongs to
   */
  backupSetName?: string;
  /**
   * Create mode to indicate recovery of existing soft deleted data source or creation of new data
   * source. Possible values include: 'Invalid', 'Default', 'Recover'
   */
  createMode?: CreateMode;
  /**
   * Time for deferred deletion in UTC
   */
  deferredDeleteTimeInUTC?: Date;
  /**
   * Flag to identify whether the DS is scheduled for deferred delete
   */
  isScheduledForDeferredDelete?: boolean;
  /**
   * Time remaining before the DS marked for deferred delete is permanently deleted
   */
  deferredDeleteTimeRemaining?: string;
  /**
   * Flag to identify whether the deferred deleted DS is to be purged soon
   */
  isDeferredDeleteScheduleUpcoming?: boolean;
  /**
   * Flag to identify that deferred deleted DS is to be moved into Pause state
   */
  isRehydrate?: boolean;
  /**
   * Friendly name of the VM represented by this backup item.
   */
  friendlyName?: string;
  /**
   * Fully qualified ARM ID of the virtual machine represented by this item.
   */
  virtualMachineId?: string;
  /**
   * Backup status of this backup item.
   */
  protectionStatus?: string;
  /**
   * Backup state of this backup item. Possible values include: 'Invalid', 'IRPending',
   * 'Protected', 'ProtectionError', 'ProtectionStopped', 'ProtectionPaused'
   */
  protectionState?: ProtectionState;
  /**
   * Health status of protected item. Possible values include: 'Passed', 'ActionRequired',
   * 'ActionSuggested', 'Invalid'
   */
  healthStatus?: HealthStatus;
  /**
   * Health details on this backup item.
   */
  healthDetails?: AzureIaaSVMHealthDetails[];
  /**
   * Last backup operation status.
   */
  lastBackupStatus?: string;
  /**
   * Timestamp of the last backup operation on this backup item.
   */
  lastBackupTime?: Date;
  /**
   * Data ID of the protected item.
   */
  protectedItemDataId?: string;
  /**
   * Additional information for this backup item.
   */
  extendedInfo?: AzureIaaSVMProtectedItemExtendedInfo;
  extendedProperties?: ExtendedProperties;
}

/**
 * Azure IaaS VM workload-specific error information.
 */
export interface AzureIaaSVMErrorInfo {
  /**
   * Error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorCode?: number;
  /**
   * Title: Typically, the entity that the error pertains to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorTitle?: string;
  /**
   * Localized error string.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorString?: string;
  /**
   * List of localized recommendations for above error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recommendations?: string[];
}

/**
 * Azure IaaS VM workload-specific Health Details.
 */
export interface AzureIaaSVMHealthDetails {
  /**
   * Health Code
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: number;
  /**
   * Health Title
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly title?: string;
  /**
   * Health Message
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * Health Recommended Actions
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recommendations?: string[];
}

/**
 * Azure IaaS VM workload-specific job task details.
 */
export interface AzureIaaSVMJobTaskDetails {
  /**
   * The task display name.
   */
  taskId?: string;
  /**
   * The start time.
   */
  startTime?: Date;
  /**
   * The end time.
   */
  endTime?: Date;
  /**
   * The instanceId.
   */
  instanceId?: string;
  /**
   * Time elapsed for task.
   */
  duration?: string;
  /**
   * The status.
   */
  status?: string;
  /**
   * Progress of the task.
   */
  progressPercentage?: number;
  /**
   * Details about execution of the task.
   * eg: number of bytes transferred etc
   */
  taskExecutionDetails?: string;
}

/**
 * Azure IaaS VM workload-specific additional information for job.
 */
export interface AzureIaaSVMJobExtendedInfo {
  /**
   * List of tasks associated with this job.
   */
  tasksList?: AzureIaaSVMJobTaskDetails[];
  /**
   * Job properties.
   */
  propertyBag?: { [propertyName: string]: string };
  /**
   * Job internal properties.
   */
  internalPropertyBag?: { [propertyName: string]: string };
  /**
   * Indicates progress of the job. Null if it has not started or completed.
   */
  progressPercentage?: number;
  /**
   * Time remaining for execution of this job.
   */
  estimatedRemainingDuration?: string;
  /**
   * Non localized error message on job execution.
   */
  dynamicErrorMessage?: string;
}

/**
 * Contains the possible cases for Job.
 */
export type JobUnion = Job | AzureIaaSVMJob | AzureStorageJob | AzureWorkloadJob | DpmJob | MabJob;

/**
 * Defines workload agnostic properties for a job.
 */
export interface Job {
  /**
   * Polymorphic Discriminator
   */
  jobType: "Job";
  /**
   * Friendly name of the entity on which the current job is executing.
   */
  entityFriendlyName?: string;
  /**
   * Backup management type to execute the current job. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * The operation name.
   */
  operation?: string;
  /**
   * Job status.
   */
  status?: string;
  /**
   * The start time.
   */
  startTime?: Date;
  /**
   * The end time.
   */
  endTime?: Date;
  /**
   * ActivityId of job.
   */
  activityId?: string;
}

/**
 * Azure IaaS VM workload-specific job object.
 */
export interface AzureIaaSVMJob {
  /**
   * Polymorphic Discriminator
   */
  jobType: "AzureIaaSVMJob";
  /**
   * Friendly name of the entity on which the current job is executing.
   */
  entityFriendlyName?: string;
  /**
   * Backup management type to execute the current job. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * The operation name.
   */
  operation?: string;
  /**
   * Job status.
   */
  status?: string;
  /**
   * The start time.
   */
  startTime?: Date;
  /**
   * The end time.
   */
  endTime?: Date;
  /**
   * ActivityId of job.
   */
  activityId?: string;
  /**
   * Time elapsed during the execution of this job.
   */
  duration?: string;
  /**
   * Gets or sets the state/actions applicable on this job like cancel/retry.
   */
  actionsInfo?: JobSupportedAction[];
  /**
   * Error details on execution of this job.
   */
  errorDetails?: AzureIaaSVMErrorInfo[];
  /**
   * Specifies whether the backup item is a Classic or an Azure Resource Manager VM.
   */
  virtualMachineVersion?: string;
  /**
   * Additional information for this job.
   */
  extendedInfo?: AzureIaaSVMJobExtendedInfo;
}

/**
 * Additional information on Azure IaaS VM specific backup item.
 */
export interface AzureIaaSVMProtectedItemExtendedInfo {
  /**
   * The oldest backup copy available for this backup item.
   */
  oldestRecoveryPoint?: Date;
  /**
   * Number of backup copies available for this backup item.
   */
  recoveryPointCount?: number;
  /**
   * Specifies if backup policy associated with the backup item is inconsistent.
   */
  policyInconsistent?: boolean;
}

/**
 * An interface representing DiskExclusionProperties.
 */
export interface DiskExclusionProperties {
  /**
   * List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.
   */
  diskLunList?: number[];
  /**
   * Flag to indicate whether DiskLunList is to be included/ excluded from backup.
   */
  isInclusionList?: boolean;
}

/**
 * Extended Properties for Azure IaasVM Backup.
 */
export interface ExtendedProperties {
  /**
   * Extended Properties for Disk Exclusion.
   */
  diskExclusionProperties?: DiskExclusionProperties;
}

/**
 * An interface representing InstantRPAdditionalDetails.
 */
export interface InstantRPAdditionalDetails {
  azureBackupRGNamePrefix?: string;
  azureBackupRGNameSuffix?: string;
}

/**
 * IaaS VM workload-specific backup policy.
 */
export interface AzureIaaSVMProtectionPolicy {
  /**
   * Polymorphic Discriminator
   */
  backupManagementType: "AzureIaasVM";
  /**
   * Number of items associated with this policy.
   */
  protectedItemsCount?: number;
  instantRPDetails?: InstantRPAdditionalDetails;
  /**
   * Backup schedule specified as part of backup policy.
   */
  schedulePolicy?: SchedulePolicyUnion;
  /**
   * Retention policy with the details on backup copy retention ranges.
   */
  retentionPolicy?: RetentionPolicyUnion;
  /**
   * Instant RP retention policy range in days
   */
  instantRpRetentionRangeInDays?: number;
  /**
   * TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
   */
  timeZone?: string;
}

/**
 * Additional information on Azure Sql specific protected item.
 */
export interface AzureSqlProtectedItemExtendedInfo {
  /**
   * The oldest backup copy available for this item in the service.
   */
  oldestRecoveryPoint?: Date;
  /**
   * Number of available backup copies associated with this backup item.
   */
  recoveryPointCount?: number;
  /**
   * State of the backup policy associated with this backup item.
   */
  policyState?: string;
}

/**
 * Azure SQL workload-specific backup item.
 */
export interface AzureSqlProtectedItem {
  /**
   * Polymorphic Discriminator
   */
  protectedItemType: "Microsoft.Sql/servers/databases";
  /**
   * Type of backup management for the backed up item. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Type of workload this item represents. Possible values include: 'Invalid', 'VM', 'FileFolder',
   * 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
   * 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase', 'SAPAseDatabase'
   */
  workloadType?: DataSourceType;
  /**
   * Unique name of container
   */
  containerName?: string;
  /**
   * ARM ID of the resource to be backed up.
   */
  sourceResourceId?: string;
  /**
   * ID of the backup policy with which this item is backed up.
   */
  policyId?: string;
  /**
   * Timestamp when the last (latest) backup copy was created for this backup item.
   */
  lastRecoveryPoint?: Date;
  /**
   * Name of the backup set the backup item belongs to
   */
  backupSetName?: string;
  /**
   * Create mode to indicate recovery of existing soft deleted data source or creation of new data
   * source. Possible values include: 'Invalid', 'Default', 'Recover'
   */
  createMode?: CreateMode;
  /**
   * Time for deferred deletion in UTC
   */
  deferredDeleteTimeInUTC?: Date;
  /**
   * Flag to identify whether the DS is scheduled for deferred delete
   */
  isScheduledForDeferredDelete?: boolean;
  /**
   * Time remaining before the DS marked for deferred delete is permanently deleted
   */
  deferredDeleteTimeRemaining?: string;
  /**
   * Flag to identify whether the deferred deleted DS is to be purged soon
   */
  isDeferredDeleteScheduleUpcoming?: boolean;
  /**
   * Flag to identify that deferred deleted DS is to be moved into Pause state
   */
  isRehydrate?: boolean;
  /**
   * Internal ID of a backup item. Used by Azure SQL Backup engine to contact Recovery Services.
   */
  protectedItemDataId?: string;
  /**
   * Backup state of the backed up item. Possible values include: 'Invalid', 'IRPending',
   * 'Protected', 'ProtectionError', 'ProtectionStopped', 'ProtectionPaused'
   */
  protectionState?: ProtectedItemState;
  /**
   * Additional information for this backup item.
   */
  extendedInfo?: AzureSqlProtectedItemExtendedInfo;
}

/**
 * Azure storage specific error information
 */
export interface AzureStorageErrorInfo {
  /**
   * Error code.
   */
  errorCode?: number;
  /**
   * Localized error string.
   */
  errorString?: string;
  /**
   * List of localized recommendations for above error code.
   */
  recommendations?: string[];
}

/**
 * Azure SQL workload-specific backup policy.
 */
export interface AzureSqlProtectionPolicy {
  /**
   * Polymorphic Discriminator
   */
  backupManagementType: "AzureSql";
  /**
   * Number of items associated with this policy.
   */
  protectedItemsCount?: number;
  /**
   * Retention policy details.
   */
  retentionPolicy?: RetentionPolicyUnion;
}

/**
 * Azure storage workload specific job task details.
 */
export interface AzureStorageJobTaskDetails {
  /**
   * The task display name.
   */
  taskId?: string;
  /**
   * The status.
   */
  status?: string;
}

/**
 * Azure Storage workload-specific additional information for job.
 */
export interface AzureStorageJobExtendedInfo {
  /**
   * List of tasks for this job
   */
  tasksList?: AzureStorageJobTaskDetails[];
  /**
   * Job properties.
   */
  propertyBag?: { [propertyName: string]: string };
  /**
   * Non localized error message on job execution.
   */
  dynamicErrorMessage?: string;
}

/**
 * Azure storage specific job.
 */
export interface AzureStorageJob {
  /**
   * Polymorphic Discriminator
   */
  jobType: "AzureStorageJob";
  /**
   * Friendly name of the entity on which the current job is executing.
   */
  entityFriendlyName?: string;
  /**
   * Backup management type to execute the current job. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * The operation name.
   */
  operation?: string;
  /**
   * Job status.
   */
  status?: string;
  /**
   * The start time.
   */
  startTime?: Date;
  /**
   * The end time.
   */
  endTime?: Date;
  /**
   * ActivityId of job.
   */
  activityId?: string;
  /**
   * Time elapsed during the execution of this job.
   */
  duration?: string;
  /**
   * Gets or sets the state/actions applicable on this job like cancel/retry.
   */
  actionsInfo?: JobSupportedAction[];
  /**
   * Error details on execution of this job.
   */
  errorDetails?: AzureStorageErrorInfo[];
  /**
   * Specifies friendly name of the storage account.
   */
  storageAccountName?: string;
  /**
   * Specifies whether the Storage account is a Classic or an Azure Resource Manager Storage
   * account.
   */
  storageAccountVersion?: string;
  /**
   * Additional information about the job.
   */
  extendedInfo?: AzureStorageJobExtendedInfo;
}

/**
 * Error Detail class which encapsulates Code, Message and Recommendations.
 */
export interface ErrorDetail {
  /**
   * Error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * Error Message related to the Code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * List of recommendation strings.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recommendations?: string[];
}

/**
 * Additional information on Azure Workload for SQL specific backup item.
 */
export interface AzureVmWorkloadProtectedItemExtendedInfo {
  /**
   * The oldest backup copy available for this backup item.
   */
  oldestRecoveryPoint?: Date;
  /**
   * Number of backup copies available for this backup item.
   */
  recoveryPointCount?: number;
  /**
   * Indicates consistency of policy object and policy applied to this backup item.
   */
  policyState?: string;
}

/**
 * Contains the possible cases for AzureVmWorkloadProtectedItem.
 */
export type AzureVmWorkloadProtectedItemUnion = AzureVmWorkloadProtectedItem | AzureVmWorkloadSAPAseDatabaseProtectedItem | AzureVmWorkloadSAPHanaDatabaseProtectedItem | AzureVmWorkloadSQLDatabaseProtectedItem;

/**
 * Azure VM workload-specific protected item.
 */
export interface AzureVmWorkloadProtectedItem {
  /**
   * Polymorphic Discriminator
   */
  protectedItemType: "AzureVmWorkloadProtectedItem";
  /**
   * Type of backup management for the backed up item. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Type of workload this item represents. Possible values include: 'Invalid', 'VM', 'FileFolder',
   * 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
   * 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase', 'SAPAseDatabase'
   */
  workloadType?: DataSourceType;
  /**
   * Unique name of container
   */
  containerName?: string;
  /**
   * ARM ID of the resource to be backed up.
   */
  sourceResourceId?: string;
  /**
   * ID of the backup policy with which this item is backed up.
   */
  policyId?: string;
  /**
   * Timestamp when the last (latest) backup copy was created for this backup item.
   */
  lastRecoveryPoint?: Date;
  /**
   * Name of the backup set the backup item belongs to
   */
  backupSetName?: string;
  /**
   * Create mode to indicate recovery of existing soft deleted data source or creation of new data
   * source. Possible values include: 'Invalid', 'Default', 'Recover'
   */
  createMode?: CreateMode;
  /**
   * Time for deferred deletion in UTC
   */
  deferredDeleteTimeInUTC?: Date;
  /**
   * Flag to identify whether the DS is scheduled for deferred delete
   */
  isScheduledForDeferredDelete?: boolean;
  /**
   * Time remaining before the DS marked for deferred delete is permanently deleted
   */
  deferredDeleteTimeRemaining?: string;
  /**
   * Flag to identify whether the deferred deleted DS is to be purged soon
   */
  isDeferredDeleteScheduleUpcoming?: boolean;
  /**
   * Flag to identify that deferred deleted DS is to be moved into Pause state
   */
  isRehydrate?: boolean;
  /**
   * Friendly name of the DB represented by this backup item.
   */
  friendlyName?: string;
  /**
   * Host/Cluster Name for instance or AG
   */
  serverName?: string;
  /**
   * Parent name of the DB such as Instance or Availability Group.
   */
  parentName?: string;
  /**
   * Parent type of protected item, example: for a DB, standalone server or distributed
   */
  parentType?: string;
  /**
   * Backup status of this backup item.
   */
  protectionStatus?: string;
  /**
   * Backup state of this backup item. Possible values include: 'Invalid', 'IRPending',
   * 'Protected', 'ProtectionError', 'ProtectionStopped', 'ProtectionPaused'
   */
  protectionState?: ProtectionState;
  /**
   * Last backup operation status. Possible values: Healthy, Unhealthy. Possible values include:
   * 'Invalid', 'Healthy', 'Unhealthy', 'IRPending'
   */
  lastBackupStatus?: LastBackupStatus;
  /**
   * Timestamp of the last backup operation on this backup item.
   */
  lastBackupTime?: Date;
  /**
   * Error details in last backup
   */
  lastBackupErrorDetail?: ErrorDetail;
  /**
   * Data ID of the protected item.
   */
  protectedItemDataSourceId?: string;
  /**
   * Health status of the backup item, evaluated based on last heartbeat received. Possible values
   * include: 'Invalid', 'Healthy', 'Unhealthy', 'NotReachable', 'IRPending'
   */
  protectedItemHealthStatus?: ProtectedItemHealthStatus;
  /**
   * Additional information for this backup item.
   */
  extendedInfo?: AzureVmWorkloadProtectedItemExtendedInfo;
}

/**
 * Azure VM workload-specific protected item representing SAP ASE Database.
 */
export interface AzureVmWorkloadSAPAseDatabaseProtectedItem {
  /**
   * Polymorphic Discriminator
   */
  protectedItemType: "AzureVmWorkloadSAPAseDatabase";
  /**
   * Type of backup management for the backed up item. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Type of workload this item represents. Possible values include: 'Invalid', 'VM', 'FileFolder',
   * 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
   * 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase', 'SAPAseDatabase'
   */
  workloadType?: DataSourceType;
  /**
   * Unique name of container
   */
  containerName?: string;
  /**
   * ARM ID of the resource to be backed up.
   */
  sourceResourceId?: string;
  /**
   * ID of the backup policy with which this item is backed up.
   */
  policyId?: string;
  /**
   * Timestamp when the last (latest) backup copy was created for this backup item.
   */
  lastRecoveryPoint?: Date;
  /**
   * Name of the backup set the backup item belongs to
   */
  backupSetName?: string;
  /**
   * Create mode to indicate recovery of existing soft deleted data source or creation of new data
   * source. Possible values include: 'Invalid', 'Default', 'Recover'
   */
  createMode?: CreateMode;
  /**
   * Time for deferred deletion in UTC
   */
  deferredDeleteTimeInUTC?: Date;
  /**
   * Flag to identify whether the DS is scheduled for deferred delete
   */
  isScheduledForDeferredDelete?: boolean;
  /**
   * Time remaining before the DS marked for deferred delete is permanently deleted
   */
  deferredDeleteTimeRemaining?: string;
  /**
   * Flag to identify whether the deferred deleted DS is to be purged soon
   */
  isDeferredDeleteScheduleUpcoming?: boolean;
  /**
   * Flag to identify that deferred deleted DS is to be moved into Pause state
   */
  isRehydrate?: boolean;
  /**
   * Friendly name of the DB represented by this backup item.
   */
  friendlyName?: string;
  /**
   * Host/Cluster Name for instance or AG
   */
  serverName?: string;
  /**
   * Parent name of the DB such as Instance or Availability Group.
   */
  parentName?: string;
  /**
   * Parent type of protected item, example: for a DB, standalone server or distributed
   */
  parentType?: string;
  /**
   * Backup status of this backup item.
   */
  protectionStatus?: string;
  /**
   * Backup state of this backup item. Possible values include: 'Invalid', 'IRPending',
   * 'Protected', 'ProtectionError', 'ProtectionStopped', 'ProtectionPaused'
   */
  protectionState?: ProtectionState;
  /**
   * Last backup operation status. Possible values: Healthy, Unhealthy. Possible values include:
   * 'Invalid', 'Healthy', 'Unhealthy', 'IRPending'
   */
  lastBackupStatus?: LastBackupStatus;
  /**
   * Timestamp of the last backup operation on this backup item.
   */
  lastBackupTime?: Date;
  /**
   * Error details in last backup
   */
  lastBackupErrorDetail?: ErrorDetail;
  /**
   * Data ID of the protected item.
   */
  protectedItemDataSourceId?: string;
  /**
   * Health status of the backup item, evaluated based on last heartbeat received. Possible values
   * include: 'Invalid', 'Healthy', 'Unhealthy', 'NotReachable', 'IRPending'
   */
  protectedItemHealthStatus?: ProtectedItemHealthStatus;
  /**
   * Additional information for this backup item.
   */
  extendedInfo?: AzureVmWorkloadProtectedItemExtendedInfo;
}

/**
 * Azure VM workload-specific protected item representing SAP HANA Database.
 */
export interface AzureVmWorkloadSAPHanaDatabaseProtectedItem {
  /**
   * Polymorphic Discriminator
   */
  protectedItemType: "AzureVmWorkloadSAPHanaDatabase";
  /**
   * Type of backup management for the backed up item. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Type of workload this item represents. Possible values include: 'Invalid', 'VM', 'FileFolder',
   * 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
   * 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase', 'SAPAseDatabase'
   */
  workloadType?: DataSourceType;
  /**
   * Unique name of container
   */
  containerName?: string;
  /**
   * ARM ID of the resource to be backed up.
   */
  sourceResourceId?: string;
  /**
   * ID of the backup policy with which this item is backed up.
   */
  policyId?: string;
  /**
   * Timestamp when the last (latest) backup copy was created for this backup item.
   */
  lastRecoveryPoint?: Date;
  /**
   * Name of the backup set the backup item belongs to
   */
  backupSetName?: string;
  /**
   * Create mode to indicate recovery of existing soft deleted data source or creation of new data
   * source. Possible values include: 'Invalid', 'Default', 'Recover'
   */
  createMode?: CreateMode;
  /**
   * Time for deferred deletion in UTC
   */
  deferredDeleteTimeInUTC?: Date;
  /**
   * Flag to identify whether the DS is scheduled for deferred delete
   */
  isScheduledForDeferredDelete?: boolean;
  /**
   * Time remaining before the DS marked for deferred delete is permanently deleted
   */
  deferredDeleteTimeRemaining?: string;
  /**
   * Flag to identify whether the deferred deleted DS is to be purged soon
   */
  isDeferredDeleteScheduleUpcoming?: boolean;
  /**
   * Flag to identify that deferred deleted DS is to be moved into Pause state
   */
  isRehydrate?: boolean;
  /**
   * Friendly name of the DB represented by this backup item.
   */
  friendlyName?: string;
  /**
   * Host/Cluster Name for instance or AG
   */
  serverName?: string;
  /**
   * Parent name of the DB such as Instance or Availability Group.
   */
  parentName?: string;
  /**
   * Parent type of protected item, example: for a DB, standalone server or distributed
   */
  parentType?: string;
  /**
   * Backup status of this backup item.
   */
  protectionStatus?: string;
  /**
   * Backup state of this backup item. Possible values include: 'Invalid', 'IRPending',
   * 'Protected', 'ProtectionError', 'ProtectionStopped', 'ProtectionPaused'
   */
  protectionState?: ProtectionState;
  /**
   * Last backup operation status. Possible values: Healthy, Unhealthy. Possible values include:
   * 'Invalid', 'Healthy', 'Unhealthy', 'IRPending'
   */
  lastBackupStatus?: LastBackupStatus;
  /**
   * Timestamp of the last backup operation on this backup item.
   */
  lastBackupTime?: Date;
  /**
   * Error details in last backup
   */
  lastBackupErrorDetail?: ErrorDetail;
  /**
   * Data ID of the protected item.
   */
  protectedItemDataSourceId?: string;
  /**
   * Health status of the backup item, evaluated based on last heartbeat received. Possible values
   * include: 'Invalid', 'Healthy', 'Unhealthy', 'NotReachable', 'IRPending'
   */
  protectedItemHealthStatus?: ProtectedItemHealthStatus;
  /**
   * Additional information for this backup item.
   */
  extendedInfo?: AzureVmWorkloadProtectedItemExtendedInfo;
}

/**
 * Azure VM workload-specific protected item representing SQL Database.
 */
export interface AzureVmWorkloadSQLDatabaseProtectedItem {
  /**
   * Polymorphic Discriminator
   */
  protectedItemType: "AzureVmWorkloadSQLDatabase";
  /**
   * Type of backup management for the backed up item. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Type of workload this item represents. Possible values include: 'Invalid', 'VM', 'FileFolder',
   * 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
   * 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase', 'SAPAseDatabase'
   */
  workloadType?: DataSourceType;
  /**
   * Unique name of container
   */
  containerName?: string;
  /**
   * ARM ID of the resource to be backed up.
   */
  sourceResourceId?: string;
  /**
   * ID of the backup policy with which this item is backed up.
   */
  policyId?: string;
  /**
   * Timestamp when the last (latest) backup copy was created for this backup item.
   */
  lastRecoveryPoint?: Date;
  /**
   * Name of the backup set the backup item belongs to
   */
  backupSetName?: string;
  /**
   * Create mode to indicate recovery of existing soft deleted data source or creation of new data
   * source. Possible values include: 'Invalid', 'Default', 'Recover'
   */
  createMode?: CreateMode;
  /**
   * Time for deferred deletion in UTC
   */
  deferredDeleteTimeInUTC?: Date;
  /**
   * Flag to identify whether the DS is scheduled for deferred delete
   */
  isScheduledForDeferredDelete?: boolean;
  /**
   * Time remaining before the DS marked for deferred delete is permanently deleted
   */
  deferredDeleteTimeRemaining?: string;
  /**
   * Flag to identify whether the deferred deleted DS is to be purged soon
   */
  isDeferredDeleteScheduleUpcoming?: boolean;
  /**
   * Flag to identify that deferred deleted DS is to be moved into Pause state
   */
  isRehydrate?: boolean;
  /**
   * Friendly name of the DB represented by this backup item.
   */
  friendlyName?: string;
  /**
   * Host/Cluster Name for instance or AG
   */
  serverName?: string;
  /**
   * Parent name of the DB such as Instance or Availability Group.
   */
  parentName?: string;
  /**
   * Parent type of protected item, example: for a DB, standalone server or distributed
   */
  parentType?: string;
  /**
   * Backup status of this backup item.
   */
  protectionStatus?: string;
  /**
   * Backup state of this backup item. Possible values include: 'Invalid', 'IRPending',
   * 'Protected', 'ProtectionError', 'ProtectionStopped', 'ProtectionPaused'
   */
  protectionState?: ProtectionState;
  /**
   * Last backup operation status. Possible values: Healthy, Unhealthy. Possible values include:
   * 'Invalid', 'Healthy', 'Unhealthy', 'IRPending'
   */
  lastBackupStatus?: LastBackupStatus;
  /**
   * Timestamp of the last backup operation on this backup item.
   */
  lastBackupTime?: Date;
  /**
   * Error details in last backup
   */
  lastBackupErrorDetail?: ErrorDetail;
  /**
   * Data ID of the protected item.
   */
  protectedItemDataSourceId?: string;
  /**
   * Health status of the backup item, evaluated based on last heartbeat received. Possible values
   * include: 'Invalid', 'Healthy', 'Unhealthy', 'NotReachable', 'IRPending'
   */
  protectedItemHealthStatus?: ProtectedItemHealthStatus;
  /**
   * Additional information for this backup item.
   */
  extendedInfo?: AzureVmWorkloadProtectedItemExtendedInfo;
}

/**
 * Azure storage specific error information
 */
export interface AzureWorkloadErrorInfo {
  /**
   * Error code.
   */
  errorCode?: number;
  /**
   * Localized error string.
   */
  errorString?: string;
  /**
   * Title: Typically, the entity that the error pertains to.
   */
  errorTitle?: string;
  /**
   * List of localized recommendations for above error code.
   */
  recommendations?: string[];
  /**
   * Additional details for above error code.
   */
  additionalDetails?: string;
}

/**
 * Azure VM workload specific job task details.
 */
export interface AzureWorkloadJobTaskDetails {
  /**
   * The task display name.
   */
  taskId?: string;
  /**
   * The status.
   */
  status?: string;
}

/**
 * Azure VM workload-specific additional information for job.
 */
export interface AzureWorkloadJobExtendedInfo {
  /**
   * List of tasks for this job
   */
  tasksList?: AzureWorkloadJobTaskDetails[];
  /**
   * Job properties.
   */
  propertyBag?: { [propertyName: string]: string };
  /**
   * Non localized error message on job execution.
   */
  dynamicErrorMessage?: string;
}

/**
 * Azure storage specific job.
 */
export interface AzureWorkloadJob {
  /**
   * Polymorphic Discriminator
   */
  jobType: "AzureWorkloadJob";
  /**
   * Friendly name of the entity on which the current job is executing.
   */
  entityFriendlyName?: string;
  /**
   * Backup management type to execute the current job. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * The operation name.
   */
  operation?: string;
  /**
   * Job status.
   */
  status?: string;
  /**
   * The start time.
   */
  startTime?: Date;
  /**
   * The end time.
   */
  endTime?: Date;
  /**
   * ActivityId of job.
   */
  activityId?: string;
  /**
   * Workload type of the job
   */
  workloadType?: string;
  /**
   * Time elapsed during the execution of this job.
   */
  duration?: string;
  /**
   * Gets or sets the state/actions applicable on this job like cancel/retry.
   */
  actionsInfo?: JobSupportedAction[];
  /**
   * Error details on execution of this job.
   */
  errorDetails?: AzureWorkloadErrorInfo[];
  /**
   * Additional information about the job.
   */
  extendedInfo?: AzureWorkloadJobExtendedInfo;
}

/**
 * Provides details for log ranges
 */
export interface PointInTimeRange {
  /**
   * Start time of the time range for log recovery.
   */
  startTime?: Date;
  /**
   * End time of the time range for log recovery.
   */
  endTime?: Date;
}

/**
 * Contains the possible cases for AzureWorkloadRecoveryPoint.
 */
export type AzureWorkloadRecoveryPointUnion = AzureWorkloadRecoveryPoint | AzureWorkloadPointInTimeRecoveryPointUnion | AzureWorkloadSAPHanaRecoveryPoint | AzureWorkloadSQLRecoveryPointUnion;

/**
 * Workload specific recovery point, specifically encapsulates full/diff recovery point
 */
export interface AzureWorkloadRecoveryPoint {
  /**
   * Polymorphic Discriminator
   */
  objectType: "AzureWorkloadRecoveryPoint";
  /**
   * UTC time at which recovery point was created
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recoveryPointTimeInUTC?: Date;
  /**
   * Type of restore point. Possible values include: 'Invalid', 'Full', 'Log', 'Differential'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: RestorePointType;
}

/**
 * Contains the possible cases for AzureWorkloadPointInTimeRecoveryPoint.
 */
export type AzureWorkloadPointInTimeRecoveryPointUnion = AzureWorkloadPointInTimeRecoveryPoint | AzureWorkloadSAPHanaPointInTimeRecoveryPoint;

/**
 * Recovery point specific to PointInTime
 */
export interface AzureWorkloadPointInTimeRecoveryPoint {
  /**
   * Polymorphic Discriminator
   */
  objectType: "AzureWorkloadPointInTimeRecoveryPoint";
  /**
   * UTC time at which recovery point was created
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recoveryPointTimeInUTC?: Date;
  /**
   * Type of restore point. Possible values include: 'Invalid', 'Full', 'Log', 'Differential'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: RestorePointType;
  /**
   * List of log ranges
   */
  timeRanges?: PointInTimeRange[];
}

/**
 * Contains the possible cases for AzureWorkloadRestoreRequest.
 */
export type AzureWorkloadRestoreRequestUnion = AzureWorkloadRestoreRequest | AzureWorkloadPointInTimeRestoreRequest | AzureWorkloadSAPHanaRestoreRequestUnion | AzureWorkloadSQLRestoreRequestUnion;

/**
 * AzureWorkload-specific restore.
 */
export interface AzureWorkloadRestoreRequest {
  /**
   * Polymorphic Discriminator
   */
  objectType: "AzureWorkloadRestoreRequest";
  /**
   * Type of this recovery. Possible values include: 'Invalid', 'OriginalLocation',
   * 'AlternateLocation', 'RestoreDisks', 'Offline'
   */
  recoveryType?: RecoveryType;
  /**
   * Fully qualified ARM ID of the VM on which workload that was running is being recovered.
   */
  sourceResourceId?: string;
  /**
   * Workload specific property bag.
   */
  propertyBag?: { [propertyName: string]: string };
  /**
   * Details of target database
   */
  targetInfo?: TargetRestoreInfo;
  /**
   * Defines whether the current recovery mode is file restore or database restore. Possible values
   * include: 'Invalid', 'FileRecovery', 'WorkloadRecovery'
   */
  recoveryMode?: RecoveryMode;
}

/**
 * AzureWorkload SAP Hana -specific restore. Specifically for PointInTime/Log restore
 */
export interface AzureWorkloadPointInTimeRestoreRequest {
  /**
   * Polymorphic Discriminator
   */
  objectType: "AzureWorkloadPointInTimeRestoreRequest";
  /**
   * Type of this recovery. Possible values include: 'Invalid', 'OriginalLocation',
   * 'AlternateLocation', 'RestoreDisks', 'Offline'
   */
  recoveryType?: RecoveryType;
  /**
   * Fully qualified ARM ID of the VM on which workload that was running is being recovered.
   */
  sourceResourceId?: string;
  /**
   * Workload specific property bag.
   */
  propertyBag?: { [propertyName: string]: string };
  /**
   * Details of target database
   */
  targetInfo?: TargetRestoreInfo;
  /**
   * Defines whether the current recovery mode is file restore or database restore. Possible values
   * include: 'Invalid', 'FileRecovery', 'WorkloadRecovery'
   */
  recoveryMode?: RecoveryMode;
  /**
   * PointInTime value
   */
  pointInTime?: Date;
}

/**
 * Details about target workload during restore operation.
 */
export interface TargetRestoreInfo {
  /**
   * Can Overwrite if Target DataBase already exists. Possible values include: 'Invalid',
   * 'FailOnConflict', 'Overwrite'
   */
  overwriteOption?: OverwriteOptions;
  /**
   * Resource Id name of the container in which Target DataBase resides
   */
  containerId?: string;
  /**
   * Database name InstanceName/DataBaseName for SQL or System/DbName for SAP Hana
   */
  databaseName?: string;
  /**
   * Target directory location for restore as files.
   */
  targetDirectoryForFileRestore?: string;
}

/**
 * Recovery point specific to PointInTime in SAPHana
 */
export interface AzureWorkloadSAPHanaPointInTimeRecoveryPoint {
  /**
   * Polymorphic Discriminator
   */
  objectType: "AzureWorkloadSAPHanaPointInTimeRecoveryPoint";
  /**
   * UTC time at which recovery point was created
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recoveryPointTimeInUTC?: Date;
  /**
   * Type of restore point. Possible values include: 'Invalid', 'Full', 'Log', 'Differential'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: RestorePointType;
  /**
   * List of log ranges
   */
  timeRanges?: PointInTimeRange[];
}

/**
 * Contains the possible cases for AzureWorkloadSAPHanaRestoreRequest.
 */
export type AzureWorkloadSAPHanaRestoreRequestUnion = AzureWorkloadSAPHanaRestoreRequest | AzureWorkloadSAPHanaPointInTimeRestoreRequest;

/**
 * AzureWorkload SAP Hana-specific restore.
 */
export interface AzureWorkloadSAPHanaRestoreRequest {
  /**
   * Polymorphic Discriminator
   */
  objectType: "AzureWorkloadSAPHanaRestoreRequest";
  /**
   * Type of this recovery. Possible values include: 'Invalid', 'OriginalLocation',
   * 'AlternateLocation', 'RestoreDisks', 'Offline'
   */
  recoveryType?: RecoveryType;
  /**
   * Fully qualified ARM ID of the VM on which workload that was running is being recovered.
   */
  sourceResourceId?: string;
  /**
   * Workload specific property bag.
   */
  propertyBag?: { [propertyName: string]: string };
  /**
   * Details of target database
   */
  targetInfo?: TargetRestoreInfo;
  /**
   * Defines whether the current recovery mode is file restore or database restore. Possible values
   * include: 'Invalid', 'FileRecovery', 'WorkloadRecovery'
   */
  recoveryMode?: RecoveryMode;
}

/**
 * AzureWorkload SAP Hana -specific restore. Specifically for PointInTime/Log restore
 */
export interface AzureWorkloadSAPHanaPointInTimeRestoreRequest {
  /**
   * Polymorphic Discriminator
   */
  objectType: "AzureWorkloadSAPHanaPointInTimeRestoreRequest";
  /**
   * Type of this recovery. Possible values include: 'Invalid', 'OriginalLocation',
   * 'AlternateLocation', 'RestoreDisks', 'Offline'
   */
  recoveryType?: RecoveryType;
  /**
   * Fully qualified ARM ID of the VM on which workload that was running is being recovered.
   */
  sourceResourceId?: string;
  /**
   * Workload specific property bag.
   */
  propertyBag?: { [propertyName: string]: string };
  /**
   * Details of target database
   */
  targetInfo?: TargetRestoreInfo;
  /**
   * Defines whether the current recovery mode is file restore or database restore. Possible values
   * include: 'Invalid', 'FileRecovery', 'WorkloadRecovery'
   */
  recoveryMode?: RecoveryMode;
  /**
   * PointInTime value
   */
  pointInTime?: Date;
}

/**
 * SAPHana specific recoverypoint, specifically encapsulates full/diff recoverypoints
 */
export interface AzureWorkloadSAPHanaRecoveryPoint {
  /**
   * Polymorphic Discriminator
   */
  objectType: "AzureWorkloadSAPHanaRecoveryPoint";
  /**
   * UTC time at which recovery point was created
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recoveryPointTimeInUTC?: Date;
  /**
   * Type of restore point. Possible values include: 'Invalid', 'Full', 'Log', 'Differential'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: RestorePointType;
}

/**
 * Contains the possible cases for AzureWorkloadSQLRecoveryPoint.
 */
export type AzureWorkloadSQLRecoveryPointUnion = AzureWorkloadSQLRecoveryPoint | AzureWorkloadSQLPointInTimeRecoveryPoint;

/**
 * SQL specific recoverypoint, specifically encapsulates full/diff recoverypoint along with
 * extended info
 */
export interface AzureWorkloadSQLRecoveryPoint {
  /**
   * Polymorphic Discriminator
   */
  objectType: "AzureWorkloadSQLRecoveryPoint";
  /**
   * UTC time at which recovery point was created
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recoveryPointTimeInUTC?: Date;
  /**
   * Type of restore point. Possible values include: 'Invalid', 'Full', 'Log', 'Differential'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: RestorePointType;
  /**
   * Extended Info that provides data directory details. Will be populated in two cases:
   * When a specific recovery point is accessed using GetRecoveryPoint
   * Or when ListRecoveryPoints is called for Log RP only with ExtendedInfo query filter
   */
  extendedInfo?: AzureWorkloadSQLRecoveryPointExtendedInfo;
}

/**
 * Recovery point specific to PointInTime
 */
export interface AzureWorkloadSQLPointInTimeRecoveryPoint {
  /**
   * Polymorphic Discriminator
   */
  objectType: "AzureWorkloadSQLPointInTimeRecoveryPoint";
  /**
   * UTC time at which recovery point was created
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recoveryPointTimeInUTC?: Date;
  /**
   * Type of restore point. Possible values include: 'Invalid', 'Full', 'Log', 'Differential'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: RestorePointType;
  /**
   * Extended Info that provides data directory details. Will be populated in two cases:
   * When a specific recovery point is accessed using GetRecoveryPoint
   * Or when ListRecoveryPoints is called for Log RP only with ExtendedInfo query filter
   */
  extendedInfo?: AzureWorkloadSQLRecoveryPointExtendedInfo;
  /**
   * List of log ranges
   */
  timeRanges?: PointInTimeRange[];
}

/**
 * Contains the possible cases for AzureWorkloadSQLRestoreRequest.
 */
export type AzureWorkloadSQLRestoreRequestUnion = AzureWorkloadSQLRestoreRequest | AzureWorkloadSQLPointInTimeRestoreRequest;

/**
 * AzureWorkload SQL -specific restore. Specifically for full/diff restore
 */
export interface AzureWorkloadSQLRestoreRequest {
  /**
   * Polymorphic Discriminator
   */
  objectType: "AzureWorkloadSQLRestoreRequest";
  /**
   * Type of this recovery. Possible values include: 'Invalid', 'OriginalLocation',
   * 'AlternateLocation', 'RestoreDisks', 'Offline'
   */
  recoveryType?: RecoveryType;
  /**
   * Fully qualified ARM ID of the VM on which workload that was running is being recovered.
   */
  sourceResourceId?: string;
  /**
   * Workload specific property bag.
   */
  propertyBag?: { [propertyName: string]: string };
  /**
   * Details of target database
   */
  targetInfo?: TargetRestoreInfo;
  /**
   * Defines whether the current recovery mode is file restore or database restore. Possible values
   * include: 'Invalid', 'FileRecovery', 'WorkloadRecovery'
   */
  recoveryMode?: RecoveryMode;
  /**
   * Default option set to true. If this is set to false, alternate data directory must be provided
   */
  shouldUseAlternateTargetLocation?: boolean;
  /**
   * SQL specific property where user can chose to set no-recovery when restore operation is tried
   */
  isNonRecoverable?: boolean;
  /**
   * Data directory details
   */
  alternateDirectoryPaths?: SQLDataDirectoryMapping[];
}

/**
 * AzureWorkload SQL -specific restore. Specifically for PointInTime/Log restore
 */
export interface AzureWorkloadSQLPointInTimeRestoreRequest {
  /**
   * Polymorphic Discriminator
   */
  objectType: "AzureWorkloadSQLPointInTimeRestoreRequest";
  /**
   * Type of this recovery. Possible values include: 'Invalid', 'OriginalLocation',
   * 'AlternateLocation', 'RestoreDisks', 'Offline'
   */
  recoveryType?: RecoveryType;
  /**
   * Fully qualified ARM ID of the VM on which workload that was running is being recovered.
   */
  sourceResourceId?: string;
  /**
   * Workload specific property bag.
   */
  propertyBag?: { [propertyName: string]: string };
  /**
   * Details of target database
   */
  targetInfo?: TargetRestoreInfo;
  /**
   * Defines whether the current recovery mode is file restore or database restore. Possible values
   * include: 'Invalid', 'FileRecovery', 'WorkloadRecovery'
   */
  recoveryMode?: RecoveryMode;
  /**
   * Default option set to true. If this is set to false, alternate data directory must be provided
   */
  shouldUseAlternateTargetLocation?: boolean;
  /**
   * SQL specific property where user can chose to set no-recovery when restore operation is tried
   */
  isNonRecoverable?: boolean;
  /**
   * Data directory details
   */
  alternateDirectoryPaths?: SQLDataDirectoryMapping[];
  /**
   * PointInTime value
   */
  pointInTime?: Date;
}

/**
 * SQLDataDirectory info
 */
export interface SQLDataDirectory {
  /**
   * Type of data directory mapping. Possible values include: 'Invalid', 'Data', 'Log'
   */
  type?: SQLDataDirectoryType;
  /**
   * File path
   */
  path?: string;
  /**
   * Logical name of the file
   */
  logicalName?: string;
}

/**
 * Extended info class details
 */
export interface AzureWorkloadSQLRecoveryPointExtendedInfo {
  /**
   * UTC time at which data directory info was captured
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataDirectoryTimeInUTC?: Date;
  /**
   * List of data directory paths during restore operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataDirectoryPaths?: SQLDataDirectory[];
}

/**
 * Encapsulates information regarding data directory
 */
export interface SQLDataDirectoryMapping {
  /**
   * Type of data directory mapping. Possible values include: 'Invalid', 'Data', 'Log'
   */
  mappingType?: SQLDataDirectoryType;
  /**
   * Restore source logical name path
   */
  sourceLogicalName?: string;
  /**
   * Restore source path
   */
  sourcePath?: string;
  /**
   * Target path
   */
  targetPath?: string;
}

/**
 * Backup resource vault config details.
 */
export interface BackupResourceVaultConfig {
  /**
   * Storage type. Possible values include: 'Invalid', 'GeoRedundant', 'LocallyRedundant'
   */
  storageModelType?: StorageType;
  /**
   * Storage type. Possible values include: 'Invalid', 'GeoRedundant', 'LocallyRedundant'
   */
  storageType?: StorageType;
  /**
   * Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is
   * always Locked. Possible values include: 'Invalid', 'Locked', 'Unlocked'
   */
  storageTypeState?: StorageTypeState;
  /**
   * Enabled or Disabled. Possible values include: 'Invalid', 'Enabled', 'Disabled'
   */
  enhancedSecurityState?: EnhancedSecurityState;
  /**
   * Soft Delete feature state. Possible values include: 'Invalid', 'Enabled', 'Disabled'
   */
  softDeleteFeatureState?: SoftDeleteFeatureState;
}

/**
 * Backup resource vault config details.
 */
export interface BackupResourceVaultConfigResource extends Resource {
  /**
   * BackupResourceVaultConfigResource properties
   */
  properties?: BackupResourceVaultConfig;
}

/**
 * BEK is bitlocker encryption key.
 */
export interface BEKDetails {
  /**
   * Secret is BEK.
   */
  secretUrl?: string;
  /**
   * ID of the Key Vault where this Secret is stored.
   */
  secretVaultId?: string;
  /**
   * BEK data.
   */
  secretData?: string;
}

/**
 * Filters to list backup copies.
 */
export interface BMSRPQueryObject {
  /**
   * Backup copies created after this time.
   */
  startDate?: Date;
  /**
   * Backup copies created before this time.
   */
  endDate?: Date;
  /**
   * RestorePoint type. Possible values include: 'Invalid', 'Full', 'Log', 'Differential',
   * 'FullAndDifferential', 'All'
   */
  restorePointQueryType?: RestorePointQueryType;
  /**
   * In Get Recovery Point, it tells whether extended information about recovery point is asked.
   */
  extendedInfo?: boolean;
}

/**
 * Disk information
 */
export interface DiskInformation {
  lun?: number;
  name?: string;
}

/**
 * Day of the week.
 */
export interface Day {
  /**
   * Date of the month
   */
  date?: number;
  /**
   * Whether Date is last date of month
   */
  isLast?: boolean;
}

/**
 * Daily retention format.
 */
export interface DailyRetentionFormat {
  /**
   * List of days of the month.
   */
  daysOfTheMonth?: Day[];
}

/**
 * Retention duration.
 */
export interface RetentionDuration {
  /**
   * Count of duration types. Retention duration is obtained by the counting the duration type
   * Count times.
   * For example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks.
   */
  count?: number;
  /**
   * Retention duration type of retention policy. Possible values include: 'Invalid', 'Days',
   * 'Weeks', 'Months', 'Years'
   */
  durationType?: RetentionDurationType;
}

/**
 * Daily retention schedule.
 */
export interface DailyRetentionSchedule {
  /**
   * Retention times of retention policy.
   */
  retentionTimes?: Date[] | string[];
  /**
   * Retention duration of retention Policy.
   */
  retentionDuration?: RetentionDuration;
}

/**
 * DPM workload-specific error information.
 */
export interface DpmErrorInfo {
  /**
   * Localized error string.
   */
  errorString?: string;
  /**
   * List of localized recommendations for above error code.
   */
  recommendations?: string[];
}

/**
 * DPM workload-specific job task details.
 */
export interface DpmJobTaskDetails {
  /**
   * The task display name.
   */
  taskId?: string;
  /**
   * The start time.
   */
  startTime?: Date;
  /**
   * The end time.
   */
  endTime?: Date;
  /**
   * Time elapsed for task.
   */
  duration?: string;
  /**
   * The status.
   */
  status?: string;
}

/**
 * Additional information on the DPM workload-specific job.
 */
export interface DpmJobExtendedInfo {
  /**
   * List of tasks associated with this job.
   */
  tasksList?: DpmJobTaskDetails[];
  /**
   * The job properties.
   */
  propertyBag?: { [propertyName: string]: string };
  /**
   * Non localized error message on job execution.
   */
  dynamicErrorMessage?: string;
}

/**
 * DPM workload-specific job object.
 */
export interface DpmJob {
  /**
   * Polymorphic Discriminator
   */
  jobType: "DpmJob";
  /**
   * Friendly name of the entity on which the current job is executing.
   */
  entityFriendlyName?: string;
  /**
   * Backup management type to execute the current job. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * The operation name.
   */
  operation?: string;
  /**
   * Job status.
   */
  status?: string;
  /**
   * The start time.
   */
  startTime?: Date;
  /**
   * The end time.
   */
  endTime?: Date;
  /**
   * ActivityId of job.
   */
  activityId?: string;
  /**
   * Time elapsed for job.
   */
  duration?: string;
  /**
   * DPM server name managing the backup item or backup job.
   */
  dpmServerName?: string;
  /**
   * Name of cluster/server protecting current backup item, if any.
   */
  containerName?: string;
  /**
   * Type of container.
   */
  containerType?: string;
  /**
   * Type of backup item.
   */
  workloadType?: string;
  /**
   * The state/actions applicable on this job like cancel/retry.
   */
  actionsInfo?: JobSupportedAction[];
  /**
   * The errors.
   */
  errorDetails?: DpmErrorInfo[];
  /**
   * Additional information for this job.
   */
  extendedInfo?: DpmJobExtendedInfo;
}

/**
 * Additional information of DPM Protected item.
 */
export interface DPMProtectedItemExtendedInfo {
  /**
   * Attribute to provide information on various DBs.
   */
  protectableObjectLoadPath?: { [propertyName: string]: string };
  /**
   * To check if backup item is disk protected.
   */
  protectedProperty?: boolean;
  /**
   * To check if backup item is cloud protected.
   */
  isPresentOnCloud?: boolean;
  /**
   * Last backup status information on backup item.
   */
  lastBackupStatus?: string;
  /**
   * Last refresh time on backup item.
   */
  lastRefreshedAt?: Date;
  /**
   * Oldest cloud recovery point time.
   */
  oldestRecoveryPoint?: Date;
  /**
   * cloud recovery point count.
   */
  recoveryPointCount?: number;
  /**
   * Oldest disk recovery point time.
   */
  onPremiseOldestRecoveryPoint?: Date;
  /**
   * latest disk recovery point time.
   */
  onPremiseLatestRecoveryPoint?: Date;
  /**
   * disk recovery point count.
   */
  onPremiseRecoveryPointCount?: number;
  /**
   * To check if backup item is collocated.
   */
  isCollocated?: boolean;
  /**
   * Protection group name of the backup item.
   */
  protectionGroupName?: string;
  /**
   * Used Disk storage in bytes.
   */
  diskStorageUsedInBytes?: string;
  /**
   * total Disk storage in bytes.
   */
  totalDiskStorageSizeInBytes?: string;
}

/**
 * Additional information on Backup engine specific backup item.
 */
export interface DPMProtectedItem {
  /**
   * Polymorphic Discriminator
   */
  protectedItemType: "DPMProtectedItem";
  /**
   * Type of backup management for the backed up item. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Type of workload this item represents. Possible values include: 'Invalid', 'VM', 'FileFolder',
   * 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
   * 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase', 'SAPAseDatabase'
   */
  workloadType?: DataSourceType;
  /**
   * Unique name of container
   */
  containerName?: string;
  /**
   * ARM ID of the resource to be backed up.
   */
  sourceResourceId?: string;
  /**
   * ID of the backup policy with which this item is backed up.
   */
  policyId?: string;
  /**
   * Timestamp when the last (latest) backup copy was created for this backup item.
   */
  lastRecoveryPoint?: Date;
  /**
   * Name of the backup set the backup item belongs to
   */
  backupSetName?: string;
  /**
   * Create mode to indicate recovery of existing soft deleted data source or creation of new data
   * source. Possible values include: 'Invalid', 'Default', 'Recover'
   */
  createMode?: CreateMode;
  /**
   * Time for deferred deletion in UTC
   */
  deferredDeleteTimeInUTC?: Date;
  /**
   * Flag to identify whether the DS is scheduled for deferred delete
   */
  isScheduledForDeferredDelete?: boolean;
  /**
   * Time remaining before the DS marked for deferred delete is permanently deleted
   */
  deferredDeleteTimeRemaining?: string;
  /**
   * Flag to identify whether the deferred deleted DS is to be purged soon
   */
  isDeferredDeleteScheduleUpcoming?: boolean;
  /**
   * Flag to identify that deferred deleted DS is to be moved into Pause state
   */
  isRehydrate?: boolean;
  /**
   * Friendly name of the managed item
   */
  friendlyName?: string;
  /**
   * Backup Management server protecting this backup item
   */
  backupEngineName?: string;
  /**
   * Protection state of the backup engine. Possible values include: 'Invalid', 'IRPending',
   * 'Protected', 'ProtectionError', 'ProtectionStopped', 'ProtectionPaused'
   */
  protectionState?: ProtectedItemState;
  /**
   * Extended info of the backup item.
   */
  extendedInfo?: DPMProtectedItemExtendedInfo;
}

/**
 * Details needed if the VM was encrypted at the time of backup.
 */
export interface EncryptionDetails {
  /**
   * Identifies whether this backup copy represents an encrypted VM at the time of backup.
   */
  encryptionEnabled?: boolean;
  /**
   * Key Url.
   */
  kekUrl?: string;
  /**
   * Secret Url.
   */
  secretKeyUrl?: string;
  /**
   * ID of Key Vault where KEK is stored.
   */
  kekVaultId?: string;
  /**
   * ID of Key Vault where Secret is stored.
   */
  secretKeyVaultId?: string;
}

/**
 * Contains the possible cases for OperationResultInfoBase.
 */
export type OperationResultInfoBaseUnion = OperationResultInfoBase | ExportJobsOperationResultInfo | OperationResultInfo;

/**
 * Base class for operation result info.
 */
export interface OperationResultInfoBase {
  /**
   * Polymorphic Discriminator
   */
  objectType: "OperationResultInfoBase";
}

/**
 * This class is used to send blob details after exporting jobs.
 */
export interface ExportJobsOperationResultInfo {
  /**
   * Polymorphic Discriminator
   */
  objectType: "ExportJobsOperationResultInfo";
  /**
   * URL of the blob into which the serialized string of list of jobs is exported.
   */
  blobUrl?: string;
  /**
   * SAS key to access the blob. It expires in 15 mins.
   */
  blobSasKey?: string;
  /**
   * URL of the blob into which the ExcelFile is uploaded.
   */
  excelFileBlobUrl?: string;
  /**
   * SAS key to access the blob. It expires in 15 mins.
   */
  excelFileBlobSasKey?: string;
}

/**
 * Azure VM (Mercury) workload-specific backup policy.
 */
export interface GenericProtectionPolicy {
  /**
   * Polymorphic Discriminator
   */
  backupManagementType: "GenericProtectionPolicy";
  /**
   * Number of items associated with this policy.
   */
  protectedItemsCount?: number;
  /**
   * List of sub-protection policies which includes schedule and retention
   */
  subProtectionPolicy?: SubProtectionPolicy[];
  /**
   * TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
   */
  timeZone?: string;
  /**
   * Name of this policy's fabric.
   */
  fabricName?: string;
}

/**
 * Base class for backup items.
 */
export interface GenericProtectedItem {
  /**
   * Polymorphic Discriminator
   */
  protectedItemType: "GenericProtectedItem";
  /**
   * Type of backup management for the backed up item. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Type of workload this item represents. Possible values include: 'Invalid', 'VM', 'FileFolder',
   * 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
   * 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase', 'SAPAseDatabase'
   */
  workloadType?: DataSourceType;
  /**
   * Unique name of container
   */
  containerName?: string;
  /**
   * ARM ID of the resource to be backed up.
   */
  sourceResourceId?: string;
  /**
   * ID of the backup policy with which this item is backed up.
   */
  policyId?: string;
  /**
   * Timestamp when the last (latest) backup copy was created for this backup item.
   */
  lastRecoveryPoint?: Date;
  /**
   * Name of the backup set the backup item belongs to
   */
  backupSetName?: string;
  /**
   * Create mode to indicate recovery of existing soft deleted data source or creation of new data
   * source. Possible values include: 'Invalid', 'Default', 'Recover'
   */
  createMode?: CreateMode;
  /**
   * Time for deferred deletion in UTC
   */
  deferredDeleteTimeInUTC?: Date;
  /**
   * Flag to identify whether the DS is scheduled for deferred delete
   */
  isScheduledForDeferredDelete?: boolean;
  /**
   * Time remaining before the DS marked for deferred delete is permanently deleted
   */
  deferredDeleteTimeRemaining?: string;
  /**
   * Flag to identify whether the deferred deleted DS is to be purged soon
   */
  isDeferredDeleteScheduleUpcoming?: boolean;
  /**
   * Flag to identify that deferred deleted DS is to be moved into Pause state
   */
  isRehydrate?: boolean;
  /**
   * Friendly name of the container.
   */
  friendlyName?: string;
  /**
   * Indicates consistency of policy object and policy applied to this backup item.
   */
  policyState?: string;
  /**
   * Backup state of this backup item. Possible values include: 'Invalid', 'IRPending',
   * 'Protected', 'ProtectionError', 'ProtectionStopped', 'ProtectionPaused'
   */
  protectionState?: ProtectionState;
  /**
   * Data Plane Service ID of the protected item.
   */
  protectedItemId?: number;
  /**
   * Loosely coupled (type, value) associations (example - parent of a protected item)
   */
  sourceAssociations?: { [propertyName: string]: string };
  /**
   * Name of this backup item's fabric.
   */
  fabricName?: string;
}

/**
 * Generic backup copy.
 */
export interface GenericRecoveryPoint {
  /**
   * Polymorphic Discriminator
   */
  objectType: "GenericRecoveryPoint";
  /**
   * Friendly name of the backup copy.
   */
  friendlyName?: string;
  /**
   * Type of the backup copy.
   */
  recoveryPointType?: string;
  /**
   * Time at which this backup copy was created.
   */
  recoveryPointTime?: Date;
  /**
   * Additional information associated with this backup copy.
   */
  recoveryPointAdditionalInfo?: string;
}

/**
 * Filters to list backup items.
 */
export interface GetProtectedItemQueryObject {
  /**
   * Specifies if the additional information should be provided for this item.
   */
  expand?: string;
}

/**
 * KEK is encryption key for BEK.
 */
export interface KEKDetails {
  /**
   * Key is KEK.
   */
  keyUrl?: string;
  /**
   * Key Vault ID where this Key is stored.
   */
  keyVaultId?: string;
  /**
   * KEK data.
   */
  keyBackupData?: string;
}

/**
 * BEK is bitlocker key.
 * KEK is encryption key for BEK
 * If the VM was encrypted then we will store following details :
 * 1. Secret(BEK) - Url + Backup Data + vaultId.
 * 2. Key(KEK) - Url + Backup Data + vaultId.
 * 3. EncryptionMechanism
 * BEK and KEK can potentially have different vault ids.
 */
export interface KeyAndSecretDetails {
  /**
   * KEK is encryption key for BEK.
   */
  kekDetails?: KEKDetails;
  /**
   * BEK is bitlocker encryption key.
   */
  bekDetails?: BEKDetails;
  /**
   * Encryption mechanism: None/ SinglePass/ DoublePass
   */
  encryptionMechanism?: string;
}

/**
 * Recovery point tier information.
 */
export interface RecoveryPointTierInformation {
  /**
   * Recovery point tier type. Possible values include: 'Invalid', 'InstantRP', 'HardenedRP'
   */
  type?: RecoveryPointTierType;
  /**
   * Recovery point tier status. Possible values include: 'Invalid', 'Valid', 'Disabled', 'Deleted'
   */
  status?: RecoveryPointTierStatus;
}

/**
 * Disk configuration
 */
export interface RecoveryPointDiskConfiguration {
  /**
   * Number of disks included in backup
   */
  numberOfDisksIncludedInBackup?: number;
  /**
   * Number of disks attached to the VM
   */
  numberOfDisksAttachedToVm?: number;
  /**
   * Information of disks included in backup
   */
  includedDiskList?: DiskInformation[];
  /**
   * Information of disks excluded from backup
   */
  excludedDiskList?: DiskInformation[];
}

/**
 * IaaS VM workload specific backup copy.
 */
export interface IaasVMRecoveryPoint {
  /**
   * Polymorphic Discriminator
   */
  objectType: "IaasVMRecoveryPoint";
  /**
   * Type of the backup copy.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recoveryPointType?: string;
  /**
   * Time at which this backup copy was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recoveryPointTime?: Date;
  /**
   * Additional information associated with this backup copy.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recoveryPointAdditionalInfo?: string;
  /**
   * Storage type of the VM whose backup copy is created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sourceVMStorageType?: string;
  /**
   * Identifies whether the VM was encrypted when the backup copy is created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isSourceVMEncrypted?: boolean;
  /**
   * Required details for recovering an encrypted VM. Applicable only when IsSourceVMEncrypted is
   * true.
   */
  keyAndSecret?: KeyAndSecretDetails;
  /**
   * Is the session to recover items from this backup copy still active.
   */
  isInstantIlrSessionActive?: boolean;
  /**
   * Recovery point tier information.
   */
  recoveryPointTierDetails?: RecoveryPointTierInformation[];
  /**
   * Whether VM is with Managed Disks
   */
  isManagedVirtualMachine?: boolean;
  /**
   * Virtual Machine Size
   */
  virtualMachineSize?: string;
  /**
   * Original Storage Account Option
   */
  originalStorageAccountOption?: boolean;
  /**
   * OS type
   */
  osType?: string;
  /**
   * Disk configuration
   */
  recoveryPointDiskConfiguration?: RecoveryPointDiskConfiguration;
}

/**
 * IaaS VM workload-specific restore.
 */
export interface IaasVMRestoreRequest {
  /**
   * Polymorphic Discriminator
   */
  objectType: "IaasVMRestoreRequest";
  /**
   * ID of the backup copy to be recovered.
   */
  recoveryPointId?: string;
  /**
   * Type of this recovery. Possible values include: 'Invalid', 'OriginalLocation',
   * 'AlternateLocation', 'RestoreDisks', 'Offline'
   */
  recoveryType?: RecoveryType;
  /**
   * Fully qualified ARM ID of the VM which is being recovered.
   */
  sourceResourceId?: string;
  /**
   * This is the complete ARM Id of the VM that will be created.
   * For e.g.
   * /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}
   */
  targetVirtualMachineId?: string;
  /**
   * This is the ARM Id of the resource group that you want to create for this Virtual machine and
   * other artifacts.
   * For e.g. /subscriptions/{subId}/resourcegroups/{rg}
   */
  targetResourceGroupId?: string;
  /**
   * Fully qualified ARM ID of the storage account to which the VM has to be restored.
   */
  storageAccountId?: string;
  /**
   * This is the virtual network Id of the vnet that will be attached to the virtual machine.
   * User will be validated for join action permissions in the linked access.
   */
  virtualNetworkId?: string;
  /**
   * Subnet ID, is the subnet ID associated with the to be restored VM. For Classic VMs it would be
   * {VnetID}/Subnet/{SubnetName} and, for the Azure Resource Manager VMs it would be ARM resource
   * ID used to represent
   * the subnet.
   */
  subnetId?: string;
  /**
   * Fully qualified ARM ID of the domain name to be associated to the VM being restored. This
   * applies only to Classic
   * Virtual Machines.
   */
  targetDomainNameId?: string;
  /**
   * Region in which the virtual machine is restored.
   */
  region?: string;
  /**
   * Affinity group associated to VM to be restored. Used only for Classic Compute Virtual
   * Machines.
   */
  affinityGroup?: string;
  /**
   * Should a new cloud service be created while restoring the VM. If this is false, VM will be
   * restored to the same
   * cloud service as it was at the time of backup.
   */
  createNewCloudService?: boolean;
  /**
   * Original Storage Account Option
   */
  originalStorageAccountOption?: boolean;
  /**
   * Details needed if the VM was encrypted at the time of backup.
   */
  encryptionDetails?: EncryptionDetails;
  /**
   * List of Disk LUNs for partial restore
   */
  restoreDiskLunList?: number[];
}

/**
 * Filters to list the jobs.
 */
export interface JobQueryObject {
  /**
   * Status of the job. Possible values include: 'Invalid', 'InProgress', 'Completed', 'Failed',
   * 'CompletedWithWarnings', 'Cancelled', 'Cancelling'
   */
  status?: JobStatus;
  /**
   * Type of backup management for the job. Possible values include: 'Invalid', 'AzureIaasVM',
   * 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Type of operation. Possible values include: 'Invalid', 'Register', 'UnRegister',
   * 'ConfigureBackup', 'Backup', 'Restore', 'DisableBackup', 'DeleteBackupData',
   * 'CrossRegionRestore', 'Undelete'
   */
  operation?: JobOperationType;
  /**
   * JobID represents the job uniquely.
   */
  jobId?: string;
  /**
   * Job has started at this time. Value is in UTC.
   */
  startTime?: Date;
  /**
   * Job has ended at this time. Value is in UTC.
   */
  endTime?: Date;
}

/**
 * Defines workload agnostic properties for a job.
 */
export interface JobResource extends Resource {
  /**
   * JobResource properties
   */
  properties?: JobUnion;
}

/**
 * Log policy schedule.
 */
export interface LogSchedulePolicy {
  /**
   * Polymorphic Discriminator
   */
  schedulePolicyType: "LogSchedulePolicy";
  /**
   * Frequency of the log schedule operation of this policy in minutes.
   */
  scheduleFrequencyInMins?: number;
}

/**
 * Weekly retention schedule.
 */
export interface WeeklyRetentionSchedule {
  /**
   * List of days of week for weekly retention policy.
   */
  daysOfTheWeek?: DayOfWeek[];
  /**
   * Retention times of retention policy.
   */
  retentionTimes?: Date[] | string[];
  /**
   * Retention duration of retention Policy.
   */
  retentionDuration?: RetentionDuration;
}

/**
 * Weekly retention format.
 */
export interface WeeklyRetentionFormat {
  /**
   * List of days of the week.
   */
  daysOfTheWeek?: DayOfWeek[];
  /**
   * List of weeks of month.
   */
  weeksOfTheMonth?: WeekOfMonth[];
}

/**
 * Monthly retention schedule.
 */
export interface MonthlyRetentionSchedule {
  /**
   * Retention schedule format type for monthly retention policy. Possible values include:
   * 'Invalid', 'Daily', 'Weekly'
   */
  retentionScheduleFormatType?: RetentionScheduleFormat;
  /**
   * Daily retention format for monthly retention policy.
   */
  retentionScheduleDaily?: DailyRetentionFormat;
  /**
   * Weekly retention format for monthly retention policy.
   */
  retentionScheduleWeekly?: WeeklyRetentionFormat;
  /**
   * Retention times of retention policy.
   */
  retentionTimes?: Date[] | string[];
  /**
   * Retention duration of retention Policy.
   */
  retentionDuration?: RetentionDuration;
}

/**
 * Yearly retention schedule.
 */
export interface YearlyRetentionSchedule {
  /**
   * Retention schedule format for yearly retention policy. Possible values include: 'Invalid',
   * 'Daily', 'Weekly'
   */
  retentionScheduleFormatType?: RetentionScheduleFormat;
  /**
   * List of months of year of yearly retention policy.
   */
  monthsOfYear?: MonthOfYear[];
  /**
   * Daily retention format for yearly retention policy.
   */
  retentionScheduleDaily?: DailyRetentionFormat;
  /**
   * Weekly retention format for yearly retention policy.
   */
  retentionScheduleWeekly?: WeeklyRetentionFormat;
  /**
   * Retention times of retention policy.
   */
  retentionTimes?: Date[] | string[];
  /**
   * Retention duration of retention Policy.
   */
  retentionDuration?: RetentionDuration;
}

/**
 * Long term retention policy.
 */
export interface LongTermRetentionPolicy {
  /**
   * Polymorphic Discriminator
   */
  retentionPolicyType: "LongTermRetentionPolicy";
  /**
   * Daily retention schedule of the protection policy.
   */
  dailySchedule?: DailyRetentionSchedule;
  /**
   * Weekly retention schedule of the protection policy.
   */
  weeklySchedule?: WeeklyRetentionSchedule;
  /**
   * Monthly retention schedule of the protection policy.
   */
  monthlySchedule?: MonthlyRetentionSchedule;
  /**
   * Yearly retention schedule of the protection policy.
   */
  yearlySchedule?: YearlyRetentionSchedule;
}

/**
 * Long term policy schedule.
 */
export interface LongTermSchedulePolicy {
  /**
   * Polymorphic Discriminator
   */
  schedulePolicyType: "LongTermSchedulePolicy";
}

/**
 * MAB workload-specific error information.
 */
export interface MabErrorInfo {
  /**
   * Localized error string.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorString?: string;
  /**
   * List of localized recommendations.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recommendations?: string[];
}

/**
 * Additional information on the backed up item.
 */
export interface MabFileFolderProtectedItemExtendedInfo {
  /**
   * Last time when the agent data synced to service.
   */
  lastRefreshedAt?: Date;
  /**
   * The oldest backup copy available.
   */
  oldestRecoveryPoint?: Date;
  /**
   * Number of backup copies associated with the backup item.
   */
  recoveryPointCount?: number;
}

/**
 * MAB workload-specific backup item.
 */
export interface MabFileFolderProtectedItem {
  /**
   * Polymorphic Discriminator
   */
  protectedItemType: "MabFileFolderProtectedItem";
  /**
   * Type of backup management for the backed up item. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Type of workload this item represents. Possible values include: 'Invalid', 'VM', 'FileFolder',
   * 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
   * 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase', 'SAPAseDatabase'
   */
  workloadType?: DataSourceType;
  /**
   * Unique name of container
   */
  containerName?: string;
  /**
   * ARM ID of the resource to be backed up.
   */
  sourceResourceId?: string;
  /**
   * ID of the backup policy with which this item is backed up.
   */
  policyId?: string;
  /**
   * Timestamp when the last (latest) backup copy was created for this backup item.
   */
  lastRecoveryPoint?: Date;
  /**
   * Name of the backup set the backup item belongs to
   */
  backupSetName?: string;
  /**
   * Create mode to indicate recovery of existing soft deleted data source or creation of new data
   * source. Possible values include: 'Invalid', 'Default', 'Recover'
   */
  createMode?: CreateMode;
  /**
   * Time for deferred deletion in UTC
   */
  deferredDeleteTimeInUTC?: Date;
  /**
   * Flag to identify whether the DS is scheduled for deferred delete
   */
  isScheduledForDeferredDelete?: boolean;
  /**
   * Time remaining before the DS marked for deferred delete is permanently deleted
   */
  deferredDeleteTimeRemaining?: string;
  /**
   * Flag to identify whether the deferred deleted DS is to be purged soon
   */
  isDeferredDeleteScheduleUpcoming?: boolean;
  /**
   * Flag to identify that deferred deleted DS is to be moved into Pause state
   */
  isRehydrate?: boolean;
  /**
   * Friendly name of this backup item.
   */
  friendlyName?: string;
  /**
   * Name of the computer associated with this backup item.
   */
  computerName?: string;
  /**
   * Status of last backup operation.
   */
  lastBackupStatus?: string;
  /**
   * Timestamp of the last backup operation on this backup item.
   */
  lastBackupTime?: Date;
  /**
   * Protected, ProtectionStopped, IRPending or ProtectionError
   */
  protectionState?: string;
  /**
   * Sync time for deferred deletion in UTC
   */
  deferredDeleteSyncTimeInUTC?: number;
  /**
   * Additional information with this backup item.
   */
  extendedInfo?: MabFileFolderProtectedItemExtendedInfo;
}

/**
 * MAB workload-specific job task details.
 */
export interface MabJobTaskDetails {
  /**
   * The task display name.
   */
  taskId?: string;
  /**
   * The start time.
   */
  startTime?: Date;
  /**
   * The end time.
   */
  endTime?: Date;
  /**
   * Time elapsed for task.
   */
  duration?: string;
  /**
   * The status.
   */
  status?: string;
}

/**
 * Additional information for the MAB workload-specific job.
 */
export interface MabJobExtendedInfo {
  /**
   * List of tasks for this job.
   */
  tasksList?: MabJobTaskDetails[];
  /**
   * The job properties.
   */
  propertyBag?: { [propertyName: string]: string };
  /**
   * Non localized error message specific to this job.
   */
  dynamicErrorMessage?: string;
}

/**
 * MAB workload-specific job.
 */
export interface MabJob {
  /**
   * Polymorphic Discriminator
   */
  jobType: "MabJob";
  /**
   * Friendly name of the entity on which the current job is executing.
   */
  entityFriendlyName?: string;
  /**
   * Backup management type to execute the current job. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * The operation name.
   */
  operation?: string;
  /**
   * Job status.
   */
  status?: string;
  /**
   * The start time.
   */
  startTime?: Date;
  /**
   * The end time.
   */
  endTime?: Date;
  /**
   * ActivityId of job.
   */
  activityId?: string;
  /**
   * Time taken by job to run.
   */
  duration?: string;
  /**
   * The state/actions applicable on jobs like cancel/retry.
   */
  actionsInfo?: JobSupportedAction[];
  /**
   * Name of server protecting the DS.
   */
  mabServerName?: string;
  /**
   * Server type of MAB container. Possible values include: 'Invalid', 'Unknown',
   * 'IaasVMContainer', 'IaasVMServiceContainer', 'DPMContainer', 'AzureBackupServerContainer',
   * 'MABContainer', 'Cluster', 'AzureSqlContainer', 'Windows', 'VCenter', 'VMAppContainer',
   * 'SQLAGWorkLoadContainer', 'StorageContainer', 'GenericContainer'
   */
  mabServerType?: MabServerType;
  /**
   * Workload type of backup item. Possible values include: 'Invalid', 'VM', 'FileFolder',
   * 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
   * 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase', 'SAPAseDatabase'
   */
  workloadType?: WorkloadType;
  /**
   * The errors.
   */
  errorDetails?: MabErrorInfo[];
  /**
   * Additional information on the job.
   */
  extendedInfo?: MabJobExtendedInfo;
}

/**
 * Mab container-specific backup policy.
 */
export interface MabProtectionPolicy {
  /**
   * Polymorphic Discriminator
   */
  backupManagementType: "MAB";
  /**
   * Number of items associated with this policy.
   */
  protectedItemsCount?: number;
  /**
   * Backup schedule of backup policy.
   */
  schedulePolicy?: SchedulePolicyUnion;
  /**
   * Retention policy details.
   */
  retentionPolicy?: RetentionPolicyUnion;
}

/**
 * Operation result info.
 */
export interface OperationResultInfo {
  /**
   * Polymorphic Discriminator
   */
  objectType: "OperationResultInfo";
  /**
   * List of jobs created by this operation.
   */
  jobList?: string[];
}

/**
 * This is the base class for operation result responses.
 */
export interface OperationWorkerResponse {
  /**
   * HTTP Status Code of the operation. Possible values include: 'Continue', 'SwitchingProtocols',
   * 'OK', 'Created', 'Accepted', 'NonAuthoritativeInformation', 'NoContent', 'ResetContent',
   * 'PartialContent', 'MultipleChoices', 'Ambiguous', 'MovedPermanently', 'Moved', 'Found',
   * 'Redirect', 'SeeOther', 'RedirectMethod', 'NotModified', 'UseProxy', 'Unused',
   * 'TemporaryRedirect', 'RedirectKeepVerb', 'BadRequest', 'Unauthorized', 'PaymentRequired',
   * 'Forbidden', 'NotFound', 'MethodNotAllowed', 'NotAcceptable', 'ProxyAuthenticationRequired',
   * 'RequestTimeout', 'Conflict', 'Gone', 'LengthRequired', 'PreconditionFailed',
   * 'RequestEntityTooLarge', 'RequestUriTooLong', 'UnsupportedMediaType',
   * 'RequestedRangeNotSatisfiable', 'ExpectationFailed', 'UpgradeRequired', 'InternalServerError',
   * 'NotImplemented', 'BadGateway', 'ServiceUnavailable', 'GatewayTimeout',
   * 'HttpVersionNotSupported'
   */
  statusCode?: HttpStatusCode;
  /**
   * HTTP headers associated with this operation.
   */
  headers?: { [propertyName: string]: string[] };
}

/**
 * Base class for operation result info.
 */
export interface OperationResultInfoBaseResource extends OperationWorkerResponse {
  /**
   * OperationResultInfoBaseResource operation
   */
  operation?: OperationResultInfoBaseUnion;
}

/**
 * Filters to list backup items.
 */
export interface ProtectedItemQueryObject {
  /**
   * Health State for the backed up item. Possible values include: 'Passed', 'ActionRequired',
   * 'ActionSuggested', 'Invalid'
   */
  healthState?: HealthState;
  /**
   * Backup management type for the backed up item. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Type of workload this item represents. Possible values include: 'Invalid', 'VM', 'FileFolder',
   * 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
   * 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase', 'SAPAseDatabase'
   */
  itemType?: DataSourceType;
  /**
   * Backup policy name associated with the backup item.
   */
  policyName?: string;
  /**
   * Name of the container.
   */
  containerName?: string;
  /**
   * Backup Engine name
   */
  backupEngineName?: string;
  /**
   * Friendly name of protected item
   */
  friendlyName?: string;
  /**
   * Name of the fabric.
   */
  fabricName?: string;
  /**
   * Name of the backup set.
   */
  backupSetName?: string;
}

/**
 * Base class for backup items.
 */
export interface ProtectedItemResource extends Resource {
  /**
   * ProtectedItemResource properties
   */
  properties?: ProtectedItemUnion;
}

/**
 * Filters the list backup policies API.
 */
export interface ProtectionPolicyQueryObject {
  /**
   * Backup management type for the backup policy. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Fabric name for filter
   */
  fabricName?: string;
  /**
   * Workload type for the backup policy. Possible values include: 'Invalid', 'VM', 'FileFolder',
   * 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
   * 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase', 'SAPAseDatabase'
   */
  workloadType?: WorkloadType;
}

/**
 * Base class for backup policy. Workload-specific backup policies are derived from this class.
 */
export interface ProtectionPolicyResource extends Resource {
  /**
   * ProtectionPolicyResource properties
   */
  properties?: ProtectionPolicyUnion;
}

/**
 * Base class for backup copies. Workload-specific backup copies are derived from this class.
 */
export interface RecoveryPointResource extends Resource {
  /**
   * RecoveryPointResource properties
   */
  properties?: RecoveryPointUnion;
}

/**
 * Base for all lists of resources.
 */
export interface ResourceList {
  /**
   * The uri to fetch the next page of resources. Call ListNext() fetches next page of resources.
   */
  nextLink?: string;
}

/**
 * Base class for restore request. Workload-specific restore requests are derived from this class.
 */
export interface RestoreRequestResource extends Resource {
  /**
   * RestoreRequestResource properties
   */
  properties?: RestoreRequestUnion;
}

/**
 * Simple policy retention.
 */
export interface SimpleRetentionPolicy {
  /**
   * Polymorphic Discriminator
   */
  retentionPolicyType: "SimpleRetentionPolicy";
  /**
   * Retention duration of the protection policy.
   */
  retentionDuration?: RetentionDuration;
}

/**
 * Simple policy schedule.
 */
export interface SimpleSchedulePolicy {
  /**
   * Polymorphic Discriminator
   */
  schedulePolicyType: "SimpleSchedulePolicy";
  /**
   * Frequency of the schedule operation of this policy. Possible values include: 'Invalid',
   * 'Daily', 'Weekly'
   */
  scheduleRunFrequency?: ScheduleRunType;
  /**
   * List of days of week this schedule has to be run.
   */
  scheduleRunDays?: DayOfWeek[];
  /**
   * List of times of day this schedule has to be run.
   */
  scheduleRunTimes?: Date[] | string[];
  /**
   * At every number weeks this schedule has to be run.
   */
  scheduleWeeklyFrequency?: number;
}

/**
 * Contains the possible cases for ValidateOperationRequest.
 */
export type ValidateOperationRequestUnion = ValidateOperationRequest | ValidateRestoreOperationRequestUnion;

/**
 * Base class for validate operation request.
 */
export interface ValidateOperationRequest {
  /**
   * Polymorphic Discriminator
   */
  objectType: "ValidateOperationRequest";
}

/**
 * Contains the possible cases for ValidateRestoreOperationRequest.
 */
export type ValidateRestoreOperationRequestUnion = ValidateRestoreOperationRequest | ValidateIaasVMRestoreOperationRequest;

/**
 * AzureRestoreValidation request.
 */
export interface ValidateRestoreOperationRequest {
  /**
   * Polymorphic Discriminator
   */
  objectType: "ValidateRestoreOperationRequest";
  /**
   * Sets restore request to be validated
   */
  restoreRequest?: RestoreRequestUnion;
}

/**
 * AzureRestoreValidation request.
 */
export interface ValidateIaasVMRestoreOperationRequest {
  /**
   * Polymorphic Discriminator
   */
  objectType: "ValidateIaasVMRestoreOperationRequest";
  /**
   * Sets restore request to be validated
   */
  restoreRequest?: RestoreRequestUnion;
}

/**
 * Base class for validate operation response.
 */
export interface ValidateOperationResponse {
  /**
   * Gets the validation result
   */
  validationResults?: ErrorDetail[];
}

/**
 * An interface representing ValidateOperationsResponse.
 */
export interface ValidateOperationsResponse {
  validateOperationResponse?: ValidateOperationResponse;
}

/**
 * Contains the possible cases for FeatureSupportRequest.
 */
export type FeatureSupportRequestUnion = FeatureSupportRequest | AzureBackupGoalFeatureSupportRequest | AzureVMResourceFeatureSupportRequest;

/**
 * Base class for feature request
 */
export interface FeatureSupportRequest {
  /**
   * Polymorphic Discriminator
   */
  featureType: "FeatureSupportRequest";
}

/**
 * Azure backup goal feature specific request.
 */
export interface AzureBackupGoalFeatureSupportRequest {
  /**
   * Polymorphic Discriminator
   */
  featureType: "AzureBackupGoals";
}

/**
 * Contains the possible cases for ProtectionIntent.
 */
export type ProtectionIntentUnion = ProtectionIntent | AzureRecoveryServiceVaultProtectionIntentUnion | AzureResourceProtectionIntent;

/**
 * Base class for backup ProtectionIntent.
 */
export interface ProtectionIntent {
  /**
   * Polymorphic Discriminator
   */
  protectionIntentItemType: "ProtectionIntent";
  /**
   * Type of backup management for the backed up item. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * ARM ID of the resource to be backed up.
   */
  sourceResourceId?: string;
  /**
   * ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
   */
  itemId?: string;
  /**
   * ID of the backup policy with which this item is backed up.
   */
  policyId?: string;
  /**
   * Backup state of this backup item. Possible values include: 'Invalid', 'NotProtected',
   * 'Protecting', 'Protected', 'ProtectionFailed'
   */
  protectionState?: ProtectionStatus;
}

/**
 * Contains the possible cases for AzureRecoveryServiceVaultProtectionIntent.
 */
export type AzureRecoveryServiceVaultProtectionIntentUnion = AzureRecoveryServiceVaultProtectionIntent | AzureWorkloadAutoProtectionIntentUnion;

/**
 * Azure Recovery Services Vault specific protection intent item.
 */
export interface AzureRecoveryServiceVaultProtectionIntent {
  /**
   * Polymorphic Discriminator
   */
  protectionIntentItemType: "RecoveryServiceVaultItem";
  /**
   * Type of backup management for the backed up item. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * ARM ID of the resource to be backed up.
   */
  sourceResourceId?: string;
  /**
   * ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
   */
  itemId?: string;
  /**
   * ID of the backup policy with which this item is backed up.
   */
  policyId?: string;
  /**
   * Backup state of this backup item. Possible values include: 'Invalid', 'NotProtected',
   * 'Protecting', 'Protected', 'ProtectionFailed'
   */
  protectionState?: ProtectionStatus;
}

/**
 * IaaS VM specific backup protection intent item.
 */
export interface AzureResourceProtectionIntent {
  /**
   * Polymorphic Discriminator
   */
  protectionIntentItemType: "AzureResourceItem";
  /**
   * Type of backup management for the backed up item. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * ARM ID of the resource to be backed up.
   */
  sourceResourceId?: string;
  /**
   * ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
   */
  itemId?: string;
  /**
   * ID of the backup policy with which this item is backed up.
   */
  policyId?: string;
  /**
   * Backup state of this backup item. Possible values include: 'Invalid', 'NotProtected',
   * 'Protecting', 'Protected', 'ProtectionFailed'
   */
  protectionState?: ProtectionStatus;
  /**
   * Friendly name of the VM represented by this backup item.
   */
  friendlyName?: string;
}

/**
 * AzureResource(IaaS VM) Specific feature support request
 */
export interface AzureVMResourceFeatureSupportRequest {
  /**
   * Polymorphic Discriminator
   */
  featureType: "AzureVMResourceBackup";
  /**
   * Size of the resource: VM size(A/D series etc) in case of IaasVM
   */
  vmSize?: string;
  /**
   * SKUs (Premium/Managed etc) in case of IaasVM
   */
  vmSku?: string;
}

/**
 * Response for feature support requests for Azure IaasVm
 */
export interface AzureVMResourceFeatureSupportResponse {
  /**
   * Support status of feature. Possible values include: 'Invalid', 'Supported', 'DefaultOFF',
   * 'DefaultON', 'NotSupported'
   */
  supportStatus?: SupportStatus;
}

/**
 * Contains the possible cases for AzureWorkloadAutoProtectionIntent.
 */
export type AzureWorkloadAutoProtectionIntentUnion = AzureWorkloadAutoProtectionIntent | AzureWorkloadSQLAutoProtectionIntent;

/**
 * Azure Recovery Services Vault specific protection intent item.
 */
export interface AzureWorkloadAutoProtectionIntent {
  /**
   * Polymorphic Discriminator
   */
  protectionIntentItemType: "AzureWorkloadAutoProtectionIntent";
  /**
   * Type of backup management for the backed up item. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * ARM ID of the resource to be backed up.
   */
  sourceResourceId?: string;
  /**
   * ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
   */
  itemId?: string;
  /**
   * ID of the backup policy with which this item is backed up.
   */
  policyId?: string;
  /**
   * Backup state of this backup item. Possible values include: 'Invalid', 'NotProtected',
   * 'Protecting', 'Protected', 'ProtectionFailed'
   */
  protectionState?: ProtectionStatus;
}

/**
 * Azure Workload SQL Auto Protection intent item.
 */
export interface AzureWorkloadSQLAutoProtectionIntent {
  /**
   * Polymorphic Discriminator
   */
  protectionIntentItemType: "AzureWorkloadSQLAutoProtectionIntent";
  /**
   * Type of backup management for the backed up item. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * ARM ID of the resource to be backed up.
   */
  sourceResourceId?: string;
  /**
   * ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
   */
  itemId?: string;
  /**
   * ID of the backup policy with which this item is backed up.
   */
  policyId?: string;
  /**
   * Backup state of this backup item. Possible values include: 'Invalid', 'NotProtected',
   * 'Protecting', 'Protected', 'ProtectionFailed'
   */
  protectionState?: ProtectionStatus;
  /**
   * Workload item type of the item for which intent is to be set. Possible values include:
   * 'Invalid', 'SQLInstance', 'SQLDataBase', 'SAPHanaSystem', 'SAPHanaDatabase', 'SAPAseSystem',
   * 'SAPAseDatabase'
   */
  workloadItemType?: WorkloadItemType;
}

/**
 * The name of usage.
 */
export interface NameInfo {
  /**
   * Value of usage.
   */
  value?: string;
  /**
   * Localized value of usage.
   */
  localizedValue?: string;
}

/**
 * Backup management usages of a vault.
 */
export interface BackupManagementUsage {
  /**
   * Unit of the usage. Possible values include: 'Count', 'Bytes', 'Seconds', 'Percent',
   * 'CountPerSecond', 'BytesPerSecond'
   */
  unit?: UsagesUnit;
  /**
   * Quota period of usage.
   */
  quotaPeriod?: string;
  /**
   * Next reset time of usage.
   */
  nextResetTime?: Date;
  /**
   * Current value of usage.
   */
  currentValue?: number;
  /**
   * Limit of usage.
   */
  limit?: number;
  /**
   * Name of usage.
   */
  name?: NameInfo;
}

/**
 * BackupStatus request.
 */
export interface BackupStatusRequest {
  /**
   * Container Type - VM, SQLPaaS, DPM, AzureFileShare. Possible values include: 'Invalid', 'VM',
   * 'FileFolder', 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState',
   * 'Client', 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase',
   * 'SAPAseDatabase'
   */
  resourceType?: DataSourceType;
  /**
   * Entire ARM resource id of the resource
   */
  resourceId?: string;
  /**
   * Protectable Item Logical Name
   */
  poLogicalName?: string;
}

/**
 * BackupStatus response.
 */
export interface BackupStatusResponse {
  /**
   * Specifies whether the container is registered or not. Possible values include: 'Invalid',
   * 'NotProtected', 'Protecting', 'Protected', 'ProtectionFailed'
   */
  protectionStatus?: ProtectionStatus;
  /**
   * Specifies the arm resource id of the vault
   */
  vaultId?: string;
  /**
   * Specifies the fabric name - Azure or AD. Possible values include: 'Invalid', 'Azure'
   */
  fabricName?: FabricName;
  /**
   * Specifies the product specific container name. E.g.
   * iaasvmcontainer;iaasvmcontainer;csname;vmname.
   */
  containerName?: string;
  /**
   * Specifies the product specific ds name. E.g. vm;iaasvmcontainer;csname;vmname.
   */
  protectedItemName?: string;
  /**
   * ErrorCode in case of intent failed
   */
  errorCode?: string;
  /**
   * ErrorMessage in case of intent failed.
   */
  errorMessage?: string;
  /**
   * Specifies the policy name which is used for protection
   */
  policyName?: string;
  /**
   * Container registration status
   */
  registrationStatus?: string;
}

/**
 * Query parameters to fetch backup summaries.
 */
export interface BMSBackupSummariesQueryObject {
  /**
   * Backup management type for this container. Possible values include: 'Invalid',
   * 'BackupProtectedItemCountSummary', 'BackupProtectionContainerCountSummary'
   */
  type?: Type;
}

/**
 * Contract to validate if backup can be enabled on the given resource in a given vault and given
 * configuration.
 * It will validate followings
 * 1. Vault capacity
 * 2. VM is already protected
 * 3. Any VM related configuration passed in properties.
 */
export interface PreValidateEnableBackupRequest {
  /**
   * ProtectedItem Type- VM, SqlDataBase, AzureFileShare etc. Possible values include: 'Invalid',
   * 'VM', 'FileFolder', 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM',
   * 'SystemState', 'Client', 'GenericDataSource', 'SQLDataBase', 'AzureFileShare',
   * 'SAPHanaDatabase', 'SAPAseDatabase'
   */
  resourceType?: DataSourceType;
  /**
   * ARM Virtual Machine Id
   */
  resourceId?: string;
  /**
   * ARM id of the Recovery Services Vault
   */
  vaultId?: string;
  /**
   * Configuration of VM if any needs to be validated like OS type etc
   */
  properties?: string;
}

/**
 * Response contract for enable backup validation request
 */
export interface PreValidateEnableBackupResponse {
  /**
   * Validation Status. Possible values include: 'Invalid', 'Succeeded', 'Failed'
   */
  status?: ValidationStatus;
  /**
   * Response error code
   */
  errorCode?: string;
  /**
   * Response error message
   */
  errorMessage?: string;
  /**
   * Recommended action for user
   */
  recommendation?: string;
  /**
   * Specifies the product specific container name. E.g.
   * iaasvmcontainer;iaasvmcontainer;rgname;vmname. This is required
   * for portal
   */
  containerName?: string;
  /**
   * Specifies the product specific ds name. E.g. vm;iaasvmcontainer;rgname;vmname. This is
   * required for portal
   */
  protectedItemName?: string;
}

/**
 * Filters to list protection intent.
 */
export interface ProtectionIntentQueryObject {
  /**
   * Backup management type for the backed up item. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Type of workload this item represents. Possible values include: 'Invalid', 'SQLInstance',
   * 'SQLAvailabilityGroupContainer'
   */
  itemType?: IntentItemType;
  /**
   * Parent name of the intent
   */
  parentName?: string;
  /**
   * Item name of the intent
   */
  itemName?: string;
}

/**
 * Base class for backup ProtectionIntent.
 */
export interface ProtectionIntentResource extends Resource {
  /**
   * ProtectionIntentResource properties
   */
  properties?: ProtectionIntentUnion;
}

/**
 * Contains the possible cases for ProtectionContainer.
 */
export type ProtectionContainerUnion = ProtectionContainer | AzureSqlContainer | AzureStorageContainer | AzureWorkloadContainerUnion | DpmContainerUnion | GenericContainer | IaaSVMContainerUnion | MabContainer;

/**
 * Base class for container with backup items. Containers with specific workloads are derived from
 * this class.
 */
export interface ProtectionContainer {
  /**
   * Polymorphic Discriminator
   */
  containerType: "ProtectionContainer";
  /**
   * Friendly name of the container.
   */
  friendlyName?: string;
  /**
   * Type of backup management for the container. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Status of registration of the container with the Recovery Services Vault.
   */
  registrationStatus?: string;
  /**
   * Status of health of the container.
   */
  healthStatus?: string;
}

/**
 * Contains the possible cases for DpmContainer.
 */
export type DpmContainerUnion = DpmContainer | AzureBackupServerContainer;

/**
 * DPM workload-specific protection container.
 */
export interface DpmContainer {
  /**
   * Polymorphic Discriminator
   */
  containerType: "DPMContainer";
  /**
   * Friendly name of the container.
   */
  friendlyName?: string;
  /**
   * Type of backup management for the container. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Status of registration of the container with the Recovery Services Vault.
   */
  registrationStatus?: string;
  /**
   * Status of health of the container.
   */
  healthStatus?: string;
  /**
   * Specifies whether the container is re-registrable.
   */
  canReRegister?: boolean;
  /**
   * ID of container.
   */
  containerId?: string;
  /**
   * Number of protected items in the BackupEngine
   */
  protectedItemCount?: number;
  /**
   * Backup engine Agent version
   */
  dpmAgentVersion?: string;
  /**
   * List of BackupEngines protecting the container
   */
  dpmServers?: string[];
  /**
   * To check if upgrade available
   */
  upgradeAvailable?: boolean;
  /**
   * Protection status of the container.
   */
  protectionStatus?: string;
  /**
   * Extended Info of the container.
   */
  extendedInfo?: DPMContainerExtendedInfo;
}

/**
 * AzureBackupServer (DPMVenus) workload-specific protection container.
 */
export interface AzureBackupServerContainer {
  /**
   * Polymorphic Discriminator
   */
  containerType: "AzureBackupServerContainer";
  /**
   * Friendly name of the container.
   */
  friendlyName?: string;
  /**
   * Type of backup management for the container. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Status of registration of the container with the Recovery Services Vault.
   */
  registrationStatus?: string;
  /**
   * Status of health of the container.
   */
  healthStatus?: string;
  /**
   * Specifies whether the container is re-registrable.
   */
  canReRegister?: boolean;
  /**
   * ID of container.
   */
  containerId?: string;
  /**
   * Number of protected items in the BackupEngine
   */
  protectedItemCount?: number;
  /**
   * Backup engine Agent version
   */
  dpmAgentVersion?: string;
  /**
   * List of BackupEngines protecting the container
   */
  dpmServers?: string[];
  /**
   * To check if upgrade available
   */
  upgradeAvailable?: boolean;
  /**
   * Protection status of the container.
   */
  protectionStatus?: string;
  /**
   * Extended Info of the container.
   */
  extendedInfo?: DPMContainerExtendedInfo;
}

/**
 * Contains the possible cases for BackupEngineBase.
 */
export type BackupEngineBaseUnion = BackupEngineBase | AzureBackupServerEngine | DpmBackupEngine;

/**
 * The base backup engine class. All workload specific backup engines derive from this class.
 */
export interface BackupEngineBase {
  /**
   * Polymorphic Discriminator
   */
  backupEngineType: "BackupEngineBase";
  /**
   * Friendly name of the backup engine.
   */
  friendlyName?: string;
  /**
   * Type of backup management for the backup engine. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Registration status of the backup engine with the Recovery Services Vault.
   */
  registrationStatus?: string;
  /**
   * Status of the backup engine with the Recovery Services Vault. = {Active/Deleting/DeleteFailed}
   */
  backupEngineState?: string;
  /**
   * Backup status of the backup engine.
   */
  healthStatus?: string;
  /**
   * Flag indicating if the backup engine be registered, once already registered.
   */
  canReRegister?: boolean;
  /**
   * ID of the backup engine.
   */
  backupEngineId?: string;
  /**
   * Backup engine version
   */
  dpmVersion?: string;
  /**
   * Backup agent version
   */
  azureBackupAgentVersion?: string;
  /**
   * To check if backup agent upgrade available
   */
  isAzureBackupAgentUpgradeAvailable?: boolean;
  /**
   * To check if backup engine upgrade available
   */
  isDpmUpgradeAvailable?: boolean;
  /**
   * Extended info of the backupengine
   */
  extendedInfo?: BackupEngineExtendedInfo;
}

/**
 * Backup engine type when Azure Backup Server is used to manage the backups.
 */
export interface AzureBackupServerEngine {
  /**
   * Polymorphic Discriminator
   */
  backupEngineType: "AzureBackupServerEngine";
  /**
   * Friendly name of the backup engine.
   */
  friendlyName?: string;
  /**
   * Type of backup management for the backup engine. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Registration status of the backup engine with the Recovery Services Vault.
   */
  registrationStatus?: string;
  /**
   * Status of the backup engine with the Recovery Services Vault. = {Active/Deleting/DeleteFailed}
   */
  backupEngineState?: string;
  /**
   * Backup status of the backup engine.
   */
  healthStatus?: string;
  /**
   * Flag indicating if the backup engine be registered, once already registered.
   */
  canReRegister?: boolean;
  /**
   * ID of the backup engine.
   */
  backupEngineId?: string;
  /**
   * Backup engine version
   */
  dpmVersion?: string;
  /**
   * Backup agent version
   */
  azureBackupAgentVersion?: string;
  /**
   * To check if backup agent upgrade available
   */
  isAzureBackupAgentUpgradeAvailable?: boolean;
  /**
   * To check if backup engine upgrade available
   */
  isDpmUpgradeAvailable?: boolean;
  /**
   * Extended info of the backupengine
   */
  extendedInfo?: BackupEngineExtendedInfo;
}

/**
 * Contains the possible cases for BackupRequest.
 */
export type BackupRequestUnion = BackupRequest | AzureFileShareBackupRequest | AzureWorkloadBackupRequest | IaasVMBackupRequest;

/**
 * Base class for backup request. Workload-specific backup requests are derived from this class.
 */
export interface BackupRequest {
  /**
   * Polymorphic Discriminator
   */
  objectType: "BackupRequest";
}

/**
 * AzureFileShare workload-specific backup request.
 */
export interface AzureFileShareBackupRequest {
  /**
   * Polymorphic Discriminator
   */
  objectType: "AzureFileShareBackupRequest";
  /**
   * Backup copy will expire after the time specified (UTC).
   */
  recoveryPointExpiryTimeInUTC?: Date;
}

/**
 * Contains the possible cases for WorkloadProtectableItem.
 */
export type WorkloadProtectableItemUnion = WorkloadProtectableItem | AzureFileShareProtectableItem | AzureVmWorkloadProtectableItemUnion | IaaSVMProtectableItemUnion;

/**
 * Base class for backup item. Workload-specific backup items are derived from this class.
 */
export interface WorkloadProtectableItem {
  /**
   * Polymorphic Discriminator
   */
  protectableItemType: "WorkloadProtectableItem";
  /**
   * Type of backup management to backup an item.
   */
  backupManagementType?: string;
  /**
   * Type of workload for the backup management
   */
  workloadType?: string;
  /**
   * Friendly name of the backup item.
   */
  friendlyName?: string;
  /**
   * State of the back up item. Possible values include: 'Invalid', 'NotProtected', 'Protecting',
   * 'Protected', 'ProtectionFailed'
   */
  protectionState?: ProtectionStatus;
}

/**
 * Protectable item for Azure Fileshare workloads.
 */
export interface AzureFileShareProtectableItem {
  /**
   * Polymorphic Discriminator
   */
  protectableItemType: "AzureFileShare";
  /**
   * Type of backup management to backup an item.
   */
  backupManagementType?: string;
  /**
   * Type of workload for the backup management
   */
  workloadType?: string;
  /**
   * Friendly name of the backup item.
   */
  friendlyName?: string;
  /**
   * State of the back up item. Possible values include: 'Invalid', 'NotProtected', 'Protecting',
   * 'Protected', 'ProtectionFailed'
   */
  protectionState?: ProtectionStatus;
  /**
   * Full Fabric ID of container to which this protectable item belongs. For example, ARM ID.
   */
  parentContainerFabricId?: string;
  /**
   * Friendly name of container to which this protectable item belongs.
   */
  parentContainerFriendlyName?: string;
  /**
   * File Share type XSync or XSMB. Possible values include: 'Invalid', 'XSMB', 'XSync'
   */
  azureFileShareType?: AzureFileShareType;
}

/**
 * Contains the possible cases for ILRRequest.
 */
export type ILRRequestUnion = ILRRequest | AzureFileShareProvisionILRRequest | IaasVMILRRegistrationRequest;

/**
 * Parameters to Provision ILR API.
 */
export interface ILRRequest {
  /**
   * Polymorphic Discriminator
   */
  objectType: "ILRRequest";
}

/**
 * Update snapshot Uri with the correct friendly Name of the source Azure file share.
 */
export interface AzureFileShareProvisionILRRequest {
  /**
   * Polymorphic Discriminator
   */
  objectType: "AzureFileShareProvisionILRRequest";
  /**
   * Recovery point ID.
   */
  recoveryPointId?: string;
  /**
   * Source Storage account ARM Id
   */
  sourceResourceId?: string;
}

/**
 * Contains the possible cases for IaaSVMContainer.
 */
export type IaaSVMContainerUnion = IaaSVMContainer | AzureIaaSClassicComputeVMContainer | AzureIaaSComputeVMContainer;

/**
 * IaaS VM workload-specific container.
 */
export interface IaaSVMContainer {
  /**
   * Polymorphic Discriminator
   */
  containerType: "IaaSVMContainer";
  /**
   * Friendly name of the container.
   */
  friendlyName?: string;
  /**
   * Type of backup management for the container. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Status of registration of the container with the Recovery Services Vault.
   */
  registrationStatus?: string;
  /**
   * Status of health of the container.
   */
  healthStatus?: string;
  /**
   * Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
   */
  virtualMachineId?: string;
  /**
   * Specifies whether the container represents a Classic or an Azure Resource Manager VM.
   */
  virtualMachineVersion?: string;
  /**
   * Resource group name of Recovery Services Vault.
   */
  resourceGroup?: string;
}

/**
 * IaaS VM workload-specific backup item representing a classic virtual machine.
 */
export interface AzureIaaSClassicComputeVMContainer {
  /**
   * Polymorphic Discriminator
   */
  containerType: "Microsoft.ClassicCompute/virtualMachines";
  /**
   * Friendly name of the container.
   */
  friendlyName?: string;
  /**
   * Type of backup management for the container. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Status of registration of the container with the Recovery Services Vault.
   */
  registrationStatus?: string;
  /**
   * Status of health of the container.
   */
  healthStatus?: string;
  /**
   * Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
   */
  virtualMachineId?: string;
  /**
   * Specifies whether the container represents a Classic or an Azure Resource Manager VM.
   */
  virtualMachineVersion?: string;
  /**
   * Resource group name of Recovery Services Vault.
   */
  resourceGroup?: string;
}

/**
 * Contains the possible cases for IaaSVMProtectableItem.
 */
export type IaaSVMProtectableItemUnion = IaaSVMProtectableItem | AzureIaaSClassicComputeVMProtectableItem | AzureIaaSComputeVMProtectableItem;

/**
 * IaaS VM workload-specific backup item.
 */
export interface IaaSVMProtectableItem {
  /**
   * Polymorphic Discriminator
   */
  protectableItemType: "IaaSVMProtectableItem";
  /**
   * Type of backup management to backup an item.
   */
  backupManagementType?: string;
  /**
   * Type of workload for the backup management
   */
  workloadType?: string;
  /**
   * Friendly name of the backup item.
   */
  friendlyName?: string;
  /**
   * State of the back up item. Possible values include: 'Invalid', 'NotProtected', 'Protecting',
   * 'Protected', 'ProtectionFailed'
   */
  protectionState?: ProtectionStatus;
  /**
   * Fully qualified ARM ID of the virtual machine.
   */
  virtualMachineId?: string;
}

/**
 * IaaS VM workload-specific backup item representing the Classic Compute VM.
 */
export interface AzureIaaSClassicComputeVMProtectableItem {
  /**
   * Polymorphic Discriminator
   */
  protectableItemType: "Microsoft.ClassicCompute/virtualMachines";
  /**
   * Type of backup management to backup an item.
   */
  backupManagementType?: string;
  /**
   * Type of workload for the backup management
   */
  workloadType?: string;
  /**
   * Friendly name of the backup item.
   */
  friendlyName?: string;
  /**
   * State of the back up item. Possible values include: 'Invalid', 'NotProtected', 'Protecting',
   * 'Protected', 'ProtectionFailed'
   */
  protectionState?: ProtectionStatus;
  /**
   * Fully qualified ARM ID of the virtual machine.
   */
  virtualMachineId?: string;
}

/**
 * IaaS VM workload-specific backup item representing an Azure Resource Manager virtual machine.
 */
export interface AzureIaaSComputeVMContainer {
  /**
   * Polymorphic Discriminator
   */
  containerType: "Microsoft.Compute/virtualMachines";
  /**
   * Friendly name of the container.
   */
  friendlyName?: string;
  /**
   * Type of backup management for the container. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Status of registration of the container with the Recovery Services Vault.
   */
  registrationStatus?: string;
  /**
   * Status of health of the container.
   */
  healthStatus?: string;
  /**
   * Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
   */
  virtualMachineId?: string;
  /**
   * Specifies whether the container represents a Classic or an Azure Resource Manager VM.
   */
  virtualMachineVersion?: string;
  /**
   * Resource group name of Recovery Services Vault.
   */
  resourceGroup?: string;
}

/**
 * IaaS VM workload-specific backup item representing the Azure Resource Manager VM.
 */
export interface AzureIaaSComputeVMProtectableItem {
  /**
   * Polymorphic Discriminator
   */
  protectableItemType: "Microsoft.Compute/virtualMachines";
  /**
   * Type of backup management to backup an item.
   */
  backupManagementType?: string;
  /**
   * Type of workload for the backup management
   */
  workloadType?: string;
  /**
   * Friendly name of the backup item.
   */
  friendlyName?: string;
  /**
   * State of the back up item. Possible values include: 'Invalid', 'NotProtected', 'Protecting',
   * 'Protected', 'ProtectionFailed'
   */
  protectionState?: ProtectionStatus;
  /**
   * Fully qualified ARM ID of the virtual machine.
   */
  virtualMachineId?: string;
}

/**
 * Contains the possible cases for AzureWorkloadContainer.
 */
export type AzureWorkloadContainerUnion = AzureWorkloadContainer | AzureSQLAGWorkloadContainerProtectionContainer | AzureVMAppContainerProtectionContainer;

/**
 * Container for the workloads running inside Azure Compute or Classic Compute.
 */
export interface AzureWorkloadContainer {
  /**
   * Polymorphic Discriminator
   */
  containerType: "AzureWorkloadContainer";
  /**
   * Friendly name of the container.
   */
  friendlyName?: string;
  /**
   * Type of backup management for the container. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Status of registration of the container with the Recovery Services Vault.
   */
  registrationStatus?: string;
  /**
   * Status of health of the container.
   */
  healthStatus?: string;
  /**
   * ARM ID of the virtual machine represented by this Azure Workload Container
   */
  sourceResourceId?: string;
  /**
   * Time stamp when this container was updated.
   */
  lastUpdatedTime?: Date;
  /**
   * Additional details of a workload container.
   */
  extendedInfo?: AzureWorkloadContainerExtendedInfo;
  /**
   * Workload type for which registration was sent. Possible values include: 'Invalid', 'VM',
   * 'FileFolder', 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState',
   * 'Client', 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase',
   * 'SAPAseDatabase'
   */
  workloadType?: WorkloadType;
  /**
   * Re-Do Operation. Possible values include: 'Invalid', 'Register', 'Reregister'
   */
  operationType?: OperationType;
}

/**
 * Container for SQL workloads under SQL Availability Group.
 */
export interface AzureSQLAGWorkloadContainerProtectionContainer {
  /**
   * Polymorphic Discriminator
   */
  containerType: "SQLAGWorkLoadContainer";
  /**
   * Friendly name of the container.
   */
  friendlyName?: string;
  /**
   * Type of backup management for the container. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Status of registration of the container with the Recovery Services Vault.
   */
  registrationStatus?: string;
  /**
   * Status of health of the container.
   */
  healthStatus?: string;
  /**
   * ARM ID of the virtual machine represented by this Azure Workload Container
   */
  sourceResourceId?: string;
  /**
   * Time stamp when this container was updated.
   */
  lastUpdatedTime?: Date;
  /**
   * Additional details of a workload container.
   */
  extendedInfo?: AzureWorkloadContainerExtendedInfo;
  /**
   * Workload type for which registration was sent. Possible values include: 'Invalid', 'VM',
   * 'FileFolder', 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState',
   * 'Client', 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase',
   * 'SAPAseDatabase'
   */
  workloadType?: WorkloadType;
  /**
   * Re-Do Operation. Possible values include: 'Invalid', 'Register', 'Reregister'
   */
  operationType?: OperationType;
}

/**
 * Azure Sql workload-specific container.
 */
export interface AzureSqlContainer {
  /**
   * Polymorphic Discriminator
   */
  containerType: "AzureSqlContainer";
  /**
   * Friendly name of the container.
   */
  friendlyName?: string;
  /**
   * Type of backup management for the container. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Status of registration of the container with the Recovery Services Vault.
   */
  registrationStatus?: string;
  /**
   * Status of health of the container.
   */
  healthStatus?: string;
}

/**
 * Azure Storage Account workload-specific container.
 */
export interface AzureStorageContainer {
  /**
   * Polymorphic Discriminator
   */
  containerType: "StorageContainer";
  /**
   * Friendly name of the container.
   */
  friendlyName?: string;
  /**
   * Type of backup management for the container. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Status of registration of the container with the Recovery Services Vault.
   */
  registrationStatus?: string;
  /**
   * Status of health of the container.
   */
  healthStatus?: string;
  /**
   * Fully qualified ARM url.
   */
  sourceResourceId?: string;
  /**
   * Storage account version.
   */
  storageAccountVersion?: string;
  /**
   * Resource group name of Recovery Services Vault.
   */
  resourceGroup?: string;
  /**
   * Number of items backed up in this container.
   */
  protectedItemCount?: number;
}

/**
 * Contains the possible cases for ProtectableContainer.
 */
export type ProtectableContainerUnion = ProtectableContainer | AzureStorageProtectableContainer | AzureVMAppContainerProtectableContainer;

/**
 * Protectable Container Class.
 */
export interface ProtectableContainer {
  /**
   * Polymorphic Discriminator
   */
  protectableContainerType: "ProtectableContainer";
  /**
   * Friendly name of the container.
   */
  friendlyName?: string;
  /**
   * Type of backup management for the container. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Status of health of the container.
   */
  healthStatus?: string;
  /**
   * Fabric Id of the container such as ARM Id.
   */
  containerId?: string;
}

/**
 * Azure Storage-specific protectable containers
 */
export interface AzureStorageProtectableContainer {
  /**
   * Polymorphic Discriminator
   */
  protectableContainerType: "StorageContainer";
  /**
   * Friendly name of the container.
   */
  friendlyName?: string;
  /**
   * Type of backup management for the container. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Status of health of the container.
   */
  healthStatus?: string;
  /**
   * Fabric Id of the container such as ARM Id.
   */
  containerId?: string;
}

/**
 * Azure workload-specific container
 */
export interface AzureVMAppContainerProtectableContainer {
  /**
   * Polymorphic Discriminator
   */
  protectableContainerType: "VMAppContainer";
  /**
   * Friendly name of the container.
   */
  friendlyName?: string;
  /**
   * Type of backup management for the container. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Status of health of the container.
   */
  healthStatus?: string;
  /**
   * Fabric Id of the container such as ARM Id.
   */
  containerId?: string;
}

/**
 * Container for SQL workloads under Azure Virtual Machines.
 */
export interface AzureVMAppContainerProtectionContainer {
  /**
   * Polymorphic Discriminator
   */
  containerType: "VMAppContainer";
  /**
   * Friendly name of the container.
   */
  friendlyName?: string;
  /**
   * Type of backup management for the container. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Status of registration of the container with the Recovery Services Vault.
   */
  registrationStatus?: string;
  /**
   * Status of health of the container.
   */
  healthStatus?: string;
  /**
   * ARM ID of the virtual machine represented by this Azure Workload Container
   */
  sourceResourceId?: string;
  /**
   * Time stamp when this container was updated.
   */
  lastUpdatedTime?: Date;
  /**
   * Additional details of a workload container.
   */
  extendedInfo?: AzureWorkloadContainerExtendedInfo;
  /**
   * Workload type for which registration was sent. Possible values include: 'Invalid', 'VM',
   * 'FileFolder', 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState',
   * 'Client', 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase',
   * 'SAPAseDatabase'
   */
  workloadType?: WorkloadType;
  /**
   * Re-Do Operation. Possible values include: 'Invalid', 'Register', 'Reregister'
   */
  operationType?: OperationType;
}

/**
 * Contains the possible cases for WorkloadItem.
 */
export type WorkloadItemUnion = WorkloadItem | AzureVmWorkloadItemUnion;

/**
 * Base class for backup item. Workload-specific backup items are derived from this class.
 */
export interface WorkloadItem {
  /**
   * Polymorphic Discriminator
   */
  workloadItemType: "WorkloadItem";
  /**
   * Type of backup management to backup an item.
   */
  backupManagementType?: string;
  /**
   * Type of workload for the backup management
   */
  workloadType?: string;
  /**
   * Friendly name of the backup item.
   */
  friendlyName?: string;
  /**
   * State of the back up item. Possible values include: 'Invalid', 'NotProtected', 'Protecting',
   * 'Protected', 'ProtectionFailed'
   */
  protectionState?: ProtectionStatus;
}

/**
 * Contains the possible cases for AzureVmWorkloadItem.
 */
export type AzureVmWorkloadItemUnion = AzureVmWorkloadItem | AzureVmWorkloadSAPAseDatabaseWorkloadItem | AzureVmWorkloadSAPAseSystemWorkloadItem | AzureVmWorkloadSAPHanaDatabaseWorkloadItem | AzureVmWorkloadSAPHanaSystemWorkloadItem | AzureVmWorkloadSQLDatabaseWorkloadItem | AzureVmWorkloadSQLInstanceWorkloadItem;

/**
 * Azure VM workload-specific workload item.
 */
export interface AzureVmWorkloadItem {
  /**
   * Polymorphic Discriminator
   */
  workloadItemType: "AzureVmWorkloadItem";
  /**
   * Type of backup management to backup an item.
   */
  backupManagementType?: string;
  /**
   * Type of workload for the backup management
   */
  workloadType?: string;
  /**
   * Friendly name of the backup item.
   */
  friendlyName?: string;
  /**
   * State of the back up item. Possible values include: 'Invalid', 'NotProtected', 'Protecting',
   * 'Protected', 'ProtectionFailed'
   */
  protectionState?: ProtectionStatus;
  /**
   * Name for instance or AG
   */
  parentName?: string;
  /**
   * Host/Cluster Name for instance or AG
   */
  serverName?: string;
  /**
   * Indicates if workload item is auto-protectable
   */
  isAutoProtectable?: boolean;
  /**
   * For instance or AG, indicates number of DB's present
   */
  subinquireditemcount?: number;
  /**
   * For instance or AG, indicates number of DB's to be protected
   */
  subWorkloadItemCount?: number;
}

/**
 * Pre-backup validation for Azure VM Workload provider.
 */
export interface PreBackupValidation {
  /**
   * Status of protectable item, i.e. InProgress,Succeeded,Failed. Possible values include:
   * 'Invalid', 'Success', 'Failed'
   */
  status?: InquiryStatus;
  /**
   * Error code of protectable item
   */
  code?: string;
  /**
   * Message corresponding to the error code for the protectable item
   */
  message?: string;
}

/**
 * Contains the possible cases for AzureVmWorkloadProtectableItem.
 */
export type AzureVmWorkloadProtectableItemUnion = AzureVmWorkloadProtectableItem | AzureVmWorkloadSAPAseSystemProtectableItem | AzureVmWorkloadSAPHanaDatabaseProtectableItem | AzureVmWorkloadSAPHanaSystemProtectableItem | AzureVmWorkloadSQLAvailabilityGroupProtectableItem | AzureVmWorkloadSQLDatabaseProtectableItem | AzureVmWorkloadSQLInstanceProtectableItem;

/**
 * Azure VM workload-specific protectable item.
 */
export interface AzureVmWorkloadProtectableItem {
  /**
   * Polymorphic Discriminator
   */
  protectableItemType: "AzureVmWorkloadProtectableItem";
  /**
   * Type of backup management to backup an item.
   */
  backupManagementType?: string;
  /**
   * Type of workload for the backup management
   */
  workloadType?: string;
  /**
   * Friendly name of the backup item.
   */
  friendlyName?: string;
  /**
   * State of the back up item. Possible values include: 'Invalid', 'NotProtected', 'Protecting',
   * 'Protected', 'ProtectionFailed'
   */
  protectionState?: ProtectionStatus;
  /**
   * Name for instance or AG
   */
  parentName?: string;
  /**
   * Parent Unique Name is added to provide the service formatted URI Name of the Parent
   * Only Applicable for data bases where the parent would be either Instance or a SQL AG.
   */
  parentUniqueName?: string;
  /**
   * Host/Cluster Name for instance or AG
   */
  serverName?: string;
  /**
   * Indicates if protectable item is auto-protectable
   */
  isAutoProtectable?: boolean;
  /**
   * Indicates if protectable item is auto-protected
   */
  isAutoProtected?: boolean;
  /**
   * For instance or AG, indicates number of DB's present
   */
  subinquireditemcount?: number;
  /**
   * For instance or AG, indicates number of DB's to be protected
   */
  subprotectableitemcount?: number;
  /**
   * Pre-backup validation for protectable objects
   */
  prebackupvalidation?: PreBackupValidation;
}

/**
 * Azure VM workload-specific workload item representing SAP ASE Database.
 */
export interface AzureVmWorkloadSAPAseDatabaseWorkloadItem {
  /**
   * Polymorphic Discriminator
   */
  workloadItemType: "SAPAseDatabase";
  /**
   * Type of backup management to backup an item.
   */
  backupManagementType?: string;
  /**
   * Type of workload for the backup management
   */
  workloadType?: string;
  /**
   * Friendly name of the backup item.
   */
  friendlyName?: string;
  /**
   * State of the back up item. Possible values include: 'Invalid', 'NotProtected', 'Protecting',
   * 'Protected', 'ProtectionFailed'
   */
  protectionState?: ProtectionStatus;
  /**
   * Name for instance or AG
   */
  parentName?: string;
  /**
   * Host/Cluster Name for instance or AG
   */
  serverName?: string;
  /**
   * Indicates if workload item is auto-protectable
   */
  isAutoProtectable?: boolean;
  /**
   * For instance or AG, indicates number of DB's present
   */
  subinquireditemcount?: number;
  /**
   * For instance or AG, indicates number of DB's to be protected
   */
  subWorkloadItemCount?: number;
}

/**
 * Azure VM workload-specific protectable item representing SAP ASE System.
 */
export interface AzureVmWorkloadSAPAseSystemProtectableItem {
  /**
   * Polymorphic Discriminator
   */
  protectableItemType: "SAPAseSystem";
  /**
   * Type of backup management to backup an item.
   */
  backupManagementType?: string;
  /**
   * Type of workload for the backup management
   */
  workloadType?: string;
  /**
   * Friendly name of the backup item.
   */
  friendlyName?: string;
  /**
   * State of the back up item. Possible values include: 'Invalid', 'NotProtected', 'Protecting',
   * 'Protected', 'ProtectionFailed'
   */
  protectionState?: ProtectionStatus;
  /**
   * Name for instance or AG
   */
  parentName?: string;
  /**
   * Parent Unique Name is added to provide the service formatted URI Name of the Parent
   * Only Applicable for data bases where the parent would be either Instance or a SQL AG.
   */
  parentUniqueName?: string;
  /**
   * Host/Cluster Name for instance or AG
   */
  serverName?: string;
  /**
   * Indicates if protectable item is auto-protectable
   */
  isAutoProtectable?: boolean;
  /**
   * Indicates if protectable item is auto-protected
   */
  isAutoProtected?: boolean;
  /**
   * For instance or AG, indicates number of DB's present
   */
  subinquireditemcount?: number;
  /**
   * For instance or AG, indicates number of DB's to be protected
   */
  subprotectableitemcount?: number;
  /**
   * Pre-backup validation for protectable objects
   */
  prebackupvalidation?: PreBackupValidation;
}

/**
 * Azure VM workload-specific workload item representing SAP ASE System.
 */
export interface AzureVmWorkloadSAPAseSystemWorkloadItem {
  /**
   * Polymorphic Discriminator
   */
  workloadItemType: "SAPAseSystem";
  /**
   * Type of backup management to backup an item.
   */
  backupManagementType?: string;
  /**
   * Type of workload for the backup management
   */
  workloadType?: string;
  /**
   * Friendly name of the backup item.
   */
  friendlyName?: string;
  /**
   * State of the back up item. Possible values include: 'Invalid', 'NotProtected', 'Protecting',
   * 'Protected', 'ProtectionFailed'
   */
  protectionState?: ProtectionStatus;
  /**
   * Name for instance or AG
   */
  parentName?: string;
  /**
   * Host/Cluster Name for instance or AG
   */
  serverName?: string;
  /**
   * Indicates if workload item is auto-protectable
   */
  isAutoProtectable?: boolean;
  /**
   * For instance or AG, indicates number of DB's present
   */
  subinquireditemcount?: number;
  /**
   * For instance or AG, indicates number of DB's to be protected
   */
  subWorkloadItemCount?: number;
}

/**
 * Azure VM workload-specific protectable item representing SAP HANA Database.
 */
export interface AzureVmWorkloadSAPHanaDatabaseProtectableItem {
  /**
   * Polymorphic Discriminator
   */
  protectableItemType: "SAPHanaDatabase";
  /**
   * Type of backup management to backup an item.
   */
  backupManagementType?: string;
  /**
   * Type of workload for the backup management
   */
  workloadType?: string;
  /**
   * Friendly name of the backup item.
   */
  friendlyName?: string;
  /**
   * State of the back up item. Possible values include: 'Invalid', 'NotProtected', 'Protecting',
   * 'Protected', 'ProtectionFailed'
   */
  protectionState?: ProtectionStatus;
  /**
   * Name for instance or AG
   */
  parentName?: string;
  /**
   * Parent Unique Name is added to provide the service formatted URI Name of the Parent
   * Only Applicable for data bases where the parent would be either Instance or a SQL AG.
   */
  parentUniqueName?: string;
  /**
   * Host/Cluster Name for instance or AG
   */
  serverName?: string;
  /**
   * Indicates if protectable item is auto-protectable
   */
  isAutoProtectable?: boolean;
  /**
   * Indicates if protectable item is auto-protected
   */
  isAutoProtected?: boolean;
  /**
   * For instance or AG, indicates number of DB's present
   */
  subinquireditemcount?: number;
  /**
   * For instance or AG, indicates number of DB's to be protected
   */
  subprotectableitemcount?: number;
  /**
   * Pre-backup validation for protectable objects
   */
  prebackupvalidation?: PreBackupValidation;
}

/**
 * Azure VM workload-specific workload item representing SAP HANA Database.
 */
export interface AzureVmWorkloadSAPHanaDatabaseWorkloadItem {
  /**
   * Polymorphic Discriminator
   */
  workloadItemType: "SAPHanaDatabase";
  /**
   * Type of backup management to backup an item.
   */
  backupManagementType?: string;
  /**
   * Type of workload for the backup management
   */
  workloadType?: string;
  /**
   * Friendly name of the backup item.
   */
  friendlyName?: string;
  /**
   * State of the back up item. Possible values include: 'Invalid', 'NotProtected', 'Protecting',
   * 'Protected', 'ProtectionFailed'
   */
  protectionState?: ProtectionStatus;
  /**
   * Name for instance or AG
   */
  parentName?: string;
  /**
   * Host/Cluster Name for instance or AG
   */
  serverName?: string;
  /**
   * Indicates if workload item is auto-protectable
   */
  isAutoProtectable?: boolean;
  /**
   * For instance or AG, indicates number of DB's present
   */
  subinquireditemcount?: number;
  /**
   * For instance or AG, indicates number of DB's to be protected
   */
  subWorkloadItemCount?: number;
}

/**
 * Azure VM workload-specific protectable item representing SAP HANA System.
 */
export interface AzureVmWorkloadSAPHanaSystemProtectableItem {
  /**
   * Polymorphic Discriminator
   */
  protectableItemType: "SAPHanaSystem";
  /**
   * Type of backup management to backup an item.
   */
  backupManagementType?: string;
  /**
   * Type of workload for the backup management
   */
  workloadType?: string;
  /**
   * Friendly name of the backup item.
   */
  friendlyName?: string;
  /**
   * State of the back up item. Possible values include: 'Invalid', 'NotProtected', 'Protecting',
   * 'Protected', 'ProtectionFailed'
   */
  protectionState?: ProtectionStatus;
  /**
   * Name for instance or AG
   */
  parentName?: string;
  /**
   * Parent Unique Name is added to provide the service formatted URI Name of the Parent
   * Only Applicable for data bases where the parent would be either Instance or a SQL AG.
   */
  parentUniqueName?: string;
  /**
   * Host/Cluster Name for instance or AG
   */
  serverName?: string;
  /**
   * Indicates if protectable item is auto-protectable
   */
  isAutoProtectable?: boolean;
  /**
   * Indicates if protectable item is auto-protected
   */
  isAutoProtected?: boolean;
  /**
   * For instance or AG, indicates number of DB's present
   */
  subinquireditemcount?: number;
  /**
   * For instance or AG, indicates number of DB's to be protected
   */
  subprotectableitemcount?: number;
  /**
   * Pre-backup validation for protectable objects
   */
  prebackupvalidation?: PreBackupValidation;
}

/**
 * Azure VM workload-specific workload item representing SAP HANA System.
 */
export interface AzureVmWorkloadSAPHanaSystemWorkloadItem {
  /**
   * Polymorphic Discriminator
   */
  workloadItemType: "SAPHanaSystem";
  /**
   * Type of backup management to backup an item.
   */
  backupManagementType?: string;
  /**
   * Type of workload for the backup management
   */
  workloadType?: string;
  /**
   * Friendly name of the backup item.
   */
  friendlyName?: string;
  /**
   * State of the back up item. Possible values include: 'Invalid', 'NotProtected', 'Protecting',
   * 'Protected', 'ProtectionFailed'
   */
  protectionState?: ProtectionStatus;
  /**
   * Name for instance or AG
   */
  parentName?: string;
  /**
   * Host/Cluster Name for instance or AG
   */
  serverName?: string;
  /**
   * Indicates if workload item is auto-protectable
   */
  isAutoProtectable?: boolean;
  /**
   * For instance or AG, indicates number of DB's present
   */
  subinquireditemcount?: number;
  /**
   * For instance or AG, indicates number of DB's to be protected
   */
  subWorkloadItemCount?: number;
}

/**
 * Azure VM workload-specific protectable item representing SQL Availability Group.
 */
export interface AzureVmWorkloadSQLAvailabilityGroupProtectableItem {
  /**
   * Polymorphic Discriminator
   */
  protectableItemType: "SQLAvailabilityGroupContainer";
  /**
   * Type of backup management to backup an item.
   */
  backupManagementType?: string;
  /**
   * Type of workload for the backup management
   */
  workloadType?: string;
  /**
   * Friendly name of the backup item.
   */
  friendlyName?: string;
  /**
   * State of the back up item. Possible values include: 'Invalid', 'NotProtected', 'Protecting',
   * 'Protected', 'ProtectionFailed'
   */
  protectionState?: ProtectionStatus;
  /**
   * Name for instance or AG
   */
  parentName?: string;
  /**
   * Parent Unique Name is added to provide the service formatted URI Name of the Parent
   * Only Applicable for data bases where the parent would be either Instance or a SQL AG.
   */
  parentUniqueName?: string;
  /**
   * Host/Cluster Name for instance or AG
   */
  serverName?: string;
  /**
   * Indicates if protectable item is auto-protectable
   */
  isAutoProtectable?: boolean;
  /**
   * Indicates if protectable item is auto-protected
   */
  isAutoProtected?: boolean;
  /**
   * For instance or AG, indicates number of DB's present
   */
  subinquireditemcount?: number;
  /**
   * For instance or AG, indicates number of DB's to be protected
   */
  subprotectableitemcount?: number;
  /**
   * Pre-backup validation for protectable objects
   */
  prebackupvalidation?: PreBackupValidation;
}

/**
 * Azure VM workload-specific protectable item representing SQL Database.
 */
export interface AzureVmWorkloadSQLDatabaseProtectableItem {
  /**
   * Polymorphic Discriminator
   */
  protectableItemType: "SQLDataBase";
  /**
   * Type of backup management to backup an item.
   */
  backupManagementType?: string;
  /**
   * Type of workload for the backup management
   */
  workloadType?: string;
  /**
   * Friendly name of the backup item.
   */
  friendlyName?: string;
  /**
   * State of the back up item. Possible values include: 'Invalid', 'NotProtected', 'Protecting',
   * 'Protected', 'ProtectionFailed'
   */
  protectionState?: ProtectionStatus;
  /**
   * Name for instance or AG
   */
  parentName?: string;
  /**
   * Parent Unique Name is added to provide the service formatted URI Name of the Parent
   * Only Applicable for data bases where the parent would be either Instance or a SQL AG.
   */
  parentUniqueName?: string;
  /**
   * Host/Cluster Name for instance or AG
   */
  serverName?: string;
  /**
   * Indicates if protectable item is auto-protectable
   */
  isAutoProtectable?: boolean;
  /**
   * Indicates if protectable item is auto-protected
   */
  isAutoProtected?: boolean;
  /**
   * For instance or AG, indicates number of DB's present
   */
  subinquireditemcount?: number;
  /**
   * For instance or AG, indicates number of DB's to be protected
   */
  subprotectableitemcount?: number;
  /**
   * Pre-backup validation for protectable objects
   */
  prebackupvalidation?: PreBackupValidation;
}

/**
 * Azure VM workload-specific workload item representing SQL Database.
 */
export interface AzureVmWorkloadSQLDatabaseWorkloadItem {
  /**
   * Polymorphic Discriminator
   */
  workloadItemType: "SQLDataBase";
  /**
   * Type of backup management to backup an item.
   */
  backupManagementType?: string;
  /**
   * Type of workload for the backup management
   */
  workloadType?: string;
  /**
   * Friendly name of the backup item.
   */
  friendlyName?: string;
  /**
   * State of the back up item. Possible values include: 'Invalid', 'NotProtected', 'Protecting',
   * 'Protected', 'ProtectionFailed'
   */
  protectionState?: ProtectionStatus;
  /**
   * Name for instance or AG
   */
  parentName?: string;
  /**
   * Host/Cluster Name for instance or AG
   */
  serverName?: string;
  /**
   * Indicates if workload item is auto-protectable
   */
  isAutoProtectable?: boolean;
  /**
   * For instance or AG, indicates number of DB's present
   */
  subinquireditemcount?: number;
  /**
   * For instance or AG, indicates number of DB's to be protected
   */
  subWorkloadItemCount?: number;
}

/**
 * Azure VM workload-specific protectable item representing SQL Instance.
 */
export interface AzureVmWorkloadSQLInstanceProtectableItem {
  /**
   * Polymorphic Discriminator
   */
  protectableItemType: "SQLInstance";
  /**
   * Type of backup management to backup an item.
   */
  backupManagementType?: string;
  /**
   * Type of workload for the backup management
   */
  workloadType?: string;
  /**
   * Friendly name of the backup item.
   */
  friendlyName?: string;
  /**
   * State of the back up item. Possible values include: 'Invalid', 'NotProtected', 'Protecting',
   * 'Protected', 'ProtectionFailed'
   */
  protectionState?: ProtectionStatus;
  /**
   * Name for instance or AG
   */
  parentName?: string;
  /**
   * Parent Unique Name is added to provide the service formatted URI Name of the Parent
   * Only Applicable for data bases where the parent would be either Instance or a SQL AG.
   */
  parentUniqueName?: string;
  /**
   * Host/Cluster Name for instance or AG
   */
  serverName?: string;
  /**
   * Indicates if protectable item is auto-protectable
   */
  isAutoProtectable?: boolean;
  /**
   * Indicates if protectable item is auto-protected
   */
  isAutoProtected?: boolean;
  /**
   * For instance or AG, indicates number of DB's present
   */
  subinquireditemcount?: number;
  /**
   * For instance or AG, indicates number of DB's to be protected
   */
  subprotectableitemcount?: number;
  /**
   * Pre-backup validation for protectable objects
   */
  prebackupvalidation?: PreBackupValidation;
}

/**
 * Azure VM workload-specific workload item representing SQL Instance.
 */
export interface AzureVmWorkloadSQLInstanceWorkloadItem {
  /**
   * Polymorphic Discriminator
   */
  workloadItemType: "SQLInstance";
  /**
   * Type of backup management to backup an item.
   */
  backupManagementType?: string;
  /**
   * Type of workload for the backup management
   */
  workloadType?: string;
  /**
   * Friendly name of the backup item.
   */
  friendlyName?: string;
  /**
   * State of the back up item. Possible values include: 'Invalid', 'NotProtected', 'Protecting',
   * 'Protected', 'ProtectionFailed'
   */
  protectionState?: ProtectionStatus;
  /**
   * Name for instance or AG
   */
  parentName?: string;
  /**
   * Host/Cluster Name for instance or AG
   */
  serverName?: string;
  /**
   * Indicates if workload item is auto-protectable
   */
  isAutoProtectable?: boolean;
  /**
   * For instance or AG, indicates number of DB's present
   */
  subinquireditemcount?: number;
  /**
   * For instance or AG, indicates number of DB's to be protected
   */
  subWorkloadItemCount?: number;
  /**
   * Data Directory Paths for default directories
   */
  dataDirectoryPaths?: SQLDataDirectory[];
}

/**
 * AzureWorkload workload-specific backup request.
 */
export interface AzureWorkloadBackupRequest {
  /**
   * Polymorphic Discriminator
   */
  objectType: "AzureWorkloadBackupRequest";
  /**
   * Type of backup, viz. Full, Differential, Log or CopyOnlyFull. Possible values include:
   * 'Invalid', 'Full', 'Differential', 'Log', 'CopyOnlyFull'
   */
  backupType?: BackupType;
  /**
   * Bool for Compression setting
   */
  enableCompression?: boolean;
  /**
   * Backup copy will expire after the time specified (UTC).
   */
  recoveryPointExpiryTimeInUTC?: Date;
}

/**
 * Validation for inquired protectable items under a given container.
 */
export interface InquiryValidation {
  /**
   * Status for the Inquiry Validation.
   */
  status?: string;
  /**
   * Error Detail in case the status is non-success.
   */
  errorDetail?: ErrorDetail;
  /**
   * Error Additional Detail in case the status is non-success.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly additionalDetail?: string;
}

/**
 * Details of an inquired protectable item.
 */
export interface WorkloadInquiryDetails {
  /**
   * Type of the Workload such as SQL, Oracle etc.
   */
  type?: string;
  /**
   * Contains the protectable item Count inside this Container.
   */
  itemCount?: number;
  /**
   * Inquiry validation such as permissions and other backup validations.
   */
  inquiryValidation?: InquiryValidation;
}

/**
 * Details about inquired protectable items under a given container.
 */
export interface InquiryInfo {
  /**
   * Inquiry Status for this container such as
   * InProgress | Failed | Succeeded
   */
  status?: string;
  /**
   * Error Details if the Status is non-success.
   */
  errorDetail?: ErrorDetail;
  /**
   * Inquiry Details which will have workload specific details.
   * For e.g. - For SQL and oracle this will contain different details.
   */
  inquiryDetails?: WorkloadInquiryDetails[];
}

/**
 * This is used to represent the various nodes of the distributed container.
 */
export interface DistributedNodesInfo {
  /**
   * Name of the node under a distributed container.
   */
  nodeName?: string;
  /**
   * Status of this Node.
   * Failed | Succeeded
   */
  status?: string;
  /**
   * Error Details if the Status is non-success.
   */
  errorDetail?: ErrorDetail;
}

/**
 * Extended information of the container.
 */
export interface AzureWorkloadContainerExtendedInfo {
  /**
   * Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.
   */
  hostServerName?: string;
  /**
   * Inquiry Status for the container.
   */
  inquiryInfo?: InquiryInfo;
  /**
   * List of the nodes in case of distributed container.
   */
  nodesList?: DistributedNodesInfo[];
}

/**
 * Additional information on backup engine.
 */
export interface BackupEngineExtendedInfo {
  /**
   * Database name of backup engine.
   */
  databaseName?: string;
  /**
   * Number of protected items in the backup engine.
   */
  protectedItemsCount?: number;
  /**
   * Number of protected servers in the backup engine.
   */
  protectedServersCount?: number;
  /**
   * Number of disks in the backup engine.
   */
  diskCount?: number;
  /**
   * Disk space used in the backup engine.
   */
  usedDiskSpace?: number;
  /**
   * Disk space currently available in the backup engine.
   */
  availableDiskSpace?: number;
  /**
   * Last refresh time in the backup engine.
   */
  refreshedAt?: Date;
  /**
   * Protected instances in the backup engine.
   */
  azureProtectedInstances?: number;
}

/**
 * The base backup engine class. All workload specific backup engines derive from this class.
 */
export interface BackupEngineBaseResource extends Resource {
  /**
   * BackupEngineBaseResource properties
   */
  properties?: BackupEngineBaseUnion;
}

/**
 * Base class for backup request. Workload-specific backup requests are derived from this class.
 */
export interface BackupRequestResource extends Resource {
  /**
   * BackupRequestResource properties
   */
  properties?: BackupRequestUnion;
}

/**
 * The resource storage details.
 */
export interface BackupResourceConfig {
  /**
   * Storage type. Possible values include: 'Invalid', 'GeoRedundant', 'LocallyRedundant'
   */
  storageModelType?: StorageType;
  /**
   * Storage type. Possible values include: 'Invalid', 'GeoRedundant', 'LocallyRedundant'
   */
  storageType?: StorageType;
  /**
   * Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is
   * always Locked. Possible values include: 'Invalid', 'Locked', 'Unlocked'
   */
  storageTypeState?: StorageTypeState;
}

/**
 * The resource storage details.
 */
export interface BackupResourceConfigResource extends Resource {
  /**
   * BackupResourceConfigResource properties
   */
  properties?: BackupResourceConfig;
}

/**
 * Query parameters to fetch list of backup engines.
 */
export interface BMSBackupEngineQueryObject {
  /**
   * attribute to add extended info
   */
  expand?: string;
}

/**
 * Query parameters to fetch list of backup engines.
 */
export interface BMSBackupEnginesQueryObject {
  /**
   * Backup management type for the backup engine. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Friendly name of the backup engine.
   */
  friendlyName?: string;
  /**
   * Attribute to add extended info.
   */
  expand?: string;
}

/**
 * The query filters that can be used with the list containers API.
 */
export interface BMSContainerQueryObject {
  /**
   * Backup management type for this container. Possible values include: 'Invalid', 'AzureIaasVM',
   * 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType: BackupManagementType;
  /**
   * Type of container for filter. Possible values include: 'Invalid', 'Unknown',
   * 'IaasVMContainer', 'IaasVMServiceContainer', 'DPMContainer', 'AzureBackupServerContainer',
   * 'MABContainer', 'Cluster', 'AzureSqlContainer', 'Windows', 'VCenter', 'VMAppContainer',
   * 'SQLAGWorkLoadContainer', 'StorageContainer', 'GenericContainer'
   */
  containerType?: ContainerType;
  /**
   * Backup engine name
   */
  backupEngineName?: string;
  /**
   * Fabric name for filter
   */
  fabricName?: string;
  /**
   * Status of registration of this container with the Recovery Services Vault.
   */
  status?: string;
  /**
   * Friendly name of this container.
   */
  friendlyName?: string;
}

/**
 * The query filters that can be used with the inquire container API.
 */
export interface BMSContainersInquiryQueryObject {
  /**
   * Backup management type for this container. Possible values include: 'Invalid', 'AzureIaasVM',
   * 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Workload type for this container. Possible values include: 'Invalid', 'VM', 'FileFolder',
   * 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
   * 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase', 'SAPAseDatabase'
   */
  workloadType?: WorkloadType;
}

/**
 * Filters to list items that can be backed up.
 */
export interface BMSPOQueryObject {
  /**
   * Backup management type. Possible values include: 'Invalid', 'AzureIaasVM', 'MAB', 'DPM',
   * 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload', 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Workload type. Possible values include: 'Invalid', 'VM', 'FileFolder', 'AzureSqlDb', 'SQLDB',
   * 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client', 'GenericDataSource',
   * 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase', 'SAPAseDatabase'
   */
  workloadType?: WorkloadType;
  /**
   * Full name of the container whose Protectable Objects should be returned.
   */
  containerName?: string;
  /**
   * Backup status query parameter.
   */
  status?: string;
  /**
   * Friendly name.
   */
  friendlyName?: string;
}

/**
 * The query filters that can be used with the refresh container API.
 */
export interface BMSRefreshContainersQueryObject {
  /**
   * Backup management type for this container. Possible values include: 'Invalid', 'AzureIaasVM',
   * 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
}

/**
 * Filters to list items that can be backed up.
 */
export interface BMSWorkloadItemQueryObject {
  /**
   * Backup management type. Possible values include: 'Invalid', 'AzureIaasVM', 'MAB', 'DPM',
   * 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload', 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Workload Item type. Possible values include: 'Invalid', 'SQLInstance', 'SQLDataBase',
   * 'SAPHanaSystem', 'SAPHanaDatabase', 'SAPAseSystem', 'SAPAseDatabase'
   */
  workloadItemType?: WorkloadItemType;
  /**
   * Workload type. Possible values include: 'Invalid', 'VM', 'FileFolder', 'AzureSqlDb', 'SQLDB',
   * 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client', 'GenericDataSource',
   * 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase', 'SAPAseDatabase'
   */
  workloadType?: WorkloadType;
  /**
   * Backup status query parameter. Possible values include: 'Invalid', 'NotProtected',
   * 'Protecting', 'Protected', 'ProtectionFailed'
   */
  protectionStatus?: ProtectionStatus;
}

/**
 * Client script details for file / folder restore.
 */
export interface ClientScriptForConnect {
  /**
   * File content of the client script for file / folder restore.
   */
  scriptContent?: string;
  /**
   * File extension of the client script for file / folder restore - .ps1 , .sh , etc.
   */
  scriptExtension?: string;
  /**
   * OS type - Windows, Linux etc. for which this file / folder restore client script works.
   */
  osType?: string;
  /**
   * URL of Executable from where to source the content. If this is not null then ScriptContent
   * should not be used
   */
  url?: string;
  /**
   * Mandatory suffix that should be added to the name of script that is given for download to
   * user.
   * If its null or empty then , ignore it.
   */
  scriptNameSuffix?: string;
}

/**
 * Container identity information
 */
export interface ContainerIdentityInfo {
  /**
   * Unique name of the container
   */
  uniqueName?: string;
  /**
   * Protection container identity - AAD Tenant
   */
  aadTenantId?: string;
  /**
   * Protection container identity - AAD Service Principal
   */
  servicePrincipalClientId?: string;
  /**
   * Protection container identity - Audience
   */
  audience?: string;
}

/**
 * Data Protection Manager (DPM) specific backup engine.
 */
export interface DpmBackupEngine {
  /**
   * Polymorphic Discriminator
   */
  backupEngineType: "DpmBackupEngine";
  /**
   * Friendly name of the backup engine.
   */
  friendlyName?: string;
  /**
   * Type of backup management for the backup engine. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Registration status of the backup engine with the Recovery Services Vault.
   */
  registrationStatus?: string;
  /**
   * Status of the backup engine with the Recovery Services Vault. = {Active/Deleting/DeleteFailed}
   */
  backupEngineState?: string;
  /**
   * Backup status of the backup engine.
   */
  healthStatus?: string;
  /**
   * Flag indicating if the backup engine be registered, once already registered.
   */
  canReRegister?: boolean;
  /**
   * ID of the backup engine.
   */
  backupEngineId?: string;
  /**
   * Backup engine version
   */
  dpmVersion?: string;
  /**
   * Backup agent version
   */
  azureBackupAgentVersion?: string;
  /**
   * To check if backup agent upgrade available
   */
  isAzureBackupAgentUpgradeAvailable?: boolean;
  /**
   * To check if backup engine upgrade available
   */
  isDpmUpgradeAvailable?: boolean;
  /**
   * Extended info of the backupengine
   */
  extendedInfo?: BackupEngineExtendedInfo;
}

/**
 * Additional information of the DPMContainer.
 */
export interface DPMContainerExtendedInfo {
  /**
   * Last refresh time of the DPMContainer.
   */
  lastRefreshedAt?: Date;
}

/**
 * Container extended information
 */
export interface GenericContainerExtendedInfo {
  /**
   * Public key of container cert
   */
  rawCertData?: string;
  /**
   * Container identity information
   */
  containerIdentityInfo?: ContainerIdentityInfo;
  /**
   * Azure Backup Service Endpoints for the container
   */
  serviceEndpoints?: { [propertyName: string]: string };
}

/**
 * Base class for generic container of backup items
 */
export interface GenericContainer {
  /**
   * Polymorphic Discriminator
   */
  containerType: "GenericContainer";
  /**
   * Friendly name of the container.
   */
  friendlyName?: string;
  /**
   * Type of backup management for the container. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Status of registration of the container with the Recovery Services Vault.
   */
  registrationStatus?: string;
  /**
   * Status of health of the container.
   */
  healthStatus?: string;
  /**
   * Name of the container's fabric
   */
  fabricName?: string;
  /**
   * Extended information (not returned in List container API calls)
   */
  extendedInformation?: GenericContainerExtendedInfo;
}

/**
 * IaaS VM workload-specific backup request.
 */
export interface IaasVMBackupRequest {
  /**
   * Polymorphic Discriminator
   */
  objectType: "IaasVMBackupRequest";
  /**
   * Backup copy will expire after the time specified (UTC).
   */
  recoveryPointExpiryTimeInUTC?: Date;
}

/**
 * Restore files/folders from a backup copy of IaaS VM.
 */
export interface IaasVMILRRegistrationRequest {
  /**
   * Polymorphic Discriminator
   */
  objectType: "IaasVMILRRegistrationRequest";
  /**
   * ID of the IaaS VM backup copy from where the files/folders have to be restored.
   */
  recoveryPointId?: string;
  /**
   * Fully qualified ARM ID of the virtual machine whose the files / folders have to be restored.
   */
  virtualMachineId?: string;
  /**
   * iSCSI initiator name.
   */
  initiatorName?: string;
  /**
   * Whether to renew existing registration with the iSCSI server.
   */
  renewExistingRegistration?: boolean;
}

/**
 * Parameters to Provision ILR API.
 */
export interface ILRRequestResource extends Resource {
  /**
   * ILRRequestResource properties
   */
  properties?: ILRRequestUnion;
}

/**
 * Target details for file / folder restore.
 */
export interface InstantItemRecoveryTarget {
  /**
   * List of client scripts.
   */
  clientScripts?: ClientScriptForConnect[];
}

/**
 * Additional information of the container.
 */
export interface MabContainerExtendedInfo {
  /**
   * Time stamp when this container was refreshed.
   */
  lastRefreshedAt?: Date;
  /**
   * Type of backup items associated with this container. Possible values include: 'Invalid', 'VM',
   * 'FileFolder', 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState',
   * 'Client', 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase',
   * 'SAPAseDatabase'
   */
  backupItemType?: BackupItemType;
  /**
   * List of backup items associated with this container.
   */
  backupItems?: string[];
  /**
   * Backup policy associated with this container.
   */
  policyName?: string;
  /**
   * Latest backup status of this container.
   */
  lastBackupStatus?: string;
}

/**
 * MAB workload-specific Health Details.
 */
export interface MABContainerHealthDetails {
  /**
   * Health Code
   */
  code?: number;
  /**
   * Health Title
   */
  title?: string;
  /**
   * Health Message
   */
  message?: string;
  /**
   * Health Recommended Actions
   */
  recommendations?: string[];
}

/**
 * Container with items backed up using MAB backup engine.
 */
export interface MabContainer {
  /**
   * Polymorphic Discriminator
   */
  containerType: "Windows";
  /**
   * Friendly name of the container.
   */
  friendlyName?: string;
  /**
   * Type of backup management for the container. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: BackupManagementType;
  /**
   * Status of registration of the container with the Recovery Services Vault.
   */
  registrationStatus?: string;
  /**
   * Status of health of the container.
   */
  healthStatus?: string;
  /**
   * Can the container be registered one more time.
   */
  canReRegister?: boolean;
  /**
   * ContainerID represents the container.
   */
  containerId?: number;
  /**
   * Number of items backed up in this container.
   */
  protectedItemCount?: number;
  /**
   * Agent version of this container.
   */
  agentVersion?: string;
  /**
   * Additional information for this container
   */
  extendedInfo?: MabContainerExtendedInfo;
  /**
   * Health details on this mab container.
   */
  mabContainerHealthDetails?: MABContainerHealthDetails[];
  /**
   * Health state of mab container.
   */
  containerHealthState?: string;
}

/**
 * Operation status job extended info.
 */
export interface OperationStatusJobExtendedInfo {
  /**
   * Polymorphic Discriminator
   */
  objectType: "OperationStatusJobExtendedInfo";
  /**
   * ID of the job created for this protected item.
   */
  jobId?: string;
}

/**
 * Operation status extended info for list of jobs.
 */
export interface OperationStatusJobsExtendedInfo {
  /**
   * Polymorphic Discriminator
   */
  objectType: "OperationStatusJobsExtendedInfo";
  /**
   * IDs of the jobs created for the protected item.
   */
  jobIds?: string[];
  /**
   * Stores all the failed jobs along with the corresponding error codes.
   */
  failedJobsError?: { [propertyName: string]: string };
}

/**
 * Operation status extended info for ILR provision action.
 */
export interface OperationStatusProvisionILRExtendedInfo {
  /**
   * Polymorphic Discriminator
   */
  objectType: "OperationStatusProvisionILRExtendedInfo";
  /**
   * Target details for file / folder restore.
   */
  recoveryTarget?: InstantItemRecoveryTarget;
}

/**
 * Protectable Container Class.
 */
export interface ProtectableContainerResource extends Resource {
  /**
   * ProtectableContainerResource properties
   */
  properties?: ProtectableContainerUnion;
}

/**
 * Base class for container with backup items. Containers with specific workloads are derived from
 * this class.
 */
export interface ProtectionContainerResource extends Resource {
  /**
   * ProtectionContainerResource properties
   */
  properties?: ProtectionContainerUnion;
}

/**
 * The token information details.
 */
export interface TokenInformation {
  /**
   * Token value.
   */
  token?: string;
  /**
   * Expiry time of token.
   */
  expiryTimeInUtcTicks?: number;
  /**
   * Security PIN
   */
  securityPIN?: string;
}

/**
 * Base class for backup item. Workload-specific backup items are derived from this class.
 */
export interface WorkloadItemResource extends Resource {
  /**
   * WorkloadItemResource properties
   */
  properties?: WorkloadItemUnion;
}

/**
 * Base class for backup item. Workload-specific backup items are derived from this class.
 */
export interface WorkloadProtectableItemResource extends Resource {
  /**
   * WorkloadProtectableItemResource properties
   */
  properties?: WorkloadProtectableItemUnion;
}

/**
 * Localized display information of an operation.
 */
export interface ClientDiscoveryDisplay {
  /**
   * Name of the provider for display purposes
   */
  provider?: string;
  /**
   * ResourceType for which this Operation can be performed.
   */
  resource?: string;
  /**
   * Operations Name itself.
   */
  operation?: string;
  /**
   * Description of the operation having details of what operation is about.
   */
  description?: string;
}

/**
 * Class to represent shoebox log specification in json client discovery.
 */
export interface ClientDiscoveryForLogSpecification {
  /**
   * Name for shoebox log specification.
   */
  name?: string;
  /**
   * Localized display name
   */
  displayName?: string;
  /**
   * blob duration of shoebox log specification
   */
  blobDuration?: string;
}

/**
 * Class to represent shoebox service specification in json client discovery.
 */
export interface ClientDiscoveryForServiceSpecification {
  /**
   * List of log specifications of this operation.
   */
  logSpecifications?: ClientDiscoveryForLogSpecification[];
}

/**
 * Class to represent shoebox properties in json client discovery.
 */
export interface ClientDiscoveryForProperties {
  /**
   * Operation properties.
   */
  serviceSpecification?: ClientDiscoveryForServiceSpecification;
}

/**
 * Available operation details.
 */
export interface ClientDiscoveryValueForSingleApi {
  /**
   * Name of the Operation.
   */
  name?: string;
  /**
   * Contains the localized display information for this particular operation
   */
  display?: ClientDiscoveryDisplay;
  /**
   * The intended executor of the operation;governs the display of the operation in the RBAC UX and
   * the audit logs UX
   */
  origin?: string;
  /**
   * ShoeBox properties for the given operation.
   */
  properties?: ClientDiscoveryForProperties;
}

/**
 * Optional Parameters.
 */
export interface ProtectedItemsGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * OData filter options.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface RecoveryPointsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * OData filter options.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface BackupPoliciesListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * OData filter options.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface BackupJobsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * OData filter options.
   */
  filter?: string;
  /**
   * skipToken Filter.
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface JobsExportMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * OData filter options.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface BackupProtectedItemsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * OData filter options.
   */
  filter?: string;
  /**
   * skipToken Filter.
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface BackupProtectionIntentListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * OData filter options.
   */
  filter?: string;
  /**
   * skipToken Filter.
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface BackupUsageSummariesListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * OData filter options.
   */
  filter?: string;
  /**
   * skipToken Filter.
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface BackupEnginesListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * OData filter options.
   */
  filter?: string;
  /**
   * skipToken Filter.
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface BackupEnginesGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * OData filter options.
   */
  filter?: string;
  /**
   * skipToken Filter.
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface ProtectableContainersListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * OData filter options.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface ProtectionContainersInquireOptionalParams extends msRest.RequestOptionsBase {
  /**
   * OData filter options.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface ProtectionContainersRefreshOptionalParams extends msRest.RequestOptionsBase {
  /**
   * OData filter options.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface BackupWorkloadItemsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * OData filter options.
   */
  filter?: string;
  /**
   * skipToken Filter.
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface BackupProtectableItemsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * OData filter options.
   */
  filter?: string;
  /**
   * skipToken Filter.
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface BackupProtectionContainersListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * OData filter options.
   */
  filter?: string;
}

/**
 * An interface representing RecoveryServicesBackupClientOptions.
 */
export interface RecoveryServicesBackupClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * List of RecoveryPoint resources
 * @extends Array<RecoveryPointResource>
 */
export interface RecoveryPointResourceList extends Array<RecoveryPointResource> {
}

/**
 * @interface
 * List of ProtectionPolicy resources
 * @extends Array<ProtectionPolicyResource>
 */
export interface ProtectionPolicyResourceList extends Array<ProtectionPolicyResource> {
}

/**
 * @interface
 * List of Job resources
 * @extends Array<JobResource>
 */
export interface JobResourceList extends Array<JobResource> {
}

/**
 * @interface
 * List of ProtectedItem resources
 * @extends Array<ProtectedItemResource>
 */
export interface ProtectedItemResourceList extends Array<ProtectedItemResource> {
}

/**
 * @interface
 * List of ProtectionIntent resources
 * @extends Array<ProtectionIntentResource>
 */
export interface ProtectionIntentResourceList extends Array<ProtectionIntentResource> {
}

/**
 * @interface
 * Backup management usage for vault.
 * @extends Array<BackupManagementUsage>
 */
export interface BackupManagementUsageList extends Array<BackupManagementUsage> {
}

/**
 * @interface
 * List of BackupEngineBase resources
 * @extends Array<BackupEngineBaseResource>
 */
export interface BackupEngineBaseResourceList extends Array<BackupEngineBaseResource> {
}

/**
 * @interface
 * List of ProtectableContainer resources
 * @extends Array<ProtectableContainerResource>
 */
export interface ProtectableContainerResourceList extends Array<ProtectableContainerResource> {
}

/**
 * @interface
 * List of WorkloadItem resources
 * @extends Array<WorkloadItemResource>
 */
export interface WorkloadItemResourceList extends Array<WorkloadItemResource> {
}

/**
 * @interface
 * List of WorkloadProtectableItem resources
 * @extends Array<WorkloadProtectableItemResource>
 */
export interface WorkloadProtectableItemResourceList extends Array<WorkloadProtectableItemResource> {
}

/**
 * @interface
 * List of ProtectionContainer resources
 * @extends Array<ProtectionContainerResource>
 */
export interface ProtectionContainerResourceList extends Array<ProtectionContainerResource> {
}

/**
 * @interface
 * Operations List response which contains list of available APIs.
 * @extends Array<ClientDiscoveryValueForSingleApi>
 */
export interface ClientDiscoveryResponse extends Array<ClientDiscoveryValueForSingleApi> {
  /**
   * Link to the next chunk of Response.
   */
  nextLink?: string;
}

/**
 * Defines values for OperationStatusValues.
 * Possible values include: 'Invalid', 'InProgress', 'Succeeded', 'Failed', 'Canceled'
 * @readonly
 * @enum {string}
 */
export type OperationStatusValues = 'Invalid' | 'InProgress' | 'Succeeded' | 'Failed' | 'Canceled';

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Succeeded', 'Deleting', 'Failed', 'Pending'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState = 'Succeeded' | 'Deleting' | 'Failed' | 'Pending';

/**
 * Defines values for PrivateEndpointConnectionStatus.
 * Possible values include: 'Pending', 'Approved', 'Rejected', 'Disconnected'
 * @readonly
 * @enum {string}
 */
export type PrivateEndpointConnectionStatus = 'Pending' | 'Approved' | 'Rejected' | 'Disconnected';

/**
 * Defines values for ProtectionState.
 * Possible values include: 'Invalid', 'IRPending', 'Protected', 'ProtectionError',
 * 'ProtectionStopped', 'ProtectionPaused'
 * @readonly
 * @enum {string}
 */
export type ProtectionState = 'Invalid' | 'IRPending' | 'Protected' | 'ProtectionError' | 'ProtectionStopped' | 'ProtectionPaused';

/**
 * Defines values for HealthStatus.
 * Possible values include: 'Passed', 'ActionRequired', 'ActionSuggested', 'Invalid'
 * @readonly
 * @enum {string}
 */
export type HealthStatus = 'Passed' | 'ActionRequired' | 'ActionSuggested' | 'Invalid';

/**
 * Defines values for RecoveryType.
 * Possible values include: 'Invalid', 'OriginalLocation', 'AlternateLocation', 'RestoreDisks',
 * 'Offline'
 * @readonly
 * @enum {string}
 */
export type RecoveryType = 'Invalid' | 'OriginalLocation' | 'AlternateLocation' | 'RestoreDisks' | 'Offline';

/**
 * Defines values for CopyOptions.
 * Possible values include: 'Invalid', 'CreateCopy', 'Skip', 'Overwrite', 'FailOnConflict'
 * @readonly
 * @enum {string}
 */
export type CopyOptions = 'Invalid' | 'CreateCopy' | 'Skip' | 'Overwrite' | 'FailOnConflict';

/**
 * Defines values for RestoreRequestType.
 * Possible values include: 'Invalid', 'FullShareRestore', 'ItemLevelRestore'
 * @readonly
 * @enum {string}
 */
export type RestoreRequestType = 'Invalid' | 'FullShareRestore' | 'ItemLevelRestore';

/**
 * Defines values for WorkloadType.
 * Possible values include: 'Invalid', 'VM', 'FileFolder', 'AzureSqlDb', 'SQLDB', 'Exchange',
 * 'Sharepoint', 'VMwareVM', 'SystemState', 'Client', 'GenericDataSource', 'SQLDataBase',
 * 'AzureFileShare', 'SAPHanaDatabase', 'SAPAseDatabase'
 * @readonly
 * @enum {string}
 */
export type WorkloadType = 'Invalid' | 'VM' | 'FileFolder' | 'AzureSqlDb' | 'SQLDB' | 'Exchange' | 'Sharepoint' | 'VMwareVM' | 'SystemState' | 'Client' | 'GenericDataSource' | 'SQLDataBase' | 'AzureFileShare' | 'SAPHanaDatabase' | 'SAPAseDatabase';

/**
 * Defines values for PolicyType.
 * Possible values include: 'Invalid', 'Full', 'Differential', 'Log', 'CopyOnlyFull'
 * @readonly
 * @enum {string}
 */
export type PolicyType = 'Invalid' | 'Full' | 'Differential' | 'Log' | 'CopyOnlyFull';

/**
 * Defines values for JobSupportedAction.
 * Possible values include: 'Invalid', 'Cancellable', 'Retriable'
 * @readonly
 * @enum {string}
 */
export type JobSupportedAction = 'Invalid' | 'Cancellable' | 'Retriable';

/**
 * Defines values for ProtectedItemState.
 * Possible values include: 'Invalid', 'IRPending', 'Protected', 'ProtectionError',
 * 'ProtectionStopped', 'ProtectionPaused'
 * @readonly
 * @enum {string}
 */
export type ProtectedItemState = 'Invalid' | 'IRPending' | 'Protected' | 'ProtectionError' | 'ProtectionStopped' | 'ProtectionPaused';

/**
 * Defines values for LastBackupStatus.
 * Possible values include: 'Invalid', 'Healthy', 'Unhealthy', 'IRPending'
 * @readonly
 * @enum {string}
 */
export type LastBackupStatus = 'Invalid' | 'Healthy' | 'Unhealthy' | 'IRPending';

/**
 * Defines values for ProtectedItemHealthStatus.
 * Possible values include: 'Invalid', 'Healthy', 'Unhealthy', 'NotReachable', 'IRPending'
 * @readonly
 * @enum {string}
 */
export type ProtectedItemHealthStatus = 'Invalid' | 'Healthy' | 'Unhealthy' | 'NotReachable' | 'IRPending';

/**
 * Defines values for RestorePointType.
 * Possible values include: 'Invalid', 'Full', 'Log', 'Differential'
 * @readonly
 * @enum {string}
 */
export type RestorePointType = 'Invalid' | 'Full' | 'Log' | 'Differential';

/**
 * Defines values for OverwriteOptions.
 * Possible values include: 'Invalid', 'FailOnConflict', 'Overwrite'
 * @readonly
 * @enum {string}
 */
export type OverwriteOptions = 'Invalid' | 'FailOnConflict' | 'Overwrite';

/**
 * Defines values for RecoveryMode.
 * Possible values include: 'Invalid', 'FileRecovery', 'WorkloadRecovery'
 * @readonly
 * @enum {string}
 */
export type RecoveryMode = 'Invalid' | 'FileRecovery' | 'WorkloadRecovery';

/**
 * Defines values for SQLDataDirectoryType.
 * Possible values include: 'Invalid', 'Data', 'Log'
 * @readonly
 * @enum {string}
 */
export type SQLDataDirectoryType = 'Invalid' | 'Data' | 'Log';

/**
 * Defines values for StorageType.
 * Possible values include: 'Invalid', 'GeoRedundant', 'LocallyRedundant'
 * @readonly
 * @enum {string}
 */
export type StorageType = 'Invalid' | 'GeoRedundant' | 'LocallyRedundant';

/**
 * Defines values for StorageTypeState.
 * Possible values include: 'Invalid', 'Locked', 'Unlocked'
 * @readonly
 * @enum {string}
 */
export type StorageTypeState = 'Invalid' | 'Locked' | 'Unlocked';

/**
 * Defines values for EnhancedSecurityState.
 * Possible values include: 'Invalid', 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type EnhancedSecurityState = 'Invalid' | 'Enabled' | 'Disabled';

/**
 * Defines values for SoftDeleteFeatureState.
 * Possible values include: 'Invalid', 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type SoftDeleteFeatureState = 'Invalid' | 'Enabled' | 'Disabled';

/**
 * Defines values for RestorePointQueryType.
 * Possible values include: 'Invalid', 'Full', 'Log', 'Differential', 'FullAndDifferential', 'All'
 * @readonly
 * @enum {string}
 */
export type RestorePointQueryType = 'Invalid' | 'Full' | 'Log' | 'Differential' | 'FullAndDifferential' | 'All';

/**
 * Defines values for RetentionDurationType.
 * Possible values include: 'Invalid', 'Days', 'Weeks', 'Months', 'Years'
 * @readonly
 * @enum {string}
 */
export type RetentionDurationType = 'Invalid' | 'Days' | 'Weeks' | 'Months' | 'Years';

/**
 * Defines values for RecoveryPointTierType.
 * Possible values include: 'Invalid', 'InstantRP', 'HardenedRP'
 * @readonly
 * @enum {string}
 */
export type RecoveryPointTierType = 'Invalid' | 'InstantRP' | 'HardenedRP';

/**
 * Defines values for RecoveryPointTierStatus.
 * Possible values include: 'Invalid', 'Valid', 'Disabled', 'Deleted'
 * @readonly
 * @enum {string}
 */
export type RecoveryPointTierStatus = 'Invalid' | 'Valid' | 'Disabled' | 'Deleted';

/**
 * Defines values for BackupManagementType.
 * Possible values include: 'Invalid', 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer',
 * 'AzureSql', 'AzureStorage', 'AzureWorkload', 'DefaultBackup'
 * @readonly
 * @enum {string}
 */
export type BackupManagementType = 'Invalid' | 'AzureIaasVM' | 'MAB' | 'DPM' | 'AzureBackupServer' | 'AzureSql' | 'AzureStorage' | 'AzureWorkload' | 'DefaultBackup';

/**
 * Defines values for JobStatus.
 * Possible values include: 'Invalid', 'InProgress', 'Completed', 'Failed',
 * 'CompletedWithWarnings', 'Cancelled', 'Cancelling'
 * @readonly
 * @enum {string}
 */
export type JobStatus = 'Invalid' | 'InProgress' | 'Completed' | 'Failed' | 'CompletedWithWarnings' | 'Cancelled' | 'Cancelling';

/**
 * Defines values for JobOperationType.
 * Possible values include: 'Invalid', 'Register', 'UnRegister', 'ConfigureBackup', 'Backup',
 * 'Restore', 'DisableBackup', 'DeleteBackupData', 'CrossRegionRestore', 'Undelete'
 * @readonly
 * @enum {string}
 */
export type JobOperationType = 'Invalid' | 'Register' | 'UnRegister' | 'ConfigureBackup' | 'Backup' | 'Restore' | 'DisableBackup' | 'DeleteBackupData' | 'CrossRegionRestore' | 'Undelete';

/**
 * Defines values for DayOfWeek.
 * Possible values include: 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday',
 * 'Saturday'
 * @readonly
 * @enum {string}
 */
export type DayOfWeek = 'Sunday' | 'Monday' | 'Tuesday' | 'Wednesday' | 'Thursday' | 'Friday' | 'Saturday';

/**
 * Defines values for RetentionScheduleFormat.
 * Possible values include: 'Invalid', 'Daily', 'Weekly'
 * @readonly
 * @enum {string}
 */
export type RetentionScheduleFormat = 'Invalid' | 'Daily' | 'Weekly';

/**
 * Defines values for WeekOfMonth.
 * Possible values include: 'First', 'Second', 'Third', 'Fourth', 'Last', 'Invalid'
 * @readonly
 * @enum {string}
 */
export type WeekOfMonth = 'First' | 'Second' | 'Third' | 'Fourth' | 'Last' | 'Invalid';

/**
 * Defines values for MonthOfYear.
 * Possible values include: 'Invalid', 'January', 'February', 'March', 'April', 'May', 'June',
 * 'July', 'August', 'September', 'October', 'November', 'December'
 * @readonly
 * @enum {string}
 */
export type MonthOfYear = 'Invalid' | 'January' | 'February' | 'March' | 'April' | 'May' | 'June' | 'July' | 'August' | 'September' | 'October' | 'November' | 'December';

/**
 * Defines values for MabServerType.
 * Possible values include: 'Invalid', 'Unknown', 'IaasVMContainer', 'IaasVMServiceContainer',
 * 'DPMContainer', 'AzureBackupServerContainer', 'MABContainer', 'Cluster', 'AzureSqlContainer',
 * 'Windows', 'VCenter', 'VMAppContainer', 'SQLAGWorkLoadContainer', 'StorageContainer',
 * 'GenericContainer'
 * @readonly
 * @enum {string}
 */
export type MabServerType = 'Invalid' | 'Unknown' | 'IaasVMContainer' | 'IaasVMServiceContainer' | 'DPMContainer' | 'AzureBackupServerContainer' | 'MABContainer' | 'Cluster' | 'AzureSqlContainer' | 'Windows' | 'VCenter' | 'VMAppContainer' | 'SQLAGWorkLoadContainer' | 'StorageContainer' | 'GenericContainer';

/**
 * Defines values for HttpStatusCode.
 * Possible values include: 'Continue', 'SwitchingProtocols', 'OK', 'Created', 'Accepted',
 * 'NonAuthoritativeInformation', 'NoContent', 'ResetContent', 'PartialContent', 'MultipleChoices',
 * 'Ambiguous', 'MovedPermanently', 'Moved', 'Found', 'Redirect', 'SeeOther', 'RedirectMethod',
 * 'NotModified', 'UseProxy', 'Unused', 'TemporaryRedirect', 'RedirectKeepVerb', 'BadRequest',
 * 'Unauthorized', 'PaymentRequired', 'Forbidden', 'NotFound', 'MethodNotAllowed', 'NotAcceptable',
 * 'ProxyAuthenticationRequired', 'RequestTimeout', 'Conflict', 'Gone', 'LengthRequired',
 * 'PreconditionFailed', 'RequestEntityTooLarge', 'RequestUriTooLong', 'UnsupportedMediaType',
 * 'RequestedRangeNotSatisfiable', 'ExpectationFailed', 'UpgradeRequired', 'InternalServerError',
 * 'NotImplemented', 'BadGateway', 'ServiceUnavailable', 'GatewayTimeout',
 * 'HttpVersionNotSupported'
 * @readonly
 * @enum {string}
 */
export type HttpStatusCode = 'Continue' | 'SwitchingProtocols' | 'OK' | 'Created' | 'Accepted' | 'NonAuthoritativeInformation' | 'NoContent' | 'ResetContent' | 'PartialContent' | 'MultipleChoices' | 'Ambiguous' | 'MovedPermanently' | 'Moved' | 'Found' | 'Redirect' | 'SeeOther' | 'RedirectMethod' | 'NotModified' | 'UseProxy' | 'Unused' | 'TemporaryRedirect' | 'RedirectKeepVerb' | 'BadRequest' | 'Unauthorized' | 'PaymentRequired' | 'Forbidden' | 'NotFound' | 'MethodNotAllowed' | 'NotAcceptable' | 'ProxyAuthenticationRequired' | 'RequestTimeout' | 'Conflict' | 'Gone' | 'LengthRequired' | 'PreconditionFailed' | 'RequestEntityTooLarge' | 'RequestUriTooLong' | 'UnsupportedMediaType' | 'RequestedRangeNotSatisfiable' | 'ExpectationFailed' | 'UpgradeRequired' | 'InternalServerError' | 'NotImplemented' | 'BadGateway' | 'ServiceUnavailable' | 'GatewayTimeout' | 'HttpVersionNotSupported';

/**
 * Defines values for DataSourceType.
 * Possible values include: 'Invalid', 'VM', 'FileFolder', 'AzureSqlDb', 'SQLDB', 'Exchange',
 * 'Sharepoint', 'VMwareVM', 'SystemState', 'Client', 'GenericDataSource', 'SQLDataBase',
 * 'AzureFileShare', 'SAPHanaDatabase', 'SAPAseDatabase'
 * @readonly
 * @enum {string}
 */
export type DataSourceType = 'Invalid' | 'VM' | 'FileFolder' | 'AzureSqlDb' | 'SQLDB' | 'Exchange' | 'Sharepoint' | 'VMwareVM' | 'SystemState' | 'Client' | 'GenericDataSource' | 'SQLDataBase' | 'AzureFileShare' | 'SAPHanaDatabase' | 'SAPAseDatabase';

/**
 * Defines values for CreateMode.
 * Possible values include: 'Invalid', 'Default', 'Recover'
 * @readonly
 * @enum {string}
 */
export type CreateMode = 'Invalid' | 'Default' | 'Recover';

/**
 * Defines values for HealthState.
 * Possible values include: 'Passed', 'ActionRequired', 'ActionSuggested', 'Invalid'
 * @readonly
 * @enum {string}
 */
export type HealthState = 'Passed' | 'ActionRequired' | 'ActionSuggested' | 'Invalid';

/**
 * Defines values for ScheduleRunType.
 * Possible values include: 'Invalid', 'Daily', 'Weekly'
 * @readonly
 * @enum {string}
 */
export type ScheduleRunType = 'Invalid' | 'Daily' | 'Weekly';

/**
 * Defines values for SupportStatus.
 * Possible values include: 'Invalid', 'Supported', 'DefaultOFF', 'DefaultON', 'NotSupported'
 * @readonly
 * @enum {string}
 */
export type SupportStatus = 'Invalid' | 'Supported' | 'DefaultOFF' | 'DefaultON' | 'NotSupported';

/**
 * Defines values for WorkloadItemType.
 * Possible values include: 'Invalid', 'SQLInstance', 'SQLDataBase', 'SAPHanaSystem',
 * 'SAPHanaDatabase', 'SAPAseSystem', 'SAPAseDatabase'
 * @readonly
 * @enum {string}
 */
export type WorkloadItemType = 'Invalid' | 'SQLInstance' | 'SQLDataBase' | 'SAPHanaSystem' | 'SAPHanaDatabase' | 'SAPAseSystem' | 'SAPAseDatabase';

/**
 * Defines values for UsagesUnit.
 * Possible values include: 'Count', 'Bytes', 'Seconds', 'Percent', 'CountPerSecond',
 * 'BytesPerSecond'
 * @readonly
 * @enum {string}
 */
export type UsagesUnit = 'Count' | 'Bytes' | 'Seconds' | 'Percent' | 'CountPerSecond' | 'BytesPerSecond';

/**
 * Defines values for ProtectionStatus.
 * Possible values include: 'Invalid', 'NotProtected', 'Protecting', 'Protected',
 * 'ProtectionFailed'
 * @readonly
 * @enum {string}
 */
export type ProtectionStatus = 'Invalid' | 'NotProtected' | 'Protecting' | 'Protected' | 'ProtectionFailed';

/**
 * Defines values for FabricName.
 * Possible values include: 'Invalid', 'Azure'
 * @readonly
 * @enum {string}
 */
export type FabricName = 'Invalid' | 'Azure';

/**
 * Defines values for Type.
 * Possible values include: 'Invalid', 'BackupProtectedItemCountSummary',
 * 'BackupProtectionContainerCountSummary'
 * @readonly
 * @enum {string}
 */
export type Type = 'Invalid' | 'BackupProtectedItemCountSummary' | 'BackupProtectionContainerCountSummary';

/**
 * Defines values for ValidationStatus.
 * Possible values include: 'Invalid', 'Succeeded', 'Failed'
 * @readonly
 * @enum {string}
 */
export type ValidationStatus = 'Invalid' | 'Succeeded' | 'Failed';

/**
 * Defines values for IntentItemType.
 * Possible values include: 'Invalid', 'SQLInstance', 'SQLAvailabilityGroupContainer'
 * @readonly
 * @enum {string}
 */
export type IntentItemType = 'Invalid' | 'SQLInstance' | 'SQLAvailabilityGroupContainer';

/**
 * Defines values for AzureFileShareType.
 * Possible values include: 'Invalid', 'XSMB', 'XSync'
 * @readonly
 * @enum {string}
 */
export type AzureFileShareType = 'Invalid' | 'XSMB' | 'XSync';

/**
 * Defines values for InquiryStatus.
 * Possible values include: 'Invalid', 'Success', 'Failed'
 * @readonly
 * @enum {string}
 */
export type InquiryStatus = 'Invalid' | 'Success' | 'Failed';

/**
 * Defines values for BackupType.
 * Possible values include: 'Invalid', 'Full', 'Differential', 'Log', 'CopyOnlyFull'
 * @readonly
 * @enum {string}
 */
export type BackupType = 'Invalid' | 'Full' | 'Differential' | 'Log' | 'CopyOnlyFull';

/**
 * Defines values for OperationType.
 * Possible values include: 'Invalid', 'Register', 'Reregister'
 * @readonly
 * @enum {string}
 */
export type OperationType = 'Invalid' | 'Register' | 'Reregister';

/**
 * Defines values for ContainerType.
 * Possible values include: 'Invalid', 'Unknown', 'IaasVMContainer', 'IaasVMServiceContainer',
 * 'DPMContainer', 'AzureBackupServerContainer', 'MABContainer', 'Cluster', 'AzureSqlContainer',
 * 'Windows', 'VCenter', 'VMAppContainer', 'SQLAGWorkLoadContainer', 'StorageContainer',
 * 'GenericContainer'
 * @readonly
 * @enum {string}
 */
export type ContainerType = 'Invalid' | 'Unknown' | 'IaasVMContainer' | 'IaasVMServiceContainer' | 'DPMContainer' | 'AzureBackupServerContainer' | 'MABContainer' | 'Cluster' | 'AzureSqlContainer' | 'Windows' | 'VCenter' | 'VMAppContainer' | 'SQLAGWorkLoadContainer' | 'StorageContainer' | 'GenericContainer';

/**
 * Defines values for BackupItemType.
 * Possible values include: 'Invalid', 'VM', 'FileFolder', 'AzureSqlDb', 'SQLDB', 'Exchange',
 * 'Sharepoint', 'VMwareVM', 'SystemState', 'Client', 'GenericDataSource', 'SQLDataBase',
 * 'AzureFileShare', 'SAPHanaDatabase', 'SAPAseDatabase'
 * @readonly
 * @enum {string}
 */
export type BackupItemType = 'Invalid' | 'VM' | 'FileFolder' | 'AzureSqlDb' | 'SQLDB' | 'Exchange' | 'Sharepoint' | 'VMwareVM' | 'SystemState' | 'Client' | 'GenericDataSource' | 'SQLDataBase' | 'AzureFileShare' | 'SAPHanaDatabase' | 'SAPAseDatabase';

/**
 * Contains response data for the get operation.
 */
export type PrivateEndpointConnectionGetResponse = PrivateEndpointConnectionResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnectionResource;
    };
};

/**
 * Contains response data for the put operation.
 */
export type PrivateEndpointConnectionPutResponse = PrivateEndpointConnectionResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnectionResource;
    };
};

/**
 * Contains response data for the beginPut operation.
 */
export type PrivateEndpointConnectionBeginPutResponse = PrivateEndpointConnectionResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnectionResource;
    };
};

/**
 * Contains response data for the getOperationStatus operation.
 */
export type GetOperationStatusResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BackupResourceVaultConfigsGetResponse = BackupResourceVaultConfigResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupResourceVaultConfigResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type BackupResourceVaultConfigsUpdateResponse = BackupResourceVaultConfigResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupResourceVaultConfigResource;
    };
};

/**
 * Contains response data for the put operation.
 */
export type BackupResourceVaultConfigsPutResponse = BackupResourceVaultConfigResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupResourceVaultConfigResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ProtectedItemsGetResponse = ProtectedItemResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectedItemResource;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ProtectedItemsCreateOrUpdateResponse = ProtectedItemResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectedItemResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ProtectedItemOperationResultsGetResponse = ProtectedItemResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectedItemResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type RecoveryPointsListResponse = RecoveryPointResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryPointResourceList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RecoveryPointsGetResponse = RecoveryPointResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryPointResource;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type RecoveryPointsListNextResponse = RecoveryPointResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryPointResourceList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type BackupPoliciesListResponse = ProtectionPolicyResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionPolicyResourceList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type BackupPoliciesListNextResponse = ProtectionPolicyResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionPolicyResourceList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ProtectionPoliciesGetResponse = ProtectionPolicyResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionPolicyResource;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ProtectionPoliciesCreateOrUpdateResponse = ProtectionPolicyResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionPolicyResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ProtectionPolicyOperationResultsGetResponse = ProtectionPolicyResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionPolicyResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type BackupJobsListResponse = JobResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResourceList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type BackupJobsListNextResponse = JobResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResourceList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobDetailsGetResponse = JobResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ExportJobsOperationResultsGetResponse = OperationResultInfoBaseResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationResultInfoBaseResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type BackupProtectedItemsListResponse = ProtectedItemResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectedItemResourceList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type BackupProtectedItemsListNextResponse = ProtectedItemResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectedItemResourceList;
    };
};

/**
 * Contains response data for the validate operation.
 */
export type OperationValidateResponse = ValidateOperationsResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ValidateOperationsResponse;
    };
};

/**
 * Contains response data for the validate operation.
 */
export type ProtectionIntentValidateResponse = PreValidateEnableBackupResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PreValidateEnableBackupResponse;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ProtectionIntentGetResponse = ProtectionIntentResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionIntentResource;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ProtectionIntentCreateOrUpdateResponse = ProtectionIntentResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionIntentResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BackupStatusGetResponse = BackupStatusResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupStatusResponse;
    };
};

/**
 * Contains response data for the validate operation.
 */
export type FeatureSupportValidateResponse = AzureVMResourceFeatureSupportResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AzureVMResourceFeatureSupportResponse;
    };
};

/**
 * Contains response data for the list operation.
 */
export type BackupProtectionIntentListResponse = ProtectionIntentResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionIntentResourceList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type BackupProtectionIntentListNextResponse = ProtectionIntentResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionIntentResourceList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type BackupUsageSummariesListResponse = BackupManagementUsageList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupManagementUsageList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type BackupEnginesListResponse = BackupEngineBaseResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupEngineBaseResourceList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BackupEnginesGetResponse = BackupEngineBaseResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupEngineBaseResource;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type BackupEnginesListNextResponse = BackupEngineBaseResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupEngineBaseResourceList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ProtectableContainersListResponse = ProtectableContainerResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectableContainerResourceList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ProtectableContainersListNextResponse = ProtectableContainerResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectableContainerResourceList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ProtectionContainersGetResponse = ProtectionContainerResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionContainerResource;
    };
};

/**
 * Contains response data for the register operation.
 */
export type ProtectionContainersRegisterResponse = ProtectionContainerResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionContainerResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type BackupWorkloadItemsListResponse = WorkloadItemResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadItemResourceList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type BackupWorkloadItemsListNextResponse = WorkloadItemResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadItemResourceList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ProtectionContainerOperationResultsGetResponse = ProtectionContainerResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionContainerResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ProtectedItemOperationStatusesGetResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BackupOperationStatusesGetResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ProtectionPolicyOperationStatusesGetResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the list operation.
 */
export type BackupProtectableItemsListResponse = WorkloadProtectableItemResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadProtectableItemResourceList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type BackupProtectableItemsListNextResponse = WorkloadProtectableItemResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkloadProtectableItemResourceList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type BackupProtectionContainersListResponse = ProtectionContainerResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionContainerResourceList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type BackupProtectionContainersListNextResponse = ProtectionContainerResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionContainerResourceList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SecurityPINsGetResponse = TokenInformation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TokenInformation;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BackupResourceStorageConfigsGetResponse = BackupResourceConfigResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupResourceConfigResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type BackupResourceStorageConfigsUpdateResponse = BackupResourceConfigResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupResourceConfigResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = ClientDiscoveryResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClientDiscoveryResponse;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = ClientDiscoveryResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClientDiscoveryResponse;
    };
};
