/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/privateEndpointConnectionsMappers";
import * as Parameters from "../models/parameters";
import { DesktopVirtualizationAPIClientContext } from "../desktopVirtualizationAPIClientContext";

/** Class representing a PrivateEndpointConnections. */
export class PrivateEndpointConnections {
  private readonly client: DesktopVirtualizationAPIClientContext;

  /**
   * Create a PrivateEndpointConnections.
   * @param {DesktopVirtualizationAPIClientContext} client Reference to the service client.
   */
  constructor(client: DesktopVirtualizationAPIClientContext) {
    this.client = client;
  }

  /**
   * List private endpoint connections associated with hostpool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateEndpointConnectionsListByHostPoolResponse>
   */
  listByHostPool(resourceGroupName: string, hostPoolName: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateEndpointConnectionsListByHostPoolResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param callback The callback
   */
  listByHostPool(resourceGroupName: string, hostPoolName: string, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResultWithSystemData>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param options The optional parameters
   * @param callback The callback
   */
  listByHostPool(resourceGroupName: string, hostPoolName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResultWithSystemData>): void;
  listByHostPool(resourceGroupName: string, hostPoolName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateEndpointConnectionListResultWithSystemData>, callback?: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResultWithSystemData>): Promise<Models.PrivateEndpointConnectionsListByHostPoolResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        hostPoolName,
        options
      },
      listByHostPoolOperationSpec,
      callback) as Promise<Models.PrivateEndpointConnectionsListByHostPoolResponse>;
  }

  /**
   * Get a private endpoint connection.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with
   * the Azure resource
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateEndpointConnectionsGetByHostPoolResponse>
   */
  getByHostPool(resourceGroupName: string, hostPoolName: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateEndpointConnectionsGetByHostPoolResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with
   * the Azure resource
   * @param callback The callback
   */
  getByHostPool(resourceGroupName: string, hostPoolName: string, privateEndpointConnectionName: string, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionWithSystemData>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with
   * the Azure resource
   * @param options The optional parameters
   * @param callback The callback
   */
  getByHostPool(resourceGroupName: string, hostPoolName: string, privateEndpointConnectionName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionWithSystemData>): void;
  getByHostPool(resourceGroupName: string, hostPoolName: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateEndpointConnectionWithSystemData>, callback?: msRest.ServiceCallback<Models.PrivateEndpointConnectionWithSystemData>): Promise<Models.PrivateEndpointConnectionsGetByHostPoolResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        hostPoolName,
        privateEndpointConnectionName,
        options
      },
      getByHostPoolOperationSpec,
      callback) as Promise<Models.PrivateEndpointConnectionsGetByHostPoolResponse>;
  }

  /**
   * Remove a connection.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with
   * the Azure resource
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteByHostPool(resourceGroupName: string, hostPoolName: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with
   * the Azure resource
   * @param callback The callback
   */
  deleteByHostPool(resourceGroupName: string, hostPoolName: string, privateEndpointConnectionName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with
   * the Azure resource
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteByHostPool(resourceGroupName: string, hostPoolName: string, privateEndpointConnectionName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteByHostPool(resourceGroupName: string, hostPoolName: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        hostPoolName,
        privateEndpointConnectionName,
        options
      },
      deleteByHostPoolOperationSpec,
      callback);
  }

  /**
   * Approve or reject a private endpoint connection.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with
   * the Azure resource
   * @param connection Object containing the updated connection.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateEndpointConnectionsUpdateByHostPoolResponse>
   */
  updateByHostPool(resourceGroupName: string, hostPoolName: string, privateEndpointConnectionName: string, connection: Models.PrivateEndpointConnection, options?: msRest.RequestOptionsBase): Promise<Models.PrivateEndpointConnectionsUpdateByHostPoolResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with
   * the Azure resource
   * @param connection Object containing the updated connection.
   * @param callback The callback
   */
  updateByHostPool(resourceGroupName: string, hostPoolName: string, privateEndpointConnectionName: string, connection: Models.PrivateEndpointConnection, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionWithSystemData>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with
   * the Azure resource
   * @param connection Object containing the updated connection.
   * @param options The optional parameters
   * @param callback The callback
   */
  updateByHostPool(resourceGroupName: string, hostPoolName: string, privateEndpointConnectionName: string, connection: Models.PrivateEndpointConnection, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionWithSystemData>): void;
  updateByHostPool(resourceGroupName: string, hostPoolName: string, privateEndpointConnectionName: string, connection: Models.PrivateEndpointConnection, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateEndpointConnectionWithSystemData>, callback?: msRest.ServiceCallback<Models.PrivateEndpointConnectionWithSystemData>): Promise<Models.PrivateEndpointConnectionsUpdateByHostPoolResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        hostPoolName,
        privateEndpointConnectionName,
        connection,
        options
      },
      updateByHostPoolOperationSpec,
      callback) as Promise<Models.PrivateEndpointConnectionsUpdateByHostPoolResponse>;
  }

  /**
   * List private endpoint connections.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateEndpointConnectionsListByWorkspaceResponse>
   */
  listByWorkspace(resourceGroupName: string, workspaceName: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateEndpointConnectionsListByWorkspaceResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param callback The callback
   */
  listByWorkspace(resourceGroupName: string, workspaceName: string, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResultWithSystemData>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param options The optional parameters
   * @param callback The callback
   */
  listByWorkspace(resourceGroupName: string, workspaceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResultWithSystemData>): void;
  listByWorkspace(resourceGroupName: string, workspaceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateEndpointConnectionListResultWithSystemData>, callback?: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResultWithSystemData>): Promise<Models.PrivateEndpointConnectionsListByWorkspaceResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        workspaceName,
        options
      },
      listByWorkspaceOperationSpec,
      callback) as Promise<Models.PrivateEndpointConnectionsListByWorkspaceResponse>;
  }

  /**
   * Get a private endpoint connection.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with
   * the Azure resource
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateEndpointConnectionsGetByWorkspaceResponse>
   */
  getByWorkspace(resourceGroupName: string, workspaceName: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateEndpointConnectionsGetByWorkspaceResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with
   * the Azure resource
   * @param callback The callback
   */
  getByWorkspace(resourceGroupName: string, workspaceName: string, privateEndpointConnectionName: string, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionWithSystemData>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with
   * the Azure resource
   * @param options The optional parameters
   * @param callback The callback
   */
  getByWorkspace(resourceGroupName: string, workspaceName: string, privateEndpointConnectionName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionWithSystemData>): void;
  getByWorkspace(resourceGroupName: string, workspaceName: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateEndpointConnectionWithSystemData>, callback?: msRest.ServiceCallback<Models.PrivateEndpointConnectionWithSystemData>): Promise<Models.PrivateEndpointConnectionsGetByWorkspaceResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        workspaceName,
        privateEndpointConnectionName,
        options
      },
      getByWorkspaceOperationSpec,
      callback) as Promise<Models.PrivateEndpointConnectionsGetByWorkspaceResponse>;
  }

  /**
   * Remove a connection.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with
   * the Azure resource
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteByWorkspace(resourceGroupName: string, workspaceName: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with
   * the Azure resource
   * @param callback The callback
   */
  deleteByWorkspace(resourceGroupName: string, workspaceName: string, privateEndpointConnectionName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with
   * the Azure resource
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteByWorkspace(resourceGroupName: string, workspaceName: string, privateEndpointConnectionName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteByWorkspace(resourceGroupName: string, workspaceName: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        workspaceName,
        privateEndpointConnectionName,
        options
      },
      deleteByWorkspaceOperationSpec,
      callback);
  }

  /**
   * Approve or reject a private endpoint connection.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with
   * the Azure resource
   * @param connection Object containing the updated connection.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateEndpointConnectionsUpdateByWorkspaceResponse>
   */
  updateByWorkspace(resourceGroupName: string, workspaceName: string, privateEndpointConnectionName: string, connection: Models.PrivateEndpointConnection, options?: msRest.RequestOptionsBase): Promise<Models.PrivateEndpointConnectionsUpdateByWorkspaceResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with
   * the Azure resource
   * @param connection Object containing the updated connection.
   * @param callback The callback
   */
  updateByWorkspace(resourceGroupName: string, workspaceName: string, privateEndpointConnectionName: string, connection: Models.PrivateEndpointConnection, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionWithSystemData>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with
   * the Azure resource
   * @param connection Object containing the updated connection.
   * @param options The optional parameters
   * @param callback The callback
   */
  updateByWorkspace(resourceGroupName: string, workspaceName: string, privateEndpointConnectionName: string, connection: Models.PrivateEndpointConnection, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionWithSystemData>): void;
  updateByWorkspace(resourceGroupName: string, workspaceName: string, privateEndpointConnectionName: string, connection: Models.PrivateEndpointConnection, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateEndpointConnectionWithSystemData>, callback?: msRest.ServiceCallback<Models.PrivateEndpointConnectionWithSystemData>): Promise<Models.PrivateEndpointConnectionsUpdateByWorkspaceResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        workspaceName,
        privateEndpointConnectionName,
        connection,
        options
      },
      updateByWorkspaceOperationSpec,
      callback) as Promise<Models.PrivateEndpointConnectionsUpdateByWorkspaceResponse>;
  }

  /**
   * List private endpoint connections associated with hostpool.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateEndpointConnectionsListByHostPoolNextResponse>
   */
  listByHostPoolNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateEndpointConnectionsListByHostPoolNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByHostPoolNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResultWithSystemData>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByHostPoolNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResultWithSystemData>): void;
  listByHostPoolNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateEndpointConnectionListResultWithSystemData>, callback?: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResultWithSystemData>): Promise<Models.PrivateEndpointConnectionsListByHostPoolNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByHostPoolNextOperationSpec,
      callback) as Promise<Models.PrivateEndpointConnectionsListByHostPoolNextResponse>;
  }

  /**
   * List private endpoint connections.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateEndpointConnectionsListByWorkspaceNextResponse>
   */
  listByWorkspaceNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateEndpointConnectionsListByWorkspaceNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByWorkspaceNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResultWithSystemData>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByWorkspaceNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResultWithSystemData>): void;
  listByWorkspaceNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateEndpointConnectionListResultWithSystemData>, callback?: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResultWithSystemData>): Promise<Models.PrivateEndpointConnectionsListByWorkspaceNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByWorkspaceNextOperationSpec,
      callback) as Promise<Models.PrivateEndpointConnectionsListByWorkspaceNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listByHostPoolOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/privateEndpointConnections",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.hostPoolName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateEndpointConnectionListResultWithSystemData
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getByHostPoolOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/privateEndpointConnections/{privateEndpointConnectionName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.hostPoolName,
    Parameters.privateEndpointConnectionName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateEndpointConnectionWithSystemData
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const deleteByHostPoolOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/privateEndpointConnections/{privateEndpointConnectionName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.hostPoolName,
    Parameters.privateEndpointConnectionName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const updateByHostPoolOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/privateEndpointConnections/{privateEndpointConnectionName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.hostPoolName,
    Parameters.privateEndpointConnectionName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "connection",
    mapper: {
      ...Mappers.PrivateEndpointConnection,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.PrivateEndpointConnectionWithSystemData
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByWorkspaceOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}/privateEndpointConnections",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateEndpointConnectionListResultWithSystemData
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getByWorkspaceOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName,
    Parameters.privateEndpointConnectionName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateEndpointConnectionWithSystemData
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const deleteByWorkspaceOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName,
    Parameters.privateEndpointConnectionName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const updateByWorkspaceOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName,
    Parameters.privateEndpointConnectionName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "connection",
    mapper: {
      ...Mappers.PrivateEndpointConnection,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.PrivateEndpointConnectionWithSystemData
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByHostPoolNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateEndpointConnectionListResultWithSystemData
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByWorkspaceNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateEndpointConnectionListResultWithSystemData
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
