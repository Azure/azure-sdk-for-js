/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/scalingPlansMappers";
import * as Parameters from "../models/parameters";
import { DesktopVirtualizationAPIClientContext } from "../desktopVirtualizationAPIClientContext";

/** Class representing a ScalingPlans. */
export class ScalingPlans {
  private readonly client: DesktopVirtualizationAPIClientContext;

  /**
   * Create a ScalingPlans.
   * @param {DesktopVirtualizationAPIClientContext} client Reference to the service client.
   */
  constructor(client: DesktopVirtualizationAPIClientContext) {
    this.client = client;
  }

  /**
   * Get a scaling plan.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param scalingPlanName The name of the scaling plan.
   * @param [options] The optional parameters
   * @returns Promise<Models.ScalingPlansGetResponse>
   */
  get(resourceGroupName: string, scalingPlanName: string, options?: msRest.RequestOptionsBase): Promise<Models.ScalingPlansGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param scalingPlanName The name of the scaling plan.
   * @param callback The callback
   */
  get(resourceGroupName: string, scalingPlanName: string, callback: msRest.ServiceCallback<Models.ScalingPlan>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param scalingPlanName The name of the scaling plan.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, scalingPlanName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ScalingPlan>): void;
  get(resourceGroupName: string, scalingPlanName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ScalingPlan>, callback?: msRest.ServiceCallback<Models.ScalingPlan>): Promise<Models.ScalingPlansGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        scalingPlanName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.ScalingPlansGetResponse>;
  }

  /**
   * Create or update a scaling plan.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param scalingPlanName The name of the scaling plan.
   * @param scalingPlan Object containing scaling plan definitions.
   * @param [options] The optional parameters
   * @returns Promise<Models.ScalingPlansCreateResponse>
   */
  create(resourceGroupName: string, scalingPlanName: string, scalingPlan: Models.ScalingPlan, options?: msRest.RequestOptionsBase): Promise<Models.ScalingPlansCreateResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param scalingPlanName The name of the scaling plan.
   * @param scalingPlan Object containing scaling plan definitions.
   * @param callback The callback
   */
  create(resourceGroupName: string, scalingPlanName: string, scalingPlan: Models.ScalingPlan, callback: msRest.ServiceCallback<Models.ScalingPlan>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param scalingPlanName The name of the scaling plan.
   * @param scalingPlan Object containing scaling plan definitions.
   * @param options The optional parameters
   * @param callback The callback
   */
  create(resourceGroupName: string, scalingPlanName: string, scalingPlan: Models.ScalingPlan, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ScalingPlan>): void;
  create(resourceGroupName: string, scalingPlanName: string, scalingPlan: Models.ScalingPlan, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ScalingPlan>, callback?: msRest.ServiceCallback<Models.ScalingPlan>): Promise<Models.ScalingPlansCreateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        scalingPlanName,
        scalingPlan,
        options
      },
      createOperationSpec,
      callback) as Promise<Models.ScalingPlansCreateResponse>;
  }

  /**
   * Remove a scaling plan.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param scalingPlanName The name of the scaling plan.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, scalingPlanName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param scalingPlanName The name of the scaling plan.
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, scalingPlanName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param scalingPlanName The name of the scaling plan.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, scalingPlanName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(resourceGroupName: string, scalingPlanName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        scalingPlanName,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }

  /**
   * Update a scaling plan.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param scalingPlanName The name of the scaling plan.
   * @param [options] The optional parameters
   * @returns Promise<Models.ScalingPlansUpdateResponse>
   */
  update(resourceGroupName: string, scalingPlanName: string, options?: Models.ScalingPlansUpdateOptionalParams): Promise<Models.ScalingPlansUpdateResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param scalingPlanName The name of the scaling plan.
   * @param callback The callback
   */
  update(resourceGroupName: string, scalingPlanName: string, callback: msRest.ServiceCallback<Models.ScalingPlan>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param scalingPlanName The name of the scaling plan.
   * @param options The optional parameters
   * @param callback The callback
   */
  update(resourceGroupName: string, scalingPlanName: string, options: Models.ScalingPlansUpdateOptionalParams, callback: msRest.ServiceCallback<Models.ScalingPlan>): void;
  update(resourceGroupName: string, scalingPlanName: string, options?: Models.ScalingPlansUpdateOptionalParams | msRest.ServiceCallback<Models.ScalingPlan>, callback?: msRest.ServiceCallback<Models.ScalingPlan>): Promise<Models.ScalingPlansUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        scalingPlanName,
        options
      },
      updateOperationSpec,
      callback) as Promise<Models.ScalingPlansUpdateResponse>;
  }

  /**
   * List scaling plans.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param [options] The optional parameters
   * @returns Promise<Models.ScalingPlansListByResourceGroupResponse>
   */
  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.ScalingPlansListByResourceGroupResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.ScalingPlanList>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ScalingPlanList>): void;
  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ScalingPlanList>, callback?: msRest.ServiceCallback<Models.ScalingPlanList>): Promise<Models.ScalingPlansListByResourceGroupResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        options
      },
      listByResourceGroupOperationSpec,
      callback) as Promise<Models.ScalingPlansListByResourceGroupResponse>;
  }

  /**
   * List scaling plans in subscription.
   * @param [options] The optional parameters
   * @returns Promise<Models.ScalingPlansListBySubscriptionResponse>
   */
  listBySubscription(options?: msRest.RequestOptionsBase): Promise<Models.ScalingPlansListBySubscriptionResponse>;
  /**
   * @param callback The callback
   */
  listBySubscription(callback: msRest.ServiceCallback<Models.ScalingPlanList>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  listBySubscription(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ScalingPlanList>): void;
  listBySubscription(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ScalingPlanList>, callback?: msRest.ServiceCallback<Models.ScalingPlanList>): Promise<Models.ScalingPlansListBySubscriptionResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listBySubscriptionOperationSpec,
      callback) as Promise<Models.ScalingPlansListBySubscriptionResponse>;
  }

  /**
   * List scaling plan associated with hostpool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param [options] The optional parameters
   * @returns Promise<Models.ScalingPlansListByHostPoolResponse>
   */
  listByHostPool(resourceGroupName: string, hostPoolName: string, options?: msRest.RequestOptionsBase): Promise<Models.ScalingPlansListByHostPoolResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param callback The callback
   */
  listByHostPool(resourceGroupName: string, hostPoolName: string, callback: msRest.ServiceCallback<Models.ScalingPlanList>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param options The optional parameters
   * @param callback The callback
   */
  listByHostPool(resourceGroupName: string, hostPoolName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ScalingPlanList>): void;
  listByHostPool(resourceGroupName: string, hostPoolName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ScalingPlanList>, callback?: msRest.ServiceCallback<Models.ScalingPlanList>): Promise<Models.ScalingPlansListByHostPoolResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        hostPoolName,
        options
      },
      listByHostPoolOperationSpec,
      callback) as Promise<Models.ScalingPlansListByHostPoolResponse>;
  }

  /**
   * List scaling plans.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ScalingPlansListByResourceGroupNextResponse>
   */
  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ScalingPlansListByResourceGroupNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ScalingPlanList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ScalingPlanList>): void;
  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ScalingPlanList>, callback?: msRest.ServiceCallback<Models.ScalingPlanList>): Promise<Models.ScalingPlansListByResourceGroupNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByResourceGroupNextOperationSpec,
      callback) as Promise<Models.ScalingPlansListByResourceGroupNextResponse>;
  }

  /**
   * List scaling plans in subscription.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ScalingPlansListBySubscriptionNextResponse>
   */
  listBySubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ScalingPlansListBySubscriptionNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listBySubscriptionNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ScalingPlanList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listBySubscriptionNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ScalingPlanList>): void;
  listBySubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ScalingPlanList>, callback?: msRest.ServiceCallback<Models.ScalingPlanList>): Promise<Models.ScalingPlansListBySubscriptionNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listBySubscriptionNextOperationSpec,
      callback) as Promise<Models.ScalingPlansListBySubscriptionNextResponse>;
  }

  /**
   * List scaling plan associated with hostpool.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ScalingPlansListByHostPoolNextResponse>
   */
  listByHostPoolNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ScalingPlansListByHostPoolNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByHostPoolNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ScalingPlanList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByHostPoolNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ScalingPlanList>): void;
  listByHostPoolNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ScalingPlanList>, callback?: msRest.ServiceCallback<Models.ScalingPlanList>): Promise<Models.ScalingPlansListByHostPoolNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByHostPoolNextOperationSpec,
      callback) as Promise<Models.ScalingPlansListByHostPoolNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans/{scalingPlanName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.scalingPlanName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ScalingPlan
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const createOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans/{scalingPlanName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.scalingPlanName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "scalingPlan",
    mapper: {
      ...Mappers.ScalingPlan,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.ScalingPlan
    },
    201: {
      bodyMapper: Mappers.ScalingPlan
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans/{scalingPlanName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.scalingPlanName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const updateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans/{scalingPlanName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.scalingPlanName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: [
      "options",
      "scalingPlan"
    ],
    mapper: Mappers.ScalingPlanPatch
  },
  responses: {
    200: {
      bodyMapper: Mappers.ScalingPlan
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByResourceGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ScalingPlanList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listBySubscriptionOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/scalingPlans",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ScalingPlanList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByHostPoolOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/scalingPlans",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.hostPoolName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ScalingPlanList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByResourceGroupNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ScalingPlanList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listBySubscriptionNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ScalingPlanList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByHostPoolNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ScalingPlanList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
