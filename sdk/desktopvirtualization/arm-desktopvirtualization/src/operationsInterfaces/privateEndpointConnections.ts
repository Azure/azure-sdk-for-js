/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  PrivateEndpointConnectionWithSystemData,
  PrivateEndpointConnectionsListByHostPoolOptionalParams,
  PrivateEndpointConnectionsListByWorkspaceOptionalParams,
  PrivateEndpointConnectionsGetByHostPoolOptionalParams,
  PrivateEndpointConnectionsGetByHostPoolResponse,
  PrivateEndpointConnectionsDeleteByHostPoolOptionalParams,
  PrivateEndpointConnection,
  PrivateEndpointConnectionsUpdateByHostPoolOptionalParams,
  PrivateEndpointConnectionsUpdateByHostPoolResponse,
  PrivateEndpointConnectionsGetByWorkspaceOptionalParams,
  PrivateEndpointConnectionsGetByWorkspaceResponse,
  PrivateEndpointConnectionsDeleteByWorkspaceOptionalParams,
  PrivateEndpointConnectionsUpdateByWorkspaceOptionalParams,
  PrivateEndpointConnectionsUpdateByWorkspaceResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a PrivateEndpointConnections. */
export interface PrivateEndpointConnections {
  /**
   * List private endpoint connections associated with hostpool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param options The options parameters.
   */
  listByHostPool(
    resourceGroupName: string,
    hostPoolName: string,
    options?: PrivateEndpointConnectionsListByHostPoolOptionalParams
  ): PagedAsyncIterableIterator<PrivateEndpointConnectionWithSystemData>;
  /**
   * List private endpoint connections.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param options The options parameters.
   */
  listByWorkspace(
    resourceGroupName: string,
    workspaceName: string,
    options?: PrivateEndpointConnectionsListByWorkspaceOptionalParams
  ): PagedAsyncIterableIterator<PrivateEndpointConnectionWithSystemData>;
  /**
   * Get a private endpoint connection.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with the
   *                                      Azure resource
   * @param options The options parameters.
   */
  getByHostPool(
    resourceGroupName: string,
    hostPoolName: string,
    privateEndpointConnectionName: string,
    options?: PrivateEndpointConnectionsGetByHostPoolOptionalParams
  ): Promise<PrivateEndpointConnectionsGetByHostPoolResponse>;
  /**
   * Remove a connection.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with the
   *                                      Azure resource
   * @param options The options parameters.
   */
  deleteByHostPool(
    resourceGroupName: string,
    hostPoolName: string,
    privateEndpointConnectionName: string,
    options?: PrivateEndpointConnectionsDeleteByHostPoolOptionalParams
  ): Promise<void>;
  /**
   * Approve or reject a private endpoint connection.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with the
   *                                      Azure resource
   * @param connection Object containing the updated connection.
   * @param options The options parameters.
   */
  updateByHostPool(
    resourceGroupName: string,
    hostPoolName: string,
    privateEndpointConnectionName: string,
    connection: PrivateEndpointConnection,
    options?: PrivateEndpointConnectionsUpdateByHostPoolOptionalParams
  ): Promise<PrivateEndpointConnectionsUpdateByHostPoolResponse>;
  /**
   * Get a private endpoint connection.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with the
   *                                      Azure resource
   * @param options The options parameters.
   */
  getByWorkspace(
    resourceGroupName: string,
    workspaceName: string,
    privateEndpointConnectionName: string,
    options?: PrivateEndpointConnectionsGetByWorkspaceOptionalParams
  ): Promise<PrivateEndpointConnectionsGetByWorkspaceResponse>;
  /**
   * Remove a connection.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with the
   *                                      Azure resource
   * @param options The options parameters.
   */
  deleteByWorkspace(
    resourceGroupName: string,
    workspaceName: string,
    privateEndpointConnectionName: string,
    options?: PrivateEndpointConnectionsDeleteByWorkspaceOptionalParams
  ): Promise<void>;
  /**
   * Approve or reject a private endpoint connection.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with the
   *                                      Azure resource
   * @param connection Object containing the updated connection.
   * @param options The options parameters.
   */
  updateByWorkspace(
    resourceGroupName: string,
    workspaceName: string,
    privateEndpointConnectionName: string,
    connection: PrivateEndpointConnection,
    options?: PrivateEndpointConnectionsUpdateByWorkspaceOptionalParams
  ): Promise<PrivateEndpointConnectionsUpdateByWorkspaceResponse>;
}
