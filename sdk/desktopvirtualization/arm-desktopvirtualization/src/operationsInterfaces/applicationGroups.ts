/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ApplicationGroup,
  ApplicationGroupsListByResourceGroupOptionalParams,
  ApplicationGroupsListBySubscriptionOptionalParams,
  ApplicationGroupsGetOptionalParams,
  ApplicationGroupsGetResponse,
  ApplicationGroupsCreateOrUpdateOptionalParams,
  ApplicationGroupsCreateOrUpdateResponse,
  ApplicationGroupsDeleteOptionalParams,
  ApplicationGroupsUpdateOptionalParams,
  ApplicationGroupsUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ApplicationGroups. */
export interface ApplicationGroups {
  /**
   * List applicationGroups.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: ApplicationGroupsListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<ApplicationGroup>;
  /**
   * List applicationGroups in subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: ApplicationGroupsListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<ApplicationGroup>;
  /**
   * Get an application group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param applicationGroupName The name of the application group
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    applicationGroupName: string,
    options?: ApplicationGroupsGetOptionalParams
  ): Promise<ApplicationGroupsGetResponse>;
  /**
   * Create or update an applicationGroup.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param applicationGroupName The name of the application group
   * @param applicationGroup Object containing ApplicationGroup definitions.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    applicationGroupName: string,
    applicationGroup: ApplicationGroup,
    options?: ApplicationGroupsCreateOrUpdateOptionalParams
  ): Promise<ApplicationGroupsCreateOrUpdateResponse>;
  /**
   * Remove an applicationGroup.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param applicationGroupName The name of the application group
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    applicationGroupName: string,
    options?: ApplicationGroupsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Update an applicationGroup.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param applicationGroupName The name of the application group
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    applicationGroupName: string,
    options?: ApplicationGroupsUpdateOptionalParams
  ): Promise<ApplicationGroupsUpdateResponse>;
}
