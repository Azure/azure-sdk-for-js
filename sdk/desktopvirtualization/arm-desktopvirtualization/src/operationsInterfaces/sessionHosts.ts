/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  SessionHost,
  SessionHostsListOptionalParams,
  SessionHostsGetOptionalParams,
  SessionHostsGetResponse,
  SessionHostsDeleteOptionalParams,
  SessionHostsUpdateOptionalParams,
  SessionHostsUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SessionHosts. */
export interface SessionHosts {
  /**
   * List sessionHosts.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    hostPoolName: string,
    options?: SessionHostsListOptionalParams
  ): PagedAsyncIterableIterator<SessionHost>;
  /**
   * Get a session host.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param sessionHostName The name of the session host within the specified host pool
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    hostPoolName: string,
    sessionHostName: string,
    options?: SessionHostsGetOptionalParams
  ): Promise<SessionHostsGetResponse>;
  /**
   * Remove a SessionHost.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param sessionHostName The name of the session host within the specified host pool
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    hostPoolName: string,
    sessionHostName: string,
    options?: SessionHostsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Update a session host.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param sessionHostName The name of the session host within the specified host pool
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    hostPoolName: string,
    sessionHostName: string,
    options?: SessionHostsUpdateOptionalParams
  ): Promise<SessionHostsUpdateResponse>;
}
