/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const CloudErrorProperties: msRest.CompositeMapper = {
  serializedName: "CloudErrorProperties",
  type: {
    name: "Composite",
    className: "CloudErrorProperties",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceProviderOperationDisplay: msRest.CompositeMapper = {
  serializedName: "ResourceProviderOperation_display",
  type: {
    name: "Composite",
    className: "ResourceProviderOperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogSpecification: msRest.CompositeMapper = {
  serializedName: "LogSpecification",
  type: {
    name: "Composite",
    className: "LogSpecification",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      blobDuration: {
        serializedName: "blobDuration",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceSpecification: msRest.CompositeMapper = {
  serializedName: "ServiceSpecification",
  type: {
    name: "Composite",
    className: "ServiceSpecification",
    modelProperties: {
      logSpecifications: {
        serializedName: "logSpecifications",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LogSpecification"
            }
          }
        }
      }
    }
  }
};

export const OperationProperties: msRest.CompositeMapper = {
  serializedName: "OperationProperties",
  type: {
    name: "Composite",
    className: "OperationProperties",
    modelProperties: {
      serviceSpecification: {
        serializedName: "serviceSpecification",
        type: {
          name: "Composite",
          className: "ServiceSpecification"
        }
      }
    }
  }
};

export const ResourceProviderOperation: msRest.CompositeMapper = {
  serializedName: "ResourceProviderOperation",
  type: {
    name: "Composite",
    className: "ResourceProviderOperation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "ResourceProviderOperationDisplay"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        type: {
          name: "Boolean"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "OperationProperties"
        }
      }
    }
  }
};

export const SystemData: msRest.CompositeMapper = {
  serializedName: "systemData",
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ResourceModelWithAllowedPropertySet: msRest.CompositeMapper = {
  serializedName: "ResourceModelWithAllowedPropertySet",
  type: {
    name: "Composite",
    className: "ResourceModelWithAllowedPropertySet",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      managedBy: {
        serializedName: "managedBy",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        constraints: {
          Pattern: /^[-\w\._,\(\)]+$/
        },
        type: {
          name: "String"
        }
      },
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ResourceModelWithAllowedPropertySetIdentity"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "ResourceModelWithAllowedPropertySetSku"
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className: "ResourceModelWithAllowedPropertySetPlan"
        }
      }
    }
  }
};

export const Workspace: msRest.CompositeMapper = {
  serializedName: "Workspace",
  type: {
    name: "Composite",
    className: "Workspace",
    modelProperties: {
      ...ResourceModelWithAllowedPropertySet.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      objectId: {
        readOnly: true,
        serializedName: "properties.objectId",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        type: {
          name: "String"
        }
      },
      applicationGroupReferences: {
        serializedName: "properties.applicationGroupReferences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      cloudPcResource: {
        readOnly: true,
        serializedName: "properties.cloudPcResource",
        type: {
          name: "Boolean"
        }
      },
      publicNetworkAccess: {
        nullable: false,
        serializedName: "properties.publicNetworkAccess",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkspacePatch: msRest.CompositeMapper = {
  serializedName: "WorkspacePatch",
  type: {
    name: "Composite",
    className: "WorkspacePatch",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        type: {
          name: "String"
        }
      },
      applicationGroupReferences: {
        serializedName: "properties.applicationGroupReferences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      publicNetworkAccess: {
        serializedName: "properties.publicNetworkAccess",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MigrationRequestProperties: msRest.CompositeMapper = {
  serializedName: "MigrationRequestProperties",
  type: {
    name: "Composite",
    className: "MigrationRequestProperties",
    modelProperties: {
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      migrationPath: {
        serializedName: "migrationPath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationGroup: msRest.CompositeMapper = {
  serializedName: "ApplicationGroup",
  type: {
    name: "Composite",
    className: "ApplicationGroup",
    modelProperties: {
      ...ResourceModelWithAllowedPropertySet.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      objectId: {
        readOnly: true,
        serializedName: "properties.objectId",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        type: {
          name: "String"
        }
      },
      hostPoolArmPath: {
        required: true,
        nullable: false,
        serializedName: "properties.hostPoolArmPath",
        type: {
          name: "String"
        }
      },
      workspaceArmPath: {
        readOnly: true,
        serializedName: "properties.workspaceArmPath",
        type: {
          name: "String"
        }
      },
      applicationGroupType: {
        required: true,
        nullable: false,
        serializedName: "properties.applicationGroupType",
        type: {
          name: "String"
        }
      },
      migrationRequest: {
        serializedName: "properties.migrationRequest",
        type: {
          name: "Composite",
          className: "MigrationRequestProperties"
        }
      },
      cloudPcResource: {
        readOnly: true,
        serializedName: "properties.cloudPcResource",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationGroupPatch: msRest.CompositeMapper = {
  serializedName: "ApplicationGroupPatch",
  type: {
    name: "Composite",
    className: "ApplicationGroupPatch",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegistrationInfo: msRest.CompositeMapper = {
  serializedName: "RegistrationInfo",
  type: {
    name: "Composite",
    className: "RegistrationInfo",
    modelProperties: {
      expirationTime: {
        serializedName: "expirationTime",
        type: {
          name: "DateTime"
        }
      },
      token: {
        serializedName: "token",
        type: {
          name: "String"
        }
      },
      registrationTokenOperation: {
        nullable: false,
        serializedName: "registrationTokenOperation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HostPool: msRest.CompositeMapper = {
  serializedName: "HostPool",
  type: {
    name: "Composite",
    className: "HostPool",
    modelProperties: {
      ...ResourceModelWithAllowedPropertySet.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      objectId: {
        readOnly: true,
        serializedName: "properties.objectId",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      hostPoolType: {
        required: true,
        nullable: false,
        serializedName: "properties.hostPoolType",
        type: {
          name: "String"
        }
      },
      personalDesktopAssignmentType: {
        serializedName: "properties.personalDesktopAssignmentType",
        type: {
          name: "String"
        }
      },
      customRdpProperty: {
        serializedName: "properties.customRdpProperty",
        type: {
          name: "String"
        }
      },
      maxSessionLimit: {
        serializedName: "properties.maxSessionLimit",
        type: {
          name: "Number"
        }
      },
      loadBalancerType: {
        required: true,
        nullable: false,
        serializedName: "properties.loadBalancerType",
        type: {
          name: "String"
        }
      },
      ring: {
        serializedName: "properties.ring",
        type: {
          name: "Number"
        }
      },
      validationEnvironment: {
        serializedName: "properties.validationEnvironment",
        type: {
          name: "Boolean"
        }
      },
      registrationInfo: {
        serializedName: "properties.registrationInfo",
        type: {
          name: "Composite",
          className: "RegistrationInfo"
        }
      },
      vmTemplate: {
        serializedName: "properties.vmTemplate",
        type: {
          name: "String"
        }
      },
      applicationGroupReferences: {
        readOnly: true,
        serializedName: "properties.applicationGroupReferences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      ssoadfsAuthority: {
        serializedName: "properties.ssoadfsAuthority",
        type: {
          name: "String"
        }
      },
      ssoClientId: {
        serializedName: "properties.ssoClientId",
        type: {
          name: "String"
        }
      },
      ssoClientSecretKeyVaultPath: {
        serializedName: "properties.ssoClientSecretKeyVaultPath",
        type: {
          name: "String"
        }
      },
      ssoSecretType: {
        serializedName: "properties.ssoSecretType",
        type: {
          name: "String"
        }
      },
      preferredAppGroupType: {
        required: true,
        nullable: false,
        serializedName: "properties.preferredAppGroupType",
        type: {
          name: "String"
        }
      },
      startVMOnConnect: {
        serializedName: "properties.startVMOnConnect",
        type: {
          name: "Boolean"
        }
      },
      migrationRequest: {
        serializedName: "properties.migrationRequest",
        type: {
          name: "Composite",
          className: "MigrationRequestProperties"
        }
      },
      cloudPcResource: {
        readOnly: true,
        serializedName: "properties.cloudPcResource",
        type: {
          name: "Boolean"
        }
      },
      publicNetworkAccess: {
        nullable: false,
        serializedName: "properties.publicNetworkAccess",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegistrationInfoPatch: msRest.CompositeMapper = {
  serializedName: "RegistrationInfoPatch",
  type: {
    name: "Composite",
    className: "RegistrationInfoPatch",
    modelProperties: {
      expirationTime: {
        serializedName: "expirationTime",
        type: {
          name: "DateTime"
        }
      },
      registrationTokenOperation: {
        serializedName: "registrationTokenOperation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HostPoolPatch: msRest.CompositeMapper = {
  serializedName: "HostPoolPatch",
  type: {
    name: "Composite",
    className: "HostPoolPatch",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      customRdpProperty: {
        serializedName: "properties.customRdpProperty",
        type: {
          name: "String"
        }
      },
      maxSessionLimit: {
        serializedName: "properties.maxSessionLimit",
        type: {
          name: "Number"
        }
      },
      personalDesktopAssignmentType: {
        serializedName: "properties.personalDesktopAssignmentType",
        type: {
          name: "String"
        }
      },
      loadBalancerType: {
        serializedName: "properties.loadBalancerType",
        type: {
          name: "String"
        }
      },
      ring: {
        serializedName: "properties.ring",
        type: {
          name: "Number"
        }
      },
      validationEnvironment: {
        serializedName: "properties.validationEnvironment",
        type: {
          name: "Boolean"
        }
      },
      registrationInfo: {
        serializedName: "properties.registrationInfo",
        type: {
          name: "Composite",
          className: "RegistrationInfoPatch"
        }
      },
      vmTemplate: {
        serializedName: "properties.vmTemplate",
        type: {
          name: "String"
        }
      },
      ssoadfsAuthority: {
        serializedName: "properties.ssoadfsAuthority",
        type: {
          name: "String"
        }
      },
      ssoClientId: {
        serializedName: "properties.ssoClientId",
        type: {
          name: "String"
        }
      },
      ssoClientSecretKeyVaultPath: {
        serializedName: "properties.ssoClientSecretKeyVaultPath",
        type: {
          name: "String"
        }
      },
      ssoSecretType: {
        serializedName: "properties.ssoSecretType",
        type: {
          name: "String"
        }
      },
      preferredAppGroupType: {
        serializedName: "properties.preferredAppGroupType",
        type: {
          name: "String"
        }
      },
      startVMOnConnect: {
        serializedName: "properties.startVMOnConnect",
        type: {
          name: "Boolean"
        }
      },
      publicNetworkAccess: {
        serializedName: "properties.publicNetworkAccess",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SendMessage: msRest.CompositeMapper = {
  serializedName: "SendMessage",
  type: {
    name: "Composite",
    className: "SendMessage",
    modelProperties: {
      messageTitle: {
        serializedName: "messageTitle",
        type: {
          name: "String"
        }
      },
      messageBody: {
        serializedName: "messageBody",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MsixPackageDependencies: msRest.CompositeMapper = {
  serializedName: "MsixPackageDependencies",
  type: {
    name: "Composite",
    className: "MsixPackageDependencies",
    modelProperties: {
      dependencyName: {
        nullable: false,
        serializedName: "dependencyName",
        type: {
          name: "String"
        }
      },
      publisher: {
        nullable: false,
        serializedName: "publisher",
        type: {
          name: "String"
        }
      },
      minVersion: {
        nullable: false,
        serializedName: "minVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MsixPackageApplications: msRest.CompositeMapper = {
  serializedName: "MsixPackageApplications",
  type: {
    name: "Composite",
    className: "MsixPackageApplications",
    modelProperties: {
      appId: {
        nullable: false,
        serializedName: "appId",
        type: {
          name: "String"
        }
      },
      description: {
        nullable: false,
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      appUserModelID: {
        nullable: false,
        serializedName: "appUserModelID",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        nullable: false,
        serializedName: "friendlyName",
        type: {
          name: "String"
        }
      },
      iconImageName: {
        nullable: false,
        serializedName: "iconImageName",
        type: {
          name: "String"
        }
      },
      rawIcon: {
        serializedName: "rawIcon",
        type: {
          name: "ByteArray"
        }
      },
      rawPng: {
        serializedName: "rawPng",
        type: {
          name: "ByteArray"
        }
      }
    }
  }
};

export const MSIXPackage: msRest.CompositeMapper = {
  serializedName: "MSIXPackage",
  type: {
    name: "Composite",
    className: "MSIXPackage",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      imagePath: {
        nullable: false,
        serializedName: "properties.imagePath",
        type: {
          name: "String"
        }
      },
      packageName: {
        nullable: false,
        serializedName: "properties.packageName",
        type: {
          name: "String"
        }
      },
      packageFamilyName: {
        nullable: false,
        serializedName: "properties.packageFamilyName",
        type: {
          name: "String"
        }
      },
      displayName: {
        nullable: true,
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      packageRelativePath: {
        nullable: false,
        serializedName: "properties.packageRelativePath",
        type: {
          name: "String"
        }
      },
      isRegularRegistration: {
        nullable: false,
        serializedName: "properties.isRegularRegistration",
        type: {
          name: "Boolean"
        }
      },
      isActive: {
        nullable: false,
        serializedName: "properties.isActive",
        type: {
          name: "Boolean"
        }
      },
      packageDependencies: {
        serializedName: "properties.packageDependencies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MsixPackageDependencies"
            }
          }
        }
      },
      version: {
        nullable: false,
        serializedName: "properties.version",
        type: {
          name: "String"
        }
      },
      lastUpdated: {
        nullable: false,
        serializedName: "properties.lastUpdated",
        type: {
          name: "DateTime"
        }
      },
      packageApplications: {
        nullable: false,
        serializedName: "properties.packageApplications",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MsixPackageApplications"
            }
          }
        }
      }
    }
  }
};

export const MSIXPackagePatch: msRest.CompositeMapper = {
  serializedName: "MSIXPackagePatch",
  type: {
    name: "Composite",
    className: "MSIXPackagePatch",
    modelProperties: {
      ...Resource.type.modelProperties,
      isActive: {
        serializedName: "properties.isActive",
        type: {
          name: "Boolean"
        }
      },
      isRegularRegistration: {
        serializedName: "properties.isRegularRegistration",
        type: {
          name: "Boolean"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Application: msRest.CompositeMapper = {
  serializedName: "Application",
  type: {
    name: "Composite",
    className: "Application",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      objectId: {
        readOnly: true,
        serializedName: "properties.objectId",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        type: {
          name: "String"
        }
      },
      filePath: {
        serializedName: "properties.filePath",
        type: {
          name: "String"
        }
      },
      msixPackageFamilyName: {
        nullable: true,
        serializedName: "properties.msixPackageFamilyName",
        type: {
          name: "String"
        }
      },
      msixPackageApplicationId: {
        nullable: true,
        serializedName: "properties.msixPackageApplicationId",
        type: {
          name: "String"
        }
      },
      applicationType: {
        serializedName: "properties.applicationType",
        type: {
          name: "String"
        }
      },
      commandLineSetting: {
        required: true,
        nullable: false,
        serializedName: "properties.commandLineSetting",
        type: {
          name: "String"
        }
      },
      commandLineArguments: {
        serializedName: "properties.commandLineArguments",
        type: {
          name: "String"
        }
      },
      showInPortal: {
        serializedName: "properties.showInPortal",
        type: {
          name: "Boolean"
        }
      },
      iconPath: {
        serializedName: "properties.iconPath",
        type: {
          name: "String"
        }
      },
      iconIndex: {
        serializedName: "properties.iconIndex",
        type: {
          name: "Number"
        }
      },
      iconHash: {
        readOnly: true,
        serializedName: "properties.iconHash",
        type: {
          name: "String"
        }
      },
      iconContent: {
        readOnly: true,
        serializedName: "properties.iconContent",
        type: {
          name: "ByteArray"
        }
      }
    }
  }
};

export const ApplicationPatch: msRest.CompositeMapper = {
  serializedName: "ApplicationPatch",
  type: {
    name: "Composite",
    className: "ApplicationPatch",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        type: {
          name: "String"
        }
      },
      filePath: {
        serializedName: "properties.filePath",
        type: {
          name: "String"
        }
      },
      commandLineSetting: {
        serializedName: "properties.commandLineSetting",
        type: {
          name: "String"
        }
      },
      commandLineArguments: {
        serializedName: "properties.commandLineArguments",
        type: {
          name: "String"
        }
      },
      showInPortal: {
        serializedName: "properties.showInPortal",
        type: {
          name: "Boolean"
        }
      },
      iconPath: {
        serializedName: "properties.iconPath",
        type: {
          name: "String"
        }
      },
      iconIndex: {
        serializedName: "properties.iconIndex",
        type: {
          name: "Number"
        }
      },
      msixPackageFamilyName: {
        nullable: true,
        serializedName: "properties.msixPackageFamilyName",
        type: {
          name: "String"
        }
      },
      msixPackageApplicationId: {
        nullable: true,
        serializedName: "properties.msixPackageApplicationId",
        type: {
          name: "String"
        }
      },
      applicationType: {
        serializedName: "properties.applicationType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Desktop: msRest.CompositeMapper = {
  serializedName: "Desktop",
  type: {
    name: "Composite",
    className: "Desktop",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      objectId: {
        readOnly: true,
        serializedName: "properties.objectId",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        type: {
          name: "String"
        }
      },
      iconHash: {
        readOnly: true,
        serializedName: "properties.iconHash",
        type: {
          name: "String"
        }
      },
      iconContent: {
        readOnly: true,
        serializedName: "properties.iconContent",
        type: {
          name: "ByteArray"
        }
      }
    }
  }
};

export const DesktopPatch: msRest.CompositeMapper = {
  serializedName: "DesktopPatch",
  type: {
    name: "Composite",
    className: "DesktopPatch",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StartMenuItem: msRest.CompositeMapper = {
  serializedName: "StartMenuItem",
  type: {
    name: "Composite",
    className: "StartMenuItem",
    modelProperties: {
      ...Resource.type.modelProperties,
      appAlias: {
        serializedName: "properties.appAlias",
        type: {
          name: "String"
        }
      },
      filePath: {
        serializedName: "properties.filePath",
        type: {
          name: "String"
        }
      },
      commandLineArguments: {
        serializedName: "properties.commandLineArguments",
        type: {
          name: "String"
        }
      },
      iconPath: {
        serializedName: "properties.iconPath",
        type: {
          name: "String"
        }
      },
      iconIndex: {
        serializedName: "properties.iconIndex",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ExpandMsixImage: msRest.CompositeMapper = {
  serializedName: "ExpandMsixImage",
  type: {
    name: "Composite",
    className: "ExpandMsixImage",
    modelProperties: {
      ...Resource.type.modelProperties,
      packageAlias: {
        serializedName: "properties.packageAlias",
        type: {
          name: "String"
        }
      },
      imagePath: {
        nullable: false,
        serializedName: "properties.imagePath",
        type: {
          name: "String"
        }
      },
      packageName: {
        nullable: false,
        serializedName: "properties.packageName",
        type: {
          name: "String"
        }
      },
      packageFamilyName: {
        nullable: false,
        serializedName: "properties.packageFamilyName",
        type: {
          name: "String"
        }
      },
      packageFullName: {
        nullable: false,
        serializedName: "properties.packageFullName",
        type: {
          name: "String"
        }
      },
      displayName: {
        nullable: true,
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      packageRelativePath: {
        nullable: false,
        serializedName: "properties.packageRelativePath",
        type: {
          name: "String"
        }
      },
      isRegularRegistration: {
        nullable: false,
        serializedName: "properties.isRegularRegistration",
        type: {
          name: "Boolean"
        }
      },
      isActive: {
        nullable: false,
        serializedName: "properties.isActive",
        type: {
          name: "Boolean"
        }
      },
      packageDependencies: {
        nullable: true,
        serializedName: "properties.packageDependencies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MsixPackageDependencies"
            }
          }
        }
      },
      version: {
        nullable: false,
        serializedName: "properties.version",
        type: {
          name: "String"
        }
      },
      lastUpdated: {
        nullable: false,
        serializedName: "properties.lastUpdated",
        type: {
          name: "DateTime"
        }
      },
      packageApplications: {
        nullable: false,
        serializedName: "properties.packageApplications",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MsixPackageApplications"
            }
          }
        }
      }
    }
  }
};

export const MSIXImageURI: msRest.CompositeMapper = {
  serializedName: "MSIXImageURI",
  type: {
    name: "Composite",
    className: "MSIXImageURI",
    modelProperties: {
      uri: {
        serializedName: "uri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SessionHostHealthCheckFailureDetails: msRest.CompositeMapper = {
  serializedName: "SessionHostHealthCheckFailureDetails",
  type: {
    name: "Composite",
    className: "SessionHostHealthCheckFailureDetails",
    modelProperties: {
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      errorCode: {
        readOnly: true,
        serializedName: "errorCode",
        type: {
          name: "Number"
        }
      },
      lastHealthCheckDateTime: {
        readOnly: true,
        serializedName: "lastHealthCheckDateTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const SessionHostHealthCheckReport: msRest.CompositeMapper = {
  serializedName: "SessionHostHealthCheckReport",
  type: {
    name: "Composite",
    className: "SessionHostHealthCheckReport",
    modelProperties: {
      healthCheckName: {
        readOnly: true,
        serializedName: "healthCheckName",
        type: {
          name: "String"
        }
      },
      healthCheckResult: {
        readOnly: true,
        serializedName: "healthCheckResult",
        type: {
          name: "String"
        }
      },
      additionalFailureDetails: {
        readOnly: true,
        serializedName: "additionalFailureDetails",
        type: {
          name: "Composite",
          className: "SessionHostHealthCheckFailureDetails"
        }
      }
    }
  }
};

export const SessionHost: msRest.CompositeMapper = {
  serializedName: "SessionHost",
  type: {
    name: "Composite",
    className: "SessionHost",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      objectId: {
        readOnly: true,
        serializedName: "properties.objectId",
        type: {
          name: "String"
        }
      },
      lastHeartBeat: {
        serializedName: "properties.lastHeartBeat",
        type: {
          name: "DateTime"
        }
      },
      sessions: {
        serializedName: "properties.sessions",
        type: {
          name: "Number"
        }
      },
      agentVersion: {
        serializedName: "properties.agentVersion",
        type: {
          name: "String"
        }
      },
      allowNewSession: {
        serializedName: "properties.allowNewSession",
        type: {
          name: "Boolean"
        }
      },
      virtualMachineId: {
        readOnly: true,
        serializedName: "properties.virtualMachineId",
        type: {
          name: "String"
        }
      },
      resourceId: {
        readOnly: true,
        serializedName: "properties.resourceId",
        type: {
          name: "String"
        }
      },
      assignedUser: {
        serializedName: "properties.assignedUser",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      statusTimestamp: {
        readOnly: true,
        serializedName: "properties.statusTimestamp",
        type: {
          name: "DateTime"
        }
      },
      osVersion: {
        serializedName: "properties.osVersion",
        type: {
          name: "String"
        }
      },
      sxSStackVersion: {
        serializedName: "properties.sxSStackVersion",
        type: {
          name: "String"
        }
      },
      updateState: {
        serializedName: "properties.updateState",
        type: {
          name: "String"
        }
      },
      lastUpdateTime: {
        readOnly: true,
        serializedName: "properties.lastUpdateTime",
        type: {
          name: "DateTime"
        }
      },
      updateErrorMessage: {
        serializedName: "properties.updateErrorMessage",
        type: {
          name: "String"
        }
      },
      sessionHostHealthCheckResults: {
        readOnly: true,
        serializedName: "properties.sessionHostHealthCheckResults",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SessionHostHealthCheckReport"
            }
          }
        }
      }
    }
  }
};

export const SessionHostPatch: msRest.CompositeMapper = {
  serializedName: "SessionHostPatch",
  type: {
    name: "Composite",
    className: "SessionHostPatch",
    modelProperties: {
      ...Resource.type.modelProperties,
      allowNewSession: {
        serializedName: "properties.allowNewSession",
        type: {
          name: "Boolean"
        }
      },
      assignedUser: {
        serializedName: "properties.assignedUser",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserSession: msRest.CompositeMapper = {
  serializedName: "UserSession",
  type: {
    name: "Composite",
    className: "UserSession",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      objectId: {
        readOnly: true,
        serializedName: "properties.objectId",
        type: {
          name: "String"
        }
      },
      userPrincipalName: {
        serializedName: "properties.userPrincipalName",
        type: {
          name: "String"
        }
      },
      applicationType: {
        serializedName: "properties.applicationType",
        type: {
          name: "String"
        }
      },
      sessionState: {
        serializedName: "properties.sessionState",
        type: {
          name: "String"
        }
      },
      activeDirectoryUserName: {
        serializedName: "properties.activeDirectoryUserName",
        type: {
          name: "String"
        }
      },
      createTime: {
        serializedName: "properties.createTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Time: msRest.CompositeMapper = {
  serializedName: "Time",
  type: {
    name: "Composite",
    className: "Time",
    modelProperties: {
      hour: {
        required: true,
        serializedName: "hour",
        constraints: {
          InclusiveMaximum: 23,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      minute: {
        required: true,
        serializedName: "minute",
        constraints: {
          InclusiveMaximum: 59,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ScalingSchedule: msRest.CompositeMapper = {
  serializedName: "ScalingSchedule",
  type: {
    name: "Composite",
    className: "ScalingSchedule",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      daysOfWeek: {
        serializedName: "daysOfWeek",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      rampUpStartTime: {
        serializedName: "rampUpStartTime",
        type: {
          name: "Composite",
          className: "Time"
        }
      },
      rampUpLoadBalancingAlgorithm: {
        serializedName: "rampUpLoadBalancingAlgorithm",
        type: {
          name: "String"
        }
      },
      rampUpMinimumHostsPct: {
        serializedName: "rampUpMinimumHostsPct",
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      rampUpCapacityThresholdPct: {
        serializedName: "rampUpCapacityThresholdPct",
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 1
        },
        type: {
          name: "Number"
        }
      },
      peakStartTime: {
        serializedName: "peakStartTime",
        type: {
          name: "Composite",
          className: "Time"
        }
      },
      peakLoadBalancingAlgorithm: {
        serializedName: "peakLoadBalancingAlgorithm",
        type: {
          name: "String"
        }
      },
      rampDownStartTime: {
        serializedName: "rampDownStartTime",
        type: {
          name: "Composite",
          className: "Time"
        }
      },
      rampDownLoadBalancingAlgorithm: {
        serializedName: "rampDownLoadBalancingAlgorithm",
        type: {
          name: "String"
        }
      },
      rampDownMinimumHostsPct: {
        serializedName: "rampDownMinimumHostsPct",
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      rampDownCapacityThresholdPct: {
        serializedName: "rampDownCapacityThresholdPct",
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      rampDownForceLogoffUsers: {
        serializedName: "rampDownForceLogoffUsers",
        type: {
          name: "Boolean"
        }
      },
      rampDownStopHostsWhen: {
        serializedName: "rampDownStopHostsWhen",
        type: {
          name: "String"
        }
      },
      rampDownWaitTimeMinutes: {
        serializedName: "rampDownWaitTimeMinutes",
        type: {
          name: "Number"
        }
      },
      rampDownNotificationMessage: {
        serializedName: "rampDownNotificationMessage",
        type: {
          name: "String"
        }
      },
      offPeakStartTime: {
        serializedName: "offPeakStartTime",
        type: {
          name: "Composite",
          className: "Time"
        }
      },
      offPeakLoadBalancingAlgorithm: {
        serializedName: "offPeakLoadBalancingAlgorithm",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ScalingHostPoolReference: msRest.CompositeMapper = {
  serializedName: "ScalingHostPoolReference",
  type: {
    name: "Composite",
    className: "ScalingHostPoolReference",
    modelProperties: {
      hostPoolArmPath: {
        serializedName: "hostPoolArmPath",
        type: {
          name: "String"
        }
      },
      scalingPlanEnabled: {
        serializedName: "scalingPlanEnabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ScalingPlan: msRest.CompositeMapper = {
  serializedName: "ScalingPlan",
  type: {
    name: "Composite",
    className: "ScalingPlan",
    modelProperties: {
      ...ResourceModelWithAllowedPropertySet.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      objectId: {
        readOnly: true,
        serializedName: "properties.objectId",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        type: {
          name: "String"
        }
      },
      timeZone: {
        serializedName: "properties.timeZone",
        type: {
          name: "String"
        }
      },
      hostPoolType: {
        nullable: false,
        serializedName: "properties.hostPoolType",
        type: {
          name: "String"
        }
      },
      exclusionTag: {
        serializedName: "properties.exclusionTag",
        type: {
          name: "String"
        }
      },
      schedules: {
        serializedName: "properties.schedules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ScalingSchedule"
            }
          }
        }
      },
      hostPoolReferences: {
        serializedName: "properties.hostPoolReferences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ScalingHostPoolReference"
            }
          }
        }
      }
    }
  }
};

export const ScalingPlanPatch: msRest.CompositeMapper = {
  serializedName: "ScalingPlanPatch",
  type: {
    name: "Composite",
    className: "ScalingPlanPatch",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        type: {
          name: "String"
        }
      },
      timeZone: {
        serializedName: "properties.timeZone",
        type: {
          name: "String"
        }
      },
      exclusionTag: {
        serializedName: "properties.exclusionTag",
        type: {
          name: "String"
        }
      },
      schedules: {
        serializedName: "properties.schedules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ScalingSchedule"
            }
          }
        }
      },
      hostPoolReferences: {
        serializedName: "properties.hostPoolReferences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ScalingHostPoolReference"
            }
          }
        }
      }
    }
  }
};

export const PrivateEndpointConnection: msRest.CompositeMapper = {
  serializedName: "PrivateEndpointConnection",
  type: {
    name: "Composite",
    className: "PrivateEndpointConnection",
    modelProperties: {
      ...Resource.type.modelProperties,
      privateEndpoint: {
        serializedName: "properties.privateEndpoint",
        type: {
          name: "Composite",
          className: "PrivateEndpoint"
        }
      },
      privateLinkServiceConnectionState: {
        required: true,
        serializedName: "properties.privateLinkServiceConnectionState",
        type: {
          name: "Composite",
          className: "PrivateLinkServiceConnectionState"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointConnectionWithSystemData: msRest.CompositeMapper = {
  serializedName: "PrivateEndpointConnectionWithSystemData",
  type: {
    name: "Composite",
    className: "PrivateEndpointConnectionWithSystemData",
    modelProperties: {
      ...PrivateEndpointConnection.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const PrivateLinkResource: msRest.CompositeMapper = {
  serializedName: "PrivateLinkResource",
  type: {
    name: "Composite",
    className: "PrivateLinkResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      groupId: {
        readOnly: true,
        serializedName: "properties.groupId",
        type: {
          name: "String"
        }
      },
      requiredMembers: {
        readOnly: true,
        serializedName: "properties.requiredMembers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      requiredZoneNames: {
        serializedName: "properties.requiredZoneNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureEntityResource: msRest.CompositeMapper = {
  serializedName: "AzureEntityResource",
  type: {
    name: "Composite",
    className: "AzureEntityResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateLinkServiceConnectionState: msRest.CompositeMapper = {
  serializedName: "PrivateLinkServiceConnectionState",
  type: {
    name: "Composite",
    className: "PrivateLinkServiceConnectionState",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      actionsRequired: {
        serializedName: "actionsRequired",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpoint: msRest.CompositeMapper = {
  serializedName: "PrivateEndpoint",
  type: {
    name: "Composite",
    className: "PrivateEndpoint",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Plan: msRest.CompositeMapper = {
  serializedName: "Plan",
  type: {
    name: "Composite",
    className: "Plan",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      publisher: {
        required: true,
        serializedName: "publisher",
        type: {
          name: "String"
        }
      },
      product: {
        required: true,
        serializedName: "product",
        type: {
          name: "String"
        }
      },
      promotionCode: {
        serializedName: "promotionCode",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Sku: msRest.CompositeMapper = {
  serializedName: "Sku",
  type: {
    name: "Composite",
    className: "Sku",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "tier",
        type: {
          name: "Enum",
          allowedValues: [
            "Free",
            "Basic",
            "Standard",
            "Premium"
          ]
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "String"
        }
      },
      family: {
        serializedName: "family",
        type: {
          name: "String"
        }
      },
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Identity: msRest.CompositeMapper = {
  serializedName: "Identity",
  type: {
    name: "Composite",
    className: "Identity",
    modelProperties: {
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "Enum",
          allowedValues: [
            "SystemAssigned"
          ]
        }
      }
    }
  }
};

export const ResourceModelWithAllowedPropertySetIdentity: msRest.CompositeMapper = {
  serializedName: "ResourceModelWithAllowedPropertySet_identity",
  type: {
    name: "Composite",
    className: "ResourceModelWithAllowedPropertySetIdentity",
    modelProperties: {
      ...Identity.type.modelProperties
    }
  }
};

export const ResourceModelWithAllowedPropertySetSku: msRest.CompositeMapper = {
  serializedName: "ResourceModelWithAllowedPropertySet_sku",
  type: {
    name: "Composite",
    className: "ResourceModelWithAllowedPropertySetSku",
    modelProperties: {
      ...Sku.type.modelProperties
    }
  }
};

export const ResourceModelWithAllowedPropertySetPlan: msRest.CompositeMapper = {
  serializedName: "ResourceModelWithAllowedPropertySet_plan",
  type: {
    name: "Composite",
    className: "ResourceModelWithAllowedPropertySetPlan",
    modelProperties: {
      ...Plan.type.modelProperties
    }
  }
};

export const ResourceProviderOperationList: msRest.CompositeMapper = {
  serializedName: "ResourceProviderOperationList",
  type: {
    name: "Composite",
    className: "ResourceProviderOperationList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResourceProviderOperation"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkspaceList: msRest.CompositeMapper = {
  serializedName: "WorkspaceList",
  type: {
    name: "Composite",
    className: "WorkspaceList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Workspace"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ScalingPlanList: msRest.CompositeMapper = {
  serializedName: "ScalingPlanList",
  type: {
    name: "Composite",
    className: "ScalingPlanList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ScalingPlan"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationGroupList: msRest.CompositeMapper = {
  serializedName: "ApplicationGroupList",
  type: {
    name: "Composite",
    className: "ApplicationGroupList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationGroup"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StartMenuItemList: msRest.CompositeMapper = {
  serializedName: "StartMenuItemList",
  type: {
    name: "Composite",
    className: "StartMenuItemList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StartMenuItem"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationList: msRest.CompositeMapper = {
  serializedName: "ApplicationList",
  type: {
    name: "Composite",
    className: "ApplicationList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Application"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DesktopList: msRest.CompositeMapper = {
  serializedName: "DesktopList",
  type: {
    name: "Composite",
    className: "DesktopList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Desktop"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HostPoolList: msRest.CompositeMapper = {
  serializedName: "HostPoolList",
  type: {
    name: "Composite",
    className: "HostPoolList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HostPool"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserSessionList: msRest.CompositeMapper = {
  serializedName: "UserSessionList",
  type: {
    name: "Composite",
    className: "UserSessionList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UserSession"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SessionHostList: msRest.CompositeMapper = {
  serializedName: "SessionHostList",
  type: {
    name: "Composite",
    className: "SessionHostList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SessionHost"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MSIXPackageList: msRest.CompositeMapper = {
  serializedName: "MSIXPackageList",
  type: {
    name: "Composite",
    className: "MSIXPackageList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MSIXPackage"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExpandMsixImageList: msRest.CompositeMapper = {
  serializedName: "ExpandMsixImageList",
  type: {
    name: "Composite",
    className: "ExpandMsixImageList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExpandMsixImage"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointConnectionListResultWithSystemData: msRest.CompositeMapper = {
  serializedName: "PrivateEndpointConnectionListResultWithSystemData",
  type: {
    name: "Composite",
    className: "PrivateEndpointConnectionListResultWithSystemData",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnectionWithSystemData"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateLinkResourceListResult: msRest.CompositeMapper = {
  serializedName: "PrivateLinkResourceListResult",
  type: {
    name: "Composite",
    className: "PrivateLinkResourceListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateLinkResource"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
