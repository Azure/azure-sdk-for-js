/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Cloud error object properties.
 */
export interface CloudErrorProperties {
  /**
   * Error code
   */
  code?: string;
  /**
   * Error message indicating why the operation failed.
   */
  message?: string;
}

/**
 * Display metadata associated with the operation.
 */
export interface ResourceProviderOperationDisplay {
  /**
   * Resource provider: Microsoft Desktop Virtualization.
   */
  provider?: string;
  /**
   * Resource on which the operation is performed.
   */
  resource?: string;
  /**
   * Type of operation: get, read, delete, etc.
   */
  operation?: string;
  /**
   * Description of this operation.
   */
  description?: string;
}

/**
 * Specifications of the Log for Azure Monitoring
 */
export interface LogSpecification {
  /**
   * Name of the log
   */
  name?: string;
  /**
   * Localized friendly display name of the log
   */
  displayName?: string;
  /**
   * Blob duration of the log
   */
  blobDuration?: string;
}

/**
 * Service specification payload
 */
export interface ServiceSpecification {
  /**
   * Specifications of the Log for Azure Monitoring
   */
  logSpecifications?: LogSpecification[];
}

/**
 * Properties of the operation
 */
export interface OperationProperties {
  serviceSpecification?: ServiceSpecification;
}

/**
 * Supported operation of this resource provider.
 */
export interface ResourceProviderOperation {
  /**
   * Operation name, in format of {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * Display metadata associated with the operation.
   */
  display?: ResourceProviderOperationDisplay;
  /**
   * Is a data action.
   */
  isDataAction?: boolean;
  properties?: OperationProperties;
}

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
export interface SystemData {
  /**
   * The identity that created the resource.
   */
  createdBy?: string;
  /**
   * The type of identity that created the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  createdByType?: CreatedByType;
  /**
   * The timestamp of resource creation (UTC).
   */
  createdAt?: Date;
  /**
   * The identity that last modified the resource.
   */
  lastModifiedBy?: string;
  /**
   * The type of identity that last modified the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  lastModifiedByType?: CreatedByType;
  /**
   * The timestamp of resource last modification (UTC)
   */
  lastModifiedAt?: Date;
}

/**
 * The resource model definition containing the full set of allowed properties for a resource.
 * Except properties bag, there cannot be a top level property outside of this set.
 */
export interface ResourceModelWithAllowedPropertySet extends BaseResource {
  /**
   * Fully qualified resource ID for the resource. Ex -
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
   * "Microsoft.Storage/storageAccounts"
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The geo-location where the resource lives
   */
  location?: string;
  /**
   * The fully qualified resource ID of the resource that manages this resource. Indicates if this
   * resource is managed by another Azure resource. If this is present, complete mode deployment
   * will not delete the resource if it is removed from the template since it is managed by another
   * resource.
   */
  managedBy?: string;
  /**
   * Metadata used by portal/tooling/etc to render different UX experiences for resources of the
   * same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource
   * provider must validate and persist this value.
   */
  kind?: string;
  /**
   * The etag field is *not* required. If it is provided in the response body, it must also be
   * provided as a header per the normal etag convention.  Entity tags are used for comparing two
   * or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag
   * (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range
   * (section 14.27) header fields.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly etag?: string;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  identity?: ResourceModelWithAllowedPropertySetIdentity;
  sku?: ResourceModelWithAllowedPropertySetSku;
  plan?: ResourceModelWithAllowedPropertySetPlan;
}

/**
 * Represents a Workspace definition.
 */
export interface Workspace extends ResourceModelWithAllowedPropertySet {
  /**
   * Metadata pertaining to creation and last modification of the resource.
   */
  systemData?: SystemData;
  /**
   * ObjectId of Workspace. (internal use)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly objectId?: string;
  /**
   * Description of Workspace.
   */
  description?: string;
  /**
   * Friendly name of Workspace.
   */
  friendlyName?: string;
  /**
   * List of applicationGroup resource Ids.
   */
  applicationGroupReferences?: string[];
  /**
   * Is cloud pc resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly cloudPcResource?: boolean;
  /**
   * Enabled allows this resource to be accessed from both public and private networks, Disabled
   * allows this resource to only be accessed via private endpoints. Possible values include:
   * 'Enabled', 'Disabled'
   */
  publicNetworkAccess?: PublicNetworkAccess;
}

/**
 * Workspace properties that can be patched.
 */
export interface WorkspacePatch {
  /**
   * tags to be updated
   */
  tags?: { [propertyName: string]: string };
  /**
   * Description of Workspace.
   */
  description?: string;
  /**
   * Friendly name of Workspace.
   */
  friendlyName?: string;
  /**
   * List of applicationGroup links.
   */
  applicationGroupReferences?: string[];
  /**
   * Enabled to allow this resource to be access from the public network. Possible values include:
   * 'Enabled', 'Disabled'
   */
  publicNetworkAccess?: PublicNetworkAccess;
}

/**
 * Properties for arm migration.
 */
export interface MigrationRequestProperties {
  /**
   * The type of operation for migration. Possible values include: 'Start', 'Revoke', 'Complete',
   * 'Hide', 'Unhide'
   */
  operation?: Operation;
  /**
   * The path to the legacy object to migrate.
   */
  migrationPath?: string;
}

/**
 * Represents a ApplicationGroup definition.
 */
export interface ApplicationGroup extends ResourceModelWithAllowedPropertySet {
  /**
   * Metadata pertaining to creation and last modification of the resource.
   */
  systemData?: SystemData;
  /**
   * ObjectId of ApplicationGroup. (internal use)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly objectId?: string;
  /**
   * Description of ApplicationGroup.
   */
  description?: string;
  /**
   * Friendly name of ApplicationGroup.
   */
  friendlyName?: string;
  /**
   * HostPool arm path of ApplicationGroup.
   */
  hostPoolArmPath: string;
  /**
   * Workspace arm path of ApplicationGroup.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly workspaceArmPath?: string;
  /**
   * Resource Type of ApplicationGroup. Possible values include: 'RemoteApp', 'Desktop'
   */
  applicationGroupType: ApplicationGroupType;
  /**
   * The registration info of HostPool.
   */
  migrationRequest?: MigrationRequestProperties;
  /**
   * Is cloud pc resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly cloudPcResource?: boolean;
}

/**
 * Common fields that are returned in the response for all Azure Resource Manager resources
 * @summary Resource
 */
export interface Resource extends BaseResource {
  /**
   * Fully qualified resource ID for the resource. Ex -
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
   * "Microsoft.Storage/storageAccounts"
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * ApplicationGroup properties that can be patched.
 */
export interface ApplicationGroupPatch extends Resource {
  /**
   * tags to be updated
   */
  tags?: { [propertyName: string]: string };
  /**
   * Description of ApplicationGroup.
   */
  description?: string;
  /**
   * Friendly name of ApplicationGroup.
   */
  friendlyName?: string;
}

/**
 * Represents a RegistrationInfo definition.
 */
export interface RegistrationInfo {
  /**
   * Expiration time of registration token.
   */
  expirationTime?: Date;
  /**
   * The registration token base64 encoded string.
   */
  token?: string;
  /**
   * The type of resetting the token. Possible values include: 'Delete', 'None', 'Update'
   */
  registrationTokenOperation?: RegistrationTokenOperation;
}

/**
 * Represents a HostPool definition.
 */
export interface HostPool extends ResourceModelWithAllowedPropertySet {
  /**
   * Metadata pertaining to creation and last modification of the resource.
   */
  systemData?: SystemData;
  /**
   * ObjectId of HostPool. (internal use)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly objectId?: string;
  /**
   * Friendly name of HostPool.
   */
  friendlyName?: string;
  /**
   * Description of HostPool.
   */
  description?: string;
  /**
   * HostPool type for desktop. Possible values include: 'Personal', 'Pooled', 'BYODesktop'
   */
  hostPoolType: HostPoolType;
  /**
   * PersonalDesktopAssignment type for HostPool. Possible values include: 'Automatic', 'Direct'
   */
  personalDesktopAssignmentType?: PersonalDesktopAssignmentType;
  /**
   * Custom rdp property of HostPool.
   */
  customRdpProperty?: string;
  /**
   * The max session limit of HostPool.
   */
  maxSessionLimit?: number;
  /**
   * The type of the load balancer. Possible values include: 'BreadthFirst', 'DepthFirst',
   * 'Persistent'
   */
  loadBalancerType: LoadBalancerType;
  /**
   * The ring number of HostPool.
   */
  ring?: number;
  /**
   * Is validation environment.
   */
  validationEnvironment?: boolean;
  /**
   * The registration info of HostPool.
   */
  registrationInfo?: RegistrationInfo;
  /**
   * VM template for sessionhosts configuration within hostpool.
   */
  vmTemplate?: string;
  /**
   * List of applicationGroup links.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly applicationGroupReferences?: string[];
  /**
   * URL to customer ADFS server for signing WVD SSO certificates.
   */
  ssoadfsAuthority?: string;
  /**
   * ClientId for the registered Relying Party used to issue WVD SSO certificates.
   */
  ssoClientId?: string;
  /**
   * Path to Azure KeyVault storing the secret used for communication to ADFS.
   */
  ssoClientSecretKeyVaultPath?: string;
  /**
   * The type of single sign on Secret Type. Possible values include: 'SharedKey', 'Certificate',
   * 'SharedKeyInKeyVault', 'CertificateInKeyVault'
   */
  ssoSecretType?: SSOSecretType;
  /**
   * The type of preferred application group type, default to Desktop Application Group. Possible
   * values include: 'None', 'Desktop', 'RailApplications'
   */
  preferredAppGroupType: PreferredAppGroupType;
  /**
   * The flag to turn on/off StartVMOnConnect feature.
   */
  startVMOnConnect?: boolean;
  /**
   * The registration info of HostPool.
   */
  migrationRequest?: MigrationRequestProperties;
  /**
   * Is cloud pc resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly cloudPcResource?: boolean;
  /**
   * Enabled allows this resource to be accessed from both public and private networks, Disabled
   * allows this resource to only be accessed via private endpoints. Possible values include:
   * 'Enabled', 'Disabled'
   */
  publicNetworkAccess?: PublicNetworkAccess;
}

/**
 * Represents a RegistrationInfo definition.
 */
export interface RegistrationInfoPatch {
  /**
   * Expiration time of registration token.
   */
  expirationTime?: Date;
  /**
   * The type of resetting the token. Possible values include: 'Delete', 'None', 'Update'
   */
  registrationTokenOperation?: RegistrationTokenOperation;
}

/**
 * HostPool properties that can be patched.
 */
export interface HostPoolPatch extends Resource {
  /**
   * tags to be updated
   */
  tags?: { [propertyName: string]: string };
  /**
   * Friendly name of HostPool.
   */
  friendlyName?: string;
  /**
   * Description of HostPool.
   */
  description?: string;
  /**
   * Custom rdp property of HostPool.
   */
  customRdpProperty?: string;
  /**
   * The max session limit of HostPool.
   */
  maxSessionLimit?: number;
  /**
   * PersonalDesktopAssignment type for HostPool. Possible values include: 'Automatic', 'Direct'
   */
  personalDesktopAssignmentType?: PersonalDesktopAssignmentType;
  /**
   * The type of the load balancer. Possible values include: 'BreadthFirst', 'DepthFirst',
   * 'Persistent'
   */
  loadBalancerType?: LoadBalancerType;
  /**
   * The ring number of HostPool.
   */
  ring?: number;
  /**
   * Is validation environment.
   */
  validationEnvironment?: boolean;
  /**
   * The registration info of HostPool.
   */
  registrationInfo?: RegistrationInfoPatch;
  /**
   * VM template for sessionhosts configuration within hostpool.
   */
  vmTemplate?: string;
  /**
   * URL to customer ADFS server for signing WVD SSO certificates.
   */
  ssoadfsAuthority?: string;
  /**
   * ClientId for the registered Relying Party used to issue WVD SSO certificates.
   */
  ssoClientId?: string;
  /**
   * Path to Azure KeyVault storing the secret used for communication to ADFS.
   */
  ssoClientSecretKeyVaultPath?: string;
  /**
   * The type of single sign on Secret Type. Possible values include: 'SharedKey', 'Certificate',
   * 'SharedKeyInKeyVault', 'CertificateInKeyVault'
   */
  ssoSecretType?: SSOSecretType;
  /**
   * The type of preferred application group type, default to Desktop Application Group. Possible
   * values include: 'None', 'Desktop', 'RailApplications'
   */
  preferredAppGroupType?: PreferredAppGroupType;
  /**
   * The flag to turn on/off StartVMOnConnect feature.
   */
  startVMOnConnect?: boolean;
  /**
   * Enabled to allow this resource to be access from the public network. Possible values include:
   * 'Enabled', 'Disabled'
   */
  publicNetworkAccess?: PublicNetworkAccess;
}

/**
 * Represents message sent to a UserSession.
 */
export interface SendMessage {
  /**
   * Title of message.
   */
  messageTitle?: string;
  /**
   * Body of message.
   */
  messageBody?: string;
}

/**
 * Schema for MSIX Package Dependencies properties.
 */
export interface MsixPackageDependencies {
  /**
   * Name of package dependency.
   */
  dependencyName?: string;
  /**
   * Name of dependency publisher.
   */
  publisher?: string;
  /**
   * Dependency version required.
   */
  minVersion?: string;
}

/**
 * Schema for MSIX Package Application properties.
 */
export interface MsixPackageApplications {
  /**
   * Package Application Id, found in appxmanifest.xml.
   */
  appId?: string;
  /**
   * Description of Package Application.
   */
  description?: string;
  /**
   * Used to activate Package Application. Consists of Package Name and ApplicationID. Found in
   * appxmanifest.xml.
   */
  appUserModelID?: string;
  /**
   * User friendly name.
   */
  friendlyName?: string;
  /**
   * User friendly name.
   */
  iconImageName?: string;
  /**
   * the icon a 64 bit string as a byte array.
   */
  rawIcon?: Uint8Array;
  /**
   * the icon a 64 bit string as a byte array.
   */
  rawPng?: Uint8Array;
}

/**
 * Schema for MSIX Package properties.
 */
export interface MSIXPackage extends Resource {
  /**
   * Metadata pertaining to creation and last modification of the resource.
   */
  systemData?: SystemData;
  /**
   * VHD/CIM image path on Network Share.
   */
  imagePath?: string;
  /**
   * Package Name from appxmanifest.xml.
   */
  packageName?: string;
  /**
   * Package Family Name from appxmanifest.xml. Contains Package Name and Publisher name.
   */
  packageFamilyName?: string;
  /**
   * User friendly Name to be displayed in the portal.
   */
  displayName?: string;
  /**
   * Relative Path to the package inside the image.
   */
  packageRelativePath?: string;
  /**
   * Specifies how to register Package in feed.
   */
  isRegularRegistration?: boolean;
  /**
   * Make this version of the package the active one across the hostpool.
   */
  isActive?: boolean;
  /**
   * List of package dependencies.
   */
  packageDependencies?: MsixPackageDependencies[];
  /**
   * Package Version found in the appxmanifest.xml.
   */
  version?: string;
  /**
   * Date Package was last updated, found in the appxmanifest.xml.
   */
  lastUpdated?: Date;
  /**
   * List of package applications.
   */
  packageApplications?: MsixPackageApplications[];
}

/**
 * MSIX Package properties that can be patched.
 */
export interface MSIXPackagePatch extends Resource {
  /**
   * Set a version of the package to be active across hostpool.
   */
  isActive?: boolean;
  /**
   * Set Registration mode. Regular or Delayed.
   */
  isRegularRegistration?: boolean;
  /**
   * Display name for MSIX Package.
   */
  displayName?: string;
}

/**
 * Schema for Application properties.
 */
export interface Application extends Resource {
  /**
   * Metadata pertaining to creation and last modification of the resource.
   */
  systemData?: SystemData;
  /**
   * ObjectId of Application. (internal use)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly objectId?: string;
  /**
   * Description of Application.
   */
  description?: string;
  /**
   * Friendly name of Application.
   */
  friendlyName?: string;
  /**
   * Specifies a path for the executable file for the application.
   */
  filePath?: string;
  /**
   * Specifies the package family name for MSIX applications
   */
  msixPackageFamilyName?: string;
  /**
   * Specifies the package application Id for MSIX applications
   */
  msixPackageApplicationId?: string;
  /**
   * Resource Type of Application. Possible values include: 'InBuilt', 'MsixApplication'
   */
  applicationType?: RemoteApplicationType;
  /**
   * Specifies whether this published application can be launched with command line arguments
   * provided by the client, command line arguments specified at publish time, or no command line
   * arguments at all. Possible values include: 'DoNotAllow', 'Allow', 'Require'
   */
  commandLineSetting: CommandLineSetting;
  /**
   * Command Line Arguments for Application.
   */
  commandLineArguments?: string;
  /**
   * Specifies whether to show the RemoteApp program in the RD Web Access server.
   */
  showInPortal?: boolean;
  /**
   * Path to icon.
   */
  iconPath?: string;
  /**
   * Index of the icon.
   */
  iconIndex?: number;
  /**
   * Hash of the icon.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly iconHash?: string;
  /**
   * the icon a 64 bit string as a byte array.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly iconContent?: Uint8Array;
}

/**
 * Application properties that can be patched.
 */
export interface ApplicationPatch {
  /**
   * tags to be updated
   */
  tags?: { [propertyName: string]: string };
  /**
   * Description of Application.
   */
  description?: string;
  /**
   * Friendly name of Application.
   */
  friendlyName?: string;
  /**
   * Specifies a path for the executable file for the application.
   */
  filePath?: string;
  /**
   * Specifies whether this published application can be launched with command line arguments
   * provided by the client, command line arguments specified at publish time, or no command line
   * arguments at all. Possible values include: 'DoNotAllow', 'Allow', 'Require'
   */
  commandLineSetting?: CommandLineSetting;
  /**
   * Command Line Arguments for Application.
   */
  commandLineArguments?: string;
  /**
   * Specifies whether to show the RemoteApp program in the RD Web Access server.
   */
  showInPortal?: boolean;
  /**
   * Path to icon.
   */
  iconPath?: string;
  /**
   * Index of the icon.
   */
  iconIndex?: number;
  /**
   * Specifies the package family name for MSIX applications
   */
  msixPackageFamilyName?: string;
  /**
   * Specifies the package application Id for MSIX applications
   */
  msixPackageApplicationId?: string;
  /**
   * Resource Type of Application. Possible values include: 'InBuilt', 'MsixApplication'
   */
  applicationType?: RemoteApplicationType;
}

/**
 * Schema for Desktop properties.
 */
export interface Desktop extends Resource {
  /**
   * Metadata pertaining to creation and last modification of the resource.
   */
  systemData?: SystemData;
  /**
   * ObjectId of Desktop. (internal use)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly objectId?: string;
  /**
   * Description of Desktop.
   */
  description?: string;
  /**
   * Friendly name of Desktop.
   */
  friendlyName?: string;
  /**
   * Hash of the icon.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly iconHash?: string;
  /**
   * The icon a 64 bit string as a byte array.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly iconContent?: Uint8Array;
}

/**
 * Desktop properties that can be patched.
 */
export interface DesktopPatch {
  /**
   * tags to be updated
   */
  tags?: { [propertyName: string]: string };
  /**
   * Description of Desktop.
   */
  description?: string;
  /**
   * Friendly name of Desktop.
   */
  friendlyName?: string;
}

/**
 * Represents a StartMenuItem definition.
 */
export interface StartMenuItem extends Resource {
  /**
   * Alias of StartMenuItem.
   */
  appAlias?: string;
  /**
   * Path to the file of StartMenuItem.
   */
  filePath?: string;
  /**
   * Command line arguments for StartMenuItem.
   */
  commandLineArguments?: string;
  /**
   * Path to the icon.
   */
  iconPath?: string;
  /**
   * Index of the icon.
   */
  iconIndex?: number;
}

/**
 * Represents the definition of contents retrieved after expanding the MSIX Image.
 */
export interface ExpandMsixImage extends Resource {
  /**
   * Alias of MSIX Package.
   */
  packageAlias?: string;
  /**
   * VHD/CIM image path on Network Share.
   */
  imagePath?: string;
  /**
   * Package Name from appxmanifest.xml.
   */
  packageName?: string;
  /**
   * Package Family Name from appxmanifest.xml. Contains Package Name and Publisher name.
   */
  packageFamilyName?: string;
  /**
   * Package Full Name from appxmanifest.xml.
   */
  packageFullName?: string;
  /**
   * User friendly Name to be displayed in the portal.
   */
  displayName?: string;
  /**
   * Relative Path to the package inside the image.
   */
  packageRelativePath?: string;
  /**
   * Specifies how to register Package in feed.
   */
  isRegularRegistration?: boolean;
  /**
   * Make this version of the package the active one across the hostpool.
   */
  isActive?: boolean;
  /**
   * List of package dependencies.
   */
  packageDependencies?: MsixPackageDependencies[];
  /**
   * Package Version found in the appxmanifest.xml.
   */
  version?: string;
  /**
   * Date Package was last updated, found in the appxmanifest.xml.
   */
  lastUpdated?: Date;
  /**
   * List of package applications.
   */
  packageApplications?: MsixPackageApplications[];
}

/**
 * Represents URI referring to MSIX Image
 */
export interface MSIXImageURI {
  /**
   * URI to Image
   */
  uri?: string;
}

/**
 * Contains details on the failure.
 */
export interface SessionHostHealthCheckFailureDetails {
  /**
   * Failure message: hints on what is wrong and how to recover.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * Error code corresponding for the failure.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorCode?: number;
  /**
   * The timestamp of the last update.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastHealthCheckDateTime?: Date;
}

/**
 * The report for session host information.
 */
export interface SessionHostHealthCheckReport {
  /**
   * Represents the name of the health check operation performed. Possible values include:
   * 'DomainJoinedCheck', 'DomainTrustCheck', 'FSLogixHealthCheck', 'SxSStackListenerCheck',
   * 'UrlsAccessibleCheck', 'MonitoringAgentCheck', 'DomainReachable', 'WebRTCRedirectorCheck',
   * 'SupportedEncryptionCheck', 'MetaDataServiceCheck', 'AppAttachHealthCheck'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly healthCheckName?: HealthCheckName;
  /**
   * Represents the Health state of the health check we performed. Possible values include:
   * 'Unknown', 'HealthCheckSucceeded', 'HealthCheckFailed', 'SessionHostShutdown'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly healthCheckResult?: HealthCheckResult;
  /**
   * Additional detailed information on the failure.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly additionalFailureDetails?: SessionHostHealthCheckFailureDetails;
}

/**
 * Represents a SessionHost definition.
 */
export interface SessionHost extends Resource {
  /**
   * Metadata pertaining to creation and last modification of the resource.
   */
  systemData?: SystemData;
  /**
   * ObjectId of SessionHost. (internal use)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly objectId?: string;
  /**
   * Last heart beat from SessionHost.
   */
  lastHeartBeat?: Date;
  /**
   * Number of sessions on SessionHost.
   */
  sessions?: number;
  /**
   * Version of agent on SessionHost.
   */
  agentVersion?: string;
  /**
   * Allow a new session.
   */
  allowNewSession?: boolean;
  /**
   * Virtual Machine Id of SessionHost's underlying virtual machine.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly virtualMachineId?: string;
  /**
   * Resource Id of SessionHost's underlying virtual machine.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceId?: string;
  /**
   * User assigned to SessionHost.
   */
  assignedUser?: string;
  /**
   * Status for a SessionHost. Possible values include: 'Available', 'Unavailable', 'Shutdown',
   * 'Disconnected', 'Upgrading', 'UpgradeFailed', 'NoHeartbeat', 'NotJoinedToDomain',
   * 'DomainTrustRelationshipLost', 'SxSStackListenerNotReady', 'FSLogixNotHealthy',
   * 'NeedsAssistance'
   */
  status?: Status;
  /**
   * The timestamp of the status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly statusTimestamp?: Date;
  /**
   * The version of the OS on the session host.
   */
  osVersion?: string;
  /**
   * The version of the side by side stack on the session host.
   */
  sxSStackVersion?: string;
  /**
   * Update state of a SessionHost. Possible values include: 'Initial', 'Pending', 'Started',
   * 'Succeeded', 'Failed'
   */
  updateState?: UpdateState;
  /**
   * The timestamp of the last update.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastUpdateTime?: Date;
  /**
   * The error message.
   */
  updateErrorMessage?: string;
  /**
   * List of SessionHostHealthCheckReports
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sessionHostHealthCheckResults?: SessionHostHealthCheckReport[];
}

/**
 * SessionHost properties that can be patched.
 */
export interface SessionHostPatch extends Resource {
  /**
   * Allow a new session.
   */
  allowNewSession?: boolean;
  /**
   * User assigned to SessionHost.
   */
  assignedUser?: string;
}

/**
 * Represents a UserSession definition.
 */
export interface UserSession extends Resource {
  /**
   * Metadata pertaining to creation and last modification of the resource.
   */
  systemData?: SystemData;
  /**
   * ObjectId of user session. (internal use)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly objectId?: string;
  /**
   * The user principal name.
   */
  userPrincipalName?: string;
  /**
   * Application type of application. Possible values include: 'RemoteApp', 'Desktop'
   */
  applicationType?: ApplicationType;
  /**
   * State of user session. Possible values include: 'Unknown', 'Active', 'Disconnected',
   * 'Pending', 'LogOff', 'UserProfileDiskMounted'
   */
  sessionState?: SessionState;
  /**
   * The active directory user name.
   */
  activeDirectoryUserName?: string;
  /**
   * The timestamp of the user session create.
   */
  createTime?: Date;
}

/**
 * The time for a scaling action to occur.
 */
export interface Time {
  /**
   * The hour.
   */
  hour: number;
  /**
   * The minute.
   */
  minute: number;
}

/**
 * Scaling plan schedule.
 */
export interface ScalingSchedule {
  /**
   * Name of the scaling schedule.
   */
  name?: string;
  /**
   * Set of days of the week on which this schedule is active.
   */
  daysOfWeek?: string[];
  /**
   * Starting time for ramp up period.
   */
  rampUpStartTime?: Time;
  /**
   * Load balancing algorithm for ramp up period. Possible values include: 'BreadthFirst',
   * 'DepthFirst'
   */
  rampUpLoadBalancingAlgorithm?: SessionHostLoadBalancingAlgorithm;
  /**
   * Minimum host percentage for ramp up period.
   */
  rampUpMinimumHostsPct?: number;
  /**
   * Capacity threshold for ramp up period.
   */
  rampUpCapacityThresholdPct?: number;
  /**
   * Starting time for peak period.
   */
  peakStartTime?: Time;
  /**
   * Load balancing algorithm for peak period. Possible values include: 'BreadthFirst',
   * 'DepthFirst'
   */
  peakLoadBalancingAlgorithm?: SessionHostLoadBalancingAlgorithm;
  /**
   * Starting time for ramp down period.
   */
  rampDownStartTime?: Time;
  /**
   * Load balancing algorithm for ramp down period. Possible values include: 'BreadthFirst',
   * 'DepthFirst'
   */
  rampDownLoadBalancingAlgorithm?: SessionHostLoadBalancingAlgorithm;
  /**
   * Minimum host percentage for ramp down period.
   */
  rampDownMinimumHostsPct?: number;
  /**
   * Capacity threshold for ramp down period.
   */
  rampDownCapacityThresholdPct?: number;
  /**
   * Should users be logged off forcefully from hosts.
   */
  rampDownForceLogoffUsers?: boolean;
  /**
   * Specifies when to stop hosts during ramp down period. Possible values include: 'ZeroSessions',
   * 'ZeroActiveSessions'
   */
  rampDownStopHostsWhen?: StopHostsWhen;
  /**
   * Number of minutes to wait to stop hosts during ramp down period.
   */
  rampDownWaitTimeMinutes?: number;
  /**
   * Notification message for users during ramp down period.
   */
  rampDownNotificationMessage?: string;
  /**
   * Starting time for off-peak period.
   */
  offPeakStartTime?: Time;
  /**
   * Load balancing algorithm for off-peak period. Possible values include: 'BreadthFirst',
   * 'DepthFirst'
   */
  offPeakLoadBalancingAlgorithm?: SessionHostLoadBalancingAlgorithm;
}

/**
 * Scaling plan reference to hostpool.
 */
export interface ScalingHostPoolReference {
  /**
   * Arm path of referenced hostpool.
   */
  hostPoolArmPath?: string;
  /**
   * Is the scaling plan enabled for this hostpool.
   */
  scalingPlanEnabled?: boolean;
}

/**
 * Represents a scaling plan definition.
 * @summary ScalingPlan
 */
export interface ScalingPlan extends ResourceModelWithAllowedPropertySet {
  /**
   * Metadata pertaining to creation and last modification of the resource.
   */
  systemData?: SystemData;
  /**
   * ObjectId of scaling plan. (internal use)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly objectId?: string;
  /**
   * Description of scaling plan.
   */
  description?: string;
  /**
   * User friendly name of scaling plan.
   */
  friendlyName?: string;
  /**
   * Timezone of the scaling plan.
   */
  timeZone?: string;
  /**
   * HostPool type for desktop. Possible values include: 'Pooled'
   */
  hostPoolType?: ScalingHostPoolType;
  /**
   * Exclusion tag for scaling plan.
   */
  exclusionTag?: string;
  /**
   * List of ScalingSchedule definitions.
   */
  schedules?: ScalingSchedule[];
  /**
   * List of ScalingHostPoolReference definitions.
   */
  hostPoolReferences?: ScalingHostPoolReference[];
}

/**
 * Scaling plan properties that can be patched.
 */
export interface ScalingPlanPatch {
  /**
   * tags to be updated
   */
  tags?: { [propertyName: string]: string };
  /**
   * Description of scaling plan.
   */
  description?: string;
  /**
   * User friendly name of scaling plan.
   */
  friendlyName?: string;
  /**
   * Timezone of the scaling plan.
   */
  timeZone?: string;
  /**
   * Exclusion tag for scaling plan.
   */
  exclusionTag?: string;
  /**
   * List of ScalingSchedule definitions.
   */
  schedules?: ScalingSchedule[];
  /**
   * List of ScalingHostPoolReference definitions.
   */
  hostPoolReferences?: ScalingHostPoolReference[];
}

/**
 * The Private Endpoint Connection resource.
 */
export interface PrivateEndpointConnection extends Resource {
  /**
   * The resource of private end point.
   */
  privateEndpoint?: PrivateEndpoint;
  /**
   * A collection of information about the state of the connection between service consumer and
   * provider.
   */
  privateLinkServiceConnectionState: PrivateLinkServiceConnectionState;
  /**
   * The provisioning state of the private endpoint connection resource. Possible values include:
   * 'Succeeded', 'Creating', 'Deleting', 'Failed'
   */
  provisioningState?: PrivateEndpointConnectionProvisioningState;
}

/**
 * The Private Endpoint Connection resource.
 */
export interface PrivateEndpointConnectionWithSystemData extends PrivateEndpointConnection {
  systemData?: SystemData;
}

/**
 * A private link resource
 */
export interface PrivateLinkResource extends Resource {
  /**
   * The private link resource group id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly groupId?: string;
  /**
   * The private link resource required member names.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requiredMembers?: string[];
  /**
   * The private link resource Private link DNS zone name.
   */
  requiredZoneNames?: string[];
}

/**
 * The resource model definition for a Azure Resource Manager proxy resource. It will not have tags
 * and a location
 * @summary Proxy Resource
 */
export interface ProxyResource extends Resource {
}

/**
 * The resource model definition for an Azure Resource Manager tracked top level resource which has
 * 'tags' and a 'location'
 * @summary Tracked Resource
 */
export interface TrackedResource extends Resource {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The geo-location where the resource lives
   */
  location: string;
}

/**
 * The resource model definition for an Azure Resource Manager resource with an etag.
 * @summary Entity Resource
 */
export interface AzureEntityResource extends Resource {
  /**
   * Resource Etag.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly etag?: string;
}

/**
 * A collection of information about the state of the connection between service consumer and
 * provider.
 */
export interface PrivateLinkServiceConnectionState {
  /**
   * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the
   * service. Possible values include: 'Pending', 'Approved', 'Rejected'
   */
  status?: PrivateEndpointServiceConnectionStatus;
  /**
   * The reason for approval/rejection of the connection.
   */
  description?: string;
  /**
   * A message indicating if changes on the service provider require any updates on the consumer.
   */
  actionsRequired?: string;
}

/**
 * The Private Endpoint resource.
 */
export interface PrivateEndpoint {
  /**
   * The ARM identifier for Private Endpoint
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
}

/**
 * Plan for the resource.
 */
export interface Plan {
  /**
   * A user defined name of the 3rd Party Artifact that is being procured.
   */
  name: string;
  /**
   * The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
   */
  publisher: string;
  /**
   * The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID
   * specified for the artifact at the time of Data Market onboarding.
   */
  product: string;
  /**
   * A publisher provided promotion code as provisioned in Data Market for the said
   * product/artifact.
   */
  promotionCode?: string;
  /**
   * The version of the desired product/artifact.
   */
  version?: string;
}

/**
 * The resource model definition representing SKU
 */
export interface Sku {
  /**
   * The name of the SKU. Ex - P3. It is typically a letter+number code
   */
  name: string;
  /**
   * This field is required to be implemented by the Resource Provider if the service has more than
   * one tier, but is not required on a PUT. Possible values include: 'Free', 'Basic', 'Standard',
   * 'Premium'
   */
  tier?: SkuTier;
  /**
   * The SKU size. When the name field is the combination of tier and some other value, this would
   * be the standalone code.
   */
  size?: string;
  /**
   * If the service has different generations of hardware, for the same SKU, then that can be
   * captured here.
   */
  family?: string;
  /**
   * If the SKU supports scale out/in then the capacity integer should be included. If scale out/in
   * is not possible for the resource this may be omitted.
   */
  capacity?: number;
}

/**
 * Identity for the resource.
 */
export interface Identity {
  /**
   * The principal ID of resource identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The tenant ID of resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
  /**
   * The identity type. Possible values include: 'SystemAssigned'
   */
  type?: ResourceIdentityType;
}

/**
 * An interface representing ResourceModelWithAllowedPropertySetIdentity.
 */
export interface ResourceModelWithAllowedPropertySetIdentity extends Identity {
}

/**
 * An interface representing ResourceModelWithAllowedPropertySetSku.
 */
export interface ResourceModelWithAllowedPropertySetSku extends Sku {
}

/**
 * An interface representing ResourceModelWithAllowedPropertySetPlan.
 */
export interface ResourceModelWithAllowedPropertySetPlan extends Plan {
}

/**
 * Optional Parameters.
 */
export interface WorkspacesUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Object containing Workspace definitions.
   */
  workspace?: WorkspacePatch;
}

/**
 * Optional Parameters.
 */
export interface ScalingPlansUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Object containing scaling plan definitions.
   */
  scalingPlan?: ScalingPlanPatch;
}

/**
 * Optional Parameters.
 */
export interface ApplicationGroupsUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Object containing ApplicationGroup definitions.
   */
  applicationGroup?: ApplicationGroupPatch;
}

/**
 * Optional Parameters.
 */
export interface ApplicationGroupsListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * OData filter expression. Valid properties for filtering are applicationGroupType.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface ApplicationGroupsListBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * OData filter expression. Valid properties for filtering are applicationGroupType.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface ApplicationGroupsListByResourceGroupNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * OData filter expression. Valid properties for filtering are applicationGroupType.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface ApplicationGroupsListBySubscriptionNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * OData filter expression. Valid properties for filtering are applicationGroupType.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface ApplicationsUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Object containing Application definitions.
   */
  application?: ApplicationPatch;
}

/**
 * Optional Parameters.
 */
export interface DesktopsUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Object containing Desktop definitions.
   */
  desktop?: DesktopPatch;
}

/**
 * Optional Parameters.
 */
export interface HostPoolsDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Force flag to delete sessionHost.
   */
  force?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HostPoolsUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Object containing HostPool definitions.
   */
  hostPool?: HostPoolPatch;
}

/**
 * Optional Parameters.
 */
export interface UserSessionsListByHostPoolOptionalParams extends msRest.RequestOptionsBase {
  /**
   * OData filter expression. Valid properties for filtering are userprincipalname and
   * sessionstate.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface UserSessionsDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Force flag to login off userSession.
   */
  force?: boolean;
}

/**
 * Optional Parameters.
 */
export interface UserSessionsSendMessageMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Object containing message includes title and message body
   */
  sendMessage?: SendMessage;
}

/**
 * Optional Parameters.
 */
export interface UserSessionsListByHostPoolNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * OData filter expression. Valid properties for filtering are userprincipalname and
   * sessionstate.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface SessionHostsDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Force flag to force sessionHost deletion even when userSession exists.
   */
  force?: boolean;
}

/**
 * Optional Parameters.
 */
export interface SessionHostsUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Object containing SessionHost definitions.
   */
  sessionHost?: SessionHostPatch;
  /**
   * Force flag to update assign, unassign or reassign personal desktop.
   */
  force?: boolean;
}

/**
 * Optional Parameters.
 */
export interface MSIXPackagesUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Object containing MSIX Package definitions.
   */
  msixPackage?: MSIXPackagePatch;
}

/**
 * Optional Parameters.
 */
export interface MsixImagesExpandOptionalParams extends msRest.RequestOptionsBase {
  /**
   * URI to Image
   */
  uri?: string;
}

/**
 * An interface representing DesktopVirtualizationAPIClientOptions.
 */
export interface DesktopVirtualizationAPIClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * Result of the request to list operations.
 * @extends Array<ResourceProviderOperation>
 */
export interface ResourceProviderOperationList extends Array<ResourceProviderOperation> {
  /**
   * Link to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * List of Workspace definitions.
 * @summary WorkspaceList
 * @extends Array<Workspace>
 */
export interface WorkspaceList extends Array<Workspace> {
  /**
   * Link to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * List of scaling plan definitions.
 * @summary ScalingPlanList
 * @extends Array<ScalingPlan>
 */
export interface ScalingPlanList extends Array<ScalingPlan> {
  /**
   * Link to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * List of ApplicationGroup definitions.
 * @summary ApplicationGroupList
 * @extends Array<ApplicationGroup>
 */
export interface ApplicationGroupList extends Array<ApplicationGroup> {
  /**
   * Link to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * List of StartMenuItem definitions.
 * @summary StartMenuItemList
 * @extends Array<StartMenuItem>
 */
export interface StartMenuItemList extends Array<StartMenuItem> {
  /**
   * Link to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * List of Application definitions.
 * @summary ApplicationList
 * @extends Array<Application>
 */
export interface ApplicationList extends Array<Application> {
  /**
   * Link to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * List of Desktop definitions.
 * @summary DesktopList
 * @extends Array<Desktop>
 */
export interface DesktopList extends Array<Desktop> {
  /**
   * Link to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * List of HostPool definitions.
 * @summary HostPoolList
 * @extends Array<HostPool>
 */
export interface HostPoolList extends Array<HostPool> {
  /**
   * Link to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * List of UserSession definitions.
 * @summary UserSessionList
 * @extends Array<UserSession>
 */
export interface UserSessionList extends Array<UserSession> {
  /**
   * Link to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * List of SessionHost definitions.
 * @summary SessionHostList
 * @extends Array<SessionHost>
 */
export interface SessionHostList extends Array<SessionHost> {
  /**
   * Link to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * List of MSIX Package definitions.
 * @summary MsixPackageList
 * @extends Array<MSIXPackage>
 */
export interface MSIXPackageList extends Array<MSIXPackage> {
  /**
   * Link to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * List of MSIX package properties retrieved from MSIX Image expansion.
 * @summary ExpandMsixImageList
 * @extends Array<ExpandMsixImage>
 */
export interface ExpandMsixImageList extends Array<ExpandMsixImage> {
  /**
   * Link to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * List of private endpoint connection associated with the specified storage account
 * @extends Array<PrivateEndpointConnectionWithSystemData>
 */
export interface PrivateEndpointConnectionListResultWithSystemData extends Array<PrivateEndpointConnectionWithSystemData> {
  /**
   * Link to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of private link resources
 * @extends Array<PrivateLinkResource>
 */
export interface PrivateLinkResourceListResult extends Array<PrivateLinkResource> {
  /**
   * Link to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for CreatedByType.
 * Possible values include: 'User', 'Application', 'ManagedIdentity', 'Key'
 * @readonly
 * @enum {string}
 */
export type CreatedByType = 'User' | 'Application' | 'ManagedIdentity' | 'Key';

/**
 * Defines values for PublicNetworkAccess.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type PublicNetworkAccess = 'Enabled' | 'Disabled';

/**
 * Defines values for ApplicationGroupType.
 * Possible values include: 'RemoteApp', 'Desktop'
 * @readonly
 * @enum {string}
 */
export type ApplicationGroupType = 'RemoteApp' | 'Desktop';

/**
 * Defines values for Operation.
 * Possible values include: 'Start', 'Revoke', 'Complete', 'Hide', 'Unhide'
 * @readonly
 * @enum {string}
 */
export type Operation = 'Start' | 'Revoke' | 'Complete' | 'Hide' | 'Unhide';

/**
 * Defines values for HostPoolType.
 * Possible values include: 'Personal', 'Pooled', 'BYODesktop'
 * @readonly
 * @enum {string}
 */
export type HostPoolType = 'Personal' | 'Pooled' | 'BYODesktop';

/**
 * Defines values for PersonalDesktopAssignmentType.
 * Possible values include: 'Automatic', 'Direct'
 * @readonly
 * @enum {string}
 */
export type PersonalDesktopAssignmentType = 'Automatic' | 'Direct';

/**
 * Defines values for LoadBalancerType.
 * Possible values include: 'BreadthFirst', 'DepthFirst', 'Persistent'
 * @readonly
 * @enum {string}
 */
export type LoadBalancerType = 'BreadthFirst' | 'DepthFirst' | 'Persistent';

/**
 * Defines values for RegistrationTokenOperation.
 * Possible values include: 'Delete', 'None', 'Update'
 * @readonly
 * @enum {string}
 */
export type RegistrationTokenOperation = 'Delete' | 'None' | 'Update';

/**
 * Defines values for SSOSecretType.
 * Possible values include: 'SharedKey', 'Certificate', 'SharedKeyInKeyVault',
 * 'CertificateInKeyVault'
 * @readonly
 * @enum {string}
 */
export type SSOSecretType = 'SharedKey' | 'Certificate' | 'SharedKeyInKeyVault' | 'CertificateInKeyVault';

/**
 * Defines values for PreferredAppGroupType.
 * Possible values include: 'None', 'Desktop', 'RailApplications'
 * @readonly
 * @enum {string}
 */
export type PreferredAppGroupType = 'None' | 'Desktop' | 'RailApplications';

/**
 * Defines values for RemoteApplicationType.
 * Possible values include: 'InBuilt', 'MsixApplication'
 * @readonly
 * @enum {string}
 */
export type RemoteApplicationType = 'InBuilt' | 'MsixApplication';

/**
 * Defines values for CommandLineSetting.
 * Possible values include: 'DoNotAllow', 'Allow', 'Require'
 * @readonly
 * @enum {string}
 */
export type CommandLineSetting = 'DoNotAllow' | 'Allow' | 'Require';

/**
 * Defines values for Status.
 * Possible values include: 'Available', 'Unavailable', 'Shutdown', 'Disconnected', 'Upgrading',
 * 'UpgradeFailed', 'NoHeartbeat', 'NotJoinedToDomain', 'DomainTrustRelationshipLost',
 * 'SxSStackListenerNotReady', 'FSLogixNotHealthy', 'NeedsAssistance'
 * @readonly
 * @enum {string}
 */
export type Status = 'Available' | 'Unavailable' | 'Shutdown' | 'Disconnected' | 'Upgrading' | 'UpgradeFailed' | 'NoHeartbeat' | 'NotJoinedToDomain' | 'DomainTrustRelationshipLost' | 'SxSStackListenerNotReady' | 'FSLogixNotHealthy' | 'NeedsAssistance';

/**
 * Defines values for UpdateState.
 * Possible values include: 'Initial', 'Pending', 'Started', 'Succeeded', 'Failed'
 * @readonly
 * @enum {string}
 */
export type UpdateState = 'Initial' | 'Pending' | 'Started' | 'Succeeded' | 'Failed';

/**
 * Defines values for HealthCheckName.
 * Possible values include: 'DomainJoinedCheck', 'DomainTrustCheck', 'FSLogixHealthCheck',
 * 'SxSStackListenerCheck', 'UrlsAccessibleCheck', 'MonitoringAgentCheck', 'DomainReachable',
 * 'WebRTCRedirectorCheck', 'SupportedEncryptionCheck', 'MetaDataServiceCheck',
 * 'AppAttachHealthCheck'
 * @readonly
 * @enum {string}
 */
export type HealthCheckName = 'DomainJoinedCheck' | 'DomainTrustCheck' | 'FSLogixHealthCheck' | 'SxSStackListenerCheck' | 'UrlsAccessibleCheck' | 'MonitoringAgentCheck' | 'DomainReachable' | 'WebRTCRedirectorCheck' | 'SupportedEncryptionCheck' | 'MetaDataServiceCheck' | 'AppAttachHealthCheck';

/**
 * Defines values for HealthCheckResult.
 * Possible values include: 'Unknown', 'HealthCheckSucceeded', 'HealthCheckFailed',
 * 'SessionHostShutdown'
 * @readonly
 * @enum {string}
 */
export type HealthCheckResult = 'Unknown' | 'HealthCheckSucceeded' | 'HealthCheckFailed' | 'SessionHostShutdown';

/**
 * Defines values for ApplicationType.
 * Possible values include: 'RemoteApp', 'Desktop'
 * @readonly
 * @enum {string}
 */
export type ApplicationType = 'RemoteApp' | 'Desktop';

/**
 * Defines values for SessionState.
 * Possible values include: 'Unknown', 'Active', 'Disconnected', 'Pending', 'LogOff',
 * 'UserProfileDiskMounted'
 * @readonly
 * @enum {string}
 */
export type SessionState = 'Unknown' | 'Active' | 'Disconnected' | 'Pending' | 'LogOff' | 'UserProfileDiskMounted';

/**
 * Defines values for ScalingHostPoolType.
 * Possible values include: 'Pooled'
 * @readonly
 * @enum {string}
 */
export type ScalingHostPoolType = 'Pooled';

/**
 * Defines values for SessionHostLoadBalancingAlgorithm.
 * Possible values include: 'BreadthFirst', 'DepthFirst'
 * @readonly
 * @enum {string}
 */
export type SessionHostLoadBalancingAlgorithm = 'BreadthFirst' | 'DepthFirst';

/**
 * Defines values for StopHostsWhen.
 * Possible values include: 'ZeroSessions', 'ZeroActiveSessions'
 * @readonly
 * @enum {string}
 */
export type StopHostsWhen = 'ZeroSessions' | 'ZeroActiveSessions';

/**
 * Defines values for PrivateEndpointConnectionProvisioningState.
 * Possible values include: 'Succeeded', 'Creating', 'Deleting', 'Failed'
 * @readonly
 * @enum {string}
 */
export type PrivateEndpointConnectionProvisioningState = 'Succeeded' | 'Creating' | 'Deleting' | 'Failed';

/**
 * Defines values for PrivateEndpointServiceConnectionStatus.
 * Possible values include: 'Pending', 'Approved', 'Rejected'
 * @readonly
 * @enum {string}
 */
export type PrivateEndpointServiceConnectionStatus = 'Pending' | 'Approved' | 'Rejected';

/**
 * Defines values for SkuTier.
 * Possible values include: 'Free', 'Basic', 'Standard', 'Premium'
 * @readonly
 * @enum {string}
 */
export type SkuTier = 'Free' | 'Basic' | 'Standard' | 'Premium';

/**
 * Defines values for ResourceIdentityType.
 * Possible values include: 'SystemAssigned'
 * @readonly
 * @enum {string}
 */
export type ResourceIdentityType = 'SystemAssigned';

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = ResourceProviderOperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceProviderOperationList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = ResourceProviderOperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceProviderOperationList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type WorkspacesGetResponse = Workspace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Workspace;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type WorkspacesCreateOrUpdateResponse = Workspace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Workspace;
    };
};

/**
 * Contains response data for the update operation.
 */
export type WorkspacesUpdateResponse = Workspace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Workspace;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type WorkspacesListByResourceGroupResponse = WorkspaceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceList;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type WorkspacesListBySubscriptionResponse = WorkspaceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceList;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type WorkspacesListByResourceGroupNextResponse = WorkspaceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceList;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type WorkspacesListBySubscriptionNextResponse = WorkspaceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ScalingPlansGetResponse = ScalingPlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScalingPlan;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ScalingPlansCreateResponse = ScalingPlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScalingPlan;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ScalingPlansUpdateResponse = ScalingPlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScalingPlan;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ScalingPlansListByResourceGroupResponse = ScalingPlanList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScalingPlanList;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type ScalingPlansListBySubscriptionResponse = ScalingPlanList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScalingPlanList;
    };
};

/**
 * Contains response data for the listByHostPool operation.
 */
export type ScalingPlansListByHostPoolResponse = ScalingPlanList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScalingPlanList;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type ScalingPlansListByResourceGroupNextResponse = ScalingPlanList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScalingPlanList;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type ScalingPlansListBySubscriptionNextResponse = ScalingPlanList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScalingPlanList;
    };
};

/**
 * Contains response data for the listByHostPoolNext operation.
 */
export type ScalingPlansListByHostPoolNextResponse = ScalingPlanList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScalingPlanList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApplicationGroupsGetResponse = ApplicationGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationGroup;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ApplicationGroupsCreateOrUpdateResponse = ApplicationGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationGroup;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ApplicationGroupsUpdateResponse = ApplicationGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationGroup;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ApplicationGroupsListByResourceGroupResponse = ApplicationGroupList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationGroupList;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type ApplicationGroupsListBySubscriptionResponse = ApplicationGroupList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationGroupList;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type ApplicationGroupsListByResourceGroupNextResponse = ApplicationGroupList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationGroupList;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type ApplicationGroupsListBySubscriptionNextResponse = ApplicationGroupList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationGroupList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type StartMenuItemsListResponse = StartMenuItemList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StartMenuItemList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type StartMenuItemsListNextResponse = StartMenuItemList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StartMenuItemList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApplicationsGetResponse = Application & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Application;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ApplicationsCreateOrUpdateResponse = Application & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Application;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ApplicationsUpdateResponse = Application & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Application;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ApplicationsListResponse = ApplicationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ApplicationsListNextResponse = ApplicationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DesktopsGetResponse = Desktop & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Desktop;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DesktopsUpdateResponse = Desktop & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Desktop;
    };
};

/**
 * Contains response data for the list operation.
 */
export type DesktopsListResponse = DesktopList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DesktopList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type DesktopsListNextResponse = DesktopList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DesktopList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type HostPoolsGetResponse = HostPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostPool;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type HostPoolsCreateOrUpdateResponse = HostPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostPool;
    };
};

/**
 * Contains response data for the update operation.
 */
export type HostPoolsUpdateResponse = HostPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostPool;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type HostPoolsListByResourceGroupResponse = HostPoolList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostPoolList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type HostPoolsListResponse = HostPoolList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostPoolList;
    };
};

/**
 * Contains response data for the retrieveRegistrationToken operation.
 */
export type HostPoolsRetrieveRegistrationTokenResponse = RegistrationInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RegistrationInfo;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type HostPoolsListByResourceGroupNextResponse = HostPoolList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostPoolList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type HostPoolsListNextResponse = HostPoolList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostPoolList;
    };
};

/**
 * Contains response data for the listByHostPool operation.
 */
export type UserSessionsListByHostPoolResponse = UserSessionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserSessionList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type UserSessionsGetResponse = UserSession & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserSession;
    };
};

/**
 * Contains response data for the list operation.
 */
export type UserSessionsListResponse = UserSessionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserSessionList;
    };
};

/**
 * Contains response data for the listByHostPoolNext operation.
 */
export type UserSessionsListByHostPoolNextResponse = UserSessionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserSessionList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type UserSessionsListNextResponse = UserSessionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserSessionList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SessionHostsGetResponse = SessionHost & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SessionHost;
    };
};

/**
 * Contains response data for the update operation.
 */
export type SessionHostsUpdateResponse = SessionHost & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SessionHost;
    };
};

/**
 * Contains response data for the list operation.
 */
export type SessionHostsListResponse = SessionHostList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SessionHostList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type SessionHostsListNextResponse = SessionHostList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SessionHostList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type MSIXPackagesGetResponse = MSIXPackage & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSIXPackage;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type MSIXPackagesCreateOrUpdateResponse = MSIXPackage & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSIXPackage;
    };
};

/**
 * Contains response data for the update operation.
 */
export type MSIXPackagesUpdateResponse = MSIXPackage & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSIXPackage;
    };
};

/**
 * Contains response data for the list operation.
 */
export type MSIXPackagesListResponse = MSIXPackageList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSIXPackageList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type MSIXPackagesListNextResponse = MSIXPackageList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSIXPackageList;
    };
};

/**
 * Contains response data for the expand operation.
 */
export type MsixImagesExpandResponse = ExpandMsixImageList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExpandMsixImageList;
    };
};

/**
 * Contains response data for the expandNext operation.
 */
export type MsixImagesExpandNextResponse = ExpandMsixImageList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExpandMsixImageList;
    };
};

/**
 * Contains response data for the listByHostPool operation.
 */
export type PrivateEndpointConnectionsListByHostPoolResponse = PrivateEndpointConnectionListResultWithSystemData & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnectionListResultWithSystemData;
    };
};

/**
 * Contains response data for the getByHostPool operation.
 */
export type PrivateEndpointConnectionsGetByHostPoolResponse = PrivateEndpointConnectionWithSystemData & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnectionWithSystemData;
    };
};

/**
 * Contains response data for the updateByHostPool operation.
 */
export type PrivateEndpointConnectionsUpdateByHostPoolResponse = PrivateEndpointConnectionWithSystemData & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnectionWithSystemData;
    };
};

/**
 * Contains response data for the listByWorkspace operation.
 */
export type PrivateEndpointConnectionsListByWorkspaceResponse = PrivateEndpointConnectionListResultWithSystemData & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnectionListResultWithSystemData;
    };
};

/**
 * Contains response data for the getByWorkspace operation.
 */
export type PrivateEndpointConnectionsGetByWorkspaceResponse = PrivateEndpointConnectionWithSystemData & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnectionWithSystemData;
    };
};

/**
 * Contains response data for the updateByWorkspace operation.
 */
export type PrivateEndpointConnectionsUpdateByWorkspaceResponse = PrivateEndpointConnectionWithSystemData & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnectionWithSystemData;
    };
};

/**
 * Contains response data for the listByHostPoolNext operation.
 */
export type PrivateEndpointConnectionsListByHostPoolNextResponse = PrivateEndpointConnectionListResultWithSystemData & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnectionListResultWithSystemData;
    };
};

/**
 * Contains response data for the listByWorkspaceNext operation.
 */
export type PrivateEndpointConnectionsListByWorkspaceNextResponse = PrivateEndpointConnectionListResultWithSystemData & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnectionListResultWithSystemData;
    };
};

/**
 * Contains response data for the listByHostPool operation.
 */
export type PrivateLinkResourcesListByHostPoolResponse = PrivateLinkResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkResourceListResult;
    };
};

/**
 * Contains response data for the listByWorkspace operation.
 */
export type PrivateLinkResourcesListByWorkspaceResponse = PrivateLinkResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkResourceListResult;
    };
};

/**
 * Contains response data for the listByHostPoolNext operation.
 */
export type PrivateLinkResourcesListByHostPoolNextResponse = PrivateLinkResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkResourceListResult;
    };
};

/**
 * Contains response data for the listByWorkspaceNext operation.
 */
export type PrivateLinkResourcesListByWorkspaceNextResponse = PrivateLinkResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkResourceListResult;
    };
};
