/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";

export const acceptLanguage: msRest.OperationParameter = {
  parameterPath: "acceptLanguage",
  mapper: {
    serializedName: "accept-language",
    defaultValue: 'en-US',
    type: {
      name: "String"
    }
  }
};
export const apiVersion: msRest.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    required: true,
    serializedName: "api-version",
    constraints: {
      MinLength: 1
    },
    type: {
      name: "String"
    }
  }
};
export const applicationGroupName: msRest.OperationURLParameter = {
  parameterPath: "applicationGroupName",
  mapper: {
    required: true,
    serializedName: "applicationGroupName",
    constraints: {
      MaxLength: 64,
      MinLength: 3
    },
    type: {
      name: "String"
    }
  }
};
export const applicationName: msRest.OperationURLParameter = {
  parameterPath: "applicationName",
  mapper: {
    required: true,
    serializedName: "applicationName",
    constraints: {
      MaxLength: 24,
      MinLength: 3
    },
    type: {
      name: "String"
    }
  }
};
export const desktopName: msRest.OperationURLParameter = {
  parameterPath: "desktopName",
  mapper: {
    required: true,
    serializedName: "desktopName",
    constraints: {
      MaxLength: 24,
      MinLength: 3
    },
    type: {
      name: "String"
    }
  }
};
export const filter: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "filter"
  ],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};
export const force: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "force"
  ],
  mapper: {
    serializedName: "force",
    type: {
      name: "Boolean"
    }
  }
};
export const hostPoolName: msRest.OperationURLParameter = {
  parameterPath: "hostPoolName",
  mapper: {
    required: true,
    serializedName: "hostPoolName",
    constraints: {
      MaxLength: 64,
      MinLength: 3
    },
    type: {
      name: "String"
    }
  }
};
export const msixPackageFullName: msRest.OperationURLParameter = {
  parameterPath: "msixPackageFullName",
  mapper: {
    required: true,
    serializedName: "msixPackageFullName",
    constraints: {
      MaxLength: 100,
      MinLength: 3
    },
    type: {
      name: "String"
    }
  }
};
export const nextPageLink: msRest.OperationURLParameter = {
  parameterPath: "nextPageLink",
  mapper: {
    required: true,
    serializedName: "nextLink",
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const privateEndpointConnectionName: msRest.OperationURLParameter = {
  parameterPath: "privateEndpointConnectionName",
  mapper: {
    required: true,
    serializedName: "privateEndpointConnectionName",
    type: {
      name: "String"
    }
  }
};
export const resourceGroupName: msRest.OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    required: true,
    serializedName: "resourceGroupName",
    constraints: {
      MaxLength: 90,
      MinLength: 1
    },
    type: {
      name: "String"
    }
  }
};
export const scalingPlanName: msRest.OperationURLParameter = {
  parameterPath: "scalingPlanName",
  mapper: {
    required: true,
    serializedName: "scalingPlanName",
    constraints: {
      MaxLength: 64,
      MinLength: 3
    },
    type: {
      name: "String"
    }
  }
};
export const sessionHostName: msRest.OperationURLParameter = {
  parameterPath: "sessionHostName",
  mapper: {
    required: true,
    serializedName: "sessionHostName",
    constraints: {
      MaxLength: 48,
      MinLength: 3
    },
    type: {
      name: "String"
    }
  }
};
export const subscriptionId: msRest.OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    required: true,
    serializedName: "subscriptionId",
    constraints: {
      MinLength: 1
    },
    type: {
      name: "String"
    }
  }
};
export const userSessionId: msRest.OperationURLParameter = {
  parameterPath: "userSessionId",
  mapper: {
    required: true,
    serializedName: "userSessionId",
    constraints: {
      MaxLength: 24,
      MinLength: 1
    },
    type: {
      name: "String"
    }
  }
};
export const workspaceName: msRest.OperationURLParameter = {
  parameterPath: "workspaceName",
  mapper: {
    required: true,
    serializedName: "workspaceName",
    constraints: {
      MaxLength: 64,
      MinLength: 3
    },
    type: {
      name: "String"
    }
  }
};
