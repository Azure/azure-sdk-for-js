/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import {
  ScalingPlanPersonalSchedulePatch,
  ScalingPlanPersonalSchedulesUpdateOptionalParams,
  DesktopVirtualizationAPIClient,
} from "@azure/arm-desktopvirtualization";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";

dotenv.config();

/**
 * This sample demonstrates how to Update a ScalingPlanPersonalSchedule.
 *
 * @summary Update a ScalingPlanPersonalSchedule.
 * x-ms-original-file: specification/desktopvirtualization/resource-manager/Microsoft.DesktopVirtualization/stable/2024-04-03/examples/ScalingPlanPersonalSchedule_Update.json
 */
async function scalingPlanPersonalSchedulesUpdate() {
  const subscriptionId =
    process.env["DESKTOPVIRTUALIZATION_SUBSCRIPTION_ID"] ||
    "daefabc0-95b4-48b3-b645-8a753a63c4fa";
  const resourceGroupName =
    process.env["DESKTOPVIRTUALIZATION_RESOURCE_GROUP"] || "resourceGroup1";
  const scalingPlanName = "scalingPlan1";
  const scalingPlanScheduleName = "scalingPlanScheduleWeekdays1";
  const scalingPlanSchedule: ScalingPlanPersonalSchedulePatch = {
    offPeakActionOnDisconnect: "None",
    offPeakActionOnLogoff: "Deallocate",
    offPeakMinutesToWaitOnDisconnect: 10,
    offPeakMinutesToWaitOnLogoff: 10,
    offPeakStartTime: { hour: 20, minute: 0 },
    offPeakStartVMOnConnect: "Disable",
    peakActionOnDisconnect: "None",
    peakActionOnLogoff: "Deallocate",
    peakMinutesToWaitOnDisconnect: 10,
    peakMinutesToWaitOnLogoff: 10,
    peakStartTime: { hour: 8, minute: 0 },
    rampDownActionOnDisconnect: "None",
    rampDownActionOnLogoff: "Deallocate",
    rampDownMinutesToWaitOnDisconnect: 10,
    rampDownMinutesToWaitOnLogoff: 10,
    rampDownStartTime: { hour: 18, minute: 0 },
  };
  const options: ScalingPlanPersonalSchedulesUpdateOptionalParams = {
    scalingPlanSchedule,
  };
  const credential = new DefaultAzureCredential();
  const client = new DesktopVirtualizationAPIClient(credential, subscriptionId);
  const result = await client.scalingPlanPersonalSchedules.update(
    resourceGroupName,
    scalingPlanName,
    scalingPlanScheduleName,
    options,
  );
  console.log(result);
}

async function main() {
  scalingPlanPersonalSchedulesUpdate();
}

main().catch(console.error);
