/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
const { DesktopVirtualizationAPIClient } = require("@azure/arm-desktopvirtualization");
const { DefaultAzureCredential } = require("@azure/identity");

/**
 * This sample demonstrates how to Create or update a host pool.
 *
 * @summary Create or update a host pool.
 * x-ms-original-file: specification/desktopvirtualization/resource-manager/Microsoft.DesktopVirtualization/preview/2021-09-03-preview/examples/HostPool_Create.json
 */
async function hostPoolCreate() {
  const subscriptionId = "daefabc0-95b4-48b3-b645-8a753a63c4fa";
  const resourceGroupName = "resourceGroup1";
  const hostPoolName = "hostPool1";
  const hostPool = {
    description: "des1",
    customRdpProperty: undefined,
    friendlyName: "friendly",
    hostPoolType: "Pooled",
    loadBalancerType: "BreadthFirst",
    location: "centralus",
    maxSessionLimit: 999999,
    migrationRequest: {
      migrationPath:
        "TenantGroups/{defaultV1TenantGroup.Name}/Tenants/{defaultV1Tenant.Name}/HostPools/{sessionHostPool.Name}",
      operation: "Start",
    },
    personalDesktopAssignmentType: "Automatic",
    preferredAppGroupType: "Desktop",
    publicNetworkAccess: "Enabled",
    registrationInfo: {
      expirationTime: new Date("2020-10-01T14:01:54.9571247Z"),
      registrationTokenOperation: "Update",
    },
    ssoClientId: "client",
    ssoClientSecretKeyVaultPath: "https://keyvault/secret",
    ssoSecretType: "SharedKey",
    ssoadfsAuthority: "https://adfs",
    startVMOnConnect: false,
    tags: { tag1: "value1", tag2: "value2" },
    vmTemplate: "{json:json}",
  };
  const credential = new DefaultAzureCredential();
  const client = new DesktopVirtualizationAPIClient(credential, subscriptionId);
  const result = await client.hostPools.createOrUpdate(resourceGroupName, hostPoolName, hostPool);
  console.log(result);
}

hostPoolCreate().catch(console.error);
