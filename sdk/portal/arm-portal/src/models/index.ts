/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export type DashboardPartMetadataUnion =
  | DashboardPartMetadata
  | MarkdownPartMetadata;

/** Results of the request to list operations. */
export interface ResourceProviderOperationList {
  /** List of operations supported by this resource provider. */
  value?: ResourceProviderOperation[];
  /** The URL to use for getting the next set of results. */
  nextLink?: string;
}

/** Supported operations of this resource provider. */
export interface ResourceProviderOperation {
  /** Operation name, in format of {provider}/{resource}/{operation} */
  name?: string;
  /** Indicates whether the operation applies to data-plane. */
  isDataAction?: string;
  /** Display metadata associated with the operation. */
  display?: ResourceProviderOperationDisplay;
}

/** Display metadata associated with the operation. */
export interface ResourceProviderOperationDisplay {
  /** Resource provider: Microsoft Custom Providers. */
  provider?: string;
  /** Resource on which the operation is performed. */
  resource?: string;
  /** Type of operation: get, read, delete, etc. */
  operation?: string;
  /** Description of this operation. */
  description?: string;
}

/** Error response. */
export interface ErrorResponse {
  /** The error details. */
  error?: ErrorDefinition;
}

/** Error definition. */
export interface ErrorDefinition {
  /**
   * Service specific error code which serves as the substatus for the HTTP error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: number;
  /**
   * Description of the error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * Internal error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDefinition[];
}

/** The shared dashboard resource definition. */
export interface Dashboard {
  /**
   * Resource Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Resource name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Resource type
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** Resource location */
  location: string;
  /** Resource tags */
  tags?: { [propertyName: string]: string };
  /** The dashboard lenses. */
  lenses?: DashboardLens[];
  /** The dashboard metadata. */
  metadata?: { [propertyName: string]: Record<string, unknown> };
}

/** A dashboard lens. */
export interface DashboardLens {
  /** The lens order. */
  order: number;
  /** The dashboard parts. */
  parts: DashboardParts[];
  /** The dashboard len's metadata. */
  metadata?: { [propertyName: string]: Record<string, unknown> };
}

/** A dashboard part. */
export interface DashboardParts {
  /** The dashboard's part position. */
  position: DashboardPartsPosition;
  /** The dashboard part's metadata. */
  metadata?: DashboardPartMetadataUnion;
}

/** The dashboard's part position. */
export interface DashboardPartsPosition {
  /** The dashboard's part x coordinate. */
  x: number;
  /** The dashboard's part y coordinate. */
  y: number;
  /** The dashboard's part row span. */
  rowSpan: number;
  /** The dashboard's part column span. */
  colSpan: number;
  /** The dashboard part's metadata. */
  metadata?: { [propertyName: string]: Record<string, unknown> };
}

/** A dashboard part metadata. */
export interface DashboardPartMetadata {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "Extension/HubsExtension/PartType/MarkdownPart";
  /** Describes unknown properties. The value of an unknown property can be of "any" type. */
  [property: string]: any;
}

/** The shared dashboard resource definition. */
export interface PatchableDashboard {
  /** Resource tags */
  tags?: { [propertyName: string]: string };
  /** The dashboard lenses. */
  lenses?: DashboardLens[];
  /** The dashboard metadata. */
  metadata?: { [propertyName: string]: Record<string, unknown> };
}

/** List of dashboards. */
export interface DashboardListResult {
  /** The array of custom resource provider manifests. */
  value?: Dashboard[];
  /** The URL to use for getting the next set of results. */
  nextLink?: string;
}

/** List of tenant configurations. */
export interface ConfigurationList {
  /** The array of tenant configurations. */
  value?: Configuration[];
  /** The URL to use for getting the next set of results. */
  nextLink?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** List of list of items that violate tenant's configuration. */
export interface ViolationsList {
  /** The array of violations. */
  value?: Violation[];
  /** The URL to use for getting the next set of results. */
  nextLink?: string;
}

/** Violation information. */
export interface Violation {
  /**
   * Id of the item that violates tenant configuration.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Id of the user who owns violated item.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly userId?: string;
  /**
   * Error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorMessage?: string;
}

/** Markdown part settings. */
export interface MarkdownPartMetadataSettings {
  /** The content of markdown part. */
  content?: MarkdownPartMetadataSettingsContent;
}

/** The content of markdown part. */
export interface MarkdownPartMetadataSettingsContent {
  /** The setting of the content of markdown part. */
  settings?: MarkdownPartMetadataSettingsContentSettings;
}

/** The setting of the content of markdown part. */
export interface MarkdownPartMetadataSettingsContentSettings {
  /** The content of the markdown part. */
  content?: string;
  /** The title of the markdown part. */
  title?: string;
  /** The subtitle of the markdown part. */
  subtitle?: string;
  /** The source of the content of the markdown part. */
  markdownSource?: number;
  /** The uri of markdown content. */
  markdownUri?: string;
}

/** Markdown part metadata. */
export interface MarkdownPartMetadata extends DashboardPartMetadata {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "Extension/HubsExtension/PartType/MarkdownPart";
  /** Input to dashboard part. */
  inputs?: Record<string, unknown>[];
  /** Markdown part settings. */
  settings?: MarkdownPartMetadataSettings;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** Tenant configuration. */
export interface Configuration extends ProxyResource {
  /** When flag is set to true Markdown tile will require external storage configuration (URI). The inline content configuration will be prohibited. */
  enforcePrivateMarkdownStorage?: boolean;
}

/** Known values of {@link ConfigurationName} that the service accepts. */
export enum KnownConfigurationName {
  /** Default */
  Default = "default"
}

/**
 * Defines values for ConfigurationName. \
 * {@link KnownConfigurationName} can be used interchangeably with ConfigurationName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **default**
 */
export type ConfigurationName = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = ResourceProviderOperationList;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = ResourceProviderOperationList;

/** Optional parameters. */
export interface DashboardsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type DashboardsCreateOrUpdateResponse = Dashboard;

/** Optional parameters. */
export interface DashboardsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface DashboardsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DashboardsGetResponse = Dashboard;

/** Optional parameters. */
export interface DashboardsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type DashboardsUpdateResponse = Dashboard;

/** Optional parameters. */
export interface DashboardsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type DashboardsListByResourceGroupResponse = DashboardListResult;

/** Optional parameters. */
export interface DashboardsListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type DashboardsListBySubscriptionResponse = DashboardListResult;

/** Optional parameters. */
export interface DashboardsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type DashboardsListByResourceGroupNextResponse = DashboardListResult;

/** Optional parameters. */
export interface DashboardsListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type DashboardsListBySubscriptionNextResponse = DashboardListResult;

/** Optional parameters. */
export interface TenantConfigurationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type TenantConfigurationsListResponse = ConfigurationList;

/** Optional parameters. */
export interface TenantConfigurationsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type TenantConfigurationsGetResponse = Configuration;

/** Optional parameters. */
export interface TenantConfigurationsCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type TenantConfigurationsCreateResponse = Configuration;

/** Optional parameters. */
export interface TenantConfigurationsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface TenantConfigurationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type TenantConfigurationsListNextResponse = ConfigurationList;

/** Optional parameters. */
export interface ListTenantConfigurationViolationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ListTenantConfigurationViolationsListResponse = ViolationsList;

/** Optional parameters. */
export interface ListTenantConfigurationViolationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ListTenantConfigurationViolationsListNextResponse = ViolationsList;

/** Optional parameters. */
export interface PortalOptionalParams extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
