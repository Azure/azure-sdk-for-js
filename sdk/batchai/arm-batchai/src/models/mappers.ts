/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const UsageName: msRest.CompositeMapper = {
  serializedName: "UsageName",
  type: {
    name: "Composite",
    className: "UsageName",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      localizedValue: {
        readOnly: true,
        serializedName: "localizedValue",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Usage: msRest.CompositeMapper = {
  serializedName: "Usage",
  type: {
    name: "Composite",
    className: "Usage",
    modelProperties: {
      unit: {
        readOnly: true,
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      currentValue: {
        readOnly: true,
        serializedName: "currentValue",
        type: {
          name: "Number"
        }
      },
      limit: {
        readOnly: true,
        serializedName: "limit",
        type: {
          name: "Number"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "Composite",
          className: "UsageName"
        }
      }
    }
  }
};

export const UserAccountSettings: msRest.CompositeMapper = {
  serializedName: "UserAccountSettings",
  type: {
    name: "Composite",
    className: "UserAccountSettings",
    modelProperties: {
      adminUserName: {
        required: true,
        serializedName: "adminUserName",
        type: {
          name: "String"
        }
      },
      adminUserSshPublicKey: {
        serializedName: "adminUserSshPublicKey",
        type: {
          name: "String"
        }
      },
      adminUserPassword: {
        serializedName: "adminUserPassword",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SshConfiguration: msRest.CompositeMapper = {
  serializedName: "SshConfiguration",
  type: {
    name: "Composite",
    className: "SshConfiguration",
    modelProperties: {
      publicIPsToAllow: {
        serializedName: "publicIPsToAllow",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      userAccountSettings: {
        required: true,
        serializedName: "userAccountSettings",
        type: {
          name: "Composite",
          className: "UserAccountSettings"
        }
      }
    }
  }
};

export const DataDisks: msRest.CompositeMapper = {
  serializedName: "DataDisks",
  type: {
    name: "Composite",
    className: "DataDisks",
    modelProperties: {
      diskSizeInGB: {
        required: true,
        serializedName: "diskSizeInGB",
        type: {
          name: "Number"
        }
      },
      cachingType: {
        serializedName: "cachingType",
        defaultValue: 'none',
        type: {
          name: "Enum",
          allowedValues: [
            "none",
            "readonly",
            "readwrite"
          ]
        }
      },
      diskCount: {
        required: true,
        serializedName: "diskCount",
        type: {
          name: "Number"
        }
      },
      storageAccountType: {
        required: true,
        serializedName: "storageAccountType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceId: msRest.CompositeMapper = {
  serializedName: "ResourceId",
  type: {
    name: "Composite",
    className: "ResourceId",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MountSettings: msRest.CompositeMapper = {
  serializedName: "MountSettings",
  type: {
    name: "Composite",
    className: "MountSettings",
    modelProperties: {
      mountPoint: {
        serializedName: "mountPoint",
        type: {
          name: "String"
        }
      },
      fileServerPublicIP: {
        serializedName: "fileServerPublicIP",
        type: {
          name: "String"
        }
      },
      fileServerInternalIP: {
        serializedName: "fileServerInternalIP",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileServer: msRest.CompositeMapper = {
  serializedName: "FileServer",
  type: {
    name: "Composite",
    className: "FileServer",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      vmSize: {
        serializedName: "properties.vmSize",
        type: {
          name: "String"
        }
      },
      sshConfiguration: {
        serializedName: "properties.sshConfiguration",
        type: {
          name: "Composite",
          className: "SshConfiguration"
        }
      },
      dataDisks: {
        serializedName: "properties.dataDisks",
        type: {
          name: "Composite",
          className: "DataDisks"
        }
      },
      subnet: {
        serializedName: "properties.subnet",
        type: {
          name: "Composite",
          className: "ResourceId"
        }
      },
      mountSettings: {
        readOnly: true,
        serializedName: "properties.mountSettings",
        type: {
          name: "Composite",
          className: "MountSettings"
        }
      },
      provisioningStateTransitionTime: {
        readOnly: true,
        serializedName: "properties.provisioningStateTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      creationTime: {
        readOnly: true,
        serializedName: "properties.creationTime",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        nullable: false,
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const KeyVaultSecretReference: msRest.CompositeMapper = {
  serializedName: "KeyVaultSecretReference",
  type: {
    name: "Composite",
    className: "KeyVaultSecretReference",
    modelProperties: {
      sourceVault: {
        required: true,
        serializedName: "sourceVault",
        type: {
          name: "Composite",
          className: "ResourceId"
        }
      },
      secretUrl: {
        required: true,
        serializedName: "secretUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileServerCreateParameters: msRest.CompositeMapper = {
  serializedName: "FileServerCreateParameters",
  type: {
    name: "Composite",
    className: "FileServerCreateParameters",
    modelProperties: {
      vmSize: {
        required: true,
        serializedName: "properties.vmSize",
        type: {
          name: "String"
        }
      },
      sshConfiguration: {
        required: true,
        serializedName: "properties.sshConfiguration",
        type: {
          name: "Composite",
          className: "SshConfiguration"
        }
      },
      dataDisks: {
        required: true,
        serializedName: "properties.dataDisks",
        type: {
          name: "Composite",
          className: "DataDisks"
        }
      },
      subnet: {
        serializedName: "properties.subnet",
        type: {
          name: "Composite",
          className: "ResourceId"
        }
      }
    }
  }
};

export const ManualScaleSettings: msRest.CompositeMapper = {
  serializedName: "ManualScaleSettings",
  type: {
    name: "Composite",
    className: "ManualScaleSettings",
    modelProperties: {
      targetNodeCount: {
        required: true,
        serializedName: "targetNodeCount",
        defaultValue: 0,
        type: {
          name: "Number"
        }
      },
      nodeDeallocationOption: {
        serializedName: "nodeDeallocationOption",
        defaultValue: 'requeue',
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AutoScaleSettings: msRest.CompositeMapper = {
  serializedName: "AutoScaleSettings",
  type: {
    name: "Composite",
    className: "AutoScaleSettings",
    modelProperties: {
      minimumNodeCount: {
        required: true,
        serializedName: "minimumNodeCount",
        type: {
          name: "Number"
        }
      },
      maximumNodeCount: {
        required: true,
        serializedName: "maximumNodeCount",
        type: {
          name: "Number"
        }
      },
      initialNodeCount: {
        serializedName: "initialNodeCount",
        defaultValue: 0,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ScaleSettings: msRest.CompositeMapper = {
  serializedName: "ScaleSettings",
  type: {
    name: "Composite",
    className: "ScaleSettings",
    modelProperties: {
      manual: {
        serializedName: "manual",
        type: {
          name: "Composite",
          className: "ManualScaleSettings"
        }
      },
      autoScale: {
        serializedName: "autoScale",
        type: {
          name: "Composite",
          className: "AutoScaleSettings"
        }
      }
    }
  }
};

export const ImageReference: msRest.CompositeMapper = {
  serializedName: "ImageReference",
  type: {
    name: "Composite",
    className: "ImageReference",
    modelProperties: {
      publisher: {
        required: true,
        serializedName: "publisher",
        type: {
          name: "String"
        }
      },
      offer: {
        required: true,
        serializedName: "offer",
        type: {
          name: "String"
        }
      },
      sku: {
        required: true,
        serializedName: "sku",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      virtualMachineImageId: {
        serializedName: "virtualMachineImageId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineConfiguration: msRest.CompositeMapper = {
  serializedName: "VirtualMachineConfiguration",
  type: {
    name: "Composite",
    className: "VirtualMachineConfiguration",
    modelProperties: {
      imageReference: {
        serializedName: "imageReference",
        type: {
          name: "Composite",
          className: "ImageReference"
        }
      }
    }
  }
};

export const EnvironmentVariable: msRest.CompositeMapper = {
  serializedName: "EnvironmentVariable",
  type: {
    name: "Composite",
    className: "EnvironmentVariable",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EnvironmentVariableWithSecretValue: msRest.CompositeMapper = {
  serializedName: "EnvironmentVariableWithSecretValue",
  type: {
    name: "Composite",
    className: "EnvironmentVariableWithSecretValue",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      valueSecretReference: {
        serializedName: "valueSecretReference",
        type: {
          name: "Composite",
          className: "KeyVaultSecretReference"
        }
      }
    }
  }
};

export const SetupTask: msRest.CompositeMapper = {
  serializedName: "SetupTask",
  type: {
    name: "Composite",
    className: "SetupTask",
    modelProperties: {
      commandLine: {
        required: true,
        serializedName: "commandLine",
        type: {
          name: "String"
        }
      },
      environmentVariables: {
        serializedName: "environmentVariables",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EnvironmentVariable"
            }
          }
        }
      },
      secrets: {
        serializedName: "secrets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EnvironmentVariableWithSecretValue"
            }
          }
        }
      },
      stdOutErrPathPrefix: {
        required: true,
        serializedName: "stdOutErrPathPrefix",
        type: {
          name: "String"
        }
      },
      stdOutErrPathSuffix: {
        readOnly: true,
        serializedName: "stdOutErrPathSuffix",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureStorageCredentialsInfo: msRest.CompositeMapper = {
  serializedName: "AzureStorageCredentialsInfo",
  type: {
    name: "Composite",
    className: "AzureStorageCredentialsInfo",
    modelProperties: {
      accountKey: {
        serializedName: "accountKey",
        type: {
          name: "String"
        }
      },
      accountKeySecretReference: {
        serializedName: "accountKeySecretReference",
        type: {
          name: "Composite",
          className: "KeyVaultSecretReference"
        }
      }
    }
  }
};

export const AzureFileShareReference: msRest.CompositeMapper = {
  serializedName: "AzureFileShareReference",
  type: {
    name: "Composite",
    className: "AzureFileShareReference",
    modelProperties: {
      accountName: {
        required: true,
        serializedName: "accountName",
        type: {
          name: "String"
        }
      },
      azureFileUrl: {
        required: true,
        serializedName: "azureFileUrl",
        type: {
          name: "String"
        }
      },
      credentials: {
        required: true,
        serializedName: "credentials",
        type: {
          name: "Composite",
          className: "AzureStorageCredentialsInfo"
        }
      },
      relativeMountPath: {
        required: true,
        serializedName: "relativeMountPath",
        type: {
          name: "String"
        }
      },
      fileMode: {
        serializedName: "fileMode",
        defaultValue: '0777',
        type: {
          name: "String"
        }
      },
      directoryMode: {
        serializedName: "directoryMode",
        defaultValue: '0777',
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureBlobFileSystemReference: msRest.CompositeMapper = {
  serializedName: "AzureBlobFileSystemReference",
  type: {
    name: "Composite",
    className: "AzureBlobFileSystemReference",
    modelProperties: {
      accountName: {
        required: true,
        serializedName: "accountName",
        type: {
          name: "String"
        }
      },
      containerName: {
        required: true,
        serializedName: "containerName",
        type: {
          name: "String"
        }
      },
      credentials: {
        required: true,
        serializedName: "credentials",
        type: {
          name: "Composite",
          className: "AzureStorageCredentialsInfo"
        }
      },
      relativeMountPath: {
        required: true,
        serializedName: "relativeMountPath",
        type: {
          name: "String"
        }
      },
      mountOptions: {
        serializedName: "mountOptions",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileServerReference: msRest.CompositeMapper = {
  serializedName: "FileServerReference",
  type: {
    name: "Composite",
    className: "FileServerReference",
    modelProperties: {
      fileServer: {
        required: true,
        serializedName: "fileServer",
        type: {
          name: "Composite",
          className: "ResourceId"
        }
      },
      sourceDirectory: {
        serializedName: "sourceDirectory",
        type: {
          name: "String"
        }
      },
      relativeMountPath: {
        required: true,
        serializedName: "relativeMountPath",
        type: {
          name: "String"
        }
      },
      mountOptions: {
        serializedName: "mountOptions",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UnmanagedFileSystemReference: msRest.CompositeMapper = {
  serializedName: "UnmanagedFileSystemReference",
  type: {
    name: "Composite",
    className: "UnmanagedFileSystemReference",
    modelProperties: {
      mountCommand: {
        required: true,
        serializedName: "mountCommand",
        type: {
          name: "String"
        }
      },
      relativeMountPath: {
        required: true,
        serializedName: "relativeMountPath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MountVolumes: msRest.CompositeMapper = {
  serializedName: "MountVolumes",
  type: {
    name: "Composite",
    className: "MountVolumes",
    modelProperties: {
      azureFileShares: {
        serializedName: "azureFileShares",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureFileShareReference"
            }
          }
        }
      },
      azureBlobFileSystems: {
        serializedName: "azureBlobFileSystems",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureBlobFileSystemReference"
            }
          }
        }
      },
      fileServers: {
        serializedName: "fileServers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FileServerReference"
            }
          }
        }
      },
      unmanagedFileSystems: {
        serializedName: "unmanagedFileSystems",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UnmanagedFileSystemReference"
            }
          }
        }
      }
    }
  }
};

export const AppInsightsReference: msRest.CompositeMapper = {
  serializedName: "AppInsightsReference",
  type: {
    name: "Composite",
    className: "AppInsightsReference",
    modelProperties: {
      component: {
        required: true,
        serializedName: "component",
        type: {
          name: "Composite",
          className: "ResourceId"
        }
      },
      instrumentationKey: {
        serializedName: "instrumentationKey",
        type: {
          name: "String"
        }
      },
      instrumentationKeySecretReference: {
        serializedName: "instrumentationKeySecretReference",
        type: {
          name: "Composite",
          className: "KeyVaultSecretReference"
        }
      }
    }
  }
};

export const PerformanceCountersSettings: msRest.CompositeMapper = {
  serializedName: "PerformanceCountersSettings",
  type: {
    name: "Composite",
    className: "PerformanceCountersSettings",
    modelProperties: {
      appInsightsReference: {
        required: true,
        serializedName: "appInsightsReference",
        type: {
          name: "Composite",
          className: "AppInsightsReference"
        }
      }
    }
  }
};

export const NodeSetup: msRest.CompositeMapper = {
  serializedName: "NodeSetup",
  type: {
    name: "Composite",
    className: "NodeSetup",
    modelProperties: {
      setupTask: {
        serializedName: "setupTask",
        type: {
          name: "Composite",
          className: "SetupTask"
        }
      },
      mountVolumes: {
        serializedName: "mountVolumes",
        type: {
          name: "Composite",
          className: "MountVolumes"
        }
      },
      performanceCountersSettings: {
        serializedName: "performanceCountersSettings",
        type: {
          name: "Composite",
          className: "PerformanceCountersSettings"
        }
      }
    }
  }
};

export const NodeStateCounts: msRest.CompositeMapper = {
  serializedName: "NodeStateCounts",
  type: {
    name: "Composite",
    className: "NodeStateCounts",
    modelProperties: {
      idleNodeCount: {
        readOnly: true,
        serializedName: "idleNodeCount",
        type: {
          name: "Number"
        }
      },
      runningNodeCount: {
        readOnly: true,
        serializedName: "runningNodeCount",
        type: {
          name: "Number"
        }
      },
      preparingNodeCount: {
        readOnly: true,
        serializedName: "preparingNodeCount",
        type: {
          name: "Number"
        }
      },
      unusableNodeCount: {
        readOnly: true,
        serializedName: "unusableNodeCount",
        type: {
          name: "Number"
        }
      },
      leavingNodeCount: {
        readOnly: true,
        serializedName: "leavingNodeCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ClusterCreateParameters: msRest.CompositeMapper = {
  serializedName: "ClusterCreateParameters",
  type: {
    name: "Composite",
    className: "ClusterCreateParameters",
    modelProperties: {
      vmSize: {
        required: true,
        serializedName: "properties.vmSize",
        type: {
          name: "String"
        }
      },
      vmPriority: {
        serializedName: "properties.vmPriority",
        defaultValue: 'dedicated',
        type: {
          name: "Enum",
          allowedValues: [
            "dedicated",
            "lowpriority"
          ]
        }
      },
      scaleSettings: {
        serializedName: "properties.scaleSettings",
        type: {
          name: "Composite",
          className: "ScaleSettings"
        }
      },
      virtualMachineConfiguration: {
        serializedName: "properties.virtualMachineConfiguration",
        type: {
          name: "Composite",
          className: "VirtualMachineConfiguration"
        }
      },
      nodeSetup: {
        serializedName: "properties.nodeSetup",
        type: {
          name: "Composite",
          className: "NodeSetup"
        }
      },
      userAccountSettings: {
        required: true,
        serializedName: "properties.userAccountSettings",
        type: {
          name: "Composite",
          className: "UserAccountSettings"
        }
      },
      subnet: {
        serializedName: "properties.subnet",
        type: {
          name: "Composite",
          className: "ResourceId"
        }
      }
    }
  }
};

export const ClusterUpdateParameters: msRest.CompositeMapper = {
  serializedName: "ClusterUpdateParameters",
  type: {
    name: "Composite",
    className: "ClusterUpdateParameters",
    modelProperties: {
      scaleSettings: {
        serializedName: "properties.scaleSettings",
        type: {
          name: "Composite",
          className: "ScaleSettings"
        }
      }
    }
  }
};

export const NameValuePair: msRest.CompositeMapper = {
  serializedName: "NameValuePair",
  type: {
    name: "Composite",
    className: "NameValuePair",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BatchAIError: msRest.CompositeMapper = {
  serializedName: "BatchAIError",
  type: {
    name: "Composite",
    className: "BatchAIError",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      details: {
        readOnly: true,
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NameValuePair"
            }
          }
        }
      }
    }
  }
};

export const Cluster: msRest.CompositeMapper = {
  serializedName: "Cluster",
  type: {
    name: "Composite",
    className: "Cluster",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      vmSize: {
        serializedName: "properties.vmSize",
        type: {
          name: "String"
        }
      },
      vmPriority: {
        serializedName: "properties.vmPriority",
        defaultValue: 'dedicated',
        type: {
          name: "Enum",
          allowedValues: [
            "dedicated",
            "lowpriority"
          ]
        }
      },
      scaleSettings: {
        serializedName: "properties.scaleSettings",
        type: {
          name: "Composite",
          className: "ScaleSettings"
        }
      },
      virtualMachineConfiguration: {
        serializedName: "properties.virtualMachineConfiguration",
        type: {
          name: "Composite",
          className: "VirtualMachineConfiguration"
        }
      },
      nodeSetup: {
        serializedName: "properties.nodeSetup",
        type: {
          name: "Composite",
          className: "NodeSetup"
        }
      },
      userAccountSettings: {
        serializedName: "properties.userAccountSettings",
        type: {
          name: "Composite",
          className: "UserAccountSettings"
        }
      },
      subnet: {
        serializedName: "properties.subnet",
        type: {
          name: "Composite",
          className: "ResourceId"
        }
      },
      creationTime: {
        readOnly: true,
        serializedName: "properties.creationTime",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        nullable: false,
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      provisioningStateTransitionTime: {
        readOnly: true,
        serializedName: "properties.provisioningStateTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      allocationState: {
        readOnly: true,
        serializedName: "properties.allocationState",
        type: {
          name: "String"
        }
      },
      allocationStateTransitionTime: {
        readOnly: true,
        serializedName: "properties.allocationStateTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      errors: {
        readOnly: true,
        serializedName: "properties.errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BatchAIError"
            }
          }
        }
      },
      currentNodeCount: {
        readOnly: true,
        serializedName: "properties.currentNodeCount",
        type: {
          name: "Number"
        }
      },
      nodeStateCounts: {
        readOnly: true,
        serializedName: "properties.nodeStateCounts",
        type: {
          name: "Composite",
          className: "NodeStateCounts"
        }
      }
    }
  }
};

export const PrivateRegistryCredentials: msRest.CompositeMapper = {
  serializedName: "PrivateRegistryCredentials",
  type: {
    name: "Composite",
    className: "PrivateRegistryCredentials",
    modelProperties: {
      username: {
        required: true,
        serializedName: "username",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        type: {
          name: "String"
        }
      },
      passwordSecretReference: {
        serializedName: "passwordSecretReference",
        type: {
          name: "Composite",
          className: "KeyVaultSecretReference"
        }
      }
    }
  }
};

export const ImageSourceRegistry: msRest.CompositeMapper = {
  serializedName: "ImageSourceRegistry",
  type: {
    name: "Composite",
    className: "ImageSourceRegistry",
    modelProperties: {
      serverUrl: {
        serializedName: "serverUrl",
        type: {
          name: "String"
        }
      },
      image: {
        required: true,
        serializedName: "image",
        type: {
          name: "String"
        }
      },
      credentials: {
        serializedName: "credentials",
        type: {
          name: "Composite",
          className: "PrivateRegistryCredentials"
        }
      }
    }
  }
};

export const ContainerSettings: msRest.CompositeMapper = {
  serializedName: "ContainerSettings",
  type: {
    name: "Composite",
    className: "ContainerSettings",
    modelProperties: {
      imageSourceRegistry: {
        required: true,
        serializedName: "imageSourceRegistry",
        type: {
          name: "Composite",
          className: "ImageSourceRegistry"
        }
      },
      shmSize: {
        serializedName: "shmSize",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CNTKsettings: msRest.CompositeMapper = {
  serializedName: "CNTKsettings",
  type: {
    name: "Composite",
    className: "CNTKsettings",
    modelProperties: {
      languageType: {
        serializedName: "languageType",
        type: {
          name: "String"
        }
      },
      configFilePath: {
        serializedName: "configFilePath",
        type: {
          name: "String"
        }
      },
      pythonScriptFilePath: {
        serializedName: "pythonScriptFilePath",
        type: {
          name: "String"
        }
      },
      pythonInterpreterPath: {
        serializedName: "pythonInterpreterPath",
        type: {
          name: "String"
        }
      },
      commandLineArgs: {
        serializedName: "commandLineArgs",
        type: {
          name: "String"
        }
      },
      processCount: {
        serializedName: "processCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PyTorchSettings: msRest.CompositeMapper = {
  serializedName: "PyTorchSettings",
  type: {
    name: "Composite",
    className: "PyTorchSettings",
    modelProperties: {
      pythonScriptFilePath: {
        required: true,
        serializedName: "pythonScriptFilePath",
        type: {
          name: "String"
        }
      },
      pythonInterpreterPath: {
        serializedName: "pythonInterpreterPath",
        type: {
          name: "String"
        }
      },
      commandLineArgs: {
        serializedName: "commandLineArgs",
        type: {
          name: "String"
        }
      },
      processCount: {
        serializedName: "processCount",
        type: {
          name: "Number"
        }
      },
      communicationBackend: {
        serializedName: "communicationBackend",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TensorFlowSettings: msRest.CompositeMapper = {
  serializedName: "TensorFlowSettings",
  type: {
    name: "Composite",
    className: "TensorFlowSettings",
    modelProperties: {
      pythonScriptFilePath: {
        required: true,
        serializedName: "pythonScriptFilePath",
        type: {
          name: "String"
        }
      },
      pythonInterpreterPath: {
        serializedName: "pythonInterpreterPath",
        type: {
          name: "String"
        }
      },
      masterCommandLineArgs: {
        serializedName: "masterCommandLineArgs",
        type: {
          name: "String"
        }
      },
      workerCommandLineArgs: {
        serializedName: "workerCommandLineArgs",
        type: {
          name: "String"
        }
      },
      parameterServerCommandLineArgs: {
        serializedName: "parameterServerCommandLineArgs",
        type: {
          name: "String"
        }
      },
      workerCount: {
        serializedName: "workerCount",
        type: {
          name: "Number"
        }
      },
      parameterServerCount: {
        serializedName: "parameterServerCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CaffeSettings: msRest.CompositeMapper = {
  serializedName: "CaffeSettings",
  type: {
    name: "Composite",
    className: "CaffeSettings",
    modelProperties: {
      configFilePath: {
        serializedName: "configFilePath",
        type: {
          name: "String"
        }
      },
      pythonScriptFilePath: {
        serializedName: "pythonScriptFilePath",
        type: {
          name: "String"
        }
      },
      pythonInterpreterPath: {
        serializedName: "pythonInterpreterPath",
        type: {
          name: "String"
        }
      },
      commandLineArgs: {
        serializedName: "commandLineArgs",
        type: {
          name: "String"
        }
      },
      processCount: {
        serializedName: "processCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Caffe2Settings: msRest.CompositeMapper = {
  serializedName: "Caffe2Settings",
  type: {
    name: "Composite",
    className: "Caffe2Settings",
    modelProperties: {
      pythonScriptFilePath: {
        required: true,
        serializedName: "pythonScriptFilePath",
        type: {
          name: "String"
        }
      },
      pythonInterpreterPath: {
        serializedName: "pythonInterpreterPath",
        type: {
          name: "String"
        }
      },
      commandLineArgs: {
        serializedName: "commandLineArgs",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ChainerSettings: msRest.CompositeMapper = {
  serializedName: "ChainerSettings",
  type: {
    name: "Composite",
    className: "ChainerSettings",
    modelProperties: {
      pythonScriptFilePath: {
        required: true,
        serializedName: "pythonScriptFilePath",
        type: {
          name: "String"
        }
      },
      pythonInterpreterPath: {
        serializedName: "pythonInterpreterPath",
        type: {
          name: "String"
        }
      },
      commandLineArgs: {
        serializedName: "commandLineArgs",
        type: {
          name: "String"
        }
      },
      processCount: {
        serializedName: "processCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CustomToolkitSettings: msRest.CompositeMapper = {
  serializedName: "CustomToolkitSettings",
  type: {
    name: "Composite",
    className: "CustomToolkitSettings",
    modelProperties: {
      commandLine: {
        serializedName: "commandLine",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomMpiSettings: msRest.CompositeMapper = {
  serializedName: "CustomMpiSettings",
  type: {
    name: "Composite",
    className: "CustomMpiSettings",
    modelProperties: {
      commandLine: {
        required: true,
        serializedName: "commandLine",
        type: {
          name: "String"
        }
      },
      processCount: {
        serializedName: "processCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const HorovodSettings: msRest.CompositeMapper = {
  serializedName: "HorovodSettings",
  type: {
    name: "Composite",
    className: "HorovodSettings",
    modelProperties: {
      pythonScriptFilePath: {
        required: true,
        serializedName: "pythonScriptFilePath",
        type: {
          name: "String"
        }
      },
      pythonInterpreterPath: {
        serializedName: "pythonInterpreterPath",
        type: {
          name: "String"
        }
      },
      commandLineArgs: {
        serializedName: "commandLineArgs",
        type: {
          name: "String"
        }
      },
      processCount: {
        serializedName: "processCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const JobPreparation: msRest.CompositeMapper = {
  serializedName: "JobPreparation",
  type: {
    name: "Composite",
    className: "JobPreparation",
    modelProperties: {
      commandLine: {
        required: true,
        serializedName: "commandLine",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InputDirectory: msRest.CompositeMapper = {
  serializedName: "InputDirectory",
  type: {
    name: "Composite",
    className: "InputDirectory",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      path: {
        required: true,
        serializedName: "path",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OutputDirectory: msRest.CompositeMapper = {
  serializedName: "OutputDirectory",
  type: {
    name: "Composite",
    className: "OutputDirectory",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      pathPrefix: {
        required: true,
        serializedName: "pathPrefix",
        type: {
          name: "String"
        }
      },
      pathSuffix: {
        serializedName: "pathSuffix",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JobBasePropertiesConstraints: msRest.CompositeMapper = {
  serializedName: "JobBaseProperties_constraints",
  type: {
    name: "Composite",
    className: "JobBasePropertiesConstraints",
    modelProperties: {
      maxWallClockTime: {
        serializedName: "maxWallClockTime",
        defaultValue: '7.00:00:00',
        type: {
          name: "TimeSpan"
        }
      }
    }
  }
};

export const JobCreateParameters: msRest.CompositeMapper = {
  serializedName: "JobCreateParameters",
  type: {
    name: "Composite",
    className: "JobCreateParameters",
    modelProperties: {
      schedulingPriority: {
        serializedName: "properties.schedulingPriority",
        defaultValue: 'normal',
        type: {
          name: "String"
        }
      },
      cluster: {
        required: true,
        serializedName: "properties.cluster",
        type: {
          name: "Composite",
          className: "ResourceId"
        }
      },
      mountVolumes: {
        serializedName: "properties.mountVolumes",
        type: {
          name: "Composite",
          className: "MountVolumes"
        }
      },
      nodeCount: {
        required: true,
        serializedName: "properties.nodeCount",
        type: {
          name: "Number"
        }
      },
      containerSettings: {
        serializedName: "properties.containerSettings",
        type: {
          name: "Composite",
          className: "ContainerSettings"
        }
      },
      cntkSettings: {
        serializedName: "properties.cntkSettings",
        type: {
          name: "Composite",
          className: "CNTKsettings"
        }
      },
      pyTorchSettings: {
        serializedName: "properties.pyTorchSettings",
        type: {
          name: "Composite",
          className: "PyTorchSettings"
        }
      },
      tensorFlowSettings: {
        serializedName: "properties.tensorFlowSettings",
        type: {
          name: "Composite",
          className: "TensorFlowSettings"
        }
      },
      caffeSettings: {
        serializedName: "properties.caffeSettings",
        type: {
          name: "Composite",
          className: "CaffeSettings"
        }
      },
      caffe2Settings: {
        serializedName: "properties.caffe2Settings",
        type: {
          name: "Composite",
          className: "Caffe2Settings"
        }
      },
      chainerSettings: {
        serializedName: "properties.chainerSettings",
        type: {
          name: "Composite",
          className: "ChainerSettings"
        }
      },
      customToolkitSettings: {
        serializedName: "properties.customToolkitSettings",
        type: {
          name: "Composite",
          className: "CustomToolkitSettings"
        }
      },
      customMpiSettings: {
        serializedName: "properties.customMpiSettings",
        type: {
          name: "Composite",
          className: "CustomMpiSettings"
        }
      },
      horovodSettings: {
        serializedName: "properties.horovodSettings",
        type: {
          name: "Composite",
          className: "HorovodSettings"
        }
      },
      jobPreparation: {
        serializedName: "properties.jobPreparation",
        type: {
          name: "Composite",
          className: "JobPreparation"
        }
      },
      stdOutErrPathPrefix: {
        required: true,
        serializedName: "properties.stdOutErrPathPrefix",
        type: {
          name: "String"
        }
      },
      inputDirectories: {
        serializedName: "properties.inputDirectories",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InputDirectory"
            }
          }
        }
      },
      outputDirectories: {
        serializedName: "properties.outputDirectories",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OutputDirectory"
            }
          }
        }
      },
      environmentVariables: {
        serializedName: "properties.environmentVariables",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EnvironmentVariable"
            }
          }
        }
      },
      secrets: {
        serializedName: "properties.secrets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EnvironmentVariableWithSecretValue"
            }
          }
        }
      },
      constraints: {
        serializedName: "properties.constraints",
        type: {
          name: "Composite",
          className: "JobBasePropertiesConstraints"
        }
      }
    }
  }
};

export const JobPropertiesConstraints: msRest.CompositeMapper = {
  serializedName: "JobProperties_constraints",
  type: {
    name: "Composite",
    className: "JobPropertiesConstraints",
    modelProperties: {
      maxWallClockTime: {
        serializedName: "maxWallClockTime",
        defaultValue: '7.00:00:00',
        type: {
          name: "TimeSpan"
        }
      }
    }
  }
};

export const JobPropertiesExecutionInfo: msRest.CompositeMapper = {
  serializedName: "JobProperties_executionInfo",
  type: {
    name: "Composite",
    className: "JobPropertiesExecutionInfo",
    modelProperties: {
      startTime: {
        readOnly: true,
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        readOnly: true,
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      exitCode: {
        readOnly: true,
        serializedName: "exitCode",
        type: {
          name: "Number"
        }
      },
      errors: {
        readOnly: true,
        serializedName: "errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BatchAIError"
            }
          }
        }
      }
    }
  }
};

export const Job: msRest.CompositeMapper = {
  serializedName: "Job",
  type: {
    name: "Composite",
    className: "Job",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      schedulingPriority: {
        serializedName: "properties.schedulingPriority",
        defaultValue: 'normal',
        type: {
          name: "String"
        }
      },
      cluster: {
        serializedName: "properties.cluster",
        type: {
          name: "Composite",
          className: "ResourceId"
        }
      },
      mountVolumes: {
        serializedName: "properties.mountVolumes",
        type: {
          name: "Composite",
          className: "MountVolumes"
        }
      },
      nodeCount: {
        serializedName: "properties.nodeCount",
        type: {
          name: "Number"
        }
      },
      containerSettings: {
        serializedName: "properties.containerSettings",
        type: {
          name: "Composite",
          className: "ContainerSettings"
        }
      },
      toolType: {
        serializedName: "properties.toolType",
        type: {
          name: "String"
        }
      },
      cntkSettings: {
        serializedName: "properties.cntkSettings",
        type: {
          name: "Composite",
          className: "CNTKsettings"
        }
      },
      pyTorchSettings: {
        serializedName: "properties.pyTorchSettings",
        type: {
          name: "Composite",
          className: "PyTorchSettings"
        }
      },
      tensorFlowSettings: {
        serializedName: "properties.tensorFlowSettings",
        type: {
          name: "Composite",
          className: "TensorFlowSettings"
        }
      },
      caffeSettings: {
        serializedName: "properties.caffeSettings",
        type: {
          name: "Composite",
          className: "CaffeSettings"
        }
      },
      caffe2Settings: {
        serializedName: "properties.caffe2Settings",
        type: {
          name: "Composite",
          className: "Caffe2Settings"
        }
      },
      chainerSettings: {
        serializedName: "properties.chainerSettings",
        type: {
          name: "Composite",
          className: "ChainerSettings"
        }
      },
      customToolkitSettings: {
        serializedName: "properties.customToolkitSettings",
        type: {
          name: "Composite",
          className: "CustomToolkitSettings"
        }
      },
      customMpiSettings: {
        serializedName: "properties.customMpiSettings",
        type: {
          name: "Composite",
          className: "CustomMpiSettings"
        }
      },
      horovodSettings: {
        serializedName: "properties.horovodSettings",
        type: {
          name: "Composite",
          className: "HorovodSettings"
        }
      },
      jobPreparation: {
        serializedName: "properties.jobPreparation",
        type: {
          name: "Composite",
          className: "JobPreparation"
        }
      },
      jobOutputDirectoryPathSegment: {
        readOnly: true,
        serializedName: "properties.jobOutputDirectoryPathSegment",
        type: {
          name: "String"
        }
      },
      stdOutErrPathPrefix: {
        serializedName: "properties.stdOutErrPathPrefix",
        type: {
          name: "String"
        }
      },
      inputDirectories: {
        serializedName: "properties.inputDirectories",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InputDirectory"
            }
          }
        }
      },
      outputDirectories: {
        serializedName: "properties.outputDirectories",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OutputDirectory"
            }
          }
        }
      },
      environmentVariables: {
        serializedName: "properties.environmentVariables",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EnvironmentVariable"
            }
          }
        }
      },
      secrets: {
        serializedName: "properties.secrets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EnvironmentVariableWithSecretValue"
            }
          }
        }
      },
      constraints: {
        serializedName: "properties.constraints",
        type: {
          name: "Composite",
          className: "JobPropertiesConstraints"
        }
      },
      creationTime: {
        readOnly: true,
        serializedName: "properties.creationTime",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        nullable: false,
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      provisioningStateTransitionTime: {
        readOnly: true,
        serializedName: "properties.provisioningStateTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      executionState: {
        readOnly: true,
        serializedName: "properties.executionState",
        type: {
          name: "String"
        }
      },
      executionStateTransitionTime: {
        readOnly: true,
        serializedName: "properties.executionStateTransitionTime",
        type: {
          name: "DateTime"
        }
      },
      executionInfo: {
        serializedName: "properties.executionInfo",
        type: {
          name: "Composite",
          className: "JobPropertiesExecutionInfo"
        }
      }
    }
  }
};

export const RemoteLoginInformation: msRest.CompositeMapper = {
  serializedName: "RemoteLoginInformation",
  type: {
    name: "Composite",
    className: "RemoteLoginInformation",
    modelProperties: {
      nodeId: {
        readOnly: true,
        serializedName: "nodeId",
        type: {
          name: "String"
        }
      },
      ipAddress: {
        readOnly: true,
        serializedName: "ipAddress",
        type: {
          name: "String"
        }
      },
      port: {
        readOnly: true,
        serializedName: "port",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const File: msRest.CompositeMapper = {
  serializedName: "File",
  type: {
    name: "Composite",
    className: "File",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      fileType: {
        readOnly: true,
        serializedName: "fileType",
        type: {
          name: "String"
        }
      },
      downloadUrl: {
        readOnly: true,
        serializedName: "downloadUrl",
        type: {
          name: "String"
        }
      },
      lastModified: {
        readOnly: true,
        serializedName: "properties.lastModified",
        type: {
          name: "DateTime"
        }
      },
      contentLength: {
        readOnly: true,
        serializedName: "properties.contentLength",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        readOnly: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        readOnly: true,
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "Operation_display",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        readOnly: true,
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      operation: {
        readOnly: true,
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      resource: {
        readOnly: true,
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        readOnly: true,
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const Workspace: msRest.CompositeMapper = {
  serializedName: "Workspace",
  type: {
    name: "Composite",
    className: "Workspace",
    modelProperties: {
      ...Resource.type.modelProperties,
      creationTime: {
        readOnly: true,
        serializedName: "properties.creationTime",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        nullable: false,
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      provisioningStateTransitionTime: {
        readOnly: true,
        serializedName: "properties.provisioningStateTransitionTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const WorkspaceCreateParameters: msRest.CompositeMapper = {
  serializedName: "WorkspaceCreateParameters",
  type: {
    name: "Composite",
    className: "WorkspaceCreateParameters",
    modelProperties: {
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const WorkspaceUpdateParameters: msRest.CompositeMapper = {
  serializedName: "WorkspaceUpdateParameters",
  type: {
    name: "Composite",
    className: "WorkspaceUpdateParameters",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Experiment: msRest.CompositeMapper = {
  serializedName: "Experiment",
  type: {
    name: "Composite",
    className: "Experiment",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      creationTime: {
        readOnly: true,
        serializedName: "properties.creationTime",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        nullable: false,
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      provisioningStateTransitionTime: {
        readOnly: true,
        serializedName: "properties.provisioningStateTransitionTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const WorkspacesListOptions: msRest.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkspacesListOptions",
    modelProperties: {
      maxResults: {
        defaultValue: 1000,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const WorkspacesListByResourceGroupOptions: msRest.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkspacesListByResourceGroupOptions",
    modelProperties: {
      maxResults: {
        defaultValue: 1000,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ExperimentsListByWorkspaceOptions: msRest.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExperimentsListByWorkspaceOptions",
    modelProperties: {
      maxResults: {
        defaultValue: 1000,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const JobsListByExperimentOptions: msRest.CompositeMapper = {
  type: {
    name: "Composite",
    className: "JobsListByExperimentOptions",
    modelProperties: {
      maxResults: {
        defaultValue: 1000,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const JobsListOutputFilesOptions: msRest.CompositeMapper = {
  type: {
    name: "Composite",
    className: "JobsListOutputFilesOptions",
    modelProperties: {
      outputdirectoryid: {
        required: true,
        type: {
          name: "String"
        }
      },
      directory: {
        defaultValue: '.',
        type: {
          name: "String"
        }
      },
      linkexpiryinminutes: {
        defaultValue: 60,
        type: {
          name: "Number"
        }
      },
      maxResults: {
        defaultValue: 1000,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const FileServersListByWorkspaceOptions: msRest.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FileServersListByWorkspaceOptions",
    modelProperties: {
      maxResults: {
        defaultValue: 1000,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ClustersListByWorkspaceOptions: msRest.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ClustersListByWorkspaceOptions",
    modelProperties: {
      maxResults: {
        defaultValue: 1000,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ListUsagesResult: msRest.CompositeMapper = {
  serializedName: "ListUsagesResult",
  type: {
    name: "Composite",
    className: "ListUsagesResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Usage"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkspaceListResult: msRest.CompositeMapper = {
  serializedName: "WorkspaceListResult",
  type: {
    name: "Composite",
    className: "WorkspaceListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Workspace"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExperimentListResult: msRest.CompositeMapper = {
  serializedName: "ExperimentListResult",
  type: {
    name: "Composite",
    className: "ExperimentListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Experiment"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JobListResult: msRest.CompositeMapper = {
  serializedName: "JobListResult",
  type: {
    name: "Composite",
    className: "JobListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Job"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileListResult: msRest.CompositeMapper = {
  serializedName: "FileListResult",
  type: {
    name: "Composite",
    className: "FileListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "File"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RemoteLoginInformationListResult: msRest.CompositeMapper = {
  serializedName: "RemoteLoginInformationListResult",
  type: {
    name: "Composite",
    className: "RemoteLoginInformationListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RemoteLoginInformation"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileServerListResult: msRest.CompositeMapper = {
  serializedName: "FileServerListResult",
  type: {
    name: "Composite",
    className: "FileServerListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FileServer"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClusterListResult: msRest.CompositeMapper = {
  serializedName: "ClusterListResult",
  type: {
    name: "Composite",
    className: "ClusterListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Cluster"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
