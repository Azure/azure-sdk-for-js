// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  MonitoredSubscriptionProperties,
  MonitoredSubscriptionsListOptionalParams,
  MonitoredSubscriptionsGetOptionalParams,
  MonitoredSubscriptionsGetResponse,
  MonitoredSubscriptionsCreateorUpdateOptionalParams,
  MonitoredSubscriptionsCreateorUpdateResponse,
  MonitoredSubscriptionsUpdateOptionalParams,
  MonitoredSubscriptionsUpdateResponse,
  MonitoredSubscriptionsDeleteOptionalParams,
  MonitoredSubscriptionsDeleteResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a MonitoredSubscriptions. */
export interface MonitoredSubscriptions {
  /**
   * List all subscriptions currently being monitored by the Elastic monitor resource, helping you manage
   * observability.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param monitorName Monitor resource name
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    monitorName: string,
    options?: MonitoredSubscriptionsListOptionalParams,
  ): PagedAsyncIterableIterator<MonitoredSubscriptionProperties>;
  /**
   * Get detailed information about all subscriptions currently being monitored by the Elastic monitor
   * resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param monitorName Monitor resource name
   * @param configurationName The configuration name. Only 'default' value is supported.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    monitorName: string,
    configurationName: string,
    options?: MonitoredSubscriptionsGetOptionalParams,
  ): Promise<MonitoredSubscriptionsGetResponse>;
  /**
   * Add subscriptions to be monitored by the Elastic monitor resource, enabling observability and
   * monitoring.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param monitorName
   * @param configurationName
   * @param options The options parameters.
   */
  beginCreateorUpdate(
    resourceGroupName: string,
    monitorName: string,
    configurationName: string,
    options?: MonitoredSubscriptionsCreateorUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<MonitoredSubscriptionsCreateorUpdateResponse>,
      MonitoredSubscriptionsCreateorUpdateResponse
    >
  >;
  /**
   * Add subscriptions to be monitored by the Elastic monitor resource, enabling observability and
   * monitoring.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param monitorName
   * @param configurationName
   * @param options The options parameters.
   */
  beginCreateorUpdateAndWait(
    resourceGroupName: string,
    monitorName: string,
    configurationName: string,
    options?: MonitoredSubscriptionsCreateorUpdateOptionalParams,
  ): Promise<MonitoredSubscriptionsCreateorUpdateResponse>;
  /**
   * Update subscriptions to be monitored by the Elastic monitor resource, ensuring optimal observability
   * and performance.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param monitorName
   * @param configurationName
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    monitorName: string,
    configurationName: string,
    options?: MonitoredSubscriptionsUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<MonitoredSubscriptionsUpdateResponse>,
      MonitoredSubscriptionsUpdateResponse
    >
  >;
  /**
   * Update subscriptions to be monitored by the Elastic monitor resource, ensuring optimal observability
   * and performance.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param monitorName
   * @param configurationName
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    monitorName: string,
    configurationName: string,
    options?: MonitoredSubscriptionsUpdateOptionalParams,
  ): Promise<MonitoredSubscriptionsUpdateResponse>;
  /**
   * Delete subscriptions being monitored by the Elastic monitor resource, removing their observability
   * and monitoring capabilities.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param monitorName Monitor resource name
   * @param configurationName The configuration name. Only 'default' value is supported.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    monitorName: string,
    configurationName: string,
    options?: MonitoredSubscriptionsDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<MonitoredSubscriptionsDeleteResponse>,
      MonitoredSubscriptionsDeleteResponse
    >
  >;
  /**
   * Delete subscriptions being monitored by the Elastic monitor resource, removing their observability
   * and monitoring capabilities.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param monitorName Monitor resource name
   * @param configurationName The configuration name. Only 'default' value is supported.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    monitorName: string,
    configurationName: string,
    options?: MonitoredSubscriptionsDeleteOptionalParams,
  ): Promise<MonitoredSubscriptionsDeleteResponse>;
}
