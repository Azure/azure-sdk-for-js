// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  OrganizationsGetApiKeyOptionalParams,
  OrganizationsGetApiKeyResponse,
  OrganizationsGetElasticToAzureSubscriptionMappingOptionalParams,
  OrganizationsGetElasticToAzureSubscriptionMappingResponse,
  OrganizationsResubscribeOptionalParams,
  OrganizationsResubscribeResponse,
} from "../models/index.js";

/** Interface representing a Organizations. */
export interface Organizations {
  /**
   * Fetch the User API Key from the internal database, if it was generated and stored during the
   * creation of the Elasticsearch Organization.
   * @param options The options parameters.
   */
  getApiKey(
    options?: OrganizationsGetApiKeyOptionalParams,
  ): Promise<OrganizationsGetApiKeyResponse>;
  /**
   * Retrieve mapping details between the Elastic Organization and Azure Subscription for the logged-in
   * user.
   * @param options The options parameters.
   */
  getElasticToAzureSubscriptionMapping(
    options?: OrganizationsGetElasticToAzureSubscriptionMappingOptionalParams,
  ): Promise<OrganizationsGetElasticToAzureSubscriptionMappingResponse>;
  /**
   * Resubscribe the Elasticsearch Organization.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param monitorName Monitor resource name
   * @param options The options parameters.
   */
  beginResubscribe(
    resourceGroupName: string,
    monitorName: string,
    options?: OrganizationsResubscribeOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<OrganizationsResubscribeResponse>,
      OrganizationsResubscribeResponse
    >
  >;
  /**
   * Resubscribe the Elasticsearch Organization.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param monitorName Monitor resource name
   * @param options The options parameters.
   */
  beginResubscribeAndWait(
    resourceGroupName: string,
    monitorName: string,
    options?: OrganizationsResubscribeOptionalParams,
  ): Promise<OrganizationsResubscribeResponse>;
}
