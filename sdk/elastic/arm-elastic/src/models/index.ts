// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import * as coreClient from "@azure/core-client";

/** Represents a paginated list of operations. */
export interface OperationListResult {
  /** The list of operations. */
  value: OperationResult[];
  /** The URL to get the next set of results, if any. */
  nextLink?: string;
}

/** A Microsoft.Elastic REST API operation. */
export interface OperationResult {
  /** Operation name, i.e., {provider}/{resource}/{operation}. */
  name?: string;
  /** Indicates whether the operation is a data action */
  isDataAction?: boolean;
  /** The object that represents the operation. */
  display?: OperationDisplay;
  /** Origin of the operation */
  origin?: string;
}

/** Represents the display information for an operation. */
export interface OperationDisplay {
  /** The service provider of the operation. */
  provider?: string;
  /** The resource type of the operation. */
  resource?: string;
  /** The name of the operation. */
  operation?: string;
  /** A description of the operation. */
  description?: string;
}

/** RP default error response. */
export interface ResourceProviderDefaultErrorResponse {
  /**
   * Response body of Error
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly error?: ErrorResponseBody;
}

/** Error response body. */
export interface ErrorResponseBody {
  /** Error code. */
  code?: string;
  /** Error message. */
  message?: string;
  /** Error target. */
  target?: string;
  /** Error details. */
  details?: ErrorResponseBody[];
}

/** List of elastic versions available in a region. */
export interface ElasticVersionsListResponse {
  /** The ElasticVersionListFormat items on this page */
  value: ElasticVersionListFormat[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Elastic Version List Format */
export interface ElasticVersionListFormat {
  /** Elastic Version Properties */
  properties?: ElasticVersionListProperties;
}

/** Elastic Version Properties */
export interface ElasticVersionListProperties {
  /** Available elastic version of the given region */
  version?: string;
}

/** The Azure Subscription ID to which the Organization of the logged in user belongs and gets billed into. */
export interface ElasticOrganizationToAzureSubscriptionMappingResponse {
  /** The properties of Azure Subscription ID to which the Organization of the logged in user belongs and gets billed into. */
  properties?: ElasticOrganizationToAzureSubscriptionMappingResponseProperties;
}

/** The properties of Azure Subscription ID to which the Organization of the logged in user belongs and gets billed into. */
export interface ElasticOrganizationToAzureSubscriptionMappingResponseProperties {
  /** The Azure Subscription ID to which the Organization belongs and gets billed into. This is empty for a new user OR a user without an Elastic Organization. */
  billedAzureSubscriptionId?: string;
  /**
   * Marketplace SaaS Info of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly marketplaceSaasInfo?: MarketplaceSaaSInfo;
  /** The Elastic Organization Id. */
  elasticOrganizationId?: string;
  /** The Elastic Organization Name. */
  elasticOrganizationName?: string;
}

/** Marketplace SAAS Info of the resource. */
export interface MarketplaceSaaSInfo {
  /** Marketplace Subscription */
  marketplaceSubscription?: MarketplaceSaaSInfoMarketplaceSubscription;
  /** Marketplace Subscription Details: SAAS Name */
  marketplaceName?: string;
  /** Marketplace Subscription Details: Resource URI */
  marketplaceResourceId?: string;
  /** Marketplace Subscription Details: SaaS Subscription Status */
  marketplaceStatus?: string;
  /** The Azure Subscription ID to which the Marketplace Subscription belongs and gets billed into. */
  billedAzureSubscriptionId?: string;
  /** Flag specifying if the Marketplace status is subscribed or not. */
  subscribed?: boolean;
}

/** Marketplace Subscription */
export interface MarketplaceSaaSInfoMarketplaceSubscription {
  /** Marketplace Subscription Id. This is a GUID-formatted string. */
  id?: string;
  /** Publisher Id of the Marketplace offer. */
  publisherId?: string;
  /** Offer Id of the Marketplace offer, */
  offerId?: string;
}

/** Email Id of the User Organization, of which the API Key must be returned */
export interface UserEmailId {
  /** The User email Id */
  emailId?: string;
}

/** The User Api Key created for the Organization associated with the User Email Id that was passed in the request */
export interface UserApiKeyResponse {
  properties?: UserApiKeyResponseProperties;
}

export interface UserApiKeyResponseProperties {
  /**
   * The User Api Key Generated based on GenerateApiKey flag. This is applicable for non-Portal clients only.
   * This value contains a credential. Consider obscuring before showing to users
   */
  apiKey?: string;
}

/** Response of a list operation. */
export interface ElasticMonitorResourceListResponse {
  /** The ElasticMonitorResource items on this page */
  value: ElasticMonitorResource[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Properties specific to the monitor resource. */
export interface MonitorProperties {
  /**
   * Provisioning state of the monitor resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Flag specifying if the resource monitoring is enabled or disabled. */
  monitoringStatus?: MonitoringStatus;
  /** Elastic cloud properties. */
  elasticProperties?: ElasticProperties;
  /** User information. */
  userInfo?: UserInfo;
  /** Plan details of the monitor resource. */
  planDetails?: PlanDetails;
  /** Version of elastic of the monitor resource */
  version?: string;
  /** State of the Azure Subscription containing the monitor resource */
  subscriptionState?: string;
  /** Status of Azure Subscription where Marketplace SaaS is located. */
  saaSAzureSubscriptionStatus?: string;
  /** Name of the marketing campaign. */
  sourceCampaignName?: string;
  /** A unique identifier associated with the campaign. */
  sourceCampaignId?: string;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly liftrResourceCategory?: LiftrResourceCategories;
  /**
   * The priority of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly liftrResourcePreference?: number;
  /** Flag to determine if User API Key has to be generated and shared. */
  generateApiKey?: boolean;
  /** Hosting type of the monitor resource - either Hosted deployments OR Serverless Projects. */
  hostingType?: HostingType;
  /** Project details of the monitor resource IF it belongs to Serverless offer kind. */
  projectDetails?: ProjectDetails;
}

/** Elastic Resource Properties. */
export interface ElasticProperties {
  /** Details of the user's elastic account. */
  elasticCloudUser?: ElasticCloudUser;
  /** Details of the elastic cloud deployment. */
  elasticCloudDeployment?: ElasticCloudDeployment;
}

/** Details of the user's elastic account. */
export interface ElasticCloudUser {
  /**
   * Email of the Elastic User Account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly emailAddress?: string;
  /**
   * User Id of the elastic account of the User.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Elastic cloud default dashboard sso URL of the Elastic user account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly elasticCloudSsoDefaultUrl?: string;
}

/** Details of the user's elastic deployment associated with the monitor resource. */
export interface ElasticCloudDeployment {
  /**
   * Elastic deployment name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Elastic deployment Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly deploymentId?: string;
  /**
   * Associated Azure subscription Id for the elastic deployment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly azureSubscriptionId?: string;
  /**
   * Region where Deployment at Elastic side took place.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly elasticsearchRegion?: string;
  /**
   * Elasticsearch ingestion endpoint of the Elastic deployment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly elasticsearchServiceUrl?: string;
  /**
   * Kibana endpoint of the Elastic deployment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly kibanaServiceUrl?: string;
  /**
   * Kibana dashboard sso URL of the Elastic deployment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly kibanaSsoUrl?: string;
}

/** User Information to be passed to partners. */
export interface UserInfo {
  /** First name of the user */
  firstName?: string;
  /** Last name of the user */
  lastName?: string;
  /** Company name of the user */
  companyName?: string;
  /** Email of the user used by Elastic for contacting them if needed */
  emailAddress?: string;
  /** Company information of the user to be passed to partners. */
  companyInfo?: CompanyInfo;
}

/** Company information of the user to be passed to partners. */
export interface CompanyInfo {
  /** Domain of the company */
  domain?: string;
  /** Business of the company */
  business?: string;
  /** Number of employees in the company */
  employeesNumber?: string;
  /** State of the company location. */
  state?: string;
  /** Country of the company location. */
  country?: string;
}

/** Plan details of the monitor resource. */
export interface PlanDetails {
  /** Offer ID of the plan */
  offerID?: string;
  /** Publisher ID of the plan */
  publisherID?: string;
  /** Term ID of the plan */
  termID?: string;
  /** Plan ID */
  planID?: string;
  /** Plan Name */
  planName?: string;
}

/** Project details of the monitor resource IF it belongs to Serverless offer kind. */
export interface ProjectDetails {
  /** Project type; ex: Elasticsearch / Observability / Security */
  projectType?: ProjectType;
  /** Configuration type of the Elasticsearch project */
  configurationType?: ConfigurationType;
}

/** Represents the SKU of a resource. */
export interface ResourceSku {
  /** The name of the SKU. */
  name: string;
}

/** Identity properties. */
export interface IdentityProperties {
  /**
   * The identity ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The tenant ID of resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** Managed identity type. */
  type?: ManagedIdentityTypes;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Monitor resource update parameters. */
export interface ElasticMonitorResourceUpdateParameters {
  /** elastic monitor resource tags. */
  tags?: { [propertyName: string]: string };
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** The properties of the request required for creating user on elastic side */
export interface ExternalUserInfo {
  /** Username of the user to be created or updated */
  userName?: string;
  /** Full name of the user to be created or updated */
  fullName?: string;
  /**
   * Password of the user to be created or updated
   * This value contains a credential. Consider obscuring before showing to users
   */
  password?: string;
  /** Email id of the user to be created or updated */
  emailId?: string;
  /** Roles to be assigned for  created or updated user */
  roles?: string[];
}

/** The properties of the response we got from elastic while creating external user */
export interface ExternalUserCreationResponse {
  /**
   * Shows if user is created or updated
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly created?: boolean;
}

/** Marketplace Subscription and Organization details to which resource gets billed into. */
export interface BillingInfoResponse {
  /** Marketplace Subscription details */
  marketplaceSaasInfo?: MarketplaceSaaSInfo;
  /** Partner Billing Entity details: Organization Info */
  partnerBillingEntity?: PartnerBillingEntity;
}

/** Partner Billing details associated with the resource. */
export interface PartnerBillingEntity {
  /** The Elastic Organization Id. */
  id?: string;
  /** The Elastic Organization Name. */
  name?: string;
  /** Link to the elastic organization page */
  partnerEntityUri?: string;
}

/** List of elastic traffic filters in the account */
export interface ElasticTrafficFilterResponse {
  /** List of elastic traffic filters in the account */
  rulesets?: ElasticTrafficFilter[];
}

/** Elastic traffic filter object */
export interface ElasticTrafficFilter {
  /** Id of the elastic filter */
  id?: string;
  /** Name of the elastic filter */
  name?: string;
  /** Description of the elastic filter */
  description?: string;
  /** Region of the elastic filter */
  region?: string;
  /** Type of the elastic filter */
  type?: Type;
  /** IncludeByDefault for the elastic filter */
  includeByDefault?: boolean;
  /** Rules in the elastic filter */
  rules?: ElasticTrafficFilterRule[];
}

/** Elastic traffic filter rule object */
export interface ElasticTrafficFilterRule {
  /** IP of the elastic filter rule */
  source?: string;
  /** Description of the elastic filter rule */
  description?: string;
  /** Guid of Private Endpoint in the elastic filter rule */
  azureEndpointGuid?: string;
  /** Name of the Private Endpoint in the elastic filter rule */
  azureEndpointName?: string;
  /** Id of the elastic filter rule */
  id?: string;
}

/** List of all active elastic deployments. */
export interface ConnectedPartnerResourcesListResponse {
  /** The ConnectedPartnerResourcesListFormat items on this page */
  value: ConnectedPartnerResourcesListFormat[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Connected Partner Resources List Format */
export interface ConnectedPartnerResourcesListFormat {
  /** Connected Partner Resource Properties */
  properties?: ConnectedPartnerResourceProperties;
}

/** Connected Partner Resource Properties */
export interface ConnectedPartnerResourceProperties {
  /** Elastic resource name */
  partnerDeploymentName?: string;
  /** URL of the resource in Elastic cloud. */
  partnerDeploymentUri?: string;
  /** The azure resource Id of the resource. */
  azureResourceId?: string;
  /** The location of the resource. */
  location?: string;
  /** The hosting type of the resource. */
  type?: string;
}

/** The properties of deployment in Elastic cloud corresponding to the Elastic monitor resource. */
export interface DeploymentInfoResponse {
  /**
   * The Elastic deployment status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: ElasticDeploymentStatus;
  /**
   * Version of the elasticsearch in Elastic cloud deployment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly version?: string;
  /**
   * RAM capacity of the elasticsearch in Elastic cloud deployment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly memoryCapacity?: string;
  /**
   * Disk capacity of the elasticsearch in Elastic cloud deployment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskCapacity?: string;
  /**
   * Elasticsearch endpoint in Elastic cloud deployment. This is either the aliased_endpoint if available, or the service_url otherwise.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly elasticsearchEndPoint?: string;
  /**
   * Deployment URL of the elasticsearch in Elastic cloud deployment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly deploymentUrl?: string;
  /**
   * Marketplace SaaS Info of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly marketplaceSaasInfo?: MarketplaceSaaSInfo;
  /**
   * Project Type - Applicable for Serverless only.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly projectType?: string;
  /**
   * ConfigurationType Type - Applicable for Serverless only.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly configurationType?: string;
}

/** Response of a list operation. */
export interface MonitoredResourceListResponse {
  /** The MonitoredResource items on this page */
  value: MonitoredResource[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The properties of a resource currently being monitored by the Elastic monitor resource. */
export interface MonitoredResource {
  /** The ARM id of the resource. */
  id?: string;
  /** Flag indicating the status of the resource for sending logs operation to Elastic. */
  sendingLogs?: SendingLogs;
  /** Reason for why the resource is sending logs (or why it is not sending). */
  reasonForLogsStatus?: string;
}

/** Stack Versions that this version can upgrade to */
export interface UpgradableVersionsList {
  /** Current version of the elastic monitor */
  currentVersion?: string;
  /** Stack Versions that this version can upgrade to */
  upgradableVersions?: string[];
}

/** Response of a list operation. */
export interface VMHostListResponse {
  /** The VMResources items on this page */
  value: VMResources[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The vm resource properties that is currently being monitored by the Elastic monitor resource. */
export interface VMResources {
  /** The ARM id of the VM resource. */
  vmResourceId?: string;
}

/** Paged collection of MonitoredSubscriptionProperties items */
export interface MonitoredSubscriptionPropertiesList {
  /** The MonitoredSubscriptionProperties items on this page */
  value: MonitoredSubscriptionProperties[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The request to update subscriptions needed to be monitored by the Elastic monitor resource. */
export interface SubscriptionList {
  /** The operation for the patch on the resource. */
  operation?: Operation;
  /** List of subscriptions and the state of the monitoring. */
  monitoredSubscriptionList?: MonitoredSubscription[];
  /**
   * Provisioning State of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** The list of subscriptions and it's monitoring status by current Elastic monitor. */
export interface MonitoredSubscription {
  /** The subscriptionId to be monitored. */
  subscriptionId: string;
  /** The state of monitoring. */
  status?: Status;
  /** The reason of not monitoring the subscription. */
  error?: string;
  /** Definition of the properties for a TagRules resource. */
  tagRules?: MonitoringTagRulesProperties;
}

/** Definition of the properties for a TagRules resource. */
export interface MonitoringTagRulesProperties {
  /**
   * Provisioning state of the monitoring tag rules.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Rules for sending logs. */
  logRules?: LogRules;
}

/** Set of rules for sending logs for the Monitor resource. */
export interface LogRules {
  /** Flag specifying if AAD logs should be sent for the Monitor resource. */
  sendAadLogs?: boolean;
  /** Flag specifying if subscription logs should be sent for the Monitor resource. */
  sendSubscriptionLogs?: boolean;
  /** Flag specifying if activity logs from Azure resources should be sent for the Monitor resource. */
  sendActivityLogs?: boolean;
  /** List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags. */
  filteringTags?: FilteringTag[];
}

/** The definition of a filtering tag. Filtering tags are used for capturing resources and include/exclude them from being monitored. */
export interface FilteringTag {
  /** The name (also known as the key) of the tag. */
  name?: string;
  /** The value of the tag. */
  value?: string;
  /** Valid actions for a filtering tag. */
  action?: TagAction;
}

/** Response of a list operation. */
export interface OpenAIIntegrationRPModelListResponse {
  /** The OpenAIIntegrationRPModel items on this page */
  value: OpenAIIntegrationRPModel[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Open AI Integration details. */
export interface OpenAIIntegrationProperties {
  /** The resource name of Open AI resource */
  openAIResourceId?: string;
  /** The API endpoint for Open AI resource */
  openAIResourceEndpoint?: string;
  /** The connector id of Open AI resource */
  openAIConnectorId?: string;
  /**
   * Value of API key for Open AI resource
   * This value contains a credential. Consider obscuring before showing to users
   */
  key?: string;
  /**
   * Last Update Timestamp for key updation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastRefreshAt?: Date;
}

/** Status of the OpenAI Integration */
export interface OpenAIIntegrationStatusResponse {
  /** Status of the OpenAI Integration */
  properties?: OpenAIIntegrationStatusResponseProperties;
}

/** Status of the OpenAI Integration */
export interface OpenAIIntegrationStatusResponseProperties {
  /** Status of the OpenAI Integration */
  status?: string;
}

/** Resubscribe Properties */
export interface ResubscribeProperties {
  /** Newly selected plan Id to create the new Marketplace subscription for Resubscribe */
  planId?: string;
  /** Newly selected term to create the new Marketplace subscription for Resubscribe */
  term?: string;
  /** Newly selected Azure Subscription Id in which the new Marketplace subscription will be created for Resubscribe */
  subscriptionId?: string;
  /** Newly selected Azure resource group in which the new Marketplace subscription will be created for Resubscribe */
  resourceGroup?: string;
  /** Organization Id of the Elastic Organization that needs to be resubscribed */
  organizationId?: string;
}

/** Response of a list operation. */
export interface MonitoringTagRulesListResponse {
  /** The MonitoringTagRules items on this page */
  value: MonitoringTagRules[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Upgrade elastic monitor version */
export interface ElasticMonitorUpgrade {
  /** Version to which the elastic monitor should be upgraded to */
  version?: string;
}

/** Update VM resource collection. */
export interface VMCollectionUpdate {
  /** ARM id of the VM resource. */
  vmResourceId?: string;
  /** Operation to be performed for given VM. */
  operationName?: OperationName;
}

/** The vm ingestion details to install an agent. */
export interface VMIngestionDetailsResponse {
  /** The cloudId of given Elastic monitor resource. */
  cloudId?: string;
  /**
   * Ingestion details to install agent on given VM.
   * This value contains a credential. Consider obscuring before showing to users
   */
  ingestionKey?: string;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** Monitor resource. */
export interface ElasticMonitorResource extends TrackedResource {
  /** Properties of the monitor resource. */
  properties?: MonitorProperties;
  /** The kind of the Elastic resource - observability, security, search etc. */
  kind?: string;
  /** SKU of the monitor resource. */
  sku?: ResourceSku;
  /** Identity properties of the monitor resource. */
  identity?: IdentityProperties;
}

/** The request to update subscriptions needed to be monitored by the Elastic monitor resource. */
export interface MonitoredSubscriptionProperties extends ProxyResource {
  /** The request to update subscriptions needed to be monitored by the Elastic monitor resource. */
  properties?: SubscriptionList;
}

/** Capture properties of Open AI resource Integration. */
export interface OpenAIIntegrationRPModel extends ProxyResource {
  /** Open AI Integration details. */
  properties?: OpenAIIntegrationProperties;
}

/** Capture logs and metrics of Azure resources based on ARM tags. */
export interface MonitoringTagRules extends ProxyResource {
  /** Properties of the monitoring tag rules. */
  properties?: MonitoringTagRulesProperties;
}

/** Defines headers for Organizations_resubscribe operation. */
export interface OrganizationsResubscribeHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for Monitors_create operation. */
export interface MonitorsCreateHeaders {
  /** A link to the status monitor */
  azureAsyncOperation?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for Monitors_update operation. */
export interface MonitorsUpdateHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for Monitors_delete operation. */
export interface MonitorsDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for AssociateTrafficFilter_associate operation. */
export interface AssociateTrafficFilterAssociateHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for CreateAndAssociateIPFilter_create operation. */
export interface CreateAndAssociateIPFilterCreateHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for CreateAndAssociatePLFilter_create operation. */
export interface CreateAndAssociatePLFilterCreateHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for DetachTrafficFilter_update operation. */
export interface DetachTrafficFilterUpdateHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for MonitoredSubscriptions_createorUpdate operation. */
export interface MonitoredSubscriptionsCreateorUpdateHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for MonitoredSubscriptions_update operation. */
export interface MonitoredSubscriptionsUpdateHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for MonitoredSubscriptions_delete operation. */
export interface MonitoredSubscriptionsDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for TagRules_delete operation. */
export interface TagRulesDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for Monitor_upgrade operation. */
export interface MonitorUpgradeHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Accepted */
  Accepted = "Accepted",
  /** Creating */
  Creating = "Creating",
  /** Updating */
  Updating = "Updating",
  /** Deleting */
  Deleting = "Deleting",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
  /** Deleted */
  Deleted = "Deleted",
  /** NotSpecified */
  NotSpecified = "NotSpecified",
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Accepted** \
 * **Creating** \
 * **Updating** \
 * **Deleting** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Deleted** \
 * **NotSpecified**
 */
export type ProvisioningState = string;

/** Known values of {@link MonitoringStatus} that the service accepts. */
export enum KnownMonitoringStatus {
  /** Enabled */
  Enabled = "Enabled",
  /** Disabled */
  Disabled = "Disabled",
}

/**
 * Defines values for MonitoringStatus. \
 * {@link KnownMonitoringStatus} can be used interchangeably with MonitoringStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export type MonitoringStatus = string;

/** Known values of {@link LiftrResourceCategories} that the service accepts. */
export enum KnownLiftrResourceCategories {
  /** Unknown */
  Unknown = "Unknown",
  /** MonitorLogs */
  MonitorLogs = "MonitorLogs",
}

/**
 * Defines values for LiftrResourceCategories. \
 * {@link KnownLiftrResourceCategories} can be used interchangeably with LiftrResourceCategories,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **MonitorLogs**
 */
export type LiftrResourceCategories = string;

/** Known values of {@link HostingType} that the service accepts. */
export enum KnownHostingType {
  /** Hosted */
  Hosted = "Hosted",
  /** Serverless */
  Serverless = "Serverless",
}

/**
 * Defines values for HostingType. \
 * {@link KnownHostingType} can be used interchangeably with HostingType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Hosted** \
 * **Serverless**
 */
export type HostingType = string;

/** Known values of {@link ProjectType} that the service accepts. */
export enum KnownProjectType {
  /** Elasticsearch */
  Elasticsearch = "Elasticsearch",
  /** Observability */
  Observability = "Observability",
  /** Security */
  Security = "Security",
  /** NotApplicable */
  NotApplicable = "NotApplicable",
}

/**
 * Defines values for ProjectType. \
 * {@link KnownProjectType} can be used interchangeably with ProjectType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Elasticsearch** \
 * **Observability** \
 * **Security** \
 * **NotApplicable**
 */
export type ProjectType = string;

/** Known values of {@link ConfigurationType} that the service accepts. */
export enum KnownConfigurationType {
  /** GeneralPurpose */
  GeneralPurpose = "GeneralPurpose",
  /** Vector */
  Vector = "Vector",
  /** TimeSeries */
  TimeSeries = "TimeSeries",
  /** NotApplicable */
  NotApplicable = "NotApplicable",
}

/**
 * Defines values for ConfigurationType. \
 * {@link KnownConfigurationType} can be used interchangeably with ConfigurationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **GeneralPurpose** \
 * **Vector** \
 * **TimeSeries** \
 * **NotApplicable**
 */
export type ConfigurationType = string;

/** Known values of {@link ManagedIdentityTypes} that the service accepts. */
export enum KnownManagedIdentityTypes {
  /** SystemAssigned */
  SystemAssigned = "SystemAssigned",
}

/**
 * Defines values for ManagedIdentityTypes. \
 * {@link KnownManagedIdentityTypes} can be used interchangeably with ManagedIdentityTypes,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SystemAssigned**
 */
export type ManagedIdentityTypes = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key",
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link Type} that the service accepts. */
export enum KnownType {
  /** Ip */
  Ip = "ip",
  /** AzurePrivateEndpoint */
  AzurePrivateEndpoint = "azure_private_endpoint",
}

/**
 * Defines values for Type. \
 * {@link KnownType} can be used interchangeably with Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ip** \
 * **azure_private_endpoint**
 */
export type Type = string;

/** Known values of {@link ElasticDeploymentStatus} that the service accepts. */
export enum KnownElasticDeploymentStatus {
  /** Healthy */
  Healthy = "Healthy",
  /** Unhealthy */
  Unhealthy = "Unhealthy",
}

/**
 * Defines values for ElasticDeploymentStatus. \
 * {@link KnownElasticDeploymentStatus} can be used interchangeably with ElasticDeploymentStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Healthy** \
 * **Unhealthy**
 */
export type ElasticDeploymentStatus = string;

/** Known values of {@link SendingLogs} that the service accepts. */
export enum KnownSendingLogs {
  /** True */
  True = "True",
  /** False */
  False = "False",
}

/**
 * Defines values for SendingLogs. \
 * {@link KnownSendingLogs} can be used interchangeably with SendingLogs,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **True** \
 * **False**
 */
export type SendingLogs = string;

/** Known values of {@link Operation} that the service accepts. */
export enum KnownOperation {
  /** AddBegin */
  AddBegin = "AddBegin",
  /** AddComplete */
  AddComplete = "AddComplete",
  /** DeleteBegin */
  DeleteBegin = "DeleteBegin",
  /** DeleteComplete */
  DeleteComplete = "DeleteComplete",
  /** Active */
  Active = "Active",
}

/**
 * Defines values for Operation. \
 * {@link KnownOperation} can be used interchangeably with Operation,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AddBegin** \
 * **AddComplete** \
 * **DeleteBegin** \
 * **DeleteComplete** \
 * **Active**
 */
export type Operation = string;

/** Known values of {@link Status} that the service accepts. */
export enum KnownStatus {
  /** InProgress */
  InProgress = "InProgress",
  /** Active */
  Active = "Active",
  /** Failed */
  Failed = "Failed",
  /** Deleting */
  Deleting = "Deleting",
}

/**
 * Defines values for Status. \
 * {@link KnownStatus} can be used interchangeably with Status,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **InProgress** \
 * **Active** \
 * **Failed** \
 * **Deleting**
 */
export type Status = string;

/** Known values of {@link TagAction} that the service accepts. */
export enum KnownTagAction {
  /** Include */
  Include = "Include",
  /** Exclude */
  Exclude = "Exclude",
}

/**
 * Defines values for TagAction. \
 * {@link KnownTagAction} can be used interchangeably with TagAction,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Include** \
 * **Exclude**
 */
export type TagAction = string;

/** Known values of {@link OperationName} that the service accepts. */
export enum KnownOperationName {
  /** Add */
  Add = "Add",
  /** Delete */
  Delete = "Delete",
}

/**
 * Defines values for OperationName. \
 * {@link KnownOperationName} can be used interchangeably with OperationName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Add** \
 * **Delete**
 */
export type OperationName = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface ElasticVersionsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ElasticVersionsListOperationResponse = ElasticVersionsListResponse;

/** Optional parameters. */
export interface ElasticVersionsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ElasticVersionsListNextResponse = ElasticVersionsListResponse;

/** Optional parameters. */
export interface OrganizationsGetElasticToAzureSubscriptionMappingOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getElasticToAzureSubscriptionMapping operation. */
export type OrganizationsGetElasticToAzureSubscriptionMappingResponse =
  ElasticOrganizationToAzureSubscriptionMappingResponse;

/** Optional parameters. */
export interface OrganizationsGetApiKeyOptionalParams
  extends coreClient.OperationOptions {
  /** The request body */
  body?: UserEmailId;
}

/** Contains response data for the getApiKey operation. */
export type OrganizationsGetApiKeyResponse = UserApiKeyResponse;

/** Optional parameters. */
export interface OrganizationsResubscribeOptionalParams
  extends coreClient.OperationOptions {
  /** Resubscribe Properties */
  body?: ResubscribeProperties;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the resubscribe operation. */
export type OrganizationsResubscribeResponse = ElasticMonitorResource;

/** Optional parameters. */
export interface MonitorsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type MonitorsListResponse = ElasticMonitorResourceListResponse;

/** Optional parameters. */
export interface MonitorsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type MonitorsListByResourceGroupResponse =
  ElasticMonitorResourceListResponse;

/** Optional parameters. */
export interface MonitorsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type MonitorsGetResponse = ElasticMonitorResource;

/** Optional parameters. */
export interface MonitorsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Elastic monitor resource model */
  body?: ElasticMonitorResource;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type MonitorsCreateResponse = ElasticMonitorResource;

/** Optional parameters. */
export interface MonitorsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Elastic resource model update parameters. */
  body?: ElasticMonitorResourceUpdateParameters;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type MonitorsUpdateResponse = ElasticMonitorResource;

/** Optional parameters. */
export interface MonitorsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface MonitorsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type MonitorsListNextResponse = ElasticMonitorResourceListResponse;

/** Optional parameters. */
export interface MonitorsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type MonitorsListByResourceGroupNextResponse =
  ElasticMonitorResourceListResponse;

/** Optional parameters. */
export interface AssociateTrafficFilterAssociateOptionalParams
  extends coreClient.OperationOptions {
  /** Ruleset Id of the filter */
  rulesetId?: string;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the associate operation. */
export type AssociateTrafficFilterAssociateResponse =
  AssociateTrafficFilterAssociateHeaders;

/** Optional parameters. */
export interface CreateAndAssociateIPFilterCreateOptionalParams
  extends coreClient.OperationOptions {
  /** List of ips */
  ips?: string;
  /** Name of the traffic filter */
  name?: string;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface CreateAndAssociatePLFilterCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Name of the traffic filter */
  name?: string;
  /** Guid of the private endpoint */
  privateEndpointGuid?: string;
  /** Name of the private endpoint */
  privateEndpointName?: string;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ExternalUserCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Elastic External User Creation Parameters */
  body?: ExternalUserInfo;
}

/** Contains response data for the createOrUpdate operation. */
export type ExternalUserCreateOrUpdateResponse = ExternalUserCreationResponse;

/** Optional parameters. */
export interface TrafficFiltersDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Ruleset Id of the filter */
  rulesetId?: string;
}

/** Optional parameters. */
export interface DetachAndDeleteTrafficFilterDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Ruleset Id of the filter */
  rulesetId?: string;
}

/** Optional parameters. */
export interface DetachTrafficFilterUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Ruleset Id of the filter */
  rulesetId?: string;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type DetachTrafficFilterUpdateResponse =
  DetachTrafficFilterUpdateHeaders;

/** Optional parameters. */
export interface BillingInfoGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type BillingInfoGetResponse = BillingInfoResponse;

/** Optional parameters. */
export interface AllTrafficFiltersListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type AllTrafficFiltersListResponse = ElasticTrafficFilterResponse;

/** Optional parameters. */
export interface ListAssociatedTrafficFiltersListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ListAssociatedTrafficFiltersListResponse =
  ElasticTrafficFilterResponse;

/** Optional parameters. */
export interface ConnectedPartnerResourcesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ConnectedPartnerResourcesListOperationResponse =
  ConnectedPartnerResourcesListResponse;

/** Optional parameters. */
export interface ConnectedPartnerResourcesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ConnectedPartnerResourcesListNextResponse =
  ConnectedPartnerResourcesListResponse;

/** Optional parameters. */
export interface DeploymentInfoListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type DeploymentInfoListResponse = DeploymentInfoResponse;

/** Optional parameters. */
export interface MonitoredResourcesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type MonitoredResourcesListResponse = MonitoredResourceListResponse;

/** Optional parameters. */
export interface MonitoredResourcesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type MonitoredResourcesListNextResponse = MonitoredResourceListResponse;

/** Optional parameters. */
export interface UpgradableVersionsDetailsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the details operation. */
export type UpgradableVersionsDetailsResponse = UpgradableVersionsList;

/** Optional parameters. */
export interface VMHostListOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type VMHostListOperationResponse = VMHostListResponse;

/** Optional parameters. */
export interface VMHostListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type VMHostListNextResponse = VMHostListResponse;

/** Optional parameters. */
export interface MonitoredSubscriptionsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type MonitoredSubscriptionsListResponse =
  MonitoredSubscriptionPropertiesList;

/** Optional parameters. */
export interface MonitoredSubscriptionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type MonitoredSubscriptionsGetResponse = MonitoredSubscriptionProperties;

/** Optional parameters. */
export interface MonitoredSubscriptionsCreateorUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** The request to update subscriptions needed to be monitored by the Elastic monitor resource. */
  body?: MonitoredSubscriptionProperties;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createorUpdate operation. */
export type MonitoredSubscriptionsCreateorUpdateResponse =
  MonitoredSubscriptionProperties;

/** Optional parameters. */
export interface MonitoredSubscriptionsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** The request to update subscriptions needed to be monitored by the Elastic monitor resource. */
  body?: MonitoredSubscriptionProperties;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type MonitoredSubscriptionsUpdateResponse =
  MonitoredSubscriptionProperties;

/** Optional parameters. */
export interface MonitoredSubscriptionsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type MonitoredSubscriptionsDeleteResponse =
  MonitoredSubscriptionsDeleteHeaders;

/** Optional parameters. */
export interface MonitoredSubscriptionsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type MonitoredSubscriptionsListNextResponse =
  MonitoredSubscriptionPropertiesList;

/** Optional parameters. */
export interface OpenAIListOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OpenAIListResponse = OpenAIIntegrationRPModelListResponse;

/** Optional parameters. */
export interface OpenAIGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type OpenAIGetResponse = OpenAIIntegrationRPModel;

/** Optional parameters. */
export interface OpenAICreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Capture properties of Open AI resource Integration. */
  body?: OpenAIIntegrationRPModel;
}

/** Contains response data for the createOrUpdate operation. */
export type OpenAICreateOrUpdateResponse = OpenAIIntegrationRPModel;

/** Optional parameters. */
export interface OpenAIDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface OpenAIGetStatusOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getStatus operation. */
export type OpenAIGetStatusResponse = OpenAIIntegrationStatusResponse;

/** Optional parameters. */
export interface OpenAIListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OpenAIListNextResponse = OpenAIIntegrationRPModelListResponse;

/** Optional parameters. */
export interface TagRulesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type TagRulesListResponse = MonitoringTagRulesListResponse;

/** Optional parameters. */
export interface TagRulesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type TagRulesGetResponse = MonitoringTagRules;

/** Optional parameters. */
export interface TagRulesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** request body of MonitoringTagRules */
  body?: MonitoringTagRules;
}

/** Contains response data for the createOrUpdate operation. */
export type TagRulesCreateOrUpdateResponse = MonitoringTagRules;

/** Optional parameters. */
export interface TagRulesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface TagRulesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type TagRulesListNextResponse = MonitoringTagRulesListResponse;

/** Optional parameters. */
export interface MonitorUpgradeOptionalParams
  extends coreClient.OperationOptions {
  /** Elastic Monitor Upgrade Parameters */
  body?: ElasticMonitorUpgrade;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the upgrade operation. */
export type MonitorUpgradeResponse = MonitorUpgradeHeaders;

/** Optional parameters. */
export interface VMCollectionUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** VM resource Id */
  body?: VMCollectionUpdate;
}

/** Optional parameters. */
export interface VMIngestionDetailsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the details operation. */
export type VMIngestionDetailsOperationResponse = VMIngestionDetailsResponse;

/** Optional parameters. */
export interface MicrosoftElasticOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
