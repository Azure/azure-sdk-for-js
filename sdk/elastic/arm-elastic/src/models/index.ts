/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Error response body.
 * @summary ErrorResponseBody
 */
export interface ErrorResponseBody {
  /**
   * Error code.
   */
  code?: string;
  /**
   * Error message.
   */
  message?: string;
  /**
   * Error target.
   */
  target?: string;
  /**
   * Error details.
   */
  details?: ErrorResponseBody[];
}

/**
 * RP default error response.
 */
export interface ResourceProviderDefaultErrorResponse {
  /**
   * Response body of Error
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: ErrorResponseBody;
}

/**
 * The object that represents the operation.
 */
export interface OperationDisplay {
  /**
   * Service provider, i.e., Microsoft.Elastic.
   */
  provider?: string;
  /**
   * Type on which the operation is performed, e.g., 'monitors'.
   */
  resource?: string;
  /**
   * Operation type, e.g., read, write, delete, etc.
   */
  operation?: string;
  /**
   * Description of the operation, e.g., 'Write monitors'.
   */
  description?: string;
}

/**
 * A Microsoft.Elastic REST API operation.
 */
export interface OperationResult {
  /**
   * Operation name, i.e., {provider}/{resource}/{operation}.
   */
  name?: string;
  /**
   * Indicates whether the operation is a data action
   */
  isDataAction?: boolean;
  /**
   * The object that represents the operation.
   */
  display?: OperationDisplay;
  /**
   * Origin of the operation
   */
  origin?: string;
}

/**
 * Microsoft.Elastic SKU.
 */
export interface ResourceSku {
  /**
   * Name of the SKU.
   */
  name: string;
}

/**
 * Details of the user's elastic account.
 */
export interface ElasticCloudUser {
  /**
   * Email of the Elastic User Account.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly emailAddress?: string;
  /**
   * User Id of the elastic account of the User.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Elastic cloud default dashboard sso URL of the Elastic user account.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly elasticCloudSsoDefaultUrl?: string;
}

/**
 * Details of the user's elastic deployment associated with the monitor resource.
 */
export interface ElasticCloudDeployment {
  /**
   * Elastic deployment name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Elastic deployment Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly deploymentId?: string;
  /**
   * Associated Azure subscription Id for the elastic deployment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly azureSubscriptionId?: string;
  /**
   * Region where Deployment at Elastic side took place.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly elasticsearchRegion?: string;
  /**
   * Elasticsearch ingestion endpoint of the Elastic deployment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly elasticsearchServiceUrl?: string;
  /**
   * Kibana endpoint of the Elastic deployment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kibanaServiceUrl?: string;
  /**
   * Kibana dashboard sso URL of the Elastic deployment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kibanaSsoUrl?: string;
}

/**
 * Elastic Resource Properties.
 */
export interface ElasticProperties {
  /**
   * Details of the user's elastic account.
   */
  elasticCloudUser?: ElasticCloudUser;
  /**
   * Details of the elastic cloud deployment.
   */
  elasticCloudDeployment?: ElasticCloudDeployment;
}

/**
 * Company information of the user to be passed to partners.
 */
export interface CompanyInfo {
  /**
   * Domain of the company
   */
  domain?: string;
  /**
   * Business of the company
   */
  business?: string;
  /**
   * Number of employees in the company
   */
  employeesNumber?: string;
  /**
   * State of the company location.
   */
  state?: string;
  /**
   * Country of the company location.
   */
  country?: string;
}

/**
 * User Information to be passed to partners.
 */
export interface UserInfo {
  /**
   * First name of the user
   */
  firstName?: string;
  /**
   * Last name of the user
   */
  lastName?: string;
  /**
   * Company name of the user
   */
  companyName?: string;
  /**
   * Email of the user used by Elastic for contacting them if needed
   */
  emailAddress?: string;
  /**
   * Company information of the user to be passed to partners.
   */
  companyInfo?: CompanyInfo;
}

/**
 * Properties specific to the monitor resource.
 */
export interface MonitorProperties {
  /**
   * Provisioning state of the monitor resource. Possible values include: 'Accepted', 'Creating',
   * 'Updating', 'Deleting', 'Succeeded', 'Failed', 'Canceled', 'Deleted', 'NotSpecified'
   */
  provisioningState?: ProvisioningState;
  /**
   * Flag specifying if the resource monitoring is enabled or disabled. Possible values include:
   * 'Enabled', 'Disabled'
   */
  monitoringStatus?: MonitoringStatus;
  /**
   * Elastic cloud properties.
   */
  elasticProperties?: ElasticProperties;
  /**
   * User information.
   */
  userInfo?: UserInfo;
  /**
   * Possible values include: 'Unknown', 'MonitorLogs'
   */
  liftrResourceCategory?: LiftrResourceCategories;
  /**
   * The priority of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly liftrResourcePreference?: number;
}

/**
 * Identity properties.
 */
export interface IdentityProperties {
  /**
   * The identity ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The tenant ID of resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
  /**
   * Managed identity type. Possible values include: 'SystemAssigned'
   */
  type?: ManagedIdentityTypes;
}

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
export interface SystemData {
  /**
   * The identity that created the resource.
   */
  createdBy?: string;
  /**
   * The type of identity that created the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  createdByType?: CreatedByType;
  /**
   * The timestamp of resource creation (UTC).
   */
  createdAt?: Date;
  /**
   * The identity that last modified the resource.
   */
  lastModifiedBy?: string;
  /**
   * The type of identity that last modified the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  lastModifiedByType?: CreatedByType;
  /**
   * The timestamp of resource last modification (UTC)
   */
  lastModifiedAt?: Date;
}

/**
 * Monitor resource.
 */
export interface ElasticMonitorResource extends BaseResource {
  /**
   * ARM id of the monitor resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the monitor resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the monitor resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * SKU of the monitor resource.
   */
  sku?: ResourceSku;
  /**
   * Properties of the monitor resource.
   */
  properties?: MonitorProperties;
  /**
   * Identity properties of the monitor resource.
   */
  identity?: IdentityProperties;
  /**
   * The tags of the monitor resource.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The location of the monitor resource
   */
  location: string;
  /**
   * The system metadata relating to this resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
}

/**
 * Monitor resource update parameters.
 */
export interface ElasticMonitorResourceUpdateParameters {
  /**
   * elastic monitor resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * The properties of a resource currently being monitored by the Elastic monitor resource.
 */
export interface MonitoredResource {
  /**
   * The ARM id of the resource.
   */
  id?: string;
  /**
   * Flag indicating the status of the resource for sending logs operation to Elastic. Possible
   * values include: 'True', 'False'
   */
  sendingLogs?: SendingLogs;
  /**
   * Reason for why the resource is sending logs (or why it is not sending).
   */
  reasonForLogsStatus?: string;
}

/**
 * The definition of a filtering tag. Filtering tags are used for capturing resources and
 * include/exclude them from being monitored.
 */
export interface FilteringTag {
  /**
   * The name (also known as the key) of the tag.
   */
  name?: string;
  /**
   * The value of the tag.
   */
  value?: string;
  /**
   * Valid actions for a filtering tag. Possible values include: 'Include', 'Exclude'
   */
  action?: TagAction;
}

/**
 * Set of rules for sending logs for the Monitor resource.
 */
export interface LogRules {
  /**
   * Flag specifying if AAD logs should be sent for the Monitor resource.
   */
  sendAadLogs?: boolean;
  /**
   * Flag specifying if subscription logs should be sent for the Monitor resource.
   */
  sendSubscriptionLogs?: boolean;
  /**
   * Flag specifying if activity logs from Azure resources should be sent for the Monitor resource.
   */
  sendActivityLogs?: boolean;
  /**
   * List of filtering tags to be used for capturing logs. This only takes effect if
   * SendActivityLogs flag is enabled. If empty, all resources will be captured. If only Exclude
   * action is specified, the rules will apply to the list of all available resources. If Include
   * actions are specified, the rules will only include resources with the associated tags.
   */
  filteringTags?: FilteringTag[];
}

/**
 * Definition of the properties for a TagRules resource.
 */
export interface MonitoringTagRulesProperties {
  /**
   * Provisioning state of the monitoring tag rules. Possible values include: 'Accepted',
   * 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Failed', 'Canceled', 'Deleted',
   * 'NotSpecified'
   */
  provisioningState?: ProvisioningState;
  /**
   * Rules for sending logs.
   */
  logRules?: LogRules;
}

/**
 * Capture logs and metrics of Azure resources based on ARM tags.
 */
export interface MonitoringTagRules extends BaseResource {
  /**
   * Name of the rule set.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The id of the rule set.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The type of the rule set.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Properties of the monitoring tag rules.
   */
  properties?: MonitoringTagRulesProperties;
  /**
   * The system metadata relating to this resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
}

/**
 * The properties of deployment in Elastic cloud corresponding to the Elastic monitor resource.
 */
export interface DeploymentInfoResponse {
  /**
   * The Elastic deployment status. Possible values include: 'Healthy', 'Unhealthy'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: ElasticDeploymentStatus;
  /**
   * Version of the elasticsearch in Elastic cloud deployment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly version?: string;
  /**
   * RAM capacity of the elasticsearch in Elastic cloud deployment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly memoryCapacity?: string;
  /**
   * Disk capacity of the elasticsearch in Elastic cloud deployment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly diskCapacity?: string;
}

/**
 * Optional Parameters.
 */
export interface MonitorsCreateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Elastic monitor resource model
   */
  body?: ElasticMonitorResource;
}

/**
 * Optional Parameters.
 */
export interface MonitorsUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * elastic monitor resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Optional Parameters.
 */
export interface MonitorsBeginCreateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Elastic monitor resource model
   */
  body?: ElasticMonitorResource;
}

/**
 * Optional Parameters.
 */
export interface TagRulesCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Properties of the monitoring tag rules.
   */
  properties?: MonitoringTagRulesProperties;
}

/**
 * An interface representing MicrosoftElasticOptions.
 */
export interface MicrosoftElasticOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * Result of GET request to list the Microsoft.Elastic operations.
 * @extends Array<OperationResult>
 */
export interface OperationListResult extends Array<OperationResult> {
  /**
   * URL to get the next set of operation list results if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Response of a list operation.
 * @extends Array<ElasticMonitorResource>
 */
export interface ElasticMonitorResourceListResponse extends Array<ElasticMonitorResource> {
  /**
   * Link to the next set of results, if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Response of a list operation.
 * @extends Array<MonitoredResource>
 */
export interface MonitoredResourceListResponse extends Array<MonitoredResource> {
  /**
   * Link to the next set of results, if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Response of a list operation.
 * @extends Array<MonitoringTagRules>
 */
export interface MonitoringTagRulesListResponse extends Array<MonitoringTagRules> {
  /**
   * Link to the next set of results, if any.
   */
  nextLink?: string;
}

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Accepted', 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Failed',
 * 'Canceled', 'Deleted', 'NotSpecified'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState = 'Accepted' | 'Creating' | 'Updating' | 'Deleting' | 'Succeeded' | 'Failed' | 'Canceled' | 'Deleted' | 'NotSpecified';

/**
 * Defines values for MonitoringStatus.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type MonitoringStatus = 'Enabled' | 'Disabled';

/**
 * Defines values for LiftrResourceCategories.
 * Possible values include: 'Unknown', 'MonitorLogs'
 * @readonly
 * @enum {string}
 */
export type LiftrResourceCategories = 'Unknown' | 'MonitorLogs';

/**
 * Defines values for ManagedIdentityTypes.
 * Possible values include: 'SystemAssigned'
 * @readonly
 * @enum {string}
 */
export type ManagedIdentityTypes = 'SystemAssigned';

/**
 * Defines values for CreatedByType.
 * Possible values include: 'User', 'Application', 'ManagedIdentity', 'Key'
 * @readonly
 * @enum {string}
 */
export type CreatedByType = 'User' | 'Application' | 'ManagedIdentity' | 'Key';

/**
 * Defines values for SendingLogs.
 * Possible values include: 'True', 'False'
 * @readonly
 * @enum {string}
 */
export type SendingLogs = 'True' | 'False';

/**
 * Defines values for TagAction.
 * Possible values include: 'Include', 'Exclude'
 * @readonly
 * @enum {string}
 */
export type TagAction = 'Include' | 'Exclude';

/**
 * Defines values for ElasticDeploymentStatus.
 * Possible values include: 'Healthy', 'Unhealthy'
 * @readonly
 * @enum {string}
 */
export type ElasticDeploymentStatus = 'Healthy' | 'Unhealthy';

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type MonitorsListResponse = ElasticMonitorResourceListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticMonitorResourceListResponse;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type MonitorsListByResourceGroupResponse = ElasticMonitorResourceListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticMonitorResourceListResponse;
    };
};

/**
 * Contains response data for the get operation.
 */
export type MonitorsGetResponse = ElasticMonitorResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticMonitorResource;
    };
};

/**
 * Contains response data for the create operation.
 */
export type MonitorsCreateResponse = ElasticMonitorResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticMonitorResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type MonitorsUpdateResponse = ElasticMonitorResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticMonitorResource;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type MonitorsBeginCreateResponse = ElasticMonitorResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticMonitorResource;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type MonitorsListNextResponse = ElasticMonitorResourceListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticMonitorResourceListResponse;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type MonitorsListByResourceGroupNextResponse = ElasticMonitorResourceListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticMonitorResourceListResponse;
    };
};

/**
 * Contains response data for the list operation.
 */
export type MonitoredResourcesListResponse = MonitoredResourceListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MonitoredResourceListResponse;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type MonitoredResourcesListNextResponse = MonitoredResourceListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MonitoredResourceListResponse;
    };
};

/**
 * Contains response data for the list operation.
 */
export type DeploymentInfoListResponse = DeploymentInfoResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeploymentInfoResponse;
    };
};

/**
 * Contains response data for the list operation.
 */
export type TagRulesListResponse = MonitoringTagRulesListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MonitoringTagRulesListResponse;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type TagRulesCreateOrUpdateResponse = MonitoringTagRules & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MonitoringTagRules;
    };
};

/**
 * Contains response data for the get operation.
 */
export type TagRulesGetResponse = MonitoringTagRules & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MonitoringTagRules;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type TagRulesListNextResponse = MonitoringTagRulesListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MonitoringTagRulesListResponse;
    };
};
