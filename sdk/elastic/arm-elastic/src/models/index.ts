/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** Result of GET request to list the Microsoft.Elastic operations. */
export interface OperationListResult {
  /** List of operations supported by the Microsoft.Elastic provider. */
  value?: OperationResult[];
  /** URL to get the next set of operation list results if there are any. */
  nextLink?: string;
}

/** A Microsoft.Elastic REST API operation. */
export interface OperationResult {
  /** Operation name, i.e., {provider}/{resource}/{operation}. */
  name?: string;
  /** Indicates whether the operation is a data action */
  isDataAction?: boolean;
  /** The object that represents the operation. */
  display?: OperationDisplay;
  /** Origin of the operation */
  origin?: string;
}

/** The object that represents the operation. */
export interface OperationDisplay {
  /** Service provider, i.e., Microsoft.Elastic. */
  provider?: string;
  /** Type on which the operation is performed, e.g., 'monitors'. */
  resource?: string;
  /** Operation type, e.g., read, write, delete, etc. */
  operation?: string;
  /** Description of the operation, e.g., 'Write monitors'. */
  description?: string;
}

/** RP default error response. */
export interface ResourceProviderDefaultErrorResponse {
  /**
   * Response body of Error
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly error?: ErrorResponseBody;
}

/** Error response body. */
export interface ErrorResponseBody {
  /** Error code. */
  code?: string;
  /** Error message. */
  message?: string;
  /** Error target. */
  target?: string;
  /** Error details. */
  details?: ErrorResponseBody[];
}

/** Response of a list operation. */
export interface ElasticMonitorResourceListResponse {
  /** Results of a list operation. */
  value?: ElasticMonitorResource[];
  /** Link to the next set of results, if any. */
  nextLink?: string;
}

/** Monitor resource. */
export interface ElasticMonitorResource {
  /**
   * ARM id of the monitor resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Name of the monitor resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the monitor resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** SKU of the monitor resource. */
  sku?: ResourceSku;
  /** Properties of the monitor resource. */
  properties?: MonitorProperties;
  /** Identity properties of the monitor resource. */
  identity?: IdentityProperties;
  /** The tags of the monitor resource. */
  tags?: { [propertyName: string]: string };
  /** The location of the monitor resource */
  location: string;
  /**
   * The system metadata relating to this resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Microsoft.Elastic SKU. */
export interface ResourceSku {
  /** Name of the SKU. */
  name: string;
}

/** Properties specific to the monitor resource. */
export interface MonitorProperties {
  /** Provisioning state of the monitor resource. */
  provisioningState?: ProvisioningState;
  /** Flag specifying if the resource monitoring is enabled or disabled. */
  monitoringStatus?: MonitoringStatus;
  /** Elastic cloud properties. */
  elasticProperties?: ElasticProperties;
  /** User information. */
  userInfo?: UserInfo;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly liftrResourceCategory?: LiftrResourceCategories;
  /**
   * The priority of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly liftrResourcePreference?: number;
}

/** Elastic Resource Properties. */
export interface ElasticProperties {
  /** Details of the user's elastic account. */
  elasticCloudUser?: ElasticCloudUser;
  /** Details of the elastic cloud deployment. */
  elasticCloudDeployment?: ElasticCloudDeployment;
}

/** Details of the user's elastic account. */
export interface ElasticCloudUser {
  /**
   * Email of the Elastic User Account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly emailAddress?: string;
  /**
   * User Id of the elastic account of the User.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Elastic cloud default dashboard sso URL of the Elastic user account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly elasticCloudSsoDefaultUrl?: string;
}

/** Details of the user's elastic deployment associated with the monitor resource. */
export interface ElasticCloudDeployment {
  /**
   * Elastic deployment name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Elastic deployment Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly deploymentId?: string;
  /**
   * Associated Azure subscription Id for the elastic deployment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly azureSubscriptionId?: string;
  /**
   * Region where Deployment at Elastic side took place.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly elasticsearchRegion?: string;
  /**
   * Elasticsearch ingestion endpoint of the Elastic deployment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly elasticsearchServiceUrl?: string;
  /**
   * Kibana endpoint of the Elastic deployment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly kibanaServiceUrl?: string;
  /**
   * Kibana dashboard sso URL of the Elastic deployment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly kibanaSsoUrl?: string;
}

/** User Information to be passed to partners. */
export interface UserInfo {
  /** First name of the user */
  firstName?: string;
  /** Last name of the user */
  lastName?: string;
  /** Company name of the user */
  companyName?: string;
  /** Email of the user used by Elastic for contacting them if needed */
  emailAddress?: string;
  /** Company information of the user to be passed to partners. */
  companyInfo?: CompanyInfo;
}

/** Company information of the user to be passed to partners. */
export interface CompanyInfo {
  /** Domain of the company */
  domain?: string;
  /** Business of the company */
  business?: string;
  /** Number of employees in the company */
  employeesNumber?: string;
  /** State of the company location. */
  state?: string;
  /** Country of the company location. */
  country?: string;
}

/** Identity properties. */
export interface IdentityProperties {
  /**
   * The identity ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The tenant ID of resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** Managed identity type. */
  type?: ManagedIdentityTypes;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Monitor resource update parameters. */
export interface ElasticMonitorResourceUpdateParameters {
  /** elastic monitor resource tags. */
  tags?: { [propertyName: string]: string };
}

/** Response of a list operation. */
export interface MonitoredResourceListResponse {
  /** Results of a list operation. */
  value?: MonitoredResource[];
  /** Link to the next set of results, if any. */
  nextLink?: string;
}

/** The properties of a resource currently being monitored by the Elastic monitor resource. */
export interface MonitoredResource {
  /** The ARM id of the resource. */
  id?: string;
  /** Flag indicating the status of the resource for sending logs operation to Elastic. */
  sendingLogs?: SendingLogs;
  /** Reason for why the resource is sending logs (or why it is not sending). */
  reasonForLogsStatus?: string;
}

/** The properties of deployment in Elastic cloud corresponding to the Elastic monitor resource. */
export interface DeploymentInfoResponse {
  /**
   * The Elastic deployment status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: ElasticDeploymentStatus;
  /**
   * Version of the elasticsearch in Elastic cloud deployment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly version?: string;
  /**
   * RAM capacity of the elasticsearch in Elastic cloud deployment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly memoryCapacity?: string;
  /**
   * Disk capacity of the elasticsearch in Elastic cloud deployment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskCapacity?: string;
}

/** Response of a list operation. */
export interface MonitoringTagRulesListResponse {
  /** Results of a list operation. */
  value?: MonitoringTagRules[];
  /** Link to the next set of results, if any. */
  nextLink?: string;
}

/** Capture logs and metrics of Azure resources based on ARM tags. */
export interface MonitoringTagRules {
  /**
   * Name of the rule set.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The id of the rule set.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The type of the rule set.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** Properties of the monitoring tag rules. */
  properties?: MonitoringTagRulesProperties;
  /**
   * The system metadata relating to this resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Definition of the properties for a TagRules resource. */
export interface MonitoringTagRulesProperties {
  /** Provisioning state of the monitoring tag rules. */
  provisioningState?: ProvisioningState;
  /** Rules for sending logs. */
  logRules?: LogRules;
}

/** Set of rules for sending logs for the Monitor resource. */
export interface LogRules {
  /** Flag specifying if AAD logs should be sent for the Monitor resource. */
  sendAadLogs?: boolean;
  /** Flag specifying if subscription logs should be sent for the Monitor resource. */
  sendSubscriptionLogs?: boolean;
  /** Flag specifying if activity logs from Azure resources should be sent for the Monitor resource. */
  sendActivityLogs?: boolean;
  /** List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags. */
  filteringTags?: FilteringTag[];
}

/** The definition of a filtering tag. Filtering tags are used for capturing resources and include/exclude them from being monitored. */
export interface FilteringTag {
  /** The name (also known as the key) of the tag. */
  name?: string;
  /** The value of the tag. */
  value?: string;
  /** Valid actions for a filtering tag. */
  action?: TagAction;
}

/** Response of a list operation. */
export interface VMHostListResponse {
  /** Results of a list operation. */
  value?: VMResources[];
  /** Link to the next Vm resource Id, if any. */
  nextLink?: string;
}

/** The vm resource properties that is currently being monitored by the Elastic monitor resource. */
export interface VMResources {
  /** The ARM id of the VM resource. */
  vmResourceId?: string;
}

/** The vm ingestion details to install an agent. */
export interface VMIngestionDetailsResponse {
  /** The cloudId of given Elastic monitor resource. */
  cloudId?: string;
  /** Ingestion details to install agent on given VM. */
  ingestionKey?: string;
}

/** Update VM resource collection. */
export interface VMCollectionUpdate {
  /** ARM id of the VM resource. */
  vmResourceId?: string;
  /** Operation to be performed for given VM. */
  operationName?: OperationName;
}

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  Accepted = "Accepted",
  Creating = "Creating",
  Updating = "Updating",
  Deleting = "Deleting",
  Succeeded = "Succeeded",
  Failed = "Failed",
  Canceled = "Canceled",
  Deleted = "Deleted",
  NotSpecified = "NotSpecified"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Accepted** \
 * **Creating** \
 * **Updating** \
 * **Deleting** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Deleted** \
 * **NotSpecified**
 */
export type ProvisioningState = string;

/** Known values of {@link MonitoringStatus} that the service accepts. */
export enum KnownMonitoringStatus {
  Enabled = "Enabled",
  Disabled = "Disabled"
}

/**
 * Defines values for MonitoringStatus. \
 * {@link KnownMonitoringStatus} can be used interchangeably with MonitoringStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export type MonitoringStatus = string;

/** Known values of {@link LiftrResourceCategories} that the service accepts. */
export enum KnownLiftrResourceCategories {
  Unknown = "Unknown",
  MonitorLogs = "MonitorLogs"
}

/**
 * Defines values for LiftrResourceCategories. \
 * {@link KnownLiftrResourceCategories} can be used interchangeably with LiftrResourceCategories,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **MonitorLogs**
 */
export type LiftrResourceCategories = string;

/** Known values of {@link ManagedIdentityTypes} that the service accepts. */
export enum KnownManagedIdentityTypes {
  SystemAssigned = "SystemAssigned"
}

/**
 * Defines values for ManagedIdentityTypes. \
 * {@link KnownManagedIdentityTypes} can be used interchangeably with ManagedIdentityTypes,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SystemAssigned**
 */
export type ManagedIdentityTypes = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  User = "User",
  Application = "Application",
  ManagedIdentity = "ManagedIdentity",
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link SendingLogs} that the service accepts. */
export enum KnownSendingLogs {
  True = "True",
  False = "False"
}

/**
 * Defines values for SendingLogs. \
 * {@link KnownSendingLogs} can be used interchangeably with SendingLogs,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **True** \
 * **False**
 */
export type SendingLogs = string;

/** Known values of {@link ElasticDeploymentStatus} that the service accepts. */
export enum KnownElasticDeploymentStatus {
  Healthy = "Healthy",
  Unhealthy = "Unhealthy"
}

/**
 * Defines values for ElasticDeploymentStatus. \
 * {@link KnownElasticDeploymentStatus} can be used interchangeably with ElasticDeploymentStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Healthy** \
 * **Unhealthy**
 */
export type ElasticDeploymentStatus = string;

/** Known values of {@link TagAction} that the service accepts. */
export enum KnownTagAction {
  Include = "Include",
  Exclude = "Exclude"
}

/**
 * Defines values for TagAction. \
 * {@link KnownTagAction} can be used interchangeably with TagAction,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Include** \
 * **Exclude**
 */
export type TagAction = string;

/** Known values of {@link OperationName} that the service accepts. */
export enum KnownOperationName {
  Add = "Add",
  Delete = "Delete"
}

/**
 * Defines values for OperationName. \
 * {@link KnownOperationName} can be used interchangeably with OperationName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Add** \
 * **Delete**
 */
export type OperationName = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface MonitorsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type MonitorsListResponse = ElasticMonitorResourceListResponse;

/** Optional parameters. */
export interface MonitorsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type MonitorsListByResourceGroupResponse = ElasticMonitorResourceListResponse;

/** Optional parameters. */
export interface MonitorsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type MonitorsGetResponse = ElasticMonitorResource;

/** Optional parameters. */
export interface MonitorsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Elastic monitor resource model */
  body?: ElasticMonitorResource;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type MonitorsCreateResponse = ElasticMonitorResource;

/** Optional parameters. */
export interface MonitorsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Elastic resource model update parameters. */
  body?: ElasticMonitorResourceUpdateParameters;
}

/** Contains response data for the update operation. */
export type MonitorsUpdateResponse = ElasticMonitorResource;

/** Optional parameters. */
export interface MonitorsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface MonitorsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type MonitorsListNextResponse = ElasticMonitorResourceListResponse;

/** Optional parameters. */
export interface MonitorsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type MonitorsListByResourceGroupNextResponse = ElasticMonitorResourceListResponse;

/** Optional parameters. */
export interface MonitoredResourcesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type MonitoredResourcesListResponse = MonitoredResourceListResponse;

/** Optional parameters. */
export interface MonitoredResourcesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type MonitoredResourcesListNextResponse = MonitoredResourceListResponse;

/** Optional parameters. */
export interface DeploymentInfoListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type DeploymentInfoListResponse = DeploymentInfoResponse;

/** Optional parameters. */
export interface TagRulesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type TagRulesListResponse = MonitoringTagRulesListResponse;

/** Optional parameters. */
export interface TagRulesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** request body of MonitoringTagRules */
  body?: MonitoringTagRules;
}

/** Contains response data for the createOrUpdate operation. */
export type TagRulesCreateOrUpdateResponse = MonitoringTagRules;

/** Optional parameters. */
export interface TagRulesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type TagRulesGetResponse = MonitoringTagRules;

/** Optional parameters. */
export interface TagRulesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface TagRulesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type TagRulesListNextResponse = MonitoringTagRulesListResponse;

/** Optional parameters. */
export interface VMHostListOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type VMHostListOperationResponse = VMHostListResponse;

/** Optional parameters. */
export interface VMHostListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type VMHostListNextResponse = VMHostListResponse;

/** Optional parameters. */
export interface VMIngestionDetailsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the details operation. */
export type VMIngestionDetailsOperationResponse = VMIngestionDetailsResponse;

/** Optional parameters. */
export interface VMCollectionUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** VM resource Id */
  body?: VMCollectionUpdate;
}

/** Optional parameters. */
export interface MicrosoftElasticOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
