/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { Organizations } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { MicrosoftElastic } from "../microsoftElastic";
import {
  OrganizationsGetApiKeyOptionalParams,
  OrganizationsGetApiKeyResponse,
  OrganizationsGetElasticToAzureSubscriptionMappingOptionalParams,
  OrganizationsGetElasticToAzureSubscriptionMappingResponse,
} from "../models";

/** Class containing Organizations operations. */
export class OrganizationsImpl implements Organizations {
  private readonly client: MicrosoftElastic;

  /**
   * Initialize a new instance of the class Organizations class.
   * @param client Reference to the service client
   */
  constructor(client: MicrosoftElastic) {
    this.client = client;
  }

  /**
   * Fetch User API Key from internal database, if it was generated and stored while creating the
   * Elasticsearch Organization.
   * @param options The options parameters.
   */
  getApiKey(
    options?: OrganizationsGetApiKeyOptionalParams,
  ): Promise<OrganizationsGetApiKeyResponse> {
    return this.client.sendOperationRequest(
      { options },
      getApiKeyOperationSpec,
    );
  }

  /**
   * Get Elastic Organization To Azure Subscription Mapping details for the logged-in user.
   * @param options The options parameters.
   */
  getElasticToAzureSubscriptionMapping(
    options?: OrganizationsGetElasticToAzureSubscriptionMappingOptionalParams,
  ): Promise<OrganizationsGetElasticToAzureSubscriptionMappingResponse> {
    return this.client.sendOperationRequest(
      { options },
      getElasticToAzureSubscriptionMappingOperationSpec,
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getApiKeyOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/providers/Microsoft.Elastic/getOrganizationApiKey",
  httpMethod: "POST",
  responses: {
    200: {
      bodyMapper: Mappers.UserApiKeyResponse,
    },
    default: {
      bodyMapper: Mappers.ResourceProviderDefaultErrorResponse,
    },
  },
  requestBody: Parameters.body7,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.$host, Parameters.subscriptionId],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer,
};
const getElasticToAzureSubscriptionMappingOperationSpec: coreClient.OperationSpec =
  {
    path: "/subscriptions/{subscriptionId}/providers/Microsoft.Elastic/getElasticOrganizationToAzureSubscriptionMapping",
    httpMethod: "POST",
    responses: {
      200: {
        bodyMapper:
          Mappers.ElasticOrganizationToAzureSubscriptionMappingResponse,
      },
      default: {
        bodyMapper: Mappers.ResourceProviderDefaultErrorResponse,
      },
    },
    queryParameters: [Parameters.apiVersion],
    urlParameters: [Parameters.$host, Parameters.subscriptionId],
    headerParameters: [Parameters.accept],
    serializer,
  };
