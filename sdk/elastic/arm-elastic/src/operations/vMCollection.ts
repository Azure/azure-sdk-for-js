/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/vMCollectionMappers";
import * as Parameters from "../models/parameters";
import { MicrosoftElasticContext } from "../microsoftElasticContext";

/** Class representing a VMCollection. */
export class VMCollection {
  private readonly client: MicrosoftElasticContext;

  /**
   * Create a VMCollection.
   * @param {MicrosoftElasticContext} client Reference to the service client.
   */
  constructor(client: MicrosoftElasticContext) {
    this.client = client;
  }

  /**
   * @summary Update the vm details that will be monitored by the Elastic monitor resource.
   * @param resourceGroupName The name of the resource group to which the Elastic resource belongs.
   * @param monitorName Monitor resource name
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  update(resourceGroupName: string, monitorName: string, options?: Models.VMCollectionUpdateOptionalParams): Promise<msRest.RestResponse>;
  /**
   * @param resourceGroupName The name of the resource group to which the Elastic resource belongs.
   * @param monitorName Monitor resource name
   * @param callback The callback
   */
  update(resourceGroupName: string, monitorName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceGroupName The name of the resource group to which the Elastic resource belongs.
   * @param monitorName Monitor resource name
   * @param options The optional parameters
   * @param callback The callback
   */
  update(resourceGroupName: string, monitorName: string, options: Models.VMCollectionUpdateOptionalParams, callback: msRest.ServiceCallback<void>): void;
  update(resourceGroupName: string, monitorName: string, options?: Models.VMCollectionUpdateOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        monitorName,
        options
      },
      updateOperationSpec,
      callback);
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const updateOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Elastic/monitors/{monitorName}/vmCollectionUpdate",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.monitorName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: [
      "options",
      "body"
    ],
    mapper: Mappers.VMCollectionUpdate
  },
  responses: {
    200: {},
    default: {
      bodyMapper: Mappers.ResourceProviderDefaultErrorResponse
    }
  },
  serializer
};
