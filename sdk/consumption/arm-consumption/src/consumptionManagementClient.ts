/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreAuth from "@azure/core-auth";
import {
  UsageDetailsImpl,
  MarketplacesImpl,
  BudgetsImpl,
  TagsImpl,
  ChargesImpl,
  BalancesImpl,
  ReservationsSummariesImpl,
  ReservationsDetailsImpl,
  ReservationRecommendationsImpl,
  ReservationRecommendationDetailsImpl,
  ReservationTransactionsImpl,
  PriceSheetImpl,
  OperationsImpl,
  AggregatedCostImpl,
  EventsOperationsImpl,
  LotsOperationsImpl,
  CreditsImpl
} from "./operations";
import {
  UsageDetails,
  Marketplaces,
  Budgets,
  Tags,
  Charges,
  Balances,
  ReservationsSummaries,
  ReservationsDetails,
  ReservationRecommendations,
  ReservationRecommendationDetails,
  ReservationTransactions,
  PriceSheet,
  Operations,
  AggregatedCost,
  EventsOperations,
  LotsOperations,
  Credits
} from "./operationsInterfaces";
import { ConsumptionManagementClientContext } from "./consumptionManagementClientContext";
import { ConsumptionManagementClientOptionalParams } from "./models";

export class ConsumptionManagementClient extends ConsumptionManagementClientContext {
  /**
   * Initializes a new instance of the ConsumptionManagementClient class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param subscriptionId Azure Subscription ID.
   * @param options The parameter options
   */
  constructor(
    credentials: coreAuth.TokenCredential,
    subscriptionId: string,
    options?: ConsumptionManagementClientOptionalParams
  ) {
    super(credentials, subscriptionId, options);
    this.usageDetails = new UsageDetailsImpl(this);
    this.marketplaces = new MarketplacesImpl(this);
    this.budgets = new BudgetsImpl(this);
    this.tags = new TagsImpl(this);
    this.charges = new ChargesImpl(this);
    this.balances = new BalancesImpl(this);
    this.reservationsSummaries = new ReservationsSummariesImpl(this);
    this.reservationsDetails = new ReservationsDetailsImpl(this);
    this.reservationRecommendations = new ReservationRecommendationsImpl(this);
    this.reservationRecommendationDetails = new ReservationRecommendationDetailsImpl(
      this
    );
    this.reservationTransactions = new ReservationTransactionsImpl(this);
    this.priceSheet = new PriceSheetImpl(this);
    this.operations = new OperationsImpl(this);
    this.aggregatedCost = new AggregatedCostImpl(this);
    this.eventsOperations = new EventsOperationsImpl(this);
    this.lotsOperations = new LotsOperationsImpl(this);
    this.credits = new CreditsImpl(this);
  }

  usageDetails: UsageDetails;
  marketplaces: Marketplaces;
  budgets: Budgets;
  tags: Tags;
  charges: Charges;
  balances: Balances;
  reservationsSummaries: ReservationsSummaries;
  reservationsDetails: ReservationsDetails;
  reservationRecommendations: ReservationRecommendations;
  reservationRecommendationDetails: ReservationRecommendationDetails;
  reservationTransactions: ReservationTransactions;
  priceSheet: PriceSheet;
  operations: Operations;
  aggregatedCost: AggregatedCost;
  eventsOperations: EventsOperations;
  lotsOperations: LotsOperations;
  credits: Credits;
}
