/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ReservationDetail,
  ReservationsDetailsListByReservationOrderOptionalParams,
  ReservationsDetailsListByReservationOrderAndReservationOptionalParams,
  ReservationsDetailsListOptionalParams,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ReservationsDetails. */
export interface ReservationsDetails {
  /**
   * Lists the reservations details for provided date range. Note: ARM has a payload size limit of 12MB,
   * so currently callers get 400 when the response size exceeds the ARM limit. If the data size is too
   * large, customers may also get 504 as the API timed out preparing the data. In such cases, API call
   * should be made with smaller date ranges or a call to Generate Reservation Details Report API should
   * be made as it is asynchronous and will not run into response size time outs.
   * @param reservationOrderId Order Id of the reservation
   * @param filter Filter reservation details by date range. The properties/UsageDate for start date and
   *               end date. The filter supports 'le' and  'ge'
   * @param options The options parameters.
   */
  listByReservationOrder(
    reservationOrderId: string,
    filter: string,
    options?: ReservationsDetailsListByReservationOrderOptionalParams,
  ): PagedAsyncIterableIterator<ReservationDetail>;
  /**
   * Lists the reservations details for provided date range. Note: ARM has a payload size limit of 12MB,
   * so currently callers get 400 when the response size exceeds the ARM limit. If the data size is too
   * large, customers may also get 504 as the API timed out preparing the data. In such cases, API call
   * should be made with smaller date ranges or a call to Generate Reservation Details Report API should
   * be made as it is asynchronous and will not run into response size time outs.
   * @param reservationOrderId Order Id of the reservation
   * @param reservationId Id of the reservation
   * @param filter Filter reservation details by date range. The properties/UsageDate for start date and
   *               end date. The filter supports 'le' and  'ge'
   * @param options The options parameters.
   */
  listByReservationOrderAndReservation(
    reservationOrderId: string,
    reservationId: string,
    filter: string,
    options?: ReservationsDetailsListByReservationOrderAndReservationOptionalParams,
  ): PagedAsyncIterableIterator<ReservationDetail>;
  /**
   * Lists the reservations details for provided date range. Note: ARM has a payload size limit of 12MB,
   * so currently callers get 400 when the response size exceeds the ARM limit. If the data size is too
   * large, customers may also get 504 as the API timed out preparing the data. In such cases, API call
   * should be made with smaller date ranges or a call to Generate Reservation Details Report API should
   * be made as it is asynchronous and will not run into response size time outs.
   * @param resourceScope The scope associated with reservations details operations. This includes
   *                      '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for BillingAccount scope (legacy),
   *                      and
   *                      '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   *                      for BillingProfile scope (modern).
   * @param options The options parameters.
   */
  list(
    resourceScope: string,
    options?: ReservationsDetailsListOptionalParams,
  ): PagedAsyncIterableIterator<ReservationDetail>;
}
