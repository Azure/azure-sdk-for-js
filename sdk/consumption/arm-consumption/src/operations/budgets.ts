/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/budgetsMappers";
import * as Parameters from "../models/parameters";
import { ConsumptionManagementClientContext } from "../consumptionManagementClientContext";

/** Class representing a Budgets. */
export class Budgets {
  private readonly client: ConsumptionManagementClientContext;

  /**
   * Create a Budgets.
   * @param {ConsumptionManagementClientContext} client Reference to the service client.
   */
  constructor(client: ConsumptionManagementClientContext) {
    this.client = client;
  }

  /**
   * Lists all budgets for the defined scope.
   * @param scope The scope associated with budget operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope.
   * @param [options] The optional parameters
   * @returns Promise<Models.BudgetsListResponse>
   */
  list(scope: string, options?: msRest.RequestOptionsBase): Promise<Models.BudgetsListResponse>;
  /**
   * @param scope The scope associated with budget operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope.
   * @param callback The callback
   */
  list(scope: string, callback: msRest.ServiceCallback<Models.BudgetsListResult>): void;
  /**
   * @param scope The scope associated with budget operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(scope: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BudgetsListResult>): void;
  list(scope: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BudgetsListResult>, callback?: msRest.ServiceCallback<Models.BudgetsListResult>): Promise<Models.BudgetsListResponse> {
    return this.client.sendOperationRequest(
      {
        scope,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.BudgetsListResponse>;
  }

  /**
   * Gets the budget for the scope by budget name.
   * @param scope The scope associated with budget operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope.
   * @param budgetName Budget Name.
   * @param [options] The optional parameters
   * @returns Promise<Models.BudgetsGetResponse>
   */
  get(scope: string, budgetName: string, options?: msRest.RequestOptionsBase): Promise<Models.BudgetsGetResponse>;
  /**
   * @param scope The scope associated with budget operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope.
   * @param budgetName Budget Name.
   * @param callback The callback
   */
  get(scope: string, budgetName: string, callback: msRest.ServiceCallback<Models.Budget>): void;
  /**
   * @param scope The scope associated with budget operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope.
   * @param budgetName Budget Name.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(scope: string, budgetName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Budget>): void;
  get(scope: string, budgetName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Budget>, callback?: msRest.ServiceCallback<Models.Budget>): Promise<Models.BudgetsGetResponse> {
    return this.client.sendOperationRequest(
      {
        scope,
        budgetName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.BudgetsGetResponse>;
  }

  /**
   * The operation to create or update a budget. You can optionally provide an eTag if desired as a
   * form of concurrency control. To obtain the latest eTag for a given budget, perform a get
   * operation prior to your put operation.
   * @param scope The scope associated with budget operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope.
   * @param budgetName Budget Name.
   * @param parameters Parameters supplied to the Create Budget operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.BudgetsCreateOrUpdateResponse>
   */
  createOrUpdate(scope: string, budgetName: string, parameters: Models.Budget, options?: msRest.RequestOptionsBase): Promise<Models.BudgetsCreateOrUpdateResponse>;
  /**
   * @param scope The scope associated with budget operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope.
   * @param budgetName Budget Name.
   * @param parameters Parameters supplied to the Create Budget operation.
   * @param callback The callback
   */
  createOrUpdate(scope: string, budgetName: string, parameters: Models.Budget, callback: msRest.ServiceCallback<Models.Budget>): void;
  /**
   * @param scope The scope associated with budget operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope.
   * @param budgetName Budget Name.
   * @param parameters Parameters supplied to the Create Budget operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  createOrUpdate(scope: string, budgetName: string, parameters: Models.Budget, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Budget>): void;
  createOrUpdate(scope: string, budgetName: string, parameters: Models.Budget, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Budget>, callback?: msRest.ServiceCallback<Models.Budget>): Promise<Models.BudgetsCreateOrUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        scope,
        budgetName,
        parameters,
        options
      },
      createOrUpdateOperationSpec,
      callback) as Promise<Models.BudgetsCreateOrUpdateResponse>;
  }

  /**
   * The operation to delete a budget.
   * @param scope The scope associated with budget operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope.
   * @param budgetName Budget Name.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(scope: string, budgetName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param scope The scope associated with budget operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope.
   * @param budgetName Budget Name.
   * @param callback The callback
   */
  deleteMethod(scope: string, budgetName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param scope The scope associated with budget operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope.
   * @param budgetName Budget Name.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(scope: string, budgetName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(scope: string, budgetName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        scope,
        budgetName,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }

  /**
   * Lists all budgets for the defined scope.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.BudgetsListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.BudgetsListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.BudgetsListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BudgetsListResult>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BudgetsListResult>, callback?: msRest.ServiceCallback<Models.BudgetsListResult>): Promise<Models.BudgetsListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.BudgetsListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "{scope}/providers/Microsoft.Consumption/budgets",
  urlParameters: [
    Parameters.scope0
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BudgetsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "{scope}/providers/Microsoft.Consumption/budgets/{budgetName}",
  urlParameters: [
    Parameters.scope0,
    Parameters.budgetName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.Budget
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const createOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "{scope}/providers/Microsoft.Consumption/budgets/{budgetName}",
  urlParameters: [
    Parameters.scope0,
    Parameters.budgetName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.Budget,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.Budget
    },
    201: {
      bodyMapper: Mappers.Budget
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "{scope}/providers/Microsoft.Consumption/budgets/{budgetName}",
  urlParameters: [
    Parameters.scope0,
    Parameters.budgetName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BudgetsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
