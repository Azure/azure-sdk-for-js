/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/aggregatedCostMappers";
import * as Parameters from "../models/parameters";
import { ConsumptionManagementClientContext } from "../consumptionManagementClientContext";

/** Class representing a AggregatedCost. */
export class AggregatedCost {
  private readonly client: ConsumptionManagementClientContext;

  /**
   * Create a AggregatedCost.
   * @param {ConsumptionManagementClientContext} client Reference to the service client.
   */
  constructor(client: ConsumptionManagementClientContext) {
    this.client = client;
  }

  /**
   * Provides the aggregate cost of a management group and all child management groups by current
   * billing period.
   * @param managementGroupId Azure Management Group ID.
   * @param [options] The optional parameters
   * @returns Promise<Models.AggregatedCostGetByManagementGroupResponse>
   */
  getByManagementGroup(
    managementGroupId: string,
    options?: Models.AggregatedCostGetByManagementGroupOptionalParams
  ): Promise<Models.AggregatedCostGetByManagementGroupResponse>;
  /**
   * @param managementGroupId Azure Management Group ID.
   * @param callback The callback
   */
  getByManagementGroup(
    managementGroupId: string,
    callback: msRest.ServiceCallback<Models.ManagementGroupAggregatedCostResult>
  ): void;
  /**
   * @param managementGroupId Azure Management Group ID.
   * @param options The optional parameters
   * @param callback The callback
   */
  getByManagementGroup(
    managementGroupId: string,
    options: Models.AggregatedCostGetByManagementGroupOptionalParams,
    callback: msRest.ServiceCallback<Models.ManagementGroupAggregatedCostResult>
  ): void;
  getByManagementGroup(
    managementGroupId: string,
    options?:
      | Models.AggregatedCostGetByManagementGroupOptionalParams
      | msRest.ServiceCallback<Models.ManagementGroupAggregatedCostResult>,
    callback?: msRest.ServiceCallback<Models.ManagementGroupAggregatedCostResult>
  ): Promise<Models.AggregatedCostGetByManagementGroupResponse> {
    return this.client.sendOperationRequest(
      {
        managementGroupId,
        options
      },
      getByManagementGroupOperationSpec,
      callback
    ) as Promise<Models.AggregatedCostGetByManagementGroupResponse>;
  }

  /**
   * Provides the aggregate cost of a management group and all child management groups by specified
   * billing period
   * @param managementGroupId Azure Management Group ID.
   * @param billingPeriodName Billing Period Name.
   * @param [options] The optional parameters
   * @returns Promise<Models.AggregatedCostGetForBillingPeriodByManagementGroupResponse>
   */
  getForBillingPeriodByManagementGroup(
    managementGroupId: string,
    billingPeriodName: string,
    options?: msRest.RequestOptionsBase
  ): Promise<Models.AggregatedCostGetForBillingPeriodByManagementGroupResponse>;
  /**
   * @param managementGroupId Azure Management Group ID.
   * @param billingPeriodName Billing Period Name.
   * @param callback The callback
   */
  getForBillingPeriodByManagementGroup(
    managementGroupId: string,
    billingPeriodName: string,
    callback: msRest.ServiceCallback<Models.ManagementGroupAggregatedCostResult>
  ): void;
  /**
   * @param managementGroupId Azure Management Group ID.
   * @param billingPeriodName Billing Period Name.
   * @param options The optional parameters
   * @param callback The callback
   */
  getForBillingPeriodByManagementGroup(
    managementGroupId: string,
    billingPeriodName: string,
    options: msRest.RequestOptionsBase,
    callback: msRest.ServiceCallback<Models.ManagementGroupAggregatedCostResult>
  ): void;
  getForBillingPeriodByManagementGroup(
    managementGroupId: string,
    billingPeriodName: string,
    options?:
      | msRest.RequestOptionsBase
      | msRest.ServiceCallback<Models.ManagementGroupAggregatedCostResult>,
    callback?: msRest.ServiceCallback<Models.ManagementGroupAggregatedCostResult>
  ): Promise<Models.AggregatedCostGetForBillingPeriodByManagementGroupResponse> {
    return this.client.sendOperationRequest(
      {
        managementGroupId,
        billingPeriodName,
        options
      },
      getForBillingPeriodByManagementGroupOperationSpec,
      callback
    ) as Promise<Models.AggregatedCostGetForBillingPeriodByManagementGroupResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getByManagementGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path:
    "providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Consumption/aggregatedcost",
  urlParameters: [Parameters.managementGroupId],
  queryParameters: [Parameters.apiVersion, Parameters.filter0],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.ManagementGroupAggregatedCostResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getForBillingPeriodByManagementGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path:
    "providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/Microsoft.Consumption/aggregatedcost",
  urlParameters: [Parameters.managementGroupId, Parameters.billingPeriodName],
  queryParameters: [Parameters.apiVersion],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.ManagementGroupAggregatedCostResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
