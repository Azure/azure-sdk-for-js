/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/usageDetailsMappers";
import * as Parameters from "../models/parameters";
import { ConsumptionManagementClientContext } from "../consumptionManagementClientContext";

/** Class representing a UsageDetails. */
export class UsageDetails {
  private readonly client: ConsumptionManagementClientContext;

  /**
   * Create a UsageDetails.
   * @param {ConsumptionManagementClientContext} client Reference to the service client.
   */
  constructor(client: ConsumptionManagementClientContext) {
    this.client = client;
  }

  /**
   * Lists the usage details for a scope by current billing period. Usage details are available via
   * this API only for May 1, 2014 or later.
   * @param [options] The optional parameters
   * @returns Promise<Models.UsageDetailsListResponse>
   */
  list(options?: Models.UsageDetailsListOptionalParams): Promise<Models.UsageDetailsListResponse>;
  /**
   * @param callback The callback
   */
  list(callback: msRest.ServiceCallback<Models.UsageDetailsListResult>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  list(
    options: Models.UsageDetailsListOptionalParams,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  list(
    options?:
      | Models.UsageDetailsListOptionalParams
      | msRest.ServiceCallback<Models.UsageDetailsListResult>,
    callback?: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): Promise<Models.UsageDetailsListResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listOperationSpec,
      callback
    ) as Promise<Models.UsageDetailsListResponse>;
  }

  /**
   * Lists the usage details for a scope by billing period. Usage details are available via this API
   * only for May 1, 2014 or later.
   * @param billingPeriodName Billing Period Name.
   * @param [options] The optional parameters
   * @returns Promise<Models.UsageDetailsListByBillingPeriodResponse>
   */
  listByBillingPeriod(
    billingPeriodName: string,
    options?: Models.UsageDetailsListByBillingPeriodOptionalParams
  ): Promise<Models.UsageDetailsListByBillingPeriodResponse>;
  /**
   * @param billingPeriodName Billing Period Name.
   * @param callback The callback
   */
  listByBillingPeriod(
    billingPeriodName: string,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  /**
   * @param billingPeriodName Billing Period Name.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByBillingPeriod(
    billingPeriodName: string,
    options: Models.UsageDetailsListByBillingPeriodOptionalParams,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  listByBillingPeriod(
    billingPeriodName: string,
    options?:
      | Models.UsageDetailsListByBillingPeriodOptionalParams
      | msRest.ServiceCallback<Models.UsageDetailsListResult>,
    callback?: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): Promise<Models.UsageDetailsListByBillingPeriodResponse> {
    return this.client.sendOperationRequest(
      {
        billingPeriodName,
        options
      },
      listByBillingPeriodOperationSpec,
      callback
    ) as Promise<Models.UsageDetailsListByBillingPeriodResponse>;
  }

  /**
   * Lists the usage details by billingAccountId for a scope by current billing period. Usage details
   * are available via this API only for May 1, 2014 or later.
   * @param billingAccountId BillingAccount ID
   * @param [options] The optional parameters
   * @returns Promise<Models.UsageDetailsListByBillingAccountResponse>
   */
  listByBillingAccount(
    billingAccountId: string,
    options?: Models.UsageDetailsListByBillingAccountOptionalParams
  ): Promise<Models.UsageDetailsListByBillingAccountResponse>;
  /**
   * @param billingAccountId BillingAccount ID
   * @param callback The callback
   */
  listByBillingAccount(
    billingAccountId: string,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  /**
   * @param billingAccountId BillingAccount ID
   * @param options The optional parameters
   * @param callback The callback
   */
  listByBillingAccount(
    billingAccountId: string,
    options: Models.UsageDetailsListByBillingAccountOptionalParams,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  listByBillingAccount(
    billingAccountId: string,
    options?:
      | Models.UsageDetailsListByBillingAccountOptionalParams
      | msRest.ServiceCallback<Models.UsageDetailsListResult>,
    callback?: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): Promise<Models.UsageDetailsListByBillingAccountResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountId,
        options
      },
      listByBillingAccountOperationSpec,
      callback
    ) as Promise<Models.UsageDetailsListByBillingAccountResponse>;
  }

  /**
   * Lists the usage details based on billingAccountId for a scope by billing period. Usage details
   * are available via this API only for May 1, 2014 or later.
   * @param billingAccountId BillingAccount ID
   * @param billingPeriodName Billing Period Name.
   * @param [options] The optional parameters
   * @returns Promise<Models.UsageDetailsListForBillingPeriodByBillingAccountResponse>
   */
  listForBillingPeriodByBillingAccount(
    billingAccountId: string,
    billingPeriodName: string,
    options?: Models.UsageDetailsListForBillingPeriodByBillingAccountOptionalParams
  ): Promise<Models.UsageDetailsListForBillingPeriodByBillingAccountResponse>;
  /**
   * @param billingAccountId BillingAccount ID
   * @param billingPeriodName Billing Period Name.
   * @param callback The callback
   */
  listForBillingPeriodByBillingAccount(
    billingAccountId: string,
    billingPeriodName: string,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  /**
   * @param billingAccountId BillingAccount ID
   * @param billingPeriodName Billing Period Name.
   * @param options The optional parameters
   * @param callback The callback
   */
  listForBillingPeriodByBillingAccount(
    billingAccountId: string,
    billingPeriodName: string,
    options: Models.UsageDetailsListForBillingPeriodByBillingAccountOptionalParams,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  listForBillingPeriodByBillingAccount(
    billingAccountId: string,
    billingPeriodName: string,
    options?:
      | Models.UsageDetailsListForBillingPeriodByBillingAccountOptionalParams
      | msRest.ServiceCallback<Models.UsageDetailsListResult>,
    callback?: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): Promise<Models.UsageDetailsListForBillingPeriodByBillingAccountResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountId,
        billingPeriodName,
        options
      },
      listForBillingPeriodByBillingAccountOperationSpec,
      callback
    ) as Promise<Models.UsageDetailsListForBillingPeriodByBillingAccountResponse>;
  }

  /**
   * Lists the usage details by departmentId for a scope by current billing period. Usage details are
   * available via this API only for May 1, 2014 or later.
   * @param departmentId Department ID
   * @param [options] The optional parameters
   * @returns Promise<Models.UsageDetailsListByDepartmentResponse>
   */
  listByDepartment(
    departmentId: string,
    options?: Models.UsageDetailsListByDepartmentOptionalParams
  ): Promise<Models.UsageDetailsListByDepartmentResponse>;
  /**
   * @param departmentId Department ID
   * @param callback The callback
   */
  listByDepartment(
    departmentId: string,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  /**
   * @param departmentId Department ID
   * @param options The optional parameters
   * @param callback The callback
   */
  listByDepartment(
    departmentId: string,
    options: Models.UsageDetailsListByDepartmentOptionalParams,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  listByDepartment(
    departmentId: string,
    options?:
      | Models.UsageDetailsListByDepartmentOptionalParams
      | msRest.ServiceCallback<Models.UsageDetailsListResult>,
    callback?: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): Promise<Models.UsageDetailsListByDepartmentResponse> {
    return this.client.sendOperationRequest(
      {
        departmentId,
        options
      },
      listByDepartmentOperationSpec,
      callback
    ) as Promise<Models.UsageDetailsListByDepartmentResponse>;
  }

  /**
   * Lists the usage details based on departmentId for a scope by billing period. Usage details are
   * available via this API only for May 1, 2014 or later.
   * @param departmentId Department ID
   * @param billingPeriodName Billing Period Name.
   * @param [options] The optional parameters
   * @returns Promise<Models.UsageDetailsListForBillingPeriodByDepartmentResponse>
   */
  listForBillingPeriodByDepartment(
    departmentId: string,
    billingPeriodName: string,
    options?: Models.UsageDetailsListForBillingPeriodByDepartmentOptionalParams
  ): Promise<Models.UsageDetailsListForBillingPeriodByDepartmentResponse>;
  /**
   * @param departmentId Department ID
   * @param billingPeriodName Billing Period Name.
   * @param callback The callback
   */
  listForBillingPeriodByDepartment(
    departmentId: string,
    billingPeriodName: string,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  /**
   * @param departmentId Department ID
   * @param billingPeriodName Billing Period Name.
   * @param options The optional parameters
   * @param callback The callback
   */
  listForBillingPeriodByDepartment(
    departmentId: string,
    billingPeriodName: string,
    options: Models.UsageDetailsListForBillingPeriodByDepartmentOptionalParams,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  listForBillingPeriodByDepartment(
    departmentId: string,
    billingPeriodName: string,
    options?:
      | Models.UsageDetailsListForBillingPeriodByDepartmentOptionalParams
      | msRest.ServiceCallback<Models.UsageDetailsListResult>,
    callback?: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): Promise<Models.UsageDetailsListForBillingPeriodByDepartmentResponse> {
    return this.client.sendOperationRequest(
      {
        departmentId,
        billingPeriodName,
        options
      },
      listForBillingPeriodByDepartmentOperationSpec,
      callback
    ) as Promise<Models.UsageDetailsListForBillingPeriodByDepartmentResponse>;
  }

  /**
   * Lists the usage details by enrollmentAccountId for a scope by current billing period. Usage
   * details are available via this API only for May 1, 2014 or later.
   * @param enrollmentAccountId EnrollmentAccount ID
   * @param [options] The optional parameters
   * @returns Promise<Models.UsageDetailsListByEnrollmentAccountResponse>
   */
  listByEnrollmentAccount(
    enrollmentAccountId: string,
    options?: Models.UsageDetailsListByEnrollmentAccountOptionalParams
  ): Promise<Models.UsageDetailsListByEnrollmentAccountResponse>;
  /**
   * @param enrollmentAccountId EnrollmentAccount ID
   * @param callback The callback
   */
  listByEnrollmentAccount(
    enrollmentAccountId: string,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  /**
   * @param enrollmentAccountId EnrollmentAccount ID
   * @param options The optional parameters
   * @param callback The callback
   */
  listByEnrollmentAccount(
    enrollmentAccountId: string,
    options: Models.UsageDetailsListByEnrollmentAccountOptionalParams,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  listByEnrollmentAccount(
    enrollmentAccountId: string,
    options?:
      | Models.UsageDetailsListByEnrollmentAccountOptionalParams
      | msRest.ServiceCallback<Models.UsageDetailsListResult>,
    callback?: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): Promise<Models.UsageDetailsListByEnrollmentAccountResponse> {
    return this.client.sendOperationRequest(
      {
        enrollmentAccountId,
        options
      },
      listByEnrollmentAccountOperationSpec,
      callback
    ) as Promise<Models.UsageDetailsListByEnrollmentAccountResponse>;
  }

  /**
   * Lists the usage details based on enrollmentAccountId for a scope by billing period. Usage
   * details are available via this API only for May 1, 2014 or later.
   * @param enrollmentAccountId EnrollmentAccount ID
   * @param billingPeriodName Billing Period Name.
   * @param [options] The optional parameters
   * @returns Promise<Models.UsageDetailsListForBillingPeriodByEnrollmentAccountResponse>
   */
  listForBillingPeriodByEnrollmentAccount(
    enrollmentAccountId: string,
    billingPeriodName: string,
    options?: Models.UsageDetailsListForBillingPeriodByEnrollmentAccountOptionalParams
  ): Promise<Models.UsageDetailsListForBillingPeriodByEnrollmentAccountResponse>;
  /**
   * @param enrollmentAccountId EnrollmentAccount ID
   * @param billingPeriodName Billing Period Name.
   * @param callback The callback
   */
  listForBillingPeriodByEnrollmentAccount(
    enrollmentAccountId: string,
    billingPeriodName: string,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  /**
   * @param enrollmentAccountId EnrollmentAccount ID
   * @param billingPeriodName Billing Period Name.
   * @param options The optional parameters
   * @param callback The callback
   */
  listForBillingPeriodByEnrollmentAccount(
    enrollmentAccountId: string,
    billingPeriodName: string,
    options: Models.UsageDetailsListForBillingPeriodByEnrollmentAccountOptionalParams,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  listForBillingPeriodByEnrollmentAccount(
    enrollmentAccountId: string,
    billingPeriodName: string,
    options?:
      | Models.UsageDetailsListForBillingPeriodByEnrollmentAccountOptionalParams
      | msRest.ServiceCallback<Models.UsageDetailsListResult>,
    callback?: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): Promise<Models.UsageDetailsListForBillingPeriodByEnrollmentAccountResponse> {
    return this.client.sendOperationRequest(
      {
        enrollmentAccountId,
        billingPeriodName,
        options
      },
      listForBillingPeriodByEnrollmentAccountOperationSpec,
      callback
    ) as Promise<Models.UsageDetailsListForBillingPeriodByEnrollmentAccountResponse>;
  }

  /**
   * Lists the usage detail records for all subscriptions belonging to a management group scope by
   * current billing period. Usage details are available via this API only for May 1, 2014 or later.
   * @param managementGroupId Azure Management Group ID.
   * @param [options] The optional parameters
   * @returns Promise<Models.UsageDetailsListByManagementGroupResponse>
   */
  listByManagementGroup(
    managementGroupId: string,
    options?: Models.UsageDetailsListByManagementGroupOptionalParams
  ): Promise<Models.UsageDetailsListByManagementGroupResponse>;
  /**
   * @param managementGroupId Azure Management Group ID.
   * @param callback The callback
   */
  listByManagementGroup(
    managementGroupId: string,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  /**
   * @param managementGroupId Azure Management Group ID.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByManagementGroup(
    managementGroupId: string,
    options: Models.UsageDetailsListByManagementGroupOptionalParams,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  listByManagementGroup(
    managementGroupId: string,
    options?:
      | Models.UsageDetailsListByManagementGroupOptionalParams
      | msRest.ServiceCallback<Models.UsageDetailsListResult>,
    callback?: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): Promise<Models.UsageDetailsListByManagementGroupResponse> {
    return this.client.sendOperationRequest(
      {
        managementGroupId,
        options
      },
      listByManagementGroupOperationSpec,
      callback
    ) as Promise<Models.UsageDetailsListByManagementGroupResponse>;
  }

  /**
   * Lists the usage detail records for all subscriptions belonging to a management group scope by
   * specified billing period. Usage details are available via this API only for May 1, 2014 or
   * later.
   * @param managementGroupId Azure Management Group ID.
   * @param billingPeriodName Billing Period Name.
   * @param [options] The optional parameters
   * @returns Promise<Models.UsageDetailsListForBillingPeriodByManagementGroupResponse>
   */
  listForBillingPeriodByManagementGroup(
    managementGroupId: string,
    billingPeriodName: string,
    options?: Models.UsageDetailsListForBillingPeriodByManagementGroupOptionalParams
  ): Promise<Models.UsageDetailsListForBillingPeriodByManagementGroupResponse>;
  /**
   * @param managementGroupId Azure Management Group ID.
   * @param billingPeriodName Billing Period Name.
   * @param callback The callback
   */
  listForBillingPeriodByManagementGroup(
    managementGroupId: string,
    billingPeriodName: string,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  /**
   * @param managementGroupId Azure Management Group ID.
   * @param billingPeriodName Billing Period Name.
   * @param options The optional parameters
   * @param callback The callback
   */
  listForBillingPeriodByManagementGroup(
    managementGroupId: string,
    billingPeriodName: string,
    options: Models.UsageDetailsListForBillingPeriodByManagementGroupOptionalParams,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  listForBillingPeriodByManagementGroup(
    managementGroupId: string,
    billingPeriodName: string,
    options?:
      | Models.UsageDetailsListForBillingPeriodByManagementGroupOptionalParams
      | msRest.ServiceCallback<Models.UsageDetailsListResult>,
    callback?: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): Promise<Models.UsageDetailsListForBillingPeriodByManagementGroupResponse> {
    return this.client.sendOperationRequest(
      {
        managementGroupId,
        billingPeriodName,
        options
      },
      listForBillingPeriodByManagementGroupOperationSpec,
      callback
    ) as Promise<Models.UsageDetailsListForBillingPeriodByManagementGroupResponse>;
  }

  /**
   * Lists the usage details for a scope by current billing period. Usage details are available via
   * this API only for May 1, 2014 or later.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.UsageDetailsListNextResponse>
   */
  listNext(
    nextPageLink: string,
    options?: Models.UsageDetailsListNextOptionalParams
  ): Promise<Models.UsageDetailsListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(
    nextPageLink: string,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(
    nextPageLink: string,
    options: Models.UsageDetailsListNextOptionalParams,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  listNext(
    nextPageLink: string,
    options?:
      | Models.UsageDetailsListNextOptionalParams
      | msRest.ServiceCallback<Models.UsageDetailsListResult>,
    callback?: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): Promise<Models.UsageDetailsListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback
    ) as Promise<Models.UsageDetailsListNextResponse>;
  }

  /**
   * Lists the usage details for a scope by billing period. Usage details are available via this API
   * only for May 1, 2014 or later.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.UsageDetailsListByBillingPeriodNextResponse>
   */
  listByBillingPeriodNext(
    nextPageLink: string,
    options?: Models.UsageDetailsListByBillingPeriodNextOptionalParams
  ): Promise<Models.UsageDetailsListByBillingPeriodNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByBillingPeriodNext(
    nextPageLink: string,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByBillingPeriodNext(
    nextPageLink: string,
    options: Models.UsageDetailsListByBillingPeriodNextOptionalParams,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  listByBillingPeriodNext(
    nextPageLink: string,
    options?:
      | Models.UsageDetailsListByBillingPeriodNextOptionalParams
      | msRest.ServiceCallback<Models.UsageDetailsListResult>,
    callback?: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): Promise<Models.UsageDetailsListByBillingPeriodNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByBillingPeriodNextOperationSpec,
      callback
    ) as Promise<Models.UsageDetailsListByBillingPeriodNextResponse>;
  }

  /**
   * Lists the usage details by billingAccountId for a scope by current billing period. Usage details
   * are available via this API only for May 1, 2014 or later.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.UsageDetailsListByBillingAccountNextResponse>
   */
  listByBillingAccountNext(
    nextPageLink: string,
    options?: Models.UsageDetailsListByBillingAccountNextOptionalParams
  ): Promise<Models.UsageDetailsListByBillingAccountNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByBillingAccountNext(
    nextPageLink: string,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByBillingAccountNext(
    nextPageLink: string,
    options: Models.UsageDetailsListByBillingAccountNextOptionalParams,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  listByBillingAccountNext(
    nextPageLink: string,
    options?:
      | Models.UsageDetailsListByBillingAccountNextOptionalParams
      | msRest.ServiceCallback<Models.UsageDetailsListResult>,
    callback?: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): Promise<Models.UsageDetailsListByBillingAccountNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByBillingAccountNextOperationSpec,
      callback
    ) as Promise<Models.UsageDetailsListByBillingAccountNextResponse>;
  }

  /**
   * Lists the usage details based on billingAccountId for a scope by billing period. Usage details
   * are available via this API only for May 1, 2014 or later.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.UsageDetailsListForBillingPeriodByBillingAccountNextResponse>
   */
  listForBillingPeriodByBillingAccountNext(
    nextPageLink: string,
    options?: Models.UsageDetailsListForBillingPeriodByBillingAccountNextOptionalParams
  ): Promise<Models.UsageDetailsListForBillingPeriodByBillingAccountNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listForBillingPeriodByBillingAccountNext(
    nextPageLink: string,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listForBillingPeriodByBillingAccountNext(
    nextPageLink: string,
    options: Models.UsageDetailsListForBillingPeriodByBillingAccountNextOptionalParams,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  listForBillingPeriodByBillingAccountNext(
    nextPageLink: string,
    options?:
      | Models.UsageDetailsListForBillingPeriodByBillingAccountNextOptionalParams
      | msRest.ServiceCallback<Models.UsageDetailsListResult>,
    callback?: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): Promise<Models.UsageDetailsListForBillingPeriodByBillingAccountNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listForBillingPeriodByBillingAccountNextOperationSpec,
      callback
    ) as Promise<Models.UsageDetailsListForBillingPeriodByBillingAccountNextResponse>;
  }

  /**
   * Lists the usage details by departmentId for a scope by current billing period. Usage details are
   * available via this API only for May 1, 2014 or later.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.UsageDetailsListByDepartmentNextResponse>
   */
  listByDepartmentNext(
    nextPageLink: string,
    options?: Models.UsageDetailsListByDepartmentNextOptionalParams
  ): Promise<Models.UsageDetailsListByDepartmentNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByDepartmentNext(
    nextPageLink: string,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByDepartmentNext(
    nextPageLink: string,
    options: Models.UsageDetailsListByDepartmentNextOptionalParams,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  listByDepartmentNext(
    nextPageLink: string,
    options?:
      | Models.UsageDetailsListByDepartmentNextOptionalParams
      | msRest.ServiceCallback<Models.UsageDetailsListResult>,
    callback?: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): Promise<Models.UsageDetailsListByDepartmentNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByDepartmentNextOperationSpec,
      callback
    ) as Promise<Models.UsageDetailsListByDepartmentNextResponse>;
  }

  /**
   * Lists the usage details based on departmentId for a scope by billing period. Usage details are
   * available via this API only for May 1, 2014 or later.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.UsageDetailsListForBillingPeriodByDepartmentNextResponse>
   */
  listForBillingPeriodByDepartmentNext(
    nextPageLink: string,
    options?: Models.UsageDetailsListForBillingPeriodByDepartmentNextOptionalParams
  ): Promise<Models.UsageDetailsListForBillingPeriodByDepartmentNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listForBillingPeriodByDepartmentNext(
    nextPageLink: string,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listForBillingPeriodByDepartmentNext(
    nextPageLink: string,
    options: Models.UsageDetailsListForBillingPeriodByDepartmentNextOptionalParams,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  listForBillingPeriodByDepartmentNext(
    nextPageLink: string,
    options?:
      | Models.UsageDetailsListForBillingPeriodByDepartmentNextOptionalParams
      | msRest.ServiceCallback<Models.UsageDetailsListResult>,
    callback?: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): Promise<Models.UsageDetailsListForBillingPeriodByDepartmentNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listForBillingPeriodByDepartmentNextOperationSpec,
      callback
    ) as Promise<Models.UsageDetailsListForBillingPeriodByDepartmentNextResponse>;
  }

  /**
   * Lists the usage details by enrollmentAccountId for a scope by current billing period. Usage
   * details are available via this API only for May 1, 2014 or later.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.UsageDetailsListByEnrollmentAccountNextResponse>
   */
  listByEnrollmentAccountNext(
    nextPageLink: string,
    options?: Models.UsageDetailsListByEnrollmentAccountNextOptionalParams
  ): Promise<Models.UsageDetailsListByEnrollmentAccountNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByEnrollmentAccountNext(
    nextPageLink: string,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByEnrollmentAccountNext(
    nextPageLink: string,
    options: Models.UsageDetailsListByEnrollmentAccountNextOptionalParams,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  listByEnrollmentAccountNext(
    nextPageLink: string,
    options?:
      | Models.UsageDetailsListByEnrollmentAccountNextOptionalParams
      | msRest.ServiceCallback<Models.UsageDetailsListResult>,
    callback?: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): Promise<Models.UsageDetailsListByEnrollmentAccountNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByEnrollmentAccountNextOperationSpec,
      callback
    ) as Promise<Models.UsageDetailsListByEnrollmentAccountNextResponse>;
  }

  /**
   * Lists the usage details based on enrollmentAccountId for a scope by billing period. Usage
   * details are available via this API only for May 1, 2014 or later.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.UsageDetailsListForBillingPeriodByEnrollmentAccountNextResponse>
   */
  listForBillingPeriodByEnrollmentAccountNext(
    nextPageLink: string,
    options?: Models.UsageDetailsListForBillingPeriodByEnrollmentAccountNextOptionalParams
  ): Promise<Models.UsageDetailsListForBillingPeriodByEnrollmentAccountNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listForBillingPeriodByEnrollmentAccountNext(
    nextPageLink: string,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listForBillingPeriodByEnrollmentAccountNext(
    nextPageLink: string,
    options: Models.UsageDetailsListForBillingPeriodByEnrollmentAccountNextOptionalParams,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  listForBillingPeriodByEnrollmentAccountNext(
    nextPageLink: string,
    options?:
      | Models.UsageDetailsListForBillingPeriodByEnrollmentAccountNextOptionalParams
      | msRest.ServiceCallback<Models.UsageDetailsListResult>,
    callback?: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): Promise<Models.UsageDetailsListForBillingPeriodByEnrollmentAccountNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listForBillingPeriodByEnrollmentAccountNextOperationSpec,
      callback
    ) as Promise<Models.UsageDetailsListForBillingPeriodByEnrollmentAccountNextResponse>;
  }

  /**
   * Lists the usage detail records for all subscriptions belonging to a management group scope by
   * current billing period. Usage details are available via this API only for May 1, 2014 or later.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.UsageDetailsListByManagementGroupNextResponse>
   */
  listByManagementGroupNext(
    nextPageLink: string,
    options?: Models.UsageDetailsListByManagementGroupNextOptionalParams
  ): Promise<Models.UsageDetailsListByManagementGroupNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByManagementGroupNext(
    nextPageLink: string,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByManagementGroupNext(
    nextPageLink: string,
    options: Models.UsageDetailsListByManagementGroupNextOptionalParams,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  listByManagementGroupNext(
    nextPageLink: string,
    options?:
      | Models.UsageDetailsListByManagementGroupNextOptionalParams
      | msRest.ServiceCallback<Models.UsageDetailsListResult>,
    callback?: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): Promise<Models.UsageDetailsListByManagementGroupNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByManagementGroupNextOperationSpec,
      callback
    ) as Promise<Models.UsageDetailsListByManagementGroupNextResponse>;
  }

  /**
   * Lists the usage detail records for all subscriptions belonging to a management group scope by
   * specified billing period. Usage details are available via this API only for May 1, 2014 or
   * later.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.UsageDetailsListForBillingPeriodByManagementGroupNextResponse>
   */
  listForBillingPeriodByManagementGroupNext(
    nextPageLink: string,
    options?: Models.UsageDetailsListForBillingPeriodByManagementGroupNextOptionalParams
  ): Promise<Models.UsageDetailsListForBillingPeriodByManagementGroupNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listForBillingPeriodByManagementGroupNext(
    nextPageLink: string,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listForBillingPeriodByManagementGroupNext(
    nextPageLink: string,
    options: Models.UsageDetailsListForBillingPeriodByManagementGroupNextOptionalParams,
    callback: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): void;
  listForBillingPeriodByManagementGroupNext(
    nextPageLink: string,
    options?:
      | Models.UsageDetailsListForBillingPeriodByManagementGroupNextOptionalParams
      | msRest.ServiceCallback<Models.UsageDetailsListResult>,
    callback?: msRest.ServiceCallback<Models.UsageDetailsListResult>
  ): Promise<Models.UsageDetailsListForBillingPeriodByManagementGroupNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listForBillingPeriodByManagementGroupNextOperationSpec,
      callback
    ) as Promise<Models.UsageDetailsListForBillingPeriodByManagementGroupNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.Consumption/usageDetails",
  urlParameters: [Parameters.subscriptionId],
  queryParameters: [
    Parameters.expand,
    Parameters.filter0,
    Parameters.skiptoken,
    Parameters.top,
    Parameters.apiVersion,
    Parameters.apply
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.UsageDetailsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByBillingPeriodOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path:
    "subscriptions/{subscriptionId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/usageDetails",
  urlParameters: [Parameters.subscriptionId, Parameters.billingPeriodName],
  queryParameters: [
    Parameters.expand,
    Parameters.filter0,
    Parameters.skiptoken,
    Parameters.top,
    Parameters.apiVersion,
    Parameters.apply
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.UsageDetailsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByBillingAccountOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path:
    "providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/usageDetails",
  urlParameters: [Parameters.billingAccountId],
  queryParameters: [
    Parameters.expand,
    Parameters.filter0,
    Parameters.skiptoken,
    Parameters.top,
    Parameters.apiVersion,
    Parameters.apply
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.UsageDetailsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listForBillingPeriodByBillingAccountOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path:
    "providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/usageDetails",
  urlParameters: [Parameters.billingAccountId, Parameters.billingPeriodName],
  queryParameters: [
    Parameters.expand,
    Parameters.filter0,
    Parameters.skiptoken,
    Parameters.top,
    Parameters.apiVersion,
    Parameters.apply
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.UsageDetailsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByDepartmentOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path:
    "providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.Consumption/usageDetails",
  urlParameters: [Parameters.departmentId],
  queryParameters: [
    Parameters.expand,
    Parameters.filter0,
    Parameters.skiptoken,
    Parameters.top,
    Parameters.apiVersion,
    Parameters.apply
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.UsageDetailsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listForBillingPeriodByDepartmentOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path:
    "providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/usageDetails",
  urlParameters: [Parameters.departmentId, Parameters.billingPeriodName],
  queryParameters: [
    Parameters.expand,
    Parameters.filter0,
    Parameters.skiptoken,
    Parameters.top,
    Parameters.apiVersion,
    Parameters.apply
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.UsageDetailsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByEnrollmentAccountOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path:
    "providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}/providers/Microsoft.Consumption/usageDetails",
  urlParameters: [Parameters.enrollmentAccountId],
  queryParameters: [
    Parameters.expand,
    Parameters.filter0,
    Parameters.skiptoken,
    Parameters.top,
    Parameters.apiVersion,
    Parameters.apply
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.UsageDetailsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listForBillingPeriodByEnrollmentAccountOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path:
    "providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/usageDetails",
  urlParameters: [Parameters.enrollmentAccountId, Parameters.billingPeriodName],
  queryParameters: [
    Parameters.expand,
    Parameters.filter0,
    Parameters.skiptoken,
    Parameters.top,
    Parameters.apiVersion,
    Parameters.apply
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.UsageDetailsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByManagementGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path:
    "providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Consumption/usageDetails",
  urlParameters: [Parameters.managementGroupId],
  queryParameters: [
    Parameters.expand,
    Parameters.filter0,
    Parameters.skiptoken,
    Parameters.top,
    Parameters.apiVersion,
    Parameters.apply
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.UsageDetailsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listForBillingPeriodByManagementGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path:
    "providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/usageDetails",
  urlParameters: [Parameters.managementGroupId, Parameters.billingPeriodName],
  queryParameters: [
    Parameters.expand,
    Parameters.filter0,
    Parameters.skiptoken,
    Parameters.top,
    Parameters.apiVersion,
    Parameters.apply
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.UsageDetailsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [Parameters.nextPageLink],
  queryParameters: [
    Parameters.expand,
    Parameters.filter0,
    Parameters.skiptoken,
    Parameters.top,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.UsageDetailsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByBillingPeriodNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [Parameters.nextPageLink],
  queryParameters: [
    Parameters.expand,
    Parameters.filter0,
    Parameters.skiptoken,
    Parameters.top,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.UsageDetailsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByBillingAccountNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [Parameters.nextPageLink],
  queryParameters: [
    Parameters.expand,
    Parameters.filter0,
    Parameters.skiptoken,
    Parameters.top,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.UsageDetailsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listForBillingPeriodByBillingAccountNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [Parameters.nextPageLink],
  queryParameters: [
    Parameters.expand,
    Parameters.filter0,
    Parameters.skiptoken,
    Parameters.top,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.UsageDetailsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByDepartmentNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [Parameters.nextPageLink],
  queryParameters: [
    Parameters.expand,
    Parameters.filter0,
    Parameters.skiptoken,
    Parameters.top,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.UsageDetailsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listForBillingPeriodByDepartmentNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [Parameters.nextPageLink],
  queryParameters: [
    Parameters.expand,
    Parameters.filter0,
    Parameters.skiptoken,
    Parameters.top,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.UsageDetailsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByEnrollmentAccountNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [Parameters.nextPageLink],
  queryParameters: [
    Parameters.expand,
    Parameters.filter0,
    Parameters.skiptoken,
    Parameters.top,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.UsageDetailsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listForBillingPeriodByEnrollmentAccountNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [Parameters.nextPageLink],
  queryParameters: [
    Parameters.expand,
    Parameters.filter0,
    Parameters.skiptoken,
    Parameters.top,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.UsageDetailsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByManagementGroupNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [Parameters.nextPageLink],
  queryParameters: [
    Parameters.expand,
    Parameters.filter0,
    Parameters.skiptoken,
    Parameters.top,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.UsageDetailsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listForBillingPeriodByManagementGroupNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [Parameters.nextPageLink],
  queryParameters: [
    Parameters.expand,
    Parameters.filter0,
    Parameters.skiptoken,
    Parameters.top,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.UsageDetailsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
