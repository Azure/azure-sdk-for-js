/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/marketplacesMappers";
import * as Parameters from "../models/parameters";
import { ConsumptionManagementClientContext } from "../consumptionManagementClientContext";

/** Class representing a Marketplaces. */
export class Marketplaces {
  private readonly client: ConsumptionManagementClientContext;

  /**
   * Create a Marketplaces.
   * @param {ConsumptionManagementClientContext} client Reference to the service client.
   */
  constructor(client: ConsumptionManagementClientContext) {
    this.client = client;
  }

  /**
   * Lists the marketplaces for a scope by subscriptionId and current billing period. Marketplaces
   * are available via this API only for May 1, 2014 or later.
   * @param [options] The optional parameters
   * @returns Promise<Models.MarketplacesListResponse>
   */
  list(options?: Models.MarketplacesListOptionalParams): Promise<Models.MarketplacesListResponse>;
  /**
   * @param callback The callback
   */
  list(callback: msRest.ServiceCallback<Models.MarketplacesListResult>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  list(
    options: Models.MarketplacesListOptionalParams,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  list(
    options?:
      | Models.MarketplacesListOptionalParams
      | msRest.ServiceCallback<Models.MarketplacesListResult>,
    callback?: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): Promise<Models.MarketplacesListResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listOperationSpec,
      callback
    ) as Promise<Models.MarketplacesListResponse>;
  }

  /**
   * Lists the marketplaces for a scope by billing period and subscriptionId. Marketplaces are
   * available via this API only for May 1, 2014 or later.
   * @param billingPeriodName Billing Period Name.
   * @param [options] The optional parameters
   * @returns Promise<Models.MarketplacesListByBillingPeriodResponse>
   */
  listByBillingPeriod(
    billingPeriodName: string,
    options?: Models.MarketplacesListByBillingPeriodOptionalParams
  ): Promise<Models.MarketplacesListByBillingPeriodResponse>;
  /**
   * @param billingPeriodName Billing Period Name.
   * @param callback The callback
   */
  listByBillingPeriod(
    billingPeriodName: string,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  /**
   * @param billingPeriodName Billing Period Name.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByBillingPeriod(
    billingPeriodName: string,
    options: Models.MarketplacesListByBillingPeriodOptionalParams,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  listByBillingPeriod(
    billingPeriodName: string,
    options?:
      | Models.MarketplacesListByBillingPeriodOptionalParams
      | msRest.ServiceCallback<Models.MarketplacesListResult>,
    callback?: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): Promise<Models.MarketplacesListByBillingPeriodResponse> {
    return this.client.sendOperationRequest(
      {
        billingPeriodName,
        options
      },
      listByBillingPeriodOperationSpec,
      callback
    ) as Promise<Models.MarketplacesListByBillingPeriodResponse>;
  }

  /**
   * Lists the marketplaces for a scope by billingAccountId and current billing period. Marketplaces
   * are available via this API only for May 1, 2014 or later.
   * @param billingAccountId BillingAccount ID
   * @param [options] The optional parameters
   * @returns Promise<Models.MarketplacesListByBillingAccountResponse>
   */
  listByBillingAccount(
    billingAccountId: string,
    options?: Models.MarketplacesListByBillingAccountOptionalParams
  ): Promise<Models.MarketplacesListByBillingAccountResponse>;
  /**
   * @param billingAccountId BillingAccount ID
   * @param callback The callback
   */
  listByBillingAccount(
    billingAccountId: string,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  /**
   * @param billingAccountId BillingAccount ID
   * @param options The optional parameters
   * @param callback The callback
   */
  listByBillingAccount(
    billingAccountId: string,
    options: Models.MarketplacesListByBillingAccountOptionalParams,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  listByBillingAccount(
    billingAccountId: string,
    options?:
      | Models.MarketplacesListByBillingAccountOptionalParams
      | msRest.ServiceCallback<Models.MarketplacesListResult>,
    callback?: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): Promise<Models.MarketplacesListByBillingAccountResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountId,
        options
      },
      listByBillingAccountOperationSpec,
      callback
    ) as Promise<Models.MarketplacesListByBillingAccountResponse>;
  }

  /**
   * Lists the marketplaces for a scope by billing period and billingAccountId. Marketplaces are
   * available via this API only for May 1, 2014 or later.
   * @param billingAccountId BillingAccount ID
   * @param billingPeriodName Billing Period Name.
   * @param [options] The optional parameters
   * @returns Promise<Models.MarketplacesListForBillingPeriodByBillingAccountResponse>
   */
  listForBillingPeriodByBillingAccount(
    billingAccountId: string,
    billingPeriodName: string,
    options?: Models.MarketplacesListForBillingPeriodByBillingAccountOptionalParams
  ): Promise<Models.MarketplacesListForBillingPeriodByBillingAccountResponse>;
  /**
   * @param billingAccountId BillingAccount ID
   * @param billingPeriodName Billing Period Name.
   * @param callback The callback
   */
  listForBillingPeriodByBillingAccount(
    billingAccountId: string,
    billingPeriodName: string,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  /**
   * @param billingAccountId BillingAccount ID
   * @param billingPeriodName Billing Period Name.
   * @param options The optional parameters
   * @param callback The callback
   */
  listForBillingPeriodByBillingAccount(
    billingAccountId: string,
    billingPeriodName: string,
    options: Models.MarketplacesListForBillingPeriodByBillingAccountOptionalParams,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  listForBillingPeriodByBillingAccount(
    billingAccountId: string,
    billingPeriodName: string,
    options?:
      | Models.MarketplacesListForBillingPeriodByBillingAccountOptionalParams
      | msRest.ServiceCallback<Models.MarketplacesListResult>,
    callback?: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): Promise<Models.MarketplacesListForBillingPeriodByBillingAccountResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountId,
        billingPeriodName,
        options
      },
      listForBillingPeriodByBillingAccountOperationSpec,
      callback
    ) as Promise<Models.MarketplacesListForBillingPeriodByBillingAccountResponse>;
  }

  /**
   * Lists the marketplaces for a scope by departmentId and current billing period. Marketplaces are
   * available via this API only for May 1, 2014 or later.
   * @param departmentId Department ID
   * @param [options] The optional parameters
   * @returns Promise<Models.MarketplacesListByDepartmentResponse>
   */
  listByDepartment(
    departmentId: string,
    options?: Models.MarketplacesListByDepartmentOptionalParams
  ): Promise<Models.MarketplacesListByDepartmentResponse>;
  /**
   * @param departmentId Department ID
   * @param callback The callback
   */
  listByDepartment(
    departmentId: string,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  /**
   * @param departmentId Department ID
   * @param options The optional parameters
   * @param callback The callback
   */
  listByDepartment(
    departmentId: string,
    options: Models.MarketplacesListByDepartmentOptionalParams,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  listByDepartment(
    departmentId: string,
    options?:
      | Models.MarketplacesListByDepartmentOptionalParams
      | msRest.ServiceCallback<Models.MarketplacesListResult>,
    callback?: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): Promise<Models.MarketplacesListByDepartmentResponse> {
    return this.client.sendOperationRequest(
      {
        departmentId,
        options
      },
      listByDepartmentOperationSpec,
      callback
    ) as Promise<Models.MarketplacesListByDepartmentResponse>;
  }

  /**
   * Lists the marketplaces for a scope by billing period and departmentId. Marketplaces are
   * available via this API only for May 1, 2014 or later.
   * @param departmentId Department ID
   * @param billingPeriodName Billing Period Name.
   * @param [options] The optional parameters
   * @returns Promise<Models.MarketplacesListForBillingPeriodByDepartmentResponse>
   */
  listForBillingPeriodByDepartment(
    departmentId: string,
    billingPeriodName: string,
    options?: Models.MarketplacesListForBillingPeriodByDepartmentOptionalParams
  ): Promise<Models.MarketplacesListForBillingPeriodByDepartmentResponse>;
  /**
   * @param departmentId Department ID
   * @param billingPeriodName Billing Period Name.
   * @param callback The callback
   */
  listForBillingPeriodByDepartment(
    departmentId: string,
    billingPeriodName: string,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  /**
   * @param departmentId Department ID
   * @param billingPeriodName Billing Period Name.
   * @param options The optional parameters
   * @param callback The callback
   */
  listForBillingPeriodByDepartment(
    departmentId: string,
    billingPeriodName: string,
    options: Models.MarketplacesListForBillingPeriodByDepartmentOptionalParams,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  listForBillingPeriodByDepartment(
    departmentId: string,
    billingPeriodName: string,
    options?:
      | Models.MarketplacesListForBillingPeriodByDepartmentOptionalParams
      | msRest.ServiceCallback<Models.MarketplacesListResult>,
    callback?: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): Promise<Models.MarketplacesListForBillingPeriodByDepartmentResponse> {
    return this.client.sendOperationRequest(
      {
        departmentId,
        billingPeriodName,
        options
      },
      listForBillingPeriodByDepartmentOperationSpec,
      callback
    ) as Promise<Models.MarketplacesListForBillingPeriodByDepartmentResponse>;
  }

  /**
   * Lists the marketplaces for a scope by enrollmentAccountId and current billing period.
   * Marketplaces are available via this API only for May 1, 2014 or later.
   * @param enrollmentAccountId EnrollmentAccount ID
   * @param [options] The optional parameters
   * @returns Promise<Models.MarketplacesListByEnrollmentAccountResponse>
   */
  listByEnrollmentAccount(
    enrollmentAccountId: string,
    options?: Models.MarketplacesListByEnrollmentAccountOptionalParams
  ): Promise<Models.MarketplacesListByEnrollmentAccountResponse>;
  /**
   * @param enrollmentAccountId EnrollmentAccount ID
   * @param callback The callback
   */
  listByEnrollmentAccount(
    enrollmentAccountId: string,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  /**
   * @param enrollmentAccountId EnrollmentAccount ID
   * @param options The optional parameters
   * @param callback The callback
   */
  listByEnrollmentAccount(
    enrollmentAccountId: string,
    options: Models.MarketplacesListByEnrollmentAccountOptionalParams,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  listByEnrollmentAccount(
    enrollmentAccountId: string,
    options?:
      | Models.MarketplacesListByEnrollmentAccountOptionalParams
      | msRest.ServiceCallback<Models.MarketplacesListResult>,
    callback?: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): Promise<Models.MarketplacesListByEnrollmentAccountResponse> {
    return this.client.sendOperationRequest(
      {
        enrollmentAccountId,
        options
      },
      listByEnrollmentAccountOperationSpec,
      callback
    ) as Promise<Models.MarketplacesListByEnrollmentAccountResponse>;
  }

  /**
   * Lists the marketplaces for a scope by billing period and enrollmentAccountId. Marketplaces are
   * available via this API only for May 1, 2014 or later.
   * @param enrollmentAccountId EnrollmentAccount ID
   * @param billingPeriodName Billing Period Name.
   * @param [options] The optional parameters
   * @returns Promise<Models.MarketplacesListForBillingPeriodByEnrollmentAccountResponse>
   */
  listForBillingPeriodByEnrollmentAccount(
    enrollmentAccountId: string,
    billingPeriodName: string,
    options?: Models.MarketplacesListForBillingPeriodByEnrollmentAccountOptionalParams
  ): Promise<Models.MarketplacesListForBillingPeriodByEnrollmentAccountResponse>;
  /**
   * @param enrollmentAccountId EnrollmentAccount ID
   * @param billingPeriodName Billing Period Name.
   * @param callback The callback
   */
  listForBillingPeriodByEnrollmentAccount(
    enrollmentAccountId: string,
    billingPeriodName: string,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  /**
   * @param enrollmentAccountId EnrollmentAccount ID
   * @param billingPeriodName Billing Period Name.
   * @param options The optional parameters
   * @param callback The callback
   */
  listForBillingPeriodByEnrollmentAccount(
    enrollmentAccountId: string,
    billingPeriodName: string,
    options: Models.MarketplacesListForBillingPeriodByEnrollmentAccountOptionalParams,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  listForBillingPeriodByEnrollmentAccount(
    enrollmentAccountId: string,
    billingPeriodName: string,
    options?:
      | Models.MarketplacesListForBillingPeriodByEnrollmentAccountOptionalParams
      | msRest.ServiceCallback<Models.MarketplacesListResult>,
    callback?: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): Promise<Models.MarketplacesListForBillingPeriodByEnrollmentAccountResponse> {
    return this.client.sendOperationRequest(
      {
        enrollmentAccountId,
        billingPeriodName,
        options
      },
      listForBillingPeriodByEnrollmentAccountOperationSpec,
      callback
    ) as Promise<Models.MarketplacesListForBillingPeriodByEnrollmentAccountResponse>;
  }

  /**
   * Lists the marketplace records for all subscriptions belonging to a management group scope by
   * current billing period. Marketplaces are available via this API only for May 1, 2014 or later.
   * @param managementGroupId Azure Management Group ID.
   * @param [options] The optional parameters
   * @returns Promise<Models.MarketplacesListByManagementGroupResponse>
   */
  listByManagementGroup(
    managementGroupId: string,
    options?: Models.MarketplacesListByManagementGroupOptionalParams
  ): Promise<Models.MarketplacesListByManagementGroupResponse>;
  /**
   * @param managementGroupId Azure Management Group ID.
   * @param callback The callback
   */
  listByManagementGroup(
    managementGroupId: string,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  /**
   * @param managementGroupId Azure Management Group ID.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByManagementGroup(
    managementGroupId: string,
    options: Models.MarketplacesListByManagementGroupOptionalParams,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  listByManagementGroup(
    managementGroupId: string,
    options?:
      | Models.MarketplacesListByManagementGroupOptionalParams
      | msRest.ServiceCallback<Models.MarketplacesListResult>,
    callback?: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): Promise<Models.MarketplacesListByManagementGroupResponse> {
    return this.client.sendOperationRequest(
      {
        managementGroupId,
        options
      },
      listByManagementGroupOperationSpec,
      callback
    ) as Promise<Models.MarketplacesListByManagementGroupResponse>;
  }

  /**
   * Lists the marketplace records for all subscriptions belonging to a management group scope by
   * specified billing period. Marketplaces are available via this API only for May 1, 2014 or later.
   * @param managementGroupId Azure Management Group ID.
   * @param billingPeriodName Billing Period Name.
   * @param [options] The optional parameters
   * @returns Promise<Models.MarketplacesListForBillingPeriodByManagementGroupResponse>
   */
  listForBillingPeriodByManagementGroup(
    managementGroupId: string,
    billingPeriodName: string,
    options?: Models.MarketplacesListForBillingPeriodByManagementGroupOptionalParams
  ): Promise<Models.MarketplacesListForBillingPeriodByManagementGroupResponse>;
  /**
   * @param managementGroupId Azure Management Group ID.
   * @param billingPeriodName Billing Period Name.
   * @param callback The callback
   */
  listForBillingPeriodByManagementGroup(
    managementGroupId: string,
    billingPeriodName: string,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  /**
   * @param managementGroupId Azure Management Group ID.
   * @param billingPeriodName Billing Period Name.
   * @param options The optional parameters
   * @param callback The callback
   */
  listForBillingPeriodByManagementGroup(
    managementGroupId: string,
    billingPeriodName: string,
    options: Models.MarketplacesListForBillingPeriodByManagementGroupOptionalParams,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  listForBillingPeriodByManagementGroup(
    managementGroupId: string,
    billingPeriodName: string,
    options?:
      | Models.MarketplacesListForBillingPeriodByManagementGroupOptionalParams
      | msRest.ServiceCallback<Models.MarketplacesListResult>,
    callback?: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): Promise<Models.MarketplacesListForBillingPeriodByManagementGroupResponse> {
    return this.client.sendOperationRequest(
      {
        managementGroupId,
        billingPeriodName,
        options
      },
      listForBillingPeriodByManagementGroupOperationSpec,
      callback
    ) as Promise<Models.MarketplacesListForBillingPeriodByManagementGroupResponse>;
  }

  /**
   * Lists the marketplaces for a scope by subscriptionId and current billing period. Marketplaces
   * are available via this API only for May 1, 2014 or later.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.MarketplacesListNextResponse>
   */
  listNext(
    nextPageLink: string,
    options?: Models.MarketplacesListNextOptionalParams
  ): Promise<Models.MarketplacesListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(
    nextPageLink: string,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(
    nextPageLink: string,
    options: Models.MarketplacesListNextOptionalParams,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  listNext(
    nextPageLink: string,
    options?:
      | Models.MarketplacesListNextOptionalParams
      | msRest.ServiceCallback<Models.MarketplacesListResult>,
    callback?: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): Promise<Models.MarketplacesListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback
    ) as Promise<Models.MarketplacesListNextResponse>;
  }

  /**
   * Lists the marketplaces for a scope by billing period and subscriptionId. Marketplaces are
   * available via this API only for May 1, 2014 or later.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.MarketplacesListByBillingPeriodNextResponse>
   */
  listByBillingPeriodNext(
    nextPageLink: string,
    options?: Models.MarketplacesListByBillingPeriodNextOptionalParams
  ): Promise<Models.MarketplacesListByBillingPeriodNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByBillingPeriodNext(
    nextPageLink: string,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByBillingPeriodNext(
    nextPageLink: string,
    options: Models.MarketplacesListByBillingPeriodNextOptionalParams,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  listByBillingPeriodNext(
    nextPageLink: string,
    options?:
      | Models.MarketplacesListByBillingPeriodNextOptionalParams
      | msRest.ServiceCallback<Models.MarketplacesListResult>,
    callback?: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): Promise<Models.MarketplacesListByBillingPeriodNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByBillingPeriodNextOperationSpec,
      callback
    ) as Promise<Models.MarketplacesListByBillingPeriodNextResponse>;
  }

  /**
   * Lists the marketplaces for a scope by billingAccountId and current billing period. Marketplaces
   * are available via this API only for May 1, 2014 or later.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.MarketplacesListByBillingAccountNextResponse>
   */
  listByBillingAccountNext(
    nextPageLink: string,
    options?: Models.MarketplacesListByBillingAccountNextOptionalParams
  ): Promise<Models.MarketplacesListByBillingAccountNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByBillingAccountNext(
    nextPageLink: string,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByBillingAccountNext(
    nextPageLink: string,
    options: Models.MarketplacesListByBillingAccountNextOptionalParams,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  listByBillingAccountNext(
    nextPageLink: string,
    options?:
      | Models.MarketplacesListByBillingAccountNextOptionalParams
      | msRest.ServiceCallback<Models.MarketplacesListResult>,
    callback?: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): Promise<Models.MarketplacesListByBillingAccountNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByBillingAccountNextOperationSpec,
      callback
    ) as Promise<Models.MarketplacesListByBillingAccountNextResponse>;
  }

  /**
   * Lists the marketplaces for a scope by billing period and billingAccountId. Marketplaces are
   * available via this API only for May 1, 2014 or later.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.MarketplacesListForBillingPeriodByBillingAccountNextResponse>
   */
  listForBillingPeriodByBillingAccountNext(
    nextPageLink: string,
    options?: Models.MarketplacesListForBillingPeriodByBillingAccountNextOptionalParams
  ): Promise<Models.MarketplacesListForBillingPeriodByBillingAccountNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listForBillingPeriodByBillingAccountNext(
    nextPageLink: string,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listForBillingPeriodByBillingAccountNext(
    nextPageLink: string,
    options: Models.MarketplacesListForBillingPeriodByBillingAccountNextOptionalParams,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  listForBillingPeriodByBillingAccountNext(
    nextPageLink: string,
    options?:
      | Models.MarketplacesListForBillingPeriodByBillingAccountNextOptionalParams
      | msRest.ServiceCallback<Models.MarketplacesListResult>,
    callback?: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): Promise<Models.MarketplacesListForBillingPeriodByBillingAccountNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listForBillingPeriodByBillingAccountNextOperationSpec,
      callback
    ) as Promise<Models.MarketplacesListForBillingPeriodByBillingAccountNextResponse>;
  }

  /**
   * Lists the marketplaces for a scope by departmentId and current billing period. Marketplaces are
   * available via this API only for May 1, 2014 or later.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.MarketplacesListByDepartmentNextResponse>
   */
  listByDepartmentNext(
    nextPageLink: string,
    options?: Models.MarketplacesListByDepartmentNextOptionalParams
  ): Promise<Models.MarketplacesListByDepartmentNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByDepartmentNext(
    nextPageLink: string,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByDepartmentNext(
    nextPageLink: string,
    options: Models.MarketplacesListByDepartmentNextOptionalParams,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  listByDepartmentNext(
    nextPageLink: string,
    options?:
      | Models.MarketplacesListByDepartmentNextOptionalParams
      | msRest.ServiceCallback<Models.MarketplacesListResult>,
    callback?: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): Promise<Models.MarketplacesListByDepartmentNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByDepartmentNextOperationSpec,
      callback
    ) as Promise<Models.MarketplacesListByDepartmentNextResponse>;
  }

  /**
   * Lists the marketplaces for a scope by billing period and departmentId. Marketplaces are
   * available via this API only for May 1, 2014 or later.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.MarketplacesListForBillingPeriodByDepartmentNextResponse>
   */
  listForBillingPeriodByDepartmentNext(
    nextPageLink: string,
    options?: Models.MarketplacesListForBillingPeriodByDepartmentNextOptionalParams
  ): Promise<Models.MarketplacesListForBillingPeriodByDepartmentNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listForBillingPeriodByDepartmentNext(
    nextPageLink: string,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listForBillingPeriodByDepartmentNext(
    nextPageLink: string,
    options: Models.MarketplacesListForBillingPeriodByDepartmentNextOptionalParams,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  listForBillingPeriodByDepartmentNext(
    nextPageLink: string,
    options?:
      | Models.MarketplacesListForBillingPeriodByDepartmentNextOptionalParams
      | msRest.ServiceCallback<Models.MarketplacesListResult>,
    callback?: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): Promise<Models.MarketplacesListForBillingPeriodByDepartmentNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listForBillingPeriodByDepartmentNextOperationSpec,
      callback
    ) as Promise<Models.MarketplacesListForBillingPeriodByDepartmentNextResponse>;
  }

  /**
   * Lists the marketplaces for a scope by enrollmentAccountId and current billing period.
   * Marketplaces are available via this API only for May 1, 2014 or later.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.MarketplacesListByEnrollmentAccountNextResponse>
   */
  listByEnrollmentAccountNext(
    nextPageLink: string,
    options?: Models.MarketplacesListByEnrollmentAccountNextOptionalParams
  ): Promise<Models.MarketplacesListByEnrollmentAccountNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByEnrollmentAccountNext(
    nextPageLink: string,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByEnrollmentAccountNext(
    nextPageLink: string,
    options: Models.MarketplacesListByEnrollmentAccountNextOptionalParams,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  listByEnrollmentAccountNext(
    nextPageLink: string,
    options?:
      | Models.MarketplacesListByEnrollmentAccountNextOptionalParams
      | msRest.ServiceCallback<Models.MarketplacesListResult>,
    callback?: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): Promise<Models.MarketplacesListByEnrollmentAccountNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByEnrollmentAccountNextOperationSpec,
      callback
    ) as Promise<Models.MarketplacesListByEnrollmentAccountNextResponse>;
  }

  /**
   * Lists the marketplaces for a scope by billing period and enrollmentAccountId. Marketplaces are
   * available via this API only for May 1, 2014 or later.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.MarketplacesListForBillingPeriodByEnrollmentAccountNextResponse>
   */
  listForBillingPeriodByEnrollmentAccountNext(
    nextPageLink: string,
    options?: Models.MarketplacesListForBillingPeriodByEnrollmentAccountNextOptionalParams
  ): Promise<Models.MarketplacesListForBillingPeriodByEnrollmentAccountNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listForBillingPeriodByEnrollmentAccountNext(
    nextPageLink: string,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listForBillingPeriodByEnrollmentAccountNext(
    nextPageLink: string,
    options: Models.MarketplacesListForBillingPeriodByEnrollmentAccountNextOptionalParams,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  listForBillingPeriodByEnrollmentAccountNext(
    nextPageLink: string,
    options?:
      | Models.MarketplacesListForBillingPeriodByEnrollmentAccountNextOptionalParams
      | msRest.ServiceCallback<Models.MarketplacesListResult>,
    callback?: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): Promise<Models.MarketplacesListForBillingPeriodByEnrollmentAccountNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listForBillingPeriodByEnrollmentAccountNextOperationSpec,
      callback
    ) as Promise<Models.MarketplacesListForBillingPeriodByEnrollmentAccountNextResponse>;
  }

  /**
   * Lists the marketplace records for all subscriptions belonging to a management group scope by
   * current billing period. Marketplaces are available via this API only for May 1, 2014 or later.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.MarketplacesListByManagementGroupNextResponse>
   */
  listByManagementGroupNext(
    nextPageLink: string,
    options?: Models.MarketplacesListByManagementGroupNextOptionalParams
  ): Promise<Models.MarketplacesListByManagementGroupNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByManagementGroupNext(
    nextPageLink: string,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByManagementGroupNext(
    nextPageLink: string,
    options: Models.MarketplacesListByManagementGroupNextOptionalParams,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  listByManagementGroupNext(
    nextPageLink: string,
    options?:
      | Models.MarketplacesListByManagementGroupNextOptionalParams
      | msRest.ServiceCallback<Models.MarketplacesListResult>,
    callback?: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): Promise<Models.MarketplacesListByManagementGroupNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByManagementGroupNextOperationSpec,
      callback
    ) as Promise<Models.MarketplacesListByManagementGroupNextResponse>;
  }

  /**
   * Lists the marketplace records for all subscriptions belonging to a management group scope by
   * specified billing period. Marketplaces are available via this API only for May 1, 2014 or later.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.MarketplacesListForBillingPeriodByManagementGroupNextResponse>
   */
  listForBillingPeriodByManagementGroupNext(
    nextPageLink: string,
    options?: Models.MarketplacesListForBillingPeriodByManagementGroupNextOptionalParams
  ): Promise<Models.MarketplacesListForBillingPeriodByManagementGroupNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listForBillingPeriodByManagementGroupNext(
    nextPageLink: string,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listForBillingPeriodByManagementGroupNext(
    nextPageLink: string,
    options: Models.MarketplacesListForBillingPeriodByManagementGroupNextOptionalParams,
    callback: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): void;
  listForBillingPeriodByManagementGroupNext(
    nextPageLink: string,
    options?:
      | Models.MarketplacesListForBillingPeriodByManagementGroupNextOptionalParams
      | msRest.ServiceCallback<Models.MarketplacesListResult>,
    callback?: msRest.ServiceCallback<Models.MarketplacesListResult>
  ): Promise<Models.MarketplacesListForBillingPeriodByManagementGroupNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listForBillingPeriodByManagementGroupNextOperationSpec,
      callback
    ) as Promise<Models.MarketplacesListForBillingPeriodByManagementGroupNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.Consumption/marketplaces",
  urlParameters: [Parameters.subscriptionId],
  queryParameters: [
    Parameters.filter0,
    Parameters.top,
    Parameters.skiptoken,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.MarketplacesListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByBillingPeriodOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path:
    "subscriptions/{subscriptionId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/marketplaces",
  urlParameters: [Parameters.subscriptionId, Parameters.billingPeriodName],
  queryParameters: [
    Parameters.filter0,
    Parameters.top,
    Parameters.skiptoken,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.MarketplacesListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByBillingAccountOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path:
    "providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/marketplaces",
  urlParameters: [Parameters.billingAccountId],
  queryParameters: [
    Parameters.filter0,
    Parameters.top,
    Parameters.skiptoken,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.MarketplacesListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listForBillingPeriodByBillingAccountOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path:
    "providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/marketplaces",
  urlParameters: [Parameters.billingAccountId, Parameters.billingPeriodName],
  queryParameters: [
    Parameters.filter0,
    Parameters.top,
    Parameters.skiptoken,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.MarketplacesListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByDepartmentOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path:
    "providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.Consumption/marketplaces",
  urlParameters: [Parameters.departmentId],
  queryParameters: [
    Parameters.filter0,
    Parameters.top,
    Parameters.skiptoken,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.MarketplacesListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listForBillingPeriodByDepartmentOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path:
    "providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/marketplaces",
  urlParameters: [Parameters.departmentId, Parameters.billingPeriodName],
  queryParameters: [
    Parameters.filter0,
    Parameters.top,
    Parameters.skiptoken,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.MarketplacesListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByEnrollmentAccountOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path:
    "providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}/providers/Microsoft.Consumption/marketplaces",
  urlParameters: [Parameters.enrollmentAccountId],
  queryParameters: [
    Parameters.filter0,
    Parameters.top,
    Parameters.skiptoken,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.MarketplacesListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listForBillingPeriodByEnrollmentAccountOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path:
    "providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/marketplaces",
  urlParameters: [Parameters.enrollmentAccountId, Parameters.billingPeriodName],
  queryParameters: [
    Parameters.filter0,
    Parameters.top,
    Parameters.skiptoken,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.MarketplacesListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByManagementGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path:
    "providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Consumption/marketplaces",
  urlParameters: [Parameters.managementGroupId],
  queryParameters: [
    Parameters.filter0,
    Parameters.top,
    Parameters.skiptoken,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.MarketplacesListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listForBillingPeriodByManagementGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path:
    "providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/marketplaces",
  urlParameters: [Parameters.managementGroupId, Parameters.billingPeriodName],
  queryParameters: [
    Parameters.filter0,
    Parameters.top,
    Parameters.skiptoken,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.MarketplacesListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [Parameters.nextPageLink],
  queryParameters: [
    Parameters.filter0,
    Parameters.top,
    Parameters.skiptoken,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.MarketplacesListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByBillingPeriodNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [Parameters.nextPageLink],
  queryParameters: [
    Parameters.filter0,
    Parameters.top,
    Parameters.skiptoken,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.MarketplacesListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByBillingAccountNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [Parameters.nextPageLink],
  queryParameters: [
    Parameters.filter0,
    Parameters.top,
    Parameters.skiptoken,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.MarketplacesListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listForBillingPeriodByBillingAccountNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [Parameters.nextPageLink],
  queryParameters: [
    Parameters.filter0,
    Parameters.top,
    Parameters.skiptoken,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.MarketplacesListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByDepartmentNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [Parameters.nextPageLink],
  queryParameters: [
    Parameters.filter0,
    Parameters.top,
    Parameters.skiptoken,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.MarketplacesListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listForBillingPeriodByDepartmentNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [Parameters.nextPageLink],
  queryParameters: [
    Parameters.filter0,
    Parameters.top,
    Parameters.skiptoken,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.MarketplacesListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByEnrollmentAccountNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [Parameters.nextPageLink],
  queryParameters: [
    Parameters.filter0,
    Parameters.top,
    Parameters.skiptoken,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.MarketplacesListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listForBillingPeriodByEnrollmentAccountNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [Parameters.nextPageLink],
  queryParameters: [
    Parameters.filter0,
    Parameters.top,
    Parameters.skiptoken,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.MarketplacesListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByManagementGroupNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [Parameters.nextPageLink],
  queryParameters: [
    Parameters.filter0,
    Parameters.top,
    Parameters.skiptoken,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.MarketplacesListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listForBillingPeriodByManagementGroupNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [Parameters.nextPageLink],
  queryParameters: [
    Parameters.filter0,
    Parameters.top,
    Parameters.skiptoken,
    Parameters.apiVersion
  ],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.MarketplacesListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
