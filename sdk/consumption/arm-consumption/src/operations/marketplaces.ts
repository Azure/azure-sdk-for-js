/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/marketplacesMappers";
import * as Parameters from "../models/parameters";
import { ConsumptionManagementClientContext } from "../consumptionManagementClientContext";

/** Class representing a Marketplaces. */
export class Marketplaces {
  private readonly client: ConsumptionManagementClientContext;

  /**
   * Create a Marketplaces.
   * @param {ConsumptionManagementClientContext} client Reference to the service client.
   */
  constructor(client: ConsumptionManagementClientContext) {
    this.client = client;
  }

  /**
   * Lists the marketplaces for a scope at the defined scope. Marketplaces are available via this API
   * only for May 1, 2014 or later.
   * @param scope The scope associated with marketplace operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,
   * '/providers/Microsoft.Billing/departments/{departmentId}' for Department scope,
   * '/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount
   * scope and '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management
   * Group scope. For subscription, billing account, department, enrollment account and
   * ManagementGroup, you can also add billing period to the scope using
   * '/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'. For e.g. to specify billing
   * period at department scope use
   * '/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'
   * @param [options] The optional parameters
   * @returns Promise<Models.MarketplacesListResponse>
   */
  list(scope: string, options?: Models.MarketplacesListOptionalParams): Promise<Models.MarketplacesListResponse>;
  /**
   * @param scope The scope associated with marketplace operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,
   * '/providers/Microsoft.Billing/departments/{departmentId}' for Department scope,
   * '/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount
   * scope and '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management
   * Group scope. For subscription, billing account, department, enrollment account and
   * ManagementGroup, you can also add billing period to the scope using
   * '/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'. For e.g. to specify billing
   * period at department scope use
   * '/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'
   * @param callback The callback
   */
  list(scope: string, callback: msRest.ServiceCallback<Models.MarketplacesListResult>): void;
  /**
   * @param scope The scope associated with marketplace operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,
   * '/providers/Microsoft.Billing/departments/{departmentId}' for Department scope,
   * '/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount
   * scope and '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management
   * Group scope. For subscription, billing account, department, enrollment account and
   * ManagementGroup, you can also add billing period to the scope using
   * '/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'. For e.g. to specify billing
   * period at department scope use
   * '/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'
   * @param options The optional parameters
   * @param callback The callback
   */
  list(scope: string, options: Models.MarketplacesListOptionalParams, callback: msRest.ServiceCallback<Models.MarketplacesListResult>): void;
  list(scope: string, options?: Models.MarketplacesListOptionalParams | msRest.ServiceCallback<Models.MarketplacesListResult>, callback?: msRest.ServiceCallback<Models.MarketplacesListResult>): Promise<Models.MarketplacesListResponse> {
    return this.client.sendOperationRequest(
      {
        scope,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.MarketplacesListResponse>;
  }

  /**
   * Lists the marketplaces for a scope at the defined scope. Marketplaces are available via this API
   * only for May 1, 2014 or later.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.MarketplacesListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.MarketplacesListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.MarketplacesListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MarketplacesListResult>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.MarketplacesListResult>, callback?: msRest.ServiceCallback<Models.MarketplacesListResult>): Promise<Models.MarketplacesListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.MarketplacesListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "{scope}/providers/Microsoft.Consumption/marketplaces",
  urlParameters: [
    Parameters.scope
  ],
  queryParameters: [
    Parameters.filter0,
    Parameters.top,
    Parameters.skiptoken,
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.MarketplacesListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.MarketplacesListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
