/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/reservationTransactionsMappers";
import * as Parameters from "../models/parameters";
import { ConsumptionManagementClientContext } from "../consumptionManagementClientContext";

/** Class representing a ReservationTransactions. */
export class ReservationTransactions {
  private readonly client: ConsumptionManagementClientContext;

  /**
   * Create a ReservationTransactions.
   * @param {ConsumptionManagementClientContext} client Reference to the service client.
   */
  constructor(client: ConsumptionManagementClientContext) {
    this.client = client;
  }

  /**
   * List of transactions for reserved instances on billing account scope
   * @param billingAccountId BillingAccount ID
   * @param [options] The optional parameters
   * @returns Promise<Models.ReservationTransactionsListResponse>
   */
  list(billingAccountId: string, options?: Models.ReservationTransactionsListOptionalParams): Promise<Models.ReservationTransactionsListResponse>;
  /**
   * @param billingAccountId BillingAccount ID
   * @param callback The callback
   */
  list(billingAccountId: string, callback: msRest.ServiceCallback<Models.ReservationTransactionsListResult>): void;
  /**
   * @param billingAccountId BillingAccount ID
   * @param options The optional parameters
   * @param callback The callback
   */
  list(billingAccountId: string, options: Models.ReservationTransactionsListOptionalParams, callback: msRest.ServiceCallback<Models.ReservationTransactionsListResult>): void;
  list(billingAccountId: string, options?: Models.ReservationTransactionsListOptionalParams | msRest.ServiceCallback<Models.ReservationTransactionsListResult>, callback?: msRest.ServiceCallback<Models.ReservationTransactionsListResult>): Promise<Models.ReservationTransactionsListResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountId,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.ReservationTransactionsListResponse>;
  }

  /**
   * List of transactions for reserved instances on billing account scope
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReservationTransactionsListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ReservationTransactionsListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ReservationTransactionsListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ReservationTransactionsListResult>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ReservationTransactionsListResult>, callback?: msRest.ServiceCallback<Models.ReservationTransactionsListResult>): Promise<Models.ReservationTransactionsListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.ReservationTransactionsListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/reservationTransactions",
  urlParameters: [
    Parameters.billingAccountId
  ],
  queryParameters: [
    Parameters.filter0,
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ReservationTransactionsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ReservationTransactionsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
