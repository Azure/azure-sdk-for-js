/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const MeterDetails: msRest.CompositeMapper = {
  serializedName: "MeterDetails",
  type: {
    name: "Composite",
    className: "MeterDetails",
    modelProperties: {
      meterName: {
        readOnly: true,
        serializedName: "meterName",
        type: {
          name: "String"
        }
      },
      meterCategory: {
        readOnly: true,
        serializedName: "meterCategory",
        type: {
          name: "String"
        }
      },
      meterSubCategory: {
        readOnly: true,
        serializedName: "meterSubCategory",
        type: {
          name: "String"
        }
      },
      unit: {
        readOnly: true,
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      meterLocation: {
        readOnly: true,
        serializedName: "meterLocation",
        type: {
          name: "String"
        }
      },
      totalIncludedQuantity: {
        readOnly: true,
        serializedName: "totalIncludedQuantity",
        type: {
          name: "Number"
        }
      },
      pretaxStandardRate: {
        readOnly: true,
        serializedName: "pretaxStandardRate",
        type: {
          name: "Number"
        }
      },
      serviceName: {
        readOnly: true,
        serializedName: "serviceName",
        type: {
          name: "String"
        }
      },
      serviceTier: {
        readOnly: true,
        serializedName: "serviceTier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tags: {
        readOnly: true,
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const UsageDetail: msRest.CompositeMapper = {
  serializedName: "UsageDetail",
  type: {
    name: "Composite",
    className: "UsageDetail",
    modelProperties: {
      ...Resource.type.modelProperties,
      billingPeriodId: {
        readOnly: true,
        serializedName: "properties.billingPeriodId",
        type: {
          name: "String"
        }
      },
      invoiceId: {
        readOnly: true,
        serializedName: "properties.invoiceId",
        type: {
          name: "String"
        }
      },
      usageStart: {
        readOnly: true,
        serializedName: "properties.usageStart",
        type: {
          name: "DateTime"
        }
      },
      usageEnd: {
        readOnly: true,
        serializedName: "properties.usageEnd",
        type: {
          name: "DateTime"
        }
      },
      instanceName: {
        readOnly: true,
        serializedName: "properties.instanceName",
        type: {
          name: "String"
        }
      },
      instanceId: {
        readOnly: true,
        serializedName: "properties.instanceId",
        type: {
          name: "String"
        }
      },
      instanceLocation: {
        readOnly: true,
        serializedName: "properties.instanceLocation",
        type: {
          name: "String"
        }
      },
      currency: {
        readOnly: true,
        serializedName: "properties.currency",
        type: {
          name: "String"
        }
      },
      usageQuantity: {
        readOnly: true,
        serializedName: "properties.usageQuantity",
        type: {
          name: "Number"
        }
      },
      billableQuantity: {
        readOnly: true,
        serializedName: "properties.billableQuantity",
        type: {
          name: "Number"
        }
      },
      pretaxCost: {
        readOnly: true,
        serializedName: "properties.pretaxCost",
        type: {
          name: "Number"
        }
      },
      isEstimated: {
        readOnly: true,
        serializedName: "properties.isEstimated",
        type: {
          name: "Boolean"
        }
      },
      meterId: {
        readOnly: true,
        serializedName: "properties.meterId",
        type: {
          name: "Uuid"
        }
      },
      meterDetails: {
        readOnly: true,
        serializedName: "properties.meterDetails",
        type: {
          name: "Composite",
          className: "MeterDetails"
        }
      },
      subscriptionGuid: {
        readOnly: true,
        serializedName: "properties.subscriptionGuid",
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        readOnly: true,
        serializedName: "properties.subscriptionName",
        type: {
          name: "String"
        }
      },
      accountName: {
        readOnly: true,
        serializedName: "properties.accountName",
        type: {
          name: "String"
        }
      },
      departmentName: {
        readOnly: true,
        serializedName: "properties.departmentName",
        type: {
          name: "String"
        }
      },
      product: {
        readOnly: true,
        serializedName: "properties.product",
        type: {
          name: "String"
        }
      },
      consumedService: {
        readOnly: true,
        serializedName: "properties.consumedService",
        type: {
          name: "String"
        }
      },
      costCenter: {
        readOnly: true,
        serializedName: "properties.costCenter",
        type: {
          name: "String"
        }
      },
      partNumber: {
        readOnly: true,
        serializedName: "properties.partNumber",
        type: {
          name: "String"
        }
      },
      resourceGuid: {
        readOnly: true,
        serializedName: "properties.resourceGuid",
        type: {
          name: "String"
        }
      },
      offerId: {
        readOnly: true,
        serializedName: "properties.offerId",
        type: {
          name: "String"
        }
      },
      chargesBilledSeparately: {
        readOnly: true,
        serializedName: "properties.chargesBilledSeparately",
        type: {
          name: "Boolean"
        }
      },
      location: {
        readOnly: true,
        serializedName: "properties.location",
        type: {
          name: "String"
        }
      },
      additionalProperties: {
        readOnly: true,
        serializedName: "properties.additionalProperties",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Marketplace: msRest.CompositeMapper = {
  serializedName: "Marketplace",
  type: {
    name: "Composite",
    className: "Marketplace",
    modelProperties: {
      ...Resource.type.modelProperties,
      billingPeriodId: {
        readOnly: true,
        serializedName: "properties.billingPeriodId",
        type: {
          name: "String"
        }
      },
      usageStart: {
        readOnly: true,
        serializedName: "properties.usageStart",
        type: {
          name: "DateTime"
        }
      },
      usageEnd: {
        readOnly: true,
        serializedName: "properties.usageEnd",
        type: {
          name: "DateTime"
        }
      },
      resourceRate: {
        readOnly: true,
        serializedName: "properties.resourceRate",
        type: {
          name: "Number"
        }
      },
      offerName: {
        readOnly: true,
        serializedName: "properties.offerName",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        readOnly: true,
        serializedName: "properties.resourceGroup",
        type: {
          name: "String"
        }
      },
      orderNumber: {
        readOnly: true,
        serializedName: "properties.orderNumber",
        type: {
          name: "String"
        }
      },
      instanceName: {
        readOnly: true,
        serializedName: "properties.instanceName",
        type: {
          name: "String"
        }
      },
      instanceId: {
        readOnly: true,
        serializedName: "properties.instanceId",
        type: {
          name: "String"
        }
      },
      currency: {
        readOnly: true,
        serializedName: "properties.currency",
        type: {
          name: "String"
        }
      },
      consumedQuantity: {
        readOnly: true,
        serializedName: "properties.consumedQuantity",
        type: {
          name: "Number"
        }
      },
      unitOfMeasure: {
        readOnly: true,
        serializedName: "properties.unitOfMeasure",
        type: {
          name: "String"
        }
      },
      pretaxCost: {
        readOnly: true,
        serializedName: "properties.pretaxCost",
        type: {
          name: "Number"
        }
      },
      isEstimated: {
        readOnly: true,
        serializedName: "properties.isEstimated",
        type: {
          name: "Boolean"
        }
      },
      meterId: {
        readOnly: true,
        serializedName: "properties.meterId",
        type: {
          name: "Uuid"
        }
      },
      subscriptionGuid: {
        readOnly: true,
        serializedName: "properties.subscriptionGuid",
        type: {
          name: "Uuid"
        }
      },
      subscriptionName: {
        readOnly: true,
        serializedName: "properties.subscriptionName",
        type: {
          name: "String"
        }
      },
      accountName: {
        readOnly: true,
        serializedName: "properties.accountName",
        type: {
          name: "String"
        }
      },
      departmentName: {
        readOnly: true,
        serializedName: "properties.departmentName",
        type: {
          name: "String"
        }
      },
      consumedService: {
        readOnly: true,
        serializedName: "properties.consumedService",
        type: {
          name: "String"
        }
      },
      costCenter: {
        readOnly: true,
        serializedName: "properties.costCenter",
        type: {
          name: "String"
        }
      },
      additionalProperties: {
        readOnly: true,
        serializedName: "properties.additionalProperties",
        type: {
          name: "String"
        }
      },
      publisherName: {
        readOnly: true,
        serializedName: "properties.publisherName",
        type: {
          name: "String"
        }
      },
      planName: {
        readOnly: true,
        serializedName: "properties.planName",
        type: {
          name: "String"
        }
      },
      isRecurringCharge: {
        readOnly: true,
        serializedName: "properties.isRecurringCharge",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Tenant: msRest.CompositeMapper = {
  serializedName: "Tenant",
  type: {
    name: "Composite",
    className: "Tenant",
    modelProperties: {
      ...Resource.type.modelProperties,
      billingProfileName: {
        readOnly: true,
        serializedName: "properties.billingProfileName",
        type: {
          name: "String"
        }
      },
      billingAccountId: {
        readOnly: true,
        serializedName: "properties.billingAccountId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      billingAccountName: {
        readOnly: true,
        serializedName: "properties.billingAccountName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TenantListResult: msRest.CompositeMapper = {
  serializedName: "TenantListResult",
  type: {
    name: "Composite",
    className: "TenantListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Tenant"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BalancePropertiesNewPurchasesDetailsItem: msRest.CompositeMapper = {
  serializedName: "BalanceProperties_newPurchasesDetailsItem",
  type: {
    name: "Composite",
    className: "BalancePropertiesNewPurchasesDetailsItem",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const BalancePropertiesAdjustmentDetailsItem: msRest.CompositeMapper = {
  serializedName: "BalanceProperties_adjustmentDetailsItem",
  type: {
    name: "Composite",
    className: "BalancePropertiesAdjustmentDetailsItem",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Balance: msRest.CompositeMapper = {
  serializedName: "Balance",
  type: {
    name: "Composite",
    className: "Balance",
    modelProperties: {
      ...Resource.type.modelProperties,
      currency: {
        readOnly: true,
        serializedName: "properties.currency",
        type: {
          name: "String"
        }
      },
      beginningBalance: {
        readOnly: true,
        serializedName: "properties.beginningBalance",
        type: {
          name: "Number"
        }
      },
      endingBalance: {
        readOnly: true,
        serializedName: "properties.endingBalance",
        type: {
          name: "Number"
        }
      },
      newPurchases: {
        readOnly: true,
        serializedName: "properties.newPurchases",
        type: {
          name: "Number"
        }
      },
      adjustments: {
        readOnly: true,
        serializedName: "properties.adjustments",
        type: {
          name: "Number"
        }
      },
      utilized: {
        readOnly: true,
        serializedName: "properties.utilized",
        type: {
          name: "Number"
        }
      },
      serviceOverage: {
        readOnly: true,
        serializedName: "properties.serviceOverage",
        type: {
          name: "Number"
        }
      },
      chargesBilledSeparately: {
        readOnly: true,
        serializedName: "properties.chargesBilledSeparately",
        type: {
          name: "Number"
        }
      },
      totalOverage: {
        readOnly: true,
        serializedName: "properties.totalOverage",
        type: {
          name: "Number"
        }
      },
      totalUsage: {
        readOnly: true,
        serializedName: "properties.totalUsage",
        type: {
          name: "Number"
        }
      },
      azureMarketplaceServiceCharges: {
        readOnly: true,
        serializedName: "properties.azureMarketplaceServiceCharges",
        type: {
          name: "Number"
        }
      },
      billingFrequency: {
        serializedName: "properties.billingFrequency",
        type: {
          name: "String"
        }
      },
      priceHidden: {
        readOnly: true,
        serializedName: "properties.priceHidden",
        type: {
          name: "Boolean"
        }
      },
      newPurchasesDetails: {
        readOnly: true,
        serializedName: "properties.newPurchasesDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BalancePropertiesNewPurchasesDetailsItem"
            }
          }
        }
      },
      adjustmentDetails: {
        readOnly: true,
        serializedName: "properties.adjustmentDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BalancePropertiesAdjustmentDetailsItem"
            }
          }
        }
      }
    }
  }
};

export const ReservationSummary: msRest.CompositeMapper = {
  serializedName: "ReservationSummary",
  type: {
    name: "Composite",
    className: "ReservationSummary",
    modelProperties: {
      ...Resource.type.modelProperties,
      reservationOrderId: {
        readOnly: true,
        serializedName: "properties.reservationOrderId",
        type: {
          name: "String"
        }
      },
      reservationId: {
        readOnly: true,
        serializedName: "properties.reservationId",
        type: {
          name: "String"
        }
      },
      skuName: {
        readOnly: true,
        serializedName: "properties.skuName",
        type: {
          name: "String"
        }
      },
      reservedHours: {
        readOnly: true,
        serializedName: "properties.reservedHours",
        type: {
          name: "Number"
        }
      },
      usageDate: {
        readOnly: true,
        serializedName: "properties.usageDate",
        type: {
          name: "DateTime"
        }
      },
      usedHours: {
        readOnly: true,
        serializedName: "properties.usedHours",
        type: {
          name: "Number"
        }
      },
      minUtilizationPercentage: {
        readOnly: true,
        serializedName: "properties.minUtilizationPercentage",
        type: {
          name: "Number"
        }
      },
      avgUtilizationPercentage: {
        readOnly: true,
        serializedName: "properties.avgUtilizationPercentage",
        type: {
          name: "Number"
        }
      },
      maxUtilizationPercentage: {
        readOnly: true,
        serializedName: "properties.maxUtilizationPercentage",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ReservationDetail: msRest.CompositeMapper = {
  serializedName: "ReservationDetail",
  type: {
    name: "Composite",
    className: "ReservationDetail",
    modelProperties: {
      ...Resource.type.modelProperties,
      reservationOrderId: {
        readOnly: true,
        serializedName: "properties.reservationOrderId",
        type: {
          name: "String"
        }
      },
      reservationId: {
        readOnly: true,
        serializedName: "properties.reservationId",
        type: {
          name: "String"
        }
      },
      skuName: {
        readOnly: true,
        serializedName: "properties.skuName",
        type: {
          name: "String"
        }
      },
      reservedHours: {
        readOnly: true,
        serializedName: "properties.reservedHours",
        type: {
          name: "Number"
        }
      },
      usageDate: {
        readOnly: true,
        serializedName: "properties.usageDate",
        type: {
          name: "DateTime"
        }
      },
      usedHours: {
        readOnly: true,
        serializedName: "properties.usedHours",
        type: {
          name: "Number"
        }
      },
      instanceId: {
        readOnly: true,
        serializedName: "properties.instanceId",
        type: {
          name: "String"
        }
      },
      totalReservedQuantity: {
        readOnly: true,
        serializedName: "properties.totalReservedQuantity",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ReservationRecommendation: msRest.CompositeMapper = {
  serializedName: "ReservationRecommendation",
  type: {
    name: "Composite",
    className: "ReservationRecommendation",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tags: {
        readOnly: true,
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        readOnly: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      sku: {
        readOnly: true,
        serializedName: "sku",
        type: {
          name: "String"
        }
      },
      lookBackPeriod: {
        readOnly: true,
        serializedName: "properties.lookBackPeriod",
        type: {
          name: "String"
        }
      },
      meterId: {
        readOnly: true,
        serializedName: "properties.meterId",
        type: {
          name: "Uuid"
        }
      },
      term: {
        readOnly: true,
        serializedName: "properties.term",
        type: {
          name: "String"
        }
      },
      costWithNoReservedInstances: {
        readOnly: true,
        serializedName: "properties.costWithNoReservedInstances",
        type: {
          name: "Number"
        }
      },
      recommendedQuantity: {
        readOnly: true,
        serializedName: "properties.recommendedQuantity",
        type: {
          name: "Number"
        }
      },
      totalCostWithReservedInstances: {
        readOnly: true,
        serializedName: "properties.totalCostWithReservedInstances",
        type: {
          name: "Number"
        }
      },
      netSavings: {
        readOnly: true,
        serializedName: "properties.netSavings",
        type: {
          name: "Number"
        }
      },
      firstUsageDate: {
        readOnly: true,
        serializedName: "properties.firstUsageDate",
        type: {
          name: "DateTime"
        }
      },
      scope: {
        readOnly: true,
        serializedName: "properties.scope",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Tag: msRest.CompositeMapper = {
  serializedName: "Tag",
  type: {
    name: "Composite",
    className: "Tag",
    modelProperties: {
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TagsResult: msRest.CompositeMapper = {
  serializedName: "TagsResult",
  type: {
    name: "Composite",
    className: "TagsResult",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      tags: {
        serializedName: "properties.tags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Tag"
            }
          }
        }
      }
    }
  }
};

export const BudgetTimePeriod: msRest.CompositeMapper = {
  serializedName: "BudgetTimePeriod",
  type: {
    name: "Composite",
    className: "BudgetTimePeriod",
    modelProperties: {
      startDate: {
        required: true,
        serializedName: "startDate",
        type: {
          name: "DateTime"
        }
      },
      endDate: {
        serializedName: "endDate",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Filters: msRest.CompositeMapper = {
  serializedName: "Filters",
  type: {
    name: "Composite",
    className: "Filters",
    modelProperties: {
      resourceGroups: {
        serializedName: "resourceGroups",
        constraints: {
          MaxItems: 10,
          MinItems: 0
        },
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      resources: {
        serializedName: "resources",
        constraints: {
          MaxItems: 10,
          MinItems: 0
        },
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      meters: {
        serializedName: "meters",
        constraints: {
          MaxItems: 10,
          MinItems: 0
        },
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Uuid"
            }
          }
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      }
    }
  }
};

export const CurrentSpend: msRest.CompositeMapper = {
  serializedName: "CurrentSpend",
  type: {
    name: "Composite",
    className: "CurrentSpend",
    modelProperties: {
      amount: {
        readOnly: true,
        serializedName: "amount",
        type: {
          name: "Number"
        }
      },
      unit: {
        readOnly: true,
        serializedName: "unit",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Notification: msRest.CompositeMapper = {
  serializedName: "Notification",
  type: {
    name: "Composite",
    className: "Notification",
    modelProperties: {
      enabled: {
        required: true,
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      operator: {
        required: true,
        serializedName: "operator",
        type: {
          name: "String"
        }
      },
      threshold: {
        required: true,
        serializedName: "threshold",
        type: {
          name: "Number"
        }
      },
      contactEmails: {
        required: true,
        serializedName: "contactEmails",
        constraints: {
          MaxItems: 50,
          MinItems: 1
        },
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      contactRoles: {
        serializedName: "contactRoles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      contactGroups: {
        serializedName: "contactGroups",
        constraints: {
          MaxItems: 50,
          MinItems: 0
        },
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Budget: msRest.CompositeMapper = {
  serializedName: "Budget",
  type: {
    name: "Composite",
    className: "Budget",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      category: {
        required: true,
        serializedName: "properties.category",
        type: {
          name: "String"
        }
      },
      amount: {
        required: true,
        serializedName: "properties.amount",
        type: {
          name: "Number"
        }
      },
      timeGrain: {
        required: true,
        serializedName: "properties.timeGrain",
        type: {
          name: "String"
        }
      },
      timePeriod: {
        required: true,
        serializedName: "properties.timePeriod",
        type: {
          name: "Composite",
          className: "BudgetTimePeriod"
        }
      },
      filters: {
        serializedName: "properties.filters",
        type: {
          name: "Composite",
          className: "Filters"
        }
      },
      currentSpend: {
        readOnly: true,
        serializedName: "properties.currentSpend",
        type: {
          name: "Composite",
          className: "CurrentSpend"
        }
      },
      notifications: {
        serializedName: "properties.notifications",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "Notification"
            }
          }
        }
      }
    }
  }
};

export const PriceSheetProperties: msRest.CompositeMapper = {
  serializedName: "PriceSheetProperties",
  type: {
    name: "Composite",
    className: "PriceSheetProperties",
    modelProperties: {
      billingPeriodId: {
        readOnly: true,
        serializedName: "billingPeriodId",
        type: {
          name: "String"
        }
      },
      meterId: {
        readOnly: true,
        serializedName: "meterId",
        type: {
          name: "Uuid"
        }
      },
      meterDetails: {
        readOnly: true,
        serializedName: "meterDetails",
        type: {
          name: "Composite",
          className: "MeterDetails"
        }
      },
      unitOfMeasure: {
        readOnly: true,
        serializedName: "unitOfMeasure",
        type: {
          name: "String"
        }
      },
      includedQuantity: {
        readOnly: true,
        serializedName: "includedQuantity",
        type: {
          name: "Number"
        }
      },
      partNumber: {
        readOnly: true,
        serializedName: "partNumber",
        type: {
          name: "String"
        }
      },
      unitPrice: {
        readOnly: true,
        serializedName: "unitPrice",
        type: {
          name: "Number"
        }
      },
      currencyCode: {
        readOnly: true,
        serializedName: "currencyCode",
        type: {
          name: "String"
        }
      },
      offerId: {
        readOnly: true,
        serializedName: "offerId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PriceSheetResult: msRest.CompositeMapper = {
  serializedName: "PriceSheetResult",
  type: {
    name: "Composite",
    className: "PriceSheetResult",
    modelProperties: {
      ...Resource.type.modelProperties,
      pricesheets: {
        readOnly: true,
        serializedName: "properties.pricesheets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PriceSheetProperties"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "properties.nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ForecastPropertiesConfidenceLevelsItem: msRest.CompositeMapper = {
  serializedName: "ForecastProperties_confidenceLevelsItem",
  type: {
    name: "Composite",
    className: "ForecastPropertiesConfidenceLevelsItem",
    modelProperties: {
      percentage: {
        readOnly: true,
        serializedName: "percentage",
        type: {
          name: "Number"
        }
      },
      bound: {
        serializedName: "bound",
        type: {
          name: "String"
        }
      },
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Forecast: msRest.CompositeMapper = {
  serializedName: "Forecast",
  type: {
    name: "Composite",
    className: "Forecast",
    modelProperties: {
      ...Resource.type.modelProperties,
      usageDate: {
        readOnly: true,
        serializedName: "properties.usageDate",
        type: {
          name: "String"
        }
      },
      grain: {
        serializedName: "properties.grain",
        type: {
          name: "String"
        }
      },
      charge: {
        readOnly: true,
        serializedName: "properties.charge",
        type: {
          name: "Number"
        }
      },
      currency: {
        readOnly: true,
        serializedName: "properties.currency",
        type: {
          name: "String"
        }
      },
      chargeType: {
        serializedName: "properties.chargeType",
        type: {
          name: "String"
        }
      },
      confidenceLevels: {
        readOnly: true,
        serializedName: "properties.confidenceLevels",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ForecastPropertiesConfidenceLevelsItem"
            }
          }
        }
      }
    }
  }
};

export const ManagementGroupAggregatedCostResult: msRest.CompositeMapper = {
  serializedName: "ManagementGroupAggregatedCostResult",
  type: {
    name: "Composite",
    className: "ManagementGroupAggregatedCostResult",
    modelProperties: {
      ...Resource.type.modelProperties,
      billingPeriodId: {
        readOnly: true,
        serializedName: "properties.billingPeriodId",
        type: {
          name: "String"
        }
      },
      usageStart: {
        readOnly: true,
        serializedName: "properties.usageStart",
        type: {
          name: "DateTime"
        }
      },
      usageEnd: {
        readOnly: true,
        serializedName: "properties.usageEnd",
        type: {
          name: "DateTime"
        }
      },
      azureCharges: {
        readOnly: true,
        serializedName: "properties.azureCharges",
        type: {
          name: "Number"
        }
      },
      marketplaceCharges: {
        readOnly: true,
        serializedName: "properties.marketplaceCharges",
        type: {
          name: "Number"
        }
      },
      chargesBilledSeparately: {
        readOnly: true,
        serializedName: "properties.chargesBilledSeparately",
        type: {
          name: "Number"
        }
      },
      currency: {
        readOnly: true,
        serializedName: "properties.currency",
        type: {
          name: "String"
        }
      },
      children: {
        serializedName: "properties.children",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagementGroupAggregatedCostResult"
            }
          }
        }
      },
      includedSubscriptions: {
        serializedName: "properties.includedSubscriptions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      excludedSubscriptions: {
        serializedName: "properties.excludedSubscriptions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ChargeSummary: msRest.CompositeMapper = {
  serializedName: "ChargeSummary",
  type: {
    name: "Composite",
    className: "ChargeSummary",
    modelProperties: {
      ...Resource.type.modelProperties,
      billingPeriodId: {
        readOnly: true,
        serializedName: "properties.billingPeriodId",
        type: {
          name: "String"
        }
      },
      usageStart: {
        readOnly: true,
        serializedName: "properties.usageStart",
        type: {
          name: "String"
        }
      },
      usageEnd: {
        readOnly: true,
        serializedName: "properties.usageEnd",
        type: {
          name: "String"
        }
      },
      azureCharges: {
        readOnly: true,
        serializedName: "properties.azureCharges",
        type: {
          name: "Number"
        }
      },
      chargesBilledSeparately: {
        readOnly: true,
        serializedName: "properties.chargesBilledSeparately",
        type: {
          name: "Number"
        }
      },
      marketplaceCharges: {
        readOnly: true,
        serializedName: "properties.marketplaceCharges",
        type: {
          name: "Number"
        }
      },
      currency: {
        readOnly: true,
        serializedName: "properties.currency",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ChargesListResult: msRest.CompositeMapper = {
  serializedName: "ChargesListResult",
  type: {
    name: "Composite",
    className: "ChargesListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ChargeSummary"
            }
          }
        }
      }
    }
  }
};

export const ErrorDetails: msRest.CompositeMapper = {
  serializedName: "ErrorDetails",
  type: {
    name: "Composite",
    className: "ErrorDetails",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetails"
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "Operation_display",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        readOnly: true,
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        readOnly: true,
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        readOnly: true,
        serializedName: "operation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      }
    }
  }
};

export const ResourceAttributes: msRest.CompositeMapper = {
  serializedName: "ResourceAttributes",
  type: {
    name: "Composite",
    className: "ResourceAttributes",
    modelProperties: {
      location: {
        readOnly: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      sku: {
        readOnly: true,
        serializedName: "sku",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QueryOptions: msRest.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QueryOptions",
    modelProperties: {
      apply: {
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UsageDetailsListResult: msRest.CompositeMapper = {
  serializedName: "UsageDetailsListResult",
  type: {
    name: "Composite",
    className: "UsageDetailsListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UsageDetail"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MarketplacesListResult: msRest.CompositeMapper = {
  serializedName: "MarketplacesListResult",
  type: {
    name: "Composite",
    className: "MarketplacesListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Marketplace"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReservationSummariesListResult: msRest.CompositeMapper = {
  serializedName: "ReservationSummariesListResult",
  type: {
    name: "Composite",
    className: "ReservationSummariesListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReservationSummary"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReservationDetailsListResult: msRest.CompositeMapper = {
  serializedName: "ReservationDetailsListResult",
  type: {
    name: "Composite",
    className: "ReservationDetailsListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReservationDetail"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReservationRecommendationsListResult: msRest.CompositeMapper = {
  serializedName: "ReservationRecommendationsListResult",
  type: {
    name: "Composite",
    className: "ReservationRecommendationsListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReservationRecommendation"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BudgetsListResult: msRest.CompositeMapper = {
  serializedName: "BudgetsListResult",
  type: {
    name: "Composite",
    className: "BudgetsListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Budget"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ForecastsListResult: msRest.CompositeMapper = {
  serializedName: "ForecastsListResult",
  type: {
    name: "Composite",
    className: "ForecastsListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Forecast"
            }
          }
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
