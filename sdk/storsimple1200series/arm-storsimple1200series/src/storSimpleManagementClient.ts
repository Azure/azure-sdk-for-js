/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as operations from "./operations";
import { StorSimpleManagementClientContext } from "./storSimpleManagementClientContext";


class StorSimpleManagementClient extends StorSimpleManagementClientContext {
  // Operation groups
  managers: operations.Managers;
  availableProviderOperations: operations.AvailableProviderOperationsOperations;
  accessControlRecords: operations.AccessControlRecords;
  alerts: operations.Alerts;
  backups: operations.Backups;
  devices: operations.Devices;
  backupScheduleGroups: operations.BackupScheduleGroups;
  chapSettings: operations.ChapSettingsOperations;
  iscsiDisks: operations.IscsiDisks;
  fileServers: operations.FileServers;
  fileShares: operations.FileShares;
  iscsiServers: operations.IscsiServers;
  jobs: operations.Jobs;
  storageAccountCredentials: operations.StorageAccountCredentials;
  storageDomains: operations.StorageDomains;

  /**
   * Initializes a new instance of the StorSimpleManagementClient class.
   * @param credentials Credentials needed for the client to connect to Azure.
   * @param subscriptionId The subscription id
   * @param [options] The parameter options
   */
  constructor(credentials: msRest.ServiceClientCredentials, subscriptionId: string, options?: Models.StorSimpleManagementClientOptions) {
    super(credentials, subscriptionId, options);
    this.managers = new operations.Managers(this);
    this.availableProviderOperations = new operations.AvailableProviderOperationsOperations(this);
    this.accessControlRecords = new operations.AccessControlRecords(this);
    this.alerts = new operations.Alerts(this);
    this.backups = new operations.Backups(this);
    this.devices = new operations.Devices(this);
    this.backupScheduleGroups = new operations.BackupScheduleGroups(this);
    this.chapSettings = new operations.ChapSettingsOperations(this);
    this.iscsiDisks = new operations.IscsiDisks(this);
    this.fileServers = new operations.FileServers(this);
    this.fileShares = new operations.FileShares(this);
    this.iscsiServers = new operations.IscsiServers(this);
    this.jobs = new operations.Jobs(this);
    this.storageAccountCredentials = new operations.StorageAccountCredentials(this);
    this.storageDomains = new operations.StorageDomains(this);
  }
}

// Operation Specifications

export {
  StorSimpleManagementClient,
  StorSimpleManagementClientContext,
  Models as StorSimpleManagementModels,
  Mappers as StorSimpleManagementMappers
};
export * from "./operations";
