/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  StorageDomain,
  StorageDomainsListByManagerOptionalParams,
  StorageDomainsGetOptionalParams,
  StorageDomainsGetResponse,
  StorageDomainsCreateOrUpdateOptionalParams,
  StorageDomainsCreateOrUpdateResponse,
  StorageDomainsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a StorageDomains. */
export interface StorageDomains {
  /**
   * Retrieves all the storage domains in a manager.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  listByManager(
    resourceGroupName: string,
    managerName: string,
    options?: StorageDomainsListByManagerOptionalParams
  ): PagedAsyncIterableIterator<StorageDomain>;
  /**
   * Returns the properties of the specified storage domain name.
   * @param storageDomainName The storage domain name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  get(
    storageDomainName: string,
    resourceGroupName: string,
    managerName: string,
    options?: StorageDomainsGetOptionalParams
  ): Promise<StorageDomainsGetResponse>;
  /**
   * Creates or updates the storage domain.
   * @param storageDomainName The storage domain name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param storageDomain The storageDomain.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    storageDomainName: string,
    resourceGroupName: string,
    managerName: string,
    storageDomain: StorageDomain,
    options?: StorageDomainsCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<StorageDomainsCreateOrUpdateResponse>,
      StorageDomainsCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates the storage domain.
   * @param storageDomainName The storage domain name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param storageDomain The storageDomain.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    storageDomainName: string,
    resourceGroupName: string,
    managerName: string,
    storageDomain: StorageDomain,
    options?: StorageDomainsCreateOrUpdateOptionalParams
  ): Promise<StorageDomainsCreateOrUpdateResponse>;
  /**
   * Deletes the storage domain.
   * @param storageDomainName The storage domain name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  beginDelete(
    storageDomainName: string,
    resourceGroupName: string,
    managerName: string,
    options?: StorageDomainsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes the storage domain.
   * @param storageDomainName The storage domain name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    storageDomainName: string,
    resourceGroupName: string,
    managerName: string,
    options?: StorageDomainsDeleteOptionalParams
  ): Promise<void>;
}
