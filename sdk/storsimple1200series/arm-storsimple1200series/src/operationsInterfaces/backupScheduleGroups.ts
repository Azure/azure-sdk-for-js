/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  BackupScheduleGroup,
  BackupScheduleGroupsListByDeviceOptionalParams,
  BackupScheduleGroupsGetOptionalParams,
  BackupScheduleGroupsGetResponse,
  BackupScheduleGroupsCreateOrUpdateOptionalParams,
  BackupScheduleGroupsCreateOrUpdateResponse,
  BackupScheduleGroupsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a BackupScheduleGroups. */
export interface BackupScheduleGroups {
  /**
   * Retrieves all the backup schedule groups in a device.
   * @param deviceName The name of the device.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  listByDevice(
    deviceName: string,
    resourceGroupName: string,
    managerName: string,
    options?: BackupScheduleGroupsListByDeviceOptionalParams
  ): PagedAsyncIterableIterator<BackupScheduleGroup>;
  /**
   * Returns the properties of the specified backup schedule group name.
   * @param deviceName The name of the device.
   * @param scheduleGroupName The name of the schedule group.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  get(
    deviceName: string,
    scheduleGroupName: string,
    resourceGroupName: string,
    managerName: string,
    options?: BackupScheduleGroupsGetOptionalParams
  ): Promise<BackupScheduleGroupsGetResponse>;
  /**
   * Creates or Updates the backup schedule Group.
   * @param deviceName The name of the device.
   * @param scheduleGroupName The name of the schedule group.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param scheduleGroup The schedule group to be created
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    deviceName: string,
    scheduleGroupName: string,
    resourceGroupName: string,
    managerName: string,
    scheduleGroup: BackupScheduleGroup,
    options?: BackupScheduleGroupsCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<BackupScheduleGroupsCreateOrUpdateResponse>,
      BackupScheduleGroupsCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or Updates the backup schedule Group.
   * @param deviceName The name of the device.
   * @param scheduleGroupName The name of the schedule group.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param scheduleGroup The schedule group to be created
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    deviceName: string,
    scheduleGroupName: string,
    resourceGroupName: string,
    managerName: string,
    scheduleGroup: BackupScheduleGroup,
    options?: BackupScheduleGroupsCreateOrUpdateOptionalParams
  ): Promise<BackupScheduleGroupsCreateOrUpdateResponse>;
  /**
   * Deletes the backup schedule group.
   * @param deviceName The name of the device.
   * @param scheduleGroupName The name of the schedule group.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  beginDelete(
    deviceName: string,
    scheduleGroupName: string,
    resourceGroupName: string,
    managerName: string,
    options?: BackupScheduleGroupsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes the backup schedule group.
   * @param deviceName The name of the device.
   * @param scheduleGroupName The name of the schedule group.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    deviceName: string,
    scheduleGroupName: string,
    resourceGroupName: string,
    managerName: string,
    options?: BackupScheduleGroupsDeleteOptionalParams
  ): Promise<void>;
}
