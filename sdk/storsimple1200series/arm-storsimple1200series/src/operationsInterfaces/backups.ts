/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  Backup,
  BackupsListByManagerOptionalParams,
  BackupsListByDeviceOptionalParams,
  BackupsDeleteOptionalParams,
  CloneRequest,
  BackupsCloneOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Backups. */
export interface Backups {
  /**
   * Retrieves all the backups in a manager.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  listByManager(
    resourceGroupName: string,
    managerName: string,
    options?: BackupsListByManagerOptionalParams
  ): PagedAsyncIterableIterator<Backup>;
  /**
   * Retrieves all the backups in a device. Can be used to get the backups for failover also.
   * @param deviceName The device name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  listByDevice(
    deviceName: string,
    resourceGroupName: string,
    managerName: string,
    options?: BackupsListByDeviceOptionalParams
  ): PagedAsyncIterableIterator<Backup>;
  /**
   * Deletes the backup.
   * @param deviceName The device name.
   * @param backupName The backup name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  beginDelete(
    deviceName: string,
    backupName: string,
    resourceGroupName: string,
    managerName: string,
    options?: BackupsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes the backup.
   * @param deviceName The device name.
   * @param backupName The backup name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    deviceName: string,
    backupName: string,
    resourceGroupName: string,
    managerName: string,
    options?: BackupsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Clones the given backup element to a new disk or share with given details.
   * @param deviceName The device name.
   * @param backupName The backup name.
   * @param elementName The backup element name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param cloneRequest The clone request.
   * @param options The options parameters.
   */
  beginClone(
    deviceName: string,
    backupName: string,
    elementName: string,
    resourceGroupName: string,
    managerName: string,
    cloneRequest: CloneRequest,
    options?: BackupsCloneOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Clones the given backup element to a new disk or share with given details.
   * @param deviceName The device name.
   * @param backupName The backup name.
   * @param elementName The backup element name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param cloneRequest The clone request.
   * @param options The options parameters.
   */
  beginCloneAndWait(
    deviceName: string,
    backupName: string,
    elementName: string,
    resourceGroupName: string,
    managerName: string,
    cloneRequest: CloneRequest,
    options?: BackupsCloneOptionalParams
  ): Promise<void>;
}
