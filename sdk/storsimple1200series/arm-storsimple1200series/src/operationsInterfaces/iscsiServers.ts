/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  IscsiServer,
  IscsiServersListByDeviceOptionalParams,
  Metrics,
  IscsiServersListMetricsOptionalParams,
  MetricDefinition,
  IscsiServersListMetricDefinitionOptionalParams,
  IscsiServersListByManagerOptionalParams,
  IscsiServersGetOptionalParams,
  IscsiServersGetResponse,
  IscsiServersCreateOrUpdateOptionalParams,
  IscsiServersCreateOrUpdateResponse,
  IscsiServersDeleteOptionalParams,
  IscsiServersBackupNowOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a IscsiServers. */
export interface IscsiServers {
  /**
   * Retrieves all the iSCSI in a device.
   * @param deviceName The device name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  listByDevice(
    deviceName: string,
    resourceGroupName: string,
    managerName: string,
    options?: IscsiServersListByDeviceOptionalParams
  ): PagedAsyncIterableIterator<IscsiServer>;
  /**
   * Gets the iSCSI server metrics
   * @param deviceName The device name.
   * @param iscsiServerName The iSCSI server name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  listMetrics(
    deviceName: string,
    iscsiServerName: string,
    resourceGroupName: string,
    managerName: string,
    options?: IscsiServersListMetricsOptionalParams
  ): PagedAsyncIterableIterator<Metrics>;
  /**
   * Retrieves metric definitions for all metrics aggregated at iSCSI server.
   * @param deviceName The device name.
   * @param iscsiServerName The iSCSI server name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  listMetricDefinition(
    deviceName: string,
    iscsiServerName: string,
    resourceGroupName: string,
    managerName: string,
    options?: IscsiServersListMetricDefinitionOptionalParams
  ): PagedAsyncIterableIterator<MetricDefinition>;
  /**
   * Retrieves all the iSCSI servers in a manager.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  listByManager(
    resourceGroupName: string,
    managerName: string,
    options?: IscsiServersListByManagerOptionalParams
  ): PagedAsyncIterableIterator<IscsiServer>;
  /**
   * Returns the properties of the specified iSCSI server name.
   * @param deviceName The device name.
   * @param iscsiServerName The iSCSI server name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  get(
    deviceName: string,
    iscsiServerName: string,
    resourceGroupName: string,
    managerName: string,
    options?: IscsiServersGetOptionalParams
  ): Promise<IscsiServersGetResponse>;
  /**
   * Creates or updates the iSCSI server.
   * @param deviceName The device name.
   * @param iscsiServerName The iSCSI server name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param iscsiServer The iSCSI server.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    deviceName: string,
    iscsiServerName: string,
    resourceGroupName: string,
    managerName: string,
    iscsiServer: IscsiServer,
    options?: IscsiServersCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<IscsiServersCreateOrUpdateResponse>,
      IscsiServersCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates the iSCSI server.
   * @param deviceName The device name.
   * @param iscsiServerName The iSCSI server name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param iscsiServer The iSCSI server.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    deviceName: string,
    iscsiServerName: string,
    resourceGroupName: string,
    managerName: string,
    iscsiServer: IscsiServer,
    options?: IscsiServersCreateOrUpdateOptionalParams
  ): Promise<IscsiServersCreateOrUpdateResponse>;
  /**
   * Deletes the iSCSI server.
   * @param deviceName The device name.
   * @param iscsiServerName The iSCSI server name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  beginDelete(
    deviceName: string,
    iscsiServerName: string,
    resourceGroupName: string,
    managerName: string,
    options?: IscsiServersDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes the iSCSI server.
   * @param deviceName The device name.
   * @param iscsiServerName The iSCSI server name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    deviceName: string,
    iscsiServerName: string,
    resourceGroupName: string,
    managerName: string,
    options?: IscsiServersDeleteOptionalParams
  ): Promise<void>;
  /**
   * Backup the iSCSI server now.
   * @param deviceName The device name.
   * @param iscsiServerName The iSCSI server name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  beginBackupNow(
    deviceName: string,
    iscsiServerName: string,
    resourceGroupName: string,
    managerName: string,
    options?: IscsiServersBackupNowOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Backup the iSCSI server now.
   * @param deviceName The device name.
   * @param iscsiServerName The iSCSI server name.
   * @param resourceGroupName The resource group name
   * @param managerName The manager name
   * @param options The options parameters.
   */
  beginBackupNowAndWait(
    deviceName: string,
    iscsiServerName: string,
    resourceGroupName: string,
    managerName: string,
    options?: IscsiServersBackupNowOptionalParams
  ): Promise<void>;
}
