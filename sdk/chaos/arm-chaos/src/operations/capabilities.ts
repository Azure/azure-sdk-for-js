/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/capabilitiesMappers";
import * as Parameters from "../models/parameters";
import { MicrosoftAzureChaosContext } from "../microsoftAzureChaosContext";

/** Class representing a Capabilities. */
export class Capabilities {
  private readonly client: MicrosoftAzureChaosContext;

  /**
   * Create a Capabilities.
   * @param {MicrosoftAzureChaosContext} client Reference to the service client.
   */
  constructor(client: MicrosoftAzureChaosContext) {
    this.client = client;
  }

  /**
   * Get a list of Capability resources that extend a Target resource..
   * @param resourceGroupName String that represents an Azure resource group.
   * @param parentProviderNamespace String that represents a resource provider namespace.
   * @param parentResourceType String that represents a resource type.
   * @param parentResourceName String that represents a resource name.
   * @param targetName String that represents a Target resource name.
   * @param [options] The optional parameters
   * @returns Promise<Models.CapabilitiesListResponse>
   */
  list(resourceGroupName: string, parentProviderNamespace: string, parentResourceType: string, parentResourceName: string, targetName: string, options?: Models.CapabilitiesListOptionalParams): Promise<Models.CapabilitiesListResponse>;
  /**
   * @param resourceGroupName String that represents an Azure resource group.
   * @param parentProviderNamespace String that represents a resource provider namespace.
   * @param parentResourceType String that represents a resource type.
   * @param parentResourceName String that represents a resource name.
   * @param targetName String that represents a Target resource name.
   * @param callback The callback
   */
  list(resourceGroupName: string, parentProviderNamespace: string, parentResourceType: string, parentResourceName: string, targetName: string, callback: msRest.ServiceCallback<Models.CapabilityListResult>): void;
  /**
   * @param resourceGroupName String that represents an Azure resource group.
   * @param parentProviderNamespace String that represents a resource provider namespace.
   * @param parentResourceType String that represents a resource type.
   * @param parentResourceName String that represents a resource name.
   * @param targetName String that represents a Target resource name.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(resourceGroupName: string, parentProviderNamespace: string, parentResourceType: string, parentResourceName: string, targetName: string, options: Models.CapabilitiesListOptionalParams, callback: msRest.ServiceCallback<Models.CapabilityListResult>): void;
  list(resourceGroupName: string, parentProviderNamespace: string, parentResourceType: string, parentResourceName: string, targetName: string, options?: Models.CapabilitiesListOptionalParams | msRest.ServiceCallback<Models.CapabilityListResult>, callback?: msRest.ServiceCallback<Models.CapabilityListResult>): Promise<Models.CapabilitiesListResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        parentProviderNamespace,
        parentResourceType,
        parentResourceName,
        targetName,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.CapabilitiesListResponse>;
  }

  /**
   * Get a Capability resource that extends a Target resource.
   * @param resourceGroupName String that represents an Azure resource group.
   * @param parentProviderNamespace String that represents a resource provider namespace.
   * @param parentResourceType String that represents a resource type.
   * @param parentResourceName String that represents a resource name.
   * @param targetName String that represents a Target resource name.
   * @param capabilityName String that represents a Capability resource name.
   * @param [options] The optional parameters
   * @returns Promise<Models.CapabilitiesGetResponse>
   */
  get(resourceGroupName: string, parentProviderNamespace: string, parentResourceType: string, parentResourceName: string, targetName: string, capabilityName: string, options?: msRest.RequestOptionsBase): Promise<Models.CapabilitiesGetResponse>;
  /**
   * @param resourceGroupName String that represents an Azure resource group.
   * @param parentProviderNamespace String that represents a resource provider namespace.
   * @param parentResourceType String that represents a resource type.
   * @param parentResourceName String that represents a resource name.
   * @param targetName String that represents a Target resource name.
   * @param capabilityName String that represents a Capability resource name.
   * @param callback The callback
   */
  get(resourceGroupName: string, parentProviderNamespace: string, parentResourceType: string, parentResourceName: string, targetName: string, capabilityName: string, callback: msRest.ServiceCallback<Models.Capability>): void;
  /**
   * @param resourceGroupName String that represents an Azure resource group.
   * @param parentProviderNamespace String that represents a resource provider namespace.
   * @param parentResourceType String that represents a resource type.
   * @param parentResourceName String that represents a resource name.
   * @param targetName String that represents a Target resource name.
   * @param capabilityName String that represents a Capability resource name.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, parentProviderNamespace: string, parentResourceType: string, parentResourceName: string, targetName: string, capabilityName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Capability>): void;
  get(resourceGroupName: string, parentProviderNamespace: string, parentResourceType: string, parentResourceName: string, targetName: string, capabilityName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Capability>, callback?: msRest.ServiceCallback<Models.Capability>): Promise<Models.CapabilitiesGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        parentProviderNamespace,
        parentResourceType,
        parentResourceName,
        targetName,
        capabilityName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.CapabilitiesGetResponse>;
  }

  /**
   * Delete a Capability that extends a Target resource.
   * @param resourceGroupName String that represents an Azure resource group.
   * @param parentProviderNamespace String that represents a resource provider namespace.
   * @param parentResourceType String that represents a resource type.
   * @param parentResourceName String that represents a resource name.
   * @param targetName String that represents a Target resource name.
   * @param capabilityName String that represents a Capability resource name.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, parentProviderNamespace: string, parentResourceType: string, parentResourceName: string, targetName: string, capabilityName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param resourceGroupName String that represents an Azure resource group.
   * @param parentProviderNamespace String that represents a resource provider namespace.
   * @param parentResourceType String that represents a resource type.
   * @param parentResourceName String that represents a resource name.
   * @param targetName String that represents a Target resource name.
   * @param capabilityName String that represents a Capability resource name.
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, parentProviderNamespace: string, parentResourceType: string, parentResourceName: string, targetName: string, capabilityName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceGroupName String that represents an Azure resource group.
   * @param parentProviderNamespace String that represents a resource provider namespace.
   * @param parentResourceType String that represents a resource type.
   * @param parentResourceName String that represents a resource name.
   * @param targetName String that represents a Target resource name.
   * @param capabilityName String that represents a Capability resource name.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, parentProviderNamespace: string, parentResourceType: string, parentResourceName: string, targetName: string, capabilityName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(resourceGroupName: string, parentProviderNamespace: string, parentResourceType: string, parentResourceName: string, targetName: string, capabilityName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        parentProviderNamespace,
        parentResourceType,
        parentResourceName,
        targetName,
        capabilityName,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }

  /**
   * Create or update a Capability resource that extends a Target resource.
   * @param resourceGroupName String that represents an Azure resource group.
   * @param parentProviderNamespace String that represents a resource provider namespace.
   * @param parentResourceType String that represents a resource type.
   * @param parentResourceName String that represents a resource name.
   * @param targetName String that represents a Target resource name.
   * @param capabilityName String that represents a Capability resource name.
   * @param [options] The optional parameters
   * @returns Promise<Models.CapabilitiesCreateOrUpdateResponse>
   */
  createOrUpdate(resourceGroupName: string, parentProviderNamespace: string, parentResourceType: string, parentResourceName: string, targetName: string, capabilityName: string, options?: msRest.RequestOptionsBase): Promise<Models.CapabilitiesCreateOrUpdateResponse>;
  /**
   * @param resourceGroupName String that represents an Azure resource group.
   * @param parentProviderNamespace String that represents a resource provider namespace.
   * @param parentResourceType String that represents a resource type.
   * @param parentResourceName String that represents a resource name.
   * @param targetName String that represents a Target resource name.
   * @param capabilityName String that represents a Capability resource name.
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, parentProviderNamespace: string, parentResourceType: string, parentResourceName: string, targetName: string, capabilityName: string, callback: msRest.ServiceCallback<Models.Capability>): void;
  /**
   * @param resourceGroupName String that represents an Azure resource group.
   * @param parentProviderNamespace String that represents a resource provider namespace.
   * @param parentResourceType String that represents a resource type.
   * @param parentResourceName String that represents a resource name.
   * @param targetName String that represents a Target resource name.
   * @param capabilityName String that represents a Capability resource name.
   * @param options The optional parameters
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, parentProviderNamespace: string, parentResourceType: string, parentResourceName: string, targetName: string, capabilityName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Capability>): void;
  createOrUpdate(resourceGroupName: string, parentProviderNamespace: string, parentResourceType: string, parentResourceName: string, targetName: string, capabilityName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Capability>, callback?: msRest.ServiceCallback<Models.Capability>): Promise<Models.CapabilitiesCreateOrUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        parentProviderNamespace,
        parentResourceType,
        parentResourceName,
        targetName,
        capabilityName,
        options
      },
      createOrUpdateOperationSpec,
      callback) as Promise<Models.CapabilitiesCreateOrUpdateResponse>;
  }

  /**
   * Get a list of Capability resources that extend a Target resource..
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.CapabilitiesListNextResponse>
   */
  listNext(nextPageLink: string, options?: Models.CapabilitiesListNextOptionalParams): Promise<Models.CapabilitiesListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.CapabilityListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: Models.CapabilitiesListNextOptionalParams, callback: msRest.ServiceCallback<Models.CapabilityListResult>): void;
  listNext(nextPageLink: string, options?: Models.CapabilitiesListNextOptionalParams | msRest.ServiceCallback<Models.CapabilityListResult>, callback?: msRest.ServiceCallback<Models.CapabilityListResult>): Promise<Models.CapabilitiesListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.CapabilitiesListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{parentProviderNamespace}/{parentResourceType}/{parentResourceName}/providers/Microsoft.Chaos/targets/{targetName}/capabilities",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.parentProviderNamespace,
    Parameters.parentResourceType,
    Parameters.parentResourceName,
    Parameters.targetName
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.continuationToken
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.CapabilityListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{parentProviderNamespace}/{parentResourceType}/{parentResourceName}/providers/Microsoft.Chaos/targets/{targetName}/capabilities/{capabilityName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.parentProviderNamespace,
    Parameters.parentResourceType,
    Parameters.parentResourceName,
    Parameters.targetName,
    Parameters.capabilityName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.Capability
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{parentProviderNamespace}/{parentResourceType}/{parentResourceName}/providers/Microsoft.Chaos/targets/{targetName}/capabilities/{capabilityName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.parentProviderNamespace,
    Parameters.parentResourceType,
    Parameters.parentResourceName,
    Parameters.targetName,
    Parameters.capabilityName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const createOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{parentProviderNamespace}/{parentResourceType}/{parentResourceName}/providers/Microsoft.Chaos/targets/{targetName}/capabilities/{capabilityName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.parentProviderNamespace,
    Parameters.parentResourceType,
    Parameters.parentResourceName,
    Parameters.targetName,
    Parameters.capabilityName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "capability",
    mapper: {
      ...Mappers.Capability,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.Capability
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.continuationToken
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.CapabilityListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
