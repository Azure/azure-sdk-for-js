/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * The resource management error additional info.
 */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly info?: any;
}

/**
 * The error detail.
 */
export interface ErrorDetail {
  /**
   * The error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The error target.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly target?: string;
  /**
   * The error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/**
 * Common error response for all Azure Resource Manager APIs to return error details for failed
 * operations. (This also follows the OData error response format.).
 * @summary Error response
 */
export interface ErrorResponse {
  /**
   * The error object.
   */
  error?: ErrorDetail;
}

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
export interface SystemData {
  /**
   * The identity that created the resource.
   */
  createdBy?: string;
  /**
   * The type of identity that created the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  createdByType?: CreatedByType;
  /**
   * The timestamp of resource creation (UTC).
   */
  createdAt?: Date;
  /**
   * The identity that last modified the resource.
   */
  lastModifiedBy?: string;
  /**
   * The type of identity that last modified the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  lastModifiedByType?: CreatedByType;
  /**
   * The timestamp of resource last modification (UTC)
   */
  lastModifiedAt?: Date;
}

/**
 * Common fields that are returned in the response for all Azure Resource Manager resources
 * @summary Resource
 */
export interface Resource extends BaseResource {
  /**
   * Fully qualified resource ID for the resource. Ex -
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
   * "Microsoft.Storage/storageAccounts"
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * The resource model definition for a Azure Resource Manager proxy resource. It will not have tags
 * and a location
 * @summary Proxy Resource
 */
export interface ProxyResource extends Resource {
}

/**
 * The resource model definition for an Azure Resource Manager tracked top level resource which has
 * 'tags' and a 'location'
 * @summary Tracked Resource
 */
export interface TrackedResource extends Resource {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The geo-location where the resource lives
   */
  location: string;
}

/**
 * The resource model definition for an Azure Resource Manager resource with an etag.
 * @summary Entity Resource
 */
export interface AzureEntityResource extends Resource {
  /**
   * Resource Etag.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly etag?: string;
}

/**
 * Model that represents a Capability resource.
 */
export interface Capability extends Resource {
  /**
   * The standard system metadata of a resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
  /**
   * String of the Publisher that this Capability extends.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly publisher?: string;
  /**
   * String of the Target Type that this Capability extends.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly targetType?: string;
  /**
   * Localized string of the description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * URL to retrieve JSON schema of the Capability parameters.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly parametersSchema?: string;
  /**
   * String of the URN for this Capability Type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly urn?: string;
}

/**
 * Model that represents the Experiment action target details error model.
 */
export interface ExperimentExecutionActionTargetDetailsError {
  /**
   * The error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The error message
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
}

/**
 * Model that represents the Experiment action target details properties model.
 */
export interface ExperimentExecutionActionTargetDetailsProperties {
  /**
   * The status of the execution.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: string;
  /**
   * The target for the action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly target?: string;
  /**
   * String that represents the failed date time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly failedDateUtc?: Date;
  /**
   * String that represents the completed date time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly completedDateUtc?: Date;
  /**
   * The error of the action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: ExperimentExecutionActionTargetDetailsError;
}

/**
 * Model that represents the an action and its status.
 */
export interface ActionStatus {
  /**
   * The name of the action status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The id of the action status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The status of the action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: string;
  /**
   * The array of targets.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly targets?: ExperimentExecutionActionTargetDetailsProperties[];
}

/**
 * Model that represents the a list of actions and action statuses.
 */
export interface BranchStatus {
  /**
   * The name of the branch status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The id of the branch status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The status of the branch.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: string;
  /**
   * The array of actions.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly actions?: ActionStatus[];
}

/**
 * Model that represents the a list of branches and branch statuses.
 */
export interface StepStatus {
  /**
   * The name of the step.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The id of the step.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The value of the status of the step.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: string;
  /**
   * The array of branches.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly branches?: BranchStatus[];
}

/**
 * The information of the experiment run.
 */
export interface ExperimentExecutionDetailsPropertiesRunInformation {
  /**
   * The steps of the experiment run.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly steps?: StepStatus[];
}

/**
 * Model that represents the execution details of a Experiment.
 */
export interface ExperimentExecutionDetails {
  /**
   * String of the resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * String of the fully qualified resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * String of the resource name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The id of the experiment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly experimentId?: string;
  /**
   * The value of the status of the experiment execution.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: string;
  /**
   * The reason why the execution failed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly failureReason?: string;
  /**
   * String that represents the created date time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdDateUtc?: Date;
  /**
   * String that represents the last action date time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastActionDateUtc?: Date;
  /**
   * String that represents the start date time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startDateUtc?: Date;
  /**
   * String that represents the stop date time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly stopDateUtc?: Date;
  /**
   * The information of the experiment run.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly runInformation?: ExperimentExecutionDetailsPropertiesRunInformation;
}

/**
 * Model that represents the status of a Experiment.
 */
export interface ExperimentStatus {
  /**
   * String of the resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * String of the fully qualified resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * String of the resource name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * String that represents the status of a Experiment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: string;
  /**
   * String that represents the created date time of a Experiment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdDateUtc?: Date;
  /**
   * String that represents the end date time of a Experiment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endDateUtc?: Date;
}

/**
 * Model that represents the result of a start Experiment operation.
 */
export interface ExperimentStartOperationResult {
  /**
   * String of the Experiment name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * URL to retrieve the Experiment status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly statusUrl?: string;
}

/**
 * Model that represents the result of a cancel Experiment operation.
 */
export interface ExperimentCancelOperationResult {
  /**
   * String of the Experiment name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * URL to retrieve the Experiment status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly statusUrl?: string;
}

/**
 * Model that represents a reference to a Target in the selector.
 */
export interface TargetReference {
  /**
   * String of the resource ID of a Target resource.
   */
  id: string;
}

/**
 * Model that represents a selector in the Experiment resource.
 */
export interface Selector {
  /**
   * Enum of the selector type. Possible values include: 'Percent', 'Random', 'Tag', 'List'
   */
  type: SelectorType;
  /**
   * String of the selector ID.
   */
  id: string;
  /**
   * List of Target references.
   */
  targets: TargetReference[];
}

/**
 * A map to describe the settings of an action.
 */
export interface KeyValuePair {
  /**
   * The name of the setting for the action.
   */
  key: string;
  /**
   * The value of the setting for the action.
   */
  value: string;
}

/**
 * Contains the possible cases for Action.
 */
export type ActionUnion = Action | ContinuousAction | DiscreteAction | DelayAction;

/**
 * Model that represents the base action model.
 */
export interface Action {
  /**
   * Polymorphic Discriminator
   */
  type: "action";
  /**
   * String that represents a Capability URN.
   */
  name: string;
}

/**
 * Model that represents a continuous action.
 */
export interface ContinuousAction {
  /**
   * Polymorphic Discriminator
   */
  type: "continuous";
  /**
   * String that represents a Capability URN.
   */
  name: string;
  /**
   * ISO8601 formatted string that represents a duration.
   */
  duration: string;
  /**
   * List of key value pairs.
   */
  parameters: KeyValuePair[];
  /**
   * String that represents a selector.
   */
  selectorId: string;
}

/**
 * Model that represents a discrete action.
 */
export interface DiscreteAction {
  /**
   * Polymorphic Discriminator
   */
  type: "discrete";
  /**
   * String that represents a Capability URN.
   */
  name: string;
  /**
   * List of key value pairs.
   */
  parameters: KeyValuePair[];
  /**
   * String that represents a selector.
   */
  selectorId: string;
}

/**
 * Model that represents a delay action.
 */
export interface DelayAction {
  /**
   * Polymorphic Discriminator
   */
  type: "delay";
  /**
   * String that represents a Capability URN.
   */
  name: string;
  /**
   * ISO8601 formatted string that represents a duration.
   */
  duration: string;
}

/**
 * Model that represents a branch in the step.
 */
export interface Branch {
  /**
   * String of the branch name.
   */
  name: string;
  /**
   * List of actions.
   */
  actions: ActionUnion[];
}

/**
 * Model that represents a step in the Experiment resource.
 */
export interface Step {
  /**
   * String of the step name.
   */
  name: string;
  /**
   * List of branches.
   */
  branches: Branch[];
}

/**
 * The managed identity of a resource.
 */
export interface ResourceIdentity {
  /**
   * String of the resource identity type. Possible values include: 'None', 'SystemAssigned'
   */
  type: ResourceIdentityType;
  /**
   * GUID that represents the principal ID of this resource identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * GUID that represents the tenant ID of this resource identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
}

/**
 * Model that represents a Experiment resource.
 */
export interface Experiment extends TrackedResource {
  /**
   * The system metadata of the experiment resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
  /**
   * The identity of the experiment resource.
   */
  identity?: ResourceIdentity;
  /**
   * List of steps.
   */
  steps: Step[];
  /**
   * List of selectors.
   */
  selectors: Selector[];
  /**
   * A boolean value that indicates if experiment should be started on creation or not.
   */
  startOnCreation?: boolean;
}

/**
 * Localized display information for this particular operation.
 */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring
   * Insights" or "Microsoft Compute".
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual
   * Machines" or "Job Schedule Collections".
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create
   * or Update Virtual Machine", "Restart Virtual Machine".
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and
   * detailed views.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
}

/**
 * Details of a REST API operation, returned from the Resource Provider Operations API
 * @summary REST API Operation
 */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
   * "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and
   * "false" for ARM/control-plane operations.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isDataAction?: boolean;
  /**
   * Localized display information for this particular operation.
   */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit
   * logs UX. Default value is "user,system". Possible values include: 'user', 'system',
   * 'user,system'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * Possible values include: 'Internal'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly actionType?: ActionType;
}

/**
 * Model that represents a Target resource.
 */
export interface Target extends Resource {
  /**
   * The system metadata of the target resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
  /**
   * Location of the target resource.
   */
  location?: string;
  /**
   * The properties of the target resource.
   */
  properties: { [propertyName: string]: any };
}

/**
 * Model that represents a Target Type resource.
 */
export interface TargetType extends Resource {
  /**
   * The system metadata properties of the target type resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
  /**
   * Location of the Target Type resource.
   */
  location?: string;
  /**
   * Localized string of the display name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * Localized string of the description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * URL to retrieve JSON schema of the Target Type properties.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly propertiesSchema?: string;
  /**
   * List of resource types this Target Type can extend.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceTypes?: string[];
}

/**
 * Model that represents a Capability Type resource.
 */
export interface CapabilityType extends Resource {
  /**
   * The system metadata properties of the capability type resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
  /**
   * Location of the Capability Type resource.
   */
  location?: string;
  /**
   * String of the Publisher that this Capability Type extends.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly publisher?: string;
  /**
   * String of the Target Type that this Capability Type extends.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly targetType?: string;
  /**
   * Localized string of the display name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * Localized string of the description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * URL to retrieve JSON schema of the Capability Type parameters.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly parametersSchema?: string;
  /**
   * String of the URN for this Capability Type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly urn?: string;
}

/**
 * Optional Parameters.
 */
export interface CapabilitiesListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * String that sets the continuation token.
   */
  continuationToken?: string;
}

/**
 * Optional Parameters.
 */
export interface CapabilitiesListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * String that sets the continuation token.
   */
  continuationToken?: string;
}

/**
 * Optional Parameters.
 */
export interface ExperimentsListAllOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Optional value that indicates whether to filter results based on if the Experiment is
   * currently running. If null, then the results will not be filtered.
   */
  running?: boolean;
  /**
   * String that sets the continuation token.
   */
  continuationToken?: string;
}

/**
 * Optional Parameters.
 */
export interface ExperimentsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Optional value that indicates whether to filter results based on if the Experiment is
   * currently running. If null, then the results will not be filtered.
   */
  running?: boolean;
  /**
   * String that sets the continuation token.
   */
  continuationToken?: string;
}

/**
 * Optional Parameters.
 */
export interface ExperimentsListAllNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Optional value that indicates whether to filter results based on if the Experiment is
   * currently running. If null, then the results will not be filtered.
   */
  running?: boolean;
  /**
   * String that sets the continuation token.
   */
  continuationToken?: string;
}

/**
 * Optional Parameters.
 */
export interface ExperimentsListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Optional value that indicates whether to filter results based on if the Experiment is
   * currently running. If null, then the results will not be filtered.
   */
  running?: boolean;
  /**
   * String that sets the continuation token.
   */
  continuationToken?: string;
}

/**
 * Optional Parameters.
 */
export interface TargetsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * String that sets the continuation token.
   */
  continuationToken?: string;
}

/**
 * Optional Parameters.
 */
export interface TargetsListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * String that sets the continuation token.
   */
  continuationToken?: string;
}

/**
 * Optional Parameters.
 */
export interface TargetTypesListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * String that sets the continuation token.
   */
  continuationToken?: string;
}

/**
 * Optional Parameters.
 */
export interface TargetTypesListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * String that sets the continuation token.
   */
  continuationToken?: string;
}

/**
 * Optional Parameters.
 */
export interface CapabilityTypesListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * String that sets the continuation token.
   */
  continuationToken?: string;
}

/**
 * Optional Parameters.
 */
export interface CapabilityTypesListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * String that sets the continuation token.
   */
  continuationToken?: string;
}

/**
 * An interface representing MicrosoftAzureChaosOptions.
 */
export interface MicrosoftAzureChaosOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * Model that represents a list of Capability resources and a link for pagination.
 * @extends Array<Capability>
 */
export interface CapabilityListResult extends Array<Capability> {
  /**
   * URL to retrieve the next page of Capability resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Model that represents a list of Experiment resources and a link for pagination.
 * @extends Array<Experiment>
 */
export interface ExperimentListResult extends Array<Experiment> {
  /**
   * URL to retrieve the next page of Experiment resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Model that represents a list of Experiment statuses and a link for pagination.
 * @extends Array<ExperimentStatus>
 */
export interface ExperimentStatusListResult extends Array<ExperimentStatus> {
  /**
   * URL to retrieve the next page of Experiment statuses.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Model that represents a list of Experiment execution details and a link for pagination.
 * @extends Array<ExperimentExecutionDetails>
 */
export interface ExperimentExecutionDetailsListResult extends Array<ExperimentExecutionDetails> {
  /**
   * URL to retrieve the next page of Experiment execution details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of REST API operations supported by an Azure Resource Provider. It contains an URL link
 * to get the next set of results.
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * URL to get the next set of operation list results (if there are any).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Model that represents a list of Target resources and a link for pagination.
 * @extends Array<Target>
 */
export interface TargetListResult extends Array<Target> {
  /**
   * URL to retrieve the next page of Target resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Model that represents a list of Target Type resources and a link for pagination.
 * @extends Array<TargetType>
 */
export interface TargetTypeListResult extends Array<TargetType> {
  /**
   * URL to retrieve the next page of Target Type resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Model that represents a list of Capability Type resources and a link for pagination.
 * @extends Array<CapabilityType>
 */
export interface CapabilityTypeListResult extends Array<CapabilityType> {
  /**
   * URL to retrieve the next page of Capability Type resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for CreatedByType.
 * Possible values include: 'User', 'Application', 'ManagedIdentity', 'Key'
 * @readonly
 * @enum {string}
 */
export type CreatedByType = 'User' | 'Application' | 'ManagedIdentity' | 'Key';

/**
 * Defines values for SelectorType.
 * Possible values include: 'Percent', 'Random', 'Tag', 'List'
 * @readonly
 * @enum {string}
 */
export type SelectorType = 'Percent' | 'Random' | 'Tag' | 'List';

/**
 * Defines values for ResourceIdentityType.
 * Possible values include: 'None', 'SystemAssigned'
 * @readonly
 * @enum {string}
 */
export type ResourceIdentityType = 'None' | 'SystemAssigned';

/**
 * Defines values for Origin.
 * Possible values include: 'user', 'system', 'user,system'
 * @readonly
 * @enum {string}
 */
export type Origin = 'user' | 'system' | 'user,system';

/**
 * Defines values for ActionType.
 * Possible values include: 'Internal'
 * @readonly
 * @enum {string}
 */
export type ActionType = 'Internal';

/**
 * Contains response data for the list operation.
 */
export type CapabilitiesListResponse = CapabilityListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CapabilityListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type CapabilitiesGetResponse = Capability & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Capability;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type CapabilitiesCreateOrUpdateResponse = Capability & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Capability;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type CapabilitiesListNextResponse = CapabilityListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CapabilityListResult;
    };
};

/**
 * Contains response data for the listAll operation.
 */
export type ExperimentsListAllResponse = ExperimentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExperimentListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ExperimentsListResponse = ExperimentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExperimentListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ExperimentsGetResponse = Experiment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Experiment;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ExperimentsCreateOrUpdateResponse = Experiment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Experiment;
    };
};

/**
 * Contains response data for the cancel operation.
 */
export type ExperimentsCancelResponse = ExperimentCancelOperationResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExperimentCancelOperationResult;
    };
};

/**
 * Contains response data for the start operation.
 */
export type ExperimentsStartResponse = ExperimentStartOperationResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExperimentStartOperationResult;
    };
};

/**
 * Contains response data for the listAllStatuses operation.
 */
export type ExperimentsListAllStatusesResponse = ExperimentStatusListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExperimentStatusListResult;
    };
};

/**
 * Contains response data for the getStatus operation.
 */
export type ExperimentsGetStatusResponse = ExperimentStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExperimentStatus;
    };
};

/**
 * Contains response data for the listExecutionDetails operation.
 */
export type ExperimentsListExecutionDetailsResponse = ExperimentExecutionDetailsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExperimentExecutionDetailsListResult;
    };
};

/**
 * Contains response data for the getExecutionDetails operation.
 */
export type ExperimentsGetExecutionDetailsResponse = ExperimentExecutionDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExperimentExecutionDetails;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ExperimentsBeginCreateOrUpdateResponse = Experiment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Experiment;
    };
};

/**
 * Contains response data for the beginCancel operation.
 */
export type ExperimentsBeginCancelResponse = ExperimentCancelOperationResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExperimentCancelOperationResult;
    };
};

/**
 * Contains response data for the listAllNext operation.
 */
export type ExperimentsListAllNextResponse = ExperimentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExperimentListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ExperimentsListNextResponse = ExperimentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExperimentListResult;
    };
};

/**
 * Contains response data for the listAllStatusesNext operation.
 */
export type ExperimentsListAllStatusesNextResponse = ExperimentStatusListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExperimentStatusListResult;
    };
};

/**
 * Contains response data for the listExecutionDetailsNext operation.
 */
export type ExperimentsListExecutionDetailsNextResponse = ExperimentExecutionDetailsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExperimentExecutionDetailsListResult;
    };
};

/**
 * Contains response data for the listAll operation.
 */
export type OperationsListAllResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listAllNext operation.
 */
export type OperationsListAllNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type TargetsListResponse = TargetListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TargetListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type TargetsGetResponse = Target & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Target;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type TargetsCreateOrUpdateResponse = Target & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Target;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type TargetsListNextResponse = TargetListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TargetListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type TargetTypesListResponse = TargetTypeListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TargetTypeListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type TargetTypesGetResponse = TargetType & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TargetType;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type TargetTypesListNextResponse = TargetTypeListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TargetTypeListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type CapabilityTypesListResponse = CapabilityTypeListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CapabilityTypeListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type CapabilityTypesGetResponse = CapabilityType & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CapabilityType;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type CapabilityTypesListNextResponse = CapabilityTypeListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CapabilityTypeListResult;
    };
};
