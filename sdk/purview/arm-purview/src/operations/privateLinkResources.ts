/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/privateLinkResourcesMappers";
import * as Parameters from "../models/parameters";
import { PurviewManagementClientContext } from "../purviewManagementClientContext";

/** Class representing a PrivateLinkResources. */
export class PrivateLinkResources {
  private readonly client: PurviewManagementClientContext;

  /**
   * Create a PrivateLinkResources.
   * @param {PurviewManagementClientContext} client Reference to the service client.
   */
  constructor(client: PurviewManagementClientContext) {
    this.client = client;
  }

  /**
   * Gets a list of privately linkable resources for an account
   * @summary Gets a list of privately linkable resources for an account.
   * @param resourceGroupName The resource group name.
   * @param accountName The name of the account.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateLinkResourcesListByAccountResponse>
   */
  listByAccount(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateLinkResourcesListByAccountResponse>;
  /**
   * @param resourceGroupName The resource group name.
   * @param accountName The name of the account.
   * @param callback The callback
   */
  listByAccount(resourceGroupName: string, accountName: string, callback: msRest.ServiceCallback<Models.PrivateLinkResourceList>): void;
  /**
   * @param resourceGroupName The resource group name.
   * @param accountName The name of the account.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByAccount(resourceGroupName: string, accountName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateLinkResourceList>): void;
  listByAccount(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateLinkResourceList>, callback?: msRest.ServiceCallback<Models.PrivateLinkResourceList>): Promise<Models.PrivateLinkResourcesListByAccountResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        accountName,
        options
      },
      listByAccountOperationSpec,
      callback) as Promise<Models.PrivateLinkResourcesListByAccountResponse>;
  }

  /**
   * Gets a privately linkable resources for an account with given group identifier
   * @summary Gets a privately linkable resources for an account with given group identifier.
   * @param resourceGroupName The resource group name.
   * @param accountName The name of the account.
   * @param groupId The group identifier.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateLinkResourcesGetByGroupIdResponse>
   */
  getByGroupId(resourceGroupName: string, accountName: string, groupId: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateLinkResourcesGetByGroupIdResponse>;
  /**
   * @param resourceGroupName The resource group name.
   * @param accountName The name of the account.
   * @param groupId The group identifier.
   * @param callback The callback
   */
  getByGroupId(resourceGroupName: string, accountName: string, groupId: string, callback: msRest.ServiceCallback<Models.PrivateLinkResource>): void;
  /**
   * @param resourceGroupName The resource group name.
   * @param accountName The name of the account.
   * @param groupId The group identifier.
   * @param options The optional parameters
   * @param callback The callback
   */
  getByGroupId(resourceGroupName: string, accountName: string, groupId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateLinkResource>): void;
  getByGroupId(resourceGroupName: string, accountName: string, groupId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateLinkResource>, callback?: msRest.ServiceCallback<Models.PrivateLinkResource>): Promise<Models.PrivateLinkResourcesGetByGroupIdResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        accountName,
        groupId,
        options
      },
      getByGroupIdOperationSpec,
      callback) as Promise<Models.PrivateLinkResourcesGetByGroupIdResponse>;
  }

  /**
   * Gets a list of privately linkable resources for an account
   * @summary Gets a list of privately linkable resources for an account.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateLinkResourcesListByAccountNextResponse>
   */
  listByAccountNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateLinkResourcesListByAccountNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByAccountNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.PrivateLinkResourceList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByAccountNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateLinkResourceList>): void;
  listByAccountNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateLinkResourceList>, callback?: msRest.ServiceCallback<Models.PrivateLinkResourceList>): Promise<Models.PrivateLinkResourcesListByAccountNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByAccountNextOperationSpec,
      callback) as Promise<Models.PrivateLinkResourcesListByAccountNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listByAccountOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Purview/accounts/{accountName}/privateLinkResources",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.accountName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateLinkResourceList
    },
    default: {
      bodyMapper: Mappers.ErrorResponseModel
    }
  },
  serializer
};

const getByGroupIdOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Purview/accounts/{accountName}/privateLinkResources/{groupId}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.accountName,
    Parameters.groupId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateLinkResource
    },
    default: {
      bodyMapper: Mappers.ErrorResponseModel
    }
  },
  serializer
};

const listByAccountNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateLinkResourceList
    },
    default: {
      bodyMapper: Mappers.ErrorResponseModel
    }
  },
  serializer
};
