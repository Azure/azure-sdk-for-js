/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  ScopeType,
  DefaultAccountsGetOptionalParams,
  DefaultAccountsGetResponse,
  DefaultAccountPayload,
  DefaultAccountsSetModelOptionalParams,
  DefaultAccountsSetModelResponse,
  DefaultAccountsRemoveOptionalParams
} from "../models";

/** Interface representing a DefaultAccounts. */
export interface DefaultAccounts {
  /**
   * Get the default account for the scope.
   * @param scopeTenantId The tenant ID.
   * @param scopeType The scope for the default account.
   * @param options The options parameters.
   */
  get(
    scopeTenantId: string,
    scopeType: ScopeType,
    options?: DefaultAccountsGetOptionalParams
  ): Promise<DefaultAccountsGetResponse>;
  /**
   * Sets the default account for the scope.
   * @param defaultAccountPayload The payload containing the default account information and the scope.
   * @param options The options parameters.
   */
  set(
    defaultAccountPayload: DefaultAccountPayload,
    options?: DefaultAccountsSetModelOptionalParams
  ): Promise<DefaultAccountsSetModelResponse>;
  /**
   * Removes the default account from the scope.
   * @param scopeTenantId The tenant ID.
   * @param scopeType The scope for the default account.
   * @param options The options parameters.
   */
  remove(
    scopeTenantId: string,
    scopeType: ScopeType,
    options?: DefaultAccountsRemoveOptionalParams
  ): Promise<void>;
}
