// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import type { SubscriptionOperation } from "../operationsInterfaces/index.js";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers.js";
import * as Parameters from "../models/parameters.js";
import type { SubscriptionClient } from "../subscriptionClient.js";
import type {
  SubscriptionOperationGetOptionalParams,
  SubscriptionOperationGetResponse,
} from "../models/index.js";

/** Class containing SubscriptionOperation operations. */
export class SubscriptionOperationImpl implements SubscriptionOperation {
  private readonly client: SubscriptionClient;

  /**
   * Initialize a new instance of the class SubscriptionOperation class.
   * @param client Reference to the service client
   */
  constructor(client: SubscriptionClient) {
    this.client = client;
  }

  /**
   * Get the status of the pending Microsoft.Subscription API operations.
   * @param operationId The operation ID, which can be found from the Location field in the generate
   *                    recommendation response header.
   * @param options The options parameters.
   */
  get(
    operationId: string,
    options?: SubscriptionOperationGetOptionalParams,
  ): Promise<SubscriptionOperationGetResponse> {
    return this.client.sendOperationRequest({ operationId, options }, getOperationSpec);
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getOperationSpec: coreClient.OperationSpec = {
  path: "/providers/Microsoft.Subscription/subscriptionOperations/{operationId}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.SubscriptionCreationResult,
    },
    202: {
      headersMapper: Mappers.SubscriptionOperationGetHeaders,
    },
    default: {
      bodyMapper: Mappers.ErrorResponseBody,
    },
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.$host, Parameters.operationId],
  headerParameters: [Parameters.accept],
  serializer,
};
