/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  GetTenantPolicyResponse,
  SubscriptionPolicyListPolicyForTenantOptionalParams,
  PutTenantPolicyRequestProperties,
  SubscriptionPolicyAddUpdatePolicyForTenantOptionalParams,
  SubscriptionPolicyAddUpdatePolicyForTenantResponse,
  SubscriptionPolicyGetPolicyForTenantOptionalParams,
  SubscriptionPolicyGetPolicyForTenantResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SubscriptionPolicy. */
export interface SubscriptionPolicy {
  /**
   * Get the subscription tenant policy for the user's tenant.
   * @param options The options parameters.
   */
  listPolicyForTenant(
    options?: SubscriptionPolicyListPolicyForTenantOptionalParams
  ): PagedAsyncIterableIterator<GetTenantPolicyResponse>;
  /**
   * Create or Update Subscription tenant policy for user's tenant.
   * @param body Put tenant policy request properties.
   * @param options The options parameters.
   */
  addUpdatePolicyForTenant(
    body: PutTenantPolicyRequestProperties,
    options?: SubscriptionPolicyAddUpdatePolicyForTenantOptionalParams
  ): Promise<SubscriptionPolicyAddUpdatePolicyForTenantResponse>;
  /**
   * Get the subscription tenant policy for the user's tenant.
   * @param options The options parameters.
   */
  getPolicyForTenant(
    options?: SubscriptionPolicyGetPolicyForTenantOptionalParams
  ): Promise<SubscriptionPolicyGetPolicyForTenantResponse>;
}
