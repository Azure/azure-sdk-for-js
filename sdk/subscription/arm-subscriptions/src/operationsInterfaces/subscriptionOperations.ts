/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  SubscriptionCancelOptionalParams,
  SubscriptionCancelResponse,
  SubscriptionName,
  SubscriptionRenameOptionalParams,
  SubscriptionRenameResponse,
  SubscriptionEnableOptionalParams,
  SubscriptionEnableResponse,
  AcceptOwnershipRequest,
  SubscriptionAcceptOwnershipOptionalParams,
  SubscriptionAcceptOwnershipResponse,
  SubscriptionAcceptOwnershipStatusOptionalParams,
  SubscriptionAcceptOwnershipStatusResponse
} from "../models";

/** Interface representing a SubscriptionOperations. */
export interface SubscriptionOperations {
  /**
   * The operation to cancel a subscription
   * @param subscriptionId Subscription Id.
   * @param options The options parameters.
   */
  cancel(
    subscriptionId: string,
    options?: SubscriptionCancelOptionalParams
  ): Promise<SubscriptionCancelResponse>;
  /**
   * The operation to rename a subscription
   * @param subscriptionId Subscription Id.
   * @param body Subscription Name
   * @param options The options parameters.
   */
  rename(
    subscriptionId: string,
    body: SubscriptionName,
    options?: SubscriptionRenameOptionalParams
  ): Promise<SubscriptionRenameResponse>;
  /**
   * The operation to enable a subscription
   * @param subscriptionId Subscription Id.
   * @param options The options parameters.
   */
  enable(
    subscriptionId: string,
    options?: SubscriptionEnableOptionalParams
  ): Promise<SubscriptionEnableResponse>;
  /**
   * Accept subscription ownership.
   * @param subscriptionId Subscription Id.
   * @param body The parameters required to accept subscription ownership.
   * @param options The options parameters.
   */
  beginAcceptOwnership(
    subscriptionId: string,
    body: AcceptOwnershipRequest,
    options?: SubscriptionAcceptOwnershipOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<SubscriptionAcceptOwnershipResponse>,
      SubscriptionAcceptOwnershipResponse
    >
  >;
  /**
   * Accept subscription ownership.
   * @param subscriptionId Subscription Id.
   * @param body The parameters required to accept subscription ownership.
   * @param options The options parameters.
   */
  beginAcceptOwnershipAndWait(
    subscriptionId: string,
    body: AcceptOwnershipRequest,
    options?: SubscriptionAcceptOwnershipOptionalParams
  ): Promise<SubscriptionAcceptOwnershipResponse>;
  /**
   * Accept subscription ownership status.
   * @param subscriptionId Subscription Id.
   * @param options The options parameters.
   */
  acceptOwnershipStatus(
    subscriptionId: string,
    options?: SubscriptionAcceptOwnershipStatusOptionalParams
  ): Promise<SubscriptionAcceptOwnershipStatusResponse>;
}
