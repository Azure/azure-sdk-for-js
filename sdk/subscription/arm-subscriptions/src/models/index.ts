/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Describes the format of Error response.
 */
export interface ErrorResponse {
  /**
   * Error code
   */
  code?: string;
  /**
   * Error message indicating why the operation failed.
   */
  message?: string;
}

/**
 * Canceled Subscription Id
 */
export interface CanceledSubscriptionId {
  /**
   * Canceled Subscription Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: string;
}

/**
 * Renamed Subscription Id
 */
export interface RenamedSubscriptionId {
  /**
   * Renamed Subscription Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: string;
}

/**
 * Enabled Subscription Id
 */
export interface EnabledSubscriptionId {
  /**
   * Enabled Subscription Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: string;
}

/**
 * New name of the subscription.
 */
export interface SubscriptionName {
  /**
   * New subscription name
   */
  subscriptionName?: string;
}

/**
 * The object that represents the operation.
 */
export interface OperationDisplay {
  /**
   * Service provider: Microsoft.Subscription
   */
  provider?: string;
  /**
   * Resource on which the operation is performed: Profile, endpoint, etc.
   */
  resource?: string;
  /**
   * Operation type: Read, write, delete, etc.
   */
  operation?: string;
}

/**
 * REST API operation
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * The object that represents the operation.
   */
  display?: OperationDisplay;
}

/**
 * Result of the request to list operations. It contains a list of operations and a URL link to get
 * the next set of results.
 */
export interface OperationListResult {
  /**
   * List of operations.
   */
  value?: Operation[];
  /**
   * URL to get the next set of operation list results if there are any.
   */
  nextLink?: string;
}

/**
 * The created subscription object.
 */
export interface SubscriptionCreationResult {
  /**
   * The link to the new subscription.
   */
  subscriptionLink?: string;
}

/**
 * Active Directory Principal for subscription creation delegated permission
 */
export interface AdPrincipal {
  /**
   * Object id of the Principal
   */
  objectId: string;
}

/**
 * Subscription Creation Parameters required to create a new Azure subscription.
 */
export interface ModernSubscriptionCreationParameters {
  /**
   * The display name of the subscription.
   */
  displayName?: string;
  /**
   * The ARM id of the billing profile.
   */
  billingProfileId?: string;
  /**
   * The commerce id of the sku.
   */
  skuId?: string;
  /**
   * optional customer cost center
   */
  costCenter?: string;
  /**
   * rbac owner of the subscription
   */
  owner?: AdPrincipal;
  /**
   * Additional, untyped parameters to support custom subscription creation scenarios.
   */
  additionalParameters?: { [propertyName: string]: any };
}

/**
 * status of the subscription POST operation.
 */
export interface SubscriptionOperation {
  /**
   * The operation Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Status of the pending subscription
   */
  status?: string;
  /**
   * Status Detail of the pending subscription
   */
  statusDetail?: string;
}

/**
 * A list of pending subscription operations.
 */
export interface SubscriptionOperationListResult {
  /**
   * A list of pending SubscriptionOperations
   */
  value?: SubscriptionOperation[];
}

/**
 * Subscription Creation Parameters required to create a new Azure subscription.
 */
export interface SubscriptionCreationParameters {
  /**
   * The display name of the subscription.
   */
  displayName?: string;
  /**
   * The list of principals that should be granted Owner access on the subscription. Principals
   * should be of type User, Service Principal or Security Group.
   */
  owners?: AdPrincipal[];
  /**
   * The offer type of the subscription. For example, MS-AZR-0017P (EnterpriseAgreement) and
   * MS-AZR-0148P (EnterpriseAgreement devTest) are available. Only valid when creating a
   * subscription in a enrollment account scope. Possible values include: 'MS-AZR-0017P',
   * 'MS-AZR-0148P'
   */
  offerType?: OfferType;
  /**
   * Additional, untyped parameters to support custom subscription creation scenarios.
   */
  additionalParameters?: { [propertyName: string]: any };
}

/**
 * Location information.
 */
export interface Location {
  /**
   * The fully qualified ID of the location. For example,
   * /subscriptions/00000000-0000-0000-0000-000000000000/locations/westus.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The subscription ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subscriptionId?: string;
  /**
   * The location name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The display name of the location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * The latitude of the location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly latitude?: string;
  /**
   * The longitude of the location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly longitude?: string;
}

/**
 * Subscription policies.
 */
export interface SubscriptionPolicies {
  /**
   * The subscription location placement ID. The ID indicates which regions are visible for a
   * subscription. For example, a subscription with a location placement Id of Public_2014-09-01
   * has access to Azure public regions.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly locationPlacementId?: string;
  /**
   * The subscription quota ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly quotaId?: string;
  /**
   * The subscription spending limit. Possible values include: 'On', 'Off', 'CurrentPeriodOff'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly spendingLimit?: SpendingLimit;
}

/**
 * Subscription information.
 */
export interface Subscription {
  /**
   * The fully qualified ID for the subscription. For example,
   * /subscriptions/00000000-0000-0000-0000-000000000000.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The subscription ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subscriptionId?: string;
  /**
   * The subscription display name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * The subscription state. Possible values are Enabled, Warned, PastDue, Disabled, and Deleted.
   * Possible values include: 'Enabled', 'Warned', 'PastDue', 'Disabled', 'Deleted'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: SubscriptionState;
  /**
   * The subscription policies.
   */
  subscriptionPolicies?: SubscriptionPolicies;
  /**
   * The authorization source of the request. Valid values are one or more combinations of Legacy,
   * RoleBased, Bypassed, Direct and Management. For example, 'Legacy, RoleBased'.
   */
  authorizationSource?: string;
}

/**
 * Tenant Id information.
 */
export interface TenantIdDescription {
  /**
   * The fully qualified ID of the tenant. For example,
   * /tenants/00000000-0000-0000-0000-000000000000.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The tenant ID. For example, 00000000-0000-0000-0000-000000000000.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
}

/**
 * An interface representing SubscriptionClientOptions.
 */
export interface SubscriptionClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * Defines headers for Get operation.
 */
export interface SubscriptionOperationGetHeaders {
  /**
   * The URL where the status of the asynchronous operation can be checked.
   */
  location: string;
  /**
   * The amount of delay to use while the status of the operation is checked. The value is
   * expressed in seconds.
   */
  retryAfter: number;
}

/**
 * Defines headers for CreateSubscription operation.
 */
export interface SubscriptionFactoryCreateSubscriptionHeaders {
  /**
   * GET this URL to retrieve the status of the asynchronous operation.
   */
  location: string;
  /**
   * The amount of delay to use while the status of the operation is checked. The value is
   * expressed in seconds.
   */
  retryAfter: number;
}

/**
 * Defines headers for CreateSubscriptionInEnrollmentAccount operation.
 */
export interface SubscriptionFactoryCreateSubscriptionInEnrollmentAccountHeaders {
  /**
   * GET this URL to retrieve the status of the asynchronous operation.
   */
  location: string;
  /**
   * The amount of delay to use while the status of the operation is checked. The value is
   * expressed in seconds.
   */
  retryAfter: string;
}

/**
 * @interface
 * Location list operation response.
 * @extends Array<Location>
 */
export interface LocationListResult extends Array<Location> {
}

/**
 * @interface
 * Subscription list operation response.
 * @extends Array<Subscription>
 */
export interface SubscriptionListResult extends Array<Subscription> {
  /**
   * The URL to get the next set of results.
   */
  nextLink: string;
}

/**
 * @interface
 * Tenant Ids information.
 * @extends Array<TenantIdDescription>
 */
export interface TenantListResult extends Array<TenantIdDescription> {
  /**
   * The URL to use for getting the next set of results.
   */
  nextLink: string;
}

/**
 * Defines values for SubscriptionState.
 * Possible values include: 'Enabled', 'Warned', 'PastDue', 'Disabled', 'Deleted'
 * @readonly
 * @enum {string}
 */
export type SubscriptionState = 'Enabled' | 'Warned' | 'PastDue' | 'Disabled' | 'Deleted';

/**
 * Defines values for SpendingLimit.
 * Possible values include: 'On', 'Off', 'CurrentPeriodOff'
 * @readonly
 * @enum {string}
 */
export type SpendingLimit = 'On' | 'Off' | 'CurrentPeriodOff';

/**
 * Contains response data for the cancel operation.
 */
export type SubscriptionsCancelResponse = CanceledSubscriptionId & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CanceledSubscriptionId;
    };
};

/**
 * Contains response data for the rename operation.
 */
export type SubscriptionsRenameResponse = RenamedSubscriptionId & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RenamedSubscriptionId;
    };
};

/**
 * Contains response data for the enable operation.
 */
export type SubscriptionsEnableResponse = EnabledSubscriptionId & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EnabledSubscriptionId;
    };
};

/**
 * Contains response data for the listLocations operation.
 */
export type SubscriptionsListLocationsResponse = LocationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LocationListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SubscriptionsGetResponse = Subscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Subscription;
    };
};

/**
 * Contains response data for the list operation.
 */
export type SubscriptionsListResponse = SubscriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type SubscriptionsListNextResponse = SubscriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SubscriptionOperationGetResponse = SubscriptionCreationResult & SubscriptionOperationGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SubscriptionOperationGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionCreationResult;
    };
};

/**
 * Contains response data for the createSubscription operation.
 */
export type SubscriptionFactoryCreateSubscriptionResponse = SubscriptionCreationResult & SubscriptionFactoryCreateSubscriptionHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SubscriptionFactoryCreateSubscriptionHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionCreationResult;
    };
};

/**
 * Contains response data for the createSubscriptionInEnrollmentAccount operation.
 */
export type SubscriptionFactoryCreateSubscriptionInEnrollmentAccountResponse = SubscriptionCreationResult & SubscriptionFactoryCreateSubscriptionInEnrollmentAccountHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SubscriptionFactoryCreateSubscriptionInEnrollmentAccountHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionCreationResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type SubscriptionOperationsListResponse = SubscriptionOperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionOperationListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type TenantsListResponse = TenantListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TenantListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type TenantsListNextResponse = TenantListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TenantListResult;
    };
};
