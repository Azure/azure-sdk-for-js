/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** Location list operation response. */
export interface LocationListResult {
  /** An array of locations. */
  value?: Location[];
}

/** Location information. */
export interface Location {
  /**
   * The fully qualified ID of the location. For example, /subscriptions/00000000-0000-0000-0000-000000000000/locations/westus.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The subscription ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionId?: string;
  /**
   * The location name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The display name of the location.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * The latitude of the location.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly latitude?: string;
  /**
   * The longitude of the location.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly longitude?: string;
}

/** Subscription information. */
export interface Subscription {
  /**
   * The fully qualified ID for the subscription. For example, /subscriptions/00000000-0000-0000-0000-000000000000.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The subscription ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionId?: string;
  /**
   * The subscription display name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * The subscription state. Possible values are Enabled, Warned, PastDue, Disabled, and Deleted.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly state?: SubscriptionState;
  /**
   * The tenant ID. For example, 00000000-0000-0000-0000-000000000000.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** Tags for the subscription */
  tags?: { [propertyName: string]: string };
  /** The subscription policies. */
  subscriptionPolicies?: SubscriptionPolicies;
  /** The authorization source of the request. Valid values are one or more combinations of Legacy, RoleBased, Bypassed, Direct and Management. For example, 'Legacy, RoleBased'. */
  authorizationSource?: string;
}

/** Subscription policies. */
export interface SubscriptionPolicies {
  /**
   * The subscription location placement ID. The ID indicates which regions are visible for a subscription. For example, a subscription with a location placement Id of Public_2014-09-01 has access to Azure public regions.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly locationPlacementId?: string;
  /**
   * The subscription quota ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly quotaId?: string;
  /**
   * The subscription spending limit.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly spendingLimit?: SpendingLimit;
}

/** Subscription list operation response. */
export interface SubscriptionListResult {
  /** An array of subscriptions. */
  value?: Subscription[];
  /** The URL to get the next set of results. */
  nextLink?: string;
}

/** Tenant Ids information. */
export interface TenantListResult {
  /** An array of tenants. */
  value?: TenantIdDescription[];
  /** The URL to use for getting the next set of results. */
  nextLink: string;
}

/** Tenant Id information. */
export interface TenantIdDescription {
  /**
   * The fully qualified ID of the tenant. For example, /tenants/00000000-0000-0000-0000-000000000000.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The tenant ID. For example, 00000000-0000-0000-0000-000000000000.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /**
   * The category of the tenant. Possible values are TenantCategoryHome,TenantCategoryProjectedBy,TenantCategoryManagedBy
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantCategory?: string;
  /**
   * The country/region name of the address for the tenant.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly country?: string;
  /**
   * The Country/region abbreviation for the tenant.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly countryCode?: string;
  /**
   * The display name of the tenant.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * The list of domains for the tenant.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly domains?: string;
  /**
   * The default domain for the tenant.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly defaultDomain?: string;
  /**
   * The tenant type. Only available for Home tenant category.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantType?: string;
}

/** The ID of the canceled subscription */
export interface CanceledSubscriptionId {
  /**
   * The ID of the canceled subscription
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionId?: string;
}

/** Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message. */
export interface ErrorResponseBody {
  /** The details of the error. */
  error?: ErrorResponse;
  /** Error code */
  code?: string;
  /** Error message indicating why the operation failed. */
  message?: string;
}

/** Describes the format of Error response. */
export interface ErrorResponse {
  /** Error code */
  code?: string;
  /** Error message indicating why the operation failed. */
  message?: string;
}

/** The new name of the subscription. */
export interface SubscriptionName {
  /** New subscription name */
  subscriptionName?: string;
}

/** The ID of the subscriptions that is being renamed */
export interface RenamedSubscriptionId {
  /**
   * The ID of the subscriptions that is being renamed
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionId?: string;
}

/** The ID of the subscriptions that is being enabled */
export interface EnabledSubscriptionId {
  /**
   * The ID of the subscriptions that is being enabled
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionId?: string;
}

/** Result of the request to list operations. It contains a list of operations and a URL link to get the next set of results. */
export interface OperationListResult {
  /** List of operations. */
  value?: Operation[];
  /** URL to get the next set of operation list results if there are any. */
  nextLink?: string;
}

/** REST API operation */
export interface Operation {
  /** Operation name: {provider}/{resource}/{operation} */
  name?: string;
  /** Indicates whether the operation is a data action */
  isDataAction?: boolean;
  /** The object that represents the operation. */
  display?: OperationDisplay;
}

/** The object that represents the operation. */
export interface OperationDisplay {
  /** Service provider: Microsoft.Subscription */
  provider?: string;
  /** Resource on which the operation is performed: Profile, endpoint, etc. */
  resource?: string;
  /** Operation type: Read, write, delete, etc. */
  operation?: string;
  /** Localized friendly description for the operation */
  description?: string;
}

/** The parameters required to create a new subscription. */
export interface PutAliasRequest {
  /** Put alias request properties. */
  properties?: PutAliasRequestProperties;
}

/** Put subscription properties. */
export interface PutAliasRequestProperties {
  /** The friendly name of the subscription. */
  displayName?: string;
  /** The workload type of the subscription. It can be either Production or DevTest. */
  workload?: Workload;
  /**
   * Billing scope of the subscription.
   * For CustomerLed and FieldLed - /billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}
   * For PartnerLed - /billingAccounts/{billingAccountName}/customers/{customerName}
   * For Legacy EA - /billingAccounts/{billingAccountName}/enrollmentAccounts/{enrollmentAccountName}
   */
  billingScope?: string;
  /** This parameter can be used to create alias for existing subscription Id */
  subscriptionId?: string;
  /** Reseller Id */
  resellerId?: string;
  /** Put alias request additional properties. */
  additionalProperties?: PutAliasRequestAdditionalProperties;
}

/** Put subscription additional properties. */
export interface PutAliasRequestAdditionalProperties {
  /** Management group Id for the subscription. */
  managementGroupId?: string;
  /** Tenant Id of the subscription */
  subscriptionTenantId?: string;
  /** Owner Id of the subscription */
  subscriptionOwnerId?: string;
  /** Tags for the subscription */
  tags?: { [propertyName: string]: string };
}

/** Subscription Information with the alias. */
export interface SubscriptionAliasResponse {
  /**
   * Fully qualified ID for the alias resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Alias ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Resource type, Microsoft.Subscription/aliases.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** Subscription Alias response properties. */
  properties?: SubscriptionAliasResponseProperties;
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Put subscription creation result properties. */
export interface SubscriptionAliasResponseProperties {
  /**
   * Newly created subscription Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionId?: string;
  /** The display name of the subscription. */
  displayName?: string;
  /** The provisioning state of the resource. */
  provisioningState?: ProvisioningState;
  /**
   * Url to accept ownership of the subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly acceptOwnershipUrl?: string;
  /**
   * The accept ownership state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly acceptOwnershipState?: AcceptOwnership;
  /**
   * Billing scope of the subscription.
   * For CustomerLed and FieldLed - /billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}
   * For PartnerLed - /billingAccounts/{billingAccountName}/customers/{customerName}
   * For Legacy EA - /billingAccounts/{billingAccountName}/enrollmentAccounts/{enrollmentAccountName}
   */
  billingScope?: string;
  /** The workload type of the subscription. It can be either Production or DevTest. */
  workload?: Workload;
  /** Reseller Id */
  resellerId?: string;
  /** Owner Id of the subscription */
  subscriptionOwnerId?: string;
  /** The Management Group Id. */
  managementGroupId?: string;
  /** Created Time */
  createdTime?: string;
  /** Tags for the subscription */
  tags?: { [propertyName: string]: string };
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** The list of aliases. */
export interface SubscriptionAliasListResult {
  /**
   * The list of alias.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: SubscriptionAliasResponse[];
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** The parameters required to accept subscription ownership. */
export interface AcceptOwnershipRequest {
  /** Accept subscription ownership request properties. */
  properties?: AcceptOwnershipRequestProperties;
}

/** Accept subscription ownership request properties. */
export interface AcceptOwnershipRequestProperties {
  /** The friendly name of the subscription. */
  displayName: string;
  /** Management group Id for the subscription. */
  managementGroupId?: string;
  /** Tags for the subscription */
  tags?: { [propertyName: string]: string };
}

/** Subscription Accept Ownership Response */
export interface AcceptOwnershipStatusResponse {
  /**
   * Newly created subscription Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionId?: string;
  /**
   * The accept ownership state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly acceptOwnershipState?: AcceptOwnership;
  /**
   * The provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: Provisioning;
  /**
   * UPN of the billing owner
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingOwner?: string;
  /** Tenant Id of the subscription */
  subscriptionTenantId?: string;
  /** The display name of the subscription. */
  displayName?: string;
  /** Tags for the subscription */
  tags?: { [propertyName: string]: string };
}

/** Put tenant policy request properties. */
export interface PutTenantPolicyRequestProperties {
  /** Blocks the leaving of subscriptions from user's tenant. */
  blockSubscriptionsLeavingTenant?: boolean;
  /** Blocks the entering of subscriptions into user's tenant. */
  blockSubscriptionsIntoTenant?: boolean;
  /** List of user objectIds that are exempted from the set subscription tenant policies for the user's tenant. */
  exemptedPrincipals?: string[];
}

/** Tenant policy Information. */
export interface GetTenantPolicyResponse {
  /**
   * Policy Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Policy name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Resource type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** Tenant policy properties. */
  properties?: TenantPolicy;
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Tenant policy. */
export interface TenantPolicy {
  /**
   * Policy Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly policyId?: string;
  /** Blocks the leaving of subscriptions from user's tenant. */
  blockSubscriptionsLeavingTenant?: boolean;
  /** Blocks the entering of subscriptions into user's tenant. */
  blockSubscriptionsIntoTenant?: boolean;
  /** List of user objectIds that are exempted from the set subscription tenant policies for the user's tenant. */
  exemptedPrincipals?: string[];
}

/** Tenant policy information list. */
export interface GetTenantPolicyListResponse {
  /**
   * The list of tenant policies.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: GetTenantPolicyResponse[];
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Billing account policies information. */
export interface BillingAccountPoliciesResponse {
  /**
   * Fully qualified ID for the policy.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Policy name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Resource type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** Billing account policies response properties. */
  properties?: BillingAccountPoliciesResponseProperties;
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Put billing account policies response properties. */
export interface BillingAccountPoliciesResponseProperties {
  /** Service tenant for the billing account. */
  serviceTenants?: ServiceTenantResponse[];
  /** Determine if the transfers are allowed for the billing account */
  allowTransfers?: boolean;
}

/** Billing account service tenant. */
export interface ServiceTenantResponse {
  /** Service tenant id. */
  tenantId?: string;
  /** Service tenant name. */
  tenantName?: string;
}

/** Defines headers for Subscription_acceptOwnership operation. */
export interface SubscriptionAcceptOwnershipHeaders {
  /** GET this URL to retrieve the status of the asynchronous operation. */
  location?: string;
  /** The amount of delay to use while the status of the operation is checked. The value is expressed in seconds. */
  retryAfter?: number;
}

/** Known values of {@link Workload} that the service accepts. */
export enum KnownWorkload {
  /** Production */
  Production = "Production",
  /** DevTest */
  DevTest = "DevTest"
}

/**
 * Defines values for Workload. \
 * {@link KnownWorkload} can be used interchangeably with Workload,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Production** \
 * **DevTest**
 */
export type Workload = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Accepted */
  Accepted = "Accepted",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Accepted** \
 * **Succeeded** \
 * **Failed**
 */
export type ProvisioningState = string;

/** Known values of {@link AcceptOwnership} that the service accepts. */
export enum KnownAcceptOwnership {
  /** Pending */
  Pending = "Pending",
  /** Completed */
  Completed = "Completed",
  /** Expired */
  Expired = "Expired"
}

/**
 * Defines values for AcceptOwnership. \
 * {@link KnownAcceptOwnership} can be used interchangeably with AcceptOwnership,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Completed** \
 * **Expired**
 */
export type AcceptOwnership = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link Provisioning} that the service accepts. */
export enum KnownProvisioning {
  /** Pending */
  Pending = "Pending",
  /** Accepted */
  Accepted = "Accepted",
  /** Succeeded */
  Succeeded = "Succeeded"
}

/**
 * Defines values for Provisioning. \
 * {@link KnownProvisioning} can be used interchangeably with Provisioning,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Accepted** \
 * **Succeeded**
 */
export type Provisioning = string;
/** Defines values for SubscriptionState. */
export type SubscriptionState =
  | "Enabled"
  | "Warned"
  | "PastDue"
  | "Disabled"
  | "Deleted";
/** Defines values for SpendingLimit. */
export type SpendingLimit = "On" | "Off" | "CurrentPeriodOff";

/** Optional parameters. */
export interface SubscriptionsListLocationsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listLocations operation. */
export type SubscriptionsListLocationsResponse = LocationListResult;

/** Optional parameters. */
export interface SubscriptionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SubscriptionsGetResponse = Subscription;

/** Optional parameters. */
export interface SubscriptionsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type SubscriptionsListResponse = SubscriptionListResult;

/** Optional parameters. */
export interface SubscriptionsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type SubscriptionsListNextResponse = SubscriptionListResult;

/** Optional parameters. */
export interface TenantsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type TenantsListResponse = TenantListResult;

/** Optional parameters. */
export interface TenantsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type TenantsListNextResponse = TenantListResult;

/** Optional parameters. */
export interface SubscriptionCancelOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the cancel operation. */
export type SubscriptionCancelResponse = CanceledSubscriptionId;

/** Optional parameters. */
export interface SubscriptionRenameOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the rename operation. */
export type SubscriptionRenameResponse = RenamedSubscriptionId;

/** Optional parameters. */
export interface SubscriptionEnableOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the enable operation. */
export type SubscriptionEnableResponse = EnabledSubscriptionId;

/** Optional parameters. */
export interface SubscriptionAcceptOwnershipOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the acceptOwnership operation. */
export type SubscriptionAcceptOwnershipResponse = SubscriptionAcceptOwnershipHeaders;

/** Optional parameters. */
export interface SubscriptionAcceptOwnershipStatusOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the acceptOwnershipStatus operation. */
export type SubscriptionAcceptOwnershipStatusResponse = AcceptOwnershipStatusResponse;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface AliasCreateOptionalParams extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type AliasCreateResponse = SubscriptionAliasResponse;

/** Optional parameters. */
export interface AliasGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AliasGetResponse = SubscriptionAliasResponse;

/** Optional parameters. */
export interface AliasDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface AliasListOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type AliasListResponse = SubscriptionAliasListResult;

/** Optional parameters. */
export interface SubscriptionPolicyAddUpdatePolicyForTenantOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the addUpdatePolicyForTenant operation. */
export type SubscriptionPolicyAddUpdatePolicyForTenantResponse = GetTenantPolicyResponse;

/** Optional parameters. */
export interface SubscriptionPolicyGetPolicyForTenantOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getPolicyForTenant operation. */
export type SubscriptionPolicyGetPolicyForTenantResponse = GetTenantPolicyResponse;

/** Optional parameters. */
export interface SubscriptionPolicyListPolicyForTenantOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listPolicyForTenant operation. */
export type SubscriptionPolicyListPolicyForTenantResponse = GetTenantPolicyListResponse;

/** Optional parameters. */
export interface SubscriptionPolicyListPolicyForTenantNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listPolicyForTenantNext operation. */
export type SubscriptionPolicyListPolicyForTenantNextResponse = GetTenantPolicyListResponse;

/** Optional parameters. */
export interface BillingAccountGetPolicyOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getPolicy operation. */
export type BillingAccountGetPolicyResponse = BillingAccountPoliciesResponse;

/** Optional parameters. */
export interface SubscriptionClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
