/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreAuth from "@azure/core-auth";
import {
  NamespacesImpl,
  PrivateEndpointConnectionsImpl,
  PrivateLinkResourcesImpl,
  DisasterRecoveryConfigsImpl,
  QueuesImpl,
  TopicsImpl,
  EventHubsImpl,
  MigrationConfigsImpl,
  PremiumMessagingRegionsOperationsImpl,
  RegionsImpl,
  SubscriptionsImpl,
  RulesImpl,
  OperationsImpl
} from "./operations";
import {
  Namespaces,
  PrivateEndpointConnections,
  PrivateLinkResources,
  DisasterRecoveryConfigs,
  Queues,
  Topics,
  EventHubs,
  MigrationConfigs,
  PremiumMessagingRegionsOperations,
  Regions,
  Subscriptions,
  Rules,
  Operations
} from "./operationsInterfaces";
import { ServiceBusManagementClientContext } from "./serviceBusManagementClientContext";
import { ServiceBusManagementClientOptionalParams } from "./models";

export class ServiceBusManagementClient extends ServiceBusManagementClientContext {
  /**
   * Initializes a new instance of the ServiceBusManagementClient class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param subscriptionId Subscription credentials that uniquely identify a Microsoft Azure
   *                       subscription. The subscription ID forms part of the URI for every service call.
   * @param options The parameter options
   */
  constructor(
    credentials: coreAuth.TokenCredential,
    subscriptionId: string,
    options?: ServiceBusManagementClientOptionalParams
  ) {
    super(credentials, subscriptionId, options);
    this.namespaces = new NamespacesImpl(this);
    this.privateEndpointConnections = new PrivateEndpointConnectionsImpl(this);
    this.privateLinkResources = new PrivateLinkResourcesImpl(this);
    this.disasterRecoveryConfigs = new DisasterRecoveryConfigsImpl(this);
    this.queues = new QueuesImpl(this);
    this.topics = new TopicsImpl(this);
    this.eventHubs = new EventHubsImpl(this);
    this.migrationConfigs = new MigrationConfigsImpl(this);
    this.premiumMessagingRegionsOperations = new PremiumMessagingRegionsOperationsImpl(
      this
    );
    this.regions = new RegionsImpl(this);
    this.subscriptions = new SubscriptionsImpl(this);
    this.rules = new RulesImpl(this);
    this.operations = new OperationsImpl(this);
  }

  namespaces: Namespaces;
  privateEndpointConnections: PrivateEndpointConnections;
  privateLinkResources: PrivateLinkResources;
  disasterRecoveryConfigs: DisasterRecoveryConfigs;
  queues: Queues;
  topics: Topics;
  eventHubs: EventHubs;
  migrationConfigs: MigrationConfigs;
  premiumMessagingRegionsOperations: PremiumMessagingRegionsOperations;
  regions: Regions;
  subscriptions: Subscriptions;
  rules: Rules;
  operations: Operations;
}
