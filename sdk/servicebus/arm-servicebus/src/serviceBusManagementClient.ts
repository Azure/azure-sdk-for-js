/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import { TokenCredential } from "@azure/core-auth";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as operations from "./operations";
import { ServiceBusManagementClientContext } from "./serviceBusManagementClientContext";


class ServiceBusManagementClient extends ServiceBusManagementClientContext {
  // Operation groups
  operations: operations.Operations;
  namespaces: operations.Namespaces;
  disasterRecoveryConfigs: operations.DisasterRecoveryConfigs;
  migrationConfigs: operations.MigrationConfigs;
  queues: operations.Queues;
  topics: operations.Topics;
  subscriptions: operations.Subscriptions;
  rules: operations.Rules;
  regions: operations.Regions;
  premiumMessagingRegions: operations.PremiumMessagingRegionsOperations;
  eventHubs: operations.EventHubs;

  /**
   * Initializes a new instance of the ServiceBusManagementClient class.
   * @param credentials Credentials needed for the client to connect to Azure. Credentials
   * implementing the TokenCredential interface from the @azure/identity package are recommended. For
   * more information about these credentials, see
   * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the
   * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and
   * @azure/ms-rest-browserauth are also supported.
   * @param subscriptionId Subscription credentials that uniquely identify a Microsoft Azure
   * subscription. The subscription ID forms part of the URI for every service call.
   * @param [options] The parameter options
   */
  constructor(credentials: msRest.ServiceClientCredentials | TokenCredential, subscriptionId: string, options?: Models.ServiceBusManagementClientOptions) {
    super(credentials, subscriptionId, options);
    this.operations = new operations.Operations(this);
    this.namespaces = new operations.Namespaces(this);
    this.disasterRecoveryConfigs = new operations.DisasterRecoveryConfigs(this);
    this.migrationConfigs = new operations.MigrationConfigs(this);
    this.queues = new operations.Queues(this);
    this.topics = new operations.Topics(this);
    this.subscriptions = new operations.Subscriptions(this);
    this.rules = new operations.Rules(this);
    this.regions = new operations.Regions(this);
    this.premiumMessagingRegions = new operations.PremiumMessagingRegionsOperations(this);
    this.eventHubs = new operations.EventHubs(this);
  }
}

// Operation Specifications

export {
  ServiceBusManagementClient,
  ServiceBusManagementClientContext,
  Models as ServiceBusManagementModels,
  Mappers as ServiceBusManagementMappers
};
export * from "./operations";
