/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** The response of the List Namespace operation. */
export interface SBNamespaceListResult {
  /** Result of the List Namespace operation. */
  value?: SBNamespace[];
  /** Link to the next set of results. Not empty if Value contains incomplete list of Namespaces. */
  nextLink?: string;
}

/** SKU of the namespace. */
export interface SBSku {
  /** Name of this SKU. */
  name: SkuName;
  /** The billing tier of this particular SKU. */
  tier?: SkuTier;
  /** The specified messaging units for the tier. For Premium tier, capacity are 1,2 and 4. */
  capacity?: number;
}

/** Properties to configure User Assigned Identities for Bring your Own Keys */
export interface Identity {
  /**
   * ObjectId from the KeyVault
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * TenantId from the KeyVault
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** Type of managed service identity. */
  type?: ManagedServiceIdentityType;
  /** Properties for User Assigned Identities */
  userAssignedIdentities?: { [propertyName: string]: UserAssignedIdentity };
}

/** Recognized Dictionary value. */
export interface UserAssignedIdentity {
  /**
   * Principal Id of user assigned identity
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * Client Id of user assigned identity
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clientId?: string;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The type of identity that last modified the resource. */
  lastModifiedAt?: Date;
}

/** Properties to configure Encryption */
export interface Encryption {
  /** Properties of KeyVault */
  keyVaultProperties?: KeyVaultProperties[];
  /** Enumerates the possible value of keySource for Encryption */
  keySource?: "Microsoft.KeyVault";
  /** Enable Infrastructure Encryption (Double Encryption) */
  requireInfrastructureEncryption?: boolean;
}

/** Properties to configure keyVault Properties */
export interface KeyVaultProperties {
  /** Name of the Key from KeyVault */
  keyName?: string;
  /** Uri of KeyVault */
  keyVaultUri?: string;
  /** Version of KeyVault */
  keyVersion?: string;
  identity?: UserAssignedIdentityProperties;
}

export interface UserAssignedIdentityProperties {
  /** ARM ID of user Identity selected for encryption */
  userAssignedIdentity?: string;
}

/** PrivateEndpoint information. */
export interface PrivateEndpoint {
  /** The ARM identifier for Private Endpoint. */
  id?: string;
}

/** ConnectionState information. */
export interface ConnectionState {
  /** Status of the connection. */
  status?: PrivateLinkConnectionStatus;
  /** Description of the connection state. */
  description?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface ProxyResource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.EventHub/Namespaces" or "Microsoft.EventHub/Namespaces/EventHubs"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The geo-location where the resource lives
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly location?: string;
}

/** The Resource definition for other than namespace. */
export interface Resource {
  /**
   * Resource Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Resource name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Resource type
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** The resource management error response. */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorResponseError;
}

/** The error object. */
export interface ErrorResponseError {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorResponse[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** Result of the list of all private endpoint connections operation. */
export interface PrivateEndpointConnectionListResult {
  /** A collection of private endpoint connection resources. */
  value?: PrivateEndpointConnection[];
  /** A link for the next page of private endpoint connection resources. */
  nextLink?: string;
}

/** Result of the List private link resources operation. */
export interface PrivateLinkResourcesListResult {
  /** A collection of private link resources */
  value?: PrivateLinkResource[];
  /** A link for the next page of private link resources. */
  nextLink?: string;
}

/** Information of the private link resource. */
export interface PrivateLinkResource {
  /** Fully qualified identifier of the resource. */
  id?: string;
  /** Name of the resource */
  name?: string;
  /** Type of the resource */
  type?: string;
  groupId?: string;
  /** Required Members */
  requiredMembers?: string[];
  /** Required Zone Names */
  requiredZoneNames?: string[];
}

/** Result of the request to list ServiceBus operations. It contains a list of operations and a URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of ServiceBus operations supported by the Microsoft.ServiceBus resource provider.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results if there are any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** A Service Bus REST API operation */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /** Indicates whether the operation is a data action */
  isDataAction?: boolean;
  /** Display of the operation */
  display?: OperationDisplay;
  /** Origin of the operation */
  origin?: string;
  /** Properties of the operation */
  properties?: Record<string, unknown>;
}

/** Operation display payload */
export interface OperationDisplay {
  /**
   * Resource provider of the operation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * Resource of the operation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * Localized friendly name for the operation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * Localized friendly description for the operation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** The result of the List Alias(Disaster Recovery configuration) operation. */
export interface ArmDisasterRecoveryListResult {
  /** List of Alias(Disaster Recovery configurations) */
  value?: ArmDisasterRecovery[];
  /**
   * Link to the next set of results. Not empty if Value contains incomplete list of Alias(Disaster Recovery configuration)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Safe failover is to indicate the service should wait for pending replication to finish before switching to the secondary. */
export interface FailoverProperties {
  /** Safe failover is to indicate the service should wait for pending replication to finish before switching to the secondary. */
  isSafeFailover?: boolean;
}

/** The result of the List migrationConfigurations operation. */
export interface MigrationConfigListResult {
  /** List of Migration Configs */
  value?: MigrationConfigProperties[];
  /**
   * Link to the next set of results. Not empty if Value contains incomplete list of migrationConfigurations
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Description of VirtualNetworkRules - NetworkRules resource. */
export interface NWRuleSetVirtualNetworkRules {
  /** Subnet properties */
  subnet?: Subnet;
  /** Value that indicates whether to ignore missing VNet Service Endpoint */
  ignoreMissingVnetServiceEndpoint?: boolean;
}

/** Properties supplied for Subnet */
export interface Subnet {
  /** Resource ID of Virtual Network Subnet */
  id: string;
}

/** Description of NetWorkRuleSet - IpRules resource. */
export interface NWRuleSetIpRules {
  /** IP Mask */
  ipMask?: string;
  /** The IP Filter Action */
  action?: NetworkRuleIPAction;
}

/** The response of the List NetworkRuleSet operation. */
export interface NetworkRuleSetListResult {
  /** Result of the List NetworkRuleSet operation. */
  value?: NetworkRuleSet[];
  /** Link to the next set of results. Not empty if Value contains incomplete list of NetworkRuleSet. */
  nextLink?: string;
}

/** The response to the List Namespace operation. */
export interface SBAuthorizationRuleListResult {
  /** Result of the List Authorization Rules operation. */
  value?: SBAuthorizationRule[];
  /** Link to the next set of results. Not empty if Value contains incomplete list of Authorization Rules. */
  nextLink?: string;
}

/** Namespace/ServiceBus Connection String */
export interface AccessKeys {
  /**
   * Primary connection string of the created namespace authorization rule.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly primaryConnectionString?: string;
  /**
   * Secondary connection string of the created namespace authorization rule.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly secondaryConnectionString?: string;
  /**
   * Primary connection string of the alias if GEO DR is enabled
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly aliasPrimaryConnectionString?: string;
  /**
   * Secondary  connection string of the alias if GEO DR is enabled
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly aliasSecondaryConnectionString?: string;
  /**
   * A base64-encoded 256-bit primary key for signing and validating the SAS token.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly primaryKey?: string;
  /**
   * A base64-encoded 256-bit primary key for signing and validating the SAS token.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly secondaryKey?: string;
  /**
   * A string that describes the authorization rule.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly keyName?: string;
}

/** Parameters supplied to the Regenerate Authorization Rule operation, specifies which key needs to be reset. */
export interface RegenerateAccessKeyParameters {
  /** The access key to regenerate. */
  keyType: KeyType;
  /** Optional, if the key value provided, is reset for KeyType value or autogenerate Key value set for keyType */
  key?: string;
}

/** The response to the List Queues operation. */
export interface SBQueueListResult {
  /** Result of the List Queues operation. */
  value?: SBQueue[];
  /** Link to the next set of results. Not empty if Value contains incomplete list of queues. */
  nextLink?: string;
}

/** Message Count Details. */
export interface MessageCountDetails {
  /**
   * Number of active messages in the queue, topic, or subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly activeMessageCount?: number;
  /**
   * Number of messages that are dead lettered.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly deadLetterMessageCount?: number;
  /**
   * Number of scheduled messages.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly scheduledMessageCount?: number;
  /**
   * Number of messages transferred to another queue, topic, or subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly transferMessageCount?: number;
  /**
   * Number of messages transferred into dead letters.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly transferDeadLetterMessageCount?: number;
}

/** The response to the List Topics operation. */
export interface SBTopicListResult {
  /** Result of the List Topics operation. */
  value?: SBTopic[];
  /** Link to the next set of results. Not empty if Value contains incomplete list of topics. */
  nextLink?: string;
}

/** The response of the List rule operation. */
export interface RuleListResult {
  /** Result of the List Rules operation. */
  value?: Rule[];
  /** Link to the next set of results. Not empty if Value contains incomplete list of rules */
  nextLink?: string;
}

/** Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression. */
export interface Action {
  /** SQL expression. e.g. MyProperty='ABC' */
  sqlExpression?: string;
  /** This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20. */
  compatibilityLevel?: number;
  /** Value that indicates whether the rule action requires preprocessing. */
  requiresPreprocessing?: boolean;
}

/** Represents a filter which is a composition of an expression and an action that is executed in the pub/sub pipeline. */
export interface SqlFilter {
  /** The SQL expression. e.g. MyProperty='ABC' */
  sqlExpression?: string;
  /** This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20. */
  compatibilityLevel?: number;
  /** Value that indicates whether the rule action requires preprocessing. */
  requiresPreprocessing?: boolean;
}

/** Represents the correlation filter expression. */
export interface CorrelationFilter {
  /** dictionary object for custom filters */
  properties?: { [propertyName: string]: string };
  /** Identifier of the correlation. */
  correlationId?: string;
  /** Identifier of the message. */
  messageId?: string;
  /** Address to send to. */
  to?: string;
  /** Address of the queue to reply to. */
  replyTo?: string;
  /** Application specific label. */
  label?: string;
  /** Session identifier. */
  sessionId?: string;
  /** Session identifier to reply to. */
  replyToSessionId?: string;
  /** Content type of the message. */
  contentType?: string;
  /** Value that indicates whether the rule action requires preprocessing. */
  requiresPreprocessing?: boolean;
}

/** The response to the List Subscriptions operation. */
export interface SBSubscriptionListResult {
  /** Result of the List Subscriptions operation. */
  value?: SBSubscription[];
  /** Link to the next set of results. Not empty if Value contains incomplete list of subscriptions. */
  nextLink?: string;
}

/** Properties specific to client affine subscriptions. */
export interface SBClientAffineProperties {
  /** Indicates the Client ID of the application that created the client-affine subscription. */
  clientId?: string;
  /** For client-affine subscriptions, this value indicates whether the subscription is durable or not. */
  isDurable?: boolean;
  /** For client-affine subscriptions, this value indicates whether the subscription is shared or not. */
  isShared?: boolean;
}

/** Description of a Check Name availability request properties. */
export interface CheckNameAvailability {
  /** The Name to check the namespace name availability and The namespace name can contain only letters, numbers, and hyphens. The namespace must start with a letter, and it must end with a letter or number. */
  name: string;
}

/** Description of a Check Name availability request properties. */
export interface CheckNameAvailabilityResult {
  /**
   * The detailed info regarding the reason associated with the namespace.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /** Value indicating namespace is availability, true if the namespace is available; otherwise, false. */
  nameAvailable?: boolean;
  /** The reason for unavailability of a namespace. */
  reason?: UnavailableReason;
}

/** Properties of the PrivateEndpointConnection. */
export type PrivateEndpointConnection = ProxyResource & {
  /**
   * The system meta data relating to this resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** The Private Endpoint resource for this Connection. */
  privateEndpoint?: PrivateEndpoint;
  /** Details about the state of the connection. */
  privateLinkServiceConnectionState?: ConnectionState;
  /** Provisioning state of the Private Endpoint Connection. */
  provisioningState?: EndPointProvisioningState;
};

/** Single item in List or Get Alias(Disaster Recovery configuration) operation */
export type ArmDisasterRecovery = ProxyResource & {
  /**
   * The system meta data relating to this resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /**
   * Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningStateDR;
  /**
   * Number of entities pending to be replicated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly pendingReplicationOperationsCount?: number;
  /** ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing */
  partnerNamespace?: string;
  /** Primary/Secondary eventhub namespace name, which is part of GEO DR pairing */
  alternateName?: string;
  /**
   * role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly role?: RoleDisasterRecovery;
};

/** Single item in List or Get Migration Config operation */
export type MigrationConfigProperties = ProxyResource & {
  /**
   * The system meta data relating to this resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /**
   * Provisioning state of Migration Configuration
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /**
   * Number of entities pending to be replicated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly pendingReplicationOperationsCount?: number;
  /** Existing premium Namespace ARM Id name which has no entities, will be used for migration */
  targetNamespace?: string;
  /** Name to access Standard Namespace after migration */
  postMigrationName?: string;
  /**
   * State in which Standard to Premium Migration is, possible values : Unknown, Reverting, Completing, Initiating, Syncing, Active
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly migrationState?: string;
};

/** Description of NetworkRuleSet resource. */
export type NetworkRuleSet = ProxyResource & {
  /**
   * The system meta data relating to this resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** Value that indicates whether Trusted Service Access is Enabled or not. */
  trustedServiceAccessEnabled?: boolean;
  /** Default Action for Network Rule Set */
  defaultAction?: DefaultAction;
  /** List VirtualNetwork Rules */
  virtualNetworkRules?: NWRuleSetVirtualNetworkRules[];
  /** List of IpRules */
  ipRules?: NWRuleSetIpRules[];
  /** This determines if traffic is allowed over public network. By default it is enabled. */
  publicNetworkAccess?: PublicNetworkAccessFlag;
};

/** Description of a namespace authorization rule. */
export type SBAuthorizationRule = ProxyResource & {
  /**
   * The system meta data relating to this resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** The rights associated with the rule. */
  rights?: AccessRights[];
};

/** Description of queue Resource. */
export type SBQueue = ProxyResource & {
  /**
   * The system meta data relating to this resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /**
   * Message Count Details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly countDetails?: MessageCountDetails;
  /**
   * The exact time the message was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdAt?: Date;
  /**
   * The exact time the message was updated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly updatedAt?: Date;
  /**
   * Last time a message was sent, or the last time there was a receive request to this queue.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accessedAt?: Date;
  /**
   * The size of the queue, in bytes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sizeInBytes?: number;
  /**
   * The number of messages in the queue.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly messageCount?: number;
  /** ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute. */
  lockDuration?: string;
  /** The maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default is 1024. */
  maxSizeInMegabytes?: number;
  /** Maximum size (in KB) of the message payload that can be accepted by the queue. This property is only used in Premium today and default is 1024. */
  maxMessageSizeInKilobytes?: number;
  /** A value indicating if this queue requires duplicate detection. */
  requiresDuplicateDetection?: boolean;
  /** A value that indicates whether the queue supports the concept of sessions. */
  requiresSession?: boolean;
  /** ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself. */
  defaultMessageTimeToLive?: string;
  /** A value that indicates whether this queue has dead letter support when a message expires. */
  deadLetteringOnMessageExpiration?: boolean;
  /** ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes. */
  duplicateDetectionHistoryTimeWindow?: string;
  /** The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10. */
  maxDeliveryCount?: number;
  /** Enumerates the possible values for the status of a messaging entity. */
  status?: EntityStatus;
  /** Value that indicates whether server-side batched operations are enabled. */
  enableBatchedOperations?: boolean;
  /** ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes. */
  autoDeleteOnIdle?: string;
  /** A value that indicates whether the queue is to be partitioned across multiple message brokers. */
  enablePartitioning?: boolean;
  /** A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage. */
  enableExpress?: boolean;
  /** Queue/Topic name to forward the messages */
  forwardTo?: string;
  /** Queue/Topic name to forward the Dead Letter message */
  forwardDeadLetteredMessagesTo?: string;
};

/** Description of topic resource. */
export type SBTopic = ProxyResource & {
  /**
   * The system meta data relating to this resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /**
   * Size of the topic, in bytes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sizeInBytes?: number;
  /**
   * Exact time the message was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdAt?: Date;
  /**
   * The exact time the message was updated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly updatedAt?: Date;
  /**
   * Last time the message was sent, or a request was received, for this topic.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accessedAt?: Date;
  /**
   * Number of subscriptions.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionCount?: number;
  /**
   * Message count details
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly countDetails?: MessageCountDetails;
  /** ISO 8601 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself. */
  defaultMessageTimeToLive?: string;
  /** Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024. */
  maxSizeInMegabytes?: number;
  /** Maximum size (in KB) of the message payload that can be accepted by the topic. This property is only used in Premium today and default is 1024. */
  maxMessageSizeInKilobytes?: number;
  /** Value indicating if this topic requires duplicate detection. */
  requiresDuplicateDetection?: boolean;
  /** ISO8601 timespan structure that defines the duration of the duplicate detection history. The default value is 10 minutes. */
  duplicateDetectionHistoryTimeWindow?: string;
  /** Value that indicates whether server-side batched operations are enabled. */
  enableBatchedOperations?: boolean;
  /** Enumerates the possible values for the status of a messaging entity. */
  status?: EntityStatus;
  /** Value that indicates whether the topic supports ordering. */
  supportOrdering?: boolean;
  /** ISO 8601 timespan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes. */
  autoDeleteOnIdle?: string;
  /** Value that indicates whether the topic to be partitioned across multiple message brokers is enabled. */
  enablePartitioning?: boolean;
  /** Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage. */
  enableExpress?: boolean;
};

/** Description of Rule Resource. */
export type Rule = ProxyResource & {
  /**
   * The system meta data relating to this resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression. */
  action?: Action;
  /** Filter type that is evaluated against a BrokeredMessage. */
  filterType?: FilterType;
  /** Properties of sqlFilter */
  sqlFilter?: SqlFilter;
  /** Properties of correlationFilter */
  correlationFilter?: CorrelationFilter;
};

/** Description of subscription resource. */
export type SBSubscription = ProxyResource & {
  /**
   * The system meta data relating to this resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /**
   * Number of messages.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly messageCount?: number;
  /**
   * Exact time the message was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdAt?: Date;
  /**
   * Last time there was a receive request to this subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accessedAt?: Date;
  /**
   * The exact time the message was updated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly updatedAt?: Date;
  /**
   * Message count details
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly countDetails?: MessageCountDetails;
  /** ISO 8061 lock duration timespan for the subscription. The default value is 1 minute. */
  lockDuration?: string;
  /** Value indicating if a subscription supports the concept of sessions. */
  requiresSession?: boolean;
  /** ISO 8061 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself. */
  defaultMessageTimeToLive?: string;
  /** Value that indicates whether a subscription has dead letter support on filter evaluation exceptions. */
  deadLetteringOnFilterEvaluationExceptions?: boolean;
  /** Value that indicates whether a subscription has dead letter support when a message expires. */
  deadLetteringOnMessageExpiration?: boolean;
  /** ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes. */
  duplicateDetectionHistoryTimeWindow?: string;
  /** Number of maximum deliveries. */
  maxDeliveryCount?: number;
  /** Enumerates the possible values for the status of a messaging entity. */
  status?: EntityStatus;
  /** Value that indicates whether server-side batched operations are enabled. */
  enableBatchedOperations?: boolean;
  /** ISO 8061 timeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes. */
  autoDeleteOnIdle?: string;
  /** Queue/Topic name to forward the messages */
  forwardTo?: string;
  /** Queue/Topic name to forward the Dead Letter message */
  forwardDeadLetteredMessagesTo?: string;
  /** Value that indicates whether the subscription has an affinity to the client id. */
  isClientAffine?: boolean;
  /** Properties specific to client affine subscriptions. */
  clientAffineProperties?: SBClientAffineProperties;
};

/** The Resource definition. */
export type TrackedResource = Resource & {
  /** The Geo-location where the resource lives */
  location: string;
  /** Resource tags */
  tags?: { [propertyName: string]: string };
};

/** The Resource definition. */
export type ResourceNamespacePatch = Resource & {
  /** Resource location */
  location?: string;
  /** Resource tags */
  tags?: { [propertyName: string]: string };
};

/** Represents set of actions written in SQL language-based syntax that is performed against a ServiceBus.Messaging.BrokeredMessage */
export type SqlRuleAction = Action & {};

/** Description of a namespace resource. */
export type SBNamespace = TrackedResource & {
  /** Properties of SKU */
  sku?: SBSku;
  /** Properties of BYOK Identity description */
  identity?: Identity;
  /**
   * The system meta data relating to this resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /**
   * Provisioning state of the namespace.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /**
   * Status of the namespace.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: string;
  /**
   * The time the namespace was created
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdAt?: Date;
  /**
   * The time the namespace was updated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly updatedAt?: Date;
  /**
   * Endpoint you can use to perform Service Bus operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serviceBusEndpoint?: string;
  /**
   * Identifier for Azure Insights metrics
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly metricId?: string;
  /** Enabling this property creates a Premium Service Bus Namespace in regions supported availability zones. */
  zoneRedundant?: boolean;
  /** Properties of BYOK Encryption description */
  encryption?: Encryption;
  /** List of private endpoint connections. */
  privateEndpointConnections?: PrivateEndpointConnection[];
  /** This property disables SAS authentication for the Service Bus namespace. */
  disableLocalAuth?: boolean;
  /** Alternate name for namespace */
  alternateName?: string;
};

/** Description of a namespace resource. */
export type SBNamespaceUpdateParameters = ResourceNamespacePatch & {
  /** Properties of SKU */
  sku?: SBSku;
  /** Properties of BYOK Identity description */
  identity?: Identity;
  /**
   * Provisioning state of the namespace.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /**
   * Status of the namespace.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: string;
  /**
   * The time the namespace was created
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdAt?: Date;
  /**
   * The time the namespace was updated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly updatedAt?: Date;
  /**
   * Endpoint you can use to perform Service Bus operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serviceBusEndpoint?: string;
  /**
   * Identifier for Azure Insights metrics
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly metricId?: string;
  /** Properties of BYOK Encryption description */
  encryption?: Encryption;
  /** List of private endpoint connections. */
  privateEndpointConnections?: PrivateEndpointConnection[];
  /** This property disables SAS authentication for the Service Bus namespace. */
  disableLocalAuth?: boolean;
  /** Alternate name for namespace */
  alternateName?: string;
};

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  User = "User",
  Application = "Application",
  ManagedIdentity = "ManagedIdentity",
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link PrivateLinkConnectionStatus} that the service accepts. */
export enum KnownPrivateLinkConnectionStatus {
  Pending = "Pending",
  Approved = "Approved",
  Rejected = "Rejected",
  Disconnected = "Disconnected"
}

/**
 * Defines values for PrivateLinkConnectionStatus. \
 * {@link KnownPrivateLinkConnectionStatus} can be used interchangeably with PrivateLinkConnectionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Approved** \
 * **Rejected** \
 * **Disconnected**
 */
export type PrivateLinkConnectionStatus = string;

/** Known values of {@link EndPointProvisioningState} that the service accepts. */
export enum KnownEndPointProvisioningState {
  Creating = "Creating",
  Updating = "Updating",
  Deleting = "Deleting",
  Succeeded = "Succeeded",
  Canceled = "Canceled",
  Failed = "Failed"
}

/**
 * Defines values for EndPointProvisioningState. \
 * {@link KnownEndPointProvisioningState} can be used interchangeably with EndPointProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **Updating** \
 * **Deleting** \
 * **Succeeded** \
 * **Canceled** \
 * **Failed**
 */
export type EndPointProvisioningState = string;

/** Known values of {@link MigrationConfigurationName} that the service accepts. */
export enum KnownMigrationConfigurationName {
  Default = "$default"
}

/**
 * Defines values for MigrationConfigurationName. \
 * {@link KnownMigrationConfigurationName} can be used interchangeably with MigrationConfigurationName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **$default**
 */
export type MigrationConfigurationName = string;

/** Known values of {@link DefaultAction} that the service accepts. */
export enum KnownDefaultAction {
  Allow = "Allow",
  Deny = "Deny"
}

/**
 * Defines values for DefaultAction. \
 * {@link KnownDefaultAction} can be used interchangeably with DefaultAction,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Allow** \
 * **Deny**
 */
export type DefaultAction = string;

/** Known values of {@link NetworkRuleIPAction} that the service accepts. */
export enum KnownNetworkRuleIPAction {
  Allow = "Allow"
}

/**
 * Defines values for NetworkRuleIPAction. \
 * {@link KnownNetworkRuleIPAction} can be used interchangeably with NetworkRuleIPAction,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Allow**
 */
export type NetworkRuleIPAction = string;

/** Known values of {@link PublicNetworkAccessFlag} that the service accepts. */
export enum KnownPublicNetworkAccessFlag {
  Enabled = "Enabled",
  Disabled = "Disabled"
}

/**
 * Defines values for PublicNetworkAccessFlag. \
 * {@link KnownPublicNetworkAccessFlag} can be used interchangeably with PublicNetworkAccessFlag,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export type PublicNetworkAccessFlag = string;
/** Defines values for SkuName. */
export type SkuName = "Basic" | "Standard" | "Premium";
/** Defines values for SkuTier. */
export type SkuTier = "Basic" | "Standard" | "Premium";
/** Defines values for ManagedServiceIdentityType. */
export type ManagedServiceIdentityType =
  | "SystemAssigned"
  | "UserAssigned"
  | "SystemAssigned, UserAssigned"
  | "None";
/** Defines values for ProvisioningStateDR. */
export type ProvisioningStateDR = "Accepted" | "Succeeded" | "Failed";
/** Defines values for RoleDisasterRecovery. */
export type RoleDisasterRecovery =
  | "Primary"
  | "PrimaryNotReplicating"
  | "Secondary";
/** Defines values for AccessRights. */
export type AccessRights = "Manage" | "Send" | "Listen";
/** Defines values for KeyType. */
export type KeyType = "PrimaryKey" | "SecondaryKey";
/** Defines values for EntityStatus. */
export type EntityStatus =
  | "Active"
  | "Disabled"
  | "Restoring"
  | "SendDisabled"
  | "ReceiveDisabled"
  | "Creating"
  | "Deleting"
  | "Renaming"
  | "Unknown";
/** Defines values for FilterType. */
export type FilterType = "SqlFilter" | "CorrelationFilter";
/** Defines values for UnavailableReason. */
export type UnavailableReason =
  | "None"
  | "InvalidName"
  | "SubscriptionIsDisabled"
  | "NameInUse"
  | "NameInLockdown"
  | "TooManyNamespaceInCurrentSubscription";

/** Optional parameters. */
export interface NamespacesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type NamespacesListResponse = SBNamespaceListResult;

/** Optional parameters. */
export interface NamespacesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type NamespacesListByResourceGroupResponse = SBNamespaceListResult;

/** Optional parameters. */
export interface NamespacesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type NamespacesCreateOrUpdateResponse = SBNamespace;

/** Optional parameters. */
export interface NamespacesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface NamespacesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type NamespacesGetResponse = SBNamespace;

/** Optional parameters. */
export interface NamespacesUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type NamespacesUpdateResponse = SBNamespace;

/** Optional parameters. */
export interface NamespacesCreateOrUpdateNetworkRuleSetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdateNetworkRuleSet operation. */
export type NamespacesCreateOrUpdateNetworkRuleSetResponse = NetworkRuleSet;

/** Optional parameters. */
export interface NamespacesGetNetworkRuleSetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getNetworkRuleSet operation. */
export type NamespacesGetNetworkRuleSetResponse = NetworkRuleSet;

/** Optional parameters. */
export interface NamespacesListNetworkRuleSetsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNetworkRuleSets operation. */
export type NamespacesListNetworkRuleSetsResponse = NetworkRuleSetListResult;

/** Optional parameters. */
export interface NamespacesListAuthorizationRulesOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listAuthorizationRules operation. */
export type NamespacesListAuthorizationRulesResponse = SBAuthorizationRuleListResult;

/** Optional parameters. */
export interface NamespacesCreateOrUpdateAuthorizationRuleOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdateAuthorizationRule operation. */
export type NamespacesCreateOrUpdateAuthorizationRuleResponse = SBAuthorizationRule;

/** Optional parameters. */
export interface NamespacesDeleteAuthorizationRuleOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface NamespacesGetAuthorizationRuleOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getAuthorizationRule operation. */
export type NamespacesGetAuthorizationRuleResponse = SBAuthorizationRule;

/** Optional parameters. */
export interface NamespacesListKeysOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listKeys operation. */
export type NamespacesListKeysResponse = AccessKeys;

/** Optional parameters. */
export interface NamespacesRegenerateKeysOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the regenerateKeys operation. */
export type NamespacesRegenerateKeysResponse = AccessKeys;

/** Optional parameters. */
export interface NamespacesCheckNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkNameAvailability operation. */
export type NamespacesCheckNameAvailabilityResponse = CheckNameAvailabilityResult;

/** Optional parameters. */
export interface NamespacesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type NamespacesListNextResponse = SBNamespaceListResult;

/** Optional parameters. */
export interface NamespacesListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type NamespacesListByResourceGroupNextResponse = SBNamespaceListResult;

/** Optional parameters. */
export interface NamespacesListNetworkRuleSetsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNetworkRuleSetsNext operation. */
export type NamespacesListNetworkRuleSetsNextResponse = NetworkRuleSetListResult;

/** Optional parameters. */
export interface NamespacesListAuthorizationRulesNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listAuthorizationRulesNext operation. */
export type NamespacesListAuthorizationRulesNextResponse = SBAuthorizationRuleListResult;

/** Optional parameters. */
export interface PrivateEndpointConnectionsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type PrivateEndpointConnectionsListResponse = PrivateEndpointConnectionListResult;

/** Optional parameters. */
export interface PrivateEndpointConnectionsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type PrivateEndpointConnectionsCreateOrUpdateResponse = PrivateEndpointConnection;

/** Optional parameters. */
export interface PrivateEndpointConnectionsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface PrivateEndpointConnectionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;

/** Optional parameters. */
export interface PrivateEndpointConnectionsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type PrivateEndpointConnectionsListNextResponse = PrivateEndpointConnectionListResult;

/** Optional parameters. */
export interface PrivateLinkResourcesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PrivateLinkResourcesGetResponse = PrivateLinkResourcesListResult;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface DisasterRecoveryConfigsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type DisasterRecoveryConfigsListResponse = ArmDisasterRecoveryListResult;

/** Optional parameters. */
export interface DisasterRecoveryConfigsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type DisasterRecoveryConfigsCreateOrUpdateResponse = ArmDisasterRecovery;

/** Optional parameters. */
export interface DisasterRecoveryConfigsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface DisasterRecoveryConfigsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DisasterRecoveryConfigsGetResponse = ArmDisasterRecovery;

/** Optional parameters. */
export interface DisasterRecoveryConfigsBreakPairingOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface DisasterRecoveryConfigsFailOverOptionalParams
  extends coreClient.OperationOptions {
  /** Parameters required to create an Alias(Disaster Recovery configuration) */
  parameters?: FailoverProperties;
}

/** Optional parameters. */
export interface DisasterRecoveryConfigsListAuthorizationRulesOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listAuthorizationRules operation. */
export type DisasterRecoveryConfigsListAuthorizationRulesResponse = SBAuthorizationRuleListResult;

/** Optional parameters. */
export interface DisasterRecoveryConfigsGetAuthorizationRuleOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getAuthorizationRule operation. */
export type DisasterRecoveryConfigsGetAuthorizationRuleResponse = SBAuthorizationRule;

/** Optional parameters. */
export interface DisasterRecoveryConfigsListKeysOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listKeys operation. */
export type DisasterRecoveryConfigsListKeysResponse = AccessKeys;

/** Optional parameters. */
export interface DisasterRecoveryConfigsCheckNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkNameAvailability operation. */
export type DisasterRecoveryConfigsCheckNameAvailabilityResponse = CheckNameAvailabilityResult;

/** Optional parameters. */
export interface DisasterRecoveryConfigsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type DisasterRecoveryConfigsListNextResponse = ArmDisasterRecoveryListResult;

/** Optional parameters. */
export interface DisasterRecoveryConfigsListAuthorizationRulesNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listAuthorizationRulesNext operation. */
export type DisasterRecoveryConfigsListAuthorizationRulesNextResponse = SBAuthorizationRuleListResult;

/** Optional parameters. */
export interface MigrationConfigsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type MigrationConfigsListResponse = MigrationConfigListResult;

/** Optional parameters. */
export interface MigrationConfigsCreateAndStartMigrationOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createAndStartMigration operation. */
export type MigrationConfigsCreateAndStartMigrationResponse = MigrationConfigProperties;

/** Optional parameters. */
export interface MigrationConfigsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface MigrationConfigsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type MigrationConfigsGetResponse = MigrationConfigProperties;

/** Optional parameters. */
export interface MigrationConfigsCompleteMigrationOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface MigrationConfigsRevertOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface MigrationConfigsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type MigrationConfigsListNextResponse = MigrationConfigListResult;

/** Optional parameters. */
export interface QueuesListAuthorizationRulesOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listAuthorizationRules operation. */
export type QueuesListAuthorizationRulesResponse = SBAuthorizationRuleListResult;

/** Optional parameters. */
export interface QueuesCreateOrUpdateAuthorizationRuleOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdateAuthorizationRule operation. */
export type QueuesCreateOrUpdateAuthorizationRuleResponse = SBAuthorizationRule;

/** Optional parameters. */
export interface QueuesDeleteAuthorizationRuleOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface QueuesGetAuthorizationRuleOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getAuthorizationRule operation. */
export type QueuesGetAuthorizationRuleResponse = SBAuthorizationRule;

/** Optional parameters. */
export interface QueuesListKeysOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listKeys operation. */
export type QueuesListKeysResponse = AccessKeys;

/** Optional parameters. */
export interface QueuesRegenerateKeysOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the regenerateKeys operation. */
export type QueuesRegenerateKeysResponse = AccessKeys;

/** Optional parameters. */
export interface QueuesListByNamespaceOptionalParams
  extends coreClient.OperationOptions {
  /** Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls. */
  skip?: number;
  /** May be used to limit the number of results to the most recent N usageDetails. */
  top?: number;
}

/** Contains response data for the listByNamespace operation. */
export type QueuesListByNamespaceResponse = SBQueueListResult;

/** Optional parameters. */
export interface QueuesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type QueuesCreateOrUpdateResponse = SBQueue;

/** Optional parameters. */
export interface QueuesDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface QueuesGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type QueuesGetResponse = SBQueue;

/** Optional parameters. */
export interface QueuesListAuthorizationRulesNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listAuthorizationRulesNext operation. */
export type QueuesListAuthorizationRulesNextResponse = SBAuthorizationRuleListResult;

/** Optional parameters. */
export interface QueuesListByNamespaceNextOptionalParams
  extends coreClient.OperationOptions {
  /** Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls. */
  skip?: number;
  /** May be used to limit the number of results to the most recent N usageDetails. */
  top?: number;
}

/** Contains response data for the listByNamespaceNext operation. */
export type QueuesListByNamespaceNextResponse = SBQueueListResult;

/** Optional parameters. */
export interface TopicsListAuthorizationRulesOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listAuthorizationRules operation. */
export type TopicsListAuthorizationRulesResponse = SBAuthorizationRuleListResult;

/** Optional parameters. */
export interface TopicsCreateOrUpdateAuthorizationRuleOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdateAuthorizationRule operation. */
export type TopicsCreateOrUpdateAuthorizationRuleResponse = SBAuthorizationRule;

/** Optional parameters. */
export interface TopicsGetAuthorizationRuleOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getAuthorizationRule operation. */
export type TopicsGetAuthorizationRuleResponse = SBAuthorizationRule;

/** Optional parameters. */
export interface TopicsDeleteAuthorizationRuleOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface TopicsListKeysOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listKeys operation. */
export type TopicsListKeysResponse = AccessKeys;

/** Optional parameters. */
export interface TopicsRegenerateKeysOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the regenerateKeys operation. */
export type TopicsRegenerateKeysResponse = AccessKeys;

/** Optional parameters. */
export interface TopicsListByNamespaceOptionalParams
  extends coreClient.OperationOptions {
  /** Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls. */
  skip?: number;
  /** May be used to limit the number of results to the most recent N usageDetails. */
  top?: number;
}

/** Contains response data for the listByNamespace operation. */
export type TopicsListByNamespaceResponse = SBTopicListResult;

/** Optional parameters. */
export interface TopicsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type TopicsCreateOrUpdateResponse = SBTopic;

/** Optional parameters. */
export interface TopicsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface TopicsGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type TopicsGetResponse = SBTopic;

/** Optional parameters. */
export interface TopicsListAuthorizationRulesNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listAuthorizationRulesNext operation. */
export type TopicsListAuthorizationRulesNextResponse = SBAuthorizationRuleListResult;

/** Optional parameters. */
export interface TopicsListByNamespaceNextOptionalParams
  extends coreClient.OperationOptions {
  /** Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls. */
  skip?: number;
  /** May be used to limit the number of results to the most recent N usageDetails. */
  top?: number;
}

/** Contains response data for the listByNamespaceNext operation. */
export type TopicsListByNamespaceNextResponse = SBTopicListResult;

/** Optional parameters. */
export interface RulesListBySubscriptionsOptionalParams
  extends coreClient.OperationOptions {
  /** Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls. */
  skip?: number;
  /** May be used to limit the number of results to the most recent N usageDetails. */
  top?: number;
}

/** Contains response data for the listBySubscriptions operation. */
export type RulesListBySubscriptionsResponse = RuleListResult;

/** Optional parameters. */
export interface RulesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type RulesCreateOrUpdateResponse = Rule;

/** Optional parameters. */
export interface RulesDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface RulesGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type RulesGetResponse = Rule;

/** Optional parameters. */
export interface RulesListBySubscriptionsNextOptionalParams
  extends coreClient.OperationOptions {
  /** Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls. */
  skip?: number;
  /** May be used to limit the number of results to the most recent N usageDetails. */
  top?: number;
}

/** Contains response data for the listBySubscriptionsNext operation. */
export type RulesListBySubscriptionsNextResponse = RuleListResult;

/** Optional parameters. */
export interface SubscriptionsListByTopicOptionalParams
  extends coreClient.OperationOptions {
  /** Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls. */
  skip?: number;
  /** May be used to limit the number of results to the most recent N usageDetails. */
  top?: number;
}

/** Contains response data for the listByTopic operation. */
export type SubscriptionsListByTopicResponse = SBSubscriptionListResult;

/** Optional parameters. */
export interface SubscriptionsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type SubscriptionsCreateOrUpdateResponse = SBSubscription;

/** Optional parameters. */
export interface SubscriptionsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface SubscriptionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SubscriptionsGetResponse = SBSubscription;

/** Optional parameters. */
export interface SubscriptionsListByTopicNextOptionalParams
  extends coreClient.OperationOptions {
  /** Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls. */
  skip?: number;
  /** May be used to limit the number of results to the most recent N usageDetails. */
  top?: number;
}

/** Contains response data for the listByTopicNext operation. */
export type SubscriptionsListByTopicNextResponse = SBSubscriptionListResult;

/** Optional parameters. */
export interface ServiceBusManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
