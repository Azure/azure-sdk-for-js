/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  SBAuthorizationRule,
  TopicsListAuthorizationRulesOptionalParams,
  SBTopic,
  TopicsListByNamespaceOptionalParams,
  TopicsCreateOrUpdateAuthorizationRuleOptionalParams,
  TopicsCreateOrUpdateAuthorizationRuleResponse,
  TopicsGetAuthorizationRuleOptionalParams,
  TopicsGetAuthorizationRuleResponse,
  TopicsDeleteAuthorizationRuleOptionalParams,
  TopicsListKeysOptionalParams,
  TopicsListKeysResponse,
  RegenerateAccessKeyParameters,
  TopicsRegenerateKeysOptionalParams,
  TopicsRegenerateKeysResponse,
  TopicsCreateOrUpdateOptionalParams,
  TopicsCreateOrUpdateResponse,
  TopicsDeleteOptionalParams,
  TopicsGetOptionalParams,
  TopicsGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Topics. */
export interface Topics {
  /**
   * Gets authorization rules for a topic.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param topicName The topic name.
   * @param options The options parameters.
   */
  listAuthorizationRules(
    resourceGroupName: string,
    namespaceName: string,
    topicName: string,
    options?: TopicsListAuthorizationRulesOptionalParams
  ): PagedAsyncIterableIterator<SBAuthorizationRule>;
  /**
   * Gets all the topics in a namespace.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param options The options parameters.
   */
  listByNamespace(
    resourceGroupName: string,
    namespaceName: string,
    options?: TopicsListByNamespaceOptionalParams
  ): PagedAsyncIterableIterator<SBTopic>;
  /**
   * Creates an authorization rule for the specified topic.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param topicName The topic name.
   * @param authorizationRuleName The authorization rule name.
   * @param parameters The shared access authorization rule.
   * @param options The options parameters.
   */
  createOrUpdateAuthorizationRule(
    resourceGroupName: string,
    namespaceName: string,
    topicName: string,
    authorizationRuleName: string,
    parameters: SBAuthorizationRule,
    options?: TopicsCreateOrUpdateAuthorizationRuleOptionalParams
  ): Promise<TopicsCreateOrUpdateAuthorizationRuleResponse>;
  /**
   * Returns the specified authorization rule.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param topicName The topic name.
   * @param authorizationRuleName The authorization rule name.
   * @param options The options parameters.
   */
  getAuthorizationRule(
    resourceGroupName: string,
    namespaceName: string,
    topicName: string,
    authorizationRuleName: string,
    options?: TopicsGetAuthorizationRuleOptionalParams
  ): Promise<TopicsGetAuthorizationRuleResponse>;
  /**
   * Deletes a topic authorization rule.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param topicName The topic name.
   * @param authorizationRuleName The authorization rule name.
   * @param options The options parameters.
   */
  deleteAuthorizationRule(
    resourceGroupName: string,
    namespaceName: string,
    topicName: string,
    authorizationRuleName: string,
    options?: TopicsDeleteAuthorizationRuleOptionalParams
  ): Promise<void>;
  /**
   * Gets the primary and secondary connection strings for the topic.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param topicName The topic name.
   * @param authorizationRuleName The authorization rule name.
   * @param options The options parameters.
   */
  listKeys(
    resourceGroupName: string,
    namespaceName: string,
    topicName: string,
    authorizationRuleName: string,
    options?: TopicsListKeysOptionalParams
  ): Promise<TopicsListKeysResponse>;
  /**
   * Regenerates primary or secondary connection strings for the topic.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param topicName The topic name.
   * @param authorizationRuleName The authorization rule name.
   * @param parameters Parameters supplied to regenerate the authorization rule.
   * @param options The options parameters.
   */
  regenerateKeys(
    resourceGroupName: string,
    namespaceName: string,
    topicName: string,
    authorizationRuleName: string,
    parameters: RegenerateAccessKeyParameters,
    options?: TopicsRegenerateKeysOptionalParams
  ): Promise<TopicsRegenerateKeysResponse>;
  /**
   * Creates a topic in the specified namespace.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param topicName The topic name.
   * @param parameters Parameters supplied to create a topic resource.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    namespaceName: string,
    topicName: string,
    parameters: SBTopic,
    options?: TopicsCreateOrUpdateOptionalParams
  ): Promise<TopicsCreateOrUpdateResponse>;
  /**
   * Deletes a topic from the specified namespace and resource group.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param topicName The topic name.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    namespaceName: string,
    topicName: string,
    options?: TopicsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Returns a description for the specified topic.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param topicName The topic name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    namespaceName: string,
    topicName: string,
    options?: TopicsGetOptionalParams
  ): Promise<TopicsGetResponse>;
}
