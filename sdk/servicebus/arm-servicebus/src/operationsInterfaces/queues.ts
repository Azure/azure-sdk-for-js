/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  SBAuthorizationRule,
  QueuesListAuthorizationRulesOptionalParams,
  SBQueue,
  QueuesListByNamespaceOptionalParams,
  QueuesCreateOrUpdateAuthorizationRuleOptionalParams,
  QueuesCreateOrUpdateAuthorizationRuleResponse,
  QueuesDeleteAuthorizationRuleOptionalParams,
  QueuesGetAuthorizationRuleOptionalParams,
  QueuesGetAuthorizationRuleResponse,
  QueuesListKeysOptionalParams,
  QueuesListKeysResponse,
  RegenerateAccessKeyParameters,
  QueuesRegenerateKeysOptionalParams,
  QueuesRegenerateKeysResponse,
  QueuesCreateOrUpdateOptionalParams,
  QueuesCreateOrUpdateResponse,
  QueuesDeleteOptionalParams,
  QueuesGetOptionalParams,
  QueuesGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Queues. */
export interface Queues {
  /**
   * Gets all authorization rules for a queue.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param queueName The queue name.
   * @param options The options parameters.
   */
  listAuthorizationRules(
    resourceGroupName: string,
    namespaceName: string,
    queueName: string,
    options?: QueuesListAuthorizationRulesOptionalParams
  ): PagedAsyncIterableIterator<SBAuthorizationRule>;
  /**
   * Gets the queues within a namespace.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param options The options parameters.
   */
  listByNamespace(
    resourceGroupName: string,
    namespaceName: string,
    options?: QueuesListByNamespaceOptionalParams
  ): PagedAsyncIterableIterator<SBQueue>;
  /**
   * Creates an authorization rule for a queue.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param queueName The queue name.
   * @param authorizationRuleName The authorization rule name.
   * @param parameters The shared access authorization rule.
   * @param options The options parameters.
   */
  createOrUpdateAuthorizationRule(
    resourceGroupName: string,
    namespaceName: string,
    queueName: string,
    authorizationRuleName: string,
    parameters: SBAuthorizationRule,
    options?: QueuesCreateOrUpdateAuthorizationRuleOptionalParams
  ): Promise<QueuesCreateOrUpdateAuthorizationRuleResponse>;
  /**
   * Deletes a queue authorization rule.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param queueName The queue name.
   * @param authorizationRuleName The authorization rule name.
   * @param options The options parameters.
   */
  deleteAuthorizationRule(
    resourceGroupName: string,
    namespaceName: string,
    queueName: string,
    authorizationRuleName: string,
    options?: QueuesDeleteAuthorizationRuleOptionalParams
  ): Promise<void>;
  /**
   * Gets an authorization rule for a queue by rule name.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param queueName The queue name.
   * @param authorizationRuleName The authorization rule name.
   * @param options The options parameters.
   */
  getAuthorizationRule(
    resourceGroupName: string,
    namespaceName: string,
    queueName: string,
    authorizationRuleName: string,
    options?: QueuesGetAuthorizationRuleOptionalParams
  ): Promise<QueuesGetAuthorizationRuleResponse>;
  /**
   * Primary and secondary connection strings to the queue.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param queueName The queue name.
   * @param authorizationRuleName The authorization rule name.
   * @param options The options parameters.
   */
  listKeys(
    resourceGroupName: string,
    namespaceName: string,
    queueName: string,
    authorizationRuleName: string,
    options?: QueuesListKeysOptionalParams
  ): Promise<QueuesListKeysResponse>;
  /**
   * Regenerates the primary or secondary connection strings to the queue.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param queueName The queue name.
   * @param authorizationRuleName The authorization rule name.
   * @param parameters Parameters supplied to regenerate the authorization rule.
   * @param options The options parameters.
   */
  regenerateKeys(
    resourceGroupName: string,
    namespaceName: string,
    queueName: string,
    authorizationRuleName: string,
    parameters: RegenerateAccessKeyParameters,
    options?: QueuesRegenerateKeysOptionalParams
  ): Promise<QueuesRegenerateKeysResponse>;
  /**
   * Creates or updates a Service Bus queue. This operation is idempotent.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param queueName The queue name.
   * @param parameters Parameters supplied to create or update a queue resource.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    namespaceName: string,
    queueName: string,
    parameters: SBQueue,
    options?: QueuesCreateOrUpdateOptionalParams
  ): Promise<QueuesCreateOrUpdateResponse>;
  /**
   * Deletes a queue from the specified namespace in a resource group.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param queueName The queue name.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    namespaceName: string,
    queueName: string,
    options?: QueuesDeleteOptionalParams
  ): Promise<void>;
  /**
   * Returns a description for the specified queue.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param queueName The queue name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    namespaceName: string,
    queueName: string,
    options?: QueuesGetOptionalParams
  ): Promise<QueuesGetResponse>;
}
