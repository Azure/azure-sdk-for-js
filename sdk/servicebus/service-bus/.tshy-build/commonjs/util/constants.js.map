{"version":3,"file":"constants.js","sourceRoot":"","sources":["../../../src/util/constants.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * @internal\n */\nexport const packageJsonInfo = {\n  name: \"@azure/service-bus\",\n  version: \"7.10.0\",\n};\n\n/**\n * @internal\n */\nexport const messageDispositionTimeout = 20000;\n\n/**\n * The amount of time in milliseconds that a receiver\n * will wait while draining credits before returning.\n * @internal\n */\nexport const receiveDrainTimeoutInMs = 200;\n\n/**\n * @internal\n */\nexport const max32BitNumber = Math.pow(2, 31) - 1;\n\n/**\n * Queue name identifier\n * @internal\n */\nexport const QUEUE_NAME = \"QueueName\";\n\n/**\n * Topic name identifier\n * @internal\n */\nexport const TOPIC_NAME = \"TopicName\";\n\n/**\n * Subscription name identifier\n * @internal\n */\nexport const SUBSCRIPTION_NAME = \"SubscriptionName\";\n\n/**\n * Rule name identifier\n * @internal\n */\nexport const RULE_NAME = \"RuleName\";\n\n/**\n * Accessed at field\n * @internal\n */\nexport const ACCESSED_AT = \"AccessedAt\";\n\n/**\n * Updated at field\n * @internal\n */\nexport const UPDATED_AT = \"UpdatedAt\";\n\n/**\n * Created at field\n * @internal\n */\nexport const CREATED_AT = \"CreatedAt\";\n\n/**\n * Authorization rules on the entity\n * @internal\n */\nexport const AUTHORIZATION_RULES = \"AuthorizationRules\";\n\n/**\n * Is Anonymous Accessible field\n * @internal\n */\nexport const IS_ANONYMOUS_ACCESSIBLE = \"IsAnonymousAccessible\";\n\n/**\n * Entity Availability Status field\n * @internal\n */\nexport const ENTITY_AVAILABILITY_STATUS = \"EntityAvailabilityStatus\";\n\n/**\n * Enable express option\n * @internal\n */\nexport const ENABLE_EXPRESS = \"EnableExpress\";\n\n/**\n * Is express option\n * @internal\n */\nexport const IS_EXPRESS = \"IsExpress\";\n\n/**\n * Enable Subscription Partitioning option\n * @internal\n */\nexport const ENABLE_SUBSCRIPTION_PARTITIONING = \"EnableSubscriptionPartitioning\";\n\n/**\n * Filtering Messages Before Publishing option\n * @internal\n */\nexport const FILTER_MESSAGES_BEFORE_PUBLISHING = \"FilteringMessagesBeforePublishing\";\n\n/**\n * The entity's size in bytes.\n *\n * @internal\n */\nexport const SIZE_IN_BYTES = \"SizeInBytes\";\n\n/**\n * The entity's message count.\n *\n * @internal\n */\nexport const MESSAGE_COUNT = \"MessageCount\";\n\n/**\n * The topic's subscription count.\n *\n * @internal\n */\nexport const SUBSCRIPTION_COUNT = \"SubscriptionCount\";\n\n/**\n * The topic / subscription's count details.\n *\n * @internal\n */\nexport const COUNT_DETAILS = \"CountDetails\";\n\n/**\n * The default rule name.\n *\n * @internal\n */\nexport const DEFAULT_RULE_NAME = \"$Default\";\n\n/**\n * Max idle time before entity is deleted.\n * This is specified in ISO-8601 duration format such as \"PT1M\" for 1 minute, \"PT5S\" for 5 seconds.\n * @internal\n */\nexport const AUTO_DELETE_ON_IDLE = \"AutoDeleteOnIdle\";\n\n/**\n * The status information on response\n *\n * @internal\n */\nexport const STATUS = \"Status\";\n\n/**\n * The URL of Service Bus entity to forward messages to.\n *\n * @internal\n */\nexport const FORWARD_TO = \"ForwardTo\";\n\n/**\n * The user meta data information\n *\n * @internal\n */\nexport const USER_METADATA = \"UserMetadata\";\n\n/**\n * The maximum size in megabytes.\n *\n * @internal\n */\nexport const MAX_SIZE_IN_MEGABYTES = \"MaxSizeInMegabytes\";\n/**\n * The maximum size in kilobytes.\n *\n * @internal\n */\nexport const MAX_MESSAGE_SIZE_IN_KILOBYTES = \"MaxMessageSizeInKilobytes\";\n/**\n * The default message time to live.\n * This is specified in ISO-8601 duration format such as \"PT1M\" for 1 minute, \"PT5S\" for 5 seconds.\n * @internal\n */\nexport const DEFAULT_MESSAGE_TIME_TO_LIVE = \"DefaultMessageTimeToLive\";\n\n/**\n * The lock duration.\n * This is specified in ISO-8601 duration format such as \"PT1M\" for 1 minute, \"PT5S\" for 5 seconds.\n * @internal\n */\nexport const LOCK_DURATION = \"LockDuration\";\n\n/**\n * The indication if session is required or not.\n *\n * @internal\n */\nexport const REQUIRES_SESSION = \"RequiresSession\";\n\n/**\n * The indication if duplicate detection is required or not.\n *\n * @internal\n */\nexport const REQUIRES_DUPLICATE_DETECTION = \"RequiresDuplicateDetection\";\n\n/**\n * The indication if dead lettering on message expiration. If it is enabled and a message expires,\n * the Service Bus moves the message from the queue into the entity dead-letter sub-queue.\n * If disabled, message will be permanently deleted from the main entity.\n * Settable only at entity creation time.\n *\n * @internal\n */\nexport const DEAD_LETTERING_ON_MESSAGE_EXPIRATION = \"DeadLetteringOnMessageExpiration\";\n\n/**\n * The indication if dead lettering on filter evaluation exceptions.\n *\n * @internal\n */\nexport const DEAD_LETTERING_ON_FILTER_EVALUATION_EXCEPTIONS =\n  \"DeadLetteringOnFilterEvaluationExceptions\";\n\n/**\n * The history time window for duplicate detection.\n * This is specified in ISO-8601 duration format such as \"PT1M\" for 1 minute, \"PT5S\" for 5 seconds.\n * @internal\n */\nexport const DUPLICATE_DETECTION_HISTORY_TIME_WINDOW = \"DuplicateDetectionHistoryTimeWindow\";\n\n/**\n * The maximum delivery count of messages after which if it is still not settled, gets moved to the dead-letter sub-queue.\n *\n * @internal\n */\nexport const MAX_DELIVERY_COUNT = \"MaxDeliveryCount\";\n\n/**\n * Indicates if the queue has enabled batch operations.\n *\n * @internal\n */\nexport const ENABLE_BATCHED_OPERATIONS = \"EnableBatchedOperations\";\n\n/**\n * Indicates whether the topic can be ordered\n *\n * @internal\n */\nexport const SUPPORT_ORDERING = \"SupportOrdering\";\n\n/**\n * Indicates whether the topic/queue should be split across multiple partitions\n *\n * @internal\n */\nexport const ENABLE_PARTITIONING = \"EnablePartitioning\";\n\n/**\n * The URL of Service Bus entity to forward deadlettered messages to.\n *\n * @internal\n */\nexport const FORWARD_DEADLETTERED_MESSAGES_TO = \"ForwardDeadLetteredMessagesTo\";\n\n/**\n * Query string parameter to set Service Bus API version\n *\n * @internal\n */\nexport const API_VERSION_QUERY_KEY = \"api-version\";\n\n/**\n * Current API version being sent to service bus\n *\n * @internal\n */\nexport const CURRENT_API_VERSION = \"2021-05\";\n\n/**\n * Constant representing the Odata Error 'message' property\n *\n * @internal\n */\nexport const ODATA_ERROR_MESSAGE = \"message\";\n/**\n * Constant representing the 'value' property of Odata Error 'message' property\n *\n * @internal\n */\nexport const ODATA_ERROR_MESSAGE_VALUE = \"value\";\n\n/**\n * Marker for atom metadata.\n *\n * @internal\n */\nexport const XML_METADATA_MARKER = \"$\";\n\n/**\n * Marker for atom value.\n *\n * @internal\n */\nexport const XML_VALUE_MARKER = \"_\";\n\n/**\n * Constant representing the property where the atom default elements are stored.\n *\n * @internal\n */\nexport const ATOM_METADATA_MARKER = \"_\";\n\n/**\n * Known HTTP status codes as documented and referenced in ATOM based management API feature\n * https://learn.microsoft.com/dotnet/api/system.net.httpstatuscode?view=netframework-4.8\n * @internal\n */\nexport const HttpResponseCodes = {\n  100: \"Continue\",\n  101: \"SwitchingProtocols\",\n  200: \"Ok\",\n  201: \"Created\",\n  202: \"Accepted\",\n  203: \"NonAuthoritativeInformation\",\n  204: \"NoContent\",\n  205: \"ResetContent\",\n  206: \"PartialContent\",\n  300: \"MultipleChoices\",\n  301: \"Moved\",\n  302: \"Redirect\",\n  303: \"RedirectMethod\",\n  304: \"NotModified\",\n  305: \"UseProxy\",\n  306: \"Unused\",\n  400: \"BadRequest\",\n  401: \"Unauthorized\",\n  402: \"PaymentRequired\",\n  403: \"Forbidden\",\n  404: \"NotFound\",\n  405: \"MethodNotAllowed\",\n  406: \"NotAcceptable\",\n  407: \"ProxyAuthenticationRequired\",\n  409: \"Conflict\",\n  410: \"Gone\",\n  411: \"LengthRequired\",\n  412: \"PreconditionFailed\",\n  413: \"RequestEntityTooLarge\",\n  414: \"RequestUriTooLong\",\n  415: \"UnsupportedMediaType\",\n  416: \"RequestRangeNotSatisfiable\",\n  417: \"ExpectationFailed\",\n  426: \"UpgradeRequired\",\n  500: \"InternalServerError\",\n  501: \"NotImplemented\",\n  502: \"BadGateway\",\n  503: \"ServiceUnavailable\",\n  504: \"GatewayTimeout\",\n  505: \"HttpVersionNotSupported\",\n};\n"]}