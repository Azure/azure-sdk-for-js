{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/util/utils.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport Long from \"long\";\nimport type { ServiceBusLogger } from \"../log.js\";\nimport { logger, receiverLogger, messageLogger } from \"../log.js\";\nimport type { AmqpError } from \"rhea-promise\";\nimport { OperationTimeoutError, generate_uuid } from \"rhea-promise\";\nimport isBuffer from \"is-buffer\";\nimport * as Constants from \"../util/constants.js\";\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\nimport { AbortError } from \"@azure/abort-controller\";\nimport type { PipelineResponse } from \"@azure/core-rest-pipeline\";\nimport { isDefined } from \"@azure/core-util\";\nimport type { HttpResponse } from \"./compat/index.js\";\nimport { toHttpResponse } from \"./compat/index.js\";\nimport { ErrorNameConditionMapper, StandardAbortMessage, delay } from \"@azure/core-amqp\";\nimport { translateServiceBusError } from \"../serviceBusError.js\";\n\n/**\n * @internal\n * Provides a uniue name by appending a string guid to the given string in the following format:\n * `{name}-{uuid}`.\n * @param name - The nme of the entity\n */\nexport function getUniqueName(name: string): string {\n  return `${name}-${generate_uuid()}`;\n}\n\n/**\n * @internal\n * Returns the passed identifier if it is not undefined or empty;\n * otherwise generate and returns a unique one in the following format;\n *   `{prefix}-{uuid}`.\n * @param prefix - The prefix used to generate identifier\n * @param identifier - an identifier name\n */\nexport function ensureValidIdentifier(prefix: string, identifier?: string): string {\n  return identifier ? identifier : getUniqueName(prefix);\n}\n\n/**\n * @internal\n * If you try to turn a Guid into a Buffer in .NET, the bytes of the first three groups get\n * flipped within the group, but the last two groups don't get flipped, so we end up with a\n * different byte order. This is the order of bytes needed to make Service Bus recognize the token.\n *\n * @param lockToken - The lock token whose bytes need to be reorded.\n * @returns Buffer representing reordered bytes.\n */\nexport function reorderLockToken(lockTokenBytes: Buffer): Buffer {\n  if (!lockTokenBytes || !Buffer.isBuffer(lockTokenBytes)) {\n    return lockTokenBytes;\n  }\n\n  return Buffer.from([\n    lockTokenBytes[3],\n    lockTokenBytes[2],\n    lockTokenBytes[1],\n    lockTokenBytes[0],\n\n    lockTokenBytes[5],\n    lockTokenBytes[4],\n\n    lockTokenBytes[7],\n    lockTokenBytes[6],\n\n    lockTokenBytes[8],\n    lockTokenBytes[9],\n\n    lockTokenBytes[10],\n    lockTokenBytes[11],\n    lockTokenBytes[12],\n    lockTokenBytes[13],\n    lockTokenBytes[14],\n    lockTokenBytes[15],\n  ]);\n}\n\n/**\n * @internal\n * Provides the time in milliseconds after which the lock renewal should occur.\n * @param lockedUntilUtc - The time until which the message is locked.\n */\nexport function calculateRenewAfterDuration(lockedUntilUtc: Date): number {\n  const now = Date.now();\n  const lockedUntil = lockedUntilUtc.getTime();\n  const remainingTime = lockedUntil - now;\n  receiverLogger.verbose(\"Locked until utc  : %d\", lockedUntil);\n  receiverLogger.verbose(\"Current time is   : %d\", now);\n  receiverLogger.verbose(\"Remaining time is : %d\", remainingTime);\n  if (remainingTime < 1000) {\n    return 0;\n  }\n  const buffer = Math.min(remainingTime / 2, 10000); // 10 seconds\n  const renewAfter = remainingTime - buffer;\n  receiverLogger.verbose(\"Renew after       : %d\", renewAfter);\n  return renewAfter;\n}\n\n/**\n * @internal\n * Converts the .net ticks to a JS Date object.\n *\n * - The epoch for the DateTimeOffset type is `0000-01-01`, while the epoch for JS Dates is\n * `1970-01-01`.\n * - The DateTimeOffset ticks value for the date `1970-01-01` is `621355968000000000`.\n *   - Hence, to convert it to the JS epoch; we `subtract` the delta from the given value.\n * - Ticks in DateTimeOffset is `1/10000000` second, while ticks in JS Date is `1/1000` second.\n *   - Thus, we `divide` the value by `10000` to convert it to JS Date ticks.\n *\n * @param buf - Input as a Buffer\n * @returns The JS Date object.\n */\nexport function convertTicksToDate(buf: number[]): Date {\n  const epochMicroDiff: number = 621355968000000000;\n  const longValue: Long = Long.fromBytesBE(buf);\n  const timeInMS = longValue.sub(epochMicroDiff).div(10000).toNumber();\n  const result = new Date(timeInMS);\n  logger.verbose(\"The converted date is: %s\", result.toString());\n  return result;\n}\n\n/**\n * @internal\n * Converts any given input to a Buffer.\n * @param input - The input that needs to be converted to a Buffer.\n */\nexport function toBuffer(input: unknown): Buffer {\n  let result: any;\n  messageLogger.verbose(\n    \"[utils.toBuffer] The given message body that needs to be converted to buffer is: \",\n    input,\n  );\n  if (isBuffer(input)) {\n    result = input;\n  } else {\n    // string, undefined, null, boolean, array, object, number should end up here\n    // coercing undefined to null as that will ensure that null value will be given to the\n    // customer on receive.\n    if (input === undefined) input = null;\n    try {\n      const inputStr = JSON.stringify(input);\n      result = Buffer.from(inputStr, \"utf8\");\n    } catch (err: any) {\n      const msg =\n        `An error occurred while executing JSON.stringify() on the given input ` +\n        input +\n        `${err instanceof Error ? err.stack : JSON.stringify(err)}`;\n      messageLogger.warning(\"[utils.toBuffer] \" + msg);\n      throw err instanceof Error ? err : new Error(msg);\n    }\n  }\n  messageLogger.verbose(\"[utils.toBuffer] The converted buffer is: %O.\", result);\n  return result;\n}\n\n/**\n * @internal\n * Helper utility to retrieve `string` value from given string,\n * or throws error if undefined.\n */\nexport function getString(value: unknown, nameOfProperty: string): string {\n  const result = getStringOrUndefined(value);\n  if (result === undefined) {\n    throw new Error(\n      `\"${nameOfProperty}\" received from service expected to be a string value and not undefined.`,\n    );\n  }\n  return result;\n}\n\n/**\n * @internal\n * Helper utility to retrieve `string` value from given input,\n * or undefined if not passed in.\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function getStringOrUndefined(value: any): string | undefined {\n  if (!isDefined(value)) {\n    return undefined;\n  }\n  return value.toString();\n}\n\n/**\n * @internal\n * Helper utility to retrieve `integer` value from given string,\n * or throws error if undefined.\n */\nexport function getInteger(value: unknown, nameOfProperty: string): number {\n  const result = getIntegerOrUndefined(value);\n  if (result === undefined) {\n    throw new Error(\n      `\"${nameOfProperty}\" received from service expected to be a number value and not undefined.`,\n    );\n  }\n  return result;\n}\n\n/**\n * @internal\n * Helper utility to retrieve `integer` value from given string,\n * or undefined if not passed in.\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function getIntegerOrUndefined(value: any): number | undefined {\n  if (!isDefined(value)) {\n    return undefined;\n  }\n  const result = parseInt(value.toString());\n  return isNaN(result) ? undefined : result;\n}\n\n/**\n * @internal\n * Helper utility to convert ISO-8601 time into Date type.\n */\nexport function getDate(value: string, nameOfProperty: string): Date {\n  return new Date(getString(value, nameOfProperty));\n}\n\n/**\n * @internal\n * Helper utility to retrieve `boolean` value from given string,\n * or throws error if undefined.\n */\nexport function getBoolean(value: unknown, nameOfProperty: string): boolean {\n  const result = getBooleanOrUndefined(value);\n  if (result === undefined) {\n    throw new Error(\n      `\"${nameOfProperty}\" received from service expected to be a boolean value and not undefined.`,\n    );\n  }\n  return result;\n}\n\n/**\n * @internal\n * Helper utility to retrieve `boolean` value from given string,\n * or undefined if not passed in.\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function getBooleanOrUndefined(value: any): boolean | undefined {\n  if (!isDefined(value)) {\n    return undefined;\n  }\n  return value.toString().trim().toLowerCase() === \"true\";\n}\n\n/**\n * @internal\n * Helps in differentiating JSON like objects from other kinds of objects.\n */\nconst EMPTY_JSON_OBJECT_CONSTRUCTOR = {}.constructor;\n\n/**\n * @internal\n * Returns `true` if given input is a JSON like object.\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function isJSONLikeObject(value: any): boolean {\n  // `value.constructor === {}.constructor` differentiates among the \"object\"s,\n  //    would filter the JSON objects and won't match any array or other kinds of objects\n\n  // -------------------------------------------------------------------------------\n  // Few examples       | typeof obj ===\"object\" |  obj.constructor==={}.constructor\n  // -------------------------------------------------------------------------------\n  // {abc:1}            | true                   | true\n  // [\"a\",\"b\"]          | true                   | false\n  // [{\"a\":1},{\"b\":2}]  | true                   | false\n  // new Date()         | true                   | false\n  // 123                | false                  | false\n  // -------------------------------------------------------------------------------\n  return typeof value === \"object\" && value.constructor === EMPTY_JSON_OBJECT_CONSTRUCTOR;\n}\n\n/**\n * @internal\n * Helper utility to retrieve message count details from given input,\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function getMessageCountDetails(value: any): MessageCountDetails {\n  const xmlnsPrefix = getXMLNSPrefix(value);\n  if (!isDefined(value)) {\n    value = {};\n  }\n  return {\n    activeMessageCount: parseInt(value[`${xmlnsPrefix}:ActiveMessageCount`]) || 0,\n    deadLetterMessageCount: parseInt(value[`${xmlnsPrefix}:DeadLetterMessageCount`]) || 0,\n    scheduledMessageCount: parseInt(value[`${xmlnsPrefix}:ScheduledMessageCount`]) || 0,\n    transferMessageCount: parseInt(value[`${xmlnsPrefix}:TransferMessageCount`]) || 0,\n    transferDeadLetterMessageCount:\n      parseInt(value[`${xmlnsPrefix}:TransferDeadLetterMessageCount`]) || 0,\n  };\n}\n\n/**\n * @internal\n * Gets the xmlns prefix from the root of the objects that are part of the parsed response body.\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function getXMLNSPrefix(value: any): string {\n  if (!value[Constants.XML_METADATA_MARKER]) {\n    throw new Error(\n      `Error occurred while parsing the response body - cannot find the XML_METADATA_MARKER \"$\" on the object ${JSON.stringify(\n        value,\n      )}`,\n    );\n  }\n  const keys = Object.keys(value[Constants.XML_METADATA_MARKER]);\n  if (keys.length !== 1) {\n    throw new Error(\n      `Error occurred while parsing the response body - unexpected number of \"xmlns:\\${prefix}\" keys at ${JSON.stringify(\n        value[Constants.XML_METADATA_MARKER],\n      )}`,\n    );\n  }\n  if (!keys[0].startsWith(\"xmlns:\")) {\n    throw new Error(\n      `Error occurred while parsing the response body - unexpected key at ${JSON.stringify(\n        value[Constants.XML_METADATA_MARKER],\n      )}`,\n    );\n  }\n  // Pick the substring that's after \"xmlns:\"\n  const xmlnsPrefix = keys[0].substring(6);\n  if (!xmlnsPrefix) {\n    throw new Error(\n      `Error occurred while parsing the response body - unexpected xmlns prefix at ${JSON.stringify(\n        value[Constants.XML_METADATA_MARKER],\n      )}`,\n    );\n  }\n  return xmlnsPrefix;\n}\n\n/**\n * Represents type of message count details in ATOM based management operations.\n * @internal\n */\nexport type MessageCountDetails = {\n  activeMessageCount: number;\n  deadLetterMessageCount: number;\n  scheduledMessageCount: number;\n  transferMessageCount: number;\n  transferDeadLetterMessageCount: number;\n};\n\n/**\n * Represents type of `AuthorizationRule` in ATOM based management operations.\n */\nexport interface AuthorizationRule {\n  /**\n   * The claim type.\n   */\n  claimType: string;\n  /**\n   * The list of rights(\"Manage\" | \"Send\" | \"Listen\").\n   */\n  accessRights?: (\"Manage\" | \"Send\" | \"Listen\")[];\n  /**\n   * The authorization rule key name.\n   */\n  keyName: string;\n  /**\n   * The primary key for the authorization rule.\n   */\n  primaryKey?: string;\n  /**\n   * The secondary key for the authorization rule.\n   */\n  secondaryKey?: string;\n}\n\n/**\n * @internal\n * Helper utility to retrieve array of `AuthorizationRule` from given input,\n * or undefined if not passed in.\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function getAuthorizationRulesOrUndefined(value: any): AuthorizationRule[] | undefined {\n  const authorizationRules: AuthorizationRule[] = [];\n\n  // Ignore special case as Service Bus treats \"\" as a valid value for authorization rules\n  if (typeof value === \"string\" && value.trim() === \"\") {\n    return undefined;\n  }\n\n  if (!isDefined(value)) {\n    return undefined;\n  }\n\n  const rawAuthorizationRules = value.AuthorizationRule;\n  if (Array.isArray(rawAuthorizationRules)) {\n    for (let i = 0; i < rawAuthorizationRules.length; i++) {\n      authorizationRules.push(buildAuthorizationRule(rawAuthorizationRules[i]));\n    }\n  } else {\n    authorizationRules.push(buildAuthorizationRule(rawAuthorizationRules));\n  }\n  return authorizationRules;\n}\n\n/**\n * @internal\n * Helper utility to build an instance of parsed authorization rule as `AuthorizationRule` from given input.\n */\nfunction buildAuthorizationRule(value: any): AuthorizationRule {\n  let accessRights;\n  if (isDefined(value[\"Rights\"])) {\n    accessRights = value[\"Rights\"][\"AccessRights\"];\n  }\n\n  const authorizationRule: AuthorizationRule = {\n    claimType: value[\"ClaimType\"],\n    accessRights,\n    keyName: value[\"KeyName\"],\n    primaryKey: value[\"PrimaryKey\"],\n    secondaryKey: value[\"SecondaryKey\"],\n  };\n\n  if (authorizationRule.accessRights && !Array.isArray(authorizationRule.accessRights)) {\n    authorizationRule.accessRights = [authorizationRule.accessRights];\n  }\n  return authorizationRule;\n}\n\n/**\n * @internal\n * Helper utility to extract output containing array of `RawAuthorizationRule` instances from given input,\n * or undefined if not passed in.\n */\nexport function getRawAuthorizationRules(authorizationRules: AuthorizationRule[] | undefined): any {\n  if (!isDefined(authorizationRules)) {\n    return undefined;\n  }\n\n  if (!Array.isArray(authorizationRules)) {\n    throw new TypeError(\n      `authorizationRules must be an array of AuthorizationRule objects or undefined, but received ${JSON.stringify(\n        authorizationRules,\n        undefined,\n        2,\n      )}`,\n    );\n  }\n\n  const rawAuthorizationRules: any[] = [];\n  for (let i = 0; i < authorizationRules.length; i++) {\n    rawAuthorizationRules.push(buildRawAuthorizationRule(authorizationRules[i]));\n  }\n  return { AuthorizationRule: rawAuthorizationRules };\n}\n\n/**\n * @internal\n * Helper utility to build an instance of raw authorization rule as RawAuthorizationRule from given `AuthorizationRule` input.\n * @param authorizationRule - parsed Authorization Rule instance\n */\nfunction buildRawAuthorizationRule(authorizationRule: AuthorizationRule): any {\n  if (!isJSONLikeObject(authorizationRule) || authorizationRule === null) {\n    throw new TypeError(\n      `Expected authorizationRule input to be a JS object value, but received ${JSON.stringify(\n        authorizationRule,\n        undefined,\n        2,\n      )}`,\n    );\n  }\n\n  const rawAuthorizationRule: any = {\n    ClaimType: authorizationRule.claimType,\n    // ClaimValue is not settable by the users, but service expects the value for PUT requests\n    ClaimValue: \"None\",\n    Rights: {\n      AccessRights: authorizationRule.accessRights,\n    },\n    KeyName: authorizationRule.keyName,\n    PrimaryKey: authorizationRule.primaryKey,\n    SecondaryKey: authorizationRule.secondaryKey,\n  };\n  rawAuthorizationRule[Constants.XML_METADATA_MARKER] = {\n    \"p5:type\": \"SharedAccessAuthorizationRule\",\n    \"xmlns:p5\": \"http://www.w3.org/2001/XMLSchema-instance\",\n  };\n  return rawAuthorizationRule;\n}\n\n/**\n * @internal\n * Helper utility to check if given string is an absolute URL\n */\nexport function isAbsoluteUrl(url: string): boolean {\n  const _url = url.toLowerCase();\n  return _url.startsWith(\"sb://\") || _url.startsWith(\"http://\") || _url.startsWith(\"https://\");\n}\n\n/**\n * Possible values for `status` of the Service Bus messaging entities.\n */\nexport type EntityStatus =\n  | \"Active\"\n  | \"Creating\"\n  | \"Deleting\"\n  | \"ReceiveDisabled\"\n  | \"SendDisabled\"\n  | \"Disabled\"\n  | \"Renaming\"\n  | \"Restoring\"\n  | \"Unknown\";\n\n/**\n * Possible values for `availabilityStatus` of the Service Bus messaging entities.\n */\nexport type EntityAvailabilityStatus =\n  | \"Available\"\n  | \"Limited\"\n  | \"Renaming\"\n  | \"Restoring\"\n  | \"Unknown\";\n\n/**\n * @internal\n */\ntype setTimeoutArgs = (callback: (...args: any[]) => void, ms: number, ...args: any[]) => any;\n\n/**\n * An executor for a function that returns a Promise that obeys both a timeout and an\n * optional AbortSignal.\n * @param timeoutMs - The number of milliseconds to allow before throwing an OperationTimeoutError.\n * @param timeoutMessage - The message to place in the .description field for the thrown exception for Timeout.\n * @param abortSignal - The abortSignal associated with containing operation.\n * @param abortErrorMsg - The abort error message associated with containing operation.\n * @param value - The value to be resolved with after a timeout of t milliseconds.\n *\n * @internal\n */\nexport async function waitForTimeoutOrAbortOrResolve<T>(args: {\n  actionFn: () => Promise<T>;\n  timeoutMs: number;\n  timeoutMessage: string;\n  abortSignal?: AbortSignalLike;\n  // these are optional and only here for testing.\n  timeoutFunctions?: {\n    setTimeoutFn: setTimeoutArgs;\n    clearTimeoutFn: (timeoutId: any) => void;\n  };\n}): Promise<T> {\n  if (args.abortSignal && args.abortSignal.aborted) {\n    throw new AbortError(StandardAbortMessage);\n  }\n\n  let timer: any | undefined = undefined;\n  let clearAbortSignal: (() => void) | undefined = undefined;\n\n  const clearAbortSignalAndTimer = (): void => {\n    (args.timeoutFunctions?.clearTimeoutFn ?? clearTimeout)(timer);\n\n    if (clearAbortSignal) {\n      clearAbortSignal();\n    }\n  };\n\n  const abortOrTimeoutPromise = new Promise<T>((_resolve, reject) => {\n    clearAbortSignal = checkAndRegisterWithAbortSignal(reject, args.abortSignal);\n\n    timer = (args.timeoutFunctions?.setTimeoutFn ?? setTimeout)(() => {\n      reject(new OperationTimeoutError(args.timeoutMessage));\n    }, args.timeoutMs);\n  });\n\n  try {\n    return await Promise.race([abortOrTimeoutPromise, args.actionFn()]);\n  } finally {\n    clearAbortSignalAndTimer();\n  }\n}\n\n/**\n * Registers listener to the abort event on the abortSignal to call your abortFn and\n * returns a function that will clear the same listener.\n *\n * If abort signal is already aborted, then throws an AbortError and returns a function that does nothing\n *\n * @returns A function that removes any of our attached event listeners on the abort signal or an empty function if\n * the abortSignal was not defined.\n *\n * @internal\n */\nexport function checkAndRegisterWithAbortSignal(\n  onAbortFn: (abortError: AbortError) => void,\n  abortSignal?: AbortSignalLike,\n): () => void {\n  if (abortSignal == null) {\n    return () => {\n      /** Nothing to do here, no abort signal */\n    };\n  }\n\n  if (abortSignal.aborted) {\n    throw new AbortError(StandardAbortMessage);\n  }\n\n  const onAbort = (): void => {\n    abortSignal.removeEventListener(\"abort\", onAbort);\n    onAbortFn(new AbortError(StandardAbortMessage));\n  };\n\n  abortSignal.addEventListener(\"abort\", onAbort);\n\n  return () => abortSignal.removeEventListener(\"abort\", onAbort);\n}\n\n/**\n * @internal\n * The user agent prefix string for the ServiceBus client.\n * See guideline at https://azure.github.io/azure-sdk/general_azurecore.html#telemetry-policy\n */\nexport const libInfo: string = `azsdk-js-azureservicebus/${Constants.packageJsonInfo.version}`;\n\n/**\n * @internal\n * Returns the formatted prefix by removing the spaces, by appending the libInfo.\n */\nexport function formatUserAgentPrefix(prefix?: string): string {\n  let userAgentPrefix = `${(prefix || \"\").replace(\" \", \"\")}`;\n  userAgentPrefix = userAgentPrefix.length > 0 ? userAgentPrefix + \" \" : \"\";\n  return `${userAgentPrefix}${libInfo}`;\n}\n\n/**\n * @internal\n * Helper method which returns `HttpResponse` from an object of shape `PipelineResponse`.\n * TODO: remove this and use toHttpResponse() directly\n */\nexport const getHttpResponseOnly = (pipelineResponse: PipelineResponse): HttpResponse =>\n  toHttpResponse(pipelineResponse);\n\n/**\n * @internal\n * Type with the service versions for the ATOM API.\n */\nexport type ServiceBusAtomAPIVersion = \"2021-05\" | \"2017-04\";\n\n/**\n * @internal\n * Waits for one second if a sender is not sendable then check again. Throws\n * SenderBusyError if it is still not sendable.\n * Only waits when operation timeout is greater than one second.\n * @returns the actual waiting time.\n */\nexport async function waitForSendable(\n  sendLogger: ServiceBusLogger,\n  logPrefix: string,\n  name: string,\n  timeout: number,\n  sender:\n    | {\n        sendable: () => boolean;\n        credit: number;\n      }\n    | undefined,\n  outgoingAvaiable: number,\n): Promise<number> {\n  let waitTimeForSendable = 1000;\n  if (!sender?.sendable() && timeout > waitTimeForSendable) {\n    sendLogger.verbose(\n      \"%s Sender '%s', waiting for 1 second for sender to become sendable\",\n      logPrefix,\n      name,\n    );\n\n    await delay(waitTimeForSendable);\n\n    sendLogger.verbose(\n      \"%s Sender '%s' after waiting for a second, credit: %d available: %d\",\n      logPrefix,\n      name,\n      sender?.credit,\n      outgoingAvaiable,\n    );\n  } else {\n    waitTimeForSendable = 0;\n  }\n\n  if (!sender?.sendable()) {\n    // let us retry to send the message after some time.\n    const msg =\n      `[${logPrefix}] Sender \"${name}\", ` + `cannot send the message right now. Please try later.`;\n    sendLogger.warning(msg);\n    const amqpError: AmqpError = {\n      condition: ErrorNameConditionMapper.SenderBusyError,\n      description: msg,\n    };\n    throw translateServiceBusError(amqpError);\n  }\n  return waitTimeForSendable;\n}\n"]}