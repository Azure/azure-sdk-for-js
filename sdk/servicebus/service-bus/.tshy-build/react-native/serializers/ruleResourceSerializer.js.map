{"version":3,"file":"ruleResourceSerializer.js","sourceRoot":"","sources":["../../../src/serializers/ruleResourceSerializer.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAKlC,OAAO,EAAE,0BAA0B,EAAE,yBAAyB,EAAE,MAAM,0BAA0B,CAAC;AACjG,OAAO,KAAK,SAAS,MAAM,sBAAsB,CAAC;AAClD,OAAO,EAAE,SAAS,EAAE,sBAAsB,EAAE,MAAM,kBAAkB,CAAC;AACrE,OAAO,EAAE,SAAS,EAAE,oBAAoB,EAAE,MAAM,kBAAkB,CAAC;AAEnE;;;;GAIG;AACH,MAAM,UAAU,SAAS,CAAC,OAA4B;IACpD,OAAO;QACL,IAAI,EAAE,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC;QAChD,MAAM,EAAE,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACzC,MAAM,EAAE,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;KACzC,CAAC;AACJ,CAAC;AAED;;;;GAIG;AACH,SAAS,cAAc,CAAC,KAAU;IAChC,IAAI,MAA6C,CAAC;IAElD,IAAI,SAAS,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC;QACtC,MAAM,GAAG;YACP,aAAa,EAAE,KAAK,CAAC,eAAe,CAAC;YACrC,aAAa,EAAE,2BAA2B,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE,eAAe,CAAC;SACjF,CAAC;IACJ,CAAC;SAAM,CAAC;QACN,MAAM,GAAG;YACP,aAAa,EAAE,oBAAoB,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;YAC3D,OAAO,EAAE,oBAAoB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC7C,EAAE,EAAE,oBAAoB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACrC,OAAO,EAAE,oBAAoB,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAC/C,gBAAgB,EAAE,oBAAoB,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;YACjE,SAAS,EAAE,oBAAoB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YACnD,SAAS,EAAE,oBAAoB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YACnD,WAAW,EAAE,oBAAoB,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;YACvD,qBAAqB,EAAE,2BAA2B,CAChD,KAAK,CAAC,YAAY,CAAC,EACnB,uBAAuB,CACxB;SACF,CAAC;IACJ,CAAC;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AAED;;;GAGG;AACH,SAAS,aAAa,CAAC,KAAU;IAC/B,OAAO;QACL,aAAa,EAAE,KAAK,CAAC,eAAe,CAAC;QACrC,aAAa,EAAE,2BAA2B,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE,eAAe,CAAC;KACjF,CAAC;AACJ,CAAC;AA8FD;;;GAGG;AACH,MAAM,UAAU,yBAAyB,CAAC,IAAuB;IAC/D,MAAM,QAAQ,GAAwB;QACpC,MAAM,EAAE,EAAE;QACV,MAAM,EAAE,EAAE;QACV,IAAI,EAAE,IAAI,CAAC,IAAI;KAChB,CAAC;IAEF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;QAC5B,uDAAuD;QACvD,QAAQ,CAAC,MAAM,GAAG;YAChB,aAAa,EAAE,KAAK;SACrB,CAAC;QACF,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,GAAG;YAC/C,SAAS,EAAE,WAAW;YACtB,UAAU,EAAE,2CAA2C;SACxD,CAAC;IACJ,CAAC;SAAM,CAAC;QACN,IAAI,sBAAsB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC;YAC3D,MAAM,SAAS,GAAkB,IAAI,CAAC,MAAuB,CAAC;YAC9D,QAAQ,CAAC,MAAM,GAAG;gBAChB,aAAa,EAAE,SAAS,CAAC,aAAa;gBACtC,UAAU,EAAE,6BAA6B,CAAC,SAAS,CAAC,aAAa,EAAE,eAAe,CAAC;aACpF,CAAC;YACF,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,GAAG;gBAC/C,SAAS,EAAE,WAAW;gBACtB,UAAU,EAAE,2CAA2C;aACxD,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,MAAM,iBAAiB,GAA0B,IAAI,CAAC,MAA+B,CAAC;YAEtF,QAAQ,CAAC,MAAM,GAAG;gBAChB,aAAa,EAAE,iBAAiB,CAAC,aAAa;gBAC9C,KAAK,EAAE,iBAAiB,CAAC,OAAO;gBAChC,EAAE,EAAE,iBAAiB,CAAC,EAAE;gBACxB,OAAO,EAAE,iBAAiB,CAAC,OAAO;gBAClC,gBAAgB,EAAE,iBAAiB,CAAC,gBAAgB;gBACpD,WAAW,EAAE,iBAAiB,CAAC,WAAW;gBAC1C,SAAS,EAAE,iBAAiB,CAAC,SAAS;gBACtC,SAAS,EAAE,iBAAiB,CAAC,SAAS;gBACtC,UAAU,EAAE,6BAA6B,CACvC,iBAAiB,CAAC,qBAAqB,EACvC,uBAAuB,CACxB;aACF,CAAC;YACF,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,GAAG;gBAC/C,SAAS,EAAE,mBAAmB;gBAC9B,UAAU,EAAE,2CAA2C;aACxD,CAAC;QACJ,CAAC;IACH,CAAC;IAED,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC;QACrE,uEAAuE;QACvE,QAAQ,CAAC,MAAM,GAAG,EAAE,CAAC;QACrB,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,GAAG;YAC/C,SAAS,EAAE,iBAAiB;YAC5B,UAAU,EAAE,2CAA2C;SACxD,CAAC;IACJ,CAAC;SAAM,CAAC;QACN,QAAQ,CAAC,MAAM,GAAG;YAChB,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa;YACxC,UAAU,EAAE,6BAA6B,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,eAAe,CAAC;SACtF,CAAC;QACF,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,GAAG;YAC/C,SAAS,EAAE,eAAe;YAC1B,UAAU,EAAE,2CAA2C;SACxD,CAAC;IACJ,CAAC;IAED,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED;;;GAGG;AACH,MAAM,OAAO,sBAAsB;IACjC,SAAS,CAAC,IAAoB;QAC5B,OAAO,yBAAyB,CAAC,iBAAiB,EAAE,yBAAyB,CAAC,IAAI,CAAC,CAAC,CAAC;IACvF,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,QAA+B;QAC/C,OAAO,0BAA0B,CAAC,CAAC,WAAW,EAAE,kBAAkB,EAAE,UAAU,CAAC,EAAE,QAAQ,CAAC,CAAC;IAC7F,CAAC;CACF;AAED;;GAEG;AACH,MAAM,UAAU,eAAe,CAAC,MAAe;IAC7C,OAAO,sBAAsB,CAAC,MAAM,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC;AAC3D,CAAC;AAED;;;;;GAKG;AACH,IAAK,8BAMJ;AAND,WAAK,8BAA8B;IACjC,uDAAqB,CAAA;IACrB,uDAAqB,CAAA;IACrB,mDAAiB,CAAA;IACjB,uDAAqB,CAAA;IACrB,yDAAuB,CAAA;AACzB,CAAC,EANI,8BAA8B,KAA9B,8BAA8B,QAMlC;AAED;;GAEG;AACH,IAAK,iCAMJ;AAND,WAAK,iCAAiC;IACpC,gDAAW,CAAA;IACX,sDAAiB,CAAA;IACjB,sDAAiB,CAAA;IACjB,wDAAmB,CAAA;IACnB,sDAAiB,CAAA;AACnB,CAAC,EANI,iCAAiC,KAAjC,iCAAiC,QAMrC;AAkBD;;;;GAIG;AACH,MAAM,kBAAkB,GAAG,yBAAyB,CAAC;AAErD;;;;GAIG;AACH,SAAS,2BAA2B,CAClC,KAAU,EACV,SAAoD;;IAEpD,IAAI,CAAC,KAAK,EAAE,CAAC;QACX,OAAO,SAAS,CAAC;IACnB,CAAC;IACD,MAAM,UAAU,GAAQ,EAAE,CAAC;IAC3B,IAAI,aAAa,CAAC;IAClB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,KAAI,MAAA,KAAK,CAAC,kBAAkB,CAAC,0CAAE,GAAG,CAAA,EAAE,CAAC;QAChF,qCAAqC;QACrC,yEAAyE;QACzE,wCAAwC;QACxC,kHAAkH;QAClH,2GAA2G;QAC3G,aAAa,GAAG,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC;IAC9C,CAAC;SAAM,CAAC;QACN,aAAa,GAAG,KAAK,CAAC,kBAAkB,CAAC,CAAC;IAC5C,CAAC;IACD,IAAI,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,CAAC;QACjC,KAAK,MAAM,WAAW,IAAI,aAAa,EAAE,CAAC;YACxC,MAAM,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC;YAC5B,MAAM,MAAM,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACtC,MAAM,gBAAgB,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAClF,IACE,gBAAgB,KAAK,iCAAiC,CAAC,GAAG;gBAC1D,gBAAgB,KAAK,iCAAiC,CAAC,MAAM,EAC7D,CAAC;gBACD,UAAU,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;YACnC,CAAC;iBAAM,IAAI,gBAAgB,KAAK,iCAAiC,CAAC,MAAM,EAAE,CAAC;gBACzE,UAAU,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;YAC3B,CAAC;iBAAM,IAAI,gBAAgB,KAAK,iCAAiC,CAAC,OAAO,EAAE,CAAC;gBAC1E,UAAU,CAAC,GAAG,CAAC,GAAG,MAAM,KAAK,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;YACrD,CAAC;iBAAM,IAAI,gBAAgB,KAAK,iCAAiC,CAAC,IAAI,EAAE,CAAC;gBACvE,UAAU,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC;YACrC,CAAC;iBAAM,CAAC;gBACN,MAAM,IAAI,SAAS,CACjB,yDAAyD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,CACvF,CAAC;YACJ,CAAC;QACH,CAAC;IACH,CAAC;SAAM,CAAC;QACN,MAAM,IAAI,SAAS,CACjB,GAAG,SAAS,oEAAoE,IAAI,CAAC,SAAS,CAC5F,KAAK,CACN,EAAE,CACJ,CAAC;IACJ,CAAC;IACD,OAAO,UAAU,CAAC;AACpB,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,6BAA6B,CAC3C,UAA8C,EAC9C,SAAoD;IAEpD,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,CAAC;QAC3B,OAAO,SAAS,CAAC;IACnB,CAAC;IACD,IACE,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC;QACzB,OAAO,UAAU,KAAK,QAAQ;QAC9B,OAAO,UAAU,KAAK,QAAQ;QAC9B,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,CAAC,EACrC,CAAC;QACD,MAAM,IAAI,SAAS,CACjB,6BAA6B,SAAS,IAAI,IAAI,CAAC,SAAS,CACtD,UAAU,CACX,gDAAgD,CAClD,CAAC;IACJ,CAAC;IACD,MAAM,aAAa,GAAsB,EAAE,CAAC;IAC5C,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;QAC1C,IAAI,IAA+B,CAAC;QACpC,IAAI,KAAK,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;QAC5B,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;YAC9B,IAAI,GAAG,8BAA8B,CAAC,MAAM,CAAC;QAC/C,CAAC;aAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;YACrC,IAAI,GAAG,8BAA8B,CAAC,MAAM,CAAC;QAC/C,CAAC;aAAM,IAAI,OAAO,KAAK,KAAK,SAAS,EAAE,CAAC;YACtC,IAAI,GAAG,8BAA8B,CAAC,OAAO,CAAC;QAChD,CAAC;aAAM,IAAI,KAAK,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC;YAC5D,IAAI,GAAG,8BAA8B,CAAC,IAAI,CAAC;YAC3C,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;QACzB,CAAC;aAAM,CAAC;YACN,MAAM,IAAI,SAAS,CACjB,yCAAyC,SAAS,iBAAiB,GAAG,GAAG,CAC1E,CAAC;QACJ,CAAC;QAED,MAAM,YAAY,GAAoB;YACpC,GAAG,EAAE,GAAG;YACR,KAAK,EAAE;gBACL,CAAC,SAAS,CAAC,mBAAmB,CAAC,EAAE;oBAC/B,SAAS,EAAE,IAAI;oBACf,WAAW,EAAE,kCAAkC;iBAChD;gBACD,CAAC,SAAS,CAAC,gBAAgB,CAAC,EAAE,KAAK;aACpC;SACF,CAAC;QACF,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACnC,CAAC;IACD,OAAO;QACL,CAAC,kBAAkB,CAAC,EAAE,aAAa;KACpC,CAAC;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { FullOperationResponse } from \"@azure/core-client\";\nimport type { CorrelationRuleFilter } from \"../core/managementClient.js\";\nimport type { AtomXmlSerializer } from \"../util/atomXmlHelper.js\";\nimport { deserializeAtomXmlResponse, serializeToAtomXmlRequest } from \"../util/atomXmlHelper.js\";\nimport * as Constants from \"../util/constants.js\";\nimport { isDefined, isObjectWithProperties } from \"@azure/core-util\";\nimport { getString, getStringOrUndefined } from \"../util/utils.js\";\n\n/**\n * @internal\n * Builds the rule object from the raw json object gotten after deserializing the\n * response from the service\n */\nexport function buildRule(rawRule: Record<string, any>): RuleProperties {\n  return {\n    name: getString(rawRule[\"RuleName\"], \"ruleName\"),\n    filter: getTopicFilter(rawRule[\"Filter\"]),\n    action: getRuleAction(rawRule[\"Action\"]),\n  };\n}\n\n/**\n * @internal\n * Helper utility to retrieve `filter` value from given input,\n * or undefined if not passed in.\n */\nfunction getTopicFilter(value: any): SqlRuleFilter | CorrelationRuleFilter {\n  let result: SqlRuleFilter | CorrelationRuleFilter;\n\n  if (isDefined(value[\"SqlExpression\"])) {\n    result = {\n      sqlExpression: value[\"SqlExpression\"],\n      sqlParameters: getKeyValuePairsOrUndefined(value[\"Parameters\"], \"SQLParameters\"),\n    };\n  } else {\n    result = {\n      correlationId: getStringOrUndefined(value[\"CorrelationId\"]),\n      subject: getStringOrUndefined(value[\"Label\"]),\n      to: getStringOrUndefined(value[\"To\"]),\n      replyTo: getStringOrUndefined(value[\"ReplyTo\"]),\n      replyToSessionId: getStringOrUndefined(value[\"ReplyToSessionId\"]),\n      sessionId: getStringOrUndefined(value[\"SessionId\"]),\n      messageId: getStringOrUndefined(value[\"MessageId\"]),\n      contentType: getStringOrUndefined(value[\"ContentType\"]),\n      applicationProperties: getKeyValuePairsOrUndefined(\n        value[\"Properties\"],\n        \"ApplicationProperties\",\n      ),\n    };\n  }\n  return result;\n}\n\n/**\n * @internal\n * Helper utility to retrieve rule `action` value from given input.\n */\nfunction getRuleAction(value: any): SqlRuleAction {\n  return {\n    sqlExpression: value[\"SqlExpression\"],\n    sqlParameters: getKeyValuePairsOrUndefined(value[\"Parameters\"], \"SQLParameters\"),\n  };\n}\n\n/**\n * Represents the options to create a rule for a subscription.\n * @internal\n */\nexport interface CreateRuleOptions {\n  /**\n   * Name of the rule\n   */\n  name: string;\n\n  /**\n   * Defines the filter expression that the rule evaluates. For `SqlRuleFilter` input,\n   * the expression string is interpreted as a SQL92 expression which must\n   * evaluate to True or False. Only one between a `CorrelationRuleFilter` or\n   * a `SqlRuleFilter` can be defined.\n   */\n  filter?: SqlRuleFilter | CorrelationRuleFilter;\n\n  /**\n   * The SQL like expression that can be executed on the message should the\n   * associated filter apply.\n   */\n  action?: SqlRuleAction;\n}\n\n/**\n * Represents all the attributes of a rule.\n */\nexport interface RuleProperties {\n  /**\n   * Name of the rule\n   */\n  readonly name: string;\n\n  /**\n   * Defines the filter expression that the rule evaluates. For `SqlRuleFilter` input,\n   * the expression string is interpreted as a SQL92 expression which must\n   * evaluate to True or False. Only one between a `CorrelationRuleFilter` or\n   * a `SqlRuleFilter` can be defined.\n   */\n  filter: SqlRuleFilter | CorrelationRuleFilter;\n\n  /**\n   * The SQL like expression that can be executed on the message should the\n   * associated filter apply.\n   */\n  action: SqlRuleAction;\n}\n\n/**\n * Represents all possible fields on SqlRuleAction\n */\nexport type SqlRuleAction = {\n  /**\n   * SQL expression to use in the rule action.\n   */\n  sqlExpression?: string;\n\n  /**\n   * SQL parameters to the SQL expression in the rule action.\n   */\n  sqlParameters?: { [key: string]: string | number | boolean };\n};\n\n/**\n * Represents all possible fields on SqlRuleFilter\n */\nexport interface SqlRuleFilter {\n  /**\n   * SQL expression to use in the rule filter. It is evaluated against the messages'\n   * user-defined properties and system properties. All system properties will be prefixed with\n   * `sys.` in the condition expression.\n   * Defaults to creating a true filter if none specified\n   */\n  sqlExpression: string;\n\n  /**\n   * SQL parameters to the SQL expression in the rule filter.\n   */\n  sqlParameters?: { [key: string]: string | number | boolean };\n}\n\n/**\n * @internal\n *\n */\nexport interface InternalRuleOptions {\n  Name: string;\n  Filter: any;\n  Action: any;\n}\n\n/**\n * @internal\n *\n */\nexport function buildInternalRuleResource(rule: CreateRuleOptions): InternalRuleOptions {\n  const resource: InternalRuleOptions = {\n    Filter: {},\n    Action: {},\n    Name: rule.name,\n  };\n\n  if (!isDefined(rule.filter)) {\n    // Defaults to creating a true filter if none specified\n    resource.Filter = {\n      SqlExpression: \"1=1\",\n    };\n    resource.Filter[Constants.XML_METADATA_MARKER] = {\n      \"p4:type\": \"SqlFilter\",\n      \"xmlns:p4\": \"http://www.w3.org/2001/XMLSchema-instance\",\n    };\n  } else {\n    if (isObjectWithProperties(rule.filter, [\"sqlExpression\"])) {\n      const sqlFilter: SqlRuleFilter = rule.filter as SqlRuleFilter;\n      resource.Filter = {\n        SqlExpression: sqlFilter.sqlExpression,\n        Parameters: buildInternalRawKeyValuePairs(sqlFilter.sqlParameters, \"sqlParameters\"),\n      };\n      resource.Filter[Constants.XML_METADATA_MARKER] = {\n        \"p4:type\": \"SqlFilter\",\n        \"xmlns:p4\": \"http://www.w3.org/2001/XMLSchema-instance\",\n      };\n    } else {\n      const correlationFilter: CorrelationRuleFilter = rule.filter as CorrelationRuleFilter;\n\n      resource.Filter = {\n        CorrelationId: correlationFilter.correlationId,\n        Label: correlationFilter.subject,\n        To: correlationFilter.to,\n        ReplyTo: correlationFilter.replyTo,\n        ReplyToSessionId: correlationFilter.replyToSessionId,\n        ContentType: correlationFilter.contentType,\n        SessionId: correlationFilter.sessionId,\n        MessageId: correlationFilter.messageId,\n        Properties: buildInternalRawKeyValuePairs(\n          correlationFilter.applicationProperties,\n          \"applicationProperties\",\n        ),\n      };\n      resource.Filter[Constants.XML_METADATA_MARKER] = {\n        \"p4:type\": \"CorrelationFilter\",\n        \"xmlns:p4\": \"http://www.w3.org/2001/XMLSchema-instance\",\n      };\n    }\n  }\n\n  if (!isDefined(rule.action) || !isDefined(rule.action.sqlExpression)) {\n    // Defaults to creating an empty rule action instance if none specified\n    resource.Action = {};\n    resource.Action[Constants.XML_METADATA_MARKER] = {\n      \"p4:type\": \"EmptyRuleAction\",\n      \"xmlns:p4\": \"http://www.w3.org/2001/XMLSchema-instance\",\n    };\n  } else {\n    resource.Action = {\n      SqlExpression: rule.action.sqlExpression,\n      Parameters: buildInternalRawKeyValuePairs(rule.action.sqlParameters, \"sqlParameters\"),\n    };\n    resource.Action[Constants.XML_METADATA_MARKER] = {\n      \"p4:type\": \"SqlRuleAction\",\n      \"xmlns:p4\": \"http://www.w3.org/2001/XMLSchema-instance\",\n    };\n  }\n\n  return resource;\n}\n\n/**\n * @internal\n * RuleResourceSerializer for serializing / deserializing Rule entities\n */\nexport class RuleResourceSerializer implements AtomXmlSerializer {\n  serialize(rule: RuleProperties): Record<string, unknown> {\n    return serializeToAtomXmlRequest(\"RuleDescription\", buildInternalRuleResource(rule));\n  }\n\n  async deserialize(response: FullOperationResponse): Promise<FullOperationResponse> {\n    return deserializeAtomXmlResponse([\"TopicName\", \"SubscriptionName\", \"RuleName\"], response);\n  }\n}\n\n/**\n * @internal\n */\nexport function isSqlRuleAction(action: unknown): action is SqlRuleAction {\n  return isObjectWithProperties(action, [\"sqlExpression\"]);\n}\n\n/**\n * Service expects the XML request with the special type names serialized in the request,\n * the request would fail otherwise.\n *\n * @internal\n */\nenum TypeMapForRequestSerialization {\n  double = \"l28:double\",\n  string = \"l28:string\",\n  long = \"l28:long\",\n  date = \"l28:dateTime\",\n  boolean = \"l28:boolean\",\n}\n\n/**\n * @internal\n */\nenum TypeMapForResponseDeserialization {\n  int = \"int\",\n  double = \"double\",\n  string = \"string\",\n  boolean = \"boolean\",\n  date = \"dateTime\",\n}\n\n/**\n * @internal\n * Internal representation of key-value pair\n */\ntype RawKeyValuePair = {\n  Key: string;\n  Value: any;\n};\n\n/**\n * @internal\n */\ninterface InternalRawKeyValuePairs {\n  KeyValueOfstringanyType: RawKeyValuePair[];\n}\n\n/**\n * Key-value pairs are supposed to be wrapped with this tag in the XML request, they are ignored otherwise.\n *\n * @internal\n */\nconst keyValuePairXMLTag = \"KeyValueOfstringanyType\";\n\n/**\n * @internal\n * Helper utility to retrieve the key-value pairs from the RawKeyValue object from given input,\n * or undefined if not passed in.\n */\nfunction getKeyValuePairsOrUndefined(\n  value: any,\n  attribute: \"ApplicationProperties\" | \"SQLParameters\",\n): { [key: string]: any } | undefined {\n  if (!value) {\n    return undefined;\n  }\n  const properties: any = {};\n  let rawProperties;\n  if (!Array.isArray(value[keyValuePairXMLTag]) && value[keyValuePairXMLTag]?.Key) {\n    // When a single property is present,\n    //    value[\"KeyValueOfstringanyType\"] is { Key: <key>, Value: [Object] }\n    // When multiple properties are present,\n    //    value[\"KeyValueOfstringanyType\"] is [ { Key: <key-1>, Value: [Object] }, { Key: <key-2>, Value: [Object] } ]\n    // For consistency, wrapping `value[\"KeyValueOfstringanyType\"]` as an array for the \"single property\" case.\n    rawProperties = [value[keyValuePairXMLTag]];\n  } else {\n    rawProperties = value[keyValuePairXMLTag];\n  }\n  if (Array.isArray(rawProperties)) {\n    for (const rawProperty of rawProperties) {\n      const key = rawProperty.Key;\n      const _value = rawProperty.Value[\"_\"];\n      const encodedValueType = rawProperty.Value[\"$\"][\"i:type\"].toString().substring(5);\n      if (\n        encodedValueType === TypeMapForResponseDeserialization.int ||\n        encodedValueType === TypeMapForResponseDeserialization.double\n      ) {\n        properties[key] = Number(_value);\n      } else if (encodedValueType === TypeMapForResponseDeserialization.string) {\n        properties[key] = _value;\n      } else if (encodedValueType === TypeMapForResponseDeserialization.boolean) {\n        properties[key] = _value === \"true\" ? true : false;\n      } else if (encodedValueType === TypeMapForResponseDeserialization.date) {\n        properties[key] = new Date(_value);\n      } else {\n        throw new TypeError(\n          `Unable to parse the key-value pairs in the response - ${JSON.stringify(rawProperty)}`,\n        );\n      }\n    }\n  } else {\n    throw new TypeError(\n      `${attribute} in the response is not an array, unable to parse the response - ${JSON.stringify(\n        value,\n      )}`,\n    );\n  }\n  return properties;\n}\n\n/**\n * @internal\n * Helper utility to extract array of user properties key-value instances from given input,\n * or undefined if not passed in.\n */\nexport function buildInternalRawKeyValuePairs(\n  parameters: { [key: string]: any } | undefined,\n  attribute: \"applicationProperties\" | \"sqlParameters\",\n): InternalRawKeyValuePairs | undefined {\n  if (!isDefined(parameters)) {\n    return undefined;\n  }\n  if (\n    Array.isArray(parameters) ||\n    typeof parameters === \"string\" ||\n    typeof parameters !== \"object\" ||\n    Object.entries(parameters).length < 1\n  ) {\n    throw new TypeError(\n      `Unsupported value for the ${attribute} ${JSON.stringify(\n        parameters,\n      )}, expected a JSON object with key-value pairs.`,\n    );\n  }\n  const rawParameters: RawKeyValuePair[] = [];\n  for (const key of Object.keys(parameters)) {\n    let type: string | number | boolean;\n    let value = parameters[key];\n    if (typeof value === \"number\") {\n      type = TypeMapForRequestSerialization.double;\n    } else if (typeof value === \"string\") {\n      type = TypeMapForRequestSerialization.string;\n    } else if (typeof value === \"boolean\") {\n      type = TypeMapForRequestSerialization.boolean;\n    } else if (value instanceof Date && !isNaN(value.valueOf())) {\n      type = TypeMapForRequestSerialization.date;\n      value = value.toJSON();\n    } else {\n      throw new TypeError(\n        `Unsupported type for the value in the ${attribute} for the key '${key}'`,\n      );\n    }\n\n    const rawParameter: RawKeyValuePair = {\n      Key: key,\n      Value: {\n        [Constants.XML_METADATA_MARKER]: {\n          \"p4:type\": type,\n          \"xmlns:l28\": \"http://www.w3.org/2001/XMLSchema\",\n        },\n        [Constants.XML_VALUE_MARKER]: value,\n      },\n    };\n    rawParameters.push(rawParameter);\n  }\n  return {\n    [keyValuePairXMLTag]: rawParameters,\n  };\n}\n"]}