/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export interface JobDescriptor {
  /** Optional display name for the analysis job. */
  displayName?: string;
}

export interface AnalysisInput {
  /** Contains a set of input documents to be analyzed by the service. */
  analysisInput: MultiLanguageBatchInput;
}

/** Contains a set of input documents to be analyzed by the service. */
export interface MultiLanguageBatchInput {
  /** The set of documents to process as part of this batch. */
  documents: TextDocumentInput[];
}

/** An object representing an individual text document to be analyzed by the Text Analytics service. The document contains a unique document ID, the full text of the document, and the language of the document's text. */
export interface TextDocumentInput {
  /** A unique, non-empty document identifier. */
  id: string;
  /** The input text to process. */
  text: string;
  /** (Optional) This is the 2 letter ISO 639-1 representation of a language. For example, use "en" for English; "es" for Spanish etc. If not set, use "en" for English as default. */
  language?: string;
}

export interface JobManifest {
  /** The set of tasks to execute on the input documents. Cannot specify the same task more than once. */
  tasks: JobManifestTasks;
}

/** The set of tasks to execute on the input documents. Cannot specify the same task more than once. */
export interface JobManifestTasks {
  entityRecognitionTasks?: EntitiesTask[];
  entityRecognitionPiiTasks?: PiiTask[];
  keyPhraseExtractionTasks?: KeyPhrasesTask[];
  entityLinkingTasks?: EntityLinkingTask[];
  sentimentAnalysisTasks?: SentimentAnalysisTask[];
}

export interface EntitiesTask {
  parameters?: EntitiesTaskParameters;
}

export interface EntitiesTaskParameters {
  modelVersion?: string;
  loggingOptOut?: boolean;
  stringIndexType?: StringIndexType;
}

export interface PiiTask {
  parameters?: PiiTaskParameters;
}

export interface PiiTaskParameters {
  domain?: PiiTaskParametersDomain;
  modelVersion?: string;
  loggingOptOut?: boolean;
  /** (Optional) describes the PII categories to return */
  piiCategories?: PiiCategory[];
  stringIndexType?: StringIndexType;
}

export interface KeyPhrasesTask {
  parameters?: KeyPhrasesTaskParameters;
}

export interface KeyPhrasesTaskParameters {
  modelVersion?: string;
  loggingOptOut?: boolean;
}

export interface EntityLinkingTask {
  parameters?: EntityLinkingTaskParameters;
}

export interface EntityLinkingTaskParameters {
  modelVersion?: string;
  loggingOptOut?: boolean;
  stringIndexType?: StringIndexType;
}

export interface SentimentAnalysisTask {
  parameters?: SentimentAnalysisTaskParameters;
}

export interface SentimentAnalysisTaskParameters {
  modelVersion?: string;
  loggingOptOut?: boolean;
  opinionMining?: boolean;
  stringIndexType?: StringIndexType;
}

export interface ErrorResponse {
  /** Document Error. */
  error: TextAnalyticsError;
}

export interface TextAnalyticsError {
  /** Error code. */
  code: ErrorCodeValue;
  /** Error message. */
  message: string;
  /** Error target. */
  target?: string;
  /** Inner error contains more specific information. */
  innererror?: InnerError;
  /** Details about specific errors that led to this reported error. */
  details?: TextAnalyticsError[];
}

export interface InnerError {
  /** Error code. */
  code: InnerErrorCodeValue;
  /** Error message. */
  message: string;
  /** Error details. */
  details?: { [propertyName: string]: string };
  /** Error target. */
  target?: string;
  /** Inner error contains more specific information. */
  innererror?: InnerError;
}

export interface JobMetadata {
  createdDateTime: Date;
  expirationDateTime?: Date;
  jobId: string;
  lastUpdateDateTime: Date;
  status: State;
}

export interface AnalyzeJobDisplayName {
  displayName?: string;
}

export interface TasksState {
  tasks: TasksStateTasks;
}

export interface TasksStateTasks {
  completed: number;
  failed: number;
  inProgress: number;
  total: number;
  entityRecognitionTasks?: TasksStateTasksEntityRecognitionTasksItem[];
  entityRecognitionPiiTasks?: TasksStateTasksEntityRecognitionPiiTasksItem[];
  keyPhraseExtractionTasks?: TasksStateTasksKeyPhraseExtractionTasksItem[];
  entityLinkingTasks?: TasksStateTasksEntityLinkingTasksItem[];
  sentimentAnalysisTasks?: TasksStateTasksSentimentAnalysisTasksItem[];
}

export interface TaskState {
  lastUpdateDateTime: Date;
  status: State;
}

export interface EntitiesTaskResult {
  results?: EntitiesResult;
}

export interface EntitiesResult {
  /** Response by document */
  documents: DocumentEntities[];
  /** Errors by document id. */
  errors: DocumentError[];
  /** if includeStatistics=true was specified in the request this field will contain information about the request payload. */
  statistics?: TextDocumentBatchStatistics;
  /** This field indicates which model is used for scoring. */
  modelVersion: string;
}

export interface DocumentEntities {
  /** Unique, non-empty document identifier. */
  id: string;
  /** Recognized entities in the document. */
  entities: Entity[];
  /** Warnings encountered while processing document. */
  warnings: TextAnalyticsWarning[];
  /** if showStats=true was specified in the request this field will contain information about the document payload. */
  statistics?: TextDocumentStatistics;
}

/** A word or phrase identified as an entity that is categorized within a taxonomy of types. The set of categories recognized by the Text Analytics service is described at https://docs.microsoft.com/azure/cognitive-services/Text-Analytics/named-entity-types . */
export interface Entity {
  /** Entity text as appears in the request. */
  text: string;
  /** Entity type. */
  category: string;
  /** (Optional) Entity sub type. */
  subCategory?: string;
  /** Start position for the entity text. Use of different 'stringIndexType' values can affect the offset returned. */
  offset: number;
  /** Length for the entity text. Use of different 'stringIndexType' values can affect the length returned. */
  length: number;
  /** Confidence score between 0 and 1 of the extracted entity. */
  confidenceScore: number;
}

/** Represents a warning encountered while processing a document. */
export interface TextAnalyticsWarning {
  /** Error code. */
  code: WarningCode;
  /** Warning message. */
  message: string;
}

/** if includeStatistics=true was specified in the request this field will contain information about the document payload. */
export interface TextDocumentStatistics {
  /** Number of text elements recognized in the document. */
  characterCount: number;
  /** Number of transactions for the document. */
  transactionCount: number;
}

export interface DocumentError {
  /** Document Id. */
  id: string;
  /** Document Error. */
  error: TextAnalyticsError;
}

/** if includeStatistics=true was specified in the request this field will contain information about the request payload. */
export interface TextDocumentBatchStatistics {
  /** Number of documents submitted in the request. */
  documentCount: number;
  /** Number of valid documents. This excludes empty, over-size limit or non-supported languages documents. */
  validDocumentCount: number;
  /** Number of invalid documents. This includes empty, over-size limit or non-supported languages documents. */
  erroneousDocumentCount: number;
  /** Number of transactions for the request. */
  transactionCount: number;
}

export interface PiiTaskResult {
  results?: PiiResult;
}

export interface PiiResult {
  /** Response by document */
  documents: PiiDocumentEntities[];
  /** Errors by document id. */
  errors: DocumentError[];
  /** if includeStatistics=true was specified in the request this field will contain information about the request payload. */
  statistics?: TextDocumentBatchStatistics;
  /** This field indicates which model is used for scoring. */
  modelVersion: string;
}

export interface PiiDocumentEntities {
  /** Unique, non-empty document identifier. */
  id: string;
  /** Returns redacted text. */
  redactedText: string;
  /** Recognized entities in the document. */
  entities: Entity[];
  /** Warnings encountered while processing document. */
  warnings: TextAnalyticsWarning[];
  /** if showStats=true was specified in the request this field will contain information about the document payload. */
  statistics?: TextDocumentStatistics;
}

export interface KeyPhraseTaskResult {
  results?: KeyPhraseResult;
}

export interface KeyPhraseResult {
  /** Response by document */
  documents: DocumentKeyPhrases[];
  /** Errors by document id. */
  errors: DocumentError[];
  /** if includeStatistics=true was specified in the request this field will contain information about the request payload. */
  statistics?: TextDocumentBatchStatistics;
  /** This field indicates which model is used for scoring. */
  modelVersion: string;
}

export interface DocumentKeyPhrases {
  /** Unique, non-empty document identifier. */
  id: string;
  /** A list of representative words or phrases. The number of key phrases returned is proportional to the number of words in the input document. */
  keyPhrases: string[];
  /** Warnings encountered while processing document. */
  warnings: TextAnalyticsWarning[];
  /** if showStats=true was specified in the request this field will contain information about the document payload. */
  statistics?: TextDocumentStatistics;
}

export interface EntityLinkingTaskResult {
  results?: EntityLinkingResult;
}

export interface EntityLinkingResult {
  /** Response by document */
  documents: DocumentLinkedEntities[];
  /** Errors by document id. */
  errors: DocumentError[];
  /** if includeStatistics=true was specified in the request this field will contain information about the request payload. */
  statistics?: TextDocumentBatchStatistics;
  /** This field indicates which model is used for scoring. */
  modelVersion: string;
}

export interface DocumentLinkedEntities {
  /** Unique, non-empty document identifier. */
  id: string;
  /** Recognized well known entities in the document. */
  entities: LinkedEntity[];
  /** Warnings encountered while processing document. */
  warnings: TextAnalyticsWarning[];
  /** if showStats=true was specified in the request this field will contain information about the document payload. */
  statistics?: TextDocumentStatistics;
}

/** A word or phrase identified as a well-known entity within a database, including its formal (disambiguated) name and a link to the entity information within the source database. */
export interface LinkedEntity {
  /** Entity Linking formal name. */
  name: string;
  /** List of instances this entity appears in the text. */
  matches: Match[];
  /** Language used in the data source. */
  language: string;
  /** Unique identifier of the recognized entity from the data source. */
  dataSourceEntityId?: string;
  /** URL for the entity's page from the data source. */
  url: string;
  /** Data source used to extract entity linking, such as Wiki/Bing etc. */
  dataSource: string;
  /** Bing Entity Search API unique identifier of the recognized entity. */
  bingEntitySearchApiId?: string;
}

/** Details about the specific substring in a document that refers to a linked entity identified by the Text Analytics model. */
export interface Match {
  /** If a well known item is recognized, a decimal number denoting the confidence level between 0 and 1 will be returned. */
  confidenceScore: number;
  /** Entity text as appears in the request. */
  text: string;
  /** Start position for the entity match text. */
  offset: number;
  /** Length for the entity match text. */
  length: number;
}

export interface SentimentTaskResult {
  results?: SentimentResponse;
}

export interface SentimentResponse {
  /** Sentiment analysis per document. */
  documents: DocumentSentiment[];
  /** Errors by document id. */
  errors: DocumentError[];
  /** if includeStatistics=true was specified in the request this field will contain information about the request payload. */
  statistics?: TextDocumentBatchStatistics;
  /** This field indicates which model is used for scoring. */
  modelVersion: string;
}

export interface DocumentSentiment {
  /** Unique, non-empty document identifier. */
  id: string;
  /** Predicted sentiment for document (Negative, Neutral, Positive, or Mixed). */
  sentiment: DocumentSentimentLabel;
  /** if includeStatistics=true was specified in the request this field will contain information about the document payload. */
  statistics?: TextDocumentStatistics;
  /** Document level sentiment confidence scores between 0 and 1 for each sentiment class. */
  confidenceScores: SentimentConfidenceScores;
  /** Sentence level sentiment analysis. */
  sentenceSentiments: SentenceSentiment[];
  /** Warnings encountered while processing document. */
  warnings: TextAnalyticsWarning[];
}

/** Represents the confidence scores between 0 and 1 across all sentiment classes: positive, neutral, negative. */
export interface SentimentConfidenceScores {
  positive: number;
  neutral: number;
  negative: number;
}

/** The predicted sentiment for a given span of text. For more information regarding text sentiment, see https://docs.microsoft.com/azure/cognitive-services/Text-Analytics/how-tos/text-analytics-how-to-sentiment-analysis. */
export interface SentenceSentiment {
  /** The sentence text. */
  text: string;
  /** The predicted Sentiment for the sentence. */
  sentiment: SentenceSentimentLabel;
  /** The sentiment confidence score between 0 and 1 for the sentence for all classes. */
  confidenceScores: SentimentConfidenceScores;
  /** The sentence offset from the start of the document. */
  offset: number;
  /** The length of the sentence. */
  length: number;
  /** The array of sentence targets for the sentence. */
  targets?: SentenceTarget[];
  /** The array of assessments for the sentence. */
  assessments?: SentenceAssessment[];
}

export interface SentenceTarget {
  /** Targeted sentiment in the sentence. */
  sentiment: TokenSentimentValue;
  /** Target sentiment confidence scores for the target in the sentence. */
  confidenceScores: TargetConfidenceScoreLabel;
  /** The target offset from the start of the sentence. */
  offset: number;
  /** The length of the target. */
  length: number;
  /** The target text detected. */
  text: string;
  /** The array of either assessment or target objects which is related to the target. */
  relations: TargetRelation[];
}

/** Represents the confidence scores across all sentiment classes: positive, neutral, negative. */
export interface TargetConfidenceScoreLabel {
  positive: number;
  negative: number;
}

export interface TargetRelation {
  /** The type related to the target. */
  relationType: TargetRelationType;
  /** The JSON pointer indicating the linked object. */
  ref: string;
}

export interface SentenceAssessment {
  /** Assessment sentiment in the sentence. */
  sentiment: TokenSentimentValue;
  /** Assessment sentiment confidence scores in the sentence. */
  confidenceScores: TargetConfidenceScoreLabel;
  /** The assessment offset from the start of the sentence. */
  offset: number;
  /** The length of the assessment. */
  length: number;
  /** The assessment text detected. */
  text: string;
  /** The indicator representing if the assessment is negated. */
  isNegated: boolean;
}

export interface AnalyzeJobErrorsAndStatistics {
  errors?: TextAnalyticsError[];
  /** if includeStatistics=true was specified in the request this field will contain information about the request payload. */
  statistics?: TextDocumentBatchStatistics;
}

export interface Pagination {
  nextLink?: string;
}

export interface HealthcareTaskResult {
  results?: HealthcareResult;
  errors?: TextAnalyticsError[];
}

export interface HealthcareResult {
  /** Response by document */
  documents: DocumentHealthcareEntities[];
  /** Errors by document id. */
  errors: DocumentError[];
  /** if includeStatistics=true was specified in the request this field will contain information about the request payload. */
  statistics?: TextDocumentBatchStatistics;
  /** This field indicates which model is used for scoring. */
  modelVersion: string;
}

export interface DocumentHealthcareEntities {
  /** Unique, non-empty document identifier. */
  id: string;
  /** Healthcare entities. */
  entities: HealthcareEntity[];
  /** Healthcare entity relations. */
  relations: HealthcareRelation[];
  /** Warnings encountered while processing document. */
  warnings: TextAnalyticsWarning[];
  /** if showStats=true was specified in the request this field will contain information about the document payload. */
  statistics?: TextDocumentStatistics;
}

export interface HealthcareEntityProperties {
  /** Entity text as appears in the request. */
  text: string;
  /** Healthcare Entity Category. */
  category: HealthcareEntityCategory;
  /** (Optional) Entity sub type. */
  subcategory?: string;
  /** Start position for the entity text. Use of different 'stringIndexType' values can affect the offset returned. */
  offset: number;
  /** Length for the entity text. Use of different 'stringIndexType' values can affect the length returned. */
  length: number;
  /** Confidence score between 0 and 1 of the extracted entity. */
  confidenceScore: number;
}

export interface HealthcareLinkingProperties {
  assertion?: HealthcareAssertion;
  /** Preferred name for the entity. Example: 'histologically' would have a 'name' of 'histologic'. */
  name?: string;
  /** Entity references in known data sources. */
  links?: HealthcareEntityLink[];
}

export interface HealthcareAssertion {
  /** Describes any conditionality on the entity. */
  conditionality?: Conditionality;
  /** Describes the entities certainty and polarity. */
  certainty?: Certainty;
  /** Describes if the entity is the subject of the text or if it describes someone else. */
  association?: Association;
}

export interface HealthcareEntityLink {
  /** Entity Catalog. Examples include: UMLS, CHV, MSH, etc. */
  dataSource: string;
  /** Entity id in the given source catalog. */
  id: string;
}

/** Every relation is an entity graph of a certain relationType, where all entities are connected and have specific roles within the relation context. */
export interface HealthcareRelation {
  /** Type of relation. Examples include: `DosageOfMedication` or 'FrequencyOfMedication', etc. */
  relationType: RelationType;
  /** The entities in the relation. */
  entities: HealthcareRelationEntity[];
}

export interface HealthcareRelationEntity {
  /** Reference link object, using a JSON pointer RFC 6901 (URI Fragment Identifier Representation), pointing to the entity . */
  ref: string;
  /** Role of entity in the relationship. For example: 'CD20-positive diffuse large B-cell lymphoma' has the following entities with their roles in parenthesis:  CD20 (GeneOrProtein), Positive (Expression), diffuse large B-cell lymphoma (Diagnosis). */
  role: string;
}

export interface LanguageBatchInput {
  documents: DetectLanguageInput[];
}

/** An input to the language detection operation. This object specifies a unique document id, as well as the full text of a document and a hint indicating the document's country of origin to assist the text analytics predictive model in detecting the document's language. */
export interface DetectLanguageInput {
  /** Unique, non-empty document identifier. */
  id: string;
  text: string;
  countryHint?: string;
}

export interface LanguageResult {
  /** Response by document */
  documents: DocumentLanguage[];
  /** Errors by document id. */
  errors: DocumentError[];
  /** if includeStatistics=true was specified in the request this field will contain information about the request payload. */
  statistics?: TextDocumentBatchStatistics;
  /** This field indicates which model is used for scoring. */
  modelVersion: string;
}

export interface DocumentLanguage {
  /** Unique, non-empty document identifier. */
  id: string;
  /** Detected Language. */
  detectedLanguage: DetectedLanguage;
  /** Warnings encountered while processing document. */
  warnings: TextAnalyticsWarning[];
  /** if showStats=true was specified in the request this field will contain information about the document payload. */
  statistics?: TextDocumentStatistics;
}

/** Information about the language of a document as identified by the Text Analytics service. */
export interface DetectedLanguage {
  /** Long name of a detected language (e.g. English, French). */
  name: string;
  /** A two letter representation of the detected language according to the ISO 639-1 standard (e.g. en, fr). */
  iso6391Name: string;
  /** A confidence score between 0 and 1. Scores close to 1 indicate 100% certainty that the identified language is true. */
  confidenceScore: number;
}

export interface AnalyzeBatchInput
  extends JobDescriptor,
    AnalysisInput,
    JobManifest {}

export interface AnalyzeJobMetadata
  extends JobMetadata,
    AnalyzeJobDisplayName {}

export interface HealthcareJobState
  extends JobMetadata,
    HealthcareTaskResult,
    Pagination {}

export interface AnalyzeJobState
  extends AnalyzeJobMetadata,
    TasksState,
    AnalyzeJobErrorsAndStatistics,
    Pagination {}

export interface TasksStateTasksEntityRecognitionTasksItem
  extends TaskState,
    EntitiesTaskResult {}

export interface TasksStateTasksEntityRecognitionPiiTasksItem
  extends TaskState,
    PiiTaskResult {}

export interface TasksStateTasksKeyPhraseExtractionTasksItem
  extends TaskState,
    KeyPhraseTaskResult {}

export interface TasksStateTasksEntityLinkingTasksItem
  extends TaskState,
    EntityLinkingTaskResult {}

export interface TasksStateTasksSentimentAnalysisTasksItem
  extends TaskState,
    SentimentTaskResult {}

export interface HealthcareEntity
  extends HealthcareEntityProperties,
    HealthcareLinkingProperties {}

/** Defines headers for GeneratedClient_analyze operation. */
export interface GeneratedClientAnalyzeHeaders {
  operationLocation?: string;
}

/** Defines headers for GeneratedClient_cancelHealthJob operation. */
export interface GeneratedClientCancelHealthJobHeaders {
  operationLocation?: string;
}

/** Defines headers for GeneratedClient_health operation. */
export interface GeneratedClientHealthHeaders {
  operationLocation?: string;
}

/** Known values of {@link StringIndexType} that the service accepts. */
export enum KnownStringIndexType {
  /** Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo. */
  TextElementV8 = "TextElement_v8",
  /** Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python. */
  UnicodeCodePoint = "UnicodeCodePoint",
  /** Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript. */
  Utf16CodeUnit = "Utf16CodeUnit"
}

/**
 * Defines values for StringIndexType. \
 * {@link KnownStringIndexType} can be used interchangeably with StringIndexType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **TextElement_v8**: Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo. \
 * **UnicodeCodePoint**: Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python. \
 * **Utf16CodeUnit**: Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript.
 */
export type StringIndexType = string;

/** Known values of {@link PiiTaskParametersDomain} that the service accepts. */
export enum KnownPiiTaskParametersDomain {
  /** Phi */
  Phi = "phi",
  /** None */
  None = "none"
}

/**
 * Defines values for PiiTaskParametersDomain. \
 * {@link KnownPiiTaskParametersDomain} can be used interchangeably with PiiTaskParametersDomain,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **phi** \
 * **none**
 */
export type PiiTaskParametersDomain = string;

/** Known values of {@link PiiCategory} that the service accepts. */
export enum KnownPiiCategory {
  /** ABARoutingNumber */
  ABARoutingNumber = "ABARoutingNumber",
  /** ARNationalIdentityNumber */
  ARNationalIdentityNumber = "ARNationalIdentityNumber",
  /** AUBankAccountNumber */
  AUBankAccountNumber = "AUBankAccountNumber",
  /** AUDriversLicenseNumber */
  AUDriversLicenseNumber = "AUDriversLicenseNumber",
  /** AUMedicalAccountNumber */
  AUMedicalAccountNumber = "AUMedicalAccountNumber",
  /** AUPassportNumber */
  AUPassportNumber = "AUPassportNumber",
  /** AUTaxFileNumber */
  AUTaxFileNumber = "AUTaxFileNumber",
  /** AUBusinessNumber */
  AUBusinessNumber = "AUBusinessNumber",
  /** AUCompanyNumber */
  AUCompanyNumber = "AUCompanyNumber",
  /** ATIdentityCard */
  ATIdentityCard = "ATIdentityCard",
  /** ATTaxIdentificationNumber */
  ATTaxIdentificationNumber = "ATTaxIdentificationNumber",
  /** ATValueAddedTaxNumber */
  ATValueAddedTaxNumber = "ATValueAddedTaxNumber",
  /** AzureDocumentDBAuthKey */
  AzureDocumentDBAuthKey = "AzureDocumentDBAuthKey",
  /** AzureIaasDatabaseConnectionAndSQLString */
  AzureIaasDatabaseConnectionAndSQLString = "AzureIAASDatabaseConnectionAndSQLString",
  /** AzureIoTConnectionString */
  AzureIoTConnectionString = "AzureIoTConnectionString",
  /** AzurePublishSettingPassword */
  AzurePublishSettingPassword = "AzurePublishSettingPassword",
  /** AzureRedisCacheString */
  AzureRedisCacheString = "AzureRedisCacheString",
  /** AzureSAS */
  AzureSAS = "AzureSAS",
  /** AzureServiceBusString */
  AzureServiceBusString = "AzureServiceBusString",
  /** AzureStorageAccountKey */
  AzureStorageAccountKey = "AzureStorageAccountKey",
  /** AzureStorageAccountGeneric */
  AzureStorageAccountGeneric = "AzureStorageAccountGeneric",
  /** BENationalNumber */
  BENationalNumber = "BENationalNumber",
  /** BENationalNumberV2 */
  BENationalNumberV2 = "BENationalNumberV2",
  /** BEValueAddedTaxNumber */
  BEValueAddedTaxNumber = "BEValueAddedTaxNumber",
  /** BrcpfNumber */
  BrcpfNumber = "BRCPFNumber",
  /** BRLegalEntityNumber */
  BRLegalEntityNumber = "BRLegalEntityNumber",
  /** BRNationalIdrg */
  BRNationalIdrg = "BRNationalIDRG",
  /** BGUniformCivilNumber */
  BGUniformCivilNumber = "BGUniformCivilNumber",
  /** CABankAccountNumber */
  CABankAccountNumber = "CABankAccountNumber",
  /** CADriversLicenseNumber */
  CADriversLicenseNumber = "CADriversLicenseNumber",
  /** CAHealthServiceNumber */
  CAHealthServiceNumber = "CAHealthServiceNumber",
  /** CAPassportNumber */
  CAPassportNumber = "CAPassportNumber",
  /** CAPersonalHealthIdentification */
  CAPersonalHealthIdentification = "CAPersonalHealthIdentification",
  /** CASocialInsuranceNumber */
  CASocialInsuranceNumber = "CASocialInsuranceNumber",
  /** CLIdentityCardNumber */
  CLIdentityCardNumber = "CLIdentityCardNumber",
  /** CNResidentIdentityCardNumber */
  CNResidentIdentityCardNumber = "CNResidentIdentityCardNumber",
  /** CreditCardNumber */
  CreditCardNumber = "CreditCardNumber",
  /** HRIdentityCardNumber */
  HRIdentityCardNumber = "HRIdentityCardNumber",
  /** HRNationalIDNumber */
  HRNationalIDNumber = "HRNationalIDNumber",
  /** HRPersonalIdentificationNumber */
  HRPersonalIdentificationNumber = "HRPersonalIdentificationNumber",
  /** HRPersonalIdentificationOIBNumberV2 */
  HRPersonalIdentificationOIBNumberV2 = "HRPersonalIdentificationOIBNumberV2",
  /** CYIdentityCard */
  CYIdentityCard = "CYIdentityCard",
  /** CYTaxIdentificationNumber */
  CYTaxIdentificationNumber = "CYTaxIdentificationNumber",
  /** CZPersonalIdentityNumber */
  CZPersonalIdentityNumber = "CZPersonalIdentityNumber",
  /** CZPersonalIdentityV2 */
  CZPersonalIdentityV2 = "CZPersonalIdentityV2",
  /** DKPersonalIdentificationNumber */
  DKPersonalIdentificationNumber = "DKPersonalIdentificationNumber",
  /** DKPersonalIdentificationV2 */
  DKPersonalIdentificationV2 = "DKPersonalIdentificationV2",
  /** DrugEnforcementAgencyNumber */
  DrugEnforcementAgencyNumber = "DrugEnforcementAgencyNumber",
  /** EEPersonalIdentificationCode */
  EEPersonalIdentificationCode = "EEPersonalIdentificationCode",
  /** EUDebitCardNumber */
  EUDebitCardNumber = "EUDebitCardNumber",
  /** EUDriversLicenseNumber */
  EUDriversLicenseNumber = "EUDriversLicenseNumber",
  /** EugpsCoordinates */
  EugpsCoordinates = "EUGPSCoordinates",
  /** EUNationalIdentificationNumber */
  EUNationalIdentificationNumber = "EUNationalIdentificationNumber",
  /** EUPassportNumber */
  EUPassportNumber = "EUPassportNumber",
  /** EUSocialSecurityNumber */
  EUSocialSecurityNumber = "EUSocialSecurityNumber",
  /** EUTaxIdentificationNumber */
  EUTaxIdentificationNumber = "EUTaxIdentificationNumber",
  /** FIEuropeanHealthNumber */
  FIEuropeanHealthNumber = "FIEuropeanHealthNumber",
  /** FINationalID */
  FINationalID = "FINationalID",
  /** FINationalIDV2 */
  FINationalIDV2 = "FINationalIDV2",
  /** FIPassportNumber */
  FIPassportNumber = "FIPassportNumber",
  /** FRDriversLicenseNumber */
  FRDriversLicenseNumber = "FRDriversLicenseNumber",
  /** FRHealthInsuranceNumber */
  FRHealthInsuranceNumber = "FRHealthInsuranceNumber",
  /** FRNationalID */
  FRNationalID = "FRNationalID",
  /** FRPassportNumber */
  FRPassportNumber = "FRPassportNumber",
  /** FRSocialSecurityNumber */
  FRSocialSecurityNumber = "FRSocialSecurityNumber",
  /** FRTaxIdentificationNumber */
  FRTaxIdentificationNumber = "FRTaxIdentificationNumber",
  /** FRValueAddedTaxNumber */
  FRValueAddedTaxNumber = "FRValueAddedTaxNumber",
  /** DEDriversLicenseNumber */
  DEDriversLicenseNumber = "DEDriversLicenseNumber",
  /** DEPassportNumber */
  DEPassportNumber = "DEPassportNumber",
  /** DEIdentityCardNumber */
  DEIdentityCardNumber = "DEIdentityCardNumber",
  /** DETaxIdentificationNumber */
  DETaxIdentificationNumber = "DETaxIdentificationNumber",
  /** DEValueAddedNumber */
  DEValueAddedNumber = "DEValueAddedNumber",
  /** GRNationalIDCard */
  GRNationalIDCard = "GRNationalIDCard",
  /** GRNationalIDV2 */
  GRNationalIDV2 = "GRNationalIDV2",
  /** GRTaxIdentificationNumber */
  GRTaxIdentificationNumber = "GRTaxIdentificationNumber",
  /** HKIdentityCardNumber */
  HKIdentityCardNumber = "HKIdentityCardNumber",
  /** HUValueAddedNumber */
  HUValueAddedNumber = "HUValueAddedNumber",
  /** HUPersonalIdentificationNumber */
  HUPersonalIdentificationNumber = "HUPersonalIdentificationNumber",
  /** HUTaxIdentificationNumber */
  HUTaxIdentificationNumber = "HUTaxIdentificationNumber",
  /** INPermanentAccount */
  INPermanentAccount = "INPermanentAccount",
  /** INUniqueIdentificationNumber */
  INUniqueIdentificationNumber = "INUniqueIdentificationNumber",
  /** IDIdentityCardNumber */
  IDIdentityCardNumber = "IDIdentityCardNumber",
  /** InternationalBankingAccountNumber */
  InternationalBankingAccountNumber = "InternationalBankingAccountNumber",
  /** IEPersonalPublicServiceNumber */
  IEPersonalPublicServiceNumber = "IEPersonalPublicServiceNumber",
  /** IEPersonalPublicServiceNumberV2 */
  IEPersonalPublicServiceNumberV2 = "IEPersonalPublicServiceNumberV2",
  /** ILBankAccountNumber */
  ILBankAccountNumber = "ILBankAccountNumber",
  /** ILNationalID */
  ILNationalID = "ILNationalID",
  /** ITDriversLicenseNumber */
  ITDriversLicenseNumber = "ITDriversLicenseNumber",
  /** ITFiscalCode */
  ITFiscalCode = "ITFiscalCode",
  /** ITValueAddedTaxNumber */
  ITValueAddedTaxNumber = "ITValueAddedTaxNumber",
  /** JPBankAccountNumber */
  JPBankAccountNumber = "JPBankAccountNumber",
  /** JPDriversLicenseNumber */
  JPDriversLicenseNumber = "JPDriversLicenseNumber",
  /** JPPassportNumber */
  JPPassportNumber = "JPPassportNumber",
  /** JPResidentRegistrationNumber */
  JPResidentRegistrationNumber = "JPResidentRegistrationNumber",
  /** JPSocialInsuranceNumber */
  JPSocialInsuranceNumber = "JPSocialInsuranceNumber",
  /** JPMyNumberCorporate */
  JPMyNumberCorporate = "JPMyNumberCorporate",
  /** JPMyNumberPersonal */
  JPMyNumberPersonal = "JPMyNumberPersonal",
  /** JPResidenceCardNumber */
  JPResidenceCardNumber = "JPResidenceCardNumber",
  /** LVPersonalCode */
  LVPersonalCode = "LVPersonalCode",
  /** LTPersonalCode */
  LTPersonalCode = "LTPersonalCode",
  /** LUNationalIdentificationNumberNatural */
  LUNationalIdentificationNumberNatural = "LUNationalIdentificationNumberNatural",
  /** LUNationalIdentificationNumberNonNatural */
  LUNationalIdentificationNumberNonNatural = "LUNationalIdentificationNumberNonNatural",
  /** MYIdentityCardNumber */
  MYIdentityCardNumber = "MYIdentityCardNumber",
  /** MTIdentityCardNumber */
  MTIdentityCardNumber = "MTIdentityCardNumber",
  /** MTTaxIDNumber */
  MTTaxIDNumber = "MTTaxIDNumber",
  /** NLCitizensServiceNumber */
  NLCitizensServiceNumber = "NLCitizensServiceNumber",
  /** NLCitizensServiceNumberV2 */
  NLCitizensServiceNumberV2 = "NLCitizensServiceNumberV2",
  /** NLTaxIdentificationNumber */
  NLTaxIdentificationNumber = "NLTaxIdentificationNumber",
  /** NLValueAddedTaxNumber */
  NLValueAddedTaxNumber = "NLValueAddedTaxNumber",
  /** NZBankAccountNumber */
  NZBankAccountNumber = "NZBankAccountNumber",
  /** NZDriversLicenseNumber */
  NZDriversLicenseNumber = "NZDriversLicenseNumber",
  /** NZInlandRevenueNumber */
  NZInlandRevenueNumber = "NZInlandRevenueNumber",
  /** NZMinistryOfHealthNumber */
  NZMinistryOfHealthNumber = "NZMinistryOfHealthNumber",
  /** NZSocialWelfareNumber */
  NZSocialWelfareNumber = "NZSocialWelfareNumber",
  /** NOIdentityNumber */
  NOIdentityNumber = "NOIdentityNumber",
  /** PHUnifiedMultiPurposeIDNumber */
  PHUnifiedMultiPurposeIDNumber = "PHUnifiedMultiPurposeIDNumber",
  /** PLIdentityCard */
  PLIdentityCard = "PLIdentityCard",
  /** PLNationalID */
  PLNationalID = "PLNationalID",
  /** PLNationalIDV2 */
  PLNationalIDV2 = "PLNationalIDV2",
  /** PLPassportNumber */
  PLPassportNumber = "PLPassportNumber",
  /** PLTaxIdentificationNumber */
  PLTaxIdentificationNumber = "PLTaxIdentificationNumber",
  /** PlregonNumber */
  PlregonNumber = "PLREGONNumber",
  /** PTCitizenCardNumber */
  PTCitizenCardNumber = "PTCitizenCardNumber",
  /** PTCitizenCardNumberV2 */
  PTCitizenCardNumberV2 = "PTCitizenCardNumberV2",
  /** PTTaxIdentificationNumber */
  PTTaxIdentificationNumber = "PTTaxIdentificationNumber",
  /** ROPersonalNumericalCode */
  ROPersonalNumericalCode = "ROPersonalNumericalCode",
  /** RUPassportNumberDomestic */
  RUPassportNumberDomestic = "RUPassportNumberDomestic",
  /** RUPassportNumberInternational */
  RUPassportNumberInternational = "RUPassportNumberInternational",
  /** SANationalID */
  SANationalID = "SANationalID",
  /** SGNationalRegistrationIdentityCardNumber */
  SGNationalRegistrationIdentityCardNumber = "SGNationalRegistrationIdentityCardNumber",
  /** SKPersonalNumber */
  SKPersonalNumber = "SKPersonalNumber",
  /** SITaxIdentificationNumber */
  SITaxIdentificationNumber = "SITaxIdentificationNumber",
  /** SIUniqueMasterCitizenNumber */
  SIUniqueMasterCitizenNumber = "SIUniqueMasterCitizenNumber",
  /** ZAIdentificationNumber */
  ZAIdentificationNumber = "ZAIdentificationNumber",
  /** KRResidentRegistrationNumber */
  KRResidentRegistrationNumber = "KRResidentRegistrationNumber",
  /** Esdni */
  Esdni = "ESDNI",
  /** ESSocialSecurityNumber */
  ESSocialSecurityNumber = "ESSocialSecurityNumber",
  /** ESTaxIdentificationNumber */
  ESTaxIdentificationNumber = "ESTaxIdentificationNumber",
  /** SQLServerConnectionString */
  SQLServerConnectionString = "SQLServerConnectionString",
  /** SENationalID */
  SENationalID = "SENationalID",
  /** SENationalIDV2 */
  SENationalIDV2 = "SENationalIDV2",
  /** SEPassportNumber */
  SEPassportNumber = "SEPassportNumber",
  /** SETaxIdentificationNumber */
  SETaxIdentificationNumber = "SETaxIdentificationNumber",
  /** SwiftCode */
  SwiftCode = "SWIFTCode",
  /** CHSocialSecurityNumber */
  CHSocialSecurityNumber = "CHSocialSecurityNumber",
  /** TWNationalID */
  TWNationalID = "TWNationalID",
  /** TWPassportNumber */
  TWPassportNumber = "TWPassportNumber",
  /** TWResidentCertificate */
  TWResidentCertificate = "TWResidentCertificate",
  /** THPopulationIdentificationCode */
  THPopulationIdentificationCode = "THPopulationIdentificationCode",
  /** TRNationalIdentificationNumber */
  TRNationalIdentificationNumber = "TRNationalIdentificationNumber",
  /** UKDriversLicenseNumber */
  UKDriversLicenseNumber = "UKDriversLicenseNumber",
  /** UKElectoralRollNumber */
  UKElectoralRollNumber = "UKElectoralRollNumber",
  /** UKNationalHealthNumber */
  UKNationalHealthNumber = "UKNationalHealthNumber",
  /** UKNationalInsuranceNumber */
  UKNationalInsuranceNumber = "UKNationalInsuranceNumber",
  /** UKUniqueTaxpayerNumber */
  UKUniqueTaxpayerNumber = "UKUniqueTaxpayerNumber",
  /** UsukPassportNumber */
  UsukPassportNumber = "USUKPassportNumber",
  /** USBankAccountNumber */
  USBankAccountNumber = "USBankAccountNumber",
  /** USDriversLicenseNumber */
  USDriversLicenseNumber = "USDriversLicenseNumber",
  /** USIndividualTaxpayerIdentification */
  USIndividualTaxpayerIdentification = "USIndividualTaxpayerIdentification",
  /** USSocialSecurityNumber */
  USSocialSecurityNumber = "USSocialSecurityNumber",
  /** UAPassportNumberDomestic */
  UAPassportNumberDomestic = "UAPassportNumberDomestic",
  /** UAPassportNumberInternational */
  UAPassportNumberInternational = "UAPassportNumberInternational",
  /** Organization */
  Organization = "Organization",
  /** Email */
  Email = "Email",
  /** URL */
  URL = "URL",
  /** Age */
  Age = "Age",
  /** PhoneNumber */
  PhoneNumber = "PhoneNumber",
  /** IPAddress */
  IPAddress = "IPAddress",
  /** Date */
  Date = "Date",
  /** Person */
  Person = "Person",
  /** Address */
  Address = "Address",
  /** All */
  All = "All",
  /** Default */
  Default = "Default"
}

/**
 * Defines values for PiiCategory. \
 * {@link KnownPiiCategory} can be used interchangeably with PiiCategory,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ABARoutingNumber** \
 * **ARNationalIdentityNumber** \
 * **AUBankAccountNumber** \
 * **AUDriversLicenseNumber** \
 * **AUMedicalAccountNumber** \
 * **AUPassportNumber** \
 * **AUTaxFileNumber** \
 * **AUBusinessNumber** \
 * **AUCompanyNumber** \
 * **ATIdentityCard** \
 * **ATTaxIdentificationNumber** \
 * **ATValueAddedTaxNumber** \
 * **AzureDocumentDBAuthKey** \
 * **AzureIAASDatabaseConnectionAndSQLString** \
 * **AzureIoTConnectionString** \
 * **AzurePublishSettingPassword** \
 * **AzureRedisCacheString** \
 * **AzureSAS** \
 * **AzureServiceBusString** \
 * **AzureStorageAccountKey** \
 * **AzureStorageAccountGeneric** \
 * **BENationalNumber** \
 * **BENationalNumberV2** \
 * **BEValueAddedTaxNumber** \
 * **BRCPFNumber** \
 * **BRLegalEntityNumber** \
 * **BRNationalIDRG** \
 * **BGUniformCivilNumber** \
 * **CABankAccountNumber** \
 * **CADriversLicenseNumber** \
 * **CAHealthServiceNumber** \
 * **CAPassportNumber** \
 * **CAPersonalHealthIdentification** \
 * **CASocialInsuranceNumber** \
 * **CLIdentityCardNumber** \
 * **CNResidentIdentityCardNumber** \
 * **CreditCardNumber** \
 * **HRIdentityCardNumber** \
 * **HRNationalIDNumber** \
 * **HRPersonalIdentificationNumber** \
 * **HRPersonalIdentificationOIBNumberV2** \
 * **CYIdentityCard** \
 * **CYTaxIdentificationNumber** \
 * **CZPersonalIdentityNumber** \
 * **CZPersonalIdentityV2** \
 * **DKPersonalIdentificationNumber** \
 * **DKPersonalIdentificationV2** \
 * **DrugEnforcementAgencyNumber** \
 * **EEPersonalIdentificationCode** \
 * **EUDebitCardNumber** \
 * **EUDriversLicenseNumber** \
 * **EUGPSCoordinates** \
 * **EUNationalIdentificationNumber** \
 * **EUPassportNumber** \
 * **EUSocialSecurityNumber** \
 * **EUTaxIdentificationNumber** \
 * **FIEuropeanHealthNumber** \
 * **FINationalID** \
 * **FINationalIDV2** \
 * **FIPassportNumber** \
 * **FRDriversLicenseNumber** \
 * **FRHealthInsuranceNumber** \
 * **FRNationalID** \
 * **FRPassportNumber** \
 * **FRSocialSecurityNumber** \
 * **FRTaxIdentificationNumber** \
 * **FRValueAddedTaxNumber** \
 * **DEDriversLicenseNumber** \
 * **DEPassportNumber** \
 * **DEIdentityCardNumber** \
 * **DETaxIdentificationNumber** \
 * **DEValueAddedNumber** \
 * **GRNationalIDCard** \
 * **GRNationalIDV2** \
 * **GRTaxIdentificationNumber** \
 * **HKIdentityCardNumber** \
 * **HUValueAddedNumber** \
 * **HUPersonalIdentificationNumber** \
 * **HUTaxIdentificationNumber** \
 * **INPermanentAccount** \
 * **INUniqueIdentificationNumber** \
 * **IDIdentityCardNumber** \
 * **InternationalBankingAccountNumber** \
 * **IEPersonalPublicServiceNumber** \
 * **IEPersonalPublicServiceNumberV2** \
 * **ILBankAccountNumber** \
 * **ILNationalID** \
 * **ITDriversLicenseNumber** \
 * **ITFiscalCode** \
 * **ITValueAddedTaxNumber** \
 * **JPBankAccountNumber** \
 * **JPDriversLicenseNumber** \
 * **JPPassportNumber** \
 * **JPResidentRegistrationNumber** \
 * **JPSocialInsuranceNumber** \
 * **JPMyNumberCorporate** \
 * **JPMyNumberPersonal** \
 * **JPResidenceCardNumber** \
 * **LVPersonalCode** \
 * **LTPersonalCode** \
 * **LUNationalIdentificationNumberNatural** \
 * **LUNationalIdentificationNumberNonNatural** \
 * **MYIdentityCardNumber** \
 * **MTIdentityCardNumber** \
 * **MTTaxIDNumber** \
 * **NLCitizensServiceNumber** \
 * **NLCitizensServiceNumberV2** \
 * **NLTaxIdentificationNumber** \
 * **NLValueAddedTaxNumber** \
 * **NZBankAccountNumber** \
 * **NZDriversLicenseNumber** \
 * **NZInlandRevenueNumber** \
 * **NZMinistryOfHealthNumber** \
 * **NZSocialWelfareNumber** \
 * **NOIdentityNumber** \
 * **PHUnifiedMultiPurposeIDNumber** \
 * **PLIdentityCard** \
 * **PLNationalID** \
 * **PLNationalIDV2** \
 * **PLPassportNumber** \
 * **PLTaxIdentificationNumber** \
 * **PLREGONNumber** \
 * **PTCitizenCardNumber** \
 * **PTCitizenCardNumberV2** \
 * **PTTaxIdentificationNumber** \
 * **ROPersonalNumericalCode** \
 * **RUPassportNumberDomestic** \
 * **RUPassportNumberInternational** \
 * **SANationalID** \
 * **SGNationalRegistrationIdentityCardNumber** \
 * **SKPersonalNumber** \
 * **SITaxIdentificationNumber** \
 * **SIUniqueMasterCitizenNumber** \
 * **ZAIdentificationNumber** \
 * **KRResidentRegistrationNumber** \
 * **ESDNI** \
 * **ESSocialSecurityNumber** \
 * **ESTaxIdentificationNumber** \
 * **SQLServerConnectionString** \
 * **SENationalID** \
 * **SENationalIDV2** \
 * **SEPassportNumber** \
 * **SETaxIdentificationNumber** \
 * **SWIFTCode** \
 * **CHSocialSecurityNumber** \
 * **TWNationalID** \
 * **TWPassportNumber** \
 * **TWResidentCertificate** \
 * **THPopulationIdentificationCode** \
 * **TRNationalIdentificationNumber** \
 * **UKDriversLicenseNumber** \
 * **UKElectoralRollNumber** \
 * **UKNationalHealthNumber** \
 * **UKNationalInsuranceNumber** \
 * **UKUniqueTaxpayerNumber** \
 * **USUKPassportNumber** \
 * **USBankAccountNumber** \
 * **USDriversLicenseNumber** \
 * **USIndividualTaxpayerIdentification** \
 * **USSocialSecurityNumber** \
 * **UAPassportNumberDomestic** \
 * **UAPassportNumberInternational** \
 * **Organization** \
 * **Email** \
 * **URL** \
 * **Age** \
 * **PhoneNumber** \
 * **IPAddress** \
 * **Date** \
 * **Person** \
 * **Address** \
 * **All** \
 * **Default**
 */
export type PiiCategory = string;

/** Known values of {@link ErrorCodeValue} that the service accepts. */
export enum KnownErrorCodeValue {
  /** InvalidRequest */
  InvalidRequest = "InvalidRequest",
  /** InvalidArgument */
  InvalidArgument = "InvalidArgument",
  /** InternalServerError */
  InternalServerError = "InternalServerError",
  /** ServiceUnavailable */
  ServiceUnavailable = "ServiceUnavailable",
  /** NotFound */
  NotFound = "NotFound"
}

/**
 * Defines values for ErrorCodeValue. \
 * {@link KnownErrorCodeValue} can be used interchangeably with ErrorCodeValue,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **InvalidRequest** \
 * **InvalidArgument** \
 * **InternalServerError** \
 * **ServiceUnavailable** \
 * **NotFound**
 */
export type ErrorCodeValue = string;

/** Known values of {@link InnerErrorCodeValue} that the service accepts. */
export enum KnownInnerErrorCodeValue {
  /** InvalidParameterValue */
  InvalidParameterValue = "InvalidParameterValue",
  /** InvalidRequestBodyFormat */
  InvalidRequestBodyFormat = "InvalidRequestBodyFormat",
  /** EmptyRequest */
  EmptyRequest = "EmptyRequest",
  /** MissingInputRecords */
  MissingInputRecords = "MissingInputRecords",
  /** InvalidDocument */
  InvalidDocument = "InvalidDocument",
  /** ModelVersionIncorrect */
  ModelVersionIncorrect = "ModelVersionIncorrect",
  /** InvalidDocumentBatch */
  InvalidDocumentBatch = "InvalidDocumentBatch",
  /** UnsupportedLanguageCode */
  UnsupportedLanguageCode = "UnsupportedLanguageCode",
  /** InvalidCountryHint */
  InvalidCountryHint = "InvalidCountryHint"
}

/**
 * Defines values for InnerErrorCodeValue. \
 * {@link KnownInnerErrorCodeValue} can be used interchangeably with InnerErrorCodeValue,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **InvalidParameterValue** \
 * **InvalidRequestBodyFormat** \
 * **EmptyRequest** \
 * **MissingInputRecords** \
 * **InvalidDocument** \
 * **ModelVersionIncorrect** \
 * **InvalidDocumentBatch** \
 * **UnsupportedLanguageCode** \
 * **InvalidCountryHint**
 */
export type InnerErrorCodeValue = string;

/** Known values of {@link WarningCode} that the service accepts. */
export enum KnownWarningCode {
  /** LongWordsInDocument */
  LongWordsInDocument = "LongWordsInDocument",
  /** DocumentTruncated */
  DocumentTruncated = "DocumentTruncated"
}

/**
 * Defines values for WarningCode. \
 * {@link KnownWarningCode} can be used interchangeably with WarningCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **LongWordsInDocument** \
 * **DocumentTruncated**
 */
export type WarningCode = string;

/** Known values of {@link HealthcareEntityCategory} that the service accepts. */
export enum KnownHealthcareEntityCategory {
  /** BodyStructure */
  BodyStructure = "BODY_STRUCTURE",
  /** AGE */
  AGE = "AGE",
  /** Gender */
  Gender = "GENDER",
  /** ExaminationName */
  ExaminationName = "EXAMINATION_NAME",
  /** Date */
  Date = "DATE",
  /** Direction */
  Direction = "DIRECTION",
  /** Frequency */
  Frequency = "FREQUENCY",
  /** MeasurementValue */
  MeasurementValue = "MEASUREMENT_VALUE",
  /** MeasurementUnit */
  MeasurementUnit = "MEASUREMENT_UNIT",
  /** RelationalOperator */
  RelationalOperator = "RELATIONAL_OPERATOR",
  /** Time */
  Time = "TIME",
  /** GeneORProtein */
  GeneORProtein = "GENE_OR_PROTEIN",
  /** Variant */
  Variant = "VARIANT",
  /** AdministrativeEvent */
  AdministrativeEvent = "ADMINISTRATIVE_EVENT",
  /** CareEnvironment */
  CareEnvironment = "CARE_ENVIRONMENT",
  /** HealthcareProfession */
  HealthcareProfession = "HEALTHCARE_PROFESSION",
  /** Diagnosis */
  Diagnosis = "DIAGNOSIS",
  /** SymptomORSign */
  SymptomORSign = "SYMPTOM_OR_SIGN",
  /** ConditionQualifier */
  ConditionQualifier = "CONDITION_QUALIFIER",
  /** MedicationClass */
  MedicationClass = "MEDICATION_CLASS",
  /** MedicationName */
  MedicationName = "MEDICATION_NAME",
  /** Dosage */
  Dosage = "DOSAGE",
  /** MedicationForm */
  MedicationForm = "MEDICATION_FORM",
  /** MedicationRoute */
  MedicationRoute = "MEDICATION_ROUTE",
  /** FamilyRelation */
  FamilyRelation = "FAMILY_RELATION",
  /** TreatmentName */
  TreatmentName = "TREATMENT_NAME"
}

/**
 * Defines values for HealthcareEntityCategory. \
 * {@link KnownHealthcareEntityCategory} can be used interchangeably with HealthcareEntityCategory,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BODY_STRUCTURE** \
 * **AGE** \
 * **GENDER** \
 * **EXAMINATION_NAME** \
 * **DATE** \
 * **DIRECTION** \
 * **FREQUENCY** \
 * **MEASUREMENT_VALUE** \
 * **MEASUREMENT_UNIT** \
 * **RELATIONAL_OPERATOR** \
 * **TIME** \
 * **GENE_OR_PROTEIN** \
 * **VARIANT** \
 * **ADMINISTRATIVE_EVENT** \
 * **CARE_ENVIRONMENT** \
 * **HEALTHCARE_PROFESSION** \
 * **DIAGNOSIS** \
 * **SYMPTOM_OR_SIGN** \
 * **CONDITION_QUALIFIER** \
 * **MEDICATION_CLASS** \
 * **MEDICATION_NAME** \
 * **DOSAGE** \
 * **MEDICATION_FORM** \
 * **MEDICATION_ROUTE** \
 * **FAMILY_RELATION** \
 * **TREATMENT_NAME**
 */
export type HealthcareEntityCategory = string;

/** Known values of {@link RelationType} that the service accepts. */
export enum KnownRelationType {
  /** Abbreviation */
  Abbreviation = "Abbreviation",
  /** DirectionOfBodyStructure */
  DirectionOfBodyStructure = "DirectionOfBodyStructure",
  /** DirectionOfCondition */
  DirectionOfCondition = "DirectionOfCondition",
  /** DirectionOfExamination */
  DirectionOfExamination = "DirectionOfExamination",
  /** DirectionOfTreatment */
  DirectionOfTreatment = "DirectionOfTreatment",
  /** DosageOfMedication */
  DosageOfMedication = "DosageOfMedication",
  /** FormOfMedication */
  FormOfMedication = "FormOfMedication",
  /** FrequencyOfMedication */
  FrequencyOfMedication = "FrequencyOfMedication",
  /** FrequencyOfTreatment */
  FrequencyOfTreatment = "FrequencyOfTreatment",
  /** QualifierOfCondition */
  QualifierOfCondition = "QualifierOfCondition",
  /** RelationOfExamination */
  RelationOfExamination = "RelationOfExamination",
  /** RouteOfMedication */
  RouteOfMedication = "RouteOfMedication",
  /** TimeOfCondition */
  TimeOfCondition = "TimeOfCondition",
  /** TimeOfEvent */
  TimeOfEvent = "TimeOfEvent",
  /** TimeOfExamination */
  TimeOfExamination = "TimeOfExamination",
  /** TimeOfMedication */
  TimeOfMedication = "TimeOfMedication",
  /** TimeOfTreatment */
  TimeOfTreatment = "TimeOfTreatment",
  /** UnitOfCondition */
  UnitOfCondition = "UnitOfCondition",
  /** UnitOfExamination */
  UnitOfExamination = "UnitOfExamination",
  /** ValueOfCondition */
  ValueOfCondition = "ValueOfCondition",
  /** ValueOfExamination */
  ValueOfExamination = "ValueOfExamination"
}

/**
 * Defines values for RelationType. \
 * {@link KnownRelationType} can be used interchangeably with RelationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Abbreviation** \
 * **DirectionOfBodyStructure** \
 * **DirectionOfCondition** \
 * **DirectionOfExamination** \
 * **DirectionOfTreatment** \
 * **DosageOfMedication** \
 * **FormOfMedication** \
 * **FrequencyOfMedication** \
 * **FrequencyOfTreatment** \
 * **QualifierOfCondition** \
 * **RelationOfExamination** \
 * **RouteOfMedication** \
 * **TimeOfCondition** \
 * **TimeOfEvent** \
 * **TimeOfExamination** \
 * **TimeOfMedication** \
 * **TimeOfTreatment** \
 * **UnitOfCondition** \
 * **UnitOfExamination** \
 * **ValueOfCondition** \
 * **ValueOfExamination**
 */
export type RelationType = string;
/** Defines values for State. */
export type State =
  | "notStarted"
  | "running"
  | "succeeded"
  | "failed"
  | "rejected"
  | "cancelled"
  | "cancelling";
/** Defines values for DocumentSentimentLabel. */
export type DocumentSentimentLabel =
  | "positive"
  | "neutral"
  | "negative"
  | "mixed";
/** Defines values for SentenceSentimentLabel. */
export type SentenceSentimentLabel = "positive" | "neutral" | "negative";
/** Defines values for TokenSentimentValue. */
export type TokenSentimentValue = "positive" | "mixed" | "negative";
/** Defines values for TargetRelationType. */
export type TargetRelationType = "assessment" | "target";
/** Defines values for Conditionality. */
export type Conditionality = "hypothetical" | "conditional";
/** Defines values for Certainty. */
export type Certainty =
  | "positive"
  | "positivePossible"
  | "neutralPossible"
  | "negativePossible"
  | "negative";
/** Defines values for Association. */
export type Association = "subject" | "other";

/** Optional parameters. */
export interface AnalyzeOptionalParams extends coreClient.OperationOptions {
  /** Collection of documents to analyze and tasks to execute. */
  body?: AnalyzeBatchInput;
}

/** Contains response data for the analyze operation. */
export type AnalyzeResponse = GeneratedClientAnalyzeHeaders;

/** Optional parameters. */
export interface AnalyzeStatusOptionalParams
  extends coreClient.OperationOptions {
  /** (Optional) if set to true, response will contain request and document level statistics. */
  includeStatistics?: boolean;
  /** (Optional) Set the maximum number of results per task. When both $top and $skip are specified, $skip is applied first. */
  top?: number;
  /** (Optional) Set the number of elements to offset in the response. When both $top and $skip are specified, $skip is applied first. */
  skip?: number;
}

/** Contains response data for the analyzeStatus operation. */
export type AnalyzeStatusResponse = AnalyzeJobState;

/** Optional parameters. */
export interface HealthStatusOptionalParams
  extends coreClient.OperationOptions {
  /** (Optional) if set to true, response will contain request and document level statistics. */
  includeStatistics?: boolean;
  /** (Optional) Set the maximum number of results per task. When both $top and $skip are specified, $skip is applied first. */
  top?: number;
  /** (Optional) Set the number of elements to offset in the response. When both $top and $skip are specified, $skip is applied first. */
  skip?: number;
}

/** Contains response data for the healthStatus operation. */
export type HealthStatusResponse = HealthcareJobState;

/** Optional parameters. */
export interface CancelHealthJobOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the cancelHealthJob operation. */
export type CancelHealthJobResponse = GeneratedClientCancelHealthJobHeaders;

/** Optional parameters. */
export interface HealthOptionalParams extends coreClient.OperationOptions {
  /** (Optional) This value indicates which model will be used for scoring. If a model-version is not specified, the API should default to the latest, non-preview version. */
  modelVersion?: string;
  /** (Optional) Specifies the method used to interpret string offsets.  Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information see https://aka.ms/text-analytics-offsets */
  stringIndexType?: StringIndexType;
  /** (Optional) If set to true, you opt-out of having your text input logged for troubleshooting. By default, Text Analytics logs your input text for 48 hours, solely to allow for troubleshooting issues in providing you with the Text Analytics natural language processing functions. Setting this parameter to true, disables input logging and may limit our ability to remediate issues that occur.  Please see Cognitive Services Compliance and Privacy notes at https://aka.ms/cs-compliance for additional details, and Microsoft Responsible AI principles at https://www.microsoft.com/en-us/ai/responsible-ai. */
  loggingOptOut?: boolean;
}

/** Contains response data for the health operation. */
export type HealthResponse = GeneratedClientHealthHeaders;

/** Optional parameters. */
export interface EntitiesRecognitionGeneralOptionalParams
  extends coreClient.OperationOptions {
  /** (Optional) if set to true, response will contain request and document level statistics. */
  includeStatistics?: boolean;
  /** (Optional) This value indicates which model will be used for scoring. If a model-version is not specified, the API should default to the latest, non-preview version. */
  modelVersion?: string;
  /** (Optional) Specifies the method used to interpret string offsets.  Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information see https://aka.ms/text-analytics-offsets */
  stringIndexType?: StringIndexType;
  /** (Optional) If set to true, you opt-out of having your text input logged for troubleshooting. By default, Text Analytics logs your input text for 48 hours, solely to allow for troubleshooting issues in providing you with the Text Analytics natural language processing functions. Setting this parameter to true, disables input logging and may limit our ability to remediate issues that occur.  Please see Cognitive Services Compliance and Privacy notes at https://aka.ms/cs-compliance for additional details, and Microsoft Responsible AI principles at https://www.microsoft.com/en-us/ai/responsible-ai. */
  loggingOptOut?: boolean;
}

/** Contains response data for the entitiesRecognitionGeneral operation. */
export type EntitiesRecognitionGeneralResponse = EntitiesResult;

/** Optional parameters. */
export interface EntitiesRecognitionPiiOptionalParams
  extends coreClient.OperationOptions {
  /** (Optional) if set to true, response will contain request and document level statistics. */
  includeStatistics?: boolean;
  /** (Optional) This value indicates which model will be used for scoring. If a model-version is not specified, the API should default to the latest, non-preview version. */
  modelVersion?: string;
  /** (Optional) Specifies the method used to interpret string offsets.  Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information see https://aka.ms/text-analytics-offsets */
  stringIndexType?: StringIndexType;
  /** (Optional) If set to true, you opt-out of having your text input logged for troubleshooting. By default, Text Analytics logs your input text for 48 hours, solely to allow for troubleshooting issues in providing you with the Text Analytics natural language processing functions. Setting this parameter to true, disables input logging and may limit our ability to remediate issues that occur.  Please see Cognitive Services Compliance and Privacy notes at https://aka.ms/cs-compliance for additional details, and Microsoft Responsible AI principles at https://www.microsoft.com/en-us/ai/responsible-ai. */
  loggingOptOut?: boolean;
  /** (Optional) if specified, will set the PII domain to include only a subset of the entity categories. Possible values include: 'PHI', 'none'. */
  domain?: string;
  /** (Optional) describes the PII categories to return */
  piiCategories?: PiiCategory[];
}

/** Contains response data for the entitiesRecognitionPii operation. */
export type EntitiesRecognitionPiiResponse = PiiResult;

/** Optional parameters. */
export interface EntitiesLinkingOptionalParams
  extends coreClient.OperationOptions {
  /** (Optional) if set to true, response will contain request and document level statistics. */
  includeStatistics?: boolean;
  /** (Optional) This value indicates which model will be used for scoring. If a model-version is not specified, the API should default to the latest, non-preview version. */
  modelVersion?: string;
  /** (Optional) Specifies the method used to interpret string offsets.  Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information see https://aka.ms/text-analytics-offsets */
  stringIndexType?: StringIndexType;
  /** (Optional) If set to true, you opt-out of having your text input logged for troubleshooting. By default, Text Analytics logs your input text for 48 hours, solely to allow for troubleshooting issues in providing you with the Text Analytics natural language processing functions. Setting this parameter to true, disables input logging and may limit our ability to remediate issues that occur.  Please see Cognitive Services Compliance and Privacy notes at https://aka.ms/cs-compliance for additional details, and Microsoft Responsible AI principles at https://www.microsoft.com/en-us/ai/responsible-ai. */
  loggingOptOut?: boolean;
}

/** Contains response data for the entitiesLinking operation. */
export type EntitiesLinkingResponse = EntityLinkingResult;

/** Optional parameters. */
export interface KeyPhrasesOptionalParams extends coreClient.OperationOptions {
  /** (Optional) if set to true, response will contain request and document level statistics. */
  includeStatistics?: boolean;
  /** (Optional) This value indicates which model will be used for scoring. If a model-version is not specified, the API should default to the latest, non-preview version. */
  modelVersion?: string;
  /** (Optional) If set to true, you opt-out of having your text input logged for troubleshooting. By default, Text Analytics logs your input text for 48 hours, solely to allow for troubleshooting issues in providing you with the Text Analytics natural language processing functions. Setting this parameter to true, disables input logging and may limit our ability to remediate issues that occur.  Please see Cognitive Services Compliance and Privacy notes at https://aka.ms/cs-compliance for additional details, and Microsoft Responsible AI principles at https://www.microsoft.com/en-us/ai/responsible-ai. */
  loggingOptOut?: boolean;
}

/** Contains response data for the keyPhrases operation. */
export type KeyPhrasesResponse = KeyPhraseResult;

/** Optional parameters. */
export interface LanguagesOptionalParams extends coreClient.OperationOptions {
  /** (Optional) if set to true, response will contain request and document level statistics. */
  includeStatistics?: boolean;
  /** (Optional) This value indicates which model will be used for scoring. If a model-version is not specified, the API should default to the latest, non-preview version. */
  modelVersion?: string;
  /** (Optional) If set to true, you opt-out of having your text input logged for troubleshooting. By default, Text Analytics logs your input text for 48 hours, solely to allow for troubleshooting issues in providing you with the Text Analytics natural language processing functions. Setting this parameter to true, disables input logging and may limit our ability to remediate issues that occur.  Please see Cognitive Services Compliance and Privacy notes at https://aka.ms/cs-compliance for additional details, and Microsoft Responsible AI principles at https://www.microsoft.com/en-us/ai/responsible-ai. */
  loggingOptOut?: boolean;
}

/** Contains response data for the languages operation. */
export type LanguagesResponse = LanguageResult;

/** Optional parameters. */
export interface SentimentOptionalParams extends coreClient.OperationOptions {
  /** (Optional) if set to true, response will contain request and document level statistics. */
  includeStatistics?: boolean;
  /** (Optional) This value indicates which model will be used for scoring. If a model-version is not specified, the API should default to the latest, non-preview version. */
  modelVersion?: string;
  /** (Optional) Specifies the method used to interpret string offsets.  Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information see https://aka.ms/text-analytics-offsets */
  stringIndexType?: StringIndexType;
  /** (Optional) If set to true, you opt-out of having your text input logged for troubleshooting. By default, Text Analytics logs your input text for 48 hours, solely to allow for troubleshooting issues in providing you with the Text Analytics natural language processing functions. Setting this parameter to true, disables input logging and may limit our ability to remediate issues that occur.  Please see Cognitive Services Compliance and Privacy notes at https://aka.ms/cs-compliance for additional details, and Microsoft Responsible AI principles at https://www.microsoft.com/en-us/ai/responsible-ai. */
  loggingOptOut?: boolean;
  /** (Optional) if set to true, response will contain not only sentiment prediction but also opinion mining (aspect-based sentiment analysis) results. */
  opinionMining?: boolean;
}

/** Contains response data for the sentiment operation. */
export type SentimentOperationResponse = SentimentResponse;

/** Optional parameters. */
export interface GeneratedClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** Text Analytics API version (for example, v3.0). */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
