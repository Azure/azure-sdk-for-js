/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter
} from "@azure/core-http";
import {
  MultiLanguageBatchInput as MultiLanguageBatchInputMapper,
  LanguageBatchInput as LanguageBatchInputMapper
} from "../models/mappers";

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const input: OperationParameter = {
  parameterPath: "input",
  mapper: MultiLanguageBatchInputMapper
};

export const endpoint: OperationURLParameter = {
  parameterPath: "endpoint",
  mapper: {
    serializedName: "Endpoint",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const modelVersion: OperationQueryParameter = {
  parameterPath: ["options", "modelVersion"],
  mapper: {
    serializedName: "model-version",
    type: {
      name: "String"
    }
  }
};

export const includeStatistics: OperationQueryParameter = {
  parameterPath: ["options", "includeStatistics"],
  mapper: {
    serializedName: "showStats",
    type: {
      name: "Boolean"
    }
  }
};

export const domain: OperationQueryParameter = {
  parameterPath: ["options", "domain"],
  mapper: {
    serializedName: "domain",
    type: {
      name: "String"
    }
  }
};

export const input1: OperationParameter = {
  parameterPath: "input",
  mapper: LanguageBatchInputMapper
};

export const opinionMining: OperationQueryParameter = {
  parameterPath: ["options", "opinionMining"],
  mapper: {
    serializedName: "opinionMining",
    type: {
      name: "Boolean"
    }
  }
};
