/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const EnabledResourceTypePropertiesTypesMetadataItem: msRest.CompositeMapper = {
  serializedName: "EnabledResourceTypeProperties_typesMetadataItem",
  type: {
    name: "Composite",
    className: "EnabledResourceTypePropertiesTypesMetadataItem",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      resourceProviderNamespace: {
        serializedName: "resourceProviderNamespace",
        type: {
          name: "String"
        }
      },
      resourceType: {
        serializedName: "resourceType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SystemData: msRest.CompositeMapper = {
  serializedName: "systemData",
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const EnabledResourceType: msRest.CompositeMapper = {
  serializedName: "EnabledResourceType",
  type: {
    name: "Composite",
    className: "EnabledResourceType",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      clusterExtensionId: {
        serializedName: "properties.clusterExtensionId",
        type: {
          name: "String"
        }
      },
      extensionType: {
        serializedName: "properties.extensionType",
        type: {
          name: "String"
        }
      },
      typesMetadata: {
        serializedName: "properties.typesMetadata",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EnabledResourceTypePropertiesTypesMetadataItem"
            }
          }
        }
      },
      systemData: {
        readOnly: true,
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const CustomLocationPropertiesAuthentication: msRest.CompositeMapper = {
  serializedName: "customLocationProperties_authentication",
  type: {
    name: "Composite",
    className: "CustomLocationPropertiesAuthentication",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomLocation: msRest.CompositeMapper = {
  serializedName: "customLocation",
  type: {
    name: "Composite",
    className: "CustomLocation",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      authentication: {
        serializedName: "properties.authentication",
        type: {
          name: "Composite",
          className: "CustomLocationPropertiesAuthentication"
        }
      },
      clusterExtensionIds: {
        serializedName: "properties.clusterExtensionIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      hostResourceId: {
        serializedName: "properties.hostResourceId",
        type: {
          name: "String"
        }
      },
      hostType: {
        serializedName: "properties.hostType",
        type: {
          name: "String"
        }
      },
      namespace: {
        serializedName: "properties.namespace",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      systemData: {
        readOnly: true,
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const CustomLocationOperation: msRest.CompositeMapper = {
  serializedName: "customLocationOperation",
  type: {
    name: "Composite",
    className: "CustomLocationOperation",
    modelProperties: {
      description: {
        readOnly: true,
        serializedName: "display.description",
        type: {
          name: "String"
        }
      },
      operation: {
        readOnly: true,
        serializedName: "display.operation",
        type: {
          name: "String"
        }
      },
      provider: {
        readOnly: true,
        serializedName: "display.provider",
        type: {
          name: "String"
        }
      },
      resource: {
        readOnly: true,
        serializedName: "display.resource",
        type: {
          name: "String"
        }
      },
      isDataAction: {
        readOnly: true,
        serializedName: "isDataAction",
        type: {
          name: "Boolean"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      origin: {
        readOnly: true,
        serializedName: "origin",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PatchableCustomLocations: msRest.CompositeMapper = {
  serializedName: "patchableCustomLocations",
  type: {
    name: "Composite",
    className: "PatchableCustomLocations",
    modelProperties: {
      authentication: {
        serializedName: "properties.authentication",
        type: {
          name: "Composite",
          className: "CustomLocationPropertiesAuthentication"
        }
      },
      clusterExtensionIds: {
        serializedName: "properties.clusterExtensionIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      hostResourceId: {
        serializedName: "properties.hostResourceId",
        type: {
          name: "String"
        }
      },
      hostType: {
        serializedName: "properties.hostType",
        type: {
          name: "String"
        }
      },
      namespace: {
        serializedName: "properties.namespace",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AzureEntityResource: msRest.CompositeMapper = {
  serializedName: "AzureEntityResource",
  type: {
    name: "Composite",
    className: "AzureEntityResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: msRest.CompositeMapper = {
  serializedName: "ErrorAdditionalInfo",
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      info: {
        readOnly: true,
        serializedName: "info",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const ErrorDetail: msRest.CompositeMapper = {
  serializedName: "ErrorDetail",
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        readOnly: true,
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        readOnly: true,
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      },
      additionalInfo: {
        readOnly: true,
        serializedName: "additionalInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      }
    }
  }
};

export const CustomLocationOperationsList: msRest.CompositeMapper = {
  serializedName: "customLocationOperationsList",
  type: {
    name: "Composite",
    className: "CustomLocationOperationsList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CustomLocationOperation"
            }
          }
        }
      }
    }
  }
};

export const CustomLocationListResult: msRest.CompositeMapper = {
  serializedName: "customLocationListResult",
  type: {
    name: "Composite",
    className: "CustomLocationListResult",
    modelProperties: {
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CustomLocation"
            }
          }
        }
      }
    }
  }
};

export const EnabledResourceTypesListResult: msRest.CompositeMapper = {
  serializedName: "EnabledResourceTypesListResult",
  type: {
    name: "Composite",
    className: "EnabledResourceTypesListResult",
    modelProperties: {
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EnabledResourceType"
            }
          }
        }
      }
    }
  }
};
