/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  CustomLocationOperation,
  CustomLocationsListOperationsOptionalParams,
  CustomLocation,
  CustomLocationsListBySubscriptionOptionalParams,
  CustomLocationsListByResourceGroupOptionalParams,
  EnabledResourceType,
  CustomLocationsListEnabledResourceTypesOptionalParams,
  CustomLocationsGetOptionalParams,
  CustomLocationsGetResponse,
  CustomLocationsCreateOrUpdateOptionalParams,
  CustomLocationsCreateOrUpdateResponse,
  CustomLocationsDeleteOptionalParams,
  CustomLocationsUpdateOptionalParams,
  CustomLocationsUpdateResponse,
  CustomLocationFindTargetResourceGroupProperties,
  CustomLocationsFindTargetResourceGroupOptionalParams,
  CustomLocationsFindTargetResourceGroupResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a CustomLocations. */
export interface CustomLocations {
  /**
   * Lists all available Custom Locations operations.
   * @param options The options parameters.
   */
  listOperations(
    options?: CustomLocationsListOperationsOptionalParams
  ): PagedAsyncIterableIterator<CustomLocationOperation>;
  /**
   * Gets a list of Custom Locations in the specified subscription. The operation returns properties of
   * each Custom Location
   * @param options The options parameters.
   */
  listBySubscription(
    options?: CustomLocationsListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<CustomLocation>;
  /**
   * Gets a list of Custom Locations in the specified subscription and resource group. The operation
   * returns properties of each Custom Location.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: CustomLocationsListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<CustomLocation>;
  /**
   * Gets the list of the Enabled Resource Types.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName Custom Locations name.
   * @param options The options parameters.
   */
  listEnabledResourceTypes(
    resourceGroupName: string,
    resourceName: string,
    options?: CustomLocationsListEnabledResourceTypesOptionalParams
  ): PagedAsyncIterableIterator<EnabledResourceType>;
  /**
   * Gets the details of the customLocation with a specified resource group and name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName Custom Locations name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    resourceName: string,
    options?: CustomLocationsGetOptionalParams
  ): Promise<CustomLocationsGetResponse>;
  /**
   * Creates or updates a Custom Location in the specified Subscription and Resource Group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName Custom Locations name.
   * @param parameters Parameters supplied to create or update a Custom Location.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    resourceName: string,
    parameters: CustomLocation,
    options?: CustomLocationsCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<CustomLocationsCreateOrUpdateResponse>,
      CustomLocationsCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a Custom Location in the specified Subscription and Resource Group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName Custom Locations name.
   * @param parameters Parameters supplied to create or update a Custom Location.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    resourceName: string,
    parameters: CustomLocation,
    options?: CustomLocationsCreateOrUpdateOptionalParams
  ): Promise<CustomLocationsCreateOrUpdateResponse>;
  /**
   * Deletes the Custom Location with the specified Resource Name, Resource Group, and Subscription Id.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName Custom Locations name.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    resourceName: string,
    options?: CustomLocationsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes the Custom Location with the specified Resource Name, Resource Group, and Subscription Id.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName Custom Locations name.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    resourceName: string,
    options?: CustomLocationsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Updates a Custom Location with the specified Resource Name in the specified Resource Group and
   * Subscription.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName Custom Locations name.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    resourceName: string,
    options?: CustomLocationsUpdateOptionalParams
  ): Promise<CustomLocationsUpdateResponse>;
  /**
   * Returns the target resource group associated with the resource sync rules of the Custom Location
   * that match the rules passed in with the Find Target Resource Group Request.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName Custom Locations name.
   * @param parameters Parameters of the find target resource group request.
   * @param options The options parameters.
   */
  findTargetResourceGroup(
    resourceGroupName: string,
    resourceName: string,
    parameters: CustomLocationFindTargetResourceGroupProperties,
    options?: CustomLocationsFindTargetResourceGroupOptionalParams
  ): Promise<CustomLocationsFindTargetResourceGroupResponse>;
}
