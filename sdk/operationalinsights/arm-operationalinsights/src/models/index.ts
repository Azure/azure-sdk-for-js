/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Display metadata associated with the operation.
 */
export interface OperationDisplay {
  /**
   * Service provider: Microsoft OperationsManagement.
   */
  provider?: string;
  /**
   * Resource on which the operation is performed etc.
   */
  resource?: string;
  /**
   * Type of operation: get, read, delete, etc.
   */
  operation?: string;
}

/**
 * Supported operation of OperationalInsights resource provider.
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * Display metadata associated with the operation.
   */
  display?: OperationDisplay;
}

/**
 * The top level Linked service resource container.
 */
export interface LinkedService extends BaseResource {
  /**
   * The resource id of the resource that will be linked to the workspace.
   */
  resourceId: string;
}

/**
 * Datasources under OMS Workspace.
 */
export interface DataSource extends BaseResource {
  /**
   * The data source properties in raw json format, each kind of data source have it's own schema.
   */
  properties: any;
  /**
   * The ETag of the data source.
   */
  eTag?: string;
  /**
   * Possible values include: 'AzureActivityLog', 'ChangeTrackingPath',
   * 'ChangeTrackingDefaultPath', 'ChangeTrackingDefaultRegistry', 'ChangeTrackingCustomRegistry',
   * 'CustomLog', 'CustomLogCollection', 'GenericDataSource', 'IISLogs', 'LinuxPerformanceObject',
   * 'LinuxPerformanceCollection', 'LinuxSyslog', 'LinuxSyslogCollection', 'WindowsEvent',
   * 'WindowsPerformanceCounter'
   */
  kind: DataSourceKind;
}

/**
 * DataSource filter. Right now, only filter by kind is supported.
 */
export interface DataSourceFilter {
  /**
   * Possible values include: 'AzureActivityLog', 'ChangeTrackingPath',
   * 'ChangeTrackingDefaultPath', 'ChangeTrackingDefaultRegistry', 'ChangeTrackingCustomRegistry',
   * 'CustomLog', 'CustomLogCollection', 'GenericDataSource', 'IISLogs', 'LinuxPerformanceObject',
   * 'LinuxPerformanceCollection', 'LinuxSyslog', 'LinuxSyslogCollection', 'WindowsEvent',
   * 'WindowsPerformanceCounter'
   */
  kind?: DataSourceKind;
}

/**
 * Intelligence Pack containing a string name and boolean indicating if it's enabled.
 */
export interface IntelligencePack {
  /**
   * The name of the intelligence pack.
   */
  name?: string;
  /**
   * The enabled boolean for the intelligence pack.
   */
  enabled?: boolean;
  /**
   * The display name of the intelligence pack.
   */
  displayName?: string;
}

/**
 * The shared keys for a workspace.
 */
export interface SharedKeys {
  /**
   * The primary shared key of a workspace.
   */
  primarySharedKey?: string;
  /**
   * The secondary shared key of a workspace.
   */
  secondarySharedKey?: string;
}

/**
 * The name of a metric.
 */
export interface MetricName {
  /**
   * The system name of the metric.
   */
  value?: string;
  /**
   * The localized name of the metric.
   */
  localizedValue?: string;
}

/**
 * A metric describing the usage of a resource.
 */
export interface UsageMetric {
  /**
   * The name of the metric.
   */
  name?: MetricName;
  /**
   * The units used for the metric.
   */
  unit?: string;
  /**
   * The current value of the metric.
   */
  currentValue?: number;
  /**
   * The quota limit for the metric.
   */
  limit?: number;
  /**
   * The time that the metric's value will reset.
   */
  nextResetTime?: Date;
  /**
   * The quota period that determines the length of time between value resets.
   */
  quotaPeriod?: string;
}

/**
 * A management group that is connected to a workspace
 */
export interface ManagementGroup {
  /**
   * The number of servers connected to the management group.
   */
  serverCount?: number;
  /**
   * Gets or sets a value indicating whether the management group is a gateway.
   */
  isGateway?: boolean;
  /**
   * The name of the management group.
   */
  name?: string;
  /**
   * The unique ID of the management group.
   */
  id?: string;
  /**
   * The datetime that the management group was created.
   */
  created?: Date;
  /**
   * The last datetime that the management group received data.
   */
  dataReceived?: Date;
  /**
   * The version of System Center that is managing the management group.
   */
  version?: string;
  /**
   * The SKU of System Center that is managing the management group.
   */
  sku?: string;
}

/**
 * The SKU (tier) of a workspace.
 */
export interface Sku {
  /**
   * The name of the SKU. Possible values include: 'Free', 'Standard', 'Premium', 'PerNode',
   * 'PerGB2018', 'Standalone', 'CapacityReservation'
   */
  name: SkuNameEnum;
}

/**
 * The top level Workspace resource container.
 */
export interface Workspace extends BaseResource {
  /**
   * The provisioning state of the workspace. Possible values include: 'Creating', 'Succeeded',
   * 'Failed', 'Canceled', 'Deleting', 'ProvisioningAccount'
   */
  provisioningState?: EntityStatus;
  /**
   * This is a read-only legacy property. It is always set to 'Azure' by the service. Kept here for
   * backward compatibility.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly source?: string;
  /**
   * This is a read-only property. Represents the ID associated with the workspace.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly customerId?: string;
  /**
   * This is a legacy property and is not used anymore. Kept here for backward compatibility.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly portalUrl?: string;
  /**
   * The SKU of the workspace.
   */
  sku?: Sku;
  /**
   * The workspace data retention in days. -1 means Unlimited retention for the Unlimited Sku. 730
   * days is the maximum allowed for all other Skus.
   */
  retentionInDays?: number;
  /**
   * The ETag of the workspace.
   */
  eTag?: string;
}

/**
 * The resource definition.
 */
export interface Resource extends BaseResource {
  /**
   * Resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource location
   */
  location?: string;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Common properties of proxy resource.
 */
export interface ProxyResource {
  /**
   * Resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Describes the format of Error response.
 */
export interface ErrorResponse {
  /**
   * Error code
   */
  code?: string;
  /**
   * Error message indicating why the operation failed.
   */
  message?: string;
}

/**
 * The status of operation.
 */
export interface OperationStatus {
  /**
   * The operation Id.
   */
  id?: string;
  /**
   * The operation name.
   */
  name?: string;
  /**
   * The start time of the operation.
   */
  startTime?: string;
  /**
   * The end time of the operation.
   */
  endTime?: string;
  /**
   * The status of the operation.
   */
  status?: string;
  /**
   * The error detail of the operation if any.
   */
  error?: ErrorResponse;
}

/**
 * Optional Parameters.
 */
export interface DataSourcesListByWorkspaceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Starting point of the collection of data source instances.
   */
  skiptoken?: string;
}

/**
 * An interface representing OperationalInsightsManagementClientOptions.
 */
export interface OperationalInsightsManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * The list linked service operation response.
 * @extends Array<LinkedService>
 */
export interface LinkedServiceListResult extends Array<LinkedService> {
}

/**
 * @interface
 * The list data source by workspace operation response.
 * @extends Array<DataSource>
 */
export interface DataSourceListResult extends Array<DataSource> {
  /**
   * The link (url) to the next page of datasources.
   */
  nextLink?: string;
}

/**
 * @interface
 * The list workspace usages operation response.
 * @extends Array<UsageMetric>
 */
export interface WorkspaceListUsagesResult extends Array<UsageMetric> {
}

/**
 * @interface
 * The list workspace management groups operation response.
 * @extends Array<ManagementGroup>
 */
export interface WorkspaceListManagementGroupsResult extends Array<ManagementGroup> {
}

/**
 * @interface
 * The list workspaces operation response.
 * @extends Array<Workspace>
 */
export interface WorkspaceListResult extends Array<Workspace> {
}

/**
 * @interface
 * Result of the request to list solution operations.
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * URL to get the next set of operation list results if there are any.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for DataSourceKind.
 * Possible values include: 'AzureActivityLog', 'ChangeTrackingPath', 'ChangeTrackingDefaultPath',
 * 'ChangeTrackingDefaultRegistry', 'ChangeTrackingCustomRegistry', 'CustomLog',
 * 'CustomLogCollection', 'GenericDataSource', 'IISLogs', 'LinuxPerformanceObject',
 * 'LinuxPerformanceCollection', 'LinuxSyslog', 'LinuxSyslogCollection', 'WindowsEvent',
 * 'WindowsPerformanceCounter'
 * @readonly
 * @enum {string}
 */
export type DataSourceKind = 'AzureActivityLog' | 'ChangeTrackingPath' | 'ChangeTrackingDefaultPath' | 'ChangeTrackingDefaultRegistry' | 'ChangeTrackingCustomRegistry' | 'CustomLog' | 'CustomLogCollection' | 'GenericDataSource' | 'IISLogs' | 'LinuxPerformanceObject' | 'LinuxPerformanceCollection' | 'LinuxSyslog' | 'LinuxSyslogCollection' | 'WindowsEvent' | 'WindowsPerformanceCounter';

/**
 * Defines values for SkuNameEnum.
 * Possible values include: 'Free', 'Standard', 'Premium', 'PerNode', 'PerGB2018', 'Standalone',
 * 'CapacityReservation'
 * @readonly
 * @enum {string}
 */
export type SkuNameEnum = 'Free' | 'Standard' | 'Premium' | 'PerNode' | 'PerGB2018' | 'Standalone' | 'CapacityReservation';

/**
 * Defines values for EntityStatus.
 * Possible values include: 'Creating', 'Succeeded', 'Failed', 'Canceled', 'Deleting',
 * 'ProvisioningAccount'
 * @readonly
 * @enum {string}
 */
export type EntityStatus = 'Creating' | 'Succeeded' | 'Failed' | 'Canceled' | 'Deleting' | 'ProvisioningAccount';

/**
 * Contains response data for the createOrUpdate operation.
 */
export type LinkedServicesCreateOrUpdateResponse = LinkedService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LinkedService;
    };
};

/**
 * Contains response data for the get operation.
 */
export type LinkedServicesGetResponse = LinkedService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LinkedService;
    };
};

/**
 * Contains response data for the listByWorkspace operation.
 */
export type LinkedServicesListByWorkspaceResponse = LinkedServiceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LinkedServiceListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DataSourcesCreateOrUpdateResponse = DataSource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataSource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DataSourcesGetResponse = DataSource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataSource;
    };
};

/**
 * Contains response data for the listByWorkspace operation.
 */
export type DataSourcesListByWorkspaceResponse = DataSourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataSourceListResult;
    };
};

/**
 * Contains response data for the listByWorkspaceNext operation.
 */
export type DataSourcesListByWorkspaceNextResponse = DataSourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataSourceListResult;
    };
};

/**
 * Contains response data for the listIntelligencePacks operation.
 */
export type WorkspacesListIntelligencePacksResponse = Array<IntelligencePack> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntelligencePack[];
    };
};

/**
 * Contains response data for the getSharedKeys operation.
 */
export type WorkspacesGetSharedKeysResponse = SharedKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SharedKeys;
    };
};

/**
 * Contains response data for the listUsages operation.
 */
export type WorkspacesListUsagesResponse = WorkspaceListUsagesResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceListUsagesResult;
    };
};

/**
 * Contains response data for the listManagementGroups operation.
 */
export type WorkspacesListManagementGroupsResponse = WorkspaceListManagementGroupsResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceListManagementGroupsResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type WorkspacesListByResourceGroupResponse = WorkspaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type WorkspacesListResponse = WorkspaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type WorkspacesCreateOrUpdateResponse = Workspace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Workspace;
    };
};

/**
 * Contains response data for the get operation.
 */
export type WorkspacesGetResponse = Workspace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Workspace;
    };
};

/**
 * Contains response data for the update operation.
 */
export type WorkspacesUpdateResponse = Workspace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Workspace;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type WorkspacesBeginCreateOrUpdateResponse = Workspace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Workspace;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the getAsyncOperationsStatus operation.
 */
export type GetAsyncOperationsStatusResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};
