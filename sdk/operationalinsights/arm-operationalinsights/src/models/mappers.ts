/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const DataExport: msRest.CompositeMapper = {
  serializedName: "DataExport",
  type: {
    name: "Composite",
    className: "DataExport",
    modelProperties: {
      dataExportId: {
        serializedName: "properties.dataExportId",
        type: {
          name: "String"
        }
      },
      allTables: {
        serializedName: "properties.allTables",
        type: {
          name: "Boolean"
        }
      },
      tableNames: {
        serializedName: "properties.tableNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      resourceId: {
        required: true,
        serializedName: "properties.destination.resourceId",
        type: {
          name: "String"
        }
      },
      dataExportType: {
        readOnly: true,
        serializedName: "properties.destination.type",
        type: {
          name: "String"
        }
      },
      eventHubName: {
        serializedName: "properties.destination.metaData.eventHubName",
        type: {
          name: "String"
        }
      },
      enable: {
        serializedName: "properties.enable",
        type: {
          name: "Boolean"
        }
      },
      createdDate: {
        serializedName: "properties.createdDate",
        type: {
          name: "String"
        }
      },
      lastModifiedDate: {
        serializedName: "properties.lastModifiedDate",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: msRest.CompositeMapper = {
  serializedName: "ErrorAdditionalInfo",
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      info: {
        readOnly: true,
        serializedName: "info",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        readOnly: true,
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        readOnly: true,
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorResponse"
            }
          }
        }
      },
      additionalInfo: {
        readOnly: true,
        serializedName: "additionalInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const DataExportErrorResponse: msRest.CompositeMapper = {
  serializedName: "DataExportErrorResponse",
  type: {
    name: "Composite",
    className: "DataExportErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorResponse"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureEntityResource: msRest.CompositeMapper = {
  serializedName: "AzureEntityResource",
  type: {
    name: "Composite",
    className: "AzureEntityResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const DataSource: msRest.CompositeMapper = {
  serializedName: "DataSource",
  type: {
    name: "Composite",
    className: "DataSource",
    modelProperties: {
      properties: {
        required: true,
        serializedName: "properties",
        type: {
          name: "Object"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const DataSourceFilter: msRest.CompositeMapper = {
  serializedName: "DataSourceFilter",
  type: {
    name: "Composite",
    className: "DataSourceFilter",
    modelProperties: {
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IntelligencePack: msRest.CompositeMapper = {
  serializedName: "IntelligencePack",
  type: {
    name: "Composite",
    className: "IntelligencePack",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LinkedService: msRest.CompositeMapper = {
  serializedName: "LinkedService",
  type: {
    name: "Composite",
    className: "LinkedService",
    modelProperties: {
      resourceId: {
        serializedName: "properties.resourceId",
        type: {
          name: "String"
        }
      },
      writeAccessResourceId: {
        serializedName: "properties.writeAccessResourceId",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const LinkedStorageAccountsResource: msRest.CompositeMapper = {
  serializedName: "LinkedStorageAccountsResource",
  type: {
    name: "Composite",
    className: "LinkedStorageAccountsResource",
    modelProperties: {
      dataSourceType: {
        readOnly: true,
        serializedName: "properties.dataSourceType",
        type: {
          name: "Enum",
          allowedValues: [
            "CustomLogs",
            "AzureWatson"
          ]
        }
      },
      storageAccountIds: {
        serializedName: "properties.storageAccountIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ManagementGroup: msRest.CompositeMapper = {
  serializedName: "ManagementGroup",
  type: {
    name: "Composite",
    className: "ManagementGroup",
    modelProperties: {
      serverCount: {
        serializedName: "properties.serverCount",
        type: {
          name: "Number"
        }
      },
      isGateway: {
        serializedName: "properties.isGateway",
        type: {
          name: "Boolean"
        }
      },
      name: {
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "properties.id",
        type: {
          name: "String"
        }
      },
      created: {
        serializedName: "properties.created",
        type: {
          name: "DateTime"
        }
      },
      dataReceived: {
        serializedName: "properties.dataReceived",
        type: {
          name: "DateTime"
        }
      },
      version: {
        serializedName: "properties.version",
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName: "properties.sku",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "Operation_display",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      }
    }
  }
};

export const OperationStatus: msRest.CompositeMapper = {
  serializedName: "OperationStatus",
  type: {
    name: "Composite",
    className: "OperationStatus",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorResponse"
        }
      }
    }
  }
};

export const SharedKeys: msRest.CompositeMapper = {
  serializedName: "SharedKeys",
  type: {
    name: "Composite",
    className: "SharedKeys",
    modelProperties: {
      primarySharedKey: {
        serializedName: "primarySharedKey",
        type: {
          name: "String"
        }
      },
      secondarySharedKey: {
        serializedName: "secondarySharedKey",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetricName: msRest.CompositeMapper = {
  serializedName: "MetricName",
  type: {
    name: "Composite",
    className: "MetricName",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      localizedValue: {
        serializedName: "localizedValue",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UsageMetric: msRest.CompositeMapper = {
  serializedName: "UsageMetric",
  type: {
    name: "Composite",
    className: "UsageMetric",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "Composite",
          className: "MetricName"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      currentValue: {
        serializedName: "currentValue",
        type: {
          name: "Number"
        }
      },
      limit: {
        serializedName: "limit",
        type: {
          name: "Number"
        }
      },
      nextResetTime: {
        serializedName: "nextResetTime",
        type: {
          name: "DateTime"
        }
      },
      quotaPeriod: {
        serializedName: "quotaPeriod",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkspaceSku: msRest.CompositeMapper = {
  serializedName: "WorkspaceSku",
  type: {
    name: "Composite",
    className: "WorkspaceSku",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateLinkScopedResource: msRest.CompositeMapper = {
  serializedName: "PrivateLinkScopedResource",
  type: {
    name: "Composite",
    className: "PrivateLinkScopedResource",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      scopeId: {
        serializedName: "scopeId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Workspace: msRest.CompositeMapper = {
  serializedName: "Workspace",
  type: {
    name: "Composite",
    className: "Workspace",
    modelProperties: {
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      customerId: {
        readOnly: true,
        serializedName: "properties.customerId",
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName: "properties.sku",
        type: {
          name: "Composite",
          className: "WorkspaceSku"
        }
      },
      retentionInDays: {
        serializedName: "properties.retentionInDays",
        constraints: {
          InclusiveMaximum: 730,
          InclusiveMinimum: -1
        },
        type: {
          name: "Number"
        }
      },
      publicNetworkAccessForIngestion: {
        serializedName: "properties.publicNetworkAccessForIngestion",
        defaultValue: 'Enabled',
        type: {
          name: "String"
        }
      },
      publicNetworkAccessForQuery: {
        serializedName: "properties.publicNetworkAccessForQuery",
        defaultValue: 'Enabled',
        type: {
          name: "String"
        }
      },
      privateLinkScopedResources: {
        readOnly: true,
        serializedName: "properties.privateLinkScopedResources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateLinkScopedResource"
            }
          }
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkspacePatch: msRest.CompositeMapper = {
  serializedName: "WorkspacePatch",
  type: {
    name: "Composite",
    className: "WorkspacePatch",
    modelProperties: {
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      customerId: {
        readOnly: true,
        serializedName: "properties.customerId",
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName: "properties.sku",
        type: {
          name: "Composite",
          className: "WorkspaceSku"
        }
      },
      retentionInDays: {
        serializedName: "properties.retentionInDays",
        constraints: {
          InclusiveMaximum: 730,
          InclusiveMinimum: -1
        },
        type: {
          name: "Number"
        }
      },
      publicNetworkAccessForIngestion: {
        serializedName: "properties.publicNetworkAccessForIngestion",
        defaultValue: 'Enabled',
        type: {
          name: "String"
        }
      },
      publicNetworkAccessForQuery: {
        serializedName: "properties.publicNetworkAccessForQuery",
        defaultValue: 'Enabled',
        type: {
          name: "String"
        }
      },
      privateLinkScopedResources: {
        readOnly: true,
        serializedName: "properties.privateLinkScopedResources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateLinkScopedResource"
            }
          }
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const KeyVaultProperties: msRest.CompositeMapper = {
  serializedName: "keyVaultProperties",
  type: {
    name: "Composite",
    className: "KeyVaultProperties",
    modelProperties: {
      keyVaultUri: {
        serializedName: "keyVaultUri",
        type: {
          name: "String"
        }
      },
      keyName: {
        serializedName: "keyName",
        type: {
          name: "String"
        }
      },
      keyVersion: {
        serializedName: "keyVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClusterErrorResponse: msRest.CompositeMapper = {
  serializedName: "ClusterErrorResponse",
  type: {
    name: "Composite",
    className: "ClusterErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorResponse"
        }
      }
    }
  }
};

export const ClusterSku: msRest.CompositeMapper = {
  serializedName: "ClusterSku",
  type: {
    name: "Composite",
    className: "ClusterSku",
    modelProperties: {
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClusterPatch: msRest.CompositeMapper = {
  serializedName: "ClusterPatch",
  type: {
    name: "Composite",
    className: "ClusterPatch",
    modelProperties: {
      keyVaultProperties: {
        serializedName: "properties.keyVaultProperties",
        type: {
          name: "Composite",
          className: "KeyVaultProperties"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "ClusterSku"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Identity: msRest.CompositeMapper = {
  serializedName: "Identity",
  type: {
    name: "Composite",
    className: "Identity",
    modelProperties: {
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "Enum",
          allowedValues: [
            "SystemAssigned",
            "None"
          ]
        }
      }
    }
  }
};

export const Cluster: msRest.CompositeMapper = {
  serializedName: "Cluster",
  type: {
    name: "Composite",
    className: "Cluster",
    modelProperties: {
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "Identity"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "ClusterSku"
        }
      },
      nextLink: {
        serializedName: "properties.nextLink",
        type: {
          name: "String"
        }
      },
      clusterId: {
        readOnly: true,
        serializedName: "properties.clusterId",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      keyVaultProperties: {
        serializedName: "properties.keyVaultProperties",
        type: {
          name: "Composite",
          className: "KeyVaultProperties"
        }
      }
    }
  }
};

export const StorageAccount: msRest.CompositeMapper = {
  serializedName: "StorageAccount",
  type: {
    name: "Composite",
    className: "StorageAccount",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      key: {
        required: true,
        serializedName: "key",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageInsightStatus: msRest.CompositeMapper = {
  serializedName: "StorageInsightStatus",
  type: {
    name: "Composite",
    className: "StorageInsightStatus",
    modelProperties: {
      state: {
        required: true,
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageInsight: msRest.CompositeMapper = {
  serializedName: "StorageInsight",
  type: {
    name: "Composite",
    className: "StorageInsight",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      containers: {
        serializedName: "properties.containers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      tables: {
        serializedName: "properties.tables",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      storageAccount: {
        required: true,
        serializedName: "properties.storageAccount",
        type: {
          name: "Composite",
          className: "StorageAccount"
        }
      },
      status: {
        readOnly: true,
        serializedName: "properties.status",
        type: {
          name: "Composite",
          className: "StorageInsightStatus"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Tag: msRest.CompositeMapper = {
  serializedName: "Tag",
  type: {
    name: "Composite",
    className: "Tag",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SavedSearch: msRest.CompositeMapper = {
  serializedName: "SavedSearch",
  type: {
    name: "Composite",
    className: "SavedSearch",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      category: {
        required: true,
        serializedName: "properties.category",
        type: {
          name: "String"
        }
      },
      displayName: {
        required: true,
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      query: {
        required: true,
        serializedName: "properties.query",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "properties.version",
        type: {
          name: "Number"
        }
      },
      tags: {
        serializedName: "properties.tags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Tag"
            }
          }
        }
      }
    }
  }
};

export const SavedSearchesListResult: msRest.CompositeMapper = {
  serializedName: "SavedSearchesListResult",
  type: {
    name: "Composite",
    className: "SavedSearchesListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SavedSearch"
            }
          }
        }
      }
    }
  }
};

export const DataExportListResult: msRest.CompositeMapper = {
  serializedName: "DataExportListResult",
  type: {
    name: "Composite",
    className: "DataExportListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataExport"
            }
          }
        }
      }
    }
  }
};

export const DataSourceListResult: msRest.CompositeMapper = {
  serializedName: "DataSourceListResult",
  type: {
    name: "Composite",
    className: "DataSourceListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataSource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkspaceListManagementGroupsResult: msRest.CompositeMapper = {
  serializedName: "WorkspaceListManagementGroupsResult",
  type: {
    name: "Composite",
    className: "WorkspaceListManagementGroupsResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagementGroup"
            }
          }
        }
      }
    }
  }
};

export const WorkspaceListUsagesResult: msRest.CompositeMapper = {
  serializedName: "WorkspaceListUsagesResult",
  type: {
    name: "Composite",
    className: "WorkspaceListUsagesResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UsageMetric"
            }
          }
        }
      }
    }
  }
};

export const WorkspaceListResult: msRest.CompositeMapper = {
  serializedName: "WorkspaceListResult",
  type: {
    name: "Composite",
    className: "WorkspaceListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Workspace"
            }
          }
        }
      }
    }
  }
};

export const LinkedServiceListResult: msRest.CompositeMapper = {
  serializedName: "LinkedServiceListResult",
  type: {
    name: "Composite",
    className: "LinkedServiceListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LinkedService"
            }
          }
        }
      }
    }
  }
};

export const LinkedStorageAccountsListResult: msRest.CompositeMapper = {
  serializedName: "LinkedStorageAccountsListResult",
  type: {
    name: "Composite",
    className: "LinkedStorageAccountsListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LinkedStorageAccountsResource"
            }
          }
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClusterListResult: msRest.CompositeMapper = {
  serializedName: "ClusterListResult",
  type: {
    name: "Composite",
    className: "ClusterListResult",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Cluster"
            }
          }
        }
      }
    }
  }
};

export const StorageInsightListResult: msRest.CompositeMapper = {
  serializedName: "StorageInsightListResult",
  type: {
    name: "Composite",
    className: "StorageInsightListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StorageInsight"
            }
          }
        }
      },
      odataNextLink: {
        serializedName: "@odata\\.nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
