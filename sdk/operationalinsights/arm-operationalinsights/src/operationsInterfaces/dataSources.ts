/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  DataSource,
  DataSourcesListByWorkspaceOptionalParams,
  DataSourcesCreateOrUpdateOptionalParams,
  DataSourcesCreateOrUpdateResponse,
  DataSourcesDeleteOptionalParams,
  DataSourcesGetOptionalParams,
  DataSourcesGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a DataSources. */
export interface DataSources {
  /**
   * Gets the first page of data source instances in a workspace with the link to the next page.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param filter The filter to apply on the operation.
   * @param options The options parameters.
   */
  listByWorkspace(
    resourceGroupName: string,
    workspaceName: string,
    filter: string,
    options?: DataSourcesListByWorkspaceOptionalParams
  ): PagedAsyncIterableIterator<DataSource>;
  /**
   * Create or update a data source.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param dataSourceName The name of the datasource resource.
   * @param parameters The parameters required to create or update a datasource.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    workspaceName: string,
    dataSourceName: string,
    parameters: DataSource,
    options?: DataSourcesCreateOrUpdateOptionalParams
  ): Promise<DataSourcesCreateOrUpdateResponse>;
  /**
   * Deletes a data source instance.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param dataSourceName Name of the datasource.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    workspaceName: string,
    dataSourceName: string,
    options?: DataSourcesDeleteOptionalParams
  ): Promise<void>;
  /**
   * Gets a datasource instance.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param dataSourceName Name of the datasource
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    dataSourceName: string,
    options?: DataSourcesGetOptionalParams
  ): Promise<DataSourcesGetResponse>;
}
