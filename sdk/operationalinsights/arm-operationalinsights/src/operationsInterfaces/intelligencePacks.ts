/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  IntelligencePacksDisableOptionalParams,
  IntelligencePacksEnableOptionalParams,
  IntelligencePacksListOptionalParams,
  IntelligencePacksListResponse
} from "../models";

/** Interface representing a IntelligencePacks. */
export interface IntelligencePacks {
  /**
   * Disables an intelligence pack for a given workspace.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param intelligencePackName The name of the intelligence pack to be disabled.
   * @param options The options parameters.
   */
  disable(
    resourceGroupName: string,
    workspaceName: string,
    intelligencePackName: string,
    options?: IntelligencePacksDisableOptionalParams
  ): Promise<void>;
  /**
   * Enables an intelligence pack for a given workspace.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param intelligencePackName The name of the intelligence pack to be enabled.
   * @param options The options parameters.
   */
  enable(
    resourceGroupName: string,
    workspaceName: string,
    intelligencePackName: string,
    options?: IntelligencePacksEnableOptionalParams
  ): Promise<void>;
  /**
   * Lists all the intelligence packs possible and whether they are enabled or disabled for a given
   * workspace.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    workspaceName: string,
    options?: IntelligencePacksListOptionalParams
  ): Promise<IntelligencePacksListResponse>;
}
