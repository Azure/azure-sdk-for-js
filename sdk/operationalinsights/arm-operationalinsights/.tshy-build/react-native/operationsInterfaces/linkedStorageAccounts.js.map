{"version":3,"file":"linkedStorageAccounts.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/linkedStorageAccounts.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport {\n  LinkedStorageAccountsResource,\n  LinkedStorageAccountsListByWorkspaceOptionalParams,\n  DataSourceType,\n  LinkedStorageAccountsCreateOrUpdateOptionalParams,\n  LinkedStorageAccountsCreateOrUpdateResponse,\n  LinkedStorageAccountsDeleteOptionalParams,\n  LinkedStorageAccountsGetOptionalParams,\n  LinkedStorageAccountsGetResponse\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a LinkedStorageAccounts. */\nexport interface LinkedStorageAccounts {\n  /**\n   * Gets all linked storage accounts associated with the specified workspace, storage accounts will be\n   * sorted by their data source type.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: LinkedStorageAccountsListByWorkspaceOptionalParams\n  ): PagedAsyncIterableIterator<LinkedStorageAccountsResource>;\n  /**\n   * Create or Update a link relation between current workspace and a group of storage accounts of a\n   * specific data source type.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param dataSourceType Linked storage accounts type.\n   * @param parameters The parameters required to create or update linked storage accounts.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    dataSourceType: DataSourceType,\n    parameters: LinkedStorageAccountsResource,\n    options?: LinkedStorageAccountsCreateOrUpdateOptionalParams\n  ): Promise<LinkedStorageAccountsCreateOrUpdateResponse>;\n  /**\n   * Deletes all linked storage accounts of a specific data source type associated with the specified\n   * workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param dataSourceType Linked storage accounts type.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    dataSourceType: DataSourceType,\n    options?: LinkedStorageAccountsDeleteOptionalParams\n  ): Promise<void>;\n  /**\n   * Gets all linked storage account of a specific data source type associated with the specified\n   * workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param dataSourceType Linked storage accounts type.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    dataSourceType: DataSourceType,\n    options?: LinkedStorageAccountsGetOptionalParams\n  ): Promise<LinkedStorageAccountsGetResponse>;\n}\n"]}