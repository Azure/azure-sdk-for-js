{"version":3,"file":"intelligencePacks.js","sourceRoot":"","sources":["../../../src/operations/intelligencePacks.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAGH,OAAO,KAAK,UAAU,MAAM,oBAAoB,CAAC;AACjD,OAAO,KAAK,OAAO,MAAM,sBAAsB,CAAC;AAChD,OAAO,KAAK,UAAU,MAAM,yBAAyB,CAAC;AAStD,qDAAqD;AACrD,MAAM,OAAO,qBAAqB;IAGhC;;;OAGG;IACH,YAAY,MAA2C;QACrD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED;;;;;;OAMG;IACH,OAAO,CACL,iBAAyB,EACzB,aAAqB,EACrB,oBAA4B,EAC5B,OAAgD;QAEhD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,oBAAoB,EAAE,OAAO,EAAE,EACnE,oBAAoB,CACrB,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,MAAM,CACJ,iBAAyB,EACzB,aAAqB,EACrB,oBAA4B,EAC5B,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,oBAAoB,EAAE,OAAO,EAAE,EACnE,mBAAmB,CACpB,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,IAAI,CACF,iBAAyB,EACzB,aAAqB,EACrB,OAA6C;QAE7C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,OAAO,EAAE,EAC7C,iBAAiB,CAClB,CAAC;IACJ,CAAC;CACF;AACD,2BAA2B;AAC3B,MAAM,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;AAE3E,MAAM,oBAAoB,GAA6B;IACrD,IAAI,EACF,wLAAwL;IAC1L,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;IACtB,eAAe,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC;IACzC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,aAAa;QACxB,UAAU,CAAC,oBAAoB;KAChC;IACD,UAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA6B;IACpD,IAAI,EACF,uLAAuL;IACzL,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;IACtB,eAAe,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC;IACzC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,aAAa;QACxB,UAAU,CAAC,oBAAoB;KAChC;IACD,UAAU;CACX,CAAC;AACF,MAAM,iBAAiB,GAA6B;IAClD,IAAI,EACF,yJAAyJ;IAC3J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,kBAAkB,EAAE;qBAC3D;iBACF;aACF;SACF;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC;IACzC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,aAAa;KACzB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { IntelligencePacks } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { OperationalInsightsManagementClient } from \"../operationalInsightsManagementClient.js\";\nimport {\n  IntelligencePacksDisableOptionalParams,\n  IntelligencePacksEnableOptionalParams,\n  IntelligencePacksListOptionalParams,\n  IntelligencePacksListResponse\n} from \"../models/index.js\";\n\n/** Class containing IntelligencePacks operations. */\nexport class IntelligencePacksImpl implements IntelligencePacks {\n  private readonly client: OperationalInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class IntelligencePacks class.\n   * @param client Reference to the service client\n   */\n  constructor(client: OperationalInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Disables an intelligence pack for a given workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param intelligencePackName The name of the intelligence pack to be disabled.\n   * @param options The options parameters.\n   */\n  disable(\n    resourceGroupName: string,\n    workspaceName: string,\n    intelligencePackName: string,\n    options?: IntelligencePacksDisableOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, intelligencePackName, options },\n      disableOperationSpec\n    );\n  }\n\n  /**\n   * Enables an intelligence pack for a given workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param intelligencePackName The name of the intelligence pack to be enabled.\n   * @param options The options parameters.\n   */\n  enable(\n    resourceGroupName: string,\n    workspaceName: string,\n    intelligencePackName: string,\n    options?: IntelligencePacksEnableOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, intelligencePackName, options },\n      enableOperationSpec\n    );\n  }\n\n  /**\n   * Lists all the intelligence packs possible and whether they are enabled or disabled for a given\n   * workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: IntelligencePacksListOptionalParams\n  ): Promise<IntelligencePacksListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst disableOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/intelligencePacks/{intelligencePackName}/Disable\",\n  httpMethod: \"POST\",\n  responses: { 200: {} },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.intelligencePackName\n  ],\n  serializer\n};\nconst enableOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/intelligencePacks/{intelligencePackName}/Enable\",\n  httpMethod: \"POST\",\n  responses: { 200: {} },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.intelligencePackName\n  ],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/intelligencePacks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"IntelligencePack\" }\n          }\n        }\n      }\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n"]}