"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.KnownProvisioningStateEnum = exports.KnownTableSubTypeEnum = exports.KnownTableTypeEnum = exports.KnownSourceEnum = exports.KnownColumnDataTypeHintEnum = exports.KnownColumnTypeEnum = exports.KnownTablePlanEnum = exports.KnownCreatedByType = exports.KnownPublicNetworkAccessType = exports.KnownDataIngestionStatus = exports.KnownWorkspaceSkuNameEnum = exports.KnownWorkspaceEntityStatus = exports.KnownBillingType = exports.KnownClusterEntityStatus = exports.KnownClusterSkuNameEnum = exports.KnownPurgeState = exports.KnownSearchSortEnum = exports.KnownSkuNameEnum = exports.KnownStorageInsightState = exports.KnownLinkedServiceEntityStatus = exports.KnownDataSourceKind = exports.KnownType = exports.KnownIdentityType = void 0;
/** Known values of {@link IdentityType} that the service accepts. */
var KnownIdentityType;
(function (KnownIdentityType) {
    /** User */
    KnownIdentityType["User"] = "user";
    /** Application */
    KnownIdentityType["Application"] = "application";
    /** ManagedIdentity */
    KnownIdentityType["ManagedIdentity"] = "managedIdentity";
    /** Key */
    KnownIdentityType["Key"] = "key";
    /** SystemAssigned */
    KnownIdentityType["SystemAssigned"] = "SystemAssigned";
    /** UserAssigned */
    KnownIdentityType["UserAssigned"] = "UserAssigned";
    /** None */
    KnownIdentityType["None"] = "None";
})(KnownIdentityType || (exports.KnownIdentityType = KnownIdentityType = {}));
/** Known values of {@link Type} that the service accepts. */
var KnownType;
(function (KnownType) {
    /** StorageAccount */
    KnownType["StorageAccount"] = "StorageAccount";
    /** EventHub */
    KnownType["EventHub"] = "EventHub";
})(KnownType || (exports.KnownType = KnownType = {}));
/** Known values of {@link DataSourceKind} that the service accepts. */
var KnownDataSourceKind;
(function (KnownDataSourceKind) {
    /** WindowsEvent */
    KnownDataSourceKind["WindowsEvent"] = "WindowsEvent";
    /** WindowsPerformanceCounter */
    KnownDataSourceKind["WindowsPerformanceCounter"] = "WindowsPerformanceCounter";
    /** IISLogs */
    KnownDataSourceKind["IISLogs"] = "IISLogs";
    /** LinuxSyslog */
    KnownDataSourceKind["LinuxSyslog"] = "LinuxSyslog";
    /** LinuxSyslogCollection */
    KnownDataSourceKind["LinuxSyslogCollection"] = "LinuxSyslogCollection";
    /** LinuxPerformanceObject */
    KnownDataSourceKind["LinuxPerformanceObject"] = "LinuxPerformanceObject";
    /** LinuxPerformanceCollection */
    KnownDataSourceKind["LinuxPerformanceCollection"] = "LinuxPerformanceCollection";
    /** CustomLog */
    KnownDataSourceKind["CustomLog"] = "CustomLog";
    /** CustomLogCollection */
    KnownDataSourceKind["CustomLogCollection"] = "CustomLogCollection";
    /** AzureAuditLog */
    KnownDataSourceKind["AzureAuditLog"] = "AzureAuditLog";
    /** AzureActivityLog */
    KnownDataSourceKind["AzureActivityLog"] = "AzureActivityLog";
    /** GenericDataSource */
    KnownDataSourceKind["GenericDataSource"] = "GenericDataSource";
    /** ChangeTrackingCustomPath */
    KnownDataSourceKind["ChangeTrackingCustomPath"] = "ChangeTrackingCustomPath";
    /** ChangeTrackingPath */
    KnownDataSourceKind["ChangeTrackingPath"] = "ChangeTrackingPath";
    /** ChangeTrackingServices */
    KnownDataSourceKind["ChangeTrackingServices"] = "ChangeTrackingServices";
    /** ChangeTrackingDataTypeConfiguration */
    KnownDataSourceKind["ChangeTrackingDataTypeConfiguration"] = "ChangeTrackingDataTypeConfiguration";
    /** ChangeTrackingDefaultRegistry */
    KnownDataSourceKind["ChangeTrackingDefaultRegistry"] = "ChangeTrackingDefaultRegistry";
    /** ChangeTrackingRegistry */
    KnownDataSourceKind["ChangeTrackingRegistry"] = "ChangeTrackingRegistry";
    /** ChangeTrackingLinuxPath */
    KnownDataSourceKind["ChangeTrackingLinuxPath"] = "ChangeTrackingLinuxPath";
    /** LinuxChangeTrackingPath */
    KnownDataSourceKind["LinuxChangeTrackingPath"] = "LinuxChangeTrackingPath";
    /** ChangeTrackingContentLocation */
    KnownDataSourceKind["ChangeTrackingContentLocation"] = "ChangeTrackingContentLocation";
    /** WindowsTelemetry */
    KnownDataSourceKind["WindowsTelemetry"] = "WindowsTelemetry";
    /** Office365 */
    KnownDataSourceKind["Office365"] = "Office365";
    /** SecurityWindowsBaselineConfiguration */
    KnownDataSourceKind["SecurityWindowsBaselineConfiguration"] = "SecurityWindowsBaselineConfiguration";
    /** SecurityCenterSecurityWindowsBaselineConfiguration */
    KnownDataSourceKind["SecurityCenterSecurityWindowsBaselineConfiguration"] = "SecurityCenterSecurityWindowsBaselineConfiguration";
    /** SecurityEventCollectionConfiguration */
    KnownDataSourceKind["SecurityEventCollectionConfiguration"] = "SecurityEventCollectionConfiguration";
    /** SecurityInsightsSecurityEventCollectionConfiguration */
    KnownDataSourceKind["SecurityInsightsSecurityEventCollectionConfiguration"] = "SecurityInsightsSecurityEventCollectionConfiguration";
    /** ImportComputerGroup */
    KnownDataSourceKind["ImportComputerGroup"] = "ImportComputerGroup";
    /** NetworkMonitoring */
    KnownDataSourceKind["NetworkMonitoring"] = "NetworkMonitoring";
    /** Itsm */
    KnownDataSourceKind["Itsm"] = "Itsm";
    /** DnsAnalytics */
    KnownDataSourceKind["DnsAnalytics"] = "DnsAnalytics";
    /** ApplicationInsights */
    KnownDataSourceKind["ApplicationInsights"] = "ApplicationInsights";
    /** SqlDataClassification */
    KnownDataSourceKind["SqlDataClassification"] = "SqlDataClassification";
})(KnownDataSourceKind || (exports.KnownDataSourceKind = KnownDataSourceKind = {}));
/** Known values of {@link LinkedServiceEntityStatus} that the service accepts. */
var KnownLinkedServiceEntityStatus;
(function (KnownLinkedServiceEntityStatus) {
    /** Succeeded */
    KnownLinkedServiceEntityStatus["Succeeded"] = "Succeeded";
    /** Deleting */
    KnownLinkedServiceEntityStatus["Deleting"] = "Deleting";
    /** ProvisioningAccount */
    KnownLinkedServiceEntityStatus["ProvisioningAccount"] = "ProvisioningAccount";
    /** Updating */
    KnownLinkedServiceEntityStatus["Updating"] = "Updating";
})(KnownLinkedServiceEntityStatus || (exports.KnownLinkedServiceEntityStatus = KnownLinkedServiceEntityStatus = {}));
/** Known values of {@link StorageInsightState} that the service accepts. */
var KnownStorageInsightState;
(function (KnownStorageInsightState) {
    /** OK */
    KnownStorageInsightState["OK"] = "OK";
    /** Error */
    KnownStorageInsightState["Error"] = "ERROR";
})(KnownStorageInsightState || (exports.KnownStorageInsightState = KnownStorageInsightState = {}));
/** Known values of {@link SkuNameEnum} that the service accepts. */
var KnownSkuNameEnum;
(function (KnownSkuNameEnum) {
    /** Free */
    KnownSkuNameEnum["Free"] = "Free";
    /** Standard */
    KnownSkuNameEnum["Standard"] = "Standard";
    /** Premium */
    KnownSkuNameEnum["Premium"] = "Premium";
    /** PerNode */
    KnownSkuNameEnum["PerNode"] = "PerNode";
    /** PerGB2018 */
    KnownSkuNameEnum["PerGB2018"] = "PerGB2018";
    /** Standalone */
    KnownSkuNameEnum["Standalone"] = "Standalone";
    /** CapacityReservation */
    KnownSkuNameEnum["CapacityReservation"] = "CapacityReservation";
})(KnownSkuNameEnum || (exports.KnownSkuNameEnum = KnownSkuNameEnum = {}));
/** Known values of {@link SearchSortEnum} that the service accepts. */
var KnownSearchSortEnum;
(function (KnownSearchSortEnum) {
    /** Asc */
    KnownSearchSortEnum["Asc"] = "asc";
    /** Desc */
    KnownSearchSortEnum["Desc"] = "desc";
})(KnownSearchSortEnum || (exports.KnownSearchSortEnum = KnownSearchSortEnum = {}));
/** Known values of {@link PurgeState} that the service accepts. */
var KnownPurgeState;
(function (KnownPurgeState) {
    /** Pending */
    KnownPurgeState["Pending"] = "pending";
    /** Completed */
    KnownPurgeState["Completed"] = "completed";
})(KnownPurgeState || (exports.KnownPurgeState = KnownPurgeState = {}));
/** Known values of {@link ClusterSkuNameEnum} that the service accepts. */
var KnownClusterSkuNameEnum;
(function (KnownClusterSkuNameEnum) {
    /** CapacityReservation */
    KnownClusterSkuNameEnum["CapacityReservation"] = "CapacityReservation";
})(KnownClusterSkuNameEnum || (exports.KnownClusterSkuNameEnum = KnownClusterSkuNameEnum = {}));
/** Known values of {@link ClusterEntityStatus} that the service accepts. */
var KnownClusterEntityStatus;
(function (KnownClusterEntityStatus) {
    /** Creating */
    KnownClusterEntityStatus["Creating"] = "Creating";
    /** Succeeded */
    KnownClusterEntityStatus["Succeeded"] = "Succeeded";
    /** Failed */
    KnownClusterEntityStatus["Failed"] = "Failed";
    /** Canceled */
    KnownClusterEntityStatus["Canceled"] = "Canceled";
    /** Deleting */
    KnownClusterEntityStatus["Deleting"] = "Deleting";
    /** ProvisioningAccount */
    KnownClusterEntityStatus["ProvisioningAccount"] = "ProvisioningAccount";
    /** Updating */
    KnownClusterEntityStatus["Updating"] = "Updating";
})(KnownClusterEntityStatus || (exports.KnownClusterEntityStatus = KnownClusterEntityStatus = {}));
/** Known values of {@link BillingType} that the service accepts. */
var KnownBillingType;
(function (KnownBillingType) {
    /** Cluster */
    KnownBillingType["Cluster"] = "Cluster";
    /** Workspaces */
    KnownBillingType["Workspaces"] = "Workspaces";
})(KnownBillingType || (exports.KnownBillingType = KnownBillingType = {}));
/** Known values of {@link WorkspaceEntityStatus} that the service accepts. */
var KnownWorkspaceEntityStatus;
(function (KnownWorkspaceEntityStatus) {
    /** Creating */
    KnownWorkspaceEntityStatus["Creating"] = "Creating";
    /** Succeeded */
    KnownWorkspaceEntityStatus["Succeeded"] = "Succeeded";
    /** Failed */
    KnownWorkspaceEntityStatus["Failed"] = "Failed";
    /** Canceled */
    KnownWorkspaceEntityStatus["Canceled"] = "Canceled";
    /** Deleting */
    KnownWorkspaceEntityStatus["Deleting"] = "Deleting";
    /** ProvisioningAccount */
    KnownWorkspaceEntityStatus["ProvisioningAccount"] = "ProvisioningAccount";
    /** Updating */
    KnownWorkspaceEntityStatus["Updating"] = "Updating";
})(KnownWorkspaceEntityStatus || (exports.KnownWorkspaceEntityStatus = KnownWorkspaceEntityStatus = {}));
/** Known values of {@link WorkspaceSkuNameEnum} that the service accepts. */
var KnownWorkspaceSkuNameEnum;
(function (KnownWorkspaceSkuNameEnum) {
    /** Free */
    KnownWorkspaceSkuNameEnum["Free"] = "Free";
    /** Standard */
    KnownWorkspaceSkuNameEnum["Standard"] = "Standard";
    /** Premium */
    KnownWorkspaceSkuNameEnum["Premium"] = "Premium";
    /** PerNode */
    KnownWorkspaceSkuNameEnum["PerNode"] = "PerNode";
    /** PerGB2018 */
    KnownWorkspaceSkuNameEnum["PerGB2018"] = "PerGB2018";
    /** Standalone */
    KnownWorkspaceSkuNameEnum["Standalone"] = "Standalone";
    /** CapacityReservation */
    KnownWorkspaceSkuNameEnum["CapacityReservation"] = "CapacityReservation";
    /** LACluster */
    KnownWorkspaceSkuNameEnum["LACluster"] = "LACluster";
})(KnownWorkspaceSkuNameEnum || (exports.KnownWorkspaceSkuNameEnum = KnownWorkspaceSkuNameEnum = {}));
/** Known values of {@link DataIngestionStatus} that the service accepts. */
var KnownDataIngestionStatus;
(function (KnownDataIngestionStatus) {
    /** Ingestion enabled following daily cap quota reset, or subscription enablement. */
    KnownDataIngestionStatus["RespectQuota"] = "RespectQuota";
    /** Ingestion started following service setting change. */
    KnownDataIngestionStatus["ForceOn"] = "ForceOn";
    /** Ingestion stopped following service setting change. */
    KnownDataIngestionStatus["ForceOff"] = "ForceOff";
    /** Reached daily cap quota, ingestion stopped. */
    KnownDataIngestionStatus["OverQuota"] = "OverQuota";
    /** Ingestion stopped following suspended subscription. */
    KnownDataIngestionStatus["SubscriptionSuspended"] = "SubscriptionSuspended";
    /** 80% of daily cap quota reached. */
    KnownDataIngestionStatus["ApproachingQuota"] = "ApproachingQuota";
})(KnownDataIngestionStatus || (exports.KnownDataIngestionStatus = KnownDataIngestionStatus = {}));
/** Known values of {@link PublicNetworkAccessType} that the service accepts. */
var KnownPublicNetworkAccessType;
(function (KnownPublicNetworkAccessType) {
    /** Enables connectivity to Log Analytics through public DNS. */
    KnownPublicNetworkAccessType["Enabled"] = "Enabled";
    /** Disables public connectivity to Log Analytics through public DNS. */
    KnownPublicNetworkAccessType["Disabled"] = "Disabled";
})(KnownPublicNetworkAccessType || (exports.KnownPublicNetworkAccessType = KnownPublicNetworkAccessType = {}));
/** Known values of {@link CreatedByType} that the service accepts. */
var KnownCreatedByType;
(function (KnownCreatedByType) {
    /** User */
    KnownCreatedByType["User"] = "User";
    /** Application */
    KnownCreatedByType["Application"] = "Application";
    /** ManagedIdentity */
    KnownCreatedByType["ManagedIdentity"] = "ManagedIdentity";
    /** Key */
    KnownCreatedByType["Key"] = "Key";
})(KnownCreatedByType || (exports.KnownCreatedByType = KnownCreatedByType = {}));
/** Known values of {@link TablePlanEnum} that the service accepts. */
var KnownTablePlanEnum;
(function (KnownTablePlanEnum) {
    /** Logs  that are adjusted to support high volume low value verbose logs. */
    KnownTablePlanEnum["Basic"] = "Basic";
    /** Logs  that allow monitoring and analytics. */
    KnownTablePlanEnum["Analytics"] = "Analytics";
})(KnownTablePlanEnum || (exports.KnownTablePlanEnum = KnownTablePlanEnum = {}));
/** Known values of {@link ColumnTypeEnum} that the service accepts. */
var KnownColumnTypeEnum;
(function (KnownColumnTypeEnum) {
    /** String */
    KnownColumnTypeEnum["String"] = "string";
    /** Int */
    KnownColumnTypeEnum["Int"] = "int";
    /** Long */
    KnownColumnTypeEnum["Long"] = "long";
    /** Real */
    KnownColumnTypeEnum["Real"] = "real";
    /** Boolean */
    KnownColumnTypeEnum["Boolean"] = "boolean";
    /** DateTime */
    KnownColumnTypeEnum["DateTime"] = "dateTime";
    /** Guid */
    KnownColumnTypeEnum["Guid"] = "guid";
    /** Dynamic */
    KnownColumnTypeEnum["Dynamic"] = "dynamic";
})(KnownColumnTypeEnum || (exports.KnownColumnTypeEnum = KnownColumnTypeEnum = {}));
/** Known values of {@link ColumnDataTypeHintEnum} that the service accepts. */
var KnownColumnDataTypeHintEnum;
(function (KnownColumnDataTypeHintEnum) {
    /** A string that matches the pattern of a URI, for example, scheme://username:password@host:1234/this/is/a/path?k1=v1&k2=v2#fragment */
    KnownColumnDataTypeHintEnum["Uri"] = "uri";
    /** A standard 128-bit GUID following the standard shape, xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx */
    KnownColumnDataTypeHintEnum["Guid"] = "guid";
    /** An Azure Resource Model (ARM) path: /subscriptions/{...}/resourceGroups/{...}/providers/Microsoft.{...}/{...}/{...}/{...}... */
    KnownColumnDataTypeHintEnum["ArmPath"] = "armPath";
    /** A standard V4/V6 ip address following the standard shape, x.x.x.x/y:y:y:y:y:y:y:y */
    KnownColumnDataTypeHintEnum["Ip"] = "ip";
})(KnownColumnDataTypeHintEnum || (exports.KnownColumnDataTypeHintEnum = KnownColumnDataTypeHintEnum = {}));
/** Known values of {@link SourceEnum} that the service accepts. */
var KnownSourceEnum;
(function (KnownSourceEnum) {
    /** Tables provisioned by the system, as collected via Diagnostic Settings, the Agents, or any other standard data collection means. */
    KnownSourceEnum["Microsoft"] = "microsoft";
    /** Tables created by the owner of the Workspace, and only found in this Workspace. */
    KnownSourceEnum["Customer"] = "customer";
})(KnownSourceEnum || (exports.KnownSourceEnum = KnownSourceEnum = {}));
/** Known values of {@link TableTypeEnum} that the service accepts. */
var KnownTableTypeEnum;
(function (KnownTableTypeEnum) {
    /** Standard data collected by Azure Monitor. */
    KnownTableTypeEnum["Microsoft"] = "Microsoft";
    /** Custom log table. */
    KnownTableTypeEnum["CustomLog"] = "CustomLog";
    /** Restored data. */
    KnownTableTypeEnum["RestoredLogs"] = "RestoredLogs";
    /** Data collected by a search job. */
    KnownTableTypeEnum["SearchResults"] = "SearchResults";
})(KnownTableTypeEnum || (exports.KnownTableTypeEnum = KnownTableTypeEnum = {}));
/** Known values of {@link TableSubTypeEnum} that the service accepts. */
var KnownTableSubTypeEnum;
(function (KnownTableSubTypeEnum) {
    /** The default subtype with which built-in tables are created. */
    KnownTableSubTypeEnum["Any"] = "Any";
    /** Indicates a table created through the Data Collector API or with the custom logs feature of the MMA agent, or any table against which Custom Fields were created. */
    KnownTableSubTypeEnum["Classic"] = "Classic";
    /** A table eligible to have data sent into it via any of the means supported by Data Collection Rules: the Data Collection Endpoint API, ingestion-time transformations, or any other mechanism provided by Data Collection Rules */
    KnownTableSubTypeEnum["DataCollectionRuleBased"] = "DataCollectionRuleBased";
})(KnownTableSubTypeEnum || (exports.KnownTableSubTypeEnum = KnownTableSubTypeEnum = {}));
/** Known values of {@link ProvisioningStateEnum} that the service accepts. */
var KnownProvisioningStateEnum;
(function (KnownProvisioningStateEnum) {
    /** Table schema is still being built and updated, table is currently locked for any changes till the procedure is done. */
    KnownProvisioningStateEnum["Updating"] = "Updating";
    /** Table schema is stable and without changes, table data is being updated. */
    KnownProvisioningStateEnum["InProgress"] = "InProgress";
    /** Table state is stable and without changes, table is unlocked and open for new updates. */
    KnownProvisioningStateEnum["Succeeded"] = "Succeeded";
})(KnownProvisioningStateEnum || (exports.KnownProvisioningStateEnum = KnownProvisioningStateEnum = {}));
//# sourceMappingURL=index.js.map