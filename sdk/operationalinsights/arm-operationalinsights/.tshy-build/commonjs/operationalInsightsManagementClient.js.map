{"version":3,"file":"operationalInsightsManagementClient.js","sourceRoot":"","sources":["../../src/operationalInsightsManagementClient.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  QueryPacksImpl,\n  QueriesImpl,\n  DataExportsImpl,\n  DataSourcesImpl,\n  IntelligencePacksImpl,\n  LinkedServicesImpl,\n  LinkedStorageAccountsImpl,\n  ManagementGroupsImpl,\n  OperationStatusesImpl,\n  SharedKeysOperationsImpl,\n  UsagesImpl,\n  StorageInsightConfigsImpl,\n  SavedSearchesImpl,\n  AvailableServiceTiersImpl,\n  GatewaysImpl,\n  SchemaOperationsImpl,\n  WorkspacePurgeImpl,\n  ClustersImpl,\n  OperationsImpl,\n  WorkspacesImpl,\n  DeletedWorkspacesImpl,\n  TablesImpl\n} from \"./operations/index.js\";\nimport {\n  QueryPacks,\n  Queries,\n  DataExports,\n  DataSources,\n  IntelligencePacks,\n  LinkedServices,\n  LinkedStorageAccounts,\n  ManagementGroups,\n  OperationStatuses,\n  SharedKeysOperations,\n  Usages,\n  StorageInsightConfigs,\n  SavedSearches,\n  AvailableServiceTiers,\n  Gateways,\n  SchemaOperations,\n  WorkspacePurge,\n  Clusters,\n  Operations,\n  Workspaces,\n  DeletedWorkspaces,\n  Tables\n} from \"./operationsInterfaces/index.js\";\nimport { OperationalInsightsManagementClientOptionalParams } from \"./models/index.js\";\n\nexport class OperationalInsightsManagementClient extends coreClient.ServiceClient {\n  $host: string;\n  subscriptionId: string;\n\n  /**\n   * Initializes a new instance of the OperationalInsightsManagementClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId The ID of the target subscription.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: OperationalInsightsManagementClientOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if (subscriptionId === undefined) {\n      throw new Error(\"'subscriptionId' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: OperationalInsightsManagementClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-operationalinsights/9.0.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes:\n            optionsWithDefaults.credentialScopes ??\n            `${optionsWithDefaults.endpoint}/.default`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge\n          }\n        })\n      );\n    }\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.queryPacks = new QueryPacksImpl(this);\n    this.queries = new QueriesImpl(this);\n    this.dataExports = new DataExportsImpl(this);\n    this.dataSources = new DataSourcesImpl(this);\n    this.intelligencePacks = new IntelligencePacksImpl(this);\n    this.linkedServices = new LinkedServicesImpl(this);\n    this.linkedStorageAccounts = new LinkedStorageAccountsImpl(this);\n    this.managementGroups = new ManagementGroupsImpl(this);\n    this.operationStatuses = new OperationStatusesImpl(this);\n    this.sharedKeysOperations = new SharedKeysOperationsImpl(this);\n    this.usages = new UsagesImpl(this);\n    this.storageInsightConfigs = new StorageInsightConfigsImpl(this);\n    this.savedSearches = new SavedSearchesImpl(this);\n    this.availableServiceTiers = new AvailableServiceTiersImpl(this);\n    this.gateways = new GatewaysImpl(this);\n    this.schemaOperations = new SchemaOperationsImpl(this);\n    this.workspacePurge = new WorkspacePurgeImpl(this);\n    this.clusters = new ClustersImpl(this);\n    this.operations = new OperationsImpl(this);\n    this.workspaces = new WorkspacesImpl(this);\n    this.deletedWorkspaces = new DeletedWorkspacesImpl(this);\n    this.tables = new TablesImpl(this);\n  }\n\n  queryPacks: QueryPacks;\n  queries: Queries;\n  dataExports: DataExports;\n  dataSources: DataSources;\n  intelligencePacks: IntelligencePacks;\n  linkedServices: LinkedServices;\n  linkedStorageAccounts: LinkedStorageAccounts;\n  managementGroups: ManagementGroups;\n  operationStatuses: OperationStatuses;\n  sharedKeysOperations: SharedKeysOperations;\n  usages: Usages;\n  storageInsightConfigs: StorageInsightConfigs;\n  savedSearches: SavedSearches;\n  availableServiceTiers: AvailableServiceTiers;\n  gateways: Gateways;\n  schemaOperations: SchemaOperations;\n  workspacePurge: WorkspacePurge;\n  clusters: Clusters;\n  operations: Operations;\n  workspaces: Workspaces;\n  deletedWorkspaces: DeletedWorkspaces;\n  tables: Tables;\n}\n"]}