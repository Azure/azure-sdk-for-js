{"version":3,"file":"queries.js","sourceRoot":"","sources":["../../../src/operations/queries.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { Queries } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { OperationalInsightsManagementClient } from \"../operationalInsightsManagementClient.js\";\nimport {\n  LogAnalyticsQueryPackQuery,\n  QueriesListNextOptionalParams,\n  QueriesListOptionalParams,\n  QueriesListResponse,\n  LogAnalyticsQueryPackQuerySearchProperties,\n  QueriesSearchNextOptionalParams,\n  QueriesSearchOptionalParams,\n  QueriesSearchResponse,\n  QueriesGetOptionalParams,\n  QueriesGetResponse,\n  QueriesPutOptionalParams,\n  QueriesPutResponse,\n  QueriesUpdateOptionalParams,\n  QueriesUpdateResponse,\n  QueriesDeleteOptionalParams,\n  QueriesListNextResponse,\n  QueriesSearchNextResponse\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Queries operations. */\nexport class QueriesImpl implements Queries {\n  private readonly client: OperationalInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Queries class.\n   * @param client Reference to the service client\n   */\n  constructor(client: OperationalInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of Queries defined within a Log Analytics QueryPack.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param queryPackName The name of the Log Analytics QueryPack resource.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    queryPackName: string,\n    options?: QueriesListOptionalParams\n  ): PagedAsyncIterableIterator<LogAnalyticsQueryPackQuery> {\n    const iter = this.listPagingAll(resourceGroupName, queryPackName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          queryPackName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    queryPackName: string,\n    options?: QueriesListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<LogAnalyticsQueryPackQuery[]> {\n    let result: QueriesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, queryPackName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        queryPackName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    queryPackName: string,\n    options?: QueriesListOptionalParams\n  ): AsyncIterableIterator<LogAnalyticsQueryPackQuery> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      queryPackName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Search a list of Queries defined within a Log Analytics QueryPack according to given search\n   * properties.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param queryPackName The name of the Log Analytics QueryPack resource.\n   * @param querySearchProperties Properties by which to search queries in the given Log Analytics\n   *                              QueryPack.\n   * @param options The options parameters.\n   */\n  public listSearch(\n    resourceGroupName: string,\n    queryPackName: string,\n    querySearchProperties: LogAnalyticsQueryPackQuerySearchProperties,\n    options?: QueriesSearchOptionalParams\n  ): PagedAsyncIterableIterator<LogAnalyticsQueryPackQuery> {\n    const iter = this.searchPagingAll(\n      resourceGroupName,\n      queryPackName,\n      querySearchProperties,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.searchPagingPage(\n          resourceGroupName,\n          queryPackName,\n          querySearchProperties,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *searchPagingPage(\n    resourceGroupName: string,\n    queryPackName: string,\n    querySearchProperties: LogAnalyticsQueryPackQuerySearchProperties,\n    options?: QueriesSearchOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<LogAnalyticsQueryPackQuery[]> {\n    let result: QueriesSearchResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._search(\n        resourceGroupName,\n        queryPackName,\n        querySearchProperties,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._searchNext(\n        resourceGroupName,\n        queryPackName,\n        querySearchProperties,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *searchPagingAll(\n    resourceGroupName: string,\n    queryPackName: string,\n    querySearchProperties: LogAnalyticsQueryPackQuerySearchProperties,\n    options?: QueriesSearchOptionalParams\n  ): AsyncIterableIterator<LogAnalyticsQueryPackQuery> {\n    for await (const page of this.searchPagingPage(\n      resourceGroupName,\n      queryPackName,\n      querySearchProperties,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of Queries defined within a Log Analytics QueryPack.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param queryPackName The name of the Log Analytics QueryPack resource.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    queryPackName: string,\n    options?: QueriesListOptionalParams\n  ): Promise<QueriesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, queryPackName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Search a list of Queries defined within a Log Analytics QueryPack according to given search\n   * properties.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param queryPackName The name of the Log Analytics QueryPack resource.\n   * @param querySearchProperties Properties by which to search queries in the given Log Analytics\n   *                              QueryPack.\n   * @param options The options parameters.\n   */\n  private _search(\n    resourceGroupName: string,\n    queryPackName: string,\n    querySearchProperties: LogAnalyticsQueryPackQuerySearchProperties,\n    options?: QueriesSearchOptionalParams\n  ): Promise<QueriesSearchResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, queryPackName, querySearchProperties, options },\n      searchOperationSpec\n    );\n  }\n\n  /**\n   * Gets a specific Log Analytics Query defined within a Log Analytics QueryPack.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param queryPackName The name of the Log Analytics QueryPack resource.\n   * @param id The id of a specific query defined in the Log Analytics QueryPack\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    queryPackName: string,\n    id: string,\n    options?: QueriesGetOptionalParams\n  ): Promise<QueriesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, queryPackName, id, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Adds or Updates a specific Query within a Log Analytics QueryPack.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param queryPackName The name of the Log Analytics QueryPack resource.\n   * @param id The id of a specific query defined in the Log Analytics QueryPack\n   * @param queryPayload Properties that need to be specified to create a new query and add it to a Log\n   *                     Analytics QueryPack.\n   * @param options The options parameters.\n   */\n  put(\n    resourceGroupName: string,\n    queryPackName: string,\n    id: string,\n    queryPayload: LogAnalyticsQueryPackQuery,\n    options?: QueriesPutOptionalParams\n  ): Promise<QueriesPutResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, queryPackName, id, queryPayload, options },\n      putOperationSpec\n    );\n  }\n\n  /**\n   * Adds or Updates a specific Query within a Log Analytics QueryPack.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param queryPackName The name of the Log Analytics QueryPack resource.\n   * @param id The id of a specific query defined in the Log Analytics QueryPack\n   * @param queryPayload Properties that need to be specified to create a new query and add it to a Log\n   *                     Analytics QueryPack.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    queryPackName: string,\n    id: string,\n    queryPayload: LogAnalyticsQueryPackQuery,\n    options?: QueriesUpdateOptionalParams\n  ): Promise<QueriesUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, queryPackName, id, queryPayload, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a specific Query defined within an Log Analytics QueryPack.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param queryPackName The name of the Log Analytics QueryPack resource.\n   * @param id The id of a specific query defined in the Log Analytics QueryPack\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    queryPackName: string,\n    id: string,\n    options?: QueriesDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, queryPackName, id, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param queryPackName The name of the Log Analytics QueryPack resource.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    queryPackName: string,\n    nextLink: string,\n    options?: QueriesListNextOptionalParams\n  ): Promise<QueriesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, queryPackName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n\n  /**\n   * SearchNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param queryPackName The name of the Log Analytics QueryPack resource.\n   * @param querySearchProperties Properties by which to search queries in the given Log Analytics\n   *                              QueryPack.\n   * @param nextLink The nextLink from the previous successful call to the Search method.\n   * @param options The options parameters.\n   */\n  private _searchNext(\n    resourceGroupName: string,\n    queryPackName: string,\n    querySearchProperties: LogAnalyticsQueryPackQuerySearchProperties,\n    nextLink: string,\n    options?: QueriesSearchNextOptionalParams\n  ): Promise<QueriesSearchNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        queryPackName,\n        querySearchProperties,\n        nextLink,\n        options\n      },\n      searchNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}/queries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogAnalyticsQueryPackQueryListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.top,\n    Parameters.includeBody,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.queryPackName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst searchOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}/queries/search\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogAnalyticsQueryPackQueryListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.querySearchProperties,\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.top,\n    Parameters.includeBody,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.queryPackName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}/queries/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogAnalyticsQueryPackQuery\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.queryPackName,\n    Parameters.id\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst putOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}/queries/{id}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogAnalyticsQueryPackQuery\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.queryPayload,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.queryPackName,\n    Parameters.id\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}/queries/{id}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogAnalyticsQueryPackQuery\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.queryPayload,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.queryPackName,\n    Parameters.id\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}/queries/{id}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.queryPackName,\n    Parameters.id\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogAnalyticsQueryPackQueryListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.queryPackName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst searchNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogAnalyticsQueryPackQueryListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.queryPackName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n"]}