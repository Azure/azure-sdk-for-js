/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "./models";

const packageName = "@azure/loganalytics";
const packageVersion = "0.2.0";

export class LogAnalyticsClientContext extends msRest.ServiceClient {
  credentials: msRest.ServiceClientCredentials | TokenCredential;

  /**
   * Initializes a new instance of the LogAnalyticsClientContext class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * Credentials implementing the TokenCredential interface from the @azure/identity package are
   * recommended. For more information about these credentials, see
   * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the
   * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and
   * @azure/ms-rest-browserauth are also supported.
   * @param [options] The parameter options
   */
  constructor(credentials: msRest.ServiceClientCredentials | TokenCredential, options?: Models.LogAnalyticsClientOptions) {
    if (credentials == undefined) {
      throw new Error("'credentials' cannot be null.");
    }

    if (!options) {
      options = {};
    }

    if (!options.userAgent) {
      const defaultUserAgent = msRest.getDefaultUserAgentValue();
      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;
    }

    super(credentials, options);

    this.baseUri = options.baseUri || this.baseUri || "https://api.loganalytics.io/v1";
    this.requestContentType = "application/json; charset=utf-8";
    this.credentials = credentials;
  }
}
