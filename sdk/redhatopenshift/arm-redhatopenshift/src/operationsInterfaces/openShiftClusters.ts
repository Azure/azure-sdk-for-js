/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  OpenShiftCluster,
  OpenShiftClustersListOptionalParams,
  OpenShiftClustersListByResourceGroupOptionalParams,
  OpenShiftClustersGetOptionalParams,
  OpenShiftClustersGetResponse,
  OpenShiftClustersCreateOrUpdateOptionalParams,
  OpenShiftClustersCreateOrUpdateResponse,
  OpenShiftClustersDeleteOptionalParams,
  OpenShiftClusterUpdate,
  OpenShiftClustersUpdateOptionalParams,
  OpenShiftClustersUpdateResponse,
  OpenShiftClustersListAdminCredentialsOptionalParams,
  OpenShiftClustersListAdminCredentialsResponse,
  OpenShiftClustersListCredentialsOptionalParams,
  OpenShiftClustersListCredentialsResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a OpenShiftClusters. */
export interface OpenShiftClusters {
  /**
   * The operation returns properties of each OpenShift cluster.
   * @param options The options parameters.
   */
  list(
    options?: OpenShiftClustersListOptionalParams,
  ): PagedAsyncIterableIterator<OpenShiftCluster>;
  /**
   * The operation returns properties of each OpenShift cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: OpenShiftClustersListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<OpenShiftCluster>;
  /**
   * The operation returns properties of a OpenShift cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the OpenShift cluster resource.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    resourceName: string,
    options?: OpenShiftClustersGetOptionalParams,
  ): Promise<OpenShiftClustersGetResponse>;
  /**
   * The operation returns properties of a OpenShift cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the OpenShift cluster resource.
   * @param parameters The OpenShift cluster resource.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    resourceName: string,
    parameters: OpenShiftCluster,
    options?: OpenShiftClustersCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<OpenShiftClustersCreateOrUpdateResponse>,
      OpenShiftClustersCreateOrUpdateResponse
    >
  >;
  /**
   * The operation returns properties of a OpenShift cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the OpenShift cluster resource.
   * @param parameters The OpenShift cluster resource.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    resourceName: string,
    parameters: OpenShiftCluster,
    options?: OpenShiftClustersCreateOrUpdateOptionalParams,
  ): Promise<OpenShiftClustersCreateOrUpdateResponse>;
  /**
   * The operation returns nothing.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the OpenShift cluster resource.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    resourceName: string,
    options?: OpenShiftClustersDeleteOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * The operation returns nothing.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the OpenShift cluster resource.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    resourceName: string,
    options?: OpenShiftClustersDeleteOptionalParams,
  ): Promise<void>;
  /**
   * The operation returns properties of a OpenShift cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the OpenShift cluster resource.
   * @param parameters The OpenShift cluster resource.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    resourceName: string,
    parameters: OpenShiftClusterUpdate,
    options?: OpenShiftClustersUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<OpenShiftClustersUpdateResponse>,
      OpenShiftClustersUpdateResponse
    >
  >;
  /**
   * The operation returns properties of a OpenShift cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the OpenShift cluster resource.
   * @param parameters The OpenShift cluster resource.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    resourceName: string,
    parameters: OpenShiftClusterUpdate,
    options?: OpenShiftClustersUpdateOptionalParams,
  ): Promise<OpenShiftClustersUpdateResponse>;
  /**
   * The operation returns the admin kubeconfig.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the OpenShift cluster resource.
   * @param options The options parameters.
   */
  listAdminCredentials(
    resourceGroupName: string,
    resourceName: string,
    options?: OpenShiftClustersListAdminCredentialsOptionalParams,
  ): Promise<OpenShiftClustersListAdminCredentialsResponse>;
  /**
   * The operation returns the credentials.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the OpenShift cluster resource.
   * @param options The options parameters.
   */
  listCredentials(
    resourceGroupName: string,
    resourceName: string,
    options?: OpenShiftClustersListCredentialsOptionalParams,
  ): Promise<OpenShiftClustersListCredentialsResponse>;
}
