/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const OperationList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "Display",
        },
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Display: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Display",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String",
        },
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String",
        },
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CloudError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudError",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "CloudErrorBody",
        },
      },
    },
  },
};

export const CloudErrorBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudErrorBody",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CloudErrorBody",
            },
          },
        },
      },
    },
  },
};

export const OpenShiftVersionList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OpenShiftVersionList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OpenShiftVersion",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String",
        },
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String",
        },
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime",
        },
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String",
        },
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String",
        },
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const OpenShiftClusterList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OpenShiftClusterList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OpenShiftCluster",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ClusterProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ClusterProfile",
    modelProperties: {
      pullSecret: {
        serializedName: "pullSecret",
        type: {
          name: "String",
        },
      },
      domain: {
        serializedName: "domain",
        type: {
          name: "String",
        },
      },
      version: {
        serializedName: "version",
        type: {
          name: "String",
        },
      },
      resourceGroupId: {
        serializedName: "resourceGroupId",
        type: {
          name: "String",
        },
      },
      fipsValidatedModules: {
        serializedName: "fipsValidatedModules",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ConsoleProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConsoleProfile",
    modelProperties: {
      url: {
        serializedName: "url",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ServicePrincipalProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServicePrincipalProfile",
    modelProperties: {
      clientId: {
        serializedName: "clientId",
        type: {
          name: "String",
        },
      },
      clientSecret: {
        serializedName: "clientSecret",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const NetworkProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkProfile",
    modelProperties: {
      podCidr: {
        serializedName: "podCidr",
        type: {
          name: "String",
        },
      },
      serviceCidr: {
        serializedName: "serviceCidr",
        type: {
          name: "String",
        },
      },
      outboundType: {
        serializedName: "outboundType",
        type: {
          name: "String",
        },
      },
      loadBalancerProfile: {
        serializedName: "loadBalancerProfile",
        type: {
          name: "Composite",
          className: "LoadBalancerProfile",
        },
      },
      preconfiguredNSG: {
        serializedName: "preconfiguredNSG",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const LoadBalancerProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LoadBalancerProfile",
    modelProperties: {
      managedOutboundIps: {
        serializedName: "managedOutboundIps",
        type: {
          name: "Composite",
          className: "ManagedOutboundIPs",
        },
      },
      effectiveOutboundIps: {
        serializedName: "effectiveOutboundIps",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EffectiveOutboundIP",
            },
          },
        },
      },
    },
  },
};

export const ManagedOutboundIPs: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedOutboundIPs",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const EffectiveOutboundIP: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EffectiveOutboundIP",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MasterProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MasterProfile",
    modelProperties: {
      vmSize: {
        serializedName: "vmSize",
        type: {
          name: "String",
        },
      },
      subnetId: {
        serializedName: "subnetId",
        type: {
          name: "String",
        },
      },
      encryptionAtHost: {
        serializedName: "encryptionAtHost",
        type: {
          name: "String",
        },
      },
      diskEncryptionSetId: {
        serializedName: "diskEncryptionSetId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const WorkerProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkerProfile",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      vmSize: {
        serializedName: "vmSize",
        type: {
          name: "String",
        },
      },
      diskSizeGB: {
        serializedName: "diskSizeGB",
        type: {
          name: "Number",
        },
      },
      subnetId: {
        serializedName: "subnetId",
        type: {
          name: "String",
        },
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number",
        },
      },
      encryptionAtHost: {
        serializedName: "encryptionAtHost",
        type: {
          name: "String",
        },
      },
      diskEncryptionSetId: {
        serializedName: "diskEncryptionSetId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const APIServerProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "APIServerProfile",
    modelProperties: {
      visibility: {
        serializedName: "visibility",
        type: {
          name: "String",
        },
      },
      url: {
        serializedName: "url",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      ip: {
        serializedName: "ip",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const IngressProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IngressProfile",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      visibility: {
        serializedName: "visibility",
        type: {
          name: "String",
        },
      },
      ip: {
        serializedName: "ip",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MachinePoolList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachinePoolList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MachinePool",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SecretList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SecretList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Secret",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SyncIdentityProviderList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SyncIdentityProviderList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SyncIdentityProvider",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SyncSetList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SyncSetList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SyncSet",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OpenShiftClusterUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OpenShiftClusterUpdate",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String",
        },
      },
      clusterProfile: {
        serializedName: "properties.clusterProfile",
        type: {
          name: "Composite",
          className: "ClusterProfile",
        },
      },
      consoleProfile: {
        serializedName: "properties.consoleProfile",
        type: {
          name: "Composite",
          className: "ConsoleProfile",
        },
      },
      servicePrincipalProfile: {
        serializedName: "properties.servicePrincipalProfile",
        type: {
          name: "Composite",
          className: "ServicePrincipalProfile",
        },
      },
      networkProfile: {
        serializedName: "properties.networkProfile",
        type: {
          name: "Composite",
          className: "NetworkProfile",
        },
      },
      masterProfile: {
        serializedName: "properties.masterProfile",
        type: {
          name: "Composite",
          className: "MasterProfile",
        },
      },
      workerProfiles: {
        serializedName: "properties.workerProfiles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WorkerProfile",
            },
          },
        },
      },
      workerProfilesStatus: {
        serializedName: "properties.workerProfilesStatus",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WorkerProfile",
            },
          },
        },
      },
      apiserverProfile: {
        serializedName: "properties.apiserverProfile",
        type: {
          name: "Composite",
          className: "APIServerProfile",
        },
      },
      ingressProfiles: {
        serializedName: "properties.ingressProfiles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IngressProfile",
            },
          },
        },
      },
    },
  },
};

export const OpenShiftClusterAdminKubeconfig: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OpenShiftClusterAdminKubeconfig",
    modelProperties: {
      kubeconfig: {
        serializedName: "kubeconfig",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OpenShiftClusterCredentials: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OpenShiftClusterCredentials",
    modelProperties: {
      kubeadminUsername: {
        serializedName: "kubeadminUsername",
        type: {
          name: "String",
        },
      },
      kubeadminPassword: {
        serializedName: "kubeadminPassword",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MachinePoolUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachinePoolUpdate",
    modelProperties: {
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
      resources: {
        serializedName: "properties.resources",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SecretUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SecretUpdate",
    modelProperties: {
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
      secretResources: {
        serializedName: "properties.secretResources",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SyncIdentityProviderUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SyncIdentityProviderUpdate",
    modelProperties: {
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
      resources: {
        serializedName: "properties.resources",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SyncSetUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SyncSetUpdate",
    modelProperties: {
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
      resources: {
        serializedName: "properties.resources",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties,
    },
  },
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OpenShiftVersion: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OpenShiftVersion",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      version: {
        serializedName: "properties.version",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MachinePool: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachinePool",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      resources: {
        serializedName: "properties.resources",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Secret: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Secret",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      secretResources: {
        serializedName: "properties.secretResources",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SyncIdentityProvider: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SyncIdentityProvider",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      resources: {
        serializedName: "properties.resources",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SyncSet: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SyncSet",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      resources: {
        serializedName: "properties.resources",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OpenShiftCluster: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OpenShiftCluster",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String",
        },
      },
      clusterProfile: {
        serializedName: "properties.clusterProfile",
        type: {
          name: "Composite",
          className: "ClusterProfile",
        },
      },
      consoleProfile: {
        serializedName: "properties.consoleProfile",
        type: {
          name: "Composite",
          className: "ConsoleProfile",
        },
      },
      servicePrincipalProfile: {
        serializedName: "properties.servicePrincipalProfile",
        type: {
          name: "Composite",
          className: "ServicePrincipalProfile",
        },
      },
      networkProfile: {
        serializedName: "properties.networkProfile",
        type: {
          name: "Composite",
          className: "NetworkProfile",
        },
      },
      masterProfile: {
        serializedName: "properties.masterProfile",
        type: {
          name: "Composite",
          className: "MasterProfile",
        },
      },
      workerProfiles: {
        serializedName: "properties.workerProfiles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WorkerProfile",
            },
          },
        },
      },
      workerProfilesStatus: {
        serializedName: "properties.workerProfilesStatus",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WorkerProfile",
            },
          },
        },
      },
      apiserverProfile: {
        serializedName: "properties.apiserverProfile",
        type: {
          name: "Composite",
          className: "APIServerProfile",
        },
      },
      ingressProfiles: {
        serializedName: "properties.ingressProfiles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IngressProfile",
            },
          },
        },
      },
    },
  },
};
