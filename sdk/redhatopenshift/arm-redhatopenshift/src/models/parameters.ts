/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter,
} from "@azure/core-client";
import {
  OpenShiftCluster as OpenShiftClusterMapper,
  OpenShiftClusterUpdate as OpenShiftClusterUpdateMapper,
  MachinePool as MachinePoolMapper,
  MachinePoolUpdate as MachinePoolUpdateMapper,
  Secret as SecretMapper,
  SecretUpdate as SecretUpdateMapper,
  SyncIdentityProvider as SyncIdentityProviderMapper,
  SyncIdentityProviderUpdate as SyncIdentityProviderUpdateMapper,
  SyncSet as SyncSetMapper,
  SyncSetUpdate as SyncSetUpdateMapper,
} from "../models/mappers";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String",
    },
  },
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2023-11-22",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String",
    },
  },
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    constraints: {
      MinLength: 1,
    },
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const location: OperationURLParameter = {
  parameterPath: "location",
  mapper: {
    constraints: {
      MinLength: 1,
    },
    serializedName: "location",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resourceGroupName: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    constraints: {
      MaxLength: 90,
      MinLength: 1,
    },
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resourceName: OperationURLParameter = {
  parameterPath: "resourceName",
  mapper: {
    serializedName: "resourceName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String",
    },
  },
};

export const parameters: OperationParameter = {
  parameterPath: "parameters",
  mapper: OpenShiftClusterMapper,
};

export const parameters1: OperationParameter = {
  parameterPath: "parameters",
  mapper: OpenShiftClusterUpdateMapper,
};

export const resourceName1: OperationURLParameter = {
  parameterPath: "resourceName",
  mapper: {
    constraints: {
      Pattern: new RegExp(
        "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$",
      ),
      MaxLength: 63,
      MinLength: 1,
    },
    serializedName: "resourceName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const childResourceName: OperationURLParameter = {
  parameterPath: "childResourceName",
  mapper: {
    constraints: {
      Pattern: new RegExp(
        "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$",
      ),
      MaxLength: 63,
      MinLength: 1,
    },
    serializedName: "childResourceName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const parameters2: OperationParameter = {
  parameterPath: "parameters",
  mapper: MachinePoolMapper,
};

export const parameters3: OperationParameter = {
  parameterPath: "parameters",
  mapper: MachinePoolUpdateMapper,
};

export const parameters4: OperationParameter = {
  parameterPath: "parameters",
  mapper: SecretMapper,
};

export const parameters5: OperationParameter = {
  parameterPath: "parameters",
  mapper: SecretUpdateMapper,
};

export const parameters6: OperationParameter = {
  parameterPath: "parameters",
  mapper: SyncIdentityProviderMapper,
};

export const parameters7: OperationParameter = {
  parameterPath: "parameters",
  mapper: SyncIdentityProviderUpdateMapper,
};

export const parameters8: OperationParameter = {
  parameterPath: "parameters",
  mapper: SyncSetMapper,
};

export const parameters9: OperationParameter = {
  parameterPath: "parameters",
  mapper: SyncSetUpdateMapper,
};
