/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  PacketCoreControlPlane,
  PacketCoreControlPlanesListBySubscriptionOptionalParams,
  PacketCoreControlPlanesListByResourceGroupOptionalParams,
  PacketCoreControlPlanesDeleteOptionalParams,
  PacketCoreControlPlanesGetOptionalParams,
  PacketCoreControlPlanesGetResponse,
  PacketCoreControlPlanesCreateOrUpdateOptionalParams,
  PacketCoreControlPlanesCreateOrUpdateResponse,
  IdentityAndTagsObject,
  PacketCoreControlPlanesUpdateTagsOptionalParams,
  PacketCoreControlPlanesUpdateTagsResponse,
  PacketCoreControlPlanesRollbackOptionalParams,
  PacketCoreControlPlanesRollbackResponse,
  PacketCoreControlPlanesReinstallOptionalParams,
  PacketCoreControlPlanesReinstallResponse,
  PacketCoreControlPlaneCollectDiagnosticsPackage,
  PacketCoreControlPlanesCollectDiagnosticsPackageOptionalParams,
  PacketCoreControlPlanesCollectDiagnosticsPackageResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a PacketCoreControlPlanes. */
export interface PacketCoreControlPlanes {
  /**
   * Lists all the packet core control planes in a subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: PacketCoreControlPlanesListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<PacketCoreControlPlane>;
  /**
   * Lists all the packet core control planes in a resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: PacketCoreControlPlanesListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<PacketCoreControlPlane>;
  /**
   * Deletes the specified packet core control plane.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param packetCoreControlPlaneName The name of the packet core control plane.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    packetCoreControlPlaneName: string,
    options?: PacketCoreControlPlanesDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Deletes the specified packet core control plane.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param packetCoreControlPlaneName The name of the packet core control plane.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    packetCoreControlPlaneName: string,
    options?: PacketCoreControlPlanesDeleteOptionalParams
  ): Promise<void>;
  /**
   * Gets information about the specified packet core control plane.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param packetCoreControlPlaneName The name of the packet core control plane.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    packetCoreControlPlaneName: string,
    options?: PacketCoreControlPlanesGetOptionalParams
  ): Promise<PacketCoreControlPlanesGetResponse>;
  /**
   * Creates or updates a packet core control plane.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param packetCoreControlPlaneName The name of the packet core control plane.
   * @param parameters Parameters supplied to the create or update packet core control plane operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    packetCoreControlPlaneName: string,
    parameters: PacketCoreControlPlane,
    options?: PacketCoreControlPlanesCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<PacketCoreControlPlanesCreateOrUpdateResponse>,
      PacketCoreControlPlanesCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a packet core control plane.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param packetCoreControlPlaneName The name of the packet core control plane.
   * @param parameters Parameters supplied to the create or update packet core control plane operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    packetCoreControlPlaneName: string,
    parameters: PacketCoreControlPlane,
    options?: PacketCoreControlPlanesCreateOrUpdateOptionalParams
  ): Promise<PacketCoreControlPlanesCreateOrUpdateResponse>;
  /**
   * Patch packet core control plane resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param packetCoreControlPlaneName The name of the packet core control plane.
   * @param parameters Parameters supplied to patch packet core control plane resource.
   * @param options The options parameters.
   */
  updateTags(
    resourceGroupName: string,
    packetCoreControlPlaneName: string,
    parameters: IdentityAndTagsObject,
    options?: PacketCoreControlPlanesUpdateTagsOptionalParams
  ): Promise<PacketCoreControlPlanesUpdateTagsResponse>;
  /**
   * Roll back the specified packet core control plane to the previous version, "rollbackVersion".
   * Multiple consecutive rollbacks are not possible. This action may cause a service outage.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param packetCoreControlPlaneName The name of the packet core control plane.
   * @param options The options parameters.
   */
  beginRollback(
    resourceGroupName: string,
    packetCoreControlPlaneName: string,
    options?: PacketCoreControlPlanesRollbackOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<PacketCoreControlPlanesRollbackResponse>,
      PacketCoreControlPlanesRollbackResponse
    >
  >;
  /**
   * Roll back the specified packet core control plane to the previous version, "rollbackVersion".
   * Multiple consecutive rollbacks are not possible. This action may cause a service outage.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param packetCoreControlPlaneName The name of the packet core control plane.
   * @param options The options parameters.
   */
  beginRollbackAndWait(
    resourceGroupName: string,
    packetCoreControlPlaneName: string,
    options?: PacketCoreControlPlanesRollbackOptionalParams
  ): Promise<PacketCoreControlPlanesRollbackResponse>;
  /**
   * Reinstall the specified packet core control plane. This action will remove any transaction state
   * from the packet core to return it to a known state. This action will cause a service outage.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param packetCoreControlPlaneName The name of the packet core control plane.
   * @param options The options parameters.
   */
  beginReinstall(
    resourceGroupName: string,
    packetCoreControlPlaneName: string,
    options?: PacketCoreControlPlanesReinstallOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<PacketCoreControlPlanesReinstallResponse>,
      PacketCoreControlPlanesReinstallResponse
    >
  >;
  /**
   * Reinstall the specified packet core control plane. This action will remove any transaction state
   * from the packet core to return it to a known state. This action will cause a service outage.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param packetCoreControlPlaneName The name of the packet core control plane.
   * @param options The options parameters.
   */
  beginReinstallAndWait(
    resourceGroupName: string,
    packetCoreControlPlaneName: string,
    options?: PacketCoreControlPlanesReinstallOptionalParams
  ): Promise<PacketCoreControlPlanesReinstallResponse>;
  /**
   * Collect a diagnostics package for the specified packet core control plane. This action will upload
   * the diagnostics to a storage account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param packetCoreControlPlaneName The name of the packet core control plane.
   * @param parameters Parameters supplied to the packet core control plane collect diagnostics package
   *                   operation.
   * @param options The options parameters.
   */
  beginCollectDiagnosticsPackage(
    resourceGroupName: string,
    packetCoreControlPlaneName: string,
    parameters: PacketCoreControlPlaneCollectDiagnosticsPackage,
    options?: PacketCoreControlPlanesCollectDiagnosticsPackageOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<PacketCoreControlPlanesCollectDiagnosticsPackageResponse>,
      PacketCoreControlPlanesCollectDiagnosticsPackageResponse
    >
  >;
  /**
   * Collect a diagnostics package for the specified packet core control plane. This action will upload
   * the diagnostics to a storage account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param packetCoreControlPlaneName The name of the packet core control plane.
   * @param parameters Parameters supplied to the packet core control plane collect diagnostics package
   *                   operation.
   * @param options The options parameters.
   */
  beginCollectDiagnosticsPackageAndWait(
    resourceGroupName: string,
    packetCoreControlPlaneName: string,
    parameters: PacketCoreControlPlaneCollectDiagnosticsPackage,
    options?: PacketCoreControlPlanesCollectDiagnosticsPackageOptionalParams
  ): Promise<PacketCoreControlPlanesCollectDiagnosticsPackageResponse>;
}
