/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  Sim,
  SimsListBySubscriptionOptionalParams,
  SimsListByResourceGroupOptionalParams,
  SimsDeleteOptionalParams,
  SimsGetOptionalParams,
  SimsGetResponse,
  SimsCreateOrUpdateOptionalParams,
  SimsCreateOrUpdateResponse,
  TagsObject,
  SimsUpdateTagsOptionalParams,
  SimsUpdateTagsResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Sims. */
export interface Sims {
  /**
   * Gets all the sims in a subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: SimsListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<Sim>;
  /**
   * Gets all the Sims in a subscription.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: SimsListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<Sim>;
  /**
   * Deletes the specified sim.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param simName The name of the SIM.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    simName: string,
    options?: SimsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes the specified sim.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param simName The name of the SIM.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    simName: string,
    options?: SimsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Gets information about the specified sim.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param simName The name of the SIM.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    simName: string,
    options?: SimsGetOptionalParams
  ): Promise<SimsGetResponse>;
  /**
   * Creates or updates a Sim.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param simName The name of the SIM.
   * @param parameters Parameters supplied to the create or update sim operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    simName: string,
    parameters: Sim,
    options?: SimsCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<SimsCreateOrUpdateResponse>,
      SimsCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a Sim.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param simName The name of the SIM.
   * @param parameters Parameters supplied to the create or update sim operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    simName: string,
    parameters: Sim,
    options?: SimsCreateOrUpdateOptionalParams
  ): Promise<SimsCreateOrUpdateResponse>;
  /**
   * Updates a sim update tags.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param simName The name of the SIM.
   * @param parameters Parameters supplied to update sim tags.
   * @param options The options parameters.
   */
  updateTags(
    resourceGroupName: string,
    simName: string,
    parameters: TagsObject,
    options?: SimsUpdateTagsOptionalParams
  ): Promise<SimsUpdateTagsResponse>;
}
