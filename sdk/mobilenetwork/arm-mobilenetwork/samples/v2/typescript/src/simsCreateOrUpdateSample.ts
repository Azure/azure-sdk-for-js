/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { Sim, MobileNetworkManagementClient } from "@azure/arm-mobilenetwork";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";

dotenv.config();

/**
 * This sample demonstrates how to Creates or updates a SIM.
 *
 * @summary Creates or updates a SIM.
 * x-ms-original-file: specification/mobilenetwork/resource-manager/Microsoft.MobileNetwork/stable/2022-11-01/examples/SimCreate.json
 */
async function createSim() {
  const subscriptionId =
    process.env["MOBILENETWORK_SUBSCRIPTION_ID"] || "subid";
  const resourceGroupName =
    process.env["MOBILENETWORK_RESOURCE_GROUP"] || "rg1";
  const simGroupName = "testSimGroup";
  const simName = "testSim";
  const parameters: Sim = {
    authenticationKey: "00000000000000000000000000000000",
    deviceType: "Video camera",
    integratedCircuitCardIdentifier: "8900000000000000000",
    internationalMobileSubscriberIdentity: "00000",
    operatorKeyCode: "00000000000000000000000000000000",
    simPolicy: {
      id:
        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.MobileNetwork/mobileNetworks/testMobileNetwork/simPolicies/MySimPolicy"
    },
    staticIpConfiguration: [
      {
        attachedDataNetwork: {
          id:
            "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.MobileNetwork/packetCoreControlPlanes/TestPacketCoreCP/packetCoreDataPlanes/TestPacketCoreDP/attachedDataNetworks/TestAttachedDataNetwork"
        },
        slice: {
          id:
            "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.MobileNetwork/mobileNetworks/testMobileNetwork/slices/testSlice"
        },
        staticIp: { ipv4Address: "2.4.0.1" }
      }
    ]
  };
  const credential = new DefaultAzureCredential();
  const client = new MobileNetworkManagementClient(credential, subscriptionId);
  const result = await client.sims.beginCreateOrUpdateAndWait(
    resourceGroupName,
    simGroupName,
    simName,
    parameters
  );
  console.log(result);
}

async function main() {
  createSim();
}

main().catch(console.error);
