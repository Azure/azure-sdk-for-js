/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
const { MobileNetworkManagementClient } = require("@azure/arm-mobilenetwork");
const { DefaultAzureCredential } = require("@azure/identity");
require("dotenv").config();

/**
 * This sample demonstrates how to Bulk upload SIMs in encrypted form to a SIM group. The SIM credentials must be encrypted.
 *
 * @summary Bulk upload SIMs in encrypted form to a SIM group. The SIM credentials must be encrypted.
 * x-ms-original-file: specification/mobilenetwork/resource-manager/Microsoft.MobileNetwork/stable/2023-06-01/examples/SimBulkUploadEncrypted.json
 */
async function bulkUploadEncryptedSiMSToASimGroup() {
  const subscriptionId =
    process.env["MOBILENETWORK_SUBSCRIPTION_ID"] || "00000000-0000-0000-0000-000000000000";
  const resourceGroupName = process.env["MOBILENETWORK_RESOURCE_GROUP"] || "rg1";
  const simGroupName = "testSimGroup";
  const parameters = {
    azureKeyIdentifier: 1,
    encryptedTransportKey: "ABC123",
    signedTransportKey: "ABC123",
    sims: [
      {
        name: "testSim",
        deviceType: "Video camera",
        encryptedCredentials: "ABC123",
        integratedCircuitCardIdentifier: "8900000000000000000",
        internationalMobileSubscriberIdentity: "00000",
        simPolicy: {
          id: "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.MobileNetwork/mobileNetworks/testMobileNetwork/simPolicies/MySimPolicy",
        },
        staticIpConfiguration: [
          {
            attachedDataNetwork: {
              id: "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.MobileNetwork/packetCoreControlPlanes/TestPacketCoreCP/packetCoreDataPlanes/TestPacketCoreDP/attachedDataNetworks/TestAttachedDataNetwork",
            },
            slice: {
              id: "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.MobileNetwork/mobileNetworks/testMobileNetwork/slices/testSlice",
            },
            staticIp: { ipv4Address: "2.4.0.1" },
          },
        ],
      },
      {
        name: "testSim2",
        deviceType: "Video camera",
        encryptedCredentials: "ABC123",
        integratedCircuitCardIdentifier: "8900000000000000001",
        internationalMobileSubscriberIdentity: "00000",
        simPolicy: {
          id: "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.MobileNetwork/mobileNetworks/testMobileNetwork/simPolicies/MySimPolicy",
        },
        staticIpConfiguration: [
          {
            attachedDataNetwork: {
              id: "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.MobileNetwork/packetCoreControlPlanes/TestPacketCoreCP/packetCoreDataPlanes/TestPacketCoreDP/attachedDataNetworks/TestAttachedDataNetwork",
            },
            slice: {
              id: "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.MobileNetwork/mobileNetworks/testMobileNetwork/slices/testSlice",
            },
            staticIp: { ipv4Address: "2.4.0.2" },
          },
        ],
      },
    ],
    vendorKeyFingerprint: "ABC123",
    version: 1,
  };
  const credential = new DefaultAzureCredential();
  const client = new MobileNetworkManagementClient(credential, subscriptionId);
  const result = await client.sims.beginBulkUploadEncryptedAndWait(
    resourceGroupName,
    simGroupName,
    parameters
  );
  console.log(result);
}

async function main() {
  bulkUploadEncryptedSiMSToASimGroup();
}

main().catch(console.error);
