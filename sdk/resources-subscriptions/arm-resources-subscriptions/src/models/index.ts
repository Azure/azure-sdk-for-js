/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** An error response for a resource management request. */
export interface CloudError {
  /** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.) */
  error?: ErrorResponse;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.) */
export interface ErrorResponse {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorResponse[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** Location list operation response. */
export interface LocationListResult {
  /** An array of locations. */
  value?: Location[];
}

/** Location information. */
export interface Location {
  /**
   * The fully qualified ID of the location. For example, /subscriptions/8d65815f-a5b6-402f-9298-045155da7d74/locations/westus.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The subscription ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionId?: string;
  /**
   * The location name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The location type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: LocationType;
  /**
   * The display name of the location.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * The display name of the location and its region.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly regionalDisplayName?: string;
  /** Metadata of the location, such as lat/long, paired region, and others. */
  metadata?: LocationMetadata;
  /** The availability zone mappings for this region. */
  availabilityZoneMappings?: AvailabilityZoneMappings[];
}

/** Location metadata information */
export interface LocationMetadata {
  /**
   * The type of the region.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly regionType?: RegionType;
  /**
   * The category of the region.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly regionCategory?: RegionCategory;
  /**
   * The geography of the location.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly geography?: string;
  /**
   * The geography group of the location.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly geographyGroup?: string;
  /**
   * The longitude of the location.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly longitude?: string;
  /**
   * The latitude of the location.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly latitude?: string;
  /**
   * The physical location of the Azure location.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly physicalLocation?: string;
  /** The regions paired to this region. */
  pairedRegion?: PairedRegion[];
  /**
   * The home location of an edge zone.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly homeLocation?: string;
}

/** Information regarding paired region. */
export interface PairedRegion {
  /**
   * The name of the paired region.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The fully qualified ID of the location. For example, /subscriptions/8d65815f-a5b6-402f-9298-045155da7d74/locations/westus.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The subscription ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionId?: string;
}

/** Availability zone mappings for the region */
export interface AvailabilityZoneMappings {
  /**
   * The logical zone id for the availability zone
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly logicalZone?: string;
  /**
   * The fully qualified physical zone id of availability zone to which logical zone id is mapped to
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly physicalZone?: string;
}

/** Subscription information. */
export interface Subscription {
  /**
   * The fully qualified ID for the subscription. For example, /subscriptions/8d65815f-a5b6-402f-9298-045155da7d74
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The subscription ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionId?: string;
  /**
   * The subscription display name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * The subscription tenant ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /**
   * The subscription state. Possible values are Enabled, Warned, PastDue, Disabled, and Deleted.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly state?: SubscriptionState;
  /** The subscription policies. */
  subscriptionPolicies?: SubscriptionPolicies;
  /** The authorization source of the request. Valid values are one or more combinations of Legacy, RoleBased, Bypassed, Direct and Management. For example, 'Legacy, RoleBased'. */
  authorizationSource?: string;
  /** An array containing the tenants managing the subscription. */
  managedByTenants?: ManagedByTenant[];
  /** The tags attached to the subscription. */
  tags?: { [propertyName: string]: string };
}

/** Subscription policies. */
export interface SubscriptionPolicies {
  /**
   * The subscription location placement ID. The ID indicates which regions are visible for a subscription. For example, a subscription with a location placement Id of Public_2014-09-01 has access to Azure public regions.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly locationPlacementId?: string;
  /**
   * The subscription quota ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly quotaId?: string;
  /**
   * The subscription spending limit.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly spendingLimit?: SpendingLimit;
}

/** Information about a tenant managing the subscription. */
export interface ManagedByTenant {
  /**
   * The tenant ID of the managing tenant. This is a GUID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
}

/** Subscription list operation response. */
export interface SubscriptionListResult {
  /** An array of subscriptions. */
  value?: Subscription[];
  /** The URL to get the next set of results. */
  nextLink: string;
}

/** Tenant Ids information. */
export interface TenantListResult {
  /** An array of tenants. */
  value?: TenantIdDescription[];
  /** The URL to use for getting the next set of results. */
  nextLink: string;
}

/** Tenant Id information. */
export interface TenantIdDescription {
  /**
   * The fully qualified ID of the tenant. For example, /tenants/8d65815f-a5b6-402f-9298-045155da7d74
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The tenant ID. For example, 8d65815f-a5b6-402f-9298-045155da7d74
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /**
   * Category of the tenant.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantCategory?: TenantCategory;
  /**
   * Country/region name of the address for the tenant.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly country?: string;
  /**
   * Country/region abbreviation for the tenant.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly countryCode?: string;
  /**
   * The display name of the tenant.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * The list of domains for the tenant.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly domains?: string[];
  /**
   * The default domain for the tenant.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly defaultDomain?: string;
  /**
   * The tenant type. Only available for 'Home' tenant category.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantType?: string;
  /**
   * The tenant's branding logo URL. Only available for 'Home' tenant category.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantBrandingLogoUrl?: string;
}

/** Check zone peers request parameters. */
export interface CheckZonePeersRequest {
  /** The Microsoft location. */
  location?: string;
  /** The peer Microsoft Azure subscription ID. */
  subscriptionIds?: string[];
}

/** Result of the Check zone peers operation. */
export interface CheckZonePeersResult {
  /**
   * The subscription ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionId?: string;
  /** the location of the subscription. */
  location?: string;
  /** The Availability Zones shared by the subscriptions. */
  availabilityZonePeers?: AvailabilityZonePeers[];
}

/** List of availability zones shared by the subscriptions. */
export interface AvailabilityZonePeers {
  /**
   * The availabilityZone.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly availabilityZone?: string;
  /** Details of shared availability zone. */
  peers?: Peers[];
}

/** Information about shared availability zone. */
export interface Peers {
  /**
   * The subscription ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionId?: string;
  /**
   * The availabilityZone.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly availabilityZone?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponseAutoGenerated {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** Name and Type of the Resource */
export interface ResourceName {
  /** Name of the resource */
  name: string;
  /** The type of the resource */
  type: string;
}

/** Resource Name valid if not a reserved word, does not contain a reserved word and does not start with a reserved word */
export interface CheckResourceNameResult {
  /** Name of Resource */
  name?: string;
  /** Type of Resource */
  type?: string;
  /** Is the resource name Allowed or Reserved */
  status?: ResourceNameStatus;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface OperationAutoGenerated {
  /** Operation name: {provider}/{resource}/{operation} */
  name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplayAutoGenerated;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplayAutoGenerated {
  /** Service provider: Microsoft.Resources */
  provider?: string;
  /** Resource on which the operation is performed: Profile, endpoint, etc. */
  resource?: string;
  /** Operation type: Read, write, delete, etc. */
  operation?: string;
  /** Description of the operation. */
  description?: string;
}

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResultAutoGenerated {
  /** List of operations supported by the resource provider */
  value?: OperationAutoGenerated[];
  /** URL to get the next set of operation list results (if there are any). */
  nextLink?: string;
}

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system"
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link RegionType} that the service accepts. */
export enum KnownRegionType {
  /** Physical */
  Physical = "Physical",
  /** Logical */
  Logical = "Logical"
}

/**
 * Defines values for RegionType. \
 * {@link KnownRegionType} can be used interchangeably with RegionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Physical** \
 * **Logical**
 */
export type RegionType = string;

/** Known values of {@link RegionCategory} that the service accepts. */
export enum KnownRegionCategory {
  /** Recommended */
  Recommended = "Recommended",
  /** Extended */
  Extended = "Extended",
  /** Other */
  Other = "Other"
}

/**
 * Defines values for RegionCategory. \
 * {@link KnownRegionCategory} can be used interchangeably with RegionCategory,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Recommended** \
 * **Extended** \
 * **Other**
 */
export type RegionCategory = string;

/** Known values of {@link ResourceNameStatus} that the service accepts. */
export enum KnownResourceNameStatus {
  /** Allowed */
  Allowed = "Allowed",
  /** Reserved */
  Reserved = "Reserved"
}

/**
 * Defines values for ResourceNameStatus. \
 * {@link KnownResourceNameStatus} can be used interchangeably with ResourceNameStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Allowed** \
 * **Reserved**
 */
export type ResourceNameStatus = string;
/** Defines values for LocationType. */
export type LocationType = "Region" | "EdgeZone";
/** Defines values for SubscriptionState. */
export type SubscriptionState =
  | "Enabled"
  | "Warned"
  | "PastDue"
  | "Disabled"
  | "Deleted";
/** Defines values for SpendingLimit. */
export type SpendingLimit = "On" | "Off" | "CurrentPeriodOff";
/** Defines values for TenantCategory. */
export type TenantCategory = "Home" | "ProjectedBy" | "ManagedBy";

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface SubscriptionsListLocationsOptionalParams
  extends coreClient.OperationOptions {
  /** Whether to include extended locations. */
  includeExtendedLocations?: boolean;
}

/** Contains response data for the listLocations operation. */
export type SubscriptionsListLocationsResponse = LocationListResult;

/** Optional parameters. */
export interface SubscriptionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SubscriptionsGetResponse = Subscription;

/** Optional parameters. */
export interface SubscriptionsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type SubscriptionsListResponse = SubscriptionListResult;

/** Optional parameters. */
export interface SubscriptionsCheckZonePeersOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkZonePeers operation. */
export type SubscriptionsCheckZonePeersResponse = CheckZonePeersResult;

/** Optional parameters. */
export interface SubscriptionsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type SubscriptionsListNextResponse = SubscriptionListResult;

/** Optional parameters. */
export interface TenantsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type TenantsListResponse = TenantListResult;

/** Optional parameters. */
export interface TenantsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type TenantsListNextResponse = TenantListResult;

/** Optional parameters. */
export interface CheckResourceNameOptionalParams
  extends coreClient.OperationOptions {
  /** Resource object with values for resource name and resource type */
  resourceNameDefinition?: ResourceName;
}

/** Contains response data for the checkResourceName operation. */
export type CheckResourceNameResponse = CheckResourceNameResult;

/** Optional parameters. */
export interface SubscriptionClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
