/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Information regarding paired region.
 */
export interface PairedRegion {
  /**
   * The name of the paired region.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The fully qualified ID of the location. For example,
   * /subscriptions/00000000-0000-0000-0000-000000000000/locations/westus.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The subscription ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subscriptionId?: string;
}

/**
 * Location metadata information
 */
export interface LocationMetadata {
  /**
   * The type of the region. Possible values include: 'Physical', 'Logical'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly regionType?: RegionType;
  /**
   * The category of the region. Possible values include: 'Recommended', 'Extended', 'Other'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly regionCategory?: RegionCategory;
  /**
   * The geography group of the location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly geographyGroup?: string;
  /**
   * The longitude of the location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly longitude?: string;
  /**
   * The latitude of the location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly latitude?: string;
  /**
   * The physical location of the Azure location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly physicalLocation?: string;
  /**
   * The regions paired to this region.
   */
  pairedRegion?: PairedRegion[];
  /**
   * The home location of an edge zone.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly homeLocation?: string;
}

/**
 * Location information.
 */
export interface Location {
  /**
   * The fully qualified ID of the location. For example,
   * /subscriptions/00000000-0000-0000-0000-000000000000/locations/westus.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The subscription ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subscriptionId?: string;
  /**
   * The location name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The location type. Possible values include: 'Region', 'EdgeZone'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: LocationType;
  /**
   * The display name of the location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * The display name of the location and its region.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly regionalDisplayName?: string;
  /**
   * Metadata of the location, such as lat/long, paired region, and others.
   */
  metadata?: LocationMetadata;
}

/**
 * Subscription policies.
 */
export interface SubscriptionPolicies {
  /**
   * The subscription location placement ID. The ID indicates which regions are visible for a
   * subscription. For example, a subscription with a location placement Id of Public_2014-09-01
   * has access to Azure public regions.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly locationPlacementId?: string;
  /**
   * The subscription quota ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly quotaId?: string;
  /**
   * The subscription spending limit. Possible values include: 'On', 'Off', 'CurrentPeriodOff'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly spendingLimit?: SpendingLimit;
}

/**
 * Information about a tenant managing the subscription.
 */
export interface ManagedByTenant {
  /**
   * The tenant ID of the managing tenant. This is a GUID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
}

/**
 * Subscription information.
 */
export interface Subscription {
  /**
   * The fully qualified ID for the subscription. For example,
   * /subscriptions/00000000-0000-0000-0000-000000000000.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The subscription ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subscriptionId?: string;
  /**
   * The subscription display name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * The subscription tenant ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
  /**
   * The subscription state. Possible values are Enabled, Warned, PastDue, Disabled, and Deleted.
   * Possible values include: 'Enabled', 'Warned', 'PastDue', 'Disabled', 'Deleted'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: SubscriptionState;
  /**
   * The subscription policies.
   */
  subscriptionPolicies?: SubscriptionPolicies;
  /**
   * The authorization source of the request. Valid values are one or more combinations of Legacy,
   * RoleBased, Bypassed, Direct and Management. For example, 'Legacy, RoleBased'.
   */
  authorizationSource?: string;
  /**
   * An array containing the tenants managing the subscription.
   */
  managedByTenants?: ManagedByTenant[];
  /**
   * The tags attached to the subscription.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Tenant Id information.
 */
export interface TenantIdDescription {
  /**
   * The fully qualified ID of the tenant. For example,
   * /tenants/00000000-0000-0000-0000-000000000000.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The tenant ID. For example, 00000000-0000-0000-0000-000000000000.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
  /**
   * Category of the tenant. Possible values include: 'Home', 'ProjectedBy', 'ManagedBy'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantCategory?: TenantCategory;
  /**
   * Country/region name of the address for the tenant.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly country?: string;
  /**
   * Country/region abbreviation for the tenant.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly countryCode?: string;
  /**
   * The display name of the tenant.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * The list of domains for the tenant.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly domains?: string[];
  /**
   * The default domain for the tenant.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly defaultDomain?: string;
  /**
   * The tenant type. Only available for 'Home' tenant category.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantType?: string;
  /**
   * The tenant's branding logo URL. Only available for 'Home' tenant category.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantBrandingLogoUrl?: string;
}

/**
 * Name and Type of the Resource
 */
export interface ResourceName {
  /**
   * Name of the resource
   */
  name: string;
  /**
   * The type of the resource
   */
  type: string;
}

/**
 * Resource Name valid if not a reserved word, does not contain a reserved word and does not start
 * with a reserved word
 */
export interface CheckResourceNameResult {
  /**
   * Name of Resource
   */
  name?: string;
  /**
   * Type of Resource
   */
  type?: string;
  /**
   * Is the resource name Allowed or Reserved. Possible values include: 'Allowed', 'Reserved'
   */
  status?: ResourceNameStatus;
}

/**
 * The resource management error additional info.
 */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly info?: any;
}

/**
 * Common error response for all Azure Resource Manager APIs to return error details for failed
 * operations. (This also follows the OData error response format.)
 * @summary Error Response
 */
export interface ErrorResponse {
  /**
   * The error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The error target.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly target?: string;
  /**
   * The error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: ErrorResponse[];
  /**
   * The error additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/**
 * The object that represents the operation.
 */
export interface OperationDisplay {
  /**
   * Service provider: Microsoft.Resources
   */
  provider?: string;
  /**
   * Resource on which the operation is performed: Profile, endpoint, etc.
   */
  resource?: string;
  /**
   * Operation type: Read, write, delete, etc.
   */
  operation?: string;
  /**
   * Description of the operation.
   */
  description?: string;
}

/**
 * Microsoft.Resources operation
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * The object that represents the operation.
   */
  display?: OperationDisplay;
}

/**
 * Result of the request to list Microsoft.Resources operations. It contains a list of operations
 * and a URL link to get the next set of results.
 */
export interface OperationListResult {
  /**
   * List of Microsoft.Resources operations.
   */
  value?: Operation[];
  /**
   * URL to get the next set of operation list results if there are any.
   */
  nextLink?: string;
}

/**
 * Optional Parameters.
 */
export interface SubscriptionsListLocationsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether to include extended locations.
   */
  includeExtendedLocations?: boolean;
}

/**
 * Optional Parameters.
 */
export interface SubscriptionClientCheckResourceNameOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Resource object with values for resource name and resource type
   */
  resourceNameDefinition?: ResourceName;
}

/**
 * An interface representing SubscriptionClientOptions.
 */
export interface SubscriptionClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * Location list operation response.
 * @extends Array<Location>
 */
export interface LocationListResult extends Array<Location> {
}

/**
 * @interface
 * Subscription list operation response.
 * @extends Array<Subscription>
 */
export interface SubscriptionListResult extends Array<Subscription> {
  /**
   * The URL to get the next set of results.
   */
  nextLink: string;
}

/**
 * @interface
 * Tenant Ids information.
 * @extends Array<TenantIdDescription>
 */
export interface TenantListResult extends Array<TenantIdDescription> {
  /**
   * The URL to use for getting the next set of results.
   */
  nextLink: string;
}

/**
 * Defines values for RegionType.
 * Possible values include: 'Physical', 'Logical'
 * @readonly
 * @enum {string}
 */
export type RegionType = 'Physical' | 'Logical';

/**
 * Defines values for RegionCategory.
 * Possible values include: 'Recommended', 'Extended', 'Other'
 * @readonly
 * @enum {string}
 */
export type RegionCategory = 'Recommended' | 'Extended' | 'Other';

/**
 * Defines values for LocationType.
 * Possible values include: 'Region', 'EdgeZone'
 * @readonly
 * @enum {string}
 */
export type LocationType = 'Region' | 'EdgeZone';

/**
 * Defines values for SubscriptionState.
 * Possible values include: 'Enabled', 'Warned', 'PastDue', 'Disabled', 'Deleted'
 * @readonly
 * @enum {string}
 */
export type SubscriptionState = 'Enabled' | 'Warned' | 'PastDue' | 'Disabled' | 'Deleted';

/**
 * Defines values for SpendingLimit.
 * Possible values include: 'On', 'Off', 'CurrentPeriodOff'
 * @readonly
 * @enum {string}
 */
export type SpendingLimit = 'On' | 'Off' | 'CurrentPeriodOff';

/**
 * Defines values for TenantCategory.
 * Possible values include: 'Home', 'ProjectedBy', 'ManagedBy'
 * @readonly
 * @enum {string}
 */
export type TenantCategory = 'Home' | 'ProjectedBy' | 'ManagedBy';

/**
 * Defines values for ResourceNameStatus.
 * Possible values include: 'Allowed', 'Reserved'
 * @readonly
 * @enum {string}
 */
export type ResourceNameStatus = 'Allowed' | 'Reserved';

/**
 * Contains response data for the listLocations operation.
 */
export type SubscriptionsListLocationsResponse = LocationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LocationListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SubscriptionsGetResponse = Subscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Subscription;
    };
};

/**
 * Contains response data for the list operation.
 */
export type SubscriptionsListResponse = SubscriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type SubscriptionsListNextResponse = SubscriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type TenantsListResponse = TenantListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TenantListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type TenantsListNextResponse = TenantListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TenantListResult;
    };
};

/**
 * Contains response data for the checkResourceName operation.
 */
export type CheckResourceNameResponse = CheckResourceNameResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CheckResourceNameResult;
    };
};
