/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Location,
  SubscriptionsListLocationsOptionalParams,
  Subscription,
  SubscriptionsListOptionalParams,
  SubscriptionsGetOptionalParams,
  SubscriptionsGetResponse,
  CheckZonePeersRequest,
  SubscriptionsCheckZonePeersOptionalParams,
  SubscriptionsCheckZonePeersResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Subscriptions. */
export interface Subscriptions {
  /**
   * This operation provides all the locations that are available for resource providers; however, each
   * resource provider may support a subset of this list.
   * @param options The options parameters.
   */
  listLocations(
    options?: SubscriptionsListLocationsOptionalParams
  ): PagedAsyncIterableIterator<Location>;
  /**
   * Gets all subscriptions for a tenant.
   * @param options The options parameters.
   */
  list(
    options?: SubscriptionsListOptionalParams
  ): PagedAsyncIterableIterator<Subscription>;
  /**
   * Gets details about a specified subscription.
   * @param options The options parameters.
   */
  get(
    options?: SubscriptionsGetOptionalParams
  ): Promise<SubscriptionsGetResponse>;
  /**
   * Compares a subscriptions logical zone mapping
   * @param parameters Parameters for checking zone peers.
   * @param options The options parameters.
   */
  checkZonePeers(
    parameters: CheckZonePeersRequest,
    options?: SubscriptionsCheckZonePeersOptionalParams
  ): Promise<SubscriptionsCheckZonePeersResponse>;
}
