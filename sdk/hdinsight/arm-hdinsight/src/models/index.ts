/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * The cluster definition.
 */
export interface ClusterDefinition {
  /**
   * The link to the blueprint.
   */
  blueprint?: string;
  /**
   * The type of cluster.
   */
  kind?: string;
  /**
   * The versions of different services in the cluster.
   */
  componentVersion?: { [propertyName: string]: string };
  /**
   * The cluster configurations.
   */
  configurations?: any;
}

/**
 * The information of AAD security group.
 */
export interface ClientGroupInfo {
  /**
   * The AAD security group name.
   */
  groupName?: string;
  /**
   * The AAD security group id.
   */
  groupId?: string;
}

/**
 * The kafka rest proxy configuration which contains AAD security group information.
 */
export interface KafkaRestProperties {
  /**
   * The information of AAD security group.
   */
  clientGroupInfo?: ClientGroupInfo;
}

/**
 * The security profile which contains Ssh public key for the HDInsight cluster.
 */
export interface SecurityProfile {
  /**
   * The directory type. Possible values include: 'ActiveDirectory'
   */
  directoryType?: DirectoryType;
  /**
   * The organization's active directory domain.
   */
  domain?: string;
  /**
   * The organizational unit within the Active Directory to place the cluster and service accounts.
   */
  organizationalUnitDN?: string;
  /**
   * The LDAPS protocol URLs to communicate with the Active Directory.
   */
  ldapsUrls?: string[];
  /**
   * The domain user account that will have admin privileges on the cluster.
   */
  domainUsername?: string;
  /**
   * The domain admin password.
   */
  domainUserPassword?: string;
  /**
   * Optional. The Distinguished Names for cluster user groups
   */
  clusterUsersGroupDNs?: string[];
  /**
   * The resource ID of the user's Azure Active Directory Domain Service.
   */
  aaddsResourceId?: string;
  /**
   * User assigned identity that has permissions to read and create cluster-related artifacts in
   * the user's AADDS.
   */
  msiResourceId?: string;
}

/**
 * Time and capacity request parameters
 */
export interface AutoscaleTimeAndCapacity {
  /**
   * 24-hour time in the form xx:xx
   */
  time?: string;
  /**
   * The minimum instance count of the cluster
   */
  minInstanceCount?: number;
  /**
   * The maximum instance count of the cluster
   */
  maxInstanceCount?: number;
}

/**
 * Parameters for a schedule-based autoscale rule, consisting of an array of days + a time and
 * capacity
 */
export interface AutoscaleSchedule {
  /**
   * Days of the week for a schedule-based autoscale rule
   */
  days?: DaysOfWeek[];
  /**
   * Time and capacity for a schedule-based autoscale rule
   */
  timeAndCapacity?: AutoscaleTimeAndCapacity;
}

/**
 * The load-based autoscale request parameters
 */
export interface AutoscaleCapacity {
  /**
   * The minimum instance count of the cluster
   */
  minInstanceCount?: number;
  /**
   * The maximum instance count of the cluster
   */
  maxInstanceCount?: number;
}

/**
 * Schedule-based autoscale request parameters
 */
export interface AutoscaleRecurrence {
  /**
   * The time zone for the autoscale schedule times
   */
  timeZone?: string;
  /**
   * Array of schedule-based autoscale rules
   */
  schedule?: AutoscaleSchedule[];
}

/**
 * The autoscale request parameters
 */
export interface Autoscale {
  /**
   * Parameters for load-based autoscale
   */
  capacity?: AutoscaleCapacity;
  /**
   * Parameters for schedule-based autoscale
   */
  recurrence?: AutoscaleRecurrence;
}

/**
 * The autoscale configuration update parameter.
 */
export interface AutoscaleConfigurationUpdateParameter {
  /**
   * The autoscale configuration.
   */
  autoscale?: Autoscale;
}

/**
 * The hardware profile.
 */
export interface HardwareProfile {
  /**
   * The size of the VM
   */
  vmSize?: string;
}

/**
 * The virtual network properties.
 */
export interface VirtualNetworkProfile {
  /**
   * The ID of the virtual network.
   */
  id?: string;
  /**
   * The name of the subnet.
   */
  subnet?: string;
}

/**
 * The data disks groups for the role.
 */
export interface DataDisksGroups {
  /**
   * The number of disks per node.
   */
  disksPerNode?: number;
  /**
   * ReadOnly. The storage account type. Do not set this value.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly storageAccountType?: string;
  /**
   * ReadOnly. The DiskSize in GB. Do not set this value.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly diskSizeGB?: number;
}

/**
 * The SSH public key for the cluster nodes.
 */
export interface SshPublicKey {
  /**
   * The certificate for SSH.
   */
  certificateData?: string;
}

/**
 * The list of SSH public keys.
 */
export interface SshProfile {
  /**
   * The list of SSH public keys.
   */
  publicKeys?: SshPublicKey[];
}

/**
 * The ssh username, password, and ssh public key.
 */
export interface LinuxOperatingSystemProfile {
  /**
   * The username.
   */
  username?: string;
  /**
   * The password.
   */
  password?: string;
  /**
   * The SSH profile.
   */
  sshProfile?: SshProfile;
}

/**
 * The Linux operation systems profile.
 */
export interface OsProfile {
  /**
   * The Linux OS profile.
   */
  linuxOperatingSystemProfile?: LinuxOperatingSystemProfile;
}

/**
 * Describes a script action on role on the cluster.
 */
export interface ScriptAction {
  /**
   * The name of the script action.
   */
  name: string;
  /**
   * The URI to the script.
   */
  uri: string;
  /**
   * The parameters for the script provided.
   */
  parameters: string;
}

/**
 * Describes a role on the cluster.
 */
export interface Role {
  /**
   * The name of the role.
   */
  name?: string;
  /**
   * The minimum instance count of the cluster.
   */
  minInstanceCount?: number;
  /**
   * The instance count of the cluster.
   */
  targetInstanceCount?: number;
  /**
   * The autoscale configurations.
   */
  autoscaleConfiguration?: Autoscale;
  /**
   * The hardware profile.
   */
  hardwareProfile?: HardwareProfile;
  /**
   * The operating system profile.
   */
  osProfile?: OsProfile;
  /**
   * The virtual network profile.
   */
  virtualNetworkProfile?: VirtualNetworkProfile;
  /**
   * The data disks groups for the role.
   */
  dataDisksGroups?: DataDisksGroups[];
  /**
   * The list of script actions on the role.
   */
  scriptActions?: ScriptAction[];
  /**
   * Indicates whether encrypt the data disks.
   */
  encryptDataDisks?: boolean;
}

/**
 * Describes the compute profile.
 */
export interface ComputeProfile {
  /**
   * The list of roles in the cluster.
   */
  roles?: Role[];
}

/**
 * The storage Account.
 */
export interface StorageAccount {
  /**
   * The name of the storage account.
   */
  name?: string;
  /**
   * Whether or not the storage account is the default storage account.
   */
  isDefault?: boolean;
  /**
   * The container in the storage account, only to be specified for WASB storage accounts.
   */
  container?: string;
  /**
   * The filesystem, only to be specified for Azure Data Lake Storage Gen 2.
   */
  fileSystem?: string;
  /**
   * The storage account access key.
   */
  key?: string;
  /**
   * The resource ID of storage account, only to be specified for Azure Data Lake Storage Gen 2.
   */
  resourceId?: string;
  /**
   * The managed identity (MSI) that is allowed to access the storage account, only to be specified
   * for Azure Data Lake Storage Gen 2.
   */
  msiResourceId?: string;
}

/**
 * The storage profile.
 */
export interface StorageProfile {
  /**
   * The list of storage accounts in the cluster.
   */
  storageaccounts?: StorageAccount[];
}

/**
 * The configuration that services will be excluded when creating cluster.
 */
export interface ExcludedServicesConfig {
  /**
   * The config id of excluded services.
   */
  excludedServicesConfigId?: string;
  /**
   * The list of excluded services.
   */
  excludedServicesList?: string;
}

/**
 * The network properties.
 */
export interface NetworkProperties {
  /**
   * The direction for the resource provider connection. Possible values include: 'Inbound',
   * 'Outbound'
   */
  resourceProviderConnection?: ResourceProviderConnection;
  /**
   * Indicates whether or not private link is enabled. Possible values include: 'Disabled',
   * 'Enabled'
   */
  privateLink?: PrivateLink;
}

/**
 * The compute isolation properties.
 */
export interface ComputeIsolationProperties {
  /**
   * The flag indicates whether enable compute isolation or not.
   */
  enableComputeIsolation?: boolean;
  /**
   * The host sku.
   */
  hostSku?: string;
}

/**
 * The disk encryption properties
 */
export interface DiskEncryptionProperties {
  /**
   * Base key vault URI where the customers key is located eg. https://myvault.vault.azure.net
   */
  vaultUri?: string;
  /**
   * Key name that is used for enabling disk encryption.
   */
  keyName?: string;
  /**
   * Specific key version that is used for enabling disk encryption.
   */
  keyVersion?: string;
  /**
   * Algorithm identifier for encryption, default RSA-OAEP. Possible values include: 'RSA-OAEP',
   * 'RSA-OAEP-256', 'RSA1_5'
   */
  encryptionAlgorithm?: JsonWebKeyEncryptionAlgorithm;
  /**
   * Resource ID of Managed Identity that is used to access the key vault.
   */
  msiResourceId?: string;
  /**
   * Indicates whether or not resource disk encryption is enabled. Default value: false.
   */
  encryptionAtHost?: boolean;
}

/**
 * The encryption-in-transit properties.
 */
export interface EncryptionInTransitProperties {
  /**
   * Indicates whether or not inter cluster node communication is encrypted in transit. Default
   * value: false.
   */
  isEncryptionInTransitEnabled?: boolean;
}

/**
 * The cluster create parameters.
 */
export interface ClusterCreateProperties {
  /**
   * The version of the cluster.
   */
  clusterVersion?: string;
  /**
   * The type of operating system. Possible values include: 'Windows', 'Linux'
   */
  osType?: OSType;
  /**
   * The cluster tier. Possible values include: 'Standard', 'Premium'
   */
  tier?: Tier;
  /**
   * The cluster definition.
   */
  clusterDefinition?: ClusterDefinition;
  /**
   * The cluster kafka rest proxy configuration.
   */
  kafkaRestProperties?: KafkaRestProperties;
  /**
   * The security profile.
   */
  securityProfile?: SecurityProfile;
  /**
   * The compute profile.
   */
  computeProfile?: ComputeProfile;
  /**
   * The storage profile.
   */
  storageProfile?: StorageProfile;
  /**
   * The disk encryption properties.
   */
  diskEncryptionProperties?: DiskEncryptionProperties;
  /**
   * The encryption-in-transit properties.
   */
  encryptionInTransitProperties?: EncryptionInTransitProperties;
  /**
   * The minimal supported tls version.
   */
  minSupportedTlsVersion?: string;
  /**
   * The network properties.
   */
  networkProperties?: NetworkProperties;
  /**
   * The compute isolation properties.
   */
  computeIsolationProperties?: ComputeIsolationProperties;
}

/**
 * An interface representing ClusterIdentityUserAssignedIdentitiesValue.
 */
export interface ClusterIdentityUserAssignedIdentitiesValue {
  /**
   * The principal id of user assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The client id of user assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly clientId?: string;
  /**
   * The tenant id of user assigned identity.
   */
  tenantId?: string;
}

/**
 * Identity for the cluster.
 */
export interface ClusterIdentity {
  /**
   * The principal id of cluster identity. This property will only be provided for a system
   * assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The tenant id associated with the cluster. This property will only be provided for a system
   * assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
  /**
   * The type of identity used for the cluster. The type 'SystemAssigned, UserAssigned' includes
   * both an implicitly created identity and a set of user assigned identities. Possible values
   * include: 'SystemAssigned', 'UserAssigned', 'SystemAssigned, UserAssigned', 'None'
   */
  type?: ResourceIdentityType;
  /**
   * The list of user identities associated with the cluster. The user identity dictionary key
   * references will be ARM resource ids in the form:
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
   */
  userAssignedIdentities?: { [propertyName: string]: ClusterIdentityUserAssignedIdentitiesValue };
}

/**
 * The CreateCluster request parameters.
 */
export interface ClusterCreateParametersExtended {
  /**
   * The location of the cluster.
   */
  location?: string;
  /**
   * The resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The cluster create parameters.
   */
  properties?: ClusterCreateProperties;
  /**
   * The identity of the cluster, if configured.
   */
  identity?: ClusterIdentity;
}

/**
 * The PatchCluster request parameters
 */
export interface ClusterPatchParameters {
  /**
   * The resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * The quota properties for the cluster.
 */
export interface QuotaInfo {
  /**
   * The cores used by the cluster.
   */
  coresUsed?: number;
}

/**
 * The error message associated with the cluster creation.
 */
export interface Errors {
  /**
   * The error code.
   */
  code?: string;
  /**
   * The error message.
   */
  message?: string;
}

/**
 * The connectivity properties
 */
export interface ConnectivityEndpoint {
  /**
   * The name of the endpoint.
   */
  name?: string;
  /**
   * The protocol of the endpoint.
   */
  protocol?: string;
  /**
   * The location of the endpoint.
   */
  location?: string;
  /**
   * The port to connect to.
   */
  port?: number;
  /**
   * The private ip address of the endpoint.
   */
  privateIPAddress?: string;
}

/**
 * The properties of cluster.
 */
export interface ClusterGetProperties {
  /**
   * The version of the cluster.
   */
  clusterVersion?: string;
  /**
   * The hdp version of the cluster.
   */
  clusterHdpVersion?: string;
  /**
   * The type of operating system. Possible values include: 'Windows', 'Linux'
   */
  osType?: OSType;
  /**
   * The cluster tier. Possible values include: 'Standard', 'Premium'
   */
  tier?: Tier;
  /**
   * The cluster id.
   */
  clusterId?: string;
  /**
   * The cluster definition.
   */
  clusterDefinition: ClusterDefinition;
  /**
   * The cluster kafka rest proxy configuration.
   */
  kafkaRestProperties?: KafkaRestProperties;
  /**
   * The security profile.
   */
  securityProfile?: SecurityProfile;
  /**
   * The compute profile.
   */
  computeProfile?: ComputeProfile;
  /**
   * The provisioning state, which only appears in the response. Possible values include:
   * 'InProgress', 'Failed', 'Succeeded', 'Canceled', 'Deleting'
   */
  provisioningState?: HDInsightClusterProvisioningState;
  /**
   * The date on which the cluster was created.
   */
  createdDate?: string;
  /**
   * The state of the cluster.
   */
  clusterState?: string;
  /**
   * The quota information.
   */
  quotaInfo?: QuotaInfo;
  /**
   * The list of errors.
   */
  errors?: Errors[];
  /**
   * The list of connectivity endpoints.
   */
  connectivityEndpoints?: ConnectivityEndpoint[];
  /**
   * The disk encryption properties.
   */
  diskEncryptionProperties?: DiskEncryptionProperties;
  /**
   * The encryption-in-transit properties.
   */
  encryptionInTransitProperties?: EncryptionInTransitProperties;
  /**
   * The storage profile.
   */
  storageProfile?: StorageProfile;
  /**
   * The minimal supported tls version.
   */
  minSupportedTlsVersion?: string;
  /**
   * The excluded services config.
   */
  excludedServicesConfig?: ExcludedServicesConfig;
  /**
   * The network properties.
   */
  networkProperties?: NetworkProperties;
  /**
   * The compute isolation properties.
   */
  computeIsolationProperties?: ComputeIsolationProperties;
}

/**
 * The core properties of ARM resources
 */
export interface Resource extends BaseResource {
  /**
   * Fully qualified resource Id for the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * The resource model definition for a ARM tracked top level resource
 */
export interface TrackedResource extends Resource {
  /**
   * The Azure Region where the resource lives
   */
  location?: string;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * The HDInsight cluster.
 */
export interface Cluster extends TrackedResource {
  /**
   * The ETag for the resource
   */
  etag?: string;
  /**
   * The properties of the cluster.
   */
  properties?: ClusterGetProperties;
  /**
   * The identity of the cluster, if configured.
   */
  identity?: ClusterIdentity;
}

/**
 * Describes a script action on a running cluster.
 */
export interface RuntimeScriptAction {
  /**
   * The name of the script action.
   */
  name: string;
  /**
   * The URI to the script.
   */
  uri: string;
  /**
   * The parameters for the script
   */
  parameters?: string;
  /**
   * The list of roles where script will be executed.
   */
  roles: string[];
  /**
   * The application name of the script action, if any.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly applicationName?: string;
}

/**
 * The parameters for the script actions to execute on a running cluster.
 */
export interface ExecuteScriptActionParameters {
  /**
   * The list of run time script actions.
   */
  scriptActions?: RuntimeScriptAction[];
  /**
   * Gets or sets if the scripts needs to be persisted.
   */
  persistOnSuccess: boolean;
}

/**
 * The ListPersistedScriptActions operation response.
 */
export interface ClusterListPersistedScriptActionsResult {
  /**
   * The list of Persisted Script Actions.
   */
  value?: RuntimeScriptAction[];
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * The execution summary of a script action.
 */
export interface ScriptActionExecutionSummary {
  /**
   * The status of script action execution.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: string;
  /**
   * The instance count for a given script action execution status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly instanceCount?: number;
}

/**
 * The execution details of a script action.
 */
export interface RuntimeScriptActionDetail extends RuntimeScriptAction {
  /**
   * The execution id of the script action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly scriptExecutionId?: number;
  /**
   * The start time of script action execution.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: string;
  /**
   * The end time of script action execution.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endTime?: string;
  /**
   * The current execution status of the script action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: string;
  /**
   * The reason why the script action was executed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operation?: string;
  /**
   * The summary of script action execution result.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly executionSummary?: ScriptActionExecutionSummary[];
  /**
   * The script action execution debug information.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly debugInformation?: string;
}

/**
 * The list runtime script action detail response.
 */
export interface ClusterListRuntimeScriptActionDetailResult {
  /**
   * The list of persisted script action details for the cluster.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: RuntimeScriptActionDetail[];
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * The Resize Cluster request parameters.
 */
export interface ClusterResizeParameters {
  /**
   * The target instance count for the operation.
   */
  targetInstanceCount?: number;
}

/**
 * The Disk Encryption Cluster request parameters.
 */
export interface ClusterDiskEncryptionParameters {
  /**
   * Base key vault URI where the customers key is located eg. https://myvault.vault.azure.net
   */
  vaultUri?: string;
  /**
   * Key name that is used for enabling disk encryption.
   */
  keyName?: string;
  /**
   * Specific key version that is used for enabling disk encryption.
   */
  keyVersion?: string;
}

/**
 * The update gateway settings request parameters.
 */
export interface UpdateGatewaySettingsParameters {
  /**
   * Indicates whether or not the gateway settings based authorization is enabled. Default value:
   * true.
   */
  isCredentialEnabled?: boolean;
  /**
   * The gateway settings user name.
   */
  userName?: string;
  /**
   * The gateway settings user password.
   */
  password?: string;
}

/**
 * Gateway settings.
 */
export interface GatewaySettings {
  /**
   * Indicates whether or not the gateway settings based authorization is enabled.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isCredentialEnabled?: string;
  /**
   * The gateway settings user name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly userName?: string;
  /**
   * The gateway settings user password.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly password?: string;
}

/**
 * The azure async operation response.
 */
export interface OperationResource {
  /**
   * The async operation state. Possible values include: 'InProgress', 'Succeeded', 'Failed'
   */
  status?: AsyncOperationState;
  /**
   * The operation error information.
   */
  error?: Errors;
}

/**
 * The resource model definition for a ARM proxy resource. It will have everything other than
 * required location and tags
 */
export interface ProxyResource extends Resource {
}

/**
 * Describes the format of Error response.
 */
export interface ErrorResponse {
  /**
   * Error code
   */
  code?: string;
  /**
   * Error message indicating why the operation failed.
   */
  message?: string;
}

/**
 * Gets the application HTTP endpoints.
 */
export interface ApplicationGetHttpsEndpoint {
  /**
   * The list of access modes for the application.
   */
  accessModes?: string[];
  /**
   * The location of the endpoint.
   */
  location?: string;
  /**
   * The destination port to connect to.
   */
  destinationPort?: number;
  /**
   * The public port to connect to.
   */
  publicPort?: number;
  /**
   * The subdomain suffix of the application.
   */
  subDomainSuffix?: string;
  /**
   * The value indicates whether to disable GatewayAuth.
   */
  disableGatewayAuth?: boolean;
}

/**
 * Gets the application SSH endpoint
 */
export interface ApplicationGetEndpoint {
  /**
   * The location of the endpoint.
   */
  location?: string;
  /**
   * The destination port to connect to.
   */
  destinationPort?: number;
  /**
   * The public port to connect to.
   */
  publicPort?: number;
  /**
   * The private ip address of the endpoint.
   */
  privateIPAddress?: string;
}

/**
 * The HDInsight cluster application GET response.
 */
export interface ApplicationProperties {
  /**
   * The list of roles in the cluster.
   */
  computeProfile?: ComputeProfile;
  /**
   * The list of install script actions.
   */
  installScriptActions?: RuntimeScriptAction[];
  /**
   * The list of uninstall script actions.
   */
  uninstallScriptActions?: RuntimeScriptAction[];
  /**
   * The list of application HTTPS endpoints.
   */
  httpsEndpoints?: ApplicationGetHttpsEndpoint[];
  /**
   * The list of application SSH endpoints.
   */
  sshEndpoints?: ApplicationGetEndpoint[];
  /**
   * The provisioning state of the application.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * The application type.
   */
  applicationType?: string;
  /**
   * The application state.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly applicationState?: string;
  /**
   * The list of errors.
   */
  errors?: Errors[];
  /**
   * The application create date time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdDate?: string;
  /**
   * The marketplace identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly marketplaceIdentifier?: string;
}

/**
 * The HDInsight cluster application
 */
export interface Application extends ProxyResource {
  /**
   * The ETag for the application
   */
  etag?: string;
  /**
   * The tags for the application.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The properties of the application.
   */
  properties?: ApplicationProperties;
}

/**
 * The version properties.
 */
export interface VersionSpec {
  /**
   * The friendly name
   */
  friendlyName?: string;
  /**
   * The display name
   */
  displayName?: string;
  /**
   * Whether or not the version is the default version.
   */
  isDefault?: string;
  /**
   * The component version property.
   */
  componentVersions?: { [propertyName: string]: string };
}

/**
 * The version capability.
 */
export interface VersionsCapability {
  /**
   * The list of version capabilities.
   */
  available?: VersionSpec[];
}

/**
 * The regions capability.
 */
export interface RegionsCapability {
  /**
   * The list of region capabilities.
   */
  available?: string[];
}

/**
 * The virtual machine sizes capability.
 */
export interface VmSizesCapability {
  /**
   * The list of virtual machine size capabilities.
   */
  available?: string[];
}

/**
 * The virtual machine type compatibility filter.
 */
export interface VmSizeCompatibilityFilter {
  /**
   * The mode for the filter.
   */
  filterMode?: string;
  /**
   * The list of regions.
   */
  regions?: string[];
  /**
   * The list of cluster types available.
   */
  clusterFlavors?: string[];
  /**
   * The list of node types.
   */
  nodeTypes?: string[];
  /**
   * The list of cluster versions.
   */
  clusterVersions?: string[];
  /**
   * The list of virtual machine sizes.
   */
  vmsizes?: string[];
}

/**
 * The regional quota capacity.
 */
export interface RegionalQuotaCapability {
  /**
   * The region name.
   */
  regionName?: string;
  /**
   * The number of cores used in the region.
   */
  coresUsed?: number;
  /**
   * The number of cores available in the region.
   */
  coresAvailable?: number;
}

/**
 * The regional quota capability.
 */
export interface QuotaCapability {
  /**
   * The number of cores used in the subscription.
   */
  coresUsed?: number;
  /**
   * The number of cores that the subscription allowed.
   */
  maxCoresAllowed?: number;
  /**
   * The list of region quota capabilities.
   */
  regionalQuotas?: RegionalQuotaCapability[];
}

/**
 * The Get Capabilities operation response.
 */
export interface CapabilitiesResult {
  /**
   * The version capability.
   */
  versions?: { [propertyName: string]: VersionsCapability };
  /**
   * The virtual machine size compatibility features.
   */
  regions?: { [propertyName: string]: RegionsCapability };
  /**
   * The virtual machine sizes.
   */
  vmSizes?: { [propertyName: string]: VmSizesCapability };
  /**
   * The virtual machine size compatibility filters.
   */
  vmSizeFilters?: VmSizeCompatibilityFilter[];
  /**
   * The capability features.
   */
  features?: string[];
  /**
   * The quota capability.
   */
  quota?: QuotaCapability;
}

/**
 * The details about the localizable name of a type of usage.
 */
export interface LocalizedName {
  /**
   * The name of the used resource.
   */
  value?: string;
  /**
   * The localized name of the used resource.
   */
  localizedValue?: string;
}

/**
 * The details about the usage of a particular limited resource.
 */
export interface Usage {
  /**
   * The type of measurement for usage.
   */
  unit?: string;
  /**
   * The current usage.
   */
  currentValue?: number;
  /**
   * The maximum allowed usage.
   */
  limit?: number;
  /**
   * The details about the localizable name of the used resource.
   */
  name?: LocalizedName;
}

/**
 * The response for the operation to get regional usages for a subscription.
 */
export interface UsagesListResult {
  /**
   * The list of usages.
   */
  value?: Usage[];
}

/**
 * This class represent a single filter object that defines a multidimensional set. The dimensions
 * of this set are Regions, ClusterFlavors, NodeTypes and ClusterVersions. The constraint should be
 * defined based on the following: FilterMode (Exclude vs Include), VMSizes (the vm sizes in affect
 * of exclusion/inclusion) and the ordering of the Filters. Later filters override previous
 * settings if conflicted.
 */
export interface VmSizeCompatibilityFilterV2 {
  /**
   * The filtering mode. Effectively this can enabling or disabling the VM sizes in a particular
   * set. Possible values include: 'Exclude', 'Include', 'Recommend', 'Default'
   */
  filterMode?: FilterMode;
  /**
   * The list of regions under the effect of the filter.
   */
  regions?: string[];
  /**
   * The list of cluster flavors under the effect of the filter.
   */
  clusterFlavors?: string[];
  /**
   * The list of node types affected by the filter.
   */
  nodeTypes?: string[];
  /**
   * The list of cluster versions affected in Major.Minor format.
   */
  clusterVersions?: string[];
  /**
   * The OSType affected, Windows or Linux.
   */
  osType?: OSType[];
  /**
   * The list of virtual machine sizes to include or exclude.
   */
  vmSizes?: string[];
}

/**
 * The vm size property
 */
export interface VmSizeProperty {
  /**
   * The vm size name.
   */
  name?: string;
  /**
   * The number of cores that the vm size has.
   */
  cores?: number;
  /**
   * The data disk storage tier of the vm size.
   */
  dataDiskStorageTier?: string;
  /**
   * The label of the vm size.
   */
  label?: string;
  /**
   * The max data disk count of the vm size.
   */
  maxDataDiskCount?: number;
  /**
   * The memory whose unit is MB of the vm size.
   */
  memoryInMb?: number;
  /**
   * This indicates this vm size is supported by virtual machines or not
   */
  supportedByVirtualMachines?: boolean;
  /**
   * The indicates this vm size is supported by web worker roles or not
   */
  supportedByWebWorkerRoles?: boolean;
  /**
   * The virtual machine resource disk size whose unit is MB of the vm size.
   */
  virtualMachineResourceDiskSizeInMb?: number;
  /**
   * The web worker resource disk size whose unit is MB of the vm size.
   */
  webWorkerResourceDiskSizeInMb?: number;
}

/**
 * The billing meters.
 */
export interface BillingMeters {
  /**
   * The virtual machine sizes.
   */
  meterParameter?: string;
  /**
   * The HDInsight meter guid.
   */
  meter?: string;
  /**
   * The unit of meter, VMHours or CoreHours.
   */
  unit?: string;
}

/**
 * The disk billing meters.
 */
export interface DiskBillingMeters {
  /**
   * The managed disk meter guid.
   */
  diskRpMeter?: string;
  /**
   * The managed disk billing sku, P30 or S30.
   */
  sku?: string;
  /**
   * The managed disk billing tier, Standard or Premium. Possible values include: 'Standard',
   * 'Premium'
   */
  tier?: Tier;
}

/**
 * The billing resources.
 */
export interface BillingResources {
  /**
   * The region or location.
   */
  region?: string;
  /**
   * The billing meter information.
   */
  billingMeters?: BillingMeters[];
  /**
   * The managed disk billing information.
   */
  diskBillingMeters?: DiskBillingMeters[];
}

/**
 * The response for the operation to get regional billingSpecs for a subscription.
 */
export interface BillingResponseListResult {
  /**
   * The virtual machine sizes to include or exclude.
   */
  vmSizes?: string[];
  /**
   * The vm sizes which enable encryption at host.
   */
  vmSizesWithEncryptionAtHost?: string[];
  /**
   * The virtual machine filtering mode. Effectively this can enabling or disabling the virtual
   * machine sizes in a particular set.
   */
  vmSizeFilters?: VmSizeCompatibilityFilterV2[];
  /**
   * The vm size properties.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly vmSizeProperties?: VmSizeProperty[];
  /**
   * The billing and managed disk billing resources for a region.
   */
  billingResources?: BillingResources[];
}

/**
 * The configuration object for the specified cluster.
 */
export interface ClusterConfigurations {
  /**
   * The configuration object for the specified configuration for the specified cluster.
   */
  configurations?: { [propertyName: string]: { [propertyName: string]: string } };
}

/**
 * Cluster monitoring extensions
 */
export interface Extension {
  /**
   * The workspace ID for the cluster monitoring extension.
   */
  workspaceId?: string;
  /**
   * The certificate for the cluster monitoring extensions.
   */
  primaryKey?: string;
}

/**
 * The Operations Management Suite (OMS) status response
 */
export interface ClusterMonitoringResponse {
  /**
   * The status of the Operations Management Suite (OMS) on the HDInsight cluster.
   */
  clusterMonitoringEnabled?: boolean;
  /**
   * The workspace ID of the Operations Management Suite (OMS) on the HDInsight cluster.
   */
  workspaceId?: string;
}

/**
 * The Operations Management Suite (OMS) parameters.
 */
export interface ClusterMonitoringRequest {
  /**
   * The Operations Management Suite (OMS) workspace ID.
   */
  workspaceId?: string;
  /**
   * The Operations Management Suite (OMS) workspace key.
   */
  primaryKey?: string;
}

/**
 * The persisted script action for cluster.
 */
export interface ScriptActionPersistedGetResponseSpec {
  /**
   * The name of script action.
   */
  name?: string;
  /**
   * The URI to the script.
   */
  uri?: string;
  /**
   * The parameters for the script provided.
   */
  parameters?: string;
  /**
   * The list of roles where script will be executed.
   */
  roles?: string[];
  /**
   * The application name for the script action.
   */
  applicationName?: string;
}

/**
 * The object that represents the operation.
 */
export interface OperationDisplay {
  /**
   * The service provider: Microsoft.HDInsight
   */
  provider?: string;
  /**
   * The resource on which the operation is performed: Cluster, Applications, etc.
   */
  resource?: string;
  /**
   * The operation type: read, write, delete, etc.
   */
  operation?: string;
  /**
   * Localized friendly description for the operation
   */
  description?: string;
}

/**
 * The definition of Dimension.
 */
export interface Dimension {
  /**
   * The name of the dimension.
   */
  name?: string;
  /**
   * The display name of the dimension.
   */
  displayName?: string;
  /**
   * The display name of the dimension.
   */
  internalName?: string;
  /**
   * The flag indicates whether the metric will be exported for shoebox or not.
   */
  toBeExportedForShoebox?: boolean;
}

/**
 * The details of metric specifications.
 */
export interface MetricSpecifications {
  /**
   * The name of the metric specification.
   */
  name?: string;
  /**
   * The display name of the metric specification.
   */
  displayName?: string;
  /**
   * The display description of the metric specification.
   */
  displayDescription?: string;
  /**
   * The unit of the metric specification.
   */
  unit?: string;
  /**
   * The aggregation type of the metric specification.
   */
  aggregationType?: string;
  /**
   * The supported aggregation types of the metric specification.
   */
  supportedAggregationTypes?: string[];
  /**
   * The supported time grain types of the metric specification.
   */
  supportedTimeGrainTypes?: string[];
  /**
   * The flag indicates whether enable regional mdm account or not.
   */
  enableRegionalMdmAccount?: boolean;
  /**
   * The source mdm account.
   */
  sourceMdmAccount?: string;
  /**
   * The source mdm namespace.
   */
  sourceMdmNamespace?: string;
  /**
   * The metric filter pattern.
   */
  metricFilterPattern?: string;
  /**
   * The flag indicates whether filling gap with zero.
   */
  fillGapWithZero?: boolean;
  /**
   * The category of the metric.
   */
  category?: string;
  /**
   * The override name of resource id dimension name.
   */
  resourceIdDimensionNameOverride?: string;
  /**
   * The flag indicates whether the metric is internal or not.
   */
  isInternal?: boolean;
  /**
   * The override name of delegate metric.
   */
  delegateMetricNameOverride?: string;
  /**
   * The dimensions of the metric specification.
   */
  dimensions?: Dimension[];
}

/**
 * The specification of the service.
 */
export interface ServiceSpecification {
  /**
   * The metric specifications.
   */
  metricSpecifications?: MetricSpecifications[];
}

/**
 * The details of operation.
 */
export interface OperationProperties {
  /**
   * The specification of the service.
   */
  serviceSpecification?: ServiceSpecification;
}

/**
 * The HDInsight REST API operation.
 */
export interface Operation {
  /**
   * The operation name: {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * The object that represents the operation.
   */
  display?: OperationDisplay;
  /**
   * The operation properties.
   */
  properties?: OperationProperties;
}

/**
 * The cluster host information.
 */
export interface HostInfo {
  /**
   * The host name
   */
  name?: string;
  /**
   * The Fully Qualified Domain Name of host
   */
  fqdn?: string;
  /**
   * The effective disk encryption key URL used by the host
   */
  effectiveDiskEncryptionKeyUrl?: string;
}

/**
 * An interface representing HDInsightManagementClientOptions.
 */
export interface HDInsightManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * The List Cluster operation response.
 * @extends Array<Cluster>
 */
export interface ClusterListResult extends Array<Cluster> {
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Result of the request to list cluster Applications. It contains a list of operations and a URL
 * link to get the next set of results.
 * @extends Array<Application>
 */
export interface ApplicationListResult extends Array<Application> {
  /**
   * The URL to get the next set of operation list results if there are any.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * The persisted script action for the cluster.
 * @extends Array<RuntimeScriptActionDetail>
 */
export interface ScriptActionsList extends Array<RuntimeScriptActionDetail> {
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * The list script execution history response.
 * @extends Array<RuntimeScriptActionDetail>
 */
export interface ScriptActionExecutionHistoryList extends Array<RuntimeScriptActionDetail> {
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Result of the request to list HDInsight operations. It contains a list of operations and a URL
 * link to get the next set of results.
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * The URL to get the next set of operation list results if there are any.
   */
  nextLink?: string;
}

/**
 * Defines values for DirectoryType.
 * Possible values include: 'ActiveDirectory'
 * @readonly
 * @enum {string}
 */
export type DirectoryType = 'ActiveDirectory';

/**
 * Defines values for DaysOfWeek.
 * Possible values include: 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday',
 * 'Sunday'
 * @readonly
 * @enum {string}
 */
export type DaysOfWeek = 'Monday' | 'Tuesday' | 'Wednesday' | 'Thursday' | 'Friday' | 'Saturday' | 'Sunday';

/**
 * Defines values for ResourceProviderConnection.
 * Possible values include: 'Inbound', 'Outbound'
 * @readonly
 * @enum {string}
 */
export type ResourceProviderConnection = 'Inbound' | 'Outbound';

/**
 * Defines values for PrivateLink.
 * Possible values include: 'Disabled', 'Enabled'
 * @readonly
 * @enum {string}
 */
export type PrivateLink = 'Disabled' | 'Enabled';

/**
 * Defines values for OSType.
 * Possible values include: 'Windows', 'Linux'
 * @readonly
 * @enum {string}
 */
export type OSType = 'Windows' | 'Linux';

/**
 * Defines values for Tier.
 * Possible values include: 'Standard', 'Premium'
 * @readonly
 * @enum {string}
 */
export type Tier = 'Standard' | 'Premium';

/**
 * Defines values for JsonWebKeyEncryptionAlgorithm.
 * Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'
 * @readonly
 * @enum {string}
 */
export type JsonWebKeyEncryptionAlgorithm = 'RSA-OAEP' | 'RSA-OAEP-256' | 'RSA1_5';

/**
 * Defines values for ResourceIdentityType.
 * Possible values include: 'SystemAssigned', 'UserAssigned', 'SystemAssigned, UserAssigned',
 * 'None'
 * @readonly
 * @enum {string}
 */
export type ResourceIdentityType = 'SystemAssigned' | 'UserAssigned' | 'SystemAssigned, UserAssigned' | 'None';

/**
 * Defines values for HDInsightClusterProvisioningState.
 * Possible values include: 'InProgress', 'Failed', 'Succeeded', 'Canceled', 'Deleting'
 * @readonly
 * @enum {string}
 */
export type HDInsightClusterProvisioningState = 'InProgress' | 'Failed' | 'Succeeded' | 'Canceled' | 'Deleting';

/**
 * Defines values for AsyncOperationState.
 * Possible values include: 'InProgress', 'Succeeded', 'Failed'
 * @readonly
 * @enum {string}
 */
export type AsyncOperationState = 'InProgress' | 'Succeeded' | 'Failed';

/**
 * Defines values for FilterMode.
 * Possible values include: 'Exclude', 'Include', 'Recommend', 'Default'
 * @readonly
 * @enum {string}
 */
export type FilterMode = 'Exclude' | 'Include' | 'Recommend' | 'Default';

/**
 * Contains response data for the create operation.
 */
export type ClustersCreateResponse = Cluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Cluster;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ClustersUpdateResponse = Cluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Cluster;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ClustersGetResponse = Cluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Cluster;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ClustersListByResourceGroupResponse = ClusterListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClusterListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ClustersListResponse = ClusterListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClusterListResult;
    };
};

/**
 * Contains response data for the getGatewaySettings operation.
 */
export type ClustersGetGatewaySettingsResponse = GatewaySettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GatewaySettings;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type ClustersBeginCreateResponse = Cluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Cluster;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type ClustersListByResourceGroupNextResponse = ClusterListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClusterListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ClustersListNextResponse = ClusterListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClusterListResult;
    };
};

/**
 * Contains response data for the listByCluster operation.
 */
export type ApplicationsListByClusterResponse = ApplicationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApplicationsGetResponse = Application & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Application;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ApplicationsCreateResponse = Application & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Application;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type ApplicationsBeginCreateResponse = Application & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Application;
    };
};

/**
 * Contains response data for the listByClusterNext operation.
 */
export type ApplicationsListByClusterNextResponse = ApplicationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationListResult;
    };
};

/**
 * Contains response data for the getCapabilities operation.
 */
export type LocationsGetCapabilitiesResponse = CapabilitiesResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CapabilitiesResult;
    };
};

/**
 * Contains response data for the listUsages operation.
 */
export type LocationsListUsagesResponse = UsagesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UsagesListResult;
    };
};

/**
 * Contains response data for the listBillingSpecs operation.
 */
export type LocationsListBillingSpecsResponse = BillingResponseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingResponseListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ConfigurationsListResponse = ClusterConfigurations & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClusterConfigurations;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ConfigurationsGetResponse = {
  /**
   * The response body properties.
   */
  [propertyName: string]: string;
} & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: { [propertyName: string]: string };
    };
};

/**
 * Contains response data for the getMonitoringStatus operation.
 */
export type ExtensionsGetMonitoringStatusResponse = ClusterMonitoringResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClusterMonitoringResponse;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ExtensionsGetResponse = Extension & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Extension;
    };
};

/**
 * Contains response data for the listByCluster operation.
 */
export type ScriptActionsListByClusterResponse = ScriptActionsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScriptActionsList;
    };
};

/**
 * Contains response data for the getExecutionDetail operation.
 */
export type ScriptActionsGetExecutionDetailResponse = RuntimeScriptActionDetail & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RuntimeScriptActionDetail;
    };
};

/**
 * Contains response data for the listByClusterNext operation.
 */
export type ScriptActionsListByClusterNextResponse = ScriptActionsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScriptActionsList;
    };
};

/**
 * Contains response data for the listByCluster operation.
 */
export type ScriptExecutionHistoryListByClusterResponse = ScriptActionExecutionHistoryList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScriptActionExecutionHistoryList;
    };
};

/**
 * Contains response data for the listByClusterNext operation.
 */
export type ScriptExecutionHistoryListByClusterNextResponse = ScriptActionExecutionHistoryList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScriptActionExecutionHistoryList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listHosts operation.
 */
export type VirtualMachinesListHostsResponse = Array<HostInfo> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostInfo[];
    };
};
