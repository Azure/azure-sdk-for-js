/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  ClusterMonitoringRequest,
  ExtensionsEnableMonitoringOptionalParams,
  ExtensionsGetMonitoringStatusOptionalParams,
  ExtensionsGetMonitoringStatusResponse,
  ExtensionsDisableMonitoringOptionalParams,
  AzureMonitorRequest,
  ExtensionsEnableAzureMonitorOptionalParams,
  ExtensionsGetAzureMonitorStatusOptionalParams,
  ExtensionsGetAzureMonitorStatusResponse,
  ExtensionsDisableAzureMonitorOptionalParams,
  Extension,
  ExtensionsCreateOptionalParams,
  ExtensionsGetOptionalParams,
  ExtensionsGetResponse,
  ExtensionsDeleteOptionalParams,
  ExtensionsGetAzureAsyncOperationStatusOptionalParams,
  ExtensionsGetAzureAsyncOperationStatusResponse
} from "../models";

/** Interface representing a Extensions. */
export interface Extensions {
  /**
   * Enables the Operations Management Suite (OMS) on the HDInsight cluster.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster.
   * @param parameters The Operations Management Suite (OMS) workspace parameters.
   * @param options The options parameters.
   */
  beginEnableMonitoring(
    resourceGroupName: string,
    clusterName: string,
    parameters: ClusterMonitoringRequest,
    options?: ExtensionsEnableMonitoringOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Enables the Operations Management Suite (OMS) on the HDInsight cluster.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster.
   * @param parameters The Operations Management Suite (OMS) workspace parameters.
   * @param options The options parameters.
   */
  beginEnableMonitoringAndWait(
    resourceGroupName: string,
    clusterName: string,
    parameters: ClusterMonitoringRequest,
    options?: ExtensionsEnableMonitoringOptionalParams
  ): Promise<void>;
  /**
   * Gets the status of Operations Management Suite (OMS) on the HDInsight cluster.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster.
   * @param options The options parameters.
   */
  getMonitoringStatus(
    resourceGroupName: string,
    clusterName: string,
    options?: ExtensionsGetMonitoringStatusOptionalParams
  ): Promise<ExtensionsGetMonitoringStatusResponse>;
  /**
   * Disables the Operations Management Suite (OMS) on the HDInsight cluster.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster.
   * @param options The options parameters.
   */
  beginDisableMonitoring(
    resourceGroupName: string,
    clusterName: string,
    options?: ExtensionsDisableMonitoringOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Disables the Operations Management Suite (OMS) on the HDInsight cluster.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster.
   * @param options The options parameters.
   */
  beginDisableMonitoringAndWait(
    resourceGroupName: string,
    clusterName: string,
    options?: ExtensionsDisableMonitoringOptionalParams
  ): Promise<void>;
  /**
   * Enables the Azure Monitor on the HDInsight cluster.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster.
   * @param parameters The Log Analytics workspace parameters.
   * @param options The options parameters.
   */
  beginEnableAzureMonitor(
    resourceGroupName: string,
    clusterName: string,
    parameters: AzureMonitorRequest,
    options?: ExtensionsEnableAzureMonitorOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Enables the Azure Monitor on the HDInsight cluster.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster.
   * @param parameters The Log Analytics workspace parameters.
   * @param options The options parameters.
   */
  beginEnableAzureMonitorAndWait(
    resourceGroupName: string,
    clusterName: string,
    parameters: AzureMonitorRequest,
    options?: ExtensionsEnableAzureMonitorOptionalParams
  ): Promise<void>;
  /**
   * Gets the status of Azure Monitor on the HDInsight cluster.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster.
   * @param options The options parameters.
   */
  getAzureMonitorStatus(
    resourceGroupName: string,
    clusterName: string,
    options?: ExtensionsGetAzureMonitorStatusOptionalParams
  ): Promise<ExtensionsGetAzureMonitorStatusResponse>;
  /**
   * Disables the Azure Monitor on the HDInsight cluster.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster.
   * @param options The options parameters.
   */
  beginDisableAzureMonitor(
    resourceGroupName: string,
    clusterName: string,
    options?: ExtensionsDisableAzureMonitorOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Disables the Azure Monitor on the HDInsight cluster.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster.
   * @param options The options parameters.
   */
  beginDisableAzureMonitorAndWait(
    resourceGroupName: string,
    clusterName: string,
    options?: ExtensionsDisableAzureMonitorOptionalParams
  ): Promise<void>;
  /**
   * Creates an HDInsight cluster extension.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster.
   * @param extensionName The name of the cluster extension.
   * @param parameters The cluster extensions create request.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    clusterName: string,
    extensionName: string,
    parameters: Extension,
    options?: ExtensionsCreateOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Creates an HDInsight cluster extension.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster.
   * @param extensionName The name of the cluster extension.
   * @param parameters The cluster extensions create request.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    clusterName: string,
    extensionName: string,
    parameters: Extension,
    options?: ExtensionsCreateOptionalParams
  ): Promise<void>;
  /**
   * Gets the extension properties for the specified HDInsight cluster extension.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster.
   * @param extensionName The name of the cluster extension.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    clusterName: string,
    extensionName: string,
    options?: ExtensionsGetOptionalParams
  ): Promise<ExtensionsGetResponse>;
  /**
   * Deletes the specified extension for HDInsight cluster.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster.
   * @param extensionName The name of the cluster extension.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    clusterName: string,
    extensionName: string,
    options?: ExtensionsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes the specified extension for HDInsight cluster.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster.
   * @param extensionName The name of the cluster extension.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    clusterName: string,
    extensionName: string,
    options?: ExtensionsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Gets the async operation status.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster.
   * @param extensionName The name of the cluster extension.
   * @param operationId The long running operation id.
   * @param options The options parameters.
   */
  getAzureAsyncOperationStatus(
    resourceGroupName: string,
    clusterName: string,
    extensionName: string,
    operationId: string,
    options?: ExtensionsGetAzureAsyncOperationStatusOptionalParams
  ): Promise<ExtensionsGetAzureAsyncOperationStatusResponse>;
}
