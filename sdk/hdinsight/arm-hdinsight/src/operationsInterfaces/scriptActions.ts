/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  RuntimeScriptActionDetail,
  ScriptActionsListByClusterOptionalParams,
  ScriptActionsDeleteOptionalParams,
  ScriptActionsGetExecutionDetailOptionalParams,
  ScriptActionsGetExecutionDetailResponse,
  ScriptActionsGetExecutionAsyncOperationStatusOptionalParams,
  ScriptActionsGetExecutionAsyncOperationStatusResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ScriptActions. */
export interface ScriptActions {
  /**
   * Lists all the persisted script actions for the specified cluster.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster.
   * @param options The options parameters.
   */
  listByCluster(
    resourceGroupName: string,
    clusterName: string,
    options?: ScriptActionsListByClusterOptionalParams
  ): PagedAsyncIterableIterator<RuntimeScriptActionDetail>;
  /**
   * Deletes a specified persisted script action of the cluster.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster.
   * @param scriptName The name of the script.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    clusterName: string,
    scriptName: string,
    options?: ScriptActionsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Gets the script execution detail for the given script execution ID.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster.
   * @param scriptExecutionId The script execution Id
   * @param options The options parameters.
   */
  getExecutionDetail(
    resourceGroupName: string,
    clusterName: string,
    scriptExecutionId: string,
    options?: ScriptActionsGetExecutionDetailOptionalParams
  ): Promise<ScriptActionsGetExecutionDetailResponse>;
  /**
   * Gets the async operation status of execution operation.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster.
   * @param operationId The long running operation id.
   * @param options The options parameters.
   */
  getExecutionAsyncOperationStatus(
    resourceGroupName: string,
    clusterName: string,
    operationId: string,
    options?: ScriptActionsGetExecutionAsyncOperationStatusOptionalParams
  ): Promise<ScriptActionsGetExecutionAsyncOperationStatusResponse>;
}
