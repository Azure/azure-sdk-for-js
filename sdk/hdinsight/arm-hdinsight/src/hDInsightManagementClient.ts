/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import { TokenCredential } from "@azure/core-auth";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as operations from "./operations";
import { HDInsightManagementClientContext } from "./hDInsightManagementClientContext";

class HDInsightManagementClient extends HDInsightManagementClientContext {
  // Operation groups
  clusters: operations.Clusters;
  applications: operations.Applications;
  locations: operations.Locations;
  configurations: operations.Configurations;
  extensions: operations.Extensions;
  scriptActions: operations.ScriptActions;
  scriptExecutionHistory: operations.ScriptExecutionHistory;
  operations: operations.Operations;
  virtualMachines: operations.VirtualMachines;

  /**
   * Initializes a new instance of the HDInsightManagementClient class.
   * @param credentials Credentials needed for the client to connect to Azure. Credentials
   * implementing the TokenCredential interface from the @azure/identity package are recommended. For
   * more information about these credentials, see
   * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the
   * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and
   * @azure/ms-rest-browserauth are also supported.
   * @param subscriptionId The subscription credentials which uniquely identify Microsoft Azure
   * subscription. The subscription ID forms part of the URI for every service call.
   * @param [options] The parameter options
   */
  constructor(
    credentials: msRest.ServiceClientCredentials | TokenCredential,
    subscriptionId: string,
    options?: Models.HDInsightManagementClientOptions
  ) {
    super(credentials, subscriptionId, options);
    this.clusters = new operations.Clusters(this);
    this.applications = new operations.Applications(this);
    this.locations = new operations.Locations(this);
    this.configurations = new operations.Configurations(this);
    this.extensions = new operations.Extensions(this);
    this.scriptActions = new operations.ScriptActions(this);
    this.scriptExecutionHistory = new operations.ScriptExecutionHistory(this);
    this.operations = new operations.Operations(this);
    this.virtualMachines = new operations.VirtualMachines(this);
  }
}

// Operation Specifications

export {
  HDInsightManagementClient,
  HDInsightManagementClientContext,
  Models as HDInsightManagementModels,
  Mappers as HDInsightManagementMappers
};
export * from "./operations";
