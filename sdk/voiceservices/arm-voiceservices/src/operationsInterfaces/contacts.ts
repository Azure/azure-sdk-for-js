/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  Contact,
  ContactsListByCommunicationsGatewayOptionalParams,
  ContactsGetOptionalParams,
  ContactsGetResponse,
  ContactsCreateOrUpdateOptionalParams,
  ContactsCreateOrUpdateResponse,
  ContactsDeleteOptionalParams,
  ContactUpdate,
  ContactsUpdateOptionalParams,
  ContactsUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Contacts. */
export interface Contacts {
  /**
   * List Contact resources by CommunicationsGateway
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param communicationsGatewayName Unique identifier for this deployment
   * @param options The options parameters.
   */
  listByCommunicationsGateway(
    resourceGroupName: string,
    communicationsGatewayName: string,
    options?: ContactsListByCommunicationsGatewayOptionalParams
  ): PagedAsyncIterableIterator<Contact>;
  /**
   * Get a Contact
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param communicationsGatewayName Unique identifier for this deployment
   * @param contactName Unique identifier for this contact
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    communicationsGatewayName: string,
    contactName: string,
    options?: ContactsGetOptionalParams
  ): Promise<ContactsGetResponse>;
  /**
   * Create a Contact
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param communicationsGatewayName Unique identifier for this deployment
   * @param contactName Unique identifier for this contact
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    communicationsGatewayName: string,
    contactName: string,
    resource: Contact,
    options?: ContactsCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ContactsCreateOrUpdateResponse>,
      ContactsCreateOrUpdateResponse
    >
  >;
  /**
   * Create a Contact
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param communicationsGatewayName Unique identifier for this deployment
   * @param contactName Unique identifier for this contact
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    communicationsGatewayName: string,
    contactName: string,
    resource: Contact,
    options?: ContactsCreateOrUpdateOptionalParams
  ): Promise<ContactsCreateOrUpdateResponse>;
  /**
   * Delete a Contact
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param communicationsGatewayName Unique identifier for this deployment
   * @param contactName Unique identifier for this contact
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    communicationsGatewayName: string,
    contactName: string,
    options?: ContactsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Delete a Contact
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param communicationsGatewayName Unique identifier for this deployment
   * @param contactName Unique identifier for this contact
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    communicationsGatewayName: string,
    contactName: string,
    options?: ContactsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Update a Contact
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param communicationsGatewayName Unique identifier for this deployment
   * @param contactName Unique identifier for this contact
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    communicationsGatewayName: string,
    contactName: string,
    properties: ContactUpdate,
    options?: ContactsUpdateOptionalParams
  ): Promise<ContactsUpdateResponse>;
}
