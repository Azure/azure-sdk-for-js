"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestLinesDeleteHeaders = exports.TestLinesCreateOrUpdateHeaders = exports.CommunicationsGatewaysDeleteHeaders = exports.CommunicationsGatewaysCreateOrUpdateHeaders = exports.TestLine = exports.CommunicationsGateway = exports.TrackedResource = exports.TestLineUpdate = exports.TestLineListResult = exports.CommunicationsGatewayUpdate = exports.CheckNameAvailabilityResponse = exports.CheckNameAvailabilityRequest = exports.SystemData = exports.Resource = exports.PrimaryRegionProperties = exports.ServiceRegionProperties = exports.CommunicationsGatewayListResult = exports.ErrorAdditionalInfo = exports.ErrorDetail = exports.ErrorResponse = exports.OperationDisplay = exports.Operation = exports.OperationListResult = void 0;
exports.OperationListResult = {
    type: {
        name: "Composite",
        className: "OperationListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Operation"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.Operation = {
    type: {
        name: "Composite",
        className: "Operation",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            isDataAction: {
                serializedName: "isDataAction",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            },
            display: {
                serializedName: "display",
                type: {
                    name: "Composite",
                    className: "OperationDisplay"
                }
            },
            origin: {
                serializedName: "origin",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            actionType: {
                serializedName: "actionType",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.OperationDisplay = {
    type: {
        name: "Composite",
        className: "OperationDisplay",
        modelProperties: {
            provider: {
                serializedName: "provider",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "resource",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            operation: {
                serializedName: "operation",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ErrorResponse = {
    type: {
        name: "Composite",
        className: "ErrorResponse",
        modelProperties: {
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ErrorDetail"
                }
            }
        }
    }
};
exports.ErrorDetail = {
    type: {
        name: "Composite",
        className: "ErrorDetail",
        modelProperties: {
            code: {
                serializedName: "code",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            target: {
                serializedName: "target",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            details: {
                serializedName: "details",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ErrorDetail"
                        }
                    }
                }
            },
            additionalInfo: {
                serializedName: "additionalInfo",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ErrorAdditionalInfo"
                        }
                    }
                }
            }
        }
    }
};
exports.ErrorAdditionalInfo = {
    type: {
        name: "Composite",
        className: "ErrorAdditionalInfo",
        modelProperties: {
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            info: {
                serializedName: "info",
                readOnly: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "any" } }
                }
            }
        }
    }
};
exports.CommunicationsGatewayListResult = {
    type: {
        name: "Composite",
        className: "CommunicationsGatewayListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CommunicationsGateway"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ServiceRegionProperties = {
    type: {
        name: "Composite",
        className: "ServiceRegionProperties",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            primaryRegionProperties: {
                serializedName: "primaryRegionProperties",
                type: {
                    name: "Composite",
                    className: "PrimaryRegionProperties"
                }
            }
        }
    }
};
exports.PrimaryRegionProperties = {
    type: {
        name: "Composite",
        className: "PrimaryRegionProperties",
        modelProperties: {
            operatorAddresses: {
                serializedName: "operatorAddresses",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            esrpAddresses: {
                serializedName: "esrpAddresses",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            allowedSignalingSourceAddressPrefixes: {
                defaultValue: [],
                serializedName: "allowedSignalingSourceAddressPrefixes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            allowedMediaSourceAddressPrefixes: {
                defaultValue: [],
                serializedName: "allowedMediaSourceAddressPrefixes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
exports.Resource = {
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            }
        }
    }
};
exports.SystemData = {
    type: {
        name: "Composite",
        className: "SystemData",
        modelProperties: {
            createdBy: {
                serializedName: "createdBy",
                type: {
                    name: "String"
                }
            },
            createdByType: {
                serializedName: "createdByType",
                type: {
                    name: "String"
                }
            },
            createdAt: {
                serializedName: "createdAt",
                type: {
                    name: "DateTime"
                }
            },
            lastModifiedBy: {
                serializedName: "lastModifiedBy",
                type: {
                    name: "String"
                }
            },
            lastModifiedByType: {
                serializedName: "lastModifiedByType",
                type: {
                    name: "String"
                }
            },
            lastModifiedAt: {
                serializedName: "lastModifiedAt",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
exports.CheckNameAvailabilityRequest = {
    type: {
        name: "Composite",
        className: "CheckNameAvailabilityRequest",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.CheckNameAvailabilityResponse = {
    type: {
        name: "Composite",
        className: "CheckNameAvailabilityResponse",
        modelProperties: {
            nameAvailable: {
                serializedName: "nameAvailable",
                type: {
                    name: "Boolean"
                }
            },
            reason: {
                serializedName: "reason",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.CommunicationsGatewayUpdate = {
    type: {
        name: "Composite",
        className: "CommunicationsGatewayUpdate",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
exports.TestLineListResult = {
    type: {
        name: "Composite",
        className: "TestLineListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TestLine"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.TestLineUpdate = {
    type: {
        name: "Composite",
        className: "TestLineUpdate",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
exports.TrackedResource = {
    type: {
        name: "Composite",
        className: "TrackedResource",
        modelProperties: Object.assign(Object.assign({}, exports.Resource.type.modelProperties), { tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }, location: {
                serializedName: "location",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
exports.CommunicationsGateway = {
    type: {
        name: "Composite",
        className: "CommunicationsGateway",
        modelProperties: Object.assign(Object.assign({}, exports.TrackedResource.type.modelProperties), { provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, status: {
                serializedName: "properties.status",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, serviceLocations: {
                serializedName: "properties.serviceLocations",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ServiceRegionProperties"
                        }
                    }
                }
            }, connectivity: {
                serializedName: "properties.connectivity",
                type: {
                    name: "String"
                }
            }, codecs: {
                serializedName: "properties.codecs",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, e911Type: {
                serializedName: "properties.e911Type",
                type: {
                    name: "String"
                }
            }, platforms: {
                constraints: {
                    MinItems: 1
                },
                serializedName: "properties.platforms",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, apiBridge: {
                serializedName: "properties.apiBridge",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "any" } }
                }
            }, autoGeneratedDomainNameLabelScope: {
                serializedName: "properties.autoGeneratedDomainNameLabelScope",
                type: {
                    name: "String"
                }
            }, autoGeneratedDomainNameLabel: {
                serializedName: "properties.autoGeneratedDomainNameLabel",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, teamsVoicemailPilotNumber: {
                serializedName: "properties.teamsVoicemailPilotNumber",
                type: {
                    name: "String"
                }
            }, onPremMcpEnabled: {
                defaultValue: false,
                serializedName: "properties.onPremMcpEnabled",
                type: {
                    name: "Boolean"
                }
            }, emergencyDialStrings: {
                defaultValue: ["911", "933"],
                serializedName: "properties.emergencyDialStrings",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
exports.TestLine = {
    type: {
        name: "Composite",
        className: "TestLine",
        modelProperties: Object.assign(Object.assign({}, exports.TrackedResource.type.modelProperties), { provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, phoneNumber: {
                serializedName: "properties.phoneNumber",
                type: {
                    name: "String"
                }
            }, purpose: {
                serializedName: "properties.purpose",
                type: {
                    name: "String"
                }
            } })
    }
};
exports.CommunicationsGatewaysCreateOrUpdateHeaders = {
    type: {
        name: "Composite",
        className: "CommunicationsGatewaysCreateOrUpdateHeaders",
        modelProperties: {
            retryAfter: {
                serializedName: "retry-after",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.CommunicationsGatewaysDeleteHeaders = {
    type: {
        name: "Composite",
        className: "CommunicationsGatewaysDeleteHeaders",
        modelProperties: {
            retryAfter: {
                serializedName: "retry-after",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.TestLinesCreateOrUpdateHeaders = {
    type: {
        name: "Composite",
        className: "TestLinesCreateOrUpdateHeaders",
        modelProperties: {
            retryAfter: {
                serializedName: "retry-after",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.TestLinesDeleteHeaders = {
    type: {
        name: "Composite",
        className: "TestLinesDeleteHeaders",
        modelProperties: {
            retryAfter: {
                serializedName: "retry-after",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
//# sourceMappingURL=mappers.js.map