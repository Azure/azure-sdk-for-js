"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.KnownTestLinePurpose = exports.KnownCheckNameAvailabilityReason = exports.KnownCreatedByType = exports.KnownAutoGeneratedDomainNameLabelScope = exports.KnownCommunicationsPlatform = exports.KnownE911Type = exports.KnownTeamsCodecs = exports.KnownConnectivity = exports.KnownStatus = exports.KnownProvisioningState = exports.KnownActionType = exports.KnownOrigin = void 0;
/** Known values of {@link Origin} that the service accepts. */
var KnownOrigin;
(function (KnownOrigin) {
    /** User */
    KnownOrigin["User"] = "user";
    /** System */
    KnownOrigin["System"] = "system";
    /** UserSystem */
    KnownOrigin["UserSystem"] = "user,system";
})(KnownOrigin || (exports.KnownOrigin = KnownOrigin = {}));
/** Known values of {@link ActionType} that the service accepts. */
var KnownActionType;
(function (KnownActionType) {
    /** Internal */
    KnownActionType["Internal"] = "Internal";
})(KnownActionType || (exports.KnownActionType = KnownActionType = {}));
/** Known values of {@link ProvisioningState} that the service accepts. */
var KnownProvisioningState;
(function (KnownProvisioningState) {
    /** Succeeded */
    KnownProvisioningState["Succeeded"] = "Succeeded";
    /** Failed */
    KnownProvisioningState["Failed"] = "Failed";
    /** Canceled */
    KnownProvisioningState["Canceled"] = "Canceled";
})(KnownProvisioningState || (exports.KnownProvisioningState = KnownProvisioningState = {}));
/** Known values of {@link Status} that the service accepts. */
var KnownStatus;
(function (KnownStatus) {
    /** The resource has been created or updated, but the CommunicationsGateway service has not yet been updated to reflect the changes. */
    KnownStatus["ChangePending"] = "ChangePending";
    /** The CommunicationsGateway service is up and running with the parameters specified in the resource. */
    KnownStatus["Complete"] = "Complete";
})(KnownStatus || (exports.KnownStatus = KnownStatus = {}));
/** Known values of {@link Connectivity} that the service accepts. */
var KnownConnectivity;
(function (KnownConnectivity) {
    /** This deployment connects to the operator network using a Public IP address, e.g. when using MAPS */
    KnownConnectivity["PublicAddress"] = "PublicAddress";
})(KnownConnectivity || (exports.KnownConnectivity = KnownConnectivity = {}));
/** Known values of {@link TeamsCodecs} that the service accepts. */
var KnownTeamsCodecs;
(function (KnownTeamsCodecs) {
    /** Pcma */
    KnownTeamsCodecs["Pcma"] = "PCMA";
    /** Pcmu */
    KnownTeamsCodecs["Pcmu"] = "PCMU";
    /** G722 */
    KnownTeamsCodecs["G722"] = "G722";
    /** G7222 */
    KnownTeamsCodecs["G7222"] = "G722_2";
    /** Silk8 */
    KnownTeamsCodecs["Silk8"] = "SILK_8";
    /** Silk16 */
    KnownTeamsCodecs["Silk16"] = "SILK_16";
})(KnownTeamsCodecs || (exports.KnownTeamsCodecs = KnownTeamsCodecs = {}));
/** Known values of {@link E911Type} that the service accepts. */
var KnownE911Type;
(function (KnownE911Type) {
    /** Emergency calls are not handled different from other calls */
    KnownE911Type["Standard"] = "Standard";
    /** Emergency calls are routed directly to the ESRP */
    KnownE911Type["DirectToEsrp"] = "DirectToEsrp";
})(KnownE911Type || (exports.KnownE911Type = KnownE911Type = {}));
/** Known values of {@link CommunicationsPlatform} that the service accepts. */
var KnownCommunicationsPlatform;
(function (KnownCommunicationsPlatform) {
    /** OperatorConnect */
    KnownCommunicationsPlatform["OperatorConnect"] = "OperatorConnect";
    /** TeamsPhoneMobile */
    KnownCommunicationsPlatform["TeamsPhoneMobile"] = "TeamsPhoneMobile";
})(KnownCommunicationsPlatform || (exports.KnownCommunicationsPlatform = KnownCommunicationsPlatform = {}));
/** Known values of {@link AutoGeneratedDomainNameLabelScope} that the service accepts. */
var KnownAutoGeneratedDomainNameLabelScope;
(function (KnownAutoGeneratedDomainNameLabelScope) {
    /** TenantReuse */
    KnownAutoGeneratedDomainNameLabelScope["TenantReuse"] = "TenantReuse";
    /** SubscriptionReuse */
    KnownAutoGeneratedDomainNameLabelScope["SubscriptionReuse"] = "SubscriptionReuse";
    /** ResourceGroupReuse */
    KnownAutoGeneratedDomainNameLabelScope["ResourceGroupReuse"] = "ResourceGroupReuse";
    /** NoReuse */
    KnownAutoGeneratedDomainNameLabelScope["NoReuse"] = "NoReuse";
})(KnownAutoGeneratedDomainNameLabelScope || (exports.KnownAutoGeneratedDomainNameLabelScope = KnownAutoGeneratedDomainNameLabelScope = {}));
/** Known values of {@link CreatedByType} that the service accepts. */
var KnownCreatedByType;
(function (KnownCreatedByType) {
    /** User */
    KnownCreatedByType["User"] = "User";
    /** Application */
    KnownCreatedByType["Application"] = "Application";
    /** ManagedIdentity */
    KnownCreatedByType["ManagedIdentity"] = "ManagedIdentity";
    /** Key */
    KnownCreatedByType["Key"] = "Key";
})(KnownCreatedByType || (exports.KnownCreatedByType = KnownCreatedByType = {}));
/** Known values of {@link CheckNameAvailabilityReason} that the service accepts. */
var KnownCheckNameAvailabilityReason;
(function (KnownCheckNameAvailabilityReason) {
    /** Invalid */
    KnownCheckNameAvailabilityReason["Invalid"] = "Invalid";
    /** AlreadyExists */
    KnownCheckNameAvailabilityReason["AlreadyExists"] = "AlreadyExists";
})(KnownCheckNameAvailabilityReason || (exports.KnownCheckNameAvailabilityReason = KnownCheckNameAvailabilityReason = {}));
/** Known values of {@link TestLinePurpose} that the service accepts. */
var KnownTestLinePurpose;
(function (KnownTestLinePurpose) {
    /** Manual */
    KnownTestLinePurpose["Manual"] = "Manual";
    /** Automated */
    KnownTestLinePurpose["Automated"] = "Automated";
})(KnownTestLinePurpose || (exports.KnownTestLinePurpose = KnownTestLinePurpose = {}));
//# sourceMappingURL=index.js.map