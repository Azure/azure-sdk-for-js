{"version":3,"file":"testLines.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/testLines.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  TestLine,\n  TestLinesListByCommunicationsGatewayOptionalParams,\n  TestLinesGetOptionalParams,\n  TestLinesGetResponse,\n  TestLinesCreateOrUpdateOptionalParams,\n  TestLinesCreateOrUpdateResponse,\n  TestLinesDeleteOptionalParams,\n  TestLineUpdate,\n  TestLinesUpdateOptionalParams,\n  TestLinesUpdateResponse\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a TestLines. */\nexport interface TestLines {\n  /**\n   * List TestLine resources by CommunicationsGateway\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param communicationsGatewayName Unique identifier for this deployment\n   * @param options The options parameters.\n   */\n  listByCommunicationsGateway(\n    resourceGroupName: string,\n    communicationsGatewayName: string,\n    options?: TestLinesListByCommunicationsGatewayOptionalParams\n  ): PagedAsyncIterableIterator<TestLine>;\n  /**\n   * Get a TestLine\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param communicationsGatewayName Unique identifier for this deployment\n   * @param testLineName Unique identifier for this test line\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    communicationsGatewayName: string,\n    testLineName: string,\n    options?: TestLinesGetOptionalParams\n  ): Promise<TestLinesGetResponse>;\n  /**\n   * Create a TestLine\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param communicationsGatewayName Unique identifier for this deployment\n   * @param testLineName Unique identifier for this test line\n   * @param resource Resource create parameters.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    communicationsGatewayName: string,\n    testLineName: string,\n    resource: TestLine,\n    options?: TestLinesCreateOrUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<TestLinesCreateOrUpdateResponse>,\n      TestLinesCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Create a TestLine\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param communicationsGatewayName Unique identifier for this deployment\n   * @param testLineName Unique identifier for this test line\n   * @param resource Resource create parameters.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    communicationsGatewayName: string,\n    testLineName: string,\n    resource: TestLine,\n    options?: TestLinesCreateOrUpdateOptionalParams\n  ): Promise<TestLinesCreateOrUpdateResponse>;\n  /**\n   * Delete a TestLine\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param communicationsGatewayName Unique identifier for this deployment\n   * @param testLineName Unique identifier for this test line\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    communicationsGatewayName: string,\n    testLineName: string,\n    options?: TestLinesDeleteOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Delete a TestLine\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param communicationsGatewayName Unique identifier for this deployment\n   * @param testLineName Unique identifier for this test line\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    communicationsGatewayName: string,\n    testLineName: string,\n    options?: TestLinesDeleteOptionalParams\n  ): Promise<void>;\n  /**\n   * Update a TestLine\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param communicationsGatewayName Unique identifier for this deployment\n   * @param testLineName Unique identifier for this test line\n   * @param properties The resource properties to be updated.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    communicationsGatewayName: string,\n    testLineName: string,\n    properties: TestLineUpdate,\n    options?: TestLinesUpdateOptionalParams\n  ): Promise<TestLinesUpdateResponse>;\n}\n"]}