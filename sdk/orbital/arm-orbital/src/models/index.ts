/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** An error response from the service. */
export interface CloudError {
  /** An error response from the service. */
  error?: CloudErrorBody;
}

/** An error response from the service. */
export interface CloudErrorBody {
  /** An identifier for the error. Codes are invariant and are intended to be consumed programmatically. */
  code?: string;
  /** A message describing the error, intended to be suitable for display in a user interface. */
  message?: string;
  /** The target of the particular error. For example, the name of the property in error. */
  target?: string;
  /** A list of additional details about the error. */
  details?: CloudErrorBody[];
}

/** Response for the ListSpacecrafts API service call. */
export interface SpacecraftListResult {
  /** A list of spacecraft resources in a resource group. */
  value?: Spacecraft[];
  /**
   * The URL to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Authorized Ground Stations for the link */
export interface SpacecraftLink {
  /** Link name */
  name: string;
  /** Center Frequency in MHz */
  centerFrequencyMHz: number;
  /** Bandwidth in MHz */
  bandwidthMHz: number;
  /** Direction (uplink or downlink) */
  direction: Direction;
  /** polarization. eg (RHCP, LHCP) */
  polarization: Polarization;
  /**
   * Authorized Ground Stations
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly authorizations?: AuthorizedGroundstation[];
}

/** Authorized groundstation */
export interface AuthorizedGroundstation {
  /** Groundstation name */
  groundStation?: string;
  /** Date of authorization expiration */
  expirationDate?: Date;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Tags object for patch operations. */
export interface TagsObject {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** Response for the ListContacts API service call. */
export interface ContactListResult {
  /** A list of contact resources in a resource group. */
  value?: Contact[];
  /**
   * The URL to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** The configuration associated with the allocated antenna. */
export interface ContactsPropertiesAntennaConfiguration {
  /** The destination IP a packet can be sent to. This would for example be the TCP endpoint you would send data to. */
  destinationIp?: string;
  /** List of Source IP */
  sourceIps?: string[];
}

/** Resource Reference */
export interface ResourceReference {
  /** Resource ID. */
  id?: string;
}

/** Parameters that define the contact resource. */
export interface ContactParameters {
  /** The reference to the contact profile resource. */
  contactProfile: ContactParametersContactProfile;
  /** Name of Azure Ground Station. */
  groundStationName: string;
  /** Start time of a contact. */
  startTime: Date;
  /** End time of a contact. */
  endTime: Date;
}

/** Response for the ListAvailableContacts API service call. */
export interface AvailableContactsListResult {
  /** A list of available contacts */
  value?: AvailableContacts[];
  /**
   * The URL to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Customer retrieves list of Available Contacts for a spacecraft resource. Later, one of the available contact can be selected to create a contact. */
export interface AvailableContacts {
  /** The reference to the spacecraft resource. */
  spacecraft?: AvailableContactsSpacecraft;
  /**
   * Name of Azure Ground Station.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly groundStationName?: string;
  /**
   * Maximum elevation of the antenna during the contact in decimal degrees.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maximumElevationDegrees?: number;
  /**
   * Time at which antenna transmit will be enabled.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly txStartTime?: Date;
  /**
   * Time at which antenna transmit will be disabled.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly txEndTime?: Date;
  /**
   * Earliest time to receive a signal.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly rxStartTime?: Date;
  /**
   * Time to lost receiving a signal.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly rxEndTime?: Date;
  /**
   * Azimuth of the antenna at the start of the contact in decimal degrees.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startAzimuthDegrees?: number;
  /**
   * Azimuth of the antenna at the end of the contact in decimal degrees.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endAzimuthDegrees?: number;
  /**
   * Spacecraft elevation above the horizon at contact start.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startElevationDegrees?: number;
  /**
   * Spacecraft elevation above the horizon at contact end.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endElevationDegrees?: number;
}

/** Contact Instance Properties */
export interface ContactInstanceProperties {
  /**
   * Maximum elevation of the antenna during the contact in decimal degrees.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maximumElevationDegrees?: number;
  /**
   * Time at which antenna transmit will be enabled.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly txStartTime?: Date;
  /**
   * Time at which antenna transmit will be disabled.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly txEndTime?: Date;
  /**
   * Earliest time to receive a signal.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly rxStartTime?: Date;
  /**
   * Time to lost receiving a signal.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly rxEndTime?: Date;
  /**
   * Azimuth of the antenna at the start of the contact in decimal degrees.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startAzimuthDegrees?: number;
  /**
   * Azimuth of the antenna at the end of the contact in decimal degrees.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endAzimuthDegrees?: number;
  /**
   * Spacecraft elevation above the horizon at contact start.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startElevationDegrees?: number;
  /**
   * Spacecraft elevation above the horizon at contact end.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endElevationDegrees?: number;
}

/** List of Contact Profile Resource Properties. */
export interface ContactProfilesProperties {
  /** The current state of the resource's creation, deletion, or modification */
  provisioningState?: ContactProfilesPropertiesProvisioningState;
  /** Minimum viable contact duration in ISO 8601 format. */
  minimumViableContactDuration?: string;
  /** Minimum viable elevation for the contact in decimal degrees. */
  minimumElevationDegrees?: number;
  /** Auto track configuration. */
  autoTrackingConfiguration?: AutoTrackingConfiguration;
  /** The URI of the Event Hub used for telemetry */
  eventHubUri?: string;
  /** Network configuration of customer virtual network. */
  networkConfiguration: ContactProfilesPropertiesNetworkConfiguration;
  /** Links of the Contact Profile */
  links: ContactProfileLink[];
}

/** Network configuration of customer virtual network. */
export interface ContactProfilesPropertiesNetworkConfiguration {
  /** Customer subnet ARM resource identifier. */
  subnetId: string;
}

/** Contact Profile Link */
export interface ContactProfileLink {
  /** Link name */
  name: string;
  /** polarization. eg (RHCP, LHCP) */
  polarization: Polarization;
  /** Direction (uplink or downlink) */
  direction: Direction;
  /** Gain To Noise Temperature in db/K. */
  gainOverTemperature?: number;
  /** Effective Isotropic Radiated Power (EIRP) in dBW. */
  eirpdBW?: number;
  /** Contact Profile Link Channel */
  channels: ContactProfileLinkChannel[];
}

/** Contact Profile Link Channel */
export interface ContactProfileLinkChannel {
  /** Channel name */
  name: string;
  /** Center Frequency in MHz */
  centerFrequencyMHz: number;
  /** Bandwidth in MHz */
  bandwidthMHz: number;
  /** Customer End point to store/retrieve data during a contact. */
  endPoint: EndPoint;
  /** Configuration for modulation */
  modulationConfiguration?: string;
  /** Configuration for demodulation */
  demodulationConfiguration?: string;
  /** Configuration for encoding */
  encodingConfiguration?: string;
  /** Configuration for decoding */
  decodingConfiguration?: string;
}

/** Customer End point to store/retrieve data during a contact. */
export interface EndPoint {
  /** IP Address. */
  ipAddress: string;
  /** Name of an end point. */
  endPointName: string;
  /** TCP port to listen on to receive data. */
  port: string;
  /** Protocol either UDP or TCP. */
  protocol: Protocol;
}

/** Response for the ListContactProfiles API service call. */
export interface ContactProfileListResult {
  /** A list of contact profile resources in a resource group. */
  value?: ContactProfile[];
  /**
   * The URL to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Response for the AvailableGroundStations API service call. */
export interface AvailableGroundStationListResult {
  /** A list of ground station resources. */
  value?: AvailableGroundStation[];
  /**
   * The URL to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** GroundStations available to schedule Contacts */
export interface AvailableGroundStation {
  /**
   * Id of groundStation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Name of the ground station.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /** Azure region */
  location?: string;
  /**
   * Resource type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** City of ground station. */
  city?: string;
  /** Ground station provider name. */
  providerName?: string;
  /** Longitude of the ground station in decimal degrees. */
  longitudeDegrees?: number;
  /** Latitude of the ground station in decimal degrees. */
  latitudeDegrees?: number;
  /** Altitude of the ground station */
  altitudeMeters?: number;
  /** Release Status of a ground station */
  releaseMode?: ReleaseMode;
}

/** Properties object for Available groundstation. */
export interface AvailableGroundStationPropertiesAutoGenerated {
  /** City of ground station. */
  city?: string;
  /** Ground station provider name. */
  providerName?: string;
  /** Longitude of the ground station in decimal degrees. */
  longitudeDegrees?: number;
  /** Latitude of the ground station in decimal degrees. */
  latitudeDegrees?: number;
  /** Altitude of the ground station */
  altitudeMeters?: number;
  /** Release Status of a ground station */
  releaseMode?: ReleaseMode;
}

/** Operation Result Entity. */
export interface OperationResult {
  /**
   * ID of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /** Status of a contact. */
  status?: Status;
  /**
   * The operation start time
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startTime?: Date;
  /**
   * The operation end time
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endTime?: Date;
  /**
   * Percentage completed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly percentComplete?: number;
  /** Operation result properties */
  properties?: Record<string, unknown>;
  /** Operation result error properties */
  error?: OperationResultErrorProperties;
}

/** Operation result error properties */
export interface OperationResultErrorProperties {
  /**
   * The code of the error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
}

/** Response for an API service call that lists the resource IDs of resources associated with another resource. */
export interface ResourceIdListResult {
  /** A list of Azure Resource IDs. */
  value?: ResourceIdListResultValueItem[];
  /**
   * The URL to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

export interface ResourceIdListResultValueItem {
  /** The Azure Resource ID */
  id?: string;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** The reference to the contact profile resource. */
export interface ContactsPropertiesContactProfile extends ResourceReference {}

/** The reference to the contact profile resource. */
export interface ContactParametersContactProfile extends ResourceReference {}

/** The reference to the spacecraft resource. */
export interface AvailableContactsSpacecraft extends ResourceReference {}

/** Properties of Contact resource. */
export interface AvailableContactsProperties
  extends ContactInstanceProperties {}

/** Properties of the contact profile resource. */
export interface ContactProfileProperties extends ContactProfilesProperties {}

/** The properties bag for this resource */
export interface AvailableGroundStationProperties
  extends AvailableGroundStationPropertiesAutoGenerated {}

/** Customer creates a spacecraft resource to schedule a contact. */
export interface Spacecraft extends TrackedResource {
  /**
   * A unique read-only string that changes whenever the resource is updated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly etag?: string;
  /** The current state of the resource's creation, deletion, or modification */
  provisioningState?: SpacecraftsPropertiesProvisioningState;
  /** NORAD ID of the spacecraft. */
  noradId?: string;
  /** Title line of Two Line Element (TLE). */
  titleLine?: string;
  /** Line 1 of Two Line Element (TLE). */
  tleLine1?: string;
  /** Line 2 of Two Line Element (TLE). */
  tleLine2?: string;
  /** Links of the Spacecraft */
  links?: SpacecraftLink[];
}

/** Customer creates a Contact Profile Resource, which will contain all of the configurations required for scheduling a contact. */
export interface ContactProfile extends TrackedResource {
  /**
   * A unique read-only string that changes whenever the resource is updated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly etag?: string;
  /** The current state of the resource's creation, deletion, or modification */
  provisioningState?: ContactProfilesPropertiesProvisioningState;
  /** Minimum viable contact duration in ISO 8601 format. */
  minimumViableContactDuration?: string;
  /** Minimum viable elevation for the contact in decimal degrees. */
  minimumElevationDegrees?: number;
  /** Auto track configuration. */
  autoTrackingConfiguration?: AutoTrackingConfiguration;
  /** The URI of the Event Hub used for telemetry */
  eventHubUri?: string;
  /** Network configuration of customer virtual network. */
  networkConfiguration?: ContactProfilesPropertiesNetworkConfiguration;
  /** Links of the Contact Profile */
  links?: ContactProfileLink[];
}

/** Customer creates a contact resource for a spacecraft resource. */
export interface Contact extends ProxyResource {
  /**
   * A unique read-only string that changes whenever the resource is updated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly etag?: string;
  /** The current state of the resource's creation, deletion, or modification */
  provisioningState?: ContactsPropertiesProvisioningState;
  /**
   * Status of a contact.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: Status;
  /** Reservation start time of a contact. */
  reservationStartTime?: Date;
  /** Reservation end time of a contact. */
  reservationEndTime?: Date;
  /**
   * Receive start time of a contact.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly rxStartTime?: Date;
  /**
   * Receive end time of a contact.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly rxEndTime?: Date;
  /**
   * Transmit start time of a contact.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly txStartTime?: Date;
  /**
   * Transmit end time of a contact.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly txEndTime?: Date;
  /**
   * Any error message while scheduling a contact.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorMessage?: string;
  /**
   * Maximum elevation of the antenna during the contact in decimal degrees.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maximumElevationDegrees?: number;
  /**
   * Azimuth of the antenna at the start of the contact in decimal degrees.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startAzimuthDegrees?: number;
  /**
   * Azimuth of the antenna at the end of the contact in decimal degrees.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endAzimuthDegrees?: number;
  /** Azure Ground Station name. */
  groundStationName?: string;
  /**
   * Spacecraft elevation above the horizon at contact start.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startElevationDegrees?: number;
  /**
   * Spacecraft elevation above the horizon at contact end.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endElevationDegrees?: number;
  /**
   * The configuration associated with the allocated antenna.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly antennaConfiguration?: ContactsPropertiesAntennaConfiguration;
  /** The reference to the contact profile resource. */
  contactProfile?: ContactsPropertiesContactProfile;
}

/** Defines headers for Spacecrafts_createOrUpdate operation. */
export interface SpacecraftsCreateOrUpdateHeaders {
  /** URL for checking the ongoing status of the operation. */
  azureAsyncOperation?: string;
}

/** Defines headers for Spacecrafts_delete operation. */
export interface SpacecraftsDeleteHeaders {
  /** URL for determining when an operation has completed. */
  location?: string;
}

/** Defines headers for Spacecrafts_updateTags operation. */
export interface SpacecraftsUpdateTagsHeaders {
  /** URL for determining when an operation has completed. */
  location?: string;
}

/** Defines headers for Spacecrafts_listAvailableContacts operation. */
export interface SpacecraftsListAvailableContactsHeaders {
  /** URL for determining when an operation has completed. */
  location?: string;
}

/** Defines headers for Spacecrafts_listAvailableContactsNext operation. */
export interface SpacecraftsListAvailableContactsNextHeaders {
  /** URL for determining when an operation has completed. */
  location?: string;
}

/** Defines headers for Contacts_create operation. */
export interface ContactsCreateHeaders {
  /** URL for checking the ongoing status of the operation. */
  azureAsyncOperation?: string;
}

/** Defines headers for Contacts_delete operation. */
export interface ContactsDeleteHeaders {
  /** URL for determining when an operation has completed. */
  location?: string;
}

/** Defines headers for ContactProfiles_createOrUpdate operation. */
export interface ContactProfilesCreateOrUpdateHeaders {
  /** URL for checking the ongoing status of the operation. */
  azureAsyncOperation?: string;
}

/** Defines headers for ContactProfiles_delete operation. */
export interface ContactProfilesDeleteHeaders {
  /** URL for determining when an operation has completed. */
  location?: string;
}

/** Defines headers for ContactProfiles_updateTags operation. */
export interface ContactProfilesUpdateTagsHeaders {
  /** URL for determining when an operation has completed. */
  location?: string;
}

/** Defines headers for OperationsResults_get operation. */
export interface OperationsResultsGetHeaders {
  /** URL for determining when an operation has completed. */
  location?: string;
}

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system"
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Creating */
  Creating = "Creating",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
  /** Updating */
  Updating = "Updating",
  /** Deleting */
  Deleting = "Deleting"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Updating** \
 * **Deleting**
 */
export type ProvisioningState = string;

/** Known values of {@link SpacecraftsPropertiesProvisioningState} that the service accepts. */
export enum KnownSpacecraftsPropertiesProvisioningState {
  /** Creating */
  Creating = "Creating",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
  /** Updating */
  Updating = "Updating",
  /** Deleting */
  Deleting = "Deleting"
}

/**
 * Defines values for SpacecraftsPropertiesProvisioningState. \
 * {@link KnownSpacecraftsPropertiesProvisioningState} can be used interchangeably with SpacecraftsPropertiesProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Updating** \
 * **Deleting**
 */
export type SpacecraftsPropertiesProvisioningState = string;

/** Known values of {@link Direction} that the service accepts. */
export enum KnownDirection {
  /** Uplink */
  Uplink = "uplink",
  /** Downlink */
  Downlink = "downlink"
}

/**
 * Defines values for Direction. \
 * {@link KnownDirection} can be used interchangeably with Direction,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **uplink** \
 * **downlink**
 */
export type Direction = string;

/** Known values of {@link Polarization} that the service accepts. */
export enum KnownPolarization {
  /** Rhcp */
  Rhcp = "RHCP",
  /** Lhcp */
  Lhcp = "LHCP",
  /** LinearVertical */
  LinearVertical = "linearVertical",
  /** LinearHorizontal */
  LinearHorizontal = "linearHorizontal"
}

/**
 * Defines values for Polarization. \
 * {@link KnownPolarization} can be used interchangeably with Polarization,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **RHCP** \
 * **LHCP** \
 * **linearVertical** \
 * **linearHorizontal**
 */
export type Polarization = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link ContactsPropertiesProvisioningState} that the service accepts. */
export enum KnownContactsPropertiesProvisioningState {
  /** Creating */
  Creating = "Creating",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
  /** Updating */
  Updating = "Updating",
  /** Deleting */
  Deleting = "Deleting"
}

/**
 * Defines values for ContactsPropertiesProvisioningState. \
 * {@link KnownContactsPropertiesProvisioningState} can be used interchangeably with ContactsPropertiesProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Updating** \
 * **Deleting**
 */
export type ContactsPropertiesProvisioningState = string;

/** Known values of {@link ContactProfilesPropertiesProvisioningState} that the service accepts. */
export enum KnownContactProfilesPropertiesProvisioningState {
  /** Creating */
  Creating = "Creating",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
  /** Updating */
  Updating = "Updating",
  /** Deleting */
  Deleting = "Deleting"
}

/**
 * Defines values for ContactProfilesPropertiesProvisioningState. \
 * {@link KnownContactProfilesPropertiesProvisioningState} can be used interchangeably with ContactProfilesPropertiesProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Updating** \
 * **Deleting**
 */
export type ContactProfilesPropertiesProvisioningState = string;

/** Known values of {@link Protocol} that the service accepts. */
export enum KnownProtocol {
  /** TCP */
  TCP = "TCP",
  /** UDP */
  UDP = "UDP"
}

/**
 * Defines values for Protocol. \
 * {@link KnownProtocol} can be used interchangeably with Protocol,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **TCP** \
 * **UDP**
 */
export type Protocol = string;

/** Known values of {@link CapabilityParameter} that the service accepts. */
export enum KnownCapabilityParameter {
  /** EarthObservation */
  EarthObservation = "EarthObservation",
  /** Communication */
  Communication = "Communication"
}

/**
 * Defines values for CapabilityParameter. \
 * {@link KnownCapabilityParameter} can be used interchangeably with CapabilityParameter,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **EarthObservation** \
 * **Communication**
 */
export type CapabilityParameter = string;

/** Known values of {@link ReleaseMode} that the service accepts. */
export enum KnownReleaseMode {
  /** Preview */
  Preview = "Preview",
  /** GA */
  GA = "GA"
}

/**
 * Defines values for ReleaseMode. \
 * {@link KnownReleaseMode} can be used interchangeably with ReleaseMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Preview** \
 * **GA**
 */
export type ReleaseMode = string;

/** Known values of {@link Capability} that the service accepts. */
export enum KnownCapability {
  /** EarthObservation */
  EarthObservation = "EarthObservation",
  /** Communication */
  Communication = "Communication"
}

/**
 * Defines values for Capability. \
 * {@link KnownCapability} can be used interchangeably with Capability,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **EarthObservation** \
 * **Communication**
 */
export type Capability = string;

/** Known values of {@link ApiVersionParameter} that the service accepts. */
export enum KnownApiVersionParameter {
  /** TwoThousandTwenty0901Preview */
  TwoThousandTwenty0901Preview = "2020-09-01-preview",
  /** TwoThousandTwentyOne0404Preview */
  TwoThousandTwentyOne0404Preview = "2021-04-04-preview",
  /** TwoThousandTwentyTwo0301 */
  TwoThousandTwentyTwo0301 = "2022-03-01"
}

/**
 * Defines values for ApiVersionParameter. \
 * {@link KnownApiVersionParameter} can be used interchangeably with ApiVersionParameter,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **2020-09-01-preview** \
 * **2021-04-04-preview** \
 * **2022-03-01**
 */
export type ApiVersionParameter = string;
/** Defines values for Status. */
export type Status =
  | "scheduled"
  | "cancelled"
  | "succeeded"
  | "failed"
  | "providerCancelled"
  | "Succeeded"
  | "Canceled"
  | "Failed"
  | "Running";
/** Defines values for AutoTrackingConfiguration. */
export type AutoTrackingConfiguration = "disabled" | "xBand" | "sBand";

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface SpacecraftsListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {
  /** An opaque string that the resource provider uses to skip over previously-returned results. This is used when a previous list operation call returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. */
  skiptoken?: string;
}

/** Contains response data for the listBySubscription operation. */
export type SpacecraftsListBySubscriptionResponse = SpacecraftListResult;

/** Optional parameters. */
export interface SpacecraftsListOptionalParams
  extends coreClient.OperationOptions {
  /** An opaque string that the resource provider uses to skip over previously-returned results. This is used when a previous list operation call returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. */
  skiptoken?: string;
}

/** Contains response data for the list operation. */
export type SpacecraftsListResponse = SpacecraftListResult;

/** Optional parameters. */
export interface SpacecraftsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SpacecraftsGetResponse = Spacecraft;

/** Optional parameters. */
export interface SpacecraftsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The current state of the resource's creation, deletion, or modification */
  provisioningState?: SpacecraftsPropertiesProvisioningState;
  /** NORAD ID of the spacecraft. */
  noradId?: string;
  /** Title line of Two Line Element (TLE). */
  titleLine?: string;
  /** Line 1 of Two Line Element (TLE). */
  tleLine1?: string;
  /** Line 2 of Two Line Element (TLE). */
  tleLine2?: string;
  /** Links of the Spacecraft */
  links?: SpacecraftLink[];
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type SpacecraftsCreateOrUpdateResponse = Spacecraft;

/** Optional parameters. */
export interface SpacecraftsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface SpacecraftsUpdateTagsOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the updateTags operation. */
export type SpacecraftsUpdateTagsResponse = Spacecraft;

/** Optional parameters. */
export interface SpacecraftsListAvailableContactsOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the listAvailableContacts operation. */
export type SpacecraftsListAvailableContactsResponse = AvailableContactsListResult;

/** Optional parameters. */
export interface SpacecraftsListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {
  /** An opaque string that the resource provider uses to skip over previously-returned results. This is used when a previous list operation call returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. */
  skiptoken?: string;
}

/** Contains response data for the listBySubscriptionNext operation. */
export type SpacecraftsListBySubscriptionNextResponse = SpacecraftListResult;

/** Optional parameters. */
export interface SpacecraftsListNextOptionalParams
  extends coreClient.OperationOptions {
  /** An opaque string that the resource provider uses to skip over previously-returned results. This is used when a previous list operation call returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. */
  skiptoken?: string;
}

/** Contains response data for the listNext operation. */
export type SpacecraftsListNextResponse = SpacecraftListResult;

/** Optional parameters. */
export interface SpacecraftsListAvailableContactsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listAvailableContactsNext operation. */
export type SpacecraftsListAvailableContactsNextResponse = AvailableContactsListResult;

/** Optional parameters. */
export interface ContactsListOptionalParams
  extends coreClient.OperationOptions {
  /** An opaque string that the resource provider uses to skip over previously-returned results. This is used when a previous list operation call returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. */
  skiptoken?: string;
}

/** Contains response data for the list operation. */
export type ContactsListResponse = ContactListResult;

/** Optional parameters. */
export interface ContactsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ContactsGetResponse = Contact;

/** Optional parameters. */
export interface ContactsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ContactsCreateResponse = Contact;

/** Optional parameters. */
export interface ContactsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ContactsListNextOptionalParams
  extends coreClient.OperationOptions {
  /** An opaque string that the resource provider uses to skip over previously-returned results. This is used when a previous list operation call returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. */
  skiptoken?: string;
}

/** Contains response data for the listNext operation. */
export type ContactsListNextResponse = ContactListResult;

/** Optional parameters. */
export interface ContactProfilesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ContactProfilesGetResponse = ContactProfile;

/** Optional parameters. */
export interface ContactProfilesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The current state of the resource's creation, deletion, or modification */
  provisioningState?: ContactProfilesPropertiesProvisioningState;
  /** Minimum viable contact duration in ISO 8601 format. */
  minimumViableContactDuration?: string;
  /** Minimum viable elevation for the contact in decimal degrees. */
  minimumElevationDegrees?: number;
  /** Auto track configuration. */
  autoTrackingConfiguration?: AutoTrackingConfiguration;
  /** The URI of the Event Hub used for telemetry */
  eventHubUri?: string;
  /** Network configuration of customer virtual network. */
  networkConfiguration?: ContactProfilesPropertiesNetworkConfiguration;
  /** Links of the Contact Profile */
  links?: ContactProfileLink[];
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ContactProfilesCreateOrUpdateResponse = ContactProfile;

/** Optional parameters. */
export interface ContactProfilesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ContactProfilesUpdateTagsOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the updateTags operation. */
export type ContactProfilesUpdateTagsResponse = ContactProfile;

/** Optional parameters. */
export interface ContactProfilesListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {
  /** An opaque string that the resource provider uses to skip over previously-returned results. This is used when a previous list operation call returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. */
  skiptoken?: string;
}

/** Contains response data for the listBySubscription operation. */
export type ContactProfilesListBySubscriptionResponse = ContactProfileListResult;

/** Optional parameters. */
export interface ContactProfilesListOptionalParams
  extends coreClient.OperationOptions {
  /** An opaque string that the resource provider uses to skip over previously-returned results. This is used when a previous list operation call returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. */
  skiptoken?: string;
}

/** Contains response data for the list operation. */
export type ContactProfilesListResponse = ContactProfileListResult;

/** Optional parameters. */
export interface ContactProfilesListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {
  /** An opaque string that the resource provider uses to skip over previously-returned results. This is used when a previous list operation call returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. */
  skiptoken?: string;
}

/** Contains response data for the listBySubscriptionNext operation. */
export type ContactProfilesListBySubscriptionNextResponse = ContactProfileListResult;

/** Optional parameters. */
export interface ContactProfilesListNextOptionalParams
  extends coreClient.OperationOptions {
  /** An opaque string that the resource provider uses to skip over previously-returned results. This is used when a previous list operation call returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. */
  skiptoken?: string;
}

/** Contains response data for the listNext operation. */
export type ContactProfilesListNextResponse = ContactProfileListResult;

/** Optional parameters. */
export interface AvailableGroundStationsListByCapabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCapability operation. */
export type AvailableGroundStationsListByCapabilityResponse = AvailableGroundStationListResult;

/** Optional parameters. */
export interface AvailableGroundStationsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AvailableGroundStationsGetResponse = AvailableGroundStation;

/** Optional parameters. */
export interface AvailableGroundStationsListByCapabilityNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCapabilityNext operation. */
export type AvailableGroundStationsListByCapabilityNextResponse = AvailableGroundStationListResult;

/** Optional parameters. */
export interface OperationsResultsGetOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the get operation. */
export type OperationsResultsGetResponse = OperationResult;

/** Optional parameters. */
export interface AzureOrbitalOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
