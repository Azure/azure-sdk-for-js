/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreAuth from "@azure/core-auth";
import {
  OperationsImpl,
  SpacecraftsImpl,
  ContactsImpl,
  ContactProfilesImpl,
  AvailableGroundStationsImpl
} from "./operations";
import {
  Operations,
  Spacecrafts,
  Contacts,
  ContactProfiles,
  AvailableGroundStations
} from "./operationsInterfaces";
import { AzureOrbitalContext } from "./azureOrbitalContext";
import { AzureOrbitalOptionalParams } from "./models";

export class AzureOrbital extends AzureOrbitalContext {
  /**
   * Initializes a new instance of the AzureOrbital class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param subscriptionId The ID of the target subscription.
   * @param options The parameter options
   */
  constructor(
    credentials: coreAuth.TokenCredential,
    subscriptionId: string,
    options?: AzureOrbitalOptionalParams
  ) {
    super(credentials, subscriptionId, options);
    this.operations = new OperationsImpl(this);
    this.spacecrafts = new SpacecraftsImpl(this);
    this.contacts = new ContactsImpl(this);
    this.contactProfiles = new ContactProfilesImpl(this);
    this.availableGroundStations = new AvailableGroundStationsImpl(this);
  }

  operations: Operations;
  spacecrafts: Spacecrafts;
  contacts: Contacts;
  contactProfiles: ContactProfiles;
  availableGroundStations: AvailableGroundStations;
}
