/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as operations from "./operations";
import { IotHubClientContext } from "./iotHubClientContext";

class IotHubClient extends IotHubClientContext {
  // Operation groups
  operations: operations.Operations;
  iotHubResource: operations.IotHubResource;
  resourceProviderCommon: operations.ResourceProviderCommon;
  certificates: operations.Certificates;
  iotHub: operations.IotHub;
  privateLinkResources: operations.PrivateLinkResourcesOperations;
  privateEndpointConnections: operations.PrivateEndpointConnections;

  /**
   * Initializes a new instance of the IotHubClient class.
   * @param credentials Credentials needed for the client to connect to Azure.
   * @param subscriptionId The subscription identifier.
   * @param [options] The parameter options
   */
  constructor(
    credentials: msRest.ServiceClientCredentials,
    subscriptionId: string,
    options?: Models.IotHubClientOptions
  ) {
    super(credentials, subscriptionId, options);
    this.operations = new operations.Operations(this);
    this.iotHubResource = new operations.IotHubResource(this);
    this.resourceProviderCommon = new operations.ResourceProviderCommon(this);
    this.certificates = new operations.Certificates(this);
    this.iotHub = new operations.IotHub(this);
    this.privateLinkResources = new operations.PrivateLinkResourcesOperations(this);
    this.privateEndpointConnections = new operations.PrivateEndpointConnections(this);
  }
}

// Operation Specifications

export { IotHubClient, IotHubClientContext, Models as IotHubModels, Mappers as IotHubMappers };
export * from "./operations";
