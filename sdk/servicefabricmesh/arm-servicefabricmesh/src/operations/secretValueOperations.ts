/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SecretValueOperations } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { ServiceFabricMeshManagementClient } from "../serviceFabricMeshManagementClient";
import {
  SecretValueResourceDescription,
  SecretValueListNextOptionalParams,
  SecretValueListOptionalParams,
  SecretValueCreateOptionalParams,
  SecretValueCreateResponse,
  SecretValueGetOptionalParams,
  SecretValueGetResponse,
  SecretValueDeleteOptionalParams,
  SecretValueListResponse,
  SecretValueListValueOptionalParams,
  SecretValueListValueResponse,
  SecretValueListNextResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Class containing SecretValueOperations operations. */
export class SecretValueOperationsImpl implements SecretValueOperations {
  private readonly client: ServiceFabricMeshManagementClient;

  /**
   * Initialize a new instance of the class SecretValueOperations class.
   * @param client Reference to the service client
   */
  constructor(client: ServiceFabricMeshManagementClient) {
    this.client = client;
  }

  /**
   * Gets information about all secret value resources of the specified secret resource. The information
   * includes the names of the secret value resources, but not the actual values.
   * @param resourceGroupName Azure resource group name
   * @param secretResourceName The name of the secret resource.
   * @param options The options parameters.
   */
  public list(
    resourceGroupName: string,
    secretResourceName: string,
    options?: SecretValueListOptionalParams
  ): PagedAsyncIterableIterator<SecretValueResourceDescription> {
    const iter = this.listPagingAll(
      resourceGroupName,
      secretResourceName,
      options
    );
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: () => {
        return this.listPagingPage(
          resourceGroupName,
          secretResourceName,
          options
        );
      }
    };
  }

  private async *listPagingPage(
    resourceGroupName: string,
    secretResourceName: string,
    options?: SecretValueListOptionalParams
  ): AsyncIterableIterator<SecretValueResourceDescription[]> {
    let result = await this._list(
      resourceGroupName,
      secretResourceName,
      options
    );
    yield result.value || [];
    let continuationToken = result.nextLink;
    while (continuationToken) {
      result = await this._listNext(
        resourceGroupName,
        secretResourceName,
        continuationToken,
        options
      );
      continuationToken = result.nextLink;
      yield result.value || [];
    }
  }

  private async *listPagingAll(
    resourceGroupName: string,
    secretResourceName: string,
    options?: SecretValueListOptionalParams
  ): AsyncIterableIterator<SecretValueResourceDescription> {
    for await (const page of this.listPagingPage(
      resourceGroupName,
      secretResourceName,
      options
    )) {
      yield* page;
    }
  }

  /**
   * Creates a new value of the specified secret resource. The name of the value is typically the version
   * identifier. Once created the value cannot be changed.
   * @param resourceGroupName Azure resource group name
   * @param secretResourceName The name of the secret resource.
   * @param secretValueResourceName The name of the secret resource value which is typically the version
   *                                identifier for the value.
   * @param secretValueResourceDescription Description for creating a value of a secret resource.
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    secretResourceName: string,
    secretValueResourceName: string,
    secretValueResourceDescription: SecretValueResourceDescription,
    options?: SecretValueCreateOptionalParams
  ): Promise<SecretValueCreateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        secretResourceName,
        secretValueResourceName,
        secretValueResourceDescription,
        options
      },
      createOperationSpec
    );
  }

  /**
   * Get the information about the specified named secret value resources. The information does not
   * include the actual value of the secret.
   * @param resourceGroupName Azure resource group name
   * @param secretResourceName The name of the secret resource.
   * @param secretValueResourceName The name of the secret resource value which is typically the version
   *                                identifier for the value.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    secretResourceName: string,
    secretValueResourceName: string,
    options?: SecretValueGetOptionalParams
  ): Promise<SecretValueGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        secretResourceName,
        secretValueResourceName,
        options
      },
      getOperationSpec
    );
  }

  /**
   * Deletes the secret value resource identified by the name. The name of the resource is typically the
   * version associated with that value. Deletion will fail if the specified value is in use.
   * @param resourceGroupName Azure resource group name
   * @param secretResourceName The name of the secret resource.
   * @param secretValueResourceName The name of the secret resource value which is typically the version
   *                                identifier for the value.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    secretResourceName: string,
    secretValueResourceName: string,
    options?: SecretValueDeleteOptionalParams
  ): Promise<void> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        secretResourceName,
        secretValueResourceName,
        options
      },
      deleteOperationSpec
    );
  }

  /**
   * Gets information about all secret value resources of the specified secret resource. The information
   * includes the names of the secret value resources, but not the actual values.
   * @param resourceGroupName Azure resource group name
   * @param secretResourceName The name of the secret resource.
   * @param options The options parameters.
   */
  private _list(
    resourceGroupName: string,
    secretResourceName: string,
    options?: SecretValueListOptionalParams
  ): Promise<SecretValueListResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, secretResourceName, options },
      listOperationSpec
    );
  }

  /**
   * Lists the decrypted value of the specified named value of the secret resource. This is a privileged
   * operation.
   * @param resourceGroupName Azure resource group name
   * @param secretResourceName The name of the secret resource.
   * @param secretValueResourceName The name of the secret resource value which is typically the version
   *                                identifier for the value.
   * @param options The options parameters.
   */
  listValue(
    resourceGroupName: string,
    secretResourceName: string,
    secretValueResourceName: string,
    options?: SecretValueListValueOptionalParams
  ): Promise<SecretValueListValueResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        secretResourceName,
        secretValueResourceName,
        options
      },
      listValueOperationSpec
    );
  }

  /**
   * ListNext
   * @param resourceGroupName Azure resource group name
   * @param secretResourceName The name of the secret resource.
   * @param nextLink The nextLink from the previous successful call to the List method.
   * @param options The options parameters.
   */
  private _listNext(
    resourceGroupName: string,
    secretResourceName: string,
    nextLink: string,
    options?: SecretValueListNextOptionalParams
  ): Promise<SecretValueListNextResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, secretResourceName, nextLink, options },
      listNextOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const createOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/secrets/{secretResourceName}/values/{secretValueResourceName}",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.SecretValueResourceDescription
    },
    201: {
      bodyMapper: Mappers.SecretValueResourceDescription
    },
    202: {},
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  requestBody: Parameters.secretValueResourceDescription,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.secretResourceName,
    Parameters.secretValueResourceName
  ],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer
};
const getOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/secrets/{secretResourceName}/values/{secretValueResourceName}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.SecretValueResourceDescription
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.secretResourceName,
    Parameters.secretValueResourceName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const deleteOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/secrets/{secretResourceName}/values/{secretValueResourceName}",
  httpMethod: "DELETE",
  responses: {
    200: {},
    202: {},
    204: {},
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.secretResourceName,
    Parameters.secretValueResourceName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const listOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/secrets/{secretResourceName}/values",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.SecretValueResourceDescriptionList
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.secretResourceName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const listValueOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/secrets/{secretResourceName}/values/{secretValueResourceName}/list_value",
  httpMethod: "POST",
  responses: {
    200: {
      bodyMapper: Mappers.SecretValue
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.secretResourceName,
    Parameters.secretValueResourceName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const listNextOperationSpec: coreClient.OperationSpec = {
  path: "{nextLink}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.SecretValueResourceDescriptionList
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.nextLink,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.secretResourceName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
