/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  DomainTopic,
  DomainTopicsListByDomainOptionalParams,
  DomainTopicsGetOptionalParams,
  DomainTopicsGetResponse,
  DomainTopicsCreateOrUpdateOptionalParams,
  DomainTopicsCreateOrUpdateResponse,
  DomainTopicsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a DomainTopics. */
export interface DomainTopics {
  /**
   * List all the topics in a domain.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param domainName Domain name.
   * @param options The options parameters.
   */
  listByDomain(
    resourceGroupName: string,
    domainName: string,
    options?: DomainTopicsListByDomainOptionalParams
  ): PagedAsyncIterableIterator<DomainTopic>;
  /**
   * Get properties of a domain topic.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param domainName Name of the domain.
   * @param domainTopicName Name of the topic.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    domainName: string,
    domainTopicName: string,
    options?: DomainTopicsGetOptionalParams
  ): Promise<DomainTopicsGetResponse>;
  /**
   * Asynchronously creates or updates a new domain topic with the specified parameters.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param domainName Name of the domain.
   * @param domainTopicName Name of the domain topic.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    domainName: string,
    domainTopicName: string,
    options?: DomainTopicsCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<DomainTopicsCreateOrUpdateResponse>,
      DomainTopicsCreateOrUpdateResponse
    >
  >;
  /**
   * Asynchronously creates or updates a new domain topic with the specified parameters.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param domainName Name of the domain.
   * @param domainTopicName Name of the domain topic.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    domainName: string,
    domainTopicName: string,
    options?: DomainTopicsCreateOrUpdateOptionalParams
  ): Promise<DomainTopicsCreateOrUpdateResponse>;
  /**
   * Delete existing domain topic.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param domainName Name of the domain.
   * @param domainTopicName Name of the domain topic.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    domainName: string,
    domainTopicName: string,
    options?: DomainTopicsDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete existing domain topic.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param domainName Name of the domain.
   * @param domainTopicName Name of the domain topic.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    domainName: string,
    domainTopicName: string,
    options?: DomainTopicsDeleteOptionalParams
  ): Promise<void>;
}
