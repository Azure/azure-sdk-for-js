/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  PartnerRegistration,
  PartnerRegistrationsListBySubscriptionOptionalParams,
  PartnerRegistrationsListByResourceGroupOptionalParams,
  PartnerRegistrationsGetOptionalParams,
  PartnerRegistrationsGetResponse,
  PartnerRegistrationsCreateOrUpdateOptionalParams,
  PartnerRegistrationsCreateOrUpdateResponse,
  PartnerRegistrationsDeleteOptionalParams,
  PartnerRegistrationUpdateParameters,
  PartnerRegistrationsUpdateOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a PartnerRegistrations. */
export interface PartnerRegistrations {
  /**
   * List all the partner registrations under an Azure subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: PartnerRegistrationsListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<PartnerRegistration>;
  /**
   * List all the partner registrations under a resource group.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: PartnerRegistrationsListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<PartnerRegistration>;
  /**
   * Gets a partner registration with the specified parameters.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param partnerRegistrationName Name of the partner registration.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    partnerRegistrationName: string,
    options?: PartnerRegistrationsGetOptionalParams
  ): Promise<PartnerRegistrationsGetResponse>;
  /**
   * Creates a new partner registration with the specified parameters.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param partnerRegistrationName Name of the partner registration.
   * @param partnerRegistrationInfo PartnerRegistration information.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    partnerRegistrationName: string,
    partnerRegistrationInfo: PartnerRegistration,
    options?: PartnerRegistrationsCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<PartnerRegistrationsCreateOrUpdateResponse>,
      PartnerRegistrationsCreateOrUpdateResponse
    >
  >;
  /**
   * Creates a new partner registration with the specified parameters.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param partnerRegistrationName Name of the partner registration.
   * @param partnerRegistrationInfo PartnerRegistration information.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    partnerRegistrationName: string,
    partnerRegistrationInfo: PartnerRegistration,
    options?: PartnerRegistrationsCreateOrUpdateOptionalParams
  ): Promise<PartnerRegistrationsCreateOrUpdateResponse>;
  /**
   * Deletes a partner registration with the specified parameters.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param partnerRegistrationName Name of the partner registration.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    partnerRegistrationName: string,
    options?: PartnerRegistrationsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes a partner registration with the specified parameters.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param partnerRegistrationName Name of the partner registration.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    partnerRegistrationName: string,
    options?: PartnerRegistrationsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Updates a partner registration with the specified parameters.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param partnerRegistrationName Name of the partner registration.
   * @param partnerRegistrationUpdateParameters Partner registration update information.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    partnerRegistrationName: string,
    partnerRegistrationUpdateParameters: PartnerRegistrationUpdateParameters,
    options?: PartnerRegistrationsUpdateOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Updates a partner registration with the specified parameters.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param partnerRegistrationName Name of the partner registration.
   * @param partnerRegistrationUpdateParameters Partner registration update information.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    partnerRegistrationName: string,
    partnerRegistrationUpdateParameters: PartnerRegistrationUpdateParameters,
    options?: PartnerRegistrationsUpdateOptionalParams
  ): Promise<void>;
}
