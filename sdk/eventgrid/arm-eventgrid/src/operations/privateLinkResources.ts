/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/privateLinkResourcesMappers";
import * as Parameters from "../models/parameters";
import { EventGridManagementClientContext } from "../eventGridManagementClientContext";

/** Class representing a PrivateLinkResources. */
export class PrivateLinkResources {
  private readonly client: EventGridManagementClientContext;

  /**
   * Create a PrivateLinkResources.
   * @param {EventGridManagementClientContext} client Reference to the service client.
   */
  constructor(client: EventGridManagementClientContext) {
    this.client = client;
  }

  /**
   * Get properties of a private link resource.
   * @summary Get a private link resource.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param parentType The type of the parent resource. This can be either \'topics\' or \'domains\'.
   * @param parentName The name of the parent resource (namely, either, the topic name or domain
   * name).
   * @param privateLinkResourceName The name of private link resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateLinkResourcesGetResponse>
   */
  get(resourceGroupName: string, parentType: string, parentName: string, privateLinkResourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateLinkResourcesGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param parentType The type of the parent resource. This can be either \'topics\' or \'domains\'.
   * @param parentName The name of the parent resource (namely, either, the topic name or domain
   * name).
   * @param privateLinkResourceName The name of private link resource.
   * @param callback The callback
   */
  get(resourceGroupName: string, parentType: string, parentName: string, privateLinkResourceName: string, callback: msRest.ServiceCallback<Models.PrivateLinkResource>): void;
  /**
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param parentType The type of the parent resource. This can be either \'topics\' or \'domains\'.
   * @param parentName The name of the parent resource (namely, either, the topic name or domain
   * name).
   * @param privateLinkResourceName The name of private link resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, parentType: string, parentName: string, privateLinkResourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateLinkResource>): void;
  get(resourceGroupName: string, parentType: string, parentName: string, privateLinkResourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateLinkResource>, callback?: msRest.ServiceCallback<Models.PrivateLinkResource>): Promise<Models.PrivateLinkResourcesGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        parentType,
        parentName,
        privateLinkResourceName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.PrivateLinkResourcesGetResponse>;
  }

  /**
   * List all the private link resources under a topic or domain.
   * @summary List private link resources under specific topic or domain.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param parentType The type of the parent resource. This can be either \'topics\' or \'domains\'.
   * @param parentName The name of the parent resource (namely, either, the topic name or domain
   * name).
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateLinkResourcesListByResourceResponse>
   */
  listByResource(resourceGroupName: string, parentType: string, parentName: string, options?: Models.PrivateLinkResourcesListByResourceOptionalParams): Promise<Models.PrivateLinkResourcesListByResourceResponse>;
  /**
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param parentType The type of the parent resource. This can be either \'topics\' or \'domains\'.
   * @param parentName The name of the parent resource (namely, either, the topic name or domain
   * name).
   * @param callback The callback
   */
  listByResource(resourceGroupName: string, parentType: string, parentName: string, callback: msRest.ServiceCallback<Models.PrivateLinkResourcesListResult>): void;
  /**
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param parentType The type of the parent resource. This can be either \'topics\' or \'domains\'.
   * @param parentName The name of the parent resource (namely, either, the topic name or domain
   * name).
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResource(resourceGroupName: string, parentType: string, parentName: string, options: Models.PrivateLinkResourcesListByResourceOptionalParams, callback: msRest.ServiceCallback<Models.PrivateLinkResourcesListResult>): void;
  listByResource(resourceGroupName: string, parentType: string, parentName: string, options?: Models.PrivateLinkResourcesListByResourceOptionalParams | msRest.ServiceCallback<Models.PrivateLinkResourcesListResult>, callback?: msRest.ServiceCallback<Models.PrivateLinkResourcesListResult>): Promise<Models.PrivateLinkResourcesListByResourceResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        parentType,
        parentName,
        options
      },
      listByResourceOperationSpec,
      callback) as Promise<Models.PrivateLinkResourcesListByResourceResponse>;
  }

  /**
   * List all the private link resources under a topic or domain.
   * @summary List private link resources under specific topic or domain.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateLinkResourcesListByResourceNextResponse>
   */
  listByResourceNext(nextPageLink: string, options?: Models.PrivateLinkResourcesListByResourceNextOptionalParams): Promise<Models.PrivateLinkResourcesListByResourceNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByResourceNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.PrivateLinkResourcesListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceNext(nextPageLink: string, options: Models.PrivateLinkResourcesListByResourceNextOptionalParams, callback: msRest.ServiceCallback<Models.PrivateLinkResourcesListResult>): void;
  listByResourceNext(nextPageLink: string, options?: Models.PrivateLinkResourcesListByResourceNextOptionalParams | msRest.ServiceCallback<Models.PrivateLinkResourcesListResult>, callback?: msRest.ServiceCallback<Models.PrivateLinkResourcesListResult>): Promise<Models.PrivateLinkResourcesListByResourceNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByResourceNextOperationSpec,
      callback) as Promise<Models.PrivateLinkResourcesListByResourceNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateLinkResources/{privateLinkResourceName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.parentType,
    Parameters.parentName,
    Parameters.privateLinkResourceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateLinkResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByResourceOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateLinkResources",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.parentType,
    Parameters.parentName
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.filter,
    Parameters.top
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateLinkResourcesListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByResourceNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.filter,
    Parameters.top
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateLinkResourcesListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
