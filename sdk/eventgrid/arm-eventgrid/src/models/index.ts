/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * PrivateEndpoint information.
 */
export interface PrivateEndpoint {
  /**
   * The ARM identifier for Private Endpoint.
   */
  id?: string;
}

/**
 * ConnectionState information.
 */
export interface ConnectionState {
  /**
   * Status of the connection. Possible values include: 'Pending', 'Approved', 'Rejected',
   * 'Disconnected'
   */
  status?: PersistedConnectionStatus;
  /**
   * Description of the connection state.
   */
  description?: string;
  /**
   * Actions required (if any).
   */
  actionsRequired?: string;
}

/**
 * Definition of a Resource.
 */
export interface Resource extends BaseResource {
  /**
   * Fully qualified identifier of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * An interface representing PrivateEndpointConnection.
 */
export interface PrivateEndpointConnection extends Resource {
  /**
   * The Private Endpoint resource for this Connection.
   */
  privateEndpoint?: PrivateEndpoint;
  /**
   * GroupIds from the private link service resource.
   */
  groupIds?: string[];
  /**
   * Details about the state of the connection.
   */
  privateLinkServiceConnectionState?: ConnectionState;
  /**
   * Provisioning state of the Private Endpoint Connection. Possible values include: 'Creating',
   * 'Updating', 'Deleting', 'Succeeded', 'Canceled', 'Failed'
   */
  provisioningState?: ResourceProvisioningState;
}

/**
 * Contains the possible cases for InputSchemaMapping.
 */
export type InputSchemaMappingUnion = InputSchemaMapping | JsonInputSchemaMapping;

/**
 * By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input
 * schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only
 * supported type of InputSchemaMapping is 'JsonInputSchemaMapping'.
 */
export interface InputSchemaMapping {
  /**
   * Polymorphic Discriminator
   */
  inputSchemaMappingType: "InputSchemaMapping";
}

/**
 * An interface representing InboundIpRule.
 */
export interface InboundIpRule {
  /**
   * IP Address in CIDR notation e.g., 10.0.0.0/8.
   */
  ipMask?: string;
  /**
   * Action to perform based on the match or no match of the IpMask. Possible values include:
   * 'Allow'
   */
  action?: IpActionType;
}

/**
 * The information about the user identity.
 */
export interface UserIdentityProperties {
  /**
   * The principal id of user assigned identity.
   */
  principalId?: string;
  /**
   * The client id of user assigned identity.
   */
  clientId?: string;
}

/**
 * The identity information for the resource.
 */
export interface IdentityInfo {
  /**
   * The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an
   * implicitly created identity and a set of user-assigned identities. The type 'None' will remove
   * any identity. Possible values include: 'None', 'SystemAssigned', 'UserAssigned',
   * 'SystemAssigned, UserAssigned'
   */
  type?: IdentityType;
  /**
   * The principal ID of resource identity.
   */
  principalId?: string;
  /**
   * The tenant ID of resource.
   */
  tenantId?: string;
  /**
   * The list of user identities associated with the resource. The user identity dictionary key
   * references will be ARM resource ids in the form:
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
   * This property is currently not used and reserved for future usage.
   */
  userAssignedIdentities?: { [propertyName: string]: UserIdentityProperties };
}

/**
 * This is used to express the source of an input schema mapping for a single target field in the
 * Event Grid Event schema. This is currently used in the mappings for the 'id', 'topic' and
 * 'eventtime' properties. This represents a field in the input event schema.
 */
export interface JsonField {
  /**
   * Name of a field in the input event schema that's to be used as the source of a mapping.
   */
  sourceField?: string;
}

/**
 * This is used to express the source of an input schema mapping for a single target field
 * in the Event Grid Event schema. This is currently used in the mappings for the 'subject',
 * 'eventtype' and 'dataversion' properties. This represents a field in the input event schema
 * along with a default value to be used, and at least one of these two properties should be
 * provided.
 */
export interface JsonFieldWithDefault {
  /**
   * Name of a field in the input event schema that's to be used as the source of a mapping.
   */
  sourceField?: string;
  /**
   * The default value to be used for mapping when a SourceField is not provided or if there's no
   * property with the specified name in the published JSON event payload.
   */
  defaultValue?: string;
}

/**
 * This enables publishing to Event Grid using a custom input schema. This can be used to map
 * properties from a custom input JSON schema to the Event Grid event schema.
 */
export interface JsonInputSchemaMapping {
  /**
   * Polymorphic Discriminator
   */
  inputSchemaMappingType: "Json";
  /**
   * The mapping information for the Id property of the Event Grid Event.
   */
  id?: JsonField;
  /**
   * The mapping information for the Topic property of the Event Grid Event.
   */
  topic?: JsonField;
  /**
   * The mapping information for the EventTime property of the Event Grid Event.
   */
  eventTime?: JsonField;
  /**
   * The mapping information for the EventType property of the Event Grid Event.
   */
  eventType?: JsonFieldWithDefault;
  /**
   * The mapping information for the Subject property of the Event Grid Event.
   */
  subject?: JsonFieldWithDefault;
  /**
   * The mapping information for the DataVersion property of the Event Grid Event.
   */
  dataVersion?: JsonFieldWithDefault;
}

/**
 * Definition of a Tracked Resource.
 */
export interface TrackedResource extends Resource {
  /**
   * Location of the resource.
   */
  location: string;
  /**
   * Tags of the resource.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
export interface SystemData {
  /**
   * The identity that created the resource.
   */
  createdBy?: string;
  /**
   * The type of identity that created the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  createdByType?: CreatedByType;
  /**
   * The timestamp of resource creation (UTC).
   */
  createdAt?: Date;
  /**
   * The identity that last modified the resource.
   */
  lastModifiedBy?: string;
  /**
   * The type of identity that last modified the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  lastModifiedByType?: CreatedByType;
  /**
   * The timestamp of resource last modification (UTC)
   */
  lastModifiedAt?: Date;
}

/**
 * EventGrid Domain.
 */
export interface Domain extends TrackedResource {
  /**
   * List of private endpoint connections.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly privateEndpointConnections?: PrivateEndpointConnection[];
  /**
   * Provisioning state of the Event Grid Domain Resource. Possible values include: 'Creating',
   * 'Updating', 'Deleting', 'Succeeded', 'Canceled', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: DomainProvisioningState;
  /**
   * Endpoint for the domain.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endpoint?: string;
  /**
   * This determines the format that Event Grid should expect for incoming events published to the
   * domain. Possible values include: 'EventGridSchema', 'CustomEventSchema',
   * 'CloudEventSchemaV1_0'. Default value: 'EventGridSchema'.
   */
  inputSchema?: InputSchema;
  /**
   * Information about the InputSchemaMapping which specified the info about mapping event payload.
   */
  inputSchemaMapping?: InputSchemaMappingUnion;
  /**
   * Metric resource id for the domain.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly metricResourceId?: string;
  /**
   * This determines if traffic is allowed over public network. By default it is enabled.
   * You can further restrict to specific IPs by configuring <seealso
   * cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules"
   * />. Possible values include: 'Enabled', 'Disabled'. Default value: 'Enabled'.
   */
  publicNetworkAccess?: PublicNetworkAccess;
  /**
   * This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are
   * considered only if PublicNetworkAccess is enabled.
   */
  inboundIpRules?: InboundIpRule[];
  /**
   * This boolean is used to enable or disable local auth. Default value is false. When the
   * property is set to true, only AAD token will be used to authenticate if user is allowed to
   * publish to the domain. Default value: false.
   */
  disableLocalAuth?: boolean;
  /**
   * This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics
   * associated with this Event Grid Domain resource.
   * In this context, creation of domain topic can be auto-managed (when true) or self-managed
   * (when false). The default value for this property is true.
   * When this property is null or set to true, Event Grid is responsible of automatically creating
   * the domain topic when the first event subscription is
   * created at the scope of the domain topic. If this property is set to false, then creating the
   * first event subscription will require creating a domain topic
   * by the user. The self-management mode can be used if the user wants full control of when the
   * domain topic is created, while auto-managed mode provides the
   * flexibility to perform less operations and manage fewer resources by the user. Also, note that
   * in auto-managed creation mode, user is allowed to create the
   * domain topic on demand if needed. Default value: true.
   */
  autoCreateTopicWithFirstSubscription?: boolean;
  /**
   * This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics
   * associated with this Event Grid Domain resource.
   * In this context, deletion of domain topic can be auto-managed (when true) or self-managed
   * (when false). The default value for this property is true.
   * When this property is set to true, Event Grid is responsible of automatically deleting the
   * domain topic when the last event subscription at the scope
   * of the domain topic is deleted. If this property is set to false, then the user needs to
   * manually delete the domain topic when it is no longer needed
   * (e.g., when last event subscription is deleted and the resource needs to be cleaned up). The
   * self-management mode can be used if the user wants full
   * control of when the domain topic needs to be deleted, while auto-managed mode provides the
   * flexibility to perform less operations and manage fewer
   * resources by the user. Default value: true.
   */
  autoDeleteTopicWithLastSubscription?: boolean;
  /**
   * The system metadata relating to Domain resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
  /**
   * Identity information for the Event Grid Domain resource.
   */
  identity?: IdentityInfo;
}

/**
 * Properties of the Domain update.
 */
export interface DomainUpdateParameters {
  /**
   * Tags of the domains resource.
   */
  tags?: { [propertyName: string]: string };
  /**
   * This determines if traffic is allowed over public network. By default it is enabled.
   * You can further restrict to specific IPs by configuring <seealso
   * cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainUpdateParameterProperties.InboundIpRules"
   * />. Possible values include: 'Enabled', 'Disabled'. Default value: 'Enabled'.
   */
  publicNetworkAccess?: PublicNetworkAccess;
  /**
   * This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are
   * considered only if PublicNetworkAccess is enabled.
   */
  inboundIpRules?: InboundIpRule[];
  /**
   * This boolean is used to enable or disable local auth. Default value is false. When the
   * property is set to true, only AAD token will be used to authenticate if user is allowed to
   * publish to the domain.
   */
  disableLocalAuth?: boolean;
  /**
   * This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics
   * associated with this Event Grid Domain resource.
   * In this context, creation of domain topic can be auto-managed (when true) or self-managed
   * (when false). The default value for this property is true.
   * When this property is null or set to true, Event Grid is responsible of automatically creating
   * the domain topic when the first event subscription is
   * created at the scope of the domain topic. If this property is set to false, then creating the
   * first event subscription will require creating a domain topic
   * by the user. The self-management mode can be used if the user wants full control of when the
   * domain topic is created, while auto-managed mode provides the
   * flexibility to perform less operations and manage fewer resources by the user. Also, note that
   * in auto-managed creation mode, user is allowed to create the
   * domain topic on demand if needed.
   */
  autoCreateTopicWithFirstSubscription?: boolean;
  /**
   * This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics
   * associated with this Event Grid Domain resource.
   * In this context, deletion of domain topic can be auto-managed (when true) or self-managed
   * (when false). The default value for this property is true.
   * When this property is set to true, Event Grid is responsible of automatically deleting the
   * domain topic when the last event subscription at the scope
   * of the domain topic is deleted. If this property is set to false, then the user needs to
   * manually delete the domain topic when it is no longer needed
   * (e.g., when last event subscription is deleted and the resource needs to be cleaned up). The
   * self-management mode can be used if the user wants full
   * control of when the domain topic needs to be deleted, while auto-managed mode provides the
   * flexibility to perform less operations and manage fewer
   * resources by the user.
   */
  autoDeleteTopicWithLastSubscription?: boolean;
  /**
   * Identity information for the resource.
   */
  identity?: IdentityInfo;
}

/**
 * Shared access keys of the Domain.
 */
export interface DomainSharedAccessKeys {
  /**
   * Shared access key1 for the domain.
   */
  key1?: string;
  /**
   * Shared access key2 for the domain.
   */
  key2?: string;
}

/**
 * Domain regenerate share access key request.
 */
export interface DomainRegenerateKeyRequest {
  /**
   * Key name to regenerate key1 or key2.
   */
  keyName: string;
}

/**
 * Domain Topic.
 */
export interface DomainTopic extends Resource {
  /**
   * Provisioning state of the domain topic. Possible values include: 'Creating', 'Updating',
   * 'Deleting', 'Succeeded', 'Canceled', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: DomainTopicProvisioningState;
  /**
   * The system metadata relating to Domain Topic resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
}

/**
 * Contains the possible cases for EventSubscriptionDestination.
 */
export type EventSubscriptionDestinationUnion = EventSubscriptionDestination | WebHookEventSubscriptionDestination | EventHubEventSubscriptionDestination | StorageQueueEventSubscriptionDestination | HybridConnectionEventSubscriptionDestination | ServiceBusQueueEventSubscriptionDestination | ServiceBusTopicEventSubscriptionDestination | AzureFunctionEventSubscriptionDestination;

/**
 * Information about the destination for an event subscription.
 */
export interface EventSubscriptionDestination {
  /**
   * Polymorphic Discriminator
   */
  endpointType: "EventSubscriptionDestination";
}

/**
 * The identity information with the event subscription.
 */
export interface EventSubscriptionIdentity {
  /**
   * The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an
   * implicitly created identity and a set of user-assigned identities. The type 'None' will remove
   * any identity. Possible values include: 'SystemAssigned', 'UserAssigned'
   */
  type?: EventSubscriptionIdentityType;
  /**
   * The user identity associated with the resource.
   */
  userAssignedIdentity?: string;
}

/**
 * Information about the delivery for an event subscription with resource identity.
 */
export interface DeliveryWithResourceIdentity {
  /**
   * The identity to use when delivering events.
   */
  identity?: EventSubscriptionIdentity;
  /**
   * Information about the destination where events have to be delivered for the event
   * subscription.
   * Uses Azure Event Grid's identity to acquire the authentication tokens being used during
   * delivery / dead-lettering.
   */
  destination?: EventSubscriptionDestinationUnion;
}

/**
 * Contains the possible cases for AdvancedFilter.
 */
export type AdvancedFilterUnion = AdvancedFilter | NumberInAdvancedFilter | NumberNotInAdvancedFilter | NumberLessThanAdvancedFilter | NumberGreaterThanAdvancedFilter | NumberLessThanOrEqualsAdvancedFilter | NumberGreaterThanOrEqualsAdvancedFilter | BoolEqualsAdvancedFilter | StringInAdvancedFilter | StringNotInAdvancedFilter | StringBeginsWithAdvancedFilter | StringEndsWithAdvancedFilter | StringContainsAdvancedFilter;

/**
 * This is the base type that represents an advanced filter. To configure an advanced filter, do
 * not directly instantiate an object of this class. Instead, instantiate an object of a derived
 * class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc.
 * depending on the type of the key based on which you want to filter.
 */
export interface AdvancedFilter {
  /**
   * Polymorphic Discriminator
   */
  operatorType: "AdvancedFilter";
  /**
   * The field/property in the event based on which you want to filter.
   */
  key?: string;
}

/**
 * Filter for the Event Subscription.
 */
export interface EventSubscriptionFilter {
  /**
   * An optional string to filter events for an event subscription based on a resource path prefix.
   * The format of this depends on the publisher of the events.
   * Wildcard characters are not supported in this path.
   */
  subjectBeginsWith?: string;
  /**
   * An optional string to filter events for an event subscription based on a resource path suffix.
   * Wildcard characters are not supported in this path.
   */
  subjectEndsWith?: string;
  /**
   * A list of applicable event types that need to be part of the event subscription. If it is
   * desired to subscribe to all default event types, set the IncludedEventTypes to null.
   */
  includedEventTypes?: string[];
  /**
   * Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter
   * should be compared in a case sensitive manner. Default value: false.
   */
  isSubjectCaseSensitive?: boolean;
  /**
   * Allows advanced filters to be evaluated against an array of values instead of expecting a
   * singular value.
   */
  enableAdvancedFilteringOnArrays?: boolean;
  /**
   * An array of advanced filters that are used for filtering event subscriptions.
   */
  advancedFilters?: AdvancedFilterUnion[];
}

/**
 * Information about the retry policy for an event subscription.
 */
export interface RetryPolicy {
  /**
   * Maximum number of delivery retry attempts for events. Default value: 30.
   */
  maxDeliveryAttempts?: number;
  /**
   * Time To Live (in minutes) for events. Default value: 1440.
   */
  eventTimeToLiveInMinutes?: number;
}

/**
 * Contains the possible cases for DeadLetterDestination.
 */
export type DeadLetterDestinationUnion = DeadLetterDestination | StorageBlobDeadLetterDestination;

/**
 * Information about the dead letter destination for an event subscription. To configure a
 * deadletter destination, do not directly instantiate an object of this class. Instead,
 * instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the
 * only class that derives from this class.
 */
export interface DeadLetterDestination {
  /**
   * Polymorphic Discriminator
   */
  endpointType: "DeadLetterDestination";
}

/**
 * Information about the deadletter destination with resource identity.
 */
export interface DeadLetterWithResourceIdentity {
  /**
   * The identity to use when dead-lettering events.
   */
  identity?: EventSubscriptionIdentity;
  /**
   * Information about the destination where events have to be delivered for the event
   * subscription.
   * Uses the managed identity setup on the parent resource (namely, topic or domain) to acquire
   * the authentication tokens being used during delivery / dead-lettering.
   */
  deadLetterDestination?: DeadLetterDestinationUnion;
}

/**
 * Contains the possible cases for DeliveryAttributeMapping.
 */
export type DeliveryAttributeMappingUnion = DeliveryAttributeMapping | StaticDeliveryAttributeMapping | DynamicDeliveryAttributeMapping;

/**
 * Delivery attribute mapping details.
 */
export interface DeliveryAttributeMapping {
  /**
   * Polymorphic Discriminator
   */
  type: "DeliveryAttributeMapping";
  /**
   * Name of the delivery attribute or header.
   */
  name?: string;
}

/**
 * Static delivery attribute mapping details.
 */
export interface StaticDeliveryAttributeMapping {
  /**
   * Polymorphic Discriminator
   */
  type: "Static";
  /**
   * Name of the delivery attribute or header.
   */
  name?: string;
  /**
   * Value of the delivery attribute.
   */
  value?: string;
  /**
   * Boolean flag to tell if the attribute contains sensitive information . Default value: false.
   */
  isSecret?: boolean;
}

/**
 * Dynamic delivery attribute mapping details.
 */
export interface DynamicDeliveryAttributeMapping {
  /**
   * Polymorphic Discriminator
   */
  type: "Dynamic";
  /**
   * Name of the delivery attribute or header.
   */
  name?: string;
  /**
   * JSON path in the event which contains attribute value.
   */
  sourceField?: string;
}

/**
 * NumberIn Advanced Filter.
 */
export interface NumberInAdvancedFilter {
  /**
   * Polymorphic Discriminator
   */
  operatorType: "NumberIn";
  /**
   * The field/property in the event based on which you want to filter.
   */
  key?: string;
  /**
   * The set of filter values.
   */
  values?: number[];
}

/**
 * Information about the storage blob based dead letter destination.
 */
export interface StorageBlobDeadLetterDestination {
  /**
   * Polymorphic Discriminator
   */
  endpointType: "StorageBlob";
  /**
   * The Azure Resource ID of the storage account that is the destination of the deadletter events
   */
  resourceId?: string;
  /**
   * The name of the Storage blob container that is the destination of the deadletter events
   */
  blobContainerName?: string;
}

/**
 * NumberNotIn Advanced Filter.
 */
export interface NumberNotInAdvancedFilter {
  /**
   * Polymorphic Discriminator
   */
  operatorType: "NumberNotIn";
  /**
   * The field/property in the event based on which you want to filter.
   */
  key?: string;
  /**
   * The set of filter values.
   */
  values?: number[];
}

/**
 * NumberLessThan Advanced Filter.
 */
export interface NumberLessThanAdvancedFilter {
  /**
   * Polymorphic Discriminator
   */
  operatorType: "NumberLessThan";
  /**
   * The field/property in the event based on which you want to filter.
   */
  key?: string;
  /**
   * The filter value.
   */
  value?: number;
}

/**
 * NumberGreaterThan Advanced Filter.
 */
export interface NumberGreaterThanAdvancedFilter {
  /**
   * Polymorphic Discriminator
   */
  operatorType: "NumberGreaterThan";
  /**
   * The field/property in the event based on which you want to filter.
   */
  key?: string;
  /**
   * The filter value.
   */
  value?: number;
}

/**
 * NumberLessThanOrEquals Advanced Filter.
 */
export interface NumberLessThanOrEqualsAdvancedFilter {
  /**
   * Polymorphic Discriminator
   */
  operatorType: "NumberLessThanOrEquals";
  /**
   * The field/property in the event based on which you want to filter.
   */
  key?: string;
  /**
   * The filter value.
   */
  value?: number;
}

/**
 * NumberGreaterThanOrEquals Advanced Filter.
 */
export interface NumberGreaterThanOrEqualsAdvancedFilter {
  /**
   * Polymorphic Discriminator
   */
  operatorType: "NumberGreaterThanOrEquals";
  /**
   * The field/property in the event based on which you want to filter.
   */
  key?: string;
  /**
   * The filter value.
   */
  value?: number;
}

/**
 * BoolEquals Advanced Filter.
 */
export interface BoolEqualsAdvancedFilter {
  /**
   * Polymorphic Discriminator
   */
  operatorType: "BoolEquals";
  /**
   * The field/property in the event based on which you want to filter.
   */
  key?: string;
  /**
   * The boolean filter value.
   */
  value?: boolean;
}

/**
 * StringIn Advanced Filter.
 */
export interface StringInAdvancedFilter {
  /**
   * Polymorphic Discriminator
   */
  operatorType: "StringIn";
  /**
   * The field/property in the event based on which you want to filter.
   */
  key?: string;
  /**
   * The set of filter values.
   */
  values?: string[];
}

/**
 * StringNotIn Advanced Filter.
 */
export interface StringNotInAdvancedFilter {
  /**
   * Polymorphic Discriminator
   */
  operatorType: "StringNotIn";
  /**
   * The field/property in the event based on which you want to filter.
   */
  key?: string;
  /**
   * The set of filter values.
   */
  values?: string[];
}

/**
 * StringBeginsWith Advanced Filter.
 */
export interface StringBeginsWithAdvancedFilter {
  /**
   * Polymorphic Discriminator
   */
  operatorType: "StringBeginsWith";
  /**
   * The field/property in the event based on which you want to filter.
   */
  key?: string;
  /**
   * The set of filter values.
   */
  values?: string[];
}

/**
 * StringEndsWith Advanced Filter.
 */
export interface StringEndsWithAdvancedFilter {
  /**
   * Polymorphic Discriminator
   */
  operatorType: "StringEndsWith";
  /**
   * The field/property in the event based on which you want to filter.
   */
  key?: string;
  /**
   * The set of filter values.
   */
  values?: string[];
}

/**
 * StringContains Advanced Filter.
 */
export interface StringContainsAdvancedFilter {
  /**
   * Polymorphic Discriminator
   */
  operatorType: "StringContains";
  /**
   * The field/property in the event based on which you want to filter.
   */
  key?: string;
  /**
   * The set of filter values.
   */
  values?: string[];
}

/**
 * Information about the webhook destination for an event subscription.
 */
export interface WebHookEventSubscriptionDestination {
  /**
   * Polymorphic Discriminator
   */
  endpointType: "WebHook";
  /**
   * The URL that represents the endpoint of the destination of an event subscription.
   */
  endpointUrl?: string;
  /**
   * The base URL that represents the endpoint of the destination of an event subscription.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endpointBaseUrl?: string;
  /**
   * Maximum number of events per batch. Default value: 1.
   */
  maxEventsPerBatch?: number;
  /**
   * Preferred batch size in Kilobytes. Default value: 64.
   */
  preferredBatchSizeInKilobytes?: number;
  /**
   * The Azure Active Directory Tenant ID to get the access token that will be included as the
   * bearer token in delivery requests.
   */
  azureActiveDirectoryTenantId?: string;
  /**
   * The Azure Active Directory Application ID or URI to get the access token that will be included
   * as the bearer token in delivery requests.
   */
  azureActiveDirectoryApplicationIdOrUri?: string;
  /**
   * Delivery attribute details.
   */
  deliveryAttributeMappings?: DeliveryAttributeMappingUnion[];
}

/**
 * Information about the event hub destination for an event subscription.
 */
export interface EventHubEventSubscriptionDestination {
  /**
   * Polymorphic Discriminator
   */
  endpointType: "EventHub";
  /**
   * The Azure Resource Id that represents the endpoint of an Event Hub destination of an event
   * subscription.
   */
  resourceId?: string;
  /**
   * Delivery attribute details.
   */
  deliveryAttributeMappings?: DeliveryAttributeMappingUnion[];
}

/**
 * Information about the storage queue destination for an event subscription.
 */
export interface StorageQueueEventSubscriptionDestination {
  /**
   * Polymorphic Discriminator
   */
  endpointType: "StorageQueue";
  /**
   * The Azure Resource ID of the storage account that contains the queue that is the destination
   * of an event subscription.
   */
  resourceId?: string;
  /**
   * The name of the Storage queue under a storage account that is the destination of an event
   * subscription.
   */
  queueName?: string;
  /**
   * Storage queue message time to live in seconds.
   */
  queueMessageTimeToLiveInSeconds?: number;
}

/**
 * Information about the HybridConnection destination for an event subscription.
 */
export interface HybridConnectionEventSubscriptionDestination {
  /**
   * Polymorphic Discriminator
   */
  endpointType: "HybridConnection";
  /**
   * The Azure Resource ID of an hybrid connection that is the destination of an event
   * subscription.
   */
  resourceId?: string;
  /**
   * Delivery attribute details.
   */
  deliveryAttributeMappings?: DeliveryAttributeMappingUnion[];
}

/**
 * Information about the service bus destination for an event subscription.
 */
export interface ServiceBusQueueEventSubscriptionDestination {
  /**
   * Polymorphic Discriminator
   */
  endpointType: "ServiceBusQueue";
  /**
   * The Azure Resource Id that represents the endpoint of the Service Bus destination of an event
   * subscription.
   */
  resourceId?: string;
  /**
   * Delivery attribute details.
   */
  deliveryAttributeMappings?: DeliveryAttributeMappingUnion[];
}

/**
 * Information about the service bus topic destination for an event subscription.
 */
export interface ServiceBusTopicEventSubscriptionDestination {
  /**
   * Polymorphic Discriminator
   */
  endpointType: "ServiceBusTopic";
  /**
   * The Azure Resource Id that represents the endpoint of the Service Bus Topic destination of an
   * event subscription.
   */
  resourceId?: string;
  /**
   * Delivery attribute details.
   */
  deliveryAttributeMappings?: DeliveryAttributeMappingUnion[];
}

/**
 * Information about the azure function destination for an event subscription.
 */
export interface AzureFunctionEventSubscriptionDestination {
  /**
   * Polymorphic Discriminator
   */
  endpointType: "AzureFunction";
  /**
   * The Azure Resource Id that represents the endpoint of the Azure Function destination of an
   * event subscription.
   */
  resourceId?: string;
  /**
   * Maximum number of events per batch. Default value: 1.
   */
  maxEventsPerBatch?: number;
  /**
   * Preferred batch size in Kilobytes. Default value: 64.
   */
  preferredBatchSizeInKilobytes?: number;
  /**
   * Delivery attribute details.
   */
  deliveryAttributeMappings?: DeliveryAttributeMappingUnion[];
}

/**
 * Event Subscription
 */
export interface EventSubscription extends Resource {
  /**
   * Name of the topic of the event subscription.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly topic?: string;
  /**
   * Provisioning state of the event subscription. Possible values include: 'Creating', 'Updating',
   * 'Deleting', 'Succeeded', 'Canceled', 'Failed', 'AwaitingManualAction'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: EventSubscriptionProvisioningState;
  /**
   * Information about the destination where events have to be delivered for the event
   * subscription.
   */
  destination?: EventSubscriptionDestinationUnion;
  /**
   * Information about the destination where events have to be delivered for the event
   * subscription.
   * Uses the managed identity setup on the parent resource (namely, topic or domain) to acquire
   * the authentication tokens being used during delivery / dead-lettering.
   */
  deliveryWithResourceIdentity?: DeliveryWithResourceIdentity;
  /**
   * Information about the filter for the event subscription.
   */
  filter?: EventSubscriptionFilter;
  /**
   * List of user defined labels.
   */
  labels?: string[];
  /**
   * Expiration time of the event subscription.
   */
  expirationTimeUtc?: Date;
  /**
   * The event delivery schema for the event subscription. Possible values include:
   * 'EventGridSchema', 'CustomInputSchema', 'CloudEventSchemaV1_0'. Default value:
   * 'EventGridSchema'.
   */
  eventDeliverySchema?: EventDeliverySchema;
  /**
   * The retry policy for events. This can be used to configure maximum number of delivery attempts
   * and time to live for events.
   */
  retryPolicy?: RetryPolicy;
  /**
   * The DeadLetter destination of the event subscription.
   */
  deadLetterDestination?: DeadLetterDestinationUnion;
  /**
   * The dead letter destination of the event subscription. Any event that cannot be delivered to
   * its' destination is sent to the dead letter destination.
   * Uses the managed identity setup on the parent resource (namely, topic or domain) to acquire
   * the authentication tokens being used during delivery / dead-lettering.
   */
  deadLetterWithResourceIdentity?: DeadLetterWithResourceIdentity;
  /**
   * The system metadata relating to Event Subscription resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
}

/**
 * Properties of the Event Subscription update.
 */
export interface EventSubscriptionUpdateParameters {
  /**
   * Information about the destination where events have to be delivered for the event
   * subscription.
   */
  destination?: EventSubscriptionDestinationUnion;
  /**
   * Information about the destination where events have to be delivered for the event
   * subscription.
   * Uses the managed identity setup on the parent resource (topic / domain) to acquire the
   * authentication tokens being used during delivery / dead-lettering.
   */
  deliveryWithResourceIdentity?: DeliveryWithResourceIdentity;
  /**
   * Information about the filter for the event subscription.
   */
  filter?: EventSubscriptionFilter;
  /**
   * List of user defined labels.
   */
  labels?: string[];
  /**
   * Information about the expiration time for the event subscription.
   */
  expirationTimeUtc?: Date;
  /**
   * The event delivery schema for the event subscription. Possible values include:
   * 'EventGridSchema', 'CustomInputSchema', 'CloudEventSchemaV1_0'
   */
  eventDeliverySchema?: EventDeliverySchema;
  /**
   * The retry policy for events. This can be used to configure maximum number of delivery attempts
   * and time to live for events.
   */
  retryPolicy?: RetryPolicy;
  /**
   * The DeadLetter destination of the event subscription.
   */
  deadLetterDestination?: DeadLetterDestinationUnion;
  /**
   * The dead letter destination of the event subscription. Any event that cannot be delivered to
   * its' destination is sent to the dead letter destination.
   * Uses the managed identity setup on the parent resource (topic / domain) to acquire the
   * authentication tokens being used during delivery / dead-lettering.
   */
  deadLetterWithResourceIdentity?: DeadLetterWithResourceIdentity;
}

/**
 * Full endpoint url of an event subscription
 */
export interface EventSubscriptionFullUrl {
  /**
   * The URL that represents the endpoint of the destination of an event subscription.
   */
  endpointUrl?: string;
}

/**
 * Result of the Get delivery attributes operation.
 */
export interface DeliveryAttributeListResult {
  /**
   * A collection of DeliveryAttributeMapping
   */
  value?: DeliveryAttributeMappingUnion[];
}

/**
 * Information about an operation
 */
export interface OperationInfo {
  /**
   * Name of the provider
   */
  provider?: string;
  /**
   * Name of the resource type
   */
  resource?: string;
  /**
   * Name of the operation
   */
  operation?: string;
  /**
   * Description of the operation
   */
  description?: string;
}

/**
 * Represents an operation returned by the GetOperations request
 */
export interface Operation {
  /**
   * Name of the operation
   */
  name?: string;
  /**
   * Display name of the operation
   */
  display?: OperationInfo;
  /**
   * Origin of the operation
   */
  origin?: string;
  /**
   * Properties of the operation
   */
  properties?: any;
}

/**
 * Information of the private link resource.
 */
export interface PrivateLinkResource {
  groupId?: string;
  displayName?: string;
  requiredMembers?: string[];
  requiredZoneNames?: string[];
  /**
   * Fully qualified identifier of the resource.
   */
  id?: string;
  /**
   * Name of the resource.
   */
  name?: string;
  /**
   * Type of the resource.
   */
  type?: string;
}

/**
 * EventGrid System Topic.
 */
export interface SystemTopic extends TrackedResource {
  /**
   * Provisioning state of the system topic. Possible values include: 'Creating', 'Updating',
   * 'Deleting', 'Succeeded', 'Canceled', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ResourceProvisioningState;
  /**
   * Source for the system topic.
   */
  source?: string;
  /**
   * TopicType for the system topic.
   */
  topicType?: string;
  /**
   * Metric resource id for the system topic.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly metricResourceId?: string;
  /**
   * Identity information for the resource.
   */
  identity?: IdentityInfo;
  /**
   * The system metadata relating to System Topic resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
}

/**
 * Properties of the System Topic update.
 */
export interface SystemTopicUpdateParameters {
  /**
   * Tags of the system topic.
   */
  tags?: { [propertyName: string]: string };
  /**
   * Resource identity information.
   */
  identity?: IdentityInfo;
}

/**
 * EventGrid Topic
 */
export interface Topic extends TrackedResource {
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly privateEndpointConnections?: PrivateEndpointConnection[];
  /**
   * Provisioning state of the topic. Possible values include: 'Creating', 'Updating', 'Deleting',
   * 'Succeeded', 'Canceled', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: TopicProvisioningState;
  /**
   * Endpoint for the topic.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endpoint?: string;
  /**
   * This determines the format that Event Grid should expect for incoming events published to the
   * topic. Possible values include: 'EventGridSchema', 'CustomEventSchema',
   * 'CloudEventSchemaV1_0'. Default value: 'EventGridSchema'.
   */
  inputSchema?: InputSchema;
  /**
   * This enables publishing using custom event schemas. An InputSchemaMapping can be specified to
   * map various properties of a source schema to various required properties of the EventGridEvent
   * schema.
   */
  inputSchemaMapping?: InputSchemaMappingUnion;
  /**
   * Metric resource id for the topic.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly metricResourceId?: string;
  /**
   * This determines if traffic is allowed over public network. By default it is enabled.
   * You can further restrict to specific IPs by configuring <seealso
   * cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules"
   * />. Possible values include: 'Enabled', 'Disabled'. Default value: 'Enabled'.
   */
  publicNetworkAccess?: PublicNetworkAccess;
  /**
   * This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are
   * considered only if PublicNetworkAccess is enabled.
   */
  inboundIpRules?: InboundIpRule[];
  /**
   * This boolean is used to enable or disable local auth. Default value is false. When the
   * property is set to true, only AAD token will be used to authenticate if user is allowed to
   * publish to the topic. Default value: false.
   */
  disableLocalAuth?: boolean;
  /**
   * Identity information for the resource.
   */
  identity?: IdentityInfo;
  /**
   * The system metadata relating to Topic resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
}

/**
 * Properties of the Topic update
 */
export interface TopicUpdateParameters {
  /**
   * Tags of the resource.
   */
  tags?: { [propertyName: string]: string };
  /**
   * Topic resource identity information.
   */
  identity?: IdentityInfo;
  /**
   * This determines if traffic is allowed over public network. By default it is enabled.
   * You can further restrict to specific IPs by configuring <seealso
   * cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicUpdateParameterProperties.InboundIpRules"
   * />. Possible values include: 'Enabled', 'Disabled'. Default value: 'Enabled'.
   */
  publicNetworkAccess?: PublicNetworkAccess;
  /**
   * This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are
   * considered only if PublicNetworkAccess is enabled.
   */
  inboundIpRules?: InboundIpRule[];
  /**
   * This boolean is used to enable or disable local auth. Default value is false. When the
   * property is set to true, only AAD token will be used to authenticate if user is allowed to
   * publish to the topic.
   */
  disableLocalAuth?: boolean;
}

/**
 * Shared access keys of the Topic
 */
export interface TopicSharedAccessKeys {
  /**
   * Shared access key1 for the topic.
   */
  key1?: string;
  /**
   * Shared access key2 for the topic.
   */
  key2?: string;
}

/**
 * Topic regenerate share access key request
 */
export interface TopicRegenerateKeyRequest {
  /**
   * Key name to regenerate key1 or key2
   */
  keyName: string;
}

/**
 * Event grid Extension Topic. This is used for getting Event Grid related metrics for Azure
 * resources.
 */
export interface ExtensionTopic extends Resource {
  /**
   * Description of the extension topic.
   */
  description?: string;
  /**
   * System topic resource id which is mapped to the source.
   */
  systemTopic?: string;
  /**
   * The system metadata relating to the Extension Topic resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
}

/**
 * Event Type for a subject under a topic
 */
export interface EventType extends Resource {
  /**
   * Display name of the event type.
   */
  displayName?: string;
  /**
   * Description of the event type.
   */
  description?: string;
  /**
   * Url of the schema for this event type.
   */
  schemaUrl?: string;
  /**
   * IsInDefaultSet flag of the event type.
   */
  isInDefaultSet?: boolean;
}

/**
 * Properties of a topic type info.
 */
export interface TopicTypeInfo extends Resource {
  /**
   * Namespace of the provider of the topic type.
   */
  provider?: string;
  /**
   * Display Name for the topic type.
   */
  displayName?: string;
  /**
   * Description of the topic type.
   */
  description?: string;
  /**
   * Region type of the resource. Possible values include: 'RegionalResource', 'GlobalResource'
   */
  resourceRegionType?: ResourceRegionType;
  /**
   * Provisioning state of the topic type. Possible values include: 'Creating', 'Updating',
   * 'Deleting', 'Succeeded', 'Canceled', 'Failed'
   */
  provisioningState?: TopicTypeProvisioningState;
  /**
   * List of locations supported by this topic type.
   */
  supportedLocations?: string[];
  /**
   * Source resource format.
   */
  sourceResourceFormat?: string;
  /**
   * Supported source scopes.
   */
  supportedScopesForSource?: string[];
}

/**
 * Optional Parameters.
 */
export interface DomainsListBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface DomainsListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface DomainsListBySubscriptionNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface DomainsListByResourceGroupNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface DomainTopicsListByDomainOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface DomainTopicsListByDomainNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListGlobalBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListGlobalBySubscriptionForTopicTypeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListGlobalByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListGlobalByResourceGroupForTopicTypeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListRegionalBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListRegionalByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListRegionalBySubscriptionForTopicTypeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListRegionalByResourceGroupForTopicTypeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListByResourceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListByDomainTopicOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListGlobalBySubscriptionNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListGlobalBySubscriptionForTopicTypeNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListGlobalByResourceGroupNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListGlobalByResourceGroupForTopicTypeNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListRegionalBySubscriptionNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListRegionalByResourceGroupNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListRegionalBySubscriptionForTopicTypeNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListRegionalByResourceGroupForTopicTypeNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListByResourceNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListByDomainTopicNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface SystemTopicEventSubscriptionsListBySystemTopicOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface SystemTopicEventSubscriptionsListBySystemTopicNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface TopicsListBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface TopicsListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface TopicsListBySubscriptionNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface TopicsListByResourceGroupNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface PrivateEndpointConnectionsListByResourceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface PrivateEndpointConnectionsListByResourceNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface PrivateLinkResourcesListByResourceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface PrivateLinkResourcesListByResourceNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface SystemTopicsListBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface SystemTopicsListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface SystemTopicsListBySubscriptionNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface SystemTopicsListByResourceGroupNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * An interface representing EventGridManagementClientOptions.
 */
export interface EventGridManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * Result of the List Domains operation.
 * @extends Array<Domain>
 */
export interface DomainsListResult extends Array<Domain> {
  /**
   * A link for the next page of domains.
   */
  nextLink?: string;
}

/**
 * @interface
 * Result of the List Domain Topics operation.
 * @extends Array<DomainTopic>
 */
export interface DomainTopicsListResult extends Array<DomainTopic> {
  /**
   * A link for the next page of domain topics.
   */
  nextLink?: string;
}

/**
 * @interface
 * Result of the List EventSubscriptions operation
 * @extends Array<EventSubscription>
 */
export interface EventSubscriptionsListResult extends Array<EventSubscription> {
  /**
   * A link for the next page of event subscriptions
   */
  nextLink?: string;
}

/**
 * @interface
 * Result of the List Operations operation
 * @extends Array<Operation>
 */
export interface OperationsListResult extends Array<Operation> {
}

/**
 * @interface
 * Result of the List Topics operation
 * @extends Array<Topic>
 */
export interface TopicsListResult extends Array<Topic> {
  /**
   * A link for the next page of topics
   */
  nextLink?: string;
}

/**
 * @interface
 * Result of the List Event Types operation
 * @extends Array<EventType>
 */
export interface EventTypesListResult extends Array<EventType> {
}

/**
 * @interface
 * Result of the list of all private endpoint connections operation.
 * @extends Array<PrivateEndpointConnection>
 */
export interface PrivateEndpointConnectionListResult extends Array<PrivateEndpointConnection> {
  /**
   * A link for the next page of private endpoint connection resources.
   */
  nextLink?: string;
}

/**
 * @interface
 * Result of the List private link resources operation.
 * @extends Array<PrivateLinkResource>
 */
export interface PrivateLinkResourcesListResult extends Array<PrivateLinkResource> {
  /**
   * A link for the next page of private link resources.
   */
  nextLink?: string;
}

/**
 * @interface
 * Result of the List System topics operation.
 * @extends Array<SystemTopic>
 */
export interface SystemTopicsListResult extends Array<SystemTopic> {
  /**
   * A link for the next page of topics.
   */
  nextLink?: string;
}

/**
 * @interface
 * Result of the List Topic Types operation
 * @extends Array<TopicTypeInfo>
 */
export interface TopicTypesListResult extends Array<TopicTypeInfo> {
}

/**
 * Defines values for PersistedConnectionStatus.
 * Possible values include: 'Pending', 'Approved', 'Rejected', 'Disconnected'
 * @readonly
 * @enum {string}
 */
export type PersistedConnectionStatus = 'Pending' | 'Approved' | 'Rejected' | 'Disconnected';

/**
 * Defines values for ResourceProvisioningState.
 * Possible values include: 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Canceled', 'Failed'
 * @readonly
 * @enum {string}
 */
export type ResourceProvisioningState = 'Creating' | 'Updating' | 'Deleting' | 'Succeeded' | 'Canceled' | 'Failed';

/**
 * Defines values for DomainProvisioningState.
 * Possible values include: 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Canceled', 'Failed'
 * @readonly
 * @enum {string}
 */
export type DomainProvisioningState = 'Creating' | 'Updating' | 'Deleting' | 'Succeeded' | 'Canceled' | 'Failed';

/**
 * Defines values for InputSchema.
 * Possible values include: 'EventGridSchema', 'CustomEventSchema', 'CloudEventSchemaV1_0'
 * @readonly
 * @enum {string}
 */
export type InputSchema = 'EventGridSchema' | 'CustomEventSchema' | 'CloudEventSchemaV1_0';

/**
 * Defines values for PublicNetworkAccess.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type PublicNetworkAccess = 'Enabled' | 'Disabled';

/**
 * Defines values for IpActionType.
 * Possible values include: 'Allow'
 * @readonly
 * @enum {string}
 */
export type IpActionType = 'Allow';

/**
 * Defines values for IdentityType.
 * Possible values include: 'None', 'SystemAssigned', 'UserAssigned', 'SystemAssigned,
 * UserAssigned'
 * @readonly
 * @enum {string}
 */
export type IdentityType = 'None' | 'SystemAssigned' | 'UserAssigned' | 'SystemAssigned, UserAssigned';

/**
 * Defines values for CreatedByType.
 * Possible values include: 'User', 'Application', 'ManagedIdentity', 'Key'
 * @readonly
 * @enum {string}
 */
export type CreatedByType = 'User' | 'Application' | 'ManagedIdentity' | 'Key';

/**
 * Defines values for DomainTopicProvisioningState.
 * Possible values include: 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Canceled', 'Failed'
 * @readonly
 * @enum {string}
 */
export type DomainTopicProvisioningState = 'Creating' | 'Updating' | 'Deleting' | 'Succeeded' | 'Canceled' | 'Failed';

/**
 * Defines values for EventSubscriptionProvisioningState.
 * Possible values include: 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Canceled', 'Failed',
 * 'AwaitingManualAction'
 * @readonly
 * @enum {string}
 */
export type EventSubscriptionProvisioningState = 'Creating' | 'Updating' | 'Deleting' | 'Succeeded' | 'Canceled' | 'Failed' | 'AwaitingManualAction';

/**
 * Defines values for EventSubscriptionIdentityType.
 * Possible values include: 'SystemAssigned', 'UserAssigned'
 * @readonly
 * @enum {string}
 */
export type EventSubscriptionIdentityType = 'SystemAssigned' | 'UserAssigned';

/**
 * Defines values for EventDeliverySchema.
 * Possible values include: 'EventGridSchema', 'CustomInputSchema', 'CloudEventSchemaV1_0'
 * @readonly
 * @enum {string}
 */
export type EventDeliverySchema = 'EventGridSchema' | 'CustomInputSchema' | 'CloudEventSchemaV1_0';

/**
 * Defines values for TopicProvisioningState.
 * Possible values include: 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Canceled', 'Failed'
 * @readonly
 * @enum {string}
 */
export type TopicProvisioningState = 'Creating' | 'Updating' | 'Deleting' | 'Succeeded' | 'Canceled' | 'Failed';

/**
 * Defines values for ResourceRegionType.
 * Possible values include: 'RegionalResource', 'GlobalResource'
 * @readonly
 * @enum {string}
 */
export type ResourceRegionType = 'RegionalResource' | 'GlobalResource';

/**
 * Defines values for TopicTypeProvisioningState.
 * Possible values include: 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Canceled', 'Failed'
 * @readonly
 * @enum {string}
 */
export type TopicTypeProvisioningState = 'Creating' | 'Updating' | 'Deleting' | 'Succeeded' | 'Canceled' | 'Failed';

/**
 * Defines values for ParentType.
 * Possible values include: 'topics', 'domains'
 * @readonly
 * @enum {string}
 */
export type ParentType = 'topics' | 'domains';

/**
 * Defines values for ParentType1.
 * Possible values include: 'topics', 'domains'
 * @readonly
 * @enum {string}
 */
export type ParentType1 = 'topics' | 'domains';

/**
 * Defines values for ParentType2.
 * Possible values include: 'topics', 'domains'
 * @readonly
 * @enum {string}
 */
export type ParentType2 = 'topics' | 'domains';

/**
 * Defines values for ParentType3.
 * Possible values include: 'topics', 'domains'
 * @readonly
 * @enum {string}
 */
export type ParentType3 = 'topics' | 'domains';

/**
 * Contains response data for the get operation.
 */
export type DomainsGetResponse = Domain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Domain;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DomainsCreateOrUpdateResponse = Domain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Domain;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DomainsUpdateResponse = Domain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Domain;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type DomainsListBySubscriptionResponse = DomainsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainsListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type DomainsListByResourceGroupResponse = DomainsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainsListResult;
    };
};

/**
 * Contains response data for the listSharedAccessKeys operation.
 */
export type DomainsListSharedAccessKeysResponse = DomainSharedAccessKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainSharedAccessKeys;
    };
};

/**
 * Contains response data for the regenerateKey operation.
 */
export type DomainsRegenerateKeyResponse = DomainSharedAccessKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainSharedAccessKeys;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type DomainsBeginCreateOrUpdateResponse = Domain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Domain;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type DomainsBeginUpdateResponse = Domain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Domain;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type DomainsListBySubscriptionNextResponse = DomainsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainsListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type DomainsListByResourceGroupNextResponse = DomainsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainsListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DomainTopicsGetResponse = DomainTopic & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainTopic;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DomainTopicsCreateOrUpdateResponse = DomainTopic & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainTopic;
    };
};

/**
 * Contains response data for the listByDomain operation.
 */
export type DomainTopicsListByDomainResponse = DomainTopicsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainTopicsListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type DomainTopicsBeginCreateOrUpdateResponse = DomainTopic & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainTopic;
    };
};

/**
 * Contains response data for the listByDomainNext operation.
 */
export type DomainTopicsListByDomainNextResponse = DomainTopicsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainTopicsListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type EventSubscriptionsGetResponse = EventSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscription;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type EventSubscriptionsCreateOrUpdateResponse = EventSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscription;
    };
};

/**
 * Contains response data for the update operation.
 */
export type EventSubscriptionsUpdateResponse = EventSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscription;
    };
};

/**
 * Contains response data for the getFullUrl operation.
 */
export type EventSubscriptionsGetFullUrlResponse = EventSubscriptionFullUrl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionFullUrl;
    };
};

/**
 * Contains response data for the listGlobalBySubscription operation.
 */
export type EventSubscriptionsListGlobalBySubscriptionResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listGlobalBySubscriptionForTopicType operation.
 */
export type EventSubscriptionsListGlobalBySubscriptionForTopicTypeResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listGlobalByResourceGroup operation.
 */
export type EventSubscriptionsListGlobalByResourceGroupResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listGlobalByResourceGroupForTopicType operation.
 */
export type EventSubscriptionsListGlobalByResourceGroupForTopicTypeResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listRegionalBySubscription operation.
 */
export type EventSubscriptionsListRegionalBySubscriptionResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listRegionalByResourceGroup operation.
 */
export type EventSubscriptionsListRegionalByResourceGroupResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listRegionalBySubscriptionForTopicType operation.
 */
export type EventSubscriptionsListRegionalBySubscriptionForTopicTypeResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listRegionalByResourceGroupForTopicType operation.
 */
export type EventSubscriptionsListRegionalByResourceGroupForTopicTypeResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listByResource operation.
 */
export type EventSubscriptionsListByResourceResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listByDomainTopic operation.
 */
export type EventSubscriptionsListByDomainTopicResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the getDeliveryAttributes operation.
 */
export type EventSubscriptionsGetDeliveryAttributesResponse = DeliveryAttributeListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeliveryAttributeListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type EventSubscriptionsBeginCreateOrUpdateResponse = EventSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscription;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type EventSubscriptionsBeginUpdateResponse = EventSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscription;
    };
};

/**
 * Contains response data for the listGlobalBySubscriptionNext operation.
 */
export type EventSubscriptionsListGlobalBySubscriptionNextResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listGlobalBySubscriptionForTopicTypeNext operation.
 */
export type EventSubscriptionsListGlobalBySubscriptionForTopicTypeNextResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listGlobalByResourceGroupNext operation.
 */
export type EventSubscriptionsListGlobalByResourceGroupNextResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listGlobalByResourceGroupForTopicTypeNext operation.
 */
export type EventSubscriptionsListGlobalByResourceGroupForTopicTypeNextResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listRegionalBySubscriptionNext operation.
 */
export type EventSubscriptionsListRegionalBySubscriptionNextResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listRegionalByResourceGroupNext operation.
 */
export type EventSubscriptionsListRegionalByResourceGroupNextResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listRegionalBySubscriptionForTopicTypeNext operation.
 */
export type EventSubscriptionsListRegionalBySubscriptionForTopicTypeNextResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listRegionalByResourceGroupForTopicTypeNext operation.
 */
export type EventSubscriptionsListRegionalByResourceGroupForTopicTypeNextResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listByResourceNext operation.
 */
export type EventSubscriptionsListByResourceNextResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listByDomainTopicNext operation.
 */
export type EventSubscriptionsListByDomainTopicNextResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SystemTopicEventSubscriptionsGetResponse = EventSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscription;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SystemTopicEventSubscriptionsCreateOrUpdateResponse = EventSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscription;
    };
};

/**
 * Contains response data for the update operation.
 */
export type SystemTopicEventSubscriptionsUpdateResponse = EventSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscription;
    };
};

/**
 * Contains response data for the getFullUrl operation.
 */
export type SystemTopicEventSubscriptionsGetFullUrlResponse = EventSubscriptionFullUrl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionFullUrl;
    };
};

/**
 * Contains response data for the listBySystemTopic operation.
 */
export type SystemTopicEventSubscriptionsListBySystemTopicResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the getDeliveryAttributes operation.
 */
export type SystemTopicEventSubscriptionsGetDeliveryAttributesResponse = DeliveryAttributeListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeliveryAttributeListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type SystemTopicEventSubscriptionsBeginCreateOrUpdateResponse = EventSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscription;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type SystemTopicEventSubscriptionsBeginUpdateResponse = EventSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscription;
    };
};

/**
 * Contains response data for the listBySystemTopicNext operation.
 */
export type SystemTopicEventSubscriptionsListBySystemTopicNextResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationsListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type TopicsGetResponse = Topic & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Topic;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type TopicsCreateOrUpdateResponse = Topic & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Topic;
    };
};

/**
 * Contains response data for the update operation.
 */
export type TopicsUpdateResponse = Topic & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Topic;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type TopicsListBySubscriptionResponse = TopicsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TopicsListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type TopicsListByResourceGroupResponse = TopicsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TopicsListResult;
    };
};

/**
 * Contains response data for the listSharedAccessKeys operation.
 */
export type TopicsListSharedAccessKeysResponse = TopicSharedAccessKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TopicSharedAccessKeys;
    };
};

/**
 * Contains response data for the regenerateKey operation.
 */
export type TopicsRegenerateKeyResponse = TopicSharedAccessKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TopicSharedAccessKeys;
    };
};

/**
 * Contains response data for the listEventTypes operation.
 */
export type TopicsListEventTypesResponse = EventTypesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventTypesListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type TopicsBeginCreateOrUpdateResponse = Topic & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Topic;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type TopicsBeginUpdateResponse = Topic & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Topic;
    };
};

/**
 * Contains response data for the beginRegenerateKey operation.
 */
export type TopicsBeginRegenerateKeyResponse = TopicSharedAccessKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TopicSharedAccessKeys;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type TopicsListBySubscriptionNextResponse = TopicsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TopicsListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type TopicsListByResourceGroupNextResponse = TopicsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TopicsListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnection;
    };
};

/**
 * Contains response data for the update operation.
 */
export type PrivateEndpointConnectionsUpdateResponse = PrivateEndpointConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnection;
    };
};

/**
 * Contains response data for the listByResource operation.
 */
export type PrivateEndpointConnectionsListByResourceResponse = PrivateEndpointConnectionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnectionListResult;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type PrivateEndpointConnectionsBeginUpdateResponse = PrivateEndpointConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnection;
    };
};

/**
 * Contains response data for the listByResourceNext operation.
 */
export type PrivateEndpointConnectionsListByResourceNextResponse = PrivateEndpointConnectionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnectionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PrivateLinkResourcesGetResponse = PrivateLinkResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkResource;
    };
};

/**
 * Contains response data for the listByResource operation.
 */
export type PrivateLinkResourcesListByResourceResponse = PrivateLinkResourcesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkResourcesListResult;
    };
};

/**
 * Contains response data for the listByResourceNext operation.
 */
export type PrivateLinkResourcesListByResourceNextResponse = PrivateLinkResourcesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkResourcesListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SystemTopicsGetResponse = SystemTopic & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SystemTopic;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SystemTopicsCreateOrUpdateResponse = SystemTopic & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SystemTopic;
    };
};

/**
 * Contains response data for the update operation.
 */
export type SystemTopicsUpdateResponse = SystemTopic & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SystemTopic;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type SystemTopicsListBySubscriptionResponse = SystemTopicsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SystemTopicsListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type SystemTopicsListByResourceGroupResponse = SystemTopicsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SystemTopicsListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type SystemTopicsBeginCreateOrUpdateResponse = SystemTopic & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SystemTopic;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type SystemTopicsBeginUpdateResponse = SystemTopic & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SystemTopic;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type SystemTopicsListBySubscriptionNextResponse = SystemTopicsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SystemTopicsListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type SystemTopicsListByResourceGroupNextResponse = SystemTopicsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SystemTopicsListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ExtensionTopicsGetResponse = ExtensionTopic & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtensionTopic;
    };
};

/**
 * Contains response data for the list operation.
 */
export type TopicTypesListResponse = TopicTypesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TopicTypesListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type TopicTypesGetResponse = TopicTypeInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TopicTypeInfo;
    };
};

/**
 * Contains response data for the listEventTypes operation.
 */
export type TopicTypesListEventTypesResponse = EventTypesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventTypesListResult;
    };
};
