/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Contains the possible cases for InputSchemaMapping.
 */
export type InputSchemaMappingUnion = InputSchemaMapping | JsonInputSchemaMapping;

/**
 * By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input
 * schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only
 * supported type of InputSchemaMapping is 'JsonInputSchemaMapping'.
 */
export interface InputSchemaMapping {
  /**
   * Polymorphic Discriminator
   */
  inputSchemaMappingType: "InputSchemaMapping";
}

/**
 * An interface representing InboundIpRule.
 */
export interface InboundIpRule {
  /**
   * IP Address in CIDR notation e.g., 10.0.0.0/8.
   */
  ipMask?: string;
  /**
   * Action to perform based on the match or no match of the IpMask. Possible values include:
   * 'Allow'
   */
  action?: IpActionType;
}

/**
 * Definition of a Resource
 */
export interface Resource extends BaseResource {
  /**
   * Fully qualified identifier of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * This is used to express the source of an input schema mapping for a single target field in the
 * Event Grid Event schema. This is currently used in the mappings for the 'id', 'topic' and
 * 'eventtime' properties. This represents a field in the input event schema.
 */
export interface JsonField {
  /**
   * Name of a field in the input event schema that's to be used as the source of a mapping.
   */
  sourceField?: string;
}

/**
 * This is used to express the source of an input schema mapping for a single target field
 * in the Event Grid Event schema. This is currently used in the mappings for the 'subject',
 * 'eventtype' and 'dataversion' properties. This represents a field in the input event schema
 * along with a default value to be used, and at least one of these two properties should be
 * provided.
 */
export interface JsonFieldWithDefault {
  /**
   * Name of a field in the input event schema that's to be used as the source of a mapping.
   */
  sourceField?: string;
  /**
   * The default value to be used for mapping when a SourceField is not provided or if there's no
   * property with the specified name in the published JSON event payload.
   */
  defaultValue?: string;
}

/**
 * This enables publishing to Event Grid using a custom input schema. This can be used to map
 * properties from a custom input JSON schema to the Event Grid event schema.
 */
export interface JsonInputSchemaMapping {
  /**
   * Polymorphic Discriminator
   */
  inputSchemaMappingType: "Json";
  /**
   * The mapping information for the Id property of the Event Grid Event.
   */
  id?: JsonField;
  /**
   * The mapping information for the Topic property of the Event Grid Event.
   */
  topic?: JsonField;
  /**
   * The mapping information for the EventTime property of the Event Grid Event.
   */
  eventTime?: JsonField;
  /**
   * The mapping information for the EventType property of the Event Grid Event.
   */
  eventType?: JsonFieldWithDefault;
  /**
   * The mapping information for the Subject property of the Event Grid Event.
   */
  subject?: JsonFieldWithDefault;
  /**
   * The mapping information for the DataVersion property of the Event Grid Event.
   */
  dataVersion?: JsonFieldWithDefault;
}

/**
 * Definition of a Tracked Resource.
 */
export interface TrackedResource extends Resource {
  /**
   * Location of the resource.
   */
  location: string;
  /**
   * Tags of the resource.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * EventGrid Domain.
 */
export interface Domain extends TrackedResource {
  /**
   * Provisioning state of the domain. Possible values include: 'Creating', 'Updating', 'Deleting',
   * 'Succeeded', 'Canceled', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: DomainProvisioningState;
  /**
   * Endpoint for the domain.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endpoint?: string;
  /**
   * This determines the format that Event Grid should expect for incoming events published to the
   * domain. Possible values include: 'EventGridSchema', 'CustomEventSchema',
   * 'CloudEventSchemaV1_0'. Default value: 'EventGridSchema'.
   */
  inputSchema?: InputSchema;
  /**
   * Information about the InputSchemaMapping which specified the info about mapping event payload.
   */
  inputSchemaMapping?: InputSchemaMappingUnion;
  /**
   * Metric resource id for the domain.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly metricResourceId?: string;
  /**
   * This determines if IP filtering rules ought to be evaluated or not. By default it will not
   * evaluate and will allow traffic from all IPs.
   */
  allowTrafficFromAllIPs?: boolean;
  /**
   * This determines the IP filtering rules that ought be applied when events are received on this
   * domain.
   */
  inboundIpRules?: InboundIpRule[];
}

/**
 * Properties of the Domain update
 */
export interface DomainUpdateParameters {
  /**
   * Tags of the domains resource
   */
  tags?: { [propertyName: string]: string };
  /**
   * This determines if IP filtering rules ought to be evaluated or not. By default it will not
   * evaluate and will allow traffic from all IPs.
   */
  allowTrafficFromAllIPs?: boolean;
  /**
   * This determines the IP filtering rules that ought be applied when events are received on this
   * domain.
   */
  inboundIpRules?: InboundIpRule[];
}

/**
 * Shared access keys of the Domain.
 */
export interface DomainSharedAccessKeys {
  /**
   * Shared access key1 for the domain.
   */
  key1?: string;
  /**
   * Shared access key2 for the domain.
   */
  key2?: string;
}

/**
 * Domain regenerate share access key request.
 */
export interface DomainRegenerateKeyRequest {
  /**
   * Key name to regenerate key1 or key2.
   */
  keyName: string;
}

/**
 * Domain Topic.
 */
export interface DomainTopic extends Resource {
  /**
   * Provisioning state of the domain topic. Possible values include: 'Creating', 'Updating',
   * 'Deleting', 'Succeeded', 'Canceled', 'Failed'
   */
  provisioningState?: DomainTopicProvisioningState;
}

/**
 * Contains the possible cases for EventSubscriptionDestination.
 */
export type EventSubscriptionDestinationUnion = EventSubscriptionDestination | WebHookEventSubscriptionDestination | EventHubEventSubscriptionDestination | StorageQueueEventSubscriptionDestination | HybridConnectionEventSubscriptionDestination | ServiceBusQueueEventSubscriptionDestination | ServiceBusTopicEventSubscriptionDestination | AzureFunctionEventSubscriptionDestination;

/**
 * Information about the destination for an event subscription
 */
export interface EventSubscriptionDestination {
  /**
   * Polymorphic Discriminator
   */
  endpointType: "EventSubscriptionDestination";
}

/**
 * Contains the possible cases for AdvancedFilter.
 */
export type AdvancedFilterUnion = AdvancedFilter | NumberInAdvancedFilter | NumberNotInAdvancedFilter | NumberLessThanAdvancedFilter | NumberGreaterThanAdvancedFilter | NumberLessThanOrEqualsAdvancedFilter | NumberGreaterThanOrEqualsAdvancedFilter | BoolEqualsAdvancedFilter | StringInAdvancedFilter | StringNotInAdvancedFilter | StringBeginsWithAdvancedFilter | StringEndsWithAdvancedFilter | StringContainsAdvancedFilter;

/**
 * This is the base type that represents an advanced filter. To configure an advanced filter, do
 * not directly instantiate an object of this class. Instead, instantiate an object of a derived
 * class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc.
 * depending on the type of the key based on which you want to filter.
 */
export interface AdvancedFilter {
  /**
   * Polymorphic Discriminator
   */
  operatorType: "AdvancedFilter";
  /**
   * The field/property in the event based on which you want to filter.
   */
  key?: string;
}

/**
 * Filter for the Event Subscription.
 */
export interface EventSubscriptionFilter {
  /**
   * An optional string to filter events for an event subscription based on a resource path prefix.
   * The format of this depends on the publisher of the events.
   * Wildcard characters are not supported in this path.
   */
  subjectBeginsWith?: string;
  /**
   * An optional string to filter events for an event subscription based on a resource path suffix.
   * Wildcard characters are not supported in this path.
   */
  subjectEndsWith?: string;
  /**
   * A list of applicable event types that need to be part of the event subscription. If it is
   * desired to subscribe to all default event types, set the IncludedEventTypes to null.
   */
  includedEventTypes?: string[];
  /**
   * Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter
   * should be compared in a case sensitive manner. Default value: false.
   */
  isSubjectCaseSensitive?: boolean;
  /**
   * An array of advanced filters that are used for filtering event subscriptions.
   */
  advancedFilters?: AdvancedFilterUnion[];
}

/**
 * Information about the retry policy for an event subscription.
 */
export interface RetryPolicy {
  /**
   * Maximum number of delivery retry attempts for events.
   */
  maxDeliveryAttempts?: number;
  /**
   * Time To Live (in minutes) for events.
   */
  eventTimeToLiveInMinutes?: number;
}

/**
 * Contains the possible cases for DeadLetterDestination.
 */
export type DeadLetterDestinationUnion = DeadLetterDestination | StorageBlobDeadLetterDestination;

/**
 * Information about the dead letter destination for an event subscription. To configure a
 * deadletter destination, do not directly instantiate an object of this class. Instead,
 * instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the
 * only class that derives from this class.
 */
export interface DeadLetterDestination {
  /**
   * Polymorphic Discriminator
   */
  endpointType: "DeadLetterDestination";
}

/**
 * NumberIn Advanced Filter.
 */
export interface NumberInAdvancedFilter {
  /**
   * Polymorphic Discriminator
   */
  operatorType: "NumberIn";
  /**
   * The field/property in the event based on which you want to filter.
   */
  key?: string;
  /**
   * The set of filter values.
   */
  values?: number[];
}

/**
 * Information about the storage blob based dead letter destination.
 */
export interface StorageBlobDeadLetterDestination {
  /**
   * Polymorphic Discriminator
   */
  endpointType: "StorageBlob";
  /**
   * The Azure Resource ID of the storage account that is the destination of the deadletter events
   */
  resourceId?: string;
  /**
   * The name of the Storage blob container that is the destination of the deadletter events
   */
  blobContainerName?: string;
}

/**
 * NumberNotIn Advanced Filter.
 */
export interface NumberNotInAdvancedFilter {
  /**
   * Polymorphic Discriminator
   */
  operatorType: "NumberNotIn";
  /**
   * The field/property in the event based on which you want to filter.
   */
  key?: string;
  /**
   * The set of filter values.
   */
  values?: number[];
}

/**
 * NumberLessThan Advanced Filter.
 */
export interface NumberLessThanAdvancedFilter {
  /**
   * Polymorphic Discriminator
   */
  operatorType: "NumberLessThan";
  /**
   * The field/property in the event based on which you want to filter.
   */
  key?: string;
  /**
   * The filter value.
   */
  value?: number;
}

/**
 * NumberGreaterThan Advanced Filter.
 */
export interface NumberGreaterThanAdvancedFilter {
  /**
   * Polymorphic Discriminator
   */
  operatorType: "NumberGreaterThan";
  /**
   * The field/property in the event based on which you want to filter.
   */
  key?: string;
  /**
   * The filter value.
   */
  value?: number;
}

/**
 * NumberLessThanOrEquals Advanced Filter.
 */
export interface NumberLessThanOrEqualsAdvancedFilter {
  /**
   * Polymorphic Discriminator
   */
  operatorType: "NumberLessThanOrEquals";
  /**
   * The field/property in the event based on which you want to filter.
   */
  key?: string;
  /**
   * The filter value.
   */
  value?: number;
}

/**
 * NumberGreaterThanOrEquals Advanced Filter.
 */
export interface NumberGreaterThanOrEqualsAdvancedFilter {
  /**
   * Polymorphic Discriminator
   */
  operatorType: "NumberGreaterThanOrEquals";
  /**
   * The field/property in the event based on which you want to filter.
   */
  key?: string;
  /**
   * The filter value.
   */
  value?: number;
}

/**
 * BoolEquals Advanced Filter.
 */
export interface BoolEqualsAdvancedFilter {
  /**
   * Polymorphic Discriminator
   */
  operatorType: "BoolEquals";
  /**
   * The field/property in the event based on which you want to filter.
   */
  key?: string;
  /**
   * The boolean filter value.
   */
  value?: boolean;
}

/**
 * StringIn Advanced Filter.
 */
export interface StringInAdvancedFilter {
  /**
   * Polymorphic Discriminator
   */
  operatorType: "StringIn";
  /**
   * The field/property in the event based on which you want to filter.
   */
  key?: string;
  /**
   * The set of filter values.
   */
  values?: string[];
}

/**
 * StringNotIn Advanced Filter.
 */
export interface StringNotInAdvancedFilter {
  /**
   * Polymorphic Discriminator
   */
  operatorType: "StringNotIn";
  /**
   * The field/property in the event based on which you want to filter.
   */
  key?: string;
  /**
   * The set of filter values.
   */
  values?: string[];
}

/**
 * StringBeginsWith Advanced Filter.
 */
export interface StringBeginsWithAdvancedFilter {
  /**
   * Polymorphic Discriminator
   */
  operatorType: "StringBeginsWith";
  /**
   * The field/property in the event based on which you want to filter.
   */
  key?: string;
  /**
   * The set of filter values.
   */
  values?: string[];
}

/**
 * StringEndsWith Advanced Filter.
 */
export interface StringEndsWithAdvancedFilter {
  /**
   * Polymorphic Discriminator
   */
  operatorType: "StringEndsWith";
  /**
   * The field/property in the event based on which you want to filter.
   */
  key?: string;
  /**
   * The set of filter values.
   */
  values?: string[];
}

/**
 * StringContains Advanced Filter.
 */
export interface StringContainsAdvancedFilter {
  /**
   * Polymorphic Discriminator
   */
  operatorType: "StringContains";
  /**
   * The field/property in the event based on which you want to filter.
   */
  key?: string;
  /**
   * The set of filter values.
   */
  values?: string[];
}

/**
 * Information about the webhook destination for an event subscription.
 */
export interface WebHookEventSubscriptionDestination {
  /**
   * Polymorphic Discriminator
   */
  endpointType: "WebHook";
  /**
   * The URL that represents the endpoint of the destination of an event subscription.
   */
  endpointUrl?: string;
  /**
   * The base URL that represents the endpoint of the destination of an event subscription.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endpointBaseUrl?: string;
  /**
   * Maximum number of events per batch.
   */
  maxEventsPerBatch?: number;
  /**
   * Preferred batch size in Kilobytes.
   */
  preferredBatchSizeInKilobytes?: number;
  /**
   * The Azure Active Directory Tenant ID to get the access token that will be included as the
   * bearer token in delivery requests.
   */
  azureActiveDirectoryTenantId?: string;
  /**
   * The Azure Active Directory Application ID or URI to get the access token that will be included
   * as the bearer token in delivery requests.
   */
  azureActiveDirectoryApplicationIdOrUri?: string;
}

/**
 * Information about the event hub destination for an event subscription.
 */
export interface EventHubEventSubscriptionDestination {
  /**
   * Polymorphic Discriminator
   */
  endpointType: "EventHub";
  /**
   * The Azure Resource Id that represents the endpoint of an Event Hub destination of an event
   * subscription.
   */
  resourceId?: string;
}

/**
 * Information about the storage queue destination for an event subscription.
 */
export interface StorageQueueEventSubscriptionDestination {
  /**
   * Polymorphic Discriminator
   */
  endpointType: "StorageQueue";
  /**
   * The Azure Resource ID of the storage account that contains the queue that is the destination
   * of an event subscription.
   */
  resourceId?: string;
  /**
   * The name of the Storage queue under a storage account that is the destination of an event
   * subscription.
   */
  queueName?: string;
}

/**
 * Information about the HybridConnection destination for an event subscription.
 */
export interface HybridConnectionEventSubscriptionDestination {
  /**
   * Polymorphic Discriminator
   */
  endpointType: "HybridConnection";
  /**
   * The Azure Resource ID of an hybrid connection that is the destination of an event
   * subscription.
   */
  resourceId?: string;
}

/**
 * Information about the service bus destination for an event subscription.
 */
export interface ServiceBusQueueEventSubscriptionDestination {
  /**
   * Polymorphic Discriminator
   */
  endpointType: "ServiceBusQueue";
  /**
   * The Azure Resource Id that represents the endpoint of the Service Bus destination of an event
   * subscription.
   */
  resourceId?: string;
}

/**
 * Information about the service bus topic destination for an event subscription.
 */
export interface ServiceBusTopicEventSubscriptionDestination {
  /**
   * Polymorphic Discriminator
   */
  endpointType: "ServiceBusTopic";
  /**
   * The Azure Resource Id that represents the endpoint of the Service Bus Topic destination of an
   * event subscription.
   */
  resourceId?: string;
}

/**
 * Information about the azure function destination for an event subscription.
 */
export interface AzureFunctionEventSubscriptionDestination {
  /**
   * Polymorphic Discriminator
   */
  endpointType: "AzureFunction";
  /**
   * The Azure Resource Id that represents the endpoint of the Azure Function destination of an
   * event subscription.
   */
  resourceId?: string;
  /**
   * Maximum number of events per batch.
   */
  maxEventsPerBatch?: number;
  /**
   * Preferred batch size in Kilobytes.
   */
  preferredBatchSizeInKilobytes?: number;
}

/**
 * Event Subscription
 */
export interface EventSubscription extends Resource {
  /**
   * Name of the topic of the event subscription.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly topic?: string;
  /**
   * Provisioning state of the event subscription. Possible values include: 'Creating', 'Updating',
   * 'Deleting', 'Succeeded', 'Canceled', 'Failed', 'AwaitingManualAction'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: EventSubscriptionProvisioningState;
  /**
   * Information about the destination where events have to be delivered for the event
   * subscription.
   */
  destination?: EventSubscriptionDestinationUnion;
  /**
   * Information about the filter for the event subscription.
   */
  filter?: EventSubscriptionFilter;
  /**
   * List of user defined labels.
   */
  labels?: string[];
  /**
   * Expiration time of the event subscription.
   */
  expirationTimeUtc?: Date;
  /**
   * The event delivery schema for the event subscription. Possible values include:
   * 'EventGridSchema', 'CustomInputSchema', 'CloudEventSchemaV1_0'
   */
  eventDeliverySchema?: EventDeliverySchema;
  /**
   * The retry policy for events. This can be used to configure maximum number of delivery attempts
   * and time to live for events.
   */
  retryPolicy?: RetryPolicy;
  /**
   * The DeadLetter destination of the event subscription.
   */
  deadLetterDestination?: DeadLetterDestinationUnion;
}

/**
 * Properties of the Event Subscription update.
 */
export interface EventSubscriptionUpdateParameters {
  /**
   * Information about the destination where events have to be delivered for the event
   * subscription.
   */
  destination?: EventSubscriptionDestinationUnion;
  /**
   * Information about the filter for the event subscription.
   */
  filter?: EventSubscriptionFilter;
  /**
   * List of user defined labels.
   */
  labels?: string[];
  /**
   * Information about the expiration time for the event subscription.
   */
  expirationTimeUtc?: Date;
  /**
   * The event delivery schema for the event subscription. Possible values include:
   * 'EventGridSchema', 'CustomInputSchema', 'CloudEventSchemaV1_0'
   */
  eventDeliverySchema?: EventDeliverySchema;
  /**
   * The retry policy for events. This can be used to configure maximum number of delivery attempts
   * and time to live for events.
   */
  retryPolicy?: RetryPolicy;
  /**
   * The DeadLetter destination of the event subscription.
   */
  deadLetterDestination?: DeadLetterDestinationUnion;
}

/**
 * Full endpoint url of an event subscription
 */
export interface EventSubscriptionFullUrl {
  /**
   * The URL that represents the endpoint of the destination of an event subscription.
   */
  endpointUrl?: string;
}

/**
 * Information about an operation
 */
export interface OperationInfo {
  /**
   * Name of the provider
   */
  provider?: string;
  /**
   * Name of the resource type
   */
  resource?: string;
  /**
   * Name of the operation
   */
  operation?: string;
  /**
   * Description of the operation
   */
  description?: string;
}

/**
 * Represents an operation returned by the GetOperations request
 */
export interface Operation {
  /**
   * Name of the operation
   */
  name?: string;
  /**
   * Display name of the operation
   */
  display?: OperationInfo;
  /**
   * Origin of the operation
   */
  origin?: string;
  /**
   * Properties of the operation
   */
  properties?: any;
}

/**
 * EventGrid Topic
 */
export interface Topic extends TrackedResource {
  /**
   * Provisioning state of the topic. Possible values include: 'Creating', 'Updating', 'Deleting',
   * 'Succeeded', 'Canceled', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: TopicProvisioningState;
  /**
   * Endpoint for the topic.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endpoint?: string;
  /**
   * This determines the format that Event Grid should expect for incoming events published to the
   * topic. Possible values include: 'EventGridSchema', 'CustomEventSchema',
   * 'CloudEventSchemaV1_0'. Default value: 'EventGridSchema'.
   */
  inputSchema?: InputSchema;
  /**
   * This enables publishing using custom event schemas. An InputSchemaMapping can be specified to
   * map various properties of a source schema to various required properties of the EventGridEvent
   * schema.
   */
  inputSchemaMapping?: InputSchemaMappingUnion;
  /**
   * Metric resource id for the topic.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly metricResourceId?: string;
  /**
   * This determines if IP filtering rules ought to be evaluated or not. By default it will not
   * evaluate and will allow traffic from all IPs.
   */
  allowTrafficFromAllIPs?: boolean;
  /**
   * This determines the IP filtering rules that ought to be applied when events are received on
   * this topic.
   */
  inboundIpRules?: InboundIpRule[];
}

/**
 * Properties of the Topic update
 */
export interface TopicUpdateParameters {
  /**
   * Tags of the resource.
   */
  tags?: { [propertyName: string]: string };
  /**
   * This determines if IP filtering rules ought to be evaluated or not. By default it will not
   * evaluate and will allow traffic from all IPs.
   */
  allowTrafficFromAllIPs?: boolean;
  /**
   * This determines the IP filtering rules that ought be applied when events are received on this
   * domain.
   */
  inboundIpRules?: InboundIpRule[];
}

/**
 * Shared access keys of the Topic
 */
export interface TopicSharedAccessKeys {
  /**
   * Shared access key1 for the topic.
   */
  key1?: string;
  /**
   * Shared access key2 for the topic.
   */
  key2?: string;
}

/**
 * Topic regenerate share access key request
 */
export interface TopicRegenerateKeyRequest {
  /**
   * Key name to regenerate key1 or key2
   */
  keyName: string;
}

/**
 * Event Type for a subject under a topic
 */
export interface EventType extends Resource {
  /**
   * Display name of the event type.
   */
  displayName?: string;
  /**
   * Description of the event type.
   */
  description?: string;
  /**
   * Url of the schema for this event type.
   */
  schemaUrl?: string;
  /**
   * IsInDefaultSet flag of the event type.
   */
  isInDefaultSet?: boolean;
}

/**
 * Properties of a topic type info.
 */
export interface TopicTypeInfo extends Resource {
  /**
   * Namespace of the provider of the topic type.
   */
  provider?: string;
  /**
   * Display Name for the topic type.
   */
  displayName?: string;
  /**
   * Description of the topic type.
   */
  description?: string;
  /**
   * Region type of the resource. Possible values include: 'RegionalResource', 'GlobalResource'
   */
  resourceRegionType?: ResourceRegionType;
  /**
   * Provisioning state of the topic type. Possible values include: 'Creating', 'Updating',
   * 'Deleting', 'Succeeded', 'Canceled', 'Failed'
   */
  provisioningState?: TopicTypeProvisioningState;
  /**
   * List of locations supported by this topic type.
   */
  supportedLocations?: string[];
  /**
   * Source resource format.
   */
  sourceResourceFormat?: string;
}

/**
 * Optional Parameters.
 */
export interface DomainsListBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface DomainsListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface DomainTopicsListByDomainOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListGlobalBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListGlobalBySubscriptionForTopicTypeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListGlobalByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListGlobalByResourceGroupForTopicTypeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListRegionalBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListRegionalByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListRegionalBySubscriptionForTopicTypeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListRegionalByResourceGroupForTopicTypeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListByResourceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface EventSubscriptionsListByDomainTopicOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface TopicsListBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface TopicsListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The query used to filter the search results using OData syntax. Filtering is permitted on the
   * 'name' property only and with limited number of OData operations. These operations are: the
   * 'contains' function as well as the following logical operations: not, and, or, eq (for equal),
   * and ne (for not equal). No arithmetic operations are supported. The following is a valid
   * filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is
   * not a valid filter example: $filter=location eq 'westus'.
   */
  filter?: string;
  /**
   * The number of results to return per page for the list operation. Valid range for top parameter
   * is 1 to 100. If not specified, the default number of results to be returned is 20 items per
   * page.
   */
  top?: number;
}

/**
 * An interface representing EventGridManagementClientOptions.
 */
export interface EventGridManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * Result of the List Domains operation
 * @extends Array<Domain>
 */
export interface DomainsListResult extends Array<Domain> {
  /**
   * A link for the next page of domains
   */
  nextLink?: string;
}

/**
 * @interface
 * Result of the List Domain Topics operation
 * @extends Array<DomainTopic>
 */
export interface DomainTopicsListResult extends Array<DomainTopic> {
  /**
   * A link for the next page of domain topics
   */
  nextLink?: string;
}

/**
 * @interface
 * Result of the List EventSubscriptions operation
 * @extends Array<EventSubscription>
 */
export interface EventSubscriptionsListResult extends Array<EventSubscription> {
  /**
   * A link for the next page of event subscriptions
   */
  nextLink?: string;
}

/**
 * @interface
 * Result of the List Operations operation
 * @extends Array<Operation>
 */
export interface OperationsListResult extends Array<Operation> {
}

/**
 * @interface
 * Result of the List Topics operation
 * @extends Array<Topic>
 */
export interface TopicsListResult extends Array<Topic> {
  /**
   * A link for the next page of topics
   */
  nextLink?: string;
}

/**
 * @interface
 * Result of the List Event Types operation
 * @extends Array<EventType>
 */
export interface EventTypesListResult extends Array<EventType> {
}

/**
 * @interface
 * Result of the List Topic Types operation
 * @extends Array<TopicTypeInfo>
 */
export interface TopicTypesListResult extends Array<TopicTypeInfo> {
}

/**
 * Defines values for DomainProvisioningState.
 * Possible values include: 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Canceled', 'Failed'
 * @readonly
 * @enum {string}
 */
export type DomainProvisioningState = 'Creating' | 'Updating' | 'Deleting' | 'Succeeded' | 'Canceled' | 'Failed';

/**
 * Defines values for InputSchema.
 * Possible values include: 'EventGridSchema', 'CustomEventSchema', 'CloudEventSchemaV1_0'
 * @readonly
 * @enum {string}
 */
export type InputSchema = 'EventGridSchema' | 'CustomEventSchema' | 'CloudEventSchemaV1_0';

/**
 * Defines values for IpActionType.
 * Possible values include: 'Allow'
 * @readonly
 * @enum {string}
 */
export type IpActionType = 'Allow';

/**
 * Defines values for DomainTopicProvisioningState.
 * Possible values include: 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Canceled', 'Failed'
 * @readonly
 * @enum {string}
 */
export type DomainTopicProvisioningState = 'Creating' | 'Updating' | 'Deleting' | 'Succeeded' | 'Canceled' | 'Failed';

/**
 * Defines values for EventSubscriptionProvisioningState.
 * Possible values include: 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Canceled', 'Failed',
 * 'AwaitingManualAction'
 * @readonly
 * @enum {string}
 */
export type EventSubscriptionProvisioningState = 'Creating' | 'Updating' | 'Deleting' | 'Succeeded' | 'Canceled' | 'Failed' | 'AwaitingManualAction';

/**
 * Defines values for EventDeliverySchema.
 * Possible values include: 'EventGridSchema', 'CustomInputSchema', 'CloudEventSchemaV1_0'
 * @readonly
 * @enum {string}
 */
export type EventDeliverySchema = 'EventGridSchema' | 'CustomInputSchema' | 'CloudEventSchemaV1_0';

/**
 * Defines values for TopicProvisioningState.
 * Possible values include: 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Canceled', 'Failed'
 * @readonly
 * @enum {string}
 */
export type TopicProvisioningState = 'Creating' | 'Updating' | 'Deleting' | 'Succeeded' | 'Canceled' | 'Failed';

/**
 * Defines values for ResourceRegionType.
 * Possible values include: 'RegionalResource', 'GlobalResource'
 * @readonly
 * @enum {string}
 */
export type ResourceRegionType = 'RegionalResource' | 'GlobalResource';

/**
 * Defines values for TopicTypeProvisioningState.
 * Possible values include: 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Canceled', 'Failed'
 * @readonly
 * @enum {string}
 */
export type TopicTypeProvisioningState = 'Creating' | 'Updating' | 'Deleting' | 'Succeeded' | 'Canceled' | 'Failed';

/**
 * Contains response data for the get operation.
 */
export type DomainsGetResponse = Domain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Domain;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DomainsCreateOrUpdateResponse = Domain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Domain;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DomainsUpdateResponse = Domain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Domain;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type DomainsListBySubscriptionResponse = DomainsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainsListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type DomainsListByResourceGroupResponse = DomainsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainsListResult;
    };
};

/**
 * Contains response data for the listSharedAccessKeys operation.
 */
export type DomainsListSharedAccessKeysResponse = DomainSharedAccessKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainSharedAccessKeys;
    };
};

/**
 * Contains response data for the regenerateKey operation.
 */
export type DomainsRegenerateKeyResponse = DomainSharedAccessKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainSharedAccessKeys;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type DomainsBeginCreateOrUpdateResponse = Domain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Domain;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type DomainsBeginUpdateResponse = Domain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Domain;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type DomainsListBySubscriptionNextResponse = DomainsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainsListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type DomainsListByResourceGroupNextResponse = DomainsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainsListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DomainTopicsGetResponse = DomainTopic & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainTopic;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DomainTopicsCreateOrUpdateResponse = DomainTopic & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainTopic;
    };
};

/**
 * Contains response data for the listByDomain operation.
 */
export type DomainTopicsListByDomainResponse = DomainTopicsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainTopicsListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type DomainTopicsBeginCreateOrUpdateResponse = DomainTopic & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainTopic;
    };
};

/**
 * Contains response data for the listByDomainNext operation.
 */
export type DomainTopicsListByDomainNextResponse = DomainTopicsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainTopicsListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type EventSubscriptionsGetResponse = EventSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscription;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type EventSubscriptionsCreateOrUpdateResponse = EventSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscription;
    };
};

/**
 * Contains response data for the update operation.
 */
export type EventSubscriptionsUpdateResponse = EventSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscription;
    };
};

/**
 * Contains response data for the getFullUrl operation.
 */
export type EventSubscriptionsGetFullUrlResponse = EventSubscriptionFullUrl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionFullUrl;
    };
};

/**
 * Contains response data for the listGlobalBySubscription operation.
 */
export type EventSubscriptionsListGlobalBySubscriptionResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listGlobalBySubscriptionForTopicType operation.
 */
export type EventSubscriptionsListGlobalBySubscriptionForTopicTypeResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listGlobalByResourceGroup operation.
 */
export type EventSubscriptionsListGlobalByResourceGroupResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listGlobalByResourceGroupForTopicType operation.
 */
export type EventSubscriptionsListGlobalByResourceGroupForTopicTypeResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listRegionalBySubscription operation.
 */
export type EventSubscriptionsListRegionalBySubscriptionResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listRegionalByResourceGroup operation.
 */
export type EventSubscriptionsListRegionalByResourceGroupResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listRegionalBySubscriptionForTopicType operation.
 */
export type EventSubscriptionsListRegionalBySubscriptionForTopicTypeResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listRegionalByResourceGroupForTopicType operation.
 */
export type EventSubscriptionsListRegionalByResourceGroupForTopicTypeResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listByResource operation.
 */
export type EventSubscriptionsListByResourceResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listByDomainTopic operation.
 */
export type EventSubscriptionsListByDomainTopicResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type EventSubscriptionsBeginCreateOrUpdateResponse = EventSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscription;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type EventSubscriptionsBeginUpdateResponse = EventSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscription;
    };
};

/**
 * Contains response data for the listGlobalBySubscriptionNext operation.
 */
export type EventSubscriptionsListGlobalBySubscriptionNextResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listGlobalBySubscriptionForTopicTypeNext operation.
 */
export type EventSubscriptionsListGlobalBySubscriptionForTopicTypeNextResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listGlobalByResourceGroupNext operation.
 */
export type EventSubscriptionsListGlobalByResourceGroupNextResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listGlobalByResourceGroupForTopicTypeNext operation.
 */
export type EventSubscriptionsListGlobalByResourceGroupForTopicTypeNextResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listRegionalBySubscriptionNext operation.
 */
export type EventSubscriptionsListRegionalBySubscriptionNextResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listRegionalByResourceGroupNext operation.
 */
export type EventSubscriptionsListRegionalByResourceGroupNextResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listRegionalBySubscriptionForTopicTypeNext operation.
 */
export type EventSubscriptionsListRegionalBySubscriptionForTopicTypeNextResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listRegionalByResourceGroupForTopicTypeNext operation.
 */
export type EventSubscriptionsListRegionalByResourceGroupForTopicTypeNextResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listByResourceNext operation.
 */
export type EventSubscriptionsListByResourceNextResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listByDomainTopicNext operation.
 */
export type EventSubscriptionsListByDomainTopicNextResponse = EventSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSubscriptionsListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationsListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type TopicsGetResponse = Topic & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Topic;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type TopicsCreateOrUpdateResponse = Topic & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Topic;
    };
};

/**
 * Contains response data for the update operation.
 */
export type TopicsUpdateResponse = Topic & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Topic;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type TopicsListBySubscriptionResponse = TopicsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TopicsListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type TopicsListByResourceGroupResponse = TopicsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TopicsListResult;
    };
};

/**
 * Contains response data for the listSharedAccessKeys operation.
 */
export type TopicsListSharedAccessKeysResponse = TopicSharedAccessKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TopicSharedAccessKeys;
    };
};

/**
 * Contains response data for the regenerateKey operation.
 */
export type TopicsRegenerateKeyResponse = TopicSharedAccessKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TopicSharedAccessKeys;
    };
};

/**
 * Contains response data for the listEventTypes operation.
 */
export type TopicsListEventTypesResponse = EventTypesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventTypesListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type TopicsBeginCreateOrUpdateResponse = Topic & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Topic;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type TopicsBeginUpdateResponse = Topic & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Topic;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type TopicsListBySubscriptionNextResponse = TopicsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TopicsListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type TopicsListByResourceGroupNextResponse = TopicsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TopicsListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type TopicTypesListResponse = TopicTypesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TopicTypesListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type TopicTypesGetResponse = TopicTypeInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TopicTypeInfo;
    };
};

/**
 * Contains response data for the listEventTypes operation.
 */
export type TopicTypesListEventTypesResponse = EventTypesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventTypesListResult;
    };
};
