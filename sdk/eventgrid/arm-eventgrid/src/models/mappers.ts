/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const PrivateEndpoint: msRest.CompositeMapper = {
  serializedName: "PrivateEndpoint",
  type: {
    name: "Composite",
    className: "PrivateEndpoint",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConnectionState: msRest.CompositeMapper = {
  serializedName: "ConnectionState",
  type: {
    name: "Composite",
    className: "ConnectionState",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      actionsRequired: {
        serializedName: "actionsRequired",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointConnection: msRest.CompositeMapper = {
  serializedName: "PrivateEndpointConnection",
  type: {
    name: "Composite",
    className: "PrivateEndpointConnection",
    modelProperties: {
      ...Resource.type.modelProperties,
      privateEndpoint: {
        serializedName: "properties.privateEndpoint",
        type: {
          name: "Composite",
          className: "PrivateEndpoint"
        }
      },
      groupIds: {
        serializedName: "properties.groupIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      privateLinkServiceConnectionState: {
        serializedName: "properties.privateLinkServiceConnectionState",
        type: {
          name: "Composite",
          className: "ConnectionState"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InputSchemaMapping: msRest.CompositeMapper = {
  serializedName: "InputSchemaMapping",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "inputSchemaMappingType",
      clientName: "inputSchemaMappingType"
    },
    uberParent: "InputSchemaMapping",
    className: "InputSchemaMapping",
    modelProperties: {
      inputSchemaMappingType: {
        required: true,
        serializedName: "inputSchemaMappingType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InboundIpRule: msRest.CompositeMapper = {
  serializedName: "InboundIpRule",
  type: {
    name: "Composite",
    className: "InboundIpRule",
    modelProperties: {
      ipMask: {
        serializedName: "ipMask",
        type: {
          name: "String"
        }
      },
      action: {
        serializedName: "action",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceSku: msRest.CompositeMapper = {
  serializedName: "ResourceSku",
  type: {
    name: "Composite",
    className: "ResourceSku",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserIdentityProperties: msRest.CompositeMapper = {
  serializedName: "UserIdentityProperties",
  type: {
    name: "Composite",
    className: "UserIdentityProperties",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      clientId: {
        serializedName: "clientId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IdentityInfo: msRest.CompositeMapper = {
  serializedName: "IdentityInfo",
  type: {
    name: "Composite",
    className: "IdentityInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "UserIdentityProperties"
            }
          }
        }
      }
    }
  }
};

export const JsonField: msRest.CompositeMapper = {
  serializedName: "JsonField",
  type: {
    name: "Composite",
    className: "JsonField",
    modelProperties: {
      sourceField: {
        serializedName: "sourceField",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JsonFieldWithDefault: msRest.CompositeMapper = {
  serializedName: "JsonFieldWithDefault",
  type: {
    name: "Composite",
    className: "JsonFieldWithDefault",
    modelProperties: {
      sourceField: {
        serializedName: "sourceField",
        type: {
          name: "String"
        }
      },
      defaultValue: {
        serializedName: "defaultValue",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JsonInputSchemaMapping: msRest.CompositeMapper = {
  serializedName: "Json",
  type: {
    name: "Composite",
    polymorphicDiscriminator: InputSchemaMapping.type.polymorphicDiscriminator,
    uberParent: "InputSchemaMapping",
    className: "JsonInputSchemaMapping",
    modelProperties: {
      ...InputSchemaMapping.type.modelProperties,
      id: {
        serializedName: "properties.id",
        type: {
          name: "Composite",
          className: "JsonField"
        }
      },
      topic: {
        serializedName: "properties.topic",
        type: {
          name: "Composite",
          className: "JsonField"
        }
      },
      eventTime: {
        serializedName: "properties.eventTime",
        type: {
          name: "Composite",
          className: "JsonField"
        }
      },
      eventType: {
        serializedName: "properties.eventType",
        type: {
          name: "Composite",
          className: "JsonFieldWithDefault"
        }
      },
      subject: {
        serializedName: "properties.subject",
        type: {
          name: "Composite",
          className: "JsonFieldWithDefault"
        }
      },
      dataVersion: {
        serializedName: "properties.dataVersion",
        type: {
          name: "Composite",
          className: "JsonFieldWithDefault"
        }
      }
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Domain: msRest.CompositeMapper = {
  serializedName: "Domain",
  type: {
    name: "Composite",
    className: "Domain",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      privateEndpointConnections: {
        serializedName: "properties.privateEndpointConnections",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnection"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      endpoint: {
        readOnly: true,
        serializedName: "properties.endpoint",
        type: {
          name: "String"
        }
      },
      inputSchema: {
        serializedName: "properties.inputSchema",
        defaultValue: 'EventGridSchema',
        type: {
          name: "String"
        }
      },
      inputSchemaMapping: {
        serializedName: "properties.inputSchemaMapping",
        type: {
          name: "Composite",
          className: "InputSchemaMapping"
        }
      },
      metricResourceId: {
        readOnly: true,
        serializedName: "properties.metricResourceId",
        type: {
          name: "String"
        }
      },
      publicNetworkAccess: {
        serializedName: "properties.publicNetworkAccess",
        type: {
          name: "String"
        }
      },
      inboundIpRules: {
        serializedName: "properties.inboundIpRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InboundIpRule"
            }
          }
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "ResourceSku"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "IdentityInfo"
        }
      }
    }
  }
};

export const DomainUpdateParameters: msRest.CompositeMapper = {
  serializedName: "DomainUpdateParameters",
  type: {
    name: "Composite",
    className: "DomainUpdateParameters",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      publicNetworkAccess: {
        serializedName: "properties.publicNetworkAccess",
        type: {
          name: "String"
        }
      },
      inboundIpRules: {
        serializedName: "properties.inboundIpRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InboundIpRule"
            }
          }
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "IdentityInfo"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "ResourceSku"
        }
      }
    }
  }
};

export const DomainSharedAccessKeys: msRest.CompositeMapper = {
  serializedName: "DomainSharedAccessKeys",
  type: {
    name: "Composite",
    className: "DomainSharedAccessKeys",
    modelProperties: {
      key1: {
        serializedName: "key1",
        type: {
          name: "String"
        }
      },
      key2: {
        serializedName: "key2",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DomainRegenerateKeyRequest: msRest.CompositeMapper = {
  serializedName: "DomainRegenerateKeyRequest",
  type: {
    name: "Composite",
    className: "DomainRegenerateKeyRequest",
    modelProperties: {
      keyName: {
        required: true,
        serializedName: "keyName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DomainTopic: msRest.CompositeMapper = {
  serializedName: "DomainTopic",
  type: {
    name: "Composite",
    className: "DomainTopic",
    modelProperties: {
      ...Resource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventChannelSource: msRest.CompositeMapper = {
  serializedName: "EventChannelSource",
  type: {
    name: "Composite",
    className: "EventChannelSource",
    modelProperties: {
      source: {
        serializedName: "source",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventChannelDestination: msRest.CompositeMapper = {
  serializedName: "EventChannelDestination",
  type: {
    name: "Composite",
    className: "EventChannelDestination",
    modelProperties: {
      azureSubscriptionId: {
        serializedName: "azureSubscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      partnerTopicName: {
        serializedName: "partnerTopicName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AdvancedFilter: msRest.CompositeMapper = {
  serializedName: "AdvancedFilter",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "operatorType",
      clientName: "operatorType"
    },
    uberParent: "AdvancedFilter",
    className: "AdvancedFilter",
    modelProperties: {
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      operatorType: {
        required: true,
        serializedName: "operatorType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventChannelFilter: msRest.CompositeMapper = {
  serializedName: "EventChannelFilter",
  type: {
    name: "Composite",
    className: "EventChannelFilter",
    modelProperties: {
      enableAdvancedFilteringOnArrays: {
        serializedName: "enableAdvancedFilteringOnArrays",
        type: {
          name: "Boolean"
        }
      },
      advancedFilters: {
        serializedName: "advancedFilters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AdvancedFilter"
            }
          }
        }
      }
    }
  }
};

export const NumberInAdvancedFilter: msRest.CompositeMapper = {
  serializedName: "NumberIn",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AdvancedFilter.type.polymorphicDiscriminator,
    uberParent: "AdvancedFilter",
    className: "NumberInAdvancedFilter",
    modelProperties: {
      ...AdvancedFilter.type.modelProperties,
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      }
    }
  }
};

export const NumberNotInAdvancedFilter: msRest.CompositeMapper = {
  serializedName: "NumberNotIn",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AdvancedFilter.type.polymorphicDiscriminator,
    uberParent: "AdvancedFilter",
    className: "NumberNotInAdvancedFilter",
    modelProperties: {
      ...AdvancedFilter.type.modelProperties,
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      }
    }
  }
};

export const NumberLessThanAdvancedFilter: msRest.CompositeMapper = {
  serializedName: "NumberLessThan",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AdvancedFilter.type.polymorphicDiscriminator,
    uberParent: "AdvancedFilter",
    className: "NumberLessThanAdvancedFilter",
    modelProperties: {
      ...AdvancedFilter.type.modelProperties,
      value: {
        serializedName: "value",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const NumberGreaterThanAdvancedFilter: msRest.CompositeMapper = {
  serializedName: "NumberGreaterThan",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AdvancedFilter.type.polymorphicDiscriminator,
    uberParent: "AdvancedFilter",
    className: "NumberGreaterThanAdvancedFilter",
    modelProperties: {
      ...AdvancedFilter.type.modelProperties,
      value: {
        serializedName: "value",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const NumberLessThanOrEqualsAdvancedFilter: msRest.CompositeMapper = {
  serializedName: "NumberLessThanOrEquals",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AdvancedFilter.type.polymorphicDiscriminator,
    uberParent: "AdvancedFilter",
    className: "NumberLessThanOrEqualsAdvancedFilter",
    modelProperties: {
      ...AdvancedFilter.type.modelProperties,
      value: {
        serializedName: "value",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const NumberGreaterThanOrEqualsAdvancedFilter: msRest.CompositeMapper = {
  serializedName: "NumberGreaterThanOrEquals",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AdvancedFilter.type.polymorphicDiscriminator,
    uberParent: "AdvancedFilter",
    className: "NumberGreaterThanOrEqualsAdvancedFilter",
    modelProperties: {
      ...AdvancedFilter.type.modelProperties,
      value: {
        serializedName: "value",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const BoolEqualsAdvancedFilter: msRest.CompositeMapper = {
  serializedName: "BoolEquals",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AdvancedFilter.type.polymorphicDiscriminator,
    uberParent: "AdvancedFilter",
    className: "BoolEqualsAdvancedFilter",
    modelProperties: {
      ...AdvancedFilter.type.modelProperties,
      value: {
        serializedName: "value",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const StringInAdvancedFilter: msRest.CompositeMapper = {
  serializedName: "StringIn",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AdvancedFilter.type.polymorphicDiscriminator,
    uberParent: "AdvancedFilter",
    className: "StringInAdvancedFilter",
    modelProperties: {
      ...AdvancedFilter.type.modelProperties,
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const StringNotInAdvancedFilter: msRest.CompositeMapper = {
  serializedName: "StringNotIn",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AdvancedFilter.type.polymorphicDiscriminator,
    uberParent: "AdvancedFilter",
    className: "StringNotInAdvancedFilter",
    modelProperties: {
      ...AdvancedFilter.type.modelProperties,
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const StringBeginsWithAdvancedFilter: msRest.CompositeMapper = {
  serializedName: "StringBeginsWith",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AdvancedFilter.type.polymorphicDiscriminator,
    uberParent: "AdvancedFilter",
    className: "StringBeginsWithAdvancedFilter",
    modelProperties: {
      ...AdvancedFilter.type.modelProperties,
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const StringEndsWithAdvancedFilter: msRest.CompositeMapper = {
  serializedName: "StringEndsWith",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AdvancedFilter.type.polymorphicDiscriminator,
    uberParent: "AdvancedFilter",
    className: "StringEndsWithAdvancedFilter",
    modelProperties: {
      ...AdvancedFilter.type.modelProperties,
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const StringContainsAdvancedFilter: msRest.CompositeMapper = {
  serializedName: "StringContains",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AdvancedFilter.type.polymorphicDiscriminator,
    uberParent: "AdvancedFilter",
    className: "StringContainsAdvancedFilter",
    modelProperties: {
      ...AdvancedFilter.type.modelProperties,
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const NumberInRangeAdvancedFilter: msRest.CompositeMapper = {
  serializedName: "NumberInRange",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AdvancedFilter.type.polymorphicDiscriminator,
    uberParent: "AdvancedFilter",
    className: "NumberInRangeAdvancedFilter",
    modelProperties: {
      ...AdvancedFilter.type.modelProperties,
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "Number"
                }
              }
            }
          }
        }
      }
    }
  }
};

export const NumberNotInRangeAdvancedFilter: msRest.CompositeMapper = {
  serializedName: "NumberNotInRange",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AdvancedFilter.type.polymorphicDiscriminator,
    uberParent: "AdvancedFilter",
    className: "NumberNotInRangeAdvancedFilter",
    modelProperties: {
      ...AdvancedFilter.type.modelProperties,
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "Number"
                }
              }
            }
          }
        }
      }
    }
  }
};

export const StringNotBeginsWithAdvancedFilter: msRest.CompositeMapper = {
  serializedName: "StringNotBeginsWith",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AdvancedFilter.type.polymorphicDiscriminator,
    uberParent: "AdvancedFilter",
    className: "StringNotBeginsWithAdvancedFilter",
    modelProperties: {
      ...AdvancedFilter.type.modelProperties,
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const StringNotEndsWithAdvancedFilter: msRest.CompositeMapper = {
  serializedName: "StringNotEndsWith",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AdvancedFilter.type.polymorphicDiscriminator,
    uberParent: "AdvancedFilter",
    className: "StringNotEndsWithAdvancedFilter",
    modelProperties: {
      ...AdvancedFilter.type.modelProperties,
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const StringNotContainsAdvancedFilter: msRest.CompositeMapper = {
  serializedName: "StringNotContains",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AdvancedFilter.type.polymorphicDiscriminator,
    uberParent: "AdvancedFilter",
    className: "StringNotContainsAdvancedFilter",
    modelProperties: {
      ...AdvancedFilter.type.modelProperties,
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const IsNullOrUndefinedAdvancedFilter: msRest.CompositeMapper = {
  serializedName: "IsNullOrUndefined",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AdvancedFilter.type.polymorphicDiscriminator,
    uberParent: "AdvancedFilter",
    className: "IsNullOrUndefinedAdvancedFilter",
    modelProperties: {
      ...AdvancedFilter.type.modelProperties
    }
  }
};

export const IsNotNullAdvancedFilter: msRest.CompositeMapper = {
  serializedName: "IsNotNull",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AdvancedFilter.type.polymorphicDiscriminator,
    uberParent: "AdvancedFilter",
    className: "IsNotNullAdvancedFilter",
    modelProperties: {
      ...AdvancedFilter.type.modelProperties
    }
  }
};

export const SystemData: msRest.CompositeMapper = {
  serializedName: "systemData",
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const EventChannel: msRest.CompositeMapper = {
  serializedName: "EventChannel",
  type: {
    name: "Composite",
    className: "EventChannel",
    modelProperties: {
      ...Resource.type.modelProperties,
      source: {
        serializedName: "properties.source",
        type: {
          name: "Composite",
          className: "EventChannelSource"
        }
      },
      destination: {
        serializedName: "properties.destination",
        type: {
          name: "Composite",
          className: "EventChannelDestination"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      partnerTopicReadinessState: {
        readOnly: true,
        serializedName: "properties.partnerTopicReadinessState",
        type: {
          name: "String"
        }
      },
      expirationTimeIfNotActivatedUtc: {
        serializedName: "properties.expirationTimeIfNotActivatedUtc",
        type: {
          name: "DateTime"
        }
      },
      filter: {
        serializedName: "properties.filter",
        type: {
          name: "Composite",
          className: "EventChannelFilter"
        }
      },
      partnerTopicFriendlyDescription: {
        serializedName: "properties.partnerTopicFriendlyDescription",
        type: {
          name: "String"
        }
      },
      systemData: {
        readOnly: true,
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const EventSubscriptionDestination: msRest.CompositeMapper = {
  serializedName: "EventSubscriptionDestination",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "endpointType",
      clientName: "endpointType"
    },
    uberParent: "EventSubscriptionDestination",
    className: "EventSubscriptionDestination",
    modelProperties: {
      endpointType: {
        required: true,
        serializedName: "endpointType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventSubscriptionIdentity: msRest.CompositeMapper = {
  serializedName: "EventSubscriptionIdentity",
  type: {
    name: "Composite",
    className: "EventSubscriptionIdentity",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      userAssignedIdentity: {
        serializedName: "userAssignedIdentity",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeliveryWithResourceIdentity: msRest.CompositeMapper = {
  serializedName: "DeliveryWithResourceIdentity",
  type: {
    name: "Composite",
    className: "DeliveryWithResourceIdentity",
    modelProperties: {
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "EventSubscriptionIdentity"
        }
      },
      destination: {
        serializedName: "destination",
        type: {
          name: "Composite",
          className: "EventSubscriptionDestination"
        }
      }
    }
  }
};

export const EventSubscriptionFilter: msRest.CompositeMapper = {
  serializedName: "EventSubscriptionFilter",
  type: {
    name: "Composite",
    className: "EventSubscriptionFilter",
    modelProperties: {
      subjectBeginsWith: {
        serializedName: "subjectBeginsWith",
        type: {
          name: "String"
        }
      },
      subjectEndsWith: {
        serializedName: "subjectEndsWith",
        type: {
          name: "String"
        }
      },
      includedEventTypes: {
        serializedName: "includedEventTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      isSubjectCaseSensitive: {
        serializedName: "isSubjectCaseSensitive",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      enableAdvancedFilteringOnArrays: {
        serializedName: "enableAdvancedFilteringOnArrays",
        type: {
          name: "Boolean"
        }
      },
      advancedFilters: {
        serializedName: "advancedFilters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AdvancedFilter"
            }
          }
        }
      }
    }
  }
};

export const RetryPolicy: msRest.CompositeMapper = {
  serializedName: "RetryPolicy",
  type: {
    name: "Composite",
    className: "RetryPolicy",
    modelProperties: {
      maxDeliveryAttempts: {
        serializedName: "maxDeliveryAttempts",
        type: {
          name: "Number"
        }
      },
      eventTimeToLiveInMinutes: {
        serializedName: "eventTimeToLiveInMinutes",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DeadLetterDestination: msRest.CompositeMapper = {
  serializedName: "DeadLetterDestination",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "endpointType",
      clientName: "endpointType"
    },
    uberParent: "DeadLetterDestination",
    className: "DeadLetterDestination",
    modelProperties: {
      endpointType: {
        required: true,
        serializedName: "endpointType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeadLetterWithResourceIdentity: msRest.CompositeMapper = {
  serializedName: "DeadLetterWithResourceIdentity",
  type: {
    name: "Composite",
    className: "DeadLetterWithResourceIdentity",
    modelProperties: {
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "EventSubscriptionIdentity"
        }
      },
      deadLetterDestination: {
        serializedName: "deadLetterDestination",
        type: {
          name: "Composite",
          className: "DeadLetterDestination"
        }
      }
    }
  }
};

export const DeliveryAttributeMapping: msRest.CompositeMapper = {
  serializedName: "DeliveryAttributeMapping",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    uberParent: "DeliveryAttributeMapping",
    className: "DeliveryAttributeMapping",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StaticDeliveryAttributeMapping: msRest.CompositeMapper = {
  serializedName: "Static",
  type: {
    name: "Composite",
    polymorphicDiscriminator: DeliveryAttributeMapping.type.polymorphicDiscriminator,
    uberParent: "DeliveryAttributeMapping",
    className: "StaticDeliveryAttributeMapping",
    modelProperties: {
      ...DeliveryAttributeMapping.type.modelProperties,
      value: {
        serializedName: "properties.value",
        type: {
          name: "String"
        }
      },
      isSecret: {
        serializedName: "properties.isSecret",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DynamicDeliveryAttributeMapping: msRest.CompositeMapper = {
  serializedName: "Dynamic",
  type: {
    name: "Composite",
    polymorphicDiscriminator: DeliveryAttributeMapping.type.polymorphicDiscriminator,
    uberParent: "DeliveryAttributeMapping",
    className: "DynamicDeliveryAttributeMapping",
    modelProperties: {
      ...DeliveryAttributeMapping.type.modelProperties,
      sourceField: {
        serializedName: "properties.sourceField",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageBlobDeadLetterDestination: msRest.CompositeMapper = {
  serializedName: "StorageBlob",
  type: {
    name: "Composite",
    polymorphicDiscriminator: DeadLetterDestination.type.polymorphicDiscriminator,
    uberParent: "DeadLetterDestination",
    className: "StorageBlobDeadLetterDestination",
    modelProperties: {
      ...DeadLetterDestination.type.modelProperties,
      resourceId: {
        serializedName: "properties.resourceId",
        type: {
          name: "String"
        }
      },
      blobContainerName: {
        serializedName: "properties.blobContainerName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebHookEventSubscriptionDestination: msRest.CompositeMapper = {
  serializedName: "WebHook",
  type: {
    name: "Composite",
    polymorphicDiscriminator: EventSubscriptionDestination.type.polymorphicDiscriminator,
    uberParent: "EventSubscriptionDestination",
    className: "WebHookEventSubscriptionDestination",
    modelProperties: {
      ...EventSubscriptionDestination.type.modelProperties,
      endpointUrl: {
        serializedName: "properties.endpointUrl",
        type: {
          name: "String"
        }
      },
      endpointBaseUrl: {
        readOnly: true,
        serializedName: "properties.endpointBaseUrl",
        type: {
          name: "String"
        }
      },
      maxEventsPerBatch: {
        serializedName: "properties.maxEventsPerBatch",
        type: {
          name: "Number"
        }
      },
      preferredBatchSizeInKilobytes: {
        serializedName: "properties.preferredBatchSizeInKilobytes",
        type: {
          name: "Number"
        }
      },
      azureActiveDirectoryTenantId: {
        serializedName: "properties.azureActiveDirectoryTenantId",
        type: {
          name: "String"
        }
      },
      azureActiveDirectoryApplicationIdOrUri: {
        serializedName: "properties.azureActiveDirectoryApplicationIdOrUri",
        type: {
          name: "String"
        }
      },
      deliveryAttributeMappings: {
        serializedName: "properties.deliveryAttributeMappings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DeliveryAttributeMapping"
            }
          }
        }
      }
    }
  }
};

export const EventHubEventSubscriptionDestination: msRest.CompositeMapper = {
  serializedName: "EventHub",
  type: {
    name: "Composite",
    polymorphicDiscriminator: EventSubscriptionDestination.type.polymorphicDiscriminator,
    uberParent: "EventSubscriptionDestination",
    className: "EventHubEventSubscriptionDestination",
    modelProperties: {
      ...EventSubscriptionDestination.type.modelProperties,
      resourceId: {
        serializedName: "properties.resourceId",
        type: {
          name: "String"
        }
      },
      deliveryAttributeMappings: {
        serializedName: "properties.deliveryAttributeMappings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DeliveryAttributeMapping"
            }
          }
        }
      }
    }
  }
};

export const StorageQueueEventSubscriptionDestination: msRest.CompositeMapper = {
  serializedName: "StorageQueue",
  type: {
    name: "Composite",
    polymorphicDiscriminator: EventSubscriptionDestination.type.polymorphicDiscriminator,
    uberParent: "EventSubscriptionDestination",
    className: "StorageQueueEventSubscriptionDestination",
    modelProperties: {
      ...EventSubscriptionDestination.type.modelProperties,
      resourceId: {
        serializedName: "properties.resourceId",
        type: {
          name: "String"
        }
      },
      queueName: {
        serializedName: "properties.queueName",
        type: {
          name: "String"
        }
      },
      queueMessageTimeToLiveInSeconds: {
        serializedName: "properties.queueMessageTimeToLiveInSeconds",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const HybridConnectionEventSubscriptionDestination: msRest.CompositeMapper = {
  serializedName: "HybridConnection",
  type: {
    name: "Composite",
    polymorphicDiscriminator: EventSubscriptionDestination.type.polymorphicDiscriminator,
    uberParent: "EventSubscriptionDestination",
    className: "HybridConnectionEventSubscriptionDestination",
    modelProperties: {
      ...EventSubscriptionDestination.type.modelProperties,
      resourceId: {
        serializedName: "properties.resourceId",
        type: {
          name: "String"
        }
      },
      deliveryAttributeMappings: {
        serializedName: "properties.deliveryAttributeMappings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DeliveryAttributeMapping"
            }
          }
        }
      }
    }
  }
};

export const ServiceBusQueueEventSubscriptionDestination: msRest.CompositeMapper = {
  serializedName: "ServiceBusQueue",
  type: {
    name: "Composite",
    polymorphicDiscriminator: EventSubscriptionDestination.type.polymorphicDiscriminator,
    uberParent: "EventSubscriptionDestination",
    className: "ServiceBusQueueEventSubscriptionDestination",
    modelProperties: {
      ...EventSubscriptionDestination.type.modelProperties,
      resourceId: {
        serializedName: "properties.resourceId",
        type: {
          name: "String"
        }
      },
      deliveryAttributeMappings: {
        serializedName: "properties.deliveryAttributeMappings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DeliveryAttributeMapping"
            }
          }
        }
      }
    }
  }
};

export const ServiceBusTopicEventSubscriptionDestination: msRest.CompositeMapper = {
  serializedName: "ServiceBusTopic",
  type: {
    name: "Composite",
    polymorphicDiscriminator: EventSubscriptionDestination.type.polymorphicDiscriminator,
    uberParent: "EventSubscriptionDestination",
    className: "ServiceBusTopicEventSubscriptionDestination",
    modelProperties: {
      ...EventSubscriptionDestination.type.modelProperties,
      resourceId: {
        serializedName: "properties.resourceId",
        type: {
          name: "String"
        }
      },
      deliveryAttributeMappings: {
        serializedName: "properties.deliveryAttributeMappings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DeliveryAttributeMapping"
            }
          }
        }
      }
    }
  }
};

export const AzureFunctionEventSubscriptionDestination: msRest.CompositeMapper = {
  serializedName: "AzureFunction",
  type: {
    name: "Composite",
    polymorphicDiscriminator: EventSubscriptionDestination.type.polymorphicDiscriminator,
    uberParent: "EventSubscriptionDestination",
    className: "AzureFunctionEventSubscriptionDestination",
    modelProperties: {
      ...EventSubscriptionDestination.type.modelProperties,
      resourceId: {
        serializedName: "properties.resourceId",
        type: {
          name: "String"
        }
      },
      maxEventsPerBatch: {
        serializedName: "properties.maxEventsPerBatch",
        type: {
          name: "Number"
        }
      },
      preferredBatchSizeInKilobytes: {
        serializedName: "properties.preferredBatchSizeInKilobytes",
        type: {
          name: "Number"
        }
      },
      deliveryAttributeMappings: {
        serializedName: "properties.deliveryAttributeMappings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DeliveryAttributeMapping"
            }
          }
        }
      }
    }
  }
};

export const EventSubscription: msRest.CompositeMapper = {
  serializedName: "EventSubscription",
  type: {
    name: "Composite",
    className: "EventSubscription",
    modelProperties: {
      ...Resource.type.modelProperties,
      topic: {
        readOnly: true,
        serializedName: "properties.topic",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      destination: {
        serializedName: "properties.destination",
        type: {
          name: "Composite",
          className: "EventSubscriptionDestination"
        }
      },
      deliveryWithResourceIdentity: {
        serializedName: "properties.deliveryWithResourceIdentity",
        type: {
          name: "Composite",
          className: "DeliveryWithResourceIdentity"
        }
      },
      filter: {
        serializedName: "properties.filter",
        type: {
          name: "Composite",
          className: "EventSubscriptionFilter"
        }
      },
      labels: {
        serializedName: "properties.labels",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      expirationTimeUtc: {
        serializedName: "properties.expirationTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      eventDeliverySchema: {
        serializedName: "properties.eventDeliverySchema",
        type: {
          name: "String"
        }
      },
      retryPolicy: {
        serializedName: "properties.retryPolicy",
        type: {
          name: "Composite",
          className: "RetryPolicy"
        }
      },
      deadLetterDestination: {
        serializedName: "properties.deadLetterDestination",
        type: {
          name: "Composite",
          className: "DeadLetterDestination"
        }
      },
      deadLetterWithResourceIdentity: {
        serializedName: "properties.deadLetterWithResourceIdentity",
        type: {
          name: "Composite",
          className: "DeadLetterWithResourceIdentity"
        }
      },
      systemData: {
        readOnly: true,
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const EventSubscriptionUpdateParameters: msRest.CompositeMapper = {
  serializedName: "EventSubscriptionUpdateParameters",
  type: {
    name: "Composite",
    className: "EventSubscriptionUpdateParameters",
    modelProperties: {
      destination: {
        serializedName: "destination",
        type: {
          name: "Composite",
          className: "EventSubscriptionDestination"
        }
      },
      deliveryWithResourceIdentity: {
        serializedName: "deliveryWithResourceIdentity",
        type: {
          name: "Composite",
          className: "DeliveryWithResourceIdentity"
        }
      },
      filter: {
        serializedName: "filter",
        type: {
          name: "Composite",
          className: "EventSubscriptionFilter"
        }
      },
      labels: {
        serializedName: "labels",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      expirationTimeUtc: {
        serializedName: "expirationTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      eventDeliverySchema: {
        serializedName: "eventDeliverySchema",
        type: {
          name: "String"
        }
      },
      retryPolicy: {
        serializedName: "retryPolicy",
        type: {
          name: "Composite",
          className: "RetryPolicy"
        }
      },
      deadLetterDestination: {
        serializedName: "deadLetterDestination",
        type: {
          name: "Composite",
          className: "DeadLetterDestination"
        }
      },
      deadLetterWithResourceIdentity: {
        serializedName: "deadLetterWithResourceIdentity",
        type: {
          name: "Composite",
          className: "DeadLetterWithResourceIdentity"
        }
      }
    }
  }
};

export const EventSubscriptionFullUrl: msRest.CompositeMapper = {
  serializedName: "EventSubscriptionFullUrl",
  type: {
    name: "Composite",
    className: "EventSubscriptionFullUrl",
    modelProperties: {
      endpointUrl: {
        serializedName: "endpointUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeliveryAttributeListResult: msRest.CompositeMapper = {
  serializedName: "DeliveryAttributeListResult",
  type: {
    name: "Composite",
    className: "DeliveryAttributeListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DeliveryAttributeMapping"
            }
          }
        }
      }
    }
  }
};

export const OperationInfo: msRest.CompositeMapper = {
  serializedName: "OperationInfo",
  type: {
    name: "Composite",
    className: "OperationInfo",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationInfo"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const PartnerNamespace: msRest.CompositeMapper = {
  serializedName: "PartnerNamespace",
  type: {
    name: "Composite",
    className: "PartnerNamespace",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      partnerRegistrationFullyQualifiedId: {
        serializedName: "properties.partnerRegistrationFullyQualifiedId",
        type: {
          name: "String"
        }
      },
      endpoint: {
        readOnly: true,
        serializedName: "properties.endpoint",
        type: {
          name: "String"
        }
      },
      systemData: {
        readOnly: true,
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const PartnerNamespaceUpdateParameters: msRest.CompositeMapper = {
  serializedName: "PartnerNamespaceUpdateParameters",
  type: {
    name: "Composite",
    className: "PartnerNamespaceUpdateParameters",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PartnerNamespaceSharedAccessKeys: msRest.CompositeMapper = {
  serializedName: "PartnerNamespaceSharedAccessKeys",
  type: {
    name: "Composite",
    className: "PartnerNamespaceSharedAccessKeys",
    modelProperties: {
      key1: {
        serializedName: "key1",
        type: {
          name: "String"
        }
      },
      key2: {
        serializedName: "key2",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PartnerNamespaceRegenerateKeyRequest: msRest.CompositeMapper = {
  serializedName: "PartnerNamespaceRegenerateKeyRequest",
  type: {
    name: "Composite",
    className: "PartnerNamespaceRegenerateKeyRequest",
    modelProperties: {
      keyName: {
        required: true,
        serializedName: "keyName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PartnerRegistration: msRest.CompositeMapper = {
  serializedName: "PartnerRegistration",
  type: {
    name: "Composite",
    className: "PartnerRegistration",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      partnerName: {
        serializedName: "properties.partnerName",
        type: {
          name: "String"
        }
      },
      partnerResourceTypeName: {
        serializedName: "properties.partnerResourceTypeName",
        type: {
          name: "String"
        }
      },
      partnerResourceTypeDisplayName: {
        serializedName: "properties.partnerResourceTypeDisplayName",
        type: {
          name: "String"
        }
      },
      partnerResourceTypeDescription: {
        serializedName: "properties.partnerResourceTypeDescription",
        type: {
          name: "String"
        }
      },
      longDescription: {
        serializedName: "properties.longDescription",
        type: {
          name: "String"
        }
      },
      partnerCustomerServiceNumber: {
        serializedName: "properties.partnerCustomerServiceNumber",
        type: {
          name: "String"
        }
      },
      partnerCustomerServiceExtension: {
        serializedName: "properties.partnerCustomerServiceExtension",
        type: {
          name: "String"
        }
      },
      customerServiceUri: {
        serializedName: "properties.customerServiceUri",
        type: {
          name: "String"
        }
      },
      setupUri: {
        serializedName: "properties.setupUri",
        type: {
          name: "String"
        }
      },
      logoUri: {
        serializedName: "properties.logoUri",
        type: {
          name: "String"
        }
      },
      visibilityState: {
        serializedName: "properties.visibilityState",
        type: {
          name: "String"
        }
      },
      authorizedAzureSubscriptionIds: {
        serializedName: "properties.authorizedAzureSubscriptionIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      systemData: {
        readOnly: true,
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const PartnerRegistrationUpdateParameters: msRest.CompositeMapper = {
  serializedName: "PartnerRegistrationUpdateParameters",
  type: {
    name: "Composite",
    className: "PartnerRegistrationUpdateParameters",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      partnerTopicTypeName: {
        serializedName: "partnerTopicTypeName",
        type: {
          name: "String"
        }
      },
      partnerTopicTypeDisplayName: {
        serializedName: "partnerTopicTypeDisplayName",
        type: {
          name: "String"
        }
      },
      partnerTopicTypeDescription: {
        serializedName: "partnerTopicTypeDescription",
        type: {
          name: "String"
        }
      },
      setupUri: {
        serializedName: "setupUri",
        type: {
          name: "String"
        }
      },
      logoUri: {
        serializedName: "logoUri",
        type: {
          name: "String"
        }
      },
      authorizedAzureSubscriptionIds: {
        serializedName: "authorizedAzureSubscriptionIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const EventType: msRest.CompositeMapper = {
  serializedName: "EventType",
  type: {
    name: "Composite",
    className: "EventType",
    modelProperties: {
      ...Resource.type.modelProperties,
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      schemaUrl: {
        serializedName: "properties.schemaUrl",
        type: {
          name: "String"
        }
      },
      isInDefaultSet: {
        serializedName: "properties.isInDefaultSet",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PartnerRegistrationEventTypesListResult: msRest.CompositeMapper = {
  serializedName: "PartnerRegistrationEventTypesListResult",
  type: {
    name: "Composite",
    className: "PartnerRegistrationEventTypesListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EventType"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PartnerTopicUpdateParameters: msRest.CompositeMapper = {
  serializedName: "PartnerTopicUpdateParameters",
  type: {
    name: "Composite",
    className: "PartnerTopicUpdateParameters",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PartnerTopic: msRest.CompositeMapper = {
  serializedName: "PartnerTopic",
  type: {
    name: "Composite",
    className: "PartnerTopic",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      source: {
        serializedName: "properties.source",
        type: {
          name: "String"
        }
      },
      expirationTimeIfNotActivatedUtc: {
        serializedName: "properties.expirationTimeIfNotActivatedUtc",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      activationState: {
        serializedName: "properties.activationState",
        type: {
          name: "String"
        }
      },
      partnerTopicFriendlyDescription: {
        serializedName: "properties.partnerTopicFriendlyDescription",
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "IdentityInfo"
        }
      },
      systemData: {
        readOnly: true,
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const PartnerTopicType: msRest.CompositeMapper = {
  serializedName: "PartnerTopicType",
  type: {
    name: "Composite",
    className: "PartnerTopicType",
    modelProperties: {
      ...Resource.type.modelProperties,
      partnerName: {
        serializedName: "properties.partnerName",
        type: {
          name: "String"
        }
      },
      topicTypeName: {
        serializedName: "properties.topicTypeName",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      setupUri: {
        serializedName: "properties.setupUri",
        type: {
          name: "String"
        }
      },
      authorizationState: {
        serializedName: "properties.authorizationState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PartnerTopicTypesListResult: msRest.CompositeMapper = {
  serializedName: "PartnerTopicTypesListResult",
  type: {
    name: "Composite",
    className: "PartnerTopicTypesListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PartnerTopicType"
            }
          }
        }
      }
    }
  }
};

export const PrivateLinkResource: msRest.CompositeMapper = {
  serializedName: "PrivateLinkResource",
  type: {
    name: "Composite",
    className: "PrivateLinkResource",
    modelProperties: {
      groupId: {
        serializedName: "properties.groupId",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      requiredMembers: {
        serializedName: "properties.requiredMembers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      requiredZoneNames: {
        serializedName: "properties.requiredZoneNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SystemTopic: msRest.CompositeMapper = {
  serializedName: "SystemTopic",
  type: {
    name: "Composite",
    className: "SystemTopic",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "properties.source",
        type: {
          name: "String"
        }
      },
      topicType: {
        serializedName: "properties.topicType",
        type: {
          name: "String"
        }
      },
      metricResourceId: {
        readOnly: true,
        serializedName: "properties.metricResourceId",
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "IdentityInfo"
        }
      },
      systemData: {
        readOnly: true,
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const SystemTopicUpdateParameters: msRest.CompositeMapper = {
  serializedName: "SystemTopicUpdateParameters",
  type: {
    name: "Composite",
    className: "SystemTopicUpdateParameters",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "IdentityInfo"
        }
      }
    }
  }
};

export const ExtendedLocation: msRest.CompositeMapper = {
  serializedName: "ExtendedLocation",
  type: {
    name: "Composite",
    className: "ExtendedLocation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Topic: msRest.CompositeMapper = {
  serializedName: "Topic",
  type: {
    name: "Composite",
    className: "Topic",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      privateEndpointConnections: {
        serializedName: "properties.privateEndpointConnections",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnection"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      endpoint: {
        readOnly: true,
        serializedName: "properties.endpoint",
        type: {
          name: "String"
        }
      },
      inputSchema: {
        serializedName: "properties.inputSchema",
        defaultValue: 'EventGridSchema',
        type: {
          name: "String"
        }
      },
      inputSchemaMapping: {
        serializedName: "properties.inputSchemaMapping",
        type: {
          name: "Composite",
          className: "InputSchemaMapping"
        }
      },
      metricResourceId: {
        readOnly: true,
        serializedName: "properties.metricResourceId",
        type: {
          name: "String"
        }
      },
      publicNetworkAccess: {
        serializedName: "properties.publicNetworkAccess",
        type: {
          name: "String"
        }
      },
      inboundIpRules: {
        serializedName: "properties.inboundIpRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InboundIpRule"
            }
          }
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "ResourceSku"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "IdentityInfo"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      extendedLocation: {
        serializedName: "extendedLocation",
        type: {
          name: "Composite",
          className: "ExtendedLocation"
        }
      }
    }
  }
};

export const TopicUpdateParameters: msRest.CompositeMapper = {
  serializedName: "TopicUpdateParameters",
  type: {
    name: "Composite",
    className: "TopicUpdateParameters",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "IdentityInfo"
        }
      },
      publicNetworkAccess: {
        serializedName: "properties.publicNetworkAccess",
        type: {
          name: "String"
        }
      },
      inboundIpRules: {
        serializedName: "properties.inboundIpRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InboundIpRule"
            }
          }
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "ResourceSku"
        }
      }
    }
  }
};

export const TopicSharedAccessKeys: msRest.CompositeMapper = {
  serializedName: "TopicSharedAccessKeys",
  type: {
    name: "Composite",
    className: "TopicSharedAccessKeys",
    modelProperties: {
      key1: {
        serializedName: "key1",
        type: {
          name: "String"
        }
      },
      key2: {
        serializedName: "key2",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TopicRegenerateKeyRequest: msRest.CompositeMapper = {
  serializedName: "TopicRegenerateKeyRequest",
  type: {
    name: "Composite",
    className: "TopicRegenerateKeyRequest",
    modelProperties: {
      keyName: {
        required: true,
        serializedName: "keyName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExtensionTopic: msRest.CompositeMapper = {
  serializedName: "ExtensionTopic",
  type: {
    name: "Composite",
    className: "ExtensionTopic",
    modelProperties: {
      ...Resource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      systemTopic: {
        serializedName: "properties.systemTopic",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TopicTypeInfo: msRest.CompositeMapper = {
  serializedName: "TopicTypeInfo",
  type: {
    name: "Composite",
    className: "TopicTypeInfo",
    modelProperties: {
      ...Resource.type.modelProperties,
      provider: {
        serializedName: "properties.provider",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      resourceRegionType: {
        serializedName: "properties.resourceRegionType",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      supportedLocations: {
        serializedName: "properties.supportedLocations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      sourceResourceFormat: {
        serializedName: "properties.sourceResourceFormat",
        type: {
          name: "String"
        }
      },
      supportedScopesForSource: {
        serializedName: "properties.supportedScopesForSource",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const DomainsListResult: msRest.CompositeMapper = {
  serializedName: "DomainsListResult",
  type: {
    name: "Composite",
    className: "DomainsListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Domain"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DomainTopicsListResult: msRest.CompositeMapper = {
  serializedName: "DomainTopicsListResult",
  type: {
    name: "Composite",
    className: "DomainTopicsListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DomainTopic"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventChannelsListResult: msRest.CompositeMapper = {
  serializedName: "EventChannelsListResult",
  type: {
    name: "Composite",
    className: "EventChannelsListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EventChannel"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventSubscriptionsListResult: msRest.CompositeMapper = {
  serializedName: "EventSubscriptionsListResult",
  type: {
    name: "Composite",
    className: "EventSubscriptionsListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EventSubscription"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationsListResult: msRest.CompositeMapper = {
  serializedName: "OperationsListResult",
  type: {
    name: "Composite",
    className: "OperationsListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      }
    }
  }
};

export const PartnerNamespacesListResult: msRest.CompositeMapper = {
  serializedName: "PartnerNamespacesListResult",
  type: {
    name: "Composite",
    className: "PartnerNamespacesListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PartnerNamespace"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PartnerRegistrationsListResult: msRest.CompositeMapper = {
  serializedName: "PartnerRegistrationsListResult",
  type: {
    name: "Composite",
    className: "PartnerRegistrationsListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PartnerRegistration"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PartnerTopicsListResult: msRest.CompositeMapper = {
  serializedName: "PartnerTopicsListResult",
  type: {
    name: "Composite",
    className: "PartnerTopicsListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PartnerTopic"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointConnectionListResult: msRest.CompositeMapper = {
  serializedName: "PrivateEndpointConnectionListResult",
  type: {
    name: "Composite",
    className: "PrivateEndpointConnectionListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnection"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateLinkResourcesListResult: msRest.CompositeMapper = {
  serializedName: "PrivateLinkResourcesListResult",
  type: {
    name: "Composite",
    className: "PrivateLinkResourcesListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateLinkResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SystemTopicsListResult: msRest.CompositeMapper = {
  serializedName: "SystemTopicsListResult",
  type: {
    name: "Composite",
    className: "SystemTopicsListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SystemTopic"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TopicsListResult: msRest.CompositeMapper = {
  serializedName: "TopicsListResult",
  type: {
    name: "Composite",
    className: "TopicsListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Topic"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventTypesListResult: msRest.CompositeMapper = {
  serializedName: "EventTypesListResult",
  type: {
    name: "Composite",
    className: "EventTypesListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EventType"
            }
          }
        }
      }
    }
  }
};

export const TopicTypesListResult: msRest.CompositeMapper = {
  serializedName: "TopicTypesListResult",
  type: {
    name: "Composite",
    className: "TopicTypesListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TopicTypeInfo"
            }
          }
        }
      }
    }
  }
};

export const discriminators = {
  'InputSchemaMapping' : InputSchemaMapping,
  'InputSchemaMapping.Json' : JsonInputSchemaMapping,
  'AdvancedFilter' : AdvancedFilter,
  'AdvancedFilter.NumberIn' : NumberInAdvancedFilter,
  'AdvancedFilter.NumberNotIn' : NumberNotInAdvancedFilter,
  'AdvancedFilter.NumberLessThan' : NumberLessThanAdvancedFilter,
  'AdvancedFilter.NumberGreaterThan' : NumberGreaterThanAdvancedFilter,
  'AdvancedFilter.NumberLessThanOrEquals' : NumberLessThanOrEqualsAdvancedFilter,
  'AdvancedFilter.NumberGreaterThanOrEquals' : NumberGreaterThanOrEqualsAdvancedFilter,
  'AdvancedFilter.BoolEquals' : BoolEqualsAdvancedFilter,
  'AdvancedFilter.StringIn' : StringInAdvancedFilter,
  'AdvancedFilter.StringNotIn' : StringNotInAdvancedFilter,
  'AdvancedFilter.StringBeginsWith' : StringBeginsWithAdvancedFilter,
  'AdvancedFilter.StringEndsWith' : StringEndsWithAdvancedFilter,
  'AdvancedFilter.StringContains' : StringContainsAdvancedFilter,
  'AdvancedFilter.NumberInRange' : NumberInRangeAdvancedFilter,
  'AdvancedFilter.NumberNotInRange' : NumberNotInRangeAdvancedFilter,
  'AdvancedFilter.StringNotBeginsWith' : StringNotBeginsWithAdvancedFilter,
  'AdvancedFilter.StringNotEndsWith' : StringNotEndsWithAdvancedFilter,
  'AdvancedFilter.StringNotContains' : StringNotContainsAdvancedFilter,
  'AdvancedFilter.IsNullOrUndefined' : IsNullOrUndefinedAdvancedFilter,
  'AdvancedFilter.IsNotNull' : IsNotNullAdvancedFilter,
  'EventSubscriptionDestination' : EventSubscriptionDestination,
  'DeadLetterDestination' : DeadLetterDestination,
  'DeliveryAttributeMapping' : DeliveryAttributeMapping,
  'DeliveryAttributeMapping.Static' : StaticDeliveryAttributeMapping,
  'DeliveryAttributeMapping.Dynamic' : DynamicDeliveryAttributeMapping,
  'DeadLetterDestination.StorageBlob' : StorageBlobDeadLetterDestination,
  'EventSubscriptionDestination.WebHook' : WebHookEventSubscriptionDestination,
  'EventSubscriptionDestination.EventHub' : EventHubEventSubscriptionDestination,
  'EventSubscriptionDestination.StorageQueue' : StorageQueueEventSubscriptionDestination,
  'EventSubscriptionDestination.HybridConnection' : HybridConnectionEventSubscriptionDestination,
  'EventSubscriptionDestination.ServiceBusQueue' : ServiceBusQueueEventSubscriptionDestination,
  'EventSubscriptionDestination.ServiceBusTopic' : ServiceBusTopicEventSubscriptionDestination,
  'EventSubscriptionDestination.AzureFunction' : AzureFunctionEventSubscriptionDestination

};
