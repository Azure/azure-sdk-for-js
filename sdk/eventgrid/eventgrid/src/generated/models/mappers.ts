/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CompositeMapper } from "@azure/core-client";

export const EventGridEvent: CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventGridEvent",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      topic: {
        serializedName: "topic",
        type: {
          name: "String"
        }
      },
      subject: {
        serializedName: "subject",
        required: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        required: true,
        type: {
          name: "any"
        }
      },
      eventType: {
        serializedName: "eventType",
        required: true,
        type: {
          name: "String"
        }
      },
      eventTime: {
        serializedName: "eventTime",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      metadataVersion: {
        serializedName: "metadataVersion",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      dataVersion: {
        serializedName: "dataVersion",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CloudEvent: CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudEvent",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "source",
        required: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "any"
        }
      },
      dataBase64: {
        serializedName: "data_base64",
        type: {
          name: "ByteArray"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      time: {
        serializedName: "time",
        type: {
          name: "DateTime"
        }
      },
      specversion: {
        serializedName: "specversion",
        required: true,
        type: {
          name: "String"
        }
      },
      dataschema: {
        serializedName: "dataschema",
        type: {
          name: "String"
        }
      },
      datacontenttype: {
        serializedName: "datacontenttype",
        type: {
          name: "String"
        }
      },
      subject: {
        serializedName: "subject",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageBlobCreatedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageBlobCreatedEventData",
    modelProperties: {
      api: {
        serializedName: "api",
        required: true,
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        required: true,
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        required: true,
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "contentType",
        required: true,
        type: {
          name: "String"
        }
      },
      contentLength: {
        serializedName: "contentLength",
        required: true,
        type: {
          name: "Number"
        }
      },
      contentOffset: {
        serializedName: "contentOffset",
        required: true,
        type: {
          name: "Number"
        }
      },
      blobType: {
        serializedName: "blobType",
        required: true,
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      },
      sequencer: {
        serializedName: "sequencer",
        required: true,
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        required: true,
        type: {
          name: "String"
        }
      },
      storageDiagnostics: {
        serializedName: "storageDiagnostics",
        required: true,
        type: {
          name: "any"
        }
      }
    }
  }
};

export const StorageBlobDeletedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageBlobDeletedEventData",
    modelProperties: {
      api: {
        serializedName: "api",
        required: true,
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        required: true,
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "contentType",
        required: true,
        type: {
          name: "String"
        }
      },
      blobType: {
        serializedName: "blobType",
        required: true,
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      },
      sequencer: {
        serializedName: "sequencer",
        required: true,
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        required: true,
        type: {
          name: "String"
        }
      },
      storageDiagnostics: {
        serializedName: "storageDiagnostics",
        required: true,
        type: {
          name: "any"
        }
      }
    }
  }
};

export const StorageDirectoryCreatedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageDirectoryCreatedEventData",
    modelProperties: {
      api: {
        serializedName: "api",
        required: true,
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        required: true,
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        required: true,
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      },
      sequencer: {
        serializedName: "sequencer",
        required: true,
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        required: true,
        type: {
          name: "String"
        }
      },
      storageDiagnostics: {
        serializedName: "storageDiagnostics",
        required: true,
        type: {
          name: "any"
        }
      }
    }
  }
};

export const StorageDirectoryDeletedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageDirectoryDeletedEventData",
    modelProperties: {
      api: {
        serializedName: "api",
        required: true,
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        required: true,
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      },
      recursive: {
        serializedName: "recursive",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      sequencer: {
        serializedName: "sequencer",
        required: true,
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        required: true,
        type: {
          name: "String"
        }
      },
      storageDiagnostics: {
        serializedName: "storageDiagnostics",
        required: true,
        type: {
          name: "any"
        }
      }
    }
  }
};

export const StorageBlobRenamedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageBlobRenamedEventData",
    modelProperties: {
      api: {
        serializedName: "api",
        required: true,
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        required: true,
        type: {
          name: "String"
        }
      },
      sourceUrl: {
        serializedName: "sourceUrl",
        required: true,
        type: {
          name: "String"
        }
      },
      destinationUrl: {
        serializedName: "destinationUrl",
        required: true,
        type: {
          name: "String"
        }
      },
      sequencer: {
        serializedName: "sequencer",
        required: true,
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        required: true,
        type: {
          name: "String"
        }
      },
      storageDiagnostics: {
        serializedName: "storageDiagnostics",
        required: true,
        type: {
          name: "any"
        }
      }
    }
  }
};

export const StorageDirectoryRenamedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageDirectoryRenamedEventData",
    modelProperties: {
      api: {
        serializedName: "api",
        required: true,
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        required: true,
        type: {
          name: "String"
        }
      },
      sourceUrl: {
        serializedName: "sourceUrl",
        required: true,
        type: {
          name: "String"
        }
      },
      destinationUrl: {
        serializedName: "destinationUrl",
        required: true,
        type: {
          name: "String"
        }
      },
      sequencer: {
        serializedName: "sequencer",
        required: true,
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        required: true,
        type: {
          name: "String"
        }
      },
      storageDiagnostics: {
        serializedName: "storageDiagnostics",
        required: true,
        type: {
          name: "any"
        }
      }
    }
  }
};

export const StorageLifecyclePolicyCompletedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageLifecyclePolicyCompletedEventData",
    modelProperties: {
      scheduleTime: {
        serializedName: "scheduleTime",
        required: true,
        type: {
          name: "String"
        }
      },
      deleteSummary: {
        serializedName: "deleteSummary",
        type: {
          name: "Composite",
          className: "StorageLifecyclePolicyActionSummaryDetail"
        }
      },
      tierToCoolSummary: {
        serializedName: "tierToCoolSummary",
        type: {
          name: "Composite",
          className: "StorageLifecyclePolicyActionSummaryDetail"
        }
      },
      tierToArchiveSummary: {
        serializedName: "tierToArchiveSummary",
        type: {
          name: "Composite",
          className: "StorageLifecyclePolicyActionSummaryDetail"
        }
      }
    }
  }
};

export const StorageLifecyclePolicyActionSummaryDetail: CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageLifecyclePolicyActionSummaryDetail",
    modelProperties: {
      totalObjectsCount: {
        serializedName: "totalObjectsCount",
        required: true,
        type: {
          name: "Number"
        }
      },
      successCount: {
        serializedName: "successCount",
        required: true,
        type: {
          name: "Number"
        }
      },
      errorList: {
        serializedName: "errorList",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageBlobTierChangedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageBlobTierChangedEventData",
    modelProperties: {
      api: {
        serializedName: "api",
        required: true,
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        required: true,
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "contentType",
        required: true,
        type: {
          name: "String"
        }
      },
      contentLength: {
        serializedName: "contentLength",
        required: true,
        type: {
          name: "Number"
        }
      },
      blobType: {
        serializedName: "blobType",
        required: true,
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      },
      sequencer: {
        serializedName: "sequencer",
        required: true,
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        required: true,
        type: {
          name: "String"
        }
      },
      storageDiagnostics: {
        serializedName: "storageDiagnostics",
        required: true,
        type: {
          name: "any"
        }
      }
    }
  }
};

export const StorageAsyncOperationInitiatedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageAsyncOperationInitiatedEventData",
    modelProperties: {
      api: {
        serializedName: "api",
        required: true,
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        required: true,
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "contentType",
        required: true,
        type: {
          name: "String"
        }
      },
      contentLength: {
        serializedName: "contentLength",
        required: true,
        type: {
          name: "Number"
        }
      },
      blobType: {
        serializedName: "blobType",
        required: true,
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      },
      sequencer: {
        serializedName: "sequencer",
        required: true,
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        required: true,
        type: {
          name: "String"
        }
      },
      storageDiagnostics: {
        serializedName: "storageDiagnostics",
        required: true,
        type: {
          name: "any"
        }
      }
    }
  }
};

export const EventHubCaptureFileCreatedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventHubCaptureFileCreatedEventData",
    modelProperties: {
      fileurl: {
        serializedName: "fileurl",
        required: true,
        type: {
          name: "String"
        }
      },
      fileType: {
        serializedName: "fileType",
        required: true,
        type: {
          name: "String"
        }
      },
      partitionId: {
        serializedName: "partitionId",
        required: true,
        type: {
          name: "String"
        }
      },
      sizeInBytes: {
        serializedName: "sizeInBytes",
        required: true,
        type: {
          name: "Number"
        }
      },
      eventCount: {
        serializedName: "eventCount",
        required: true,
        type: {
          name: "Number"
        }
      },
      firstSequenceNumber: {
        serializedName: "firstSequenceNumber",
        required: true,
        type: {
          name: "Number"
        }
      },
      lastSequenceNumber: {
        serializedName: "lastSequenceNumber",
        required: true,
        type: {
          name: "Number"
        }
      },
      firstEnqueueTime: {
        serializedName: "firstEnqueueTime",
        required: true,
        type: {
          name: "String"
        }
      },
      lastEnqueueTime: {
        serializedName: "lastEnqueueTime",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceWriteSuccessEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceWriteSuccessEventData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        required: true,
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        required: true,
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        required: true,
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        required: true,
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        required: true,
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceWriteFailureEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceWriteFailureEventData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        required: true,
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        required: true,
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        required: true,
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        required: true,
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        required: true,
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceWriteCancelEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceWriteCancelEventData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        required: true,
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        required: true,
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        required: true,
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        required: true,
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        required: true,
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceDeleteSuccessEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceDeleteSuccessEventData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        required: true,
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        required: true,
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        required: true,
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        required: true,
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        required: true,
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceDeleteFailureEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceDeleteFailureEventData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        required: true,
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        required: true,
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        required: true,
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        required: true,
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        required: true,
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceDeleteCancelEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceDeleteCancelEventData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        required: true,
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        required: true,
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        required: true,
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        required: true,
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        required: true,
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceActionSuccessEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceActionSuccessEventData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        required: true,
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        required: true,
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        required: true,
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        required: true,
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        required: true,
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceActionFailureEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceActionFailureEventData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        required: true,
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        required: true,
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        required: true,
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        required: true,
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        required: true,
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceActionCancelEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceActionCancelEventData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        required: true,
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        required: true,
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        required: true,
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        required: true,
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        required: true,
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubscriptionValidationEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubscriptionValidationEventData",
    modelProperties: {
      validationCode: {
        serializedName: "validationCode",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      validationUrl: {
        serializedName: "validationUrl",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubscriptionValidationResponse: CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubscriptionValidationResponse",
    modelProperties: {
      validationResponse: {
        serializedName: "validationResponse",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubscriptionDeletedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubscriptionDeletedEventData",
    modelProperties: {
      eventSubscriptionId: {
        serializedName: "eventSubscriptionId",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceLifeCycleEvent: CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceLifeCycleEvent",
    modelProperties: {
      deviceId: {
        serializedName: "deviceId",
        required: true,
        type: {
          name: "String"
        }
      },
      hubName: {
        serializedName: "hubName",
        required: true,
        type: {
          name: "String"
        }
      },
      twin: {
        serializedName: "twin",
        type: {
          name: "Composite",
          className: "DeviceTwinInfo"
        }
      }
    }
  }
};

export const DeviceTwinInfo: CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceTwinInfo",
    modelProperties: {
      authenticationType: {
        serializedName: "authenticationType",
        required: true,
        type: {
          name: "String"
        }
      },
      cloudToDeviceMessageCount: {
        serializedName: "cloudToDeviceMessageCount",
        required: true,
        type: {
          name: "Number"
        }
      },
      connectionState: {
        serializedName: "connectionState",
        required: true,
        type: {
          name: "String"
        }
      },
      deviceId: {
        serializedName: "deviceId",
        required: true,
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        required: true,
        type: {
          name: "String"
        }
      },
      lastActivityTime: {
        serializedName: "lastActivityTime",
        required: true,
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "DeviceTwinInfoProperties"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      statusUpdateTime: {
        serializedName: "statusUpdateTime",
        required: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "Number"
        }
      },
      x509Thumbprint: {
        serializedName: "x509Thumbprint",
        type: {
          name: "Composite",
          className: "DeviceTwinInfoX509Thumbprint"
        }
      }
    }
  }
};

export const DeviceTwinInfoProperties: CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceTwinInfoProperties",
    modelProperties: {
      desired: {
        serializedName: "desired",
        type: {
          name: "Composite",
          className: "DeviceTwin"
        }
      },
      reported: {
        serializedName: "reported",
        type: {
          name: "Composite",
          className: "DeviceTwin"
        }
      }
    }
  }
};

export const DeviceTwin: CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceTwin",
    modelProperties: {
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "DeviceTwinMetadata"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DeviceTwinMetadata: CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceTwinMetadata",
    modelProperties: {
      lastUpdated: {
        serializedName: "lastUpdated",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceTwinInfoX509Thumbprint: CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceTwinInfoX509Thumbprint",
    modelProperties: {
      primaryThumbprint: {
        serializedName: "primaryThumbprint",
        type: {
          name: "String"
        }
      },
      secondaryThumbprint: {
        serializedName: "secondaryThumbprint",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceConnectionStateEvent: CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceConnectionStateEvent",
    modelProperties: {
      deviceId: {
        serializedName: "deviceId",
        required: true,
        type: {
          name: "String"
        }
      },
      moduleId: {
        serializedName: "moduleId",
        required: true,
        type: {
          name: "String"
        }
      },
      hubName: {
        serializedName: "hubName",
        required: true,
        type: {
          name: "String"
        }
      },
      deviceConnectionStateEventInfo: {
        serializedName: "deviceConnectionStateEventInfo",
        type: {
          name: "Composite",
          className: "DeviceConnectionStateEventInfo"
        }
      }
    }
  }
};

export const DeviceConnectionStateEventInfo: CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceConnectionStateEventInfo",
    modelProperties: {
      sequenceNumber: {
        serializedName: "sequenceNumber",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceTelemetryEvent: CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceTelemetryEvent",
    modelProperties: {
      body: {
        serializedName: "body",
        required: true,
        type: {
          name: "any"
        }
      },
      properties: {
        serializedName: "properties",
        required: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      systemProperties: {
        serializedName: "systemProperties",
        required: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const ContainerRegistryEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryEventData",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "String"
        }
      },
      action: {
        serializedName: "action",
        required: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "Composite",
          className: "ContainerRegistryEventTarget"
        }
      },
      request: {
        serializedName: "request",
        type: {
          name: "Composite",
          className: "ContainerRegistryEventRequest"
        }
      },
      actor: {
        serializedName: "actor",
        type: {
          name: "Composite",
          className: "ContainerRegistryEventActor"
        }
      },
      source: {
        serializedName: "source",
        type: {
          name: "Composite",
          className: "ContainerRegistryEventSource"
        }
      }
    }
  }
};

export const ContainerRegistryEventTarget: CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryEventTarget",
    modelProperties: {
      mediaType: {
        serializedName: "mediaType",
        required: true,
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        required: true,
        type: {
          name: "Number"
        }
      },
      digest: {
        serializedName: "digest",
        required: true,
        type: {
          name: "String"
        }
      },
      length: {
        serializedName: "length",
        required: true,
        type: {
          name: "Number"
        }
      },
      repository: {
        serializedName: "repository",
        required: true,
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      },
      tag: {
        serializedName: "tag",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ContainerRegistryEventRequest: CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryEventRequest",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      addr: {
        serializedName: "addr",
        required: true,
        type: {
          name: "String"
        }
      },
      host: {
        serializedName: "host",
        required: true,
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        required: true,
        type: {
          name: "String"
        }
      },
      useragent: {
        serializedName: "useragent",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ContainerRegistryEventActor: CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryEventActor",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ContainerRegistryEventSource: CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryEventSource",
    modelProperties: {
      addr: {
        serializedName: "addr",
        required: true,
        type: {
          name: "String"
        }
      },
      instanceID: {
        serializedName: "instanceID",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ContainerRegistryArtifactEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryArtifactEventData",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "String"
        }
      },
      action: {
        serializedName: "action",
        required: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "Composite",
          className: "ContainerRegistryArtifactEventTarget"
        }
      }
    }
  }
};

export const ContainerRegistryArtifactEventTarget: CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryArtifactEventTarget",
    modelProperties: {
      mediaType: {
        serializedName: "mediaType",
        required: true,
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        required: true,
        type: {
          name: "Number"
        }
      },
      digest: {
        serializedName: "digest",
        required: true,
        type: {
          name: "String"
        }
      },
      repository: {
        serializedName: "repository",
        required: true,
        type: {
          name: "String"
        }
      },
      tag: {
        serializedName: "tag",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceBusActiveMessagesAvailableWithNoListenersEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceBusActiveMessagesAvailableWithNoListenersEventData",
    modelProperties: {
      namespaceName: {
        serializedName: "namespaceName",
        required: true,
        type: {
          name: "String"
        }
      },
      requestUri: {
        serializedName: "requestUri",
        required: true,
        type: {
          name: "String"
        }
      },
      entityType: {
        serializedName: "entityType",
        required: true,
        type: {
          name: "String"
        }
      },
      queueName: {
        serializedName: "queueName",
        required: true,
        type: {
          name: "String"
        }
      },
      topicName: {
        serializedName: "topicName",
        required: true,
        type: {
          name: "String"
        }
      },
      subscriptionName: {
        serializedName: "subscriptionName",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceBusDeadletterMessagesAvailableWithNoListenersEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceBusDeadletterMessagesAvailableWithNoListenersEventData",
    modelProperties: {
      namespaceName: {
        serializedName: "namespaceName",
        required: true,
        type: {
          name: "String"
        }
      },
      requestUri: {
        serializedName: "requestUri",
        required: true,
        type: {
          name: "String"
        }
      },
      entityType: {
        serializedName: "entityType",
        required: true,
        type: {
          name: "String"
        }
      },
      queueName: {
        serializedName: "queueName",
        required: true,
        type: {
          name: "String"
        }
      },
      topicName: {
        serializedName: "topicName",
        required: true,
        type: {
          name: "String"
        }
      },
      subscriptionName: {
        serializedName: "subscriptionName",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceBusActiveMessagesAvailablePeriodicNotificationsEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ServiceBusActiveMessagesAvailablePeriodicNotificationsEventData",
    modelProperties: {
      namespaceName: {
        serializedName: "namespaceName",
        required: true,
        type: {
          name: "String"
        }
      },
      requestUri: {
        serializedName: "requestUri",
        required: true,
        type: {
          name: "String"
        }
      },
      entityType: {
        serializedName: "entityType",
        required: true,
        type: {
          name: "String"
        }
      },
      queueName: {
        serializedName: "queueName",
        required: true,
        type: {
          name: "String"
        }
      },
      topicName: {
        serializedName: "topicName",
        required: true,
        type: {
          name: "String"
        }
      },
      subscriptionName: {
        serializedName: "subscriptionName",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceBusDeadletterMessagesAvailablePeriodicNotificationsEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ServiceBusDeadletterMessagesAvailablePeriodicNotificationsEventData",
    modelProperties: {
      namespaceName: {
        serializedName: "namespaceName",
        required: true,
        type: {
          name: "String"
        }
      },
      requestUri: {
        serializedName: "requestUri",
        required: true,
        type: {
          name: "String"
        }
      },
      entityType: {
        serializedName: "entityType",
        required: true,
        type: {
          name: "String"
        }
      },
      queueName: {
        serializedName: "queueName",
        required: true,
        type: {
          name: "String"
        }
      },
      topicName: {
        serializedName: "topicName",
        required: true,
        type: {
          name: "String"
        }
      },
      subscriptionName: {
        serializedName: "subscriptionName",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaJobStateChangeEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaJobStateChangeEventData",
    modelProperties: {
      previousState: {
        serializedName: "previousState",
        required: true,
        readOnly: true,
        type: {
          name: "Enum",
          allowedValues: [
            "Canceled",
            "Canceling",
            "Error",
            "Finished",
            "Processing",
            "Queued",
            "Scheduled"
          ]
        }
      },
      state: {
        serializedName: "state",
        required: true,
        readOnly: true,
        type: {
          name: "Enum",
          allowedValues: [
            "Canceled",
            "Canceling",
            "Error",
            "Finished",
            "Processing",
            "Queued",
            "Scheduled"
          ]
        }
      },
      correlationData: {
        serializedName: "correlationData",
        required: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const MediaJobError: CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaJobError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        readOnly: true,
        type: {
          name: "Enum",
          allowedValues: [
            "ServiceError",
            "ServiceTransientError",
            "DownloadNotAccessible",
            "DownloadTransientError",
            "UploadNotAccessible",
            "UploadTransientError",
            "ConfigurationUnsupported",
            "ContentMalformed",
            "ContentUnsupported"
          ]
        }
      },
      message: {
        serializedName: "message",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      category: {
        serializedName: "category",
        required: true,
        readOnly: true,
        type: {
          name: "Enum",
          allowedValues: [
            "Service",
            "Download",
            "Upload",
            "Configuration",
            "Content"
          ]
        }
      },
      retry: {
        serializedName: "retry",
        required: true,
        readOnly: true,
        type: {
          name: "Enum",
          allowedValues: ["DoNotRetry", "MayRetry"]
        }
      },
      details: {
        serializedName: "details",
        required: true,
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MediaJobErrorDetail"
            }
          }
        }
      }
    }
  }
};

export const MediaJobErrorDetail: CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaJobErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaJobOutput: CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaJobOutput",
    uberParent: "MediaJobOutput",
    polymorphicDiscriminator: {
      serializedName: "@odata\\.type",
      clientName: "@odata\\.type"
    },
    modelProperties: {
      odataType: {
        serializedName: "@odata\\.type",
        type: {
          name: "String"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "MediaJobError"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      progress: {
        serializedName: "progress",
        required: true,
        type: {
          name: "Number"
        }
      },
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "Enum",
          allowedValues: [
            "Canceled",
            "Canceling",
            "Error",
            "Finished",
            "Processing",
            "Queued",
            "Scheduled"
          ]
        }
      }
    }
  }
};

export const MediaJobOutputProgressEventData: CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputProgress",
  type: {
    name: "Composite",
    className: "MediaJobOutputProgressEventData",
    modelProperties: {
      label: {
        serializedName: "label",
        required: true,
        type: {
          name: "String"
        }
      },
      progress: {
        serializedName: "progress",
        required: true,
        type: {
          name: "Number"
        }
      },
      jobCorrelationData: {
        serializedName: "jobCorrelationData",
        required: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const MediaJobOutputStateChangeEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaJobOutputStateChangeEventData",
    modelProperties: {
      previousState: {
        serializedName: "previousState",
        required: true,
        readOnly: true,
        type: {
          name: "Enum",
          allowedValues: [
            "Canceled",
            "Canceling",
            "Error",
            "Finished",
            "Processing",
            "Queued",
            "Scheduled"
          ]
        }
      },
      output: {
        serializedName: "output",
        type: {
          name: "Composite",
          className: "MediaJobOutput"
        }
      },
      jobCorrelationData: {
        serializedName: "jobCorrelationData",
        required: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const MediaLiveEventEncoderConnectedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaLiveEventEncoderConnectedEventData",
    modelProperties: {
      ingestUrl: {
        serializedName: "ingestUrl",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      streamId: {
        serializedName: "streamId",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      encoderIp: {
        serializedName: "encoderIp",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      encoderPort: {
        serializedName: "encoderPort",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventConnectionRejectedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaLiveEventConnectionRejectedEventData",
    modelProperties: {
      ingestUrl: {
        serializedName: "ingestUrl",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      streamId: {
        serializedName: "streamId",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      encoderIp: {
        serializedName: "encoderIp",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      encoderPort: {
        serializedName: "encoderPort",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resultCode: {
        serializedName: "resultCode",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventEncoderDisconnectedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaLiveEventEncoderDisconnectedEventData",
    modelProperties: {
      ingestUrl: {
        serializedName: "ingestUrl",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      streamId: {
        serializedName: "streamId",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      encoderIp: {
        serializedName: "encoderIp",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      encoderPort: {
        serializedName: "encoderPort",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resultCode: {
        serializedName: "resultCode",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventIncomingStreamReceivedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaLiveEventIncomingStreamReceivedEventData",
    modelProperties: {
      ingestUrl: {
        serializedName: "ingestUrl",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      trackType: {
        serializedName: "trackType",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      trackName: {
        serializedName: "trackName",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      bitrate: {
        serializedName: "bitrate",
        required: true,
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      encoderIp: {
        serializedName: "encoderIp",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      encoderPort: {
        serializedName: "encoderPort",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      duration: {
        serializedName: "duration",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      timescale: {
        serializedName: "timescale",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventIncomingStreamsOutOfSyncEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaLiveEventIncomingStreamsOutOfSyncEventData",
    modelProperties: {
      minLastTimestamp: {
        serializedName: "minLastTimestamp",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      typeOfStreamWithMinLastTimestamp: {
        serializedName: "typeOfStreamWithMinLastTimestamp",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      maxLastTimestamp: {
        serializedName: "maxLastTimestamp",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      typeOfStreamWithMaxLastTimestamp: {
        serializedName: "typeOfStreamWithMaxLastTimestamp",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      timescaleOfMinLastTimestamp: {
        serializedName: "timescaleOfMinLastTimestamp",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      timescaleOfMaxLastTimestamp: {
        serializedName: "timescaleOfMaxLastTimestamp",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventIncomingVideoStreamsOutOfSyncEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaLiveEventIncomingVideoStreamsOutOfSyncEventData",
    modelProperties: {
      firstTimestamp: {
        serializedName: "firstTimestamp",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      firstDuration: {
        serializedName: "firstDuration",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      secondTimestamp: {
        serializedName: "secondTimestamp",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      secondDuration: {
        serializedName: "secondDuration",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      timescale: {
        serializedName: "timescale",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventIncomingDataChunkDroppedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaLiveEventIncomingDataChunkDroppedEventData",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      trackType: {
        serializedName: "trackType",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      bitrate: {
        serializedName: "bitrate",
        required: true,
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      timescale: {
        serializedName: "timescale",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resultCode: {
        serializedName: "resultCode",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      trackName: {
        serializedName: "trackName",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventIngestHeartbeatEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaLiveEventIngestHeartbeatEventData",
    modelProperties: {
      trackType: {
        serializedName: "trackType",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      trackName: {
        serializedName: "trackName",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      bitrate: {
        serializedName: "bitrate",
        required: true,
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      incomingBitrate: {
        serializedName: "incomingBitrate",
        required: true,
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      lastTimestamp: {
        serializedName: "lastTimestamp",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      timescale: {
        serializedName: "timescale",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      overlapCount: {
        serializedName: "overlapCount",
        required: true,
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      discontinuityCount: {
        serializedName: "discontinuityCount",
        required: true,
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      nonincreasingCount: {
        serializedName: "nonincreasingCount",
        required: true,
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      unexpectedBitrate: {
        serializedName: "unexpectedBitrate",
        required: true,
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      state: {
        serializedName: "state",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      healthy: {
        serializedName: "healthy",
        required: true,
        readOnly: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const MediaLiveEventTrackDiscontinuityDetectedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaLiveEventTrackDiscontinuityDetectedEventData",
    modelProperties: {
      trackType: {
        serializedName: "trackType",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      trackName: {
        serializedName: "trackName",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      bitrate: {
        serializedName: "bitrate",
        required: true,
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      previousTimestamp: {
        serializedName: "previousTimestamp",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      newTimestamp: {
        serializedName: "newTimestamp",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      timescale: {
        serializedName: "timescale",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      discontinuityGap: {
        serializedName: "discontinuityGap",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MapsGeofenceEvent: CompositeMapper = {
  type: {
    name: "Composite",
    className: "MapsGeofenceEvent",
    modelProperties: {
      expiredGeofenceGeometryId: {
        serializedName: "expiredGeofenceGeometryId",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      geometries: {
        serializedName: "geometries",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MapsGeofenceGeometry"
            }
          }
        }
      },
      invalidPeriodGeofenceGeometryId: {
        serializedName: "invalidPeriodGeofenceGeometryId",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      isEventPublished: {
        serializedName: "isEventPublished",
        required: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const MapsGeofenceGeometry: CompositeMapper = {
  type: {
    name: "Composite",
    className: "MapsGeofenceGeometry",
    modelProperties: {
      deviceId: {
        serializedName: "deviceId",
        required: true,
        type: {
          name: "String"
        }
      },
      distance: {
        serializedName: "distance",
        required: true,
        type: {
          name: "Number"
        }
      },
      geometryId: {
        serializedName: "geometryId",
        required: true,
        type: {
          name: "String"
        }
      },
      nearestLat: {
        serializedName: "nearestLat",
        required: true,
        type: {
          name: "Number"
        }
      },
      nearestLon: {
        serializedName: "nearestLon",
        required: true,
        type: {
          name: "Number"
        }
      },
      udId: {
        serializedName: "udId",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppConfigurationKeyValueModifiedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppConfigurationKeyValueModifiedEventData",
    modelProperties: {
      key: {
        serializedName: "key",
        required: true,
        type: {
          name: "String"
        }
      },
      label: {
        serializedName: "label",
        required: true,
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        required: true,
        type: {
          name: "String"
        }
      },
      syncToken: {
        serializedName: "syncToken",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppConfigurationKeyValueDeletedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppConfigurationKeyValueDeletedEventData",
    modelProperties: {
      key: {
        serializedName: "key",
        required: true,
        type: {
          name: "String"
        }
      },
      label: {
        serializedName: "label",
        required: true,
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        required: true,
        type: {
          name: "String"
        }
      },
      syncToken: {
        serializedName: "syncToken",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SignalRServiceClientConnectionConnectedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "SignalRServiceClientConnectionConnectedEventData",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "String"
        }
      },
      hubName: {
        serializedName: "hubName",
        required: true,
        type: {
          name: "String"
        }
      },
      connectionId: {
        serializedName: "connectionId",
        required: true,
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "userId",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SignalRServiceClientConnectionDisconnectedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "SignalRServiceClientConnectionDisconnectedEventData",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "String"
        }
      },
      hubName: {
        serializedName: "hubName",
        required: true,
        type: {
          name: "String"
        }
      },
      connectionId: {
        serializedName: "connectionId",
        required: true,
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "userId",
        required: true,
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "errorMessage",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const KeyVaultCertificateNewVersionCreatedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultCertificateNewVersionCreatedEventData",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "vaultName",
        required: true,
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "objectType",
        required: true,
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "objectName",
        required: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "nbf",
        required: true,
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "exp",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const KeyVaultCertificateNearExpiryEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultCertificateNearExpiryEventData",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "vaultName",
        required: true,
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "objectType",
        required: true,
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "objectName",
        required: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "nbf",
        required: true,
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "exp",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const KeyVaultCertificateExpiredEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultCertificateExpiredEventData",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "vaultName",
        required: true,
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "objectType",
        required: true,
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "objectName",
        required: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "nbf",
        required: true,
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "exp",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const KeyVaultKeyNewVersionCreatedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultKeyNewVersionCreatedEventData",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "vaultName",
        required: true,
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "objectType",
        required: true,
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "objectName",
        required: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "nbf",
        required: true,
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "exp",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const KeyVaultKeyNearExpiryEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultKeyNearExpiryEventData",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "vaultName",
        required: true,
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "objectType",
        required: true,
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "objectName",
        required: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "nbf",
        required: true,
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "exp",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const KeyVaultKeyExpiredEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultKeyExpiredEventData",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "vaultName",
        required: true,
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "objectType",
        required: true,
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "objectName",
        required: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "nbf",
        required: true,
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "exp",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const KeyVaultSecretNewVersionCreatedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultSecretNewVersionCreatedEventData",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "vaultName",
        required: true,
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "objectType",
        required: true,
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "objectName",
        required: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "nbf",
        required: true,
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "exp",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const KeyVaultSecretNearExpiryEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultSecretNearExpiryEventData",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "vaultName",
        required: true,
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "objectType",
        required: true,
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "objectName",
        required: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "nbf",
        required: true,
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "exp",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const KeyVaultSecretExpiredEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultSecretExpiredEventData",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "vaultName",
        required: true,
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "objectType",
        required: true,
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "objectName",
        required: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "nbf",
        required: true,
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "exp",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const KeyVaultAccessPolicyChangedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultAccessPolicyChangedEventData",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "vaultName",
        required: true,
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "objectType",
        required: true,
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "objectName",
        required: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "nbf",
        required: true,
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "exp",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const MachineLearningServicesModelRegisteredEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachineLearningServicesModelRegisteredEventData",
    modelProperties: {
      modelName: {
        serializedName: "modelName",
        required: true,
        type: {
          name: "String"
        }
      },
      modelVersion: {
        serializedName: "modelVersion",
        required: true,
        type: {
          name: "String"
        }
      },
      modelTags: {
        serializedName: "modelTags",
        required: true,
        type: {
          name: "any"
        }
      },
      modelProperties: {
        serializedName: "modelProperties",
        required: true,
        type: {
          name: "any"
        }
      }
    }
  }
};

export const MachineLearningServicesModelDeployedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachineLearningServicesModelDeployedEventData",
    modelProperties: {
      serviceName: {
        serializedName: "serviceName",
        required: true,
        type: {
          name: "String"
        }
      },
      serviceComputeType: {
        serializedName: "serviceComputeType",
        required: true,
        type: {
          name: "String"
        }
      },
      modelIds: {
        serializedName: "modelIds",
        required: true,
        type: {
          name: "String"
        }
      },
      serviceTags: {
        serializedName: "serviceTags",
        required: true,
        type: {
          name: "any"
        }
      },
      serviceProperties: {
        serializedName: "serviceProperties",
        required: true,
        type: {
          name: "any"
        }
      }
    }
  }
};

export const MachineLearningServicesRunCompletedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachineLearningServicesRunCompletedEventData",
    modelProperties: {
      experimentId: {
        serializedName: "experimentId",
        required: true,
        type: {
          name: "String"
        }
      },
      experimentName: {
        serializedName: "experimentName",
        required: true,
        type: {
          name: "String"
        }
      },
      runId: {
        serializedName: "runId",
        required: true,
        type: {
          name: "String"
        }
      },
      runType: {
        serializedName: "runType",
        required: true,
        type: {
          name: "String"
        }
      },
      runTags: {
        serializedName: "runTags",
        required: true,
        type: {
          name: "any"
        }
      },
      runProperties: {
        serializedName: "runProperties",
        required: true,
        type: {
          name: "any"
        }
      }
    }
  }
};

export const MachineLearningServicesDatasetDriftDetectedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachineLearningServicesDatasetDriftDetectedEventData",
    modelProperties: {
      dataDriftId: {
        serializedName: "dataDriftId",
        required: true,
        type: {
          name: "String"
        }
      },
      dataDriftName: {
        serializedName: "dataDriftName",
        required: true,
        type: {
          name: "String"
        }
      },
      runId: {
        serializedName: "runId",
        required: true,
        type: {
          name: "String"
        }
      },
      baseDatasetId: {
        serializedName: "baseDatasetId",
        required: true,
        type: {
          name: "String"
        }
      },
      targetDatasetId: {
        serializedName: "targetDatasetId",
        required: true,
        type: {
          name: "String"
        }
      },
      driftCoefficient: {
        serializedName: "driftCoefficient",
        required: true,
        type: {
          name: "Number"
        }
      },
      startTime: {
        serializedName: "startTime",
        required: true,
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MachineLearningServicesRunStatusChangedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachineLearningServicesRunStatusChangedEventData",
    modelProperties: {
      experimentId: {
        serializedName: "experimentId",
        required: true,
        type: {
          name: "String"
        }
      },
      experimentName: {
        serializedName: "experimentName",
        required: true,
        type: {
          name: "String"
        }
      },
      runId: {
        serializedName: "runId",
        required: true,
        type: {
          name: "String"
        }
      },
      runType: {
        serializedName: "runType",
        required: true,
        type: {
          name: "String"
        }
      },
      runTags: {
        serializedName: "runTags",
        required: true,
        type: {
          name: "any"
        }
      },
      runProperties: {
        serializedName: "runProperties",
        required: true,
        type: {
          name: "any"
        }
      },
      runStatus: {
        serializedName: "runStatus",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RedisPatchingCompletedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "RedisPatchingCompletedEventData",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RedisScalingCompletedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "RedisScalingCompletedEventData",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RedisExportRDBCompletedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "RedisExportRDBCompletedEventData",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RedisImportRDBCompletedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "RedisImportRDBCompletedEventData",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebAppUpdatedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebAppUpdatedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        required: true,
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        required: true,
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppEventTypeDetail: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppEventTypeDetail",
    modelProperties: {
      action: {
        serializedName: "action",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebBackupOperationStartedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebBackupOperationStartedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        required: true,
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        required: true,
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebBackupOperationCompletedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebBackupOperationCompletedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        required: true,
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        required: true,
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebBackupOperationFailedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebBackupOperationFailedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        required: true,
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        required: true,
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebRestoreOperationStartedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebRestoreOperationStartedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        required: true,
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        required: true,
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebRestoreOperationCompletedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebRestoreOperationCompletedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        required: true,
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        required: true,
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebRestoreOperationFailedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebRestoreOperationFailedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        required: true,
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        required: true,
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebSlotSwapStartedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebSlotSwapStartedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        required: true,
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        required: true,
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebSlotSwapCompletedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebSlotSwapCompletedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        required: true,
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        required: true,
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebSlotSwapFailedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebSlotSwapFailedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        required: true,
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        required: true,
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebSlotSwapWithPreviewStartedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebSlotSwapWithPreviewStartedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        required: true,
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        required: true,
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebSlotSwapWithPreviewCancelledEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebSlotSwapWithPreviewCancelledEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        required: true,
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        required: true,
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebAppServicePlanUpdatedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebAppServicePlanUpdatedEventData",
    modelProperties: {
      appServicePlanEventTypeDetail: {
        serializedName: "appServicePlanEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppServicePlanEventTypeDetail"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "WebAppServicePlanUpdatedEventDataSku"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        required: true,
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        required: true,
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        required: true,
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppServicePlanEventTypeDetail: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppServicePlanEventTypeDetail",
    modelProperties: {
      stampKind: {
        serializedName: "stampKind",
        required: true,
        type: {
          name: "String"
        }
      },
      action: {
        serializedName: "action",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebAppServicePlanUpdatedEventDataSku: CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebAppServicePlanUpdatedEventDataSku",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "Tier",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "Size",
        type: {
          name: "String"
        }
      },
      family: {
        serializedName: "Family",
        type: {
          name: "String"
        }
      },
      capacity: {
        serializedName: "Capacity",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CommunicationIdentifierModel: CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationIdentifierModel",
    modelProperties: {
      rawId: {
        serializedName: "rawId",
        required: true,
        type: {
          name: "String"
        }
      },
      communicationUser: {
        serializedName: "communicationUser",
        type: {
          name: "Composite",
          className: "CommunicationUserIdentifierModel"
        }
      },
      phoneNumber: {
        serializedName: "phoneNumber",
        type: {
          name: "Composite",
          className: "PhoneNumberIdentifierModel"
        }
      },
      microsoftTeamsUser: {
        serializedName: "microsoftTeamsUser",
        type: {
          name: "Composite",
          className: "MicrosoftTeamsUserIdentifierModel"
        }
      }
    }
  }
};

export const CommunicationUserIdentifierModel: CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationUserIdentifierModel",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PhoneNumberIdentifierModel: CompositeMapper = {
  type: {
    name: "Composite",
    className: "PhoneNumberIdentifierModel",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MicrosoftTeamsUserIdentifierModel: CompositeMapper = {
  type: {
    name: "Composite",
    className: "MicrosoftTeamsUserIdentifierModel",
    modelProperties: {
      userId: {
        serializedName: "userId",
        required: true,
        type: {
          name: "String"
        }
      },
      isAnonymous: {
        serializedName: "isAnonymous",
        type: {
          name: "Boolean"
        }
      },
      cloud: {
        serializedName: "cloud",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AcsChatEventBase: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatEventBase",
    modelProperties: {
      recipientCommunicationIdentifier: {
        serializedName: "recipientCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      transactionId: {
        serializedName: "transactionId",
        required: true,
        type: {
          name: "String"
        }
      },
      threadId: {
        serializedName: "threadId",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AcsChatEventInThreadBase: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatEventInThreadBase",
    modelProperties: {
      transactionId: {
        serializedName: "transactionId",
        required: true,
        type: {
          name: "String"
        }
      },
      threadId: {
        serializedName: "threadId",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AcsChatThreadParticipant: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatThreadParticipant",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        required: true,
        type: {
          name: "String"
        }
      },
      participantCommunicationIdentifier: {
        serializedName: "participantCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      }
    }
  }
};

export const AcsSmsDeliveryAttempt: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsSmsDeliveryAttempt",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "String"
        }
      },
      segmentsSucceeded: {
        serializedName: "segmentsSucceeded",
        required: true,
        type: {
          name: "Number"
        }
      },
      segmentsFailed: {
        serializedName: "segmentsFailed",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AcsSmsEventBase: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsSmsEventBase",
    modelProperties: {
      messageId: {
        serializedName: "messageId",
        required: true,
        type: {
          name: "String"
        }
      },
      from: {
        serializedName: "from",
        required: true,
        type: {
          name: "String"
        }
      },
      to: {
        serializedName: "to",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AcsRecordingFileStatusUpdatedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsRecordingFileStatusUpdatedEventData",
    modelProperties: {
      recordingStorageInfo: {
        serializedName: "recordingStorageInfo",
        type: {
          name: "Composite",
          className: "AcsRecordingStorageInfo"
        }
      },
      recordingStartTime: {
        serializedName: "recordingStartTime",
        required: true,
        type: {
          name: "String"
        }
      },
      recordingDurationMs: {
        serializedName: "recordingDurationMs",
        required: true,
        type: {
          name: "Number"
        }
      },
      sessionEndReason: {
        serializedName: "sessionEndReason",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AcsRecordingStorageInfo: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsRecordingStorageInfo",
    modelProperties: {
      recordingChunks: {
        serializedName: "recordingChunks",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AcsRecordingChunkInfo"
            }
          }
        }
      }
    }
  }
};

export const AcsRecordingChunkInfo: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsRecordingChunkInfo",
    modelProperties: {
      documentId: {
        serializedName: "documentId",
        required: true,
        type: {
          name: "String"
        }
      },
      index: {
        serializedName: "index",
        required: true,
        type: {
          name: "Number"
        }
      },
      endReason: {
        serializedName: "endReason",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PolicyInsightsPolicyStateCreatedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "PolicyInsightsPolicyStateCreatedEventData",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "String"
        }
      },
      policyAssignmentId: {
        serializedName: "policyAssignmentId",
        required: true,
        type: {
          name: "String"
        }
      },
      policyDefinitionId: {
        serializedName: "policyDefinitionId",
        required: true,
        type: {
          name: "String"
        }
      },
      policyDefinitionReferenceId: {
        serializedName: "policyDefinitionReferenceId",
        required: true,
        type: {
          name: "String"
        }
      },
      complianceState: {
        serializedName: "complianceState",
        required: true,
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        required: true,
        type: {
          name: "String"
        }
      },
      complianceReasonCode: {
        serializedName: "complianceReasonCode",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PolicyInsightsPolicyStateChangedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "PolicyInsightsPolicyStateChangedEventData",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "String"
        }
      },
      policyAssignmentId: {
        serializedName: "policyAssignmentId",
        required: true,
        type: {
          name: "String"
        }
      },
      policyDefinitionId: {
        serializedName: "policyDefinitionId",
        required: true,
        type: {
          name: "String"
        }
      },
      policyDefinitionReferenceId: {
        serializedName: "policyDefinitionReferenceId",
        required: true,
        type: {
          name: "String"
        }
      },
      complianceState: {
        serializedName: "complianceState",
        required: true,
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        required: true,
        type: {
          name: "String"
        }
      },
      complianceReasonCode: {
        serializedName: "complianceReasonCode",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PolicyInsightsPolicyStateDeletedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "PolicyInsightsPolicyStateDeletedEventData",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        required: true,
        type: {
          name: "String"
        }
      },
      policyAssignmentId: {
        serializedName: "policyAssignmentId",
        required: true,
        type: {
          name: "String"
        }
      },
      policyDefinitionId: {
        serializedName: "policyDefinitionId",
        required: true,
        type: {
          name: "String"
        }
      },
      policyDefinitionReferenceId: {
        serializedName: "policyDefinitionReferenceId",
        required: true,
        type: {
          name: "String"
        }
      },
      complianceState: {
        serializedName: "complianceState",
        required: true,
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        required: true,
        type: {
          name: "String"
        }
      },
      complianceReasonCode: {
        serializedName: "complianceReasonCode",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IotHubDeviceCreatedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "IotHubDeviceCreatedEventData",
    modelProperties: {
      ...DeviceLifeCycleEvent.type.modelProperties
    }
  }
};

export const IotHubDeviceDeletedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "IotHubDeviceDeletedEventData",
    modelProperties: {
      ...DeviceLifeCycleEvent.type.modelProperties
    }
  }
};

export const IotHubDeviceConnectedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "IotHubDeviceConnectedEventData",
    modelProperties: {
      ...DeviceConnectionStateEvent.type.modelProperties
    }
  }
};

export const IotHubDeviceDisconnectedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "IotHubDeviceDisconnectedEventData",
    modelProperties: {
      ...DeviceConnectionStateEvent.type.modelProperties
    }
  }
};

export const IotHubDeviceTelemetryEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "IotHubDeviceTelemetryEventData",
    modelProperties: {
      ...DeviceTelemetryEvent.type.modelProperties
    }
  }
};

export const ContainerRegistryImagePushedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryImagePushedEventData",
    modelProperties: {
      ...ContainerRegistryEventData.type.modelProperties
    }
  }
};

export const ContainerRegistryImageDeletedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryImageDeletedEventData",
    modelProperties: {
      ...ContainerRegistryEventData.type.modelProperties
    }
  }
};

export const ContainerRegistryChartPushedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryChartPushedEventData",
    modelProperties: {
      ...ContainerRegistryArtifactEventData.type.modelProperties
    }
  }
};

export const ContainerRegistryChartDeletedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryChartDeletedEventData",
    modelProperties: {
      ...ContainerRegistryArtifactEventData.type.modelProperties
    }
  }
};

export const MediaJobScheduledEventData: CompositeMapper = {
  serializedName: "#Microsoft.Media.JobScheduled",
  type: {
    name: "Composite",
    className: "MediaJobScheduledEventData",
    modelProperties: {
      ...MediaJobStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobProcessingEventData: CompositeMapper = {
  serializedName: "#Microsoft.Media.JobProcessing",
  type: {
    name: "Composite",
    className: "MediaJobProcessingEventData",
    modelProperties: {
      ...MediaJobStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobCancelingEventData: CompositeMapper = {
  serializedName: "#Microsoft.Media.JobCanceling",
  type: {
    name: "Composite",
    className: "MediaJobCancelingEventData",
    modelProperties: {
      ...MediaJobStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobFinishedEventData: CompositeMapper = {
  serializedName: "#Microsoft.Media.JobFinished",
  type: {
    name: "Composite",
    className: "MediaJobFinishedEventData",
    modelProperties: {
      ...MediaJobStateChangeEventData.type.modelProperties,
      outputs: {
        serializedName: "outputs",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MediaJobOutput"
            }
          }
        }
      }
    }
  }
};

export const MediaJobCanceledEventData: CompositeMapper = {
  serializedName: "#Microsoft.Media.JobCanceled",
  type: {
    name: "Composite",
    className: "MediaJobCanceledEventData",
    modelProperties: {
      ...MediaJobStateChangeEventData.type.modelProperties,
      outputs: {
        serializedName: "outputs",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MediaJobOutput"
            }
          }
        }
      }
    }
  }
};

export const MediaJobErroredEventData: CompositeMapper = {
  serializedName: "#Microsoft.Media.JobErrored",
  type: {
    name: "Composite",
    className: "MediaJobErroredEventData",
    modelProperties: {
      ...MediaJobStateChangeEventData.type.modelProperties,
      outputs: {
        serializedName: "outputs",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MediaJobOutput"
            }
          }
        }
      }
    }
  }
};

export const MediaJobOutputAsset: CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputAsset",
  type: {
    name: "Composite",
    className: "MediaJobOutputAsset",
    uberParent: "MediaJobOutput",
    polymorphicDiscriminator: MediaJobOutput.type.polymorphicDiscriminator,
    modelProperties: {
      ...MediaJobOutput.type.modelProperties,
      assetName: {
        serializedName: "assetName",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaJobOutputCanceledEventData: CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputCanceled",
  type: {
    name: "Composite",
    className: "MediaJobOutputCanceledEventData",
    modelProperties: {
      ...MediaJobOutputStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobOutputCancelingEventData: CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputCanceling",
  type: {
    name: "Composite",
    className: "MediaJobOutputCancelingEventData",
    modelProperties: {
      ...MediaJobOutputStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobOutputErroredEventData: CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputErrored",
  type: {
    name: "Composite",
    className: "MediaJobOutputErroredEventData",
    modelProperties: {
      ...MediaJobOutputStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobOutputFinishedEventData: CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputFinished",
  type: {
    name: "Composite",
    className: "MediaJobOutputFinishedEventData",
    modelProperties: {
      ...MediaJobOutputStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobOutputProcessingEventData: CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputProcessing",
  type: {
    name: "Composite",
    className: "MediaJobOutputProcessingEventData",
    modelProperties: {
      ...MediaJobOutputStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobOutputScheduledEventData: CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputScheduled",
  type: {
    name: "Composite",
    className: "MediaJobOutputScheduledEventData",
    modelProperties: {
      ...MediaJobOutputStateChangeEventData.type.modelProperties
    }
  }
};

export const MapsGeofenceEnteredEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "MapsGeofenceEnteredEventData",
    modelProperties: {
      ...MapsGeofenceEvent.type.modelProperties
    }
  }
};

export const MapsGeofenceExitedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "MapsGeofenceExitedEventData",
    modelProperties: {
      ...MapsGeofenceEvent.type.modelProperties
    }
  }
};

export const MapsGeofenceResultEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "MapsGeofenceResultEventData",
    modelProperties: {
      ...MapsGeofenceEvent.type.modelProperties
    }
  }
};

export const AcsChatMessageEventBase: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatMessageEventBase",
    modelProperties: {
      ...AcsChatEventBase.type.modelProperties,
      messageId: {
        serializedName: "messageId",
        required: true,
        type: {
          name: "String"
        }
      },
      senderCommunicationIdentifier: {
        serializedName: "senderCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      senderDisplayName: {
        serializedName: "senderDisplayName",
        required: true,
        type: {
          name: "String"
        }
      },
      composeTime: {
        serializedName: "composeTime",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AcsChatThreadEventBase: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatThreadEventBase",
    modelProperties: {
      ...AcsChatEventBase.type.modelProperties,
      createTime: {
        serializedName: "createTime",
        required: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AcsChatMessageEventInThreadBase: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatMessageEventInThreadBase",
    modelProperties: {
      ...AcsChatEventInThreadBase.type.modelProperties,
      messageId: {
        serializedName: "messageId",
        required: true,
        type: {
          name: "String"
        }
      },
      senderCommunicationIdentifier: {
        serializedName: "senderCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      senderDisplayName: {
        serializedName: "senderDisplayName",
        required: true,
        type: {
          name: "String"
        }
      },
      composeTime: {
        serializedName: "composeTime",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AcsChatThreadEventInThreadBase: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatThreadEventInThreadBase",
    modelProperties: {
      ...AcsChatEventInThreadBase.type.modelProperties,
      createTime: {
        serializedName: "createTime",
        required: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AcsChatParticipantAddedToThreadEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatParticipantAddedToThreadEventData",
    modelProperties: {
      ...AcsChatEventInThreadBase.type.modelProperties,
      time: {
        serializedName: "time",
        required: true,
        type: {
          name: "String"
        }
      },
      addedByCommunicationIdentifier: {
        serializedName: "addedByCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      participantAdded: {
        serializedName: "participantAdded",
        type: {
          name: "Composite",
          className: "AcsChatThreadParticipant"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AcsChatParticipantRemovedFromThreadEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatParticipantRemovedFromThreadEventData",
    modelProperties: {
      ...AcsChatEventInThreadBase.type.modelProperties,
      time: {
        serializedName: "time",
        required: true,
        type: {
          name: "String"
        }
      },
      removedByCommunicationIdentifier: {
        serializedName: "removedByCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      participantRemoved: {
        serializedName: "participantRemoved",
        type: {
          name: "Composite",
          className: "AcsChatThreadParticipant"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AcsSmsDeliveryReportReceivedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsSmsDeliveryReportReceivedEventData",
    modelProperties: {
      ...AcsSmsEventBase.type.modelProperties,
      deliveryStatus: {
        serializedName: "deliveryStatus",
        required: true,
        type: {
          name: "String"
        }
      },
      deliveryStatusDetails: {
        serializedName: "deliveryStatusDetails",
        required: true,
        type: {
          name: "String"
        }
      },
      deliveryAttempts: {
        serializedName: "deliveryAttempts",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AcsSmsDeliveryAttempt"
            }
          }
        }
      },
      receivedTimestamp: {
        serializedName: "receivedTimestamp",
        required: true,
        type: {
          name: "String"
        }
      },
      tag: {
        serializedName: "tag",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AcsSmsReceivedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsSmsReceivedEventData",
    modelProperties: {
      ...AcsSmsEventBase.type.modelProperties,
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      },
      receivedTimestamp: {
        serializedName: "receivedTimestamp",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AcsChatMessageReceivedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatMessageReceivedEventData",
    modelProperties: {
      ...AcsChatMessageEventBase.type.modelProperties,
      messageBody: {
        serializedName: "messageBody",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AcsChatMessageEditedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatMessageEditedEventData",
    modelProperties: {
      ...AcsChatMessageEventBase.type.modelProperties,
      messageBody: {
        serializedName: "messageBody",
        required: true,
        type: {
          name: "String"
        }
      },
      editTime: {
        serializedName: "editTime",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AcsChatMessageDeletedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatMessageDeletedEventData",
    modelProperties: {
      ...AcsChatMessageEventBase.type.modelProperties,
      deleteTime: {
        serializedName: "deleteTime",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AcsChatThreadCreatedWithUserEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatThreadCreatedWithUserEventData",
    modelProperties: {
      ...AcsChatThreadEventBase.type.modelProperties,
      createdByCommunicationIdentifier: {
        serializedName: "createdByCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      properties: {
        serializedName: "properties",
        required: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      participants: {
        serializedName: "participants",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AcsChatThreadParticipant"
            }
          }
        }
      }
    }
  }
};

export const AcsChatThreadWithUserDeletedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatThreadWithUserDeletedEventData",
    modelProperties: {
      ...AcsChatThreadEventBase.type.modelProperties,
      deletedByCommunicationIdentifier: {
        serializedName: "deletedByCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      deleteTime: {
        serializedName: "deleteTime",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AcsChatThreadPropertiesUpdatedPerUserEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatThreadPropertiesUpdatedPerUserEventData",
    modelProperties: {
      ...AcsChatThreadEventBase.type.modelProperties,
      editedByCommunicationIdentifier: {
        serializedName: "editedByCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      editTime: {
        serializedName: "editTime",
        required: true,
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        required: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const AcsChatParticipantAddedToThreadWithUserEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatParticipantAddedToThreadWithUserEventData",
    modelProperties: {
      ...AcsChatThreadEventBase.type.modelProperties,
      time: {
        serializedName: "time",
        required: true,
        type: {
          name: "String"
        }
      },
      addedByCommunicationIdentifier: {
        serializedName: "addedByCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      participantAdded: {
        serializedName: "participantAdded",
        type: {
          name: "Composite",
          className: "AcsChatThreadParticipant"
        }
      }
    }
  }
};

export const AcsChatParticipantRemovedFromThreadWithUserEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatParticipantRemovedFromThreadWithUserEventData",
    modelProperties: {
      ...AcsChatThreadEventBase.type.modelProperties,
      time: {
        serializedName: "time",
        required: true,
        type: {
          name: "String"
        }
      },
      removedByCommunicationIdentifier: {
        serializedName: "removedByCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      participantRemoved: {
        serializedName: "participantRemoved",
        type: {
          name: "Composite",
          className: "AcsChatThreadParticipant"
        }
      }
    }
  }
};

export const AcsChatMessageReceivedInThreadEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatMessageReceivedInThreadEventData",
    modelProperties: {
      ...AcsChatMessageEventInThreadBase.type.modelProperties,
      messageBody: {
        serializedName: "messageBody",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AcsChatMessageEditedInThreadEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatMessageEditedInThreadEventData",
    modelProperties: {
      ...AcsChatMessageEventInThreadBase.type.modelProperties,
      messageBody: {
        serializedName: "messageBody",
        required: true,
        type: {
          name: "String"
        }
      },
      editTime: {
        serializedName: "editTime",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AcsChatMessageDeletedInThreadEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatMessageDeletedInThreadEventData",
    modelProperties: {
      ...AcsChatMessageEventInThreadBase.type.modelProperties,
      deleteTime: {
        serializedName: "deleteTime",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AcsChatThreadCreatedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatThreadCreatedEventData",
    modelProperties: {
      ...AcsChatThreadEventInThreadBase.type.modelProperties,
      createdByCommunicationIdentifier: {
        serializedName: "createdByCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      properties: {
        serializedName: "properties",
        required: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      participants: {
        serializedName: "participants",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AcsChatThreadParticipant"
            }
          }
        }
      }
    }
  }
};

export const AcsChatThreadDeletedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatThreadDeletedEventData",
    modelProperties: {
      ...AcsChatThreadEventInThreadBase.type.modelProperties,
      deletedByCommunicationIdentifier: {
        serializedName: "deletedByCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      deleteTime: {
        serializedName: "deleteTime",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AcsChatThreadPropertiesUpdatedEventData: CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatThreadPropertiesUpdatedEventData",
    modelProperties: {
      ...AcsChatThreadEventInThreadBase.type.modelProperties,
      editedByCommunicationIdentifier: {
        serializedName: "editedByCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      editTime: {
        serializedName: "editTime",
        required: true,
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        required: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export let discriminators = {
  MediaJobOutput: MediaJobOutput,
  "MediaJobOutput.#Microsoft.Media.JobOutputAsset": MediaJobOutputAsset
};
