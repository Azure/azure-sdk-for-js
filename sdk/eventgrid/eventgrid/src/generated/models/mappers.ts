/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const EventGridEvent: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventGridEvent",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      topic: {
        serializedName: "topic",
        type: {
          name: "String"
        }
      },
      subject: {
        serializedName: "subject",
        required: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        required: true,
        type: {
          name: "any"
        }
      },
      eventType: {
        serializedName: "eventType",
        required: true,
        type: {
          name: "String"
        }
      },
      eventTime: {
        serializedName: "eventTime",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      metadataVersion: {
        serializedName: "metadataVersion",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      dataVersion: {
        serializedName: "dataVersion",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CloudEvent: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudEvent",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "source",
        required: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "any"
        }
      },
      dataBase64: {
        serializedName: "data_base64",
        type: {
          name: "ByteArray"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      time: {
        serializedName: "time",
        type: {
          name: "DateTime"
        }
      },
      specversion: {
        serializedName: "specversion",
        required: true,
        type: {
          name: "String"
        }
      },
      dataschema: {
        serializedName: "dataschema",
        type: {
          name: "String"
        }
      },
      datacontenttype: {
        serializedName: "datacontenttype",
        type: {
          name: "String"
        }
      },
      subject: {
        serializedName: "subject",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageBlobCreatedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageBlobCreatedEventData",
    modelProperties: {
      api: {
        serializedName: "api",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "contentType",
        type: {
          name: "String"
        }
      },
      contentLength: {
        serializedName: "contentLength",
        type: {
          name: "Number"
        }
      },
      contentOffset: {
        serializedName: "contentOffset",
        type: {
          name: "Number"
        }
      },
      blobType: {
        serializedName: "blobType",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      sequencer: {
        serializedName: "sequencer",
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "String"
        }
      },
      storageDiagnostics: {
        serializedName: "storageDiagnostics",
        type: {
          name: "any"
        }
      }
    }
  }
};

export const StorageBlobDeletedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageBlobDeletedEventData",
    modelProperties: {
      api: {
        serializedName: "api",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "contentType",
        type: {
          name: "String"
        }
      },
      blobType: {
        serializedName: "blobType",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      sequencer: {
        serializedName: "sequencer",
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "String"
        }
      },
      storageDiagnostics: {
        serializedName: "storageDiagnostics",
        type: {
          name: "any"
        }
      }
    }
  }
};

export const StorageDirectoryCreatedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageDirectoryCreatedEventData",
    modelProperties: {
      api: {
        serializedName: "api",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      sequencer: {
        serializedName: "sequencer",
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "String"
        }
      },
      storageDiagnostics: {
        serializedName: "storageDiagnostics",
        type: {
          name: "any"
        }
      }
    }
  }
};

export const StorageDirectoryDeletedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageDirectoryDeletedEventData",
    modelProperties: {
      api: {
        serializedName: "api",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      recursive: {
        serializedName: "recursive",
        type: {
          name: "Boolean"
        }
      },
      sequencer: {
        serializedName: "sequencer",
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "String"
        }
      },
      storageDiagnostics: {
        serializedName: "storageDiagnostics",
        type: {
          name: "any"
        }
      }
    }
  }
};

export const StorageBlobRenamedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageBlobRenamedEventData",
    modelProperties: {
      api: {
        serializedName: "api",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      sourceUrl: {
        serializedName: "sourceUrl",
        type: {
          name: "String"
        }
      },
      destinationUrl: {
        serializedName: "destinationUrl",
        type: {
          name: "String"
        }
      },
      sequencer: {
        serializedName: "sequencer",
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "String"
        }
      },
      storageDiagnostics: {
        serializedName: "storageDiagnostics",
        type: {
          name: "any"
        }
      }
    }
  }
};

export const StorageDirectoryRenamedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageDirectoryRenamedEventData",
    modelProperties: {
      api: {
        serializedName: "api",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      sourceUrl: {
        serializedName: "sourceUrl",
        type: {
          name: "String"
        }
      },
      destinationUrl: {
        serializedName: "destinationUrl",
        type: {
          name: "String"
        }
      },
      sequencer: {
        serializedName: "sequencer",
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "String"
        }
      },
      storageDiagnostics: {
        serializedName: "storageDiagnostics",
        type: {
          name: "any"
        }
      }
    }
  }
};

export const StorageLifecyclePolicyCompletedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageLifecyclePolicyCompletedEventData",
    modelProperties: {
      scheduleTime: {
        serializedName: "scheduleTime",
        type: {
          name: "String"
        }
      },
      deleteSummary: {
        serializedName: "deleteSummary",
        type: {
          name: "Composite",
          className: "StorageLifecyclePolicyActionSummaryDetail"
        }
      },
      tierToCoolSummary: {
        serializedName: "tierToCoolSummary",
        type: {
          name: "Composite",
          className: "StorageLifecyclePolicyActionSummaryDetail"
        }
      },
      tierToArchiveSummary: {
        serializedName: "tierToArchiveSummary",
        type: {
          name: "Composite",
          className: "StorageLifecyclePolicyActionSummaryDetail"
        }
      }
    }
  }
};

export const StorageLifecyclePolicyActionSummaryDetail: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageLifecyclePolicyActionSummaryDetail",
    modelProperties: {
      totalObjectsCount: {
        serializedName: "totalObjectsCount",
        type: {
          name: "Number"
        }
      },
      successCount: {
        serializedName: "successCount",
        type: {
          name: "Number"
        }
      },
      errorList: {
        serializedName: "errorList",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventHubCaptureFileCreatedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventHubCaptureFileCreatedEventData",
    modelProperties: {
      fileurl: {
        serializedName: "fileurl",
        type: {
          name: "String"
        }
      },
      fileType: {
        serializedName: "fileType",
        type: {
          name: "String"
        }
      },
      partitionId: {
        serializedName: "partitionId",
        type: {
          name: "String"
        }
      },
      sizeInBytes: {
        serializedName: "sizeInBytes",
        type: {
          name: "Number"
        }
      },
      eventCount: {
        serializedName: "eventCount",
        type: {
          name: "Number"
        }
      },
      firstSequenceNumber: {
        serializedName: "firstSequenceNumber",
        type: {
          name: "Number"
        }
      },
      lastSequenceNumber: {
        serializedName: "lastSequenceNumber",
        type: {
          name: "Number"
        }
      },
      firstEnqueueTime: {
        serializedName: "firstEnqueueTime",
        type: {
          name: "DateTime"
        }
      },
      lastEnqueueTime: {
        serializedName: "lastEnqueueTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ResourceWriteSuccessEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceWriteSuccessEventData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceWriteFailureEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceWriteFailureEventData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceWriteCancelEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceWriteCancelEventData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceDeleteSuccessEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceDeleteSuccessEventData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceDeleteFailureEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceDeleteFailureEventData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceDeleteCancelEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceDeleteCancelEventData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceActionSuccessEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceActionSuccessEventData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceActionFailureEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceActionFailureEventData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceActionCancelEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceActionCancelEventData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubscriptionValidationEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubscriptionValidationEventData",
    modelProperties: {
      validationCode: {
        serializedName: "validationCode",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      validationUrl: {
        serializedName: "validationUrl",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubscriptionValidationResponse: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubscriptionValidationResponse",
    modelProperties: {
      validationResponse: {
        serializedName: "validationResponse",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubscriptionDeletedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubscriptionDeletedEventData",
    modelProperties: {
      eventSubscriptionId: {
        serializedName: "eventSubscriptionId",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceLifeCycleEventProperties: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceLifeCycleEventProperties",
    modelProperties: {
      deviceId: {
        serializedName: "deviceId",
        type: {
          name: "String"
        }
      },
      hubName: {
        serializedName: "hubName",
        type: {
          name: "String"
        }
      },
      twin: {
        serializedName: "twin",
        type: {
          name: "Composite",
          className: "DeviceTwinInfo"
        }
      }
    }
  }
};

export const DeviceTwinInfo: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceTwinInfo",
    modelProperties: {
      authenticationType: {
        serializedName: "authenticationType",
        type: {
          name: "String"
        }
      },
      cloudToDeviceMessageCount: {
        serializedName: "cloudToDeviceMessageCount",
        type: {
          name: "Number"
        }
      },
      connectionState: {
        serializedName: "connectionState",
        type: {
          name: "String"
        }
      },
      deviceId: {
        serializedName: "deviceId",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      lastActivityTime: {
        serializedName: "lastActivityTime",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "DeviceTwinInfoProperties"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      statusUpdateTime: {
        serializedName: "statusUpdateTime",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "Number"
        }
      },
      x509Thumbprint: {
        serializedName: "x509Thumbprint",
        type: {
          name: "Composite",
          className: "DeviceTwinInfoX509Thumbprint"
        }
      }
    }
  }
};

export const DeviceTwinInfoProperties: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceTwinInfoProperties",
    modelProperties: {
      desired: {
        serializedName: "desired",
        type: {
          name: "Composite",
          className: "DeviceTwinProperties"
        }
      },
      reported: {
        serializedName: "reported",
        type: {
          name: "Composite",
          className: "DeviceTwinProperties"
        }
      }
    }
  }
};

export const DeviceTwinProperties: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceTwinProperties",
    modelProperties: {
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "DeviceTwinMetadata"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DeviceTwinMetadata: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceTwinMetadata",
    modelProperties: {
      lastUpdated: {
        serializedName: "lastUpdated",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceTwinInfoX509Thumbprint: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceTwinInfoX509Thumbprint",
    modelProperties: {
      primaryThumbprint: {
        serializedName: "primaryThumbprint",
        type: {
          name: "String"
        }
      },
      secondaryThumbprint: {
        serializedName: "secondaryThumbprint",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IotHubDeviceCreatedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IotHubDeviceCreatedEventData",
    modelProperties: {
      ...DeviceLifeCycleEventProperties.type.modelProperties
    }
  }
};

export const IotHubDeviceDeletedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IotHubDeviceDeletedEventData",
    modelProperties: {
      ...DeviceLifeCycleEventProperties.type.modelProperties
    }
  }
};

export const DeviceConnectionStateEventProperties: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceConnectionStateEventProperties",
    modelProperties: {
      deviceId: {
        serializedName: "deviceId",
        type: {
          name: "String"
        }
      },
      moduleId: {
        serializedName: "moduleId",
        type: {
          name: "String"
        }
      },
      hubName: {
        serializedName: "hubName",
        type: {
          name: "String"
        }
      },
      deviceConnectionStateEventInfo: {
        serializedName: "deviceConnectionStateEventInfo",
        type: {
          name: "Composite",
          className: "DeviceConnectionStateEventInfo"
        }
      }
    }
  }
};

export const DeviceConnectionStateEventInfo: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceConnectionStateEventInfo",
    modelProperties: {
      sequenceNumber: {
        serializedName: "sequenceNumber",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IotHubDeviceConnectedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IotHubDeviceConnectedEventData",
    modelProperties: {
      ...DeviceConnectionStateEventProperties.type.modelProperties
    }
  }
};

export const IotHubDeviceDisconnectedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IotHubDeviceDisconnectedEventData",
    modelProperties: {
      ...DeviceConnectionStateEventProperties.type.modelProperties
    }
  }
};

export const DeviceTelemetryEventProperties: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceTelemetryEventProperties",
    modelProperties: {
      body: {
        serializedName: "body",
        type: {
          name: "any"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      systemProperties: {
        serializedName: "systemProperties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const IotHubDeviceTelemetryEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IotHubDeviceTelemetryEventData",
    modelProperties: {
      ...DeviceTelemetryEventProperties.type.modelProperties
    }
  }
};

export const ContainerRegistryEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryEventData",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      action: {
        serializedName: "action",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "Composite",
          className: "ContainerRegistryEventTarget"
        }
      },
      request: {
        serializedName: "request",
        type: {
          name: "Composite",
          className: "ContainerRegistryEventRequest"
        }
      },
      actor: {
        serializedName: "actor",
        type: {
          name: "Composite",
          className: "ContainerRegistryEventActor"
        }
      },
      source: {
        serializedName: "source",
        type: {
          name: "Composite",
          className: "ContainerRegistryEventSource"
        }
      }
    }
  }
};

export const ContainerRegistryEventTarget: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryEventTarget",
    modelProperties: {
      mediaType: {
        serializedName: "mediaType",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      digest: {
        serializedName: "digest",
        type: {
          name: "String"
        }
      },
      length: {
        serializedName: "length",
        type: {
          name: "Number"
        }
      },
      repository: {
        serializedName: "repository",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      tag: {
        serializedName: "tag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ContainerRegistryEventRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryEventRequest",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      addr: {
        serializedName: "addr",
        type: {
          name: "String"
        }
      },
      host: {
        serializedName: "host",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      useragent: {
        serializedName: "useragent",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ContainerRegistryEventActor: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryEventActor",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ContainerRegistryEventSource: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryEventSource",
    modelProperties: {
      addr: {
        serializedName: "addr",
        type: {
          name: "String"
        }
      },
      instanceID: {
        serializedName: "instanceID",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ContainerRegistryImagePushedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryImagePushedEventData",
    modelProperties: {
      ...ContainerRegistryEventData.type.modelProperties
    }
  }
};

export const ContainerRegistryImageDeletedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryImageDeletedEventData",
    modelProperties: {
      ...ContainerRegistryEventData.type.modelProperties
    }
  }
};

export const ContainerRegistryArtifactEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryArtifactEventData",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      action: {
        serializedName: "action",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "Composite",
          className: "ContainerRegistryArtifactEventTarget"
        }
      }
    }
  }
};

export const ContainerRegistryArtifactEventTarget: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryArtifactEventTarget",
    modelProperties: {
      mediaType: {
        serializedName: "mediaType",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      digest: {
        serializedName: "digest",
        type: {
          name: "String"
        }
      },
      repository: {
        serializedName: "repository",
        type: {
          name: "String"
        }
      },
      tag: {
        serializedName: "tag",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ContainerRegistryChartPushedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryChartPushedEventData",
    modelProperties: {
      ...ContainerRegistryArtifactEventData.type.modelProperties
    }
  }
};

export const ContainerRegistryChartDeletedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryChartDeletedEventData",
    modelProperties: {
      ...ContainerRegistryArtifactEventData.type.modelProperties
    }
  }
};

export const ServiceBusActiveMessagesAvailableWithNoListenersEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceBusActiveMessagesAvailableWithNoListenersEventData",
    modelProperties: {
      namespaceName: {
        serializedName: "namespaceName",
        type: {
          name: "String"
        }
      },
      requestUri: {
        serializedName: "requestUri",
        type: {
          name: "String"
        }
      },
      entityType: {
        serializedName: "entityType",
        type: {
          name: "String"
        }
      },
      queueName: {
        serializedName: "queueName",
        type: {
          name: "String"
        }
      },
      topicName: {
        serializedName: "topicName",
        type: {
          name: "String"
        }
      },
      subscriptionName: {
        serializedName: "subscriptionName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceBusDeadletterMessagesAvailableWithNoListenersEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceBusDeadletterMessagesAvailableWithNoListenersEventData",
    modelProperties: {
      namespaceName: {
        serializedName: "namespaceName",
        type: {
          name: "String"
        }
      },
      requestUri: {
        serializedName: "requestUri",
        type: {
          name: "String"
        }
      },
      entityType: {
        serializedName: "entityType",
        type: {
          name: "String"
        }
      },
      queueName: {
        serializedName: "queueName",
        type: {
          name: "String"
        }
      },
      topicName: {
        serializedName: "topicName",
        type: {
          name: "String"
        }
      },
      subscriptionName: {
        serializedName: "subscriptionName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaJobStateChangeEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaJobStateChangeEventData",
    modelProperties: {
      previousState: {
        serializedName: "previousState",
        readOnly: true,
        type: {
          name: "Enum",
          allowedValues: [
            "Canceled",
            "Canceling",
            "Error",
            "Finished",
            "Processing",
            "Queued",
            "Scheduled"
          ]
        }
      },
      state: {
        serializedName: "state",
        readOnly: true,
        type: {
          name: "Enum",
          allowedValues: [
            "Canceled",
            "Canceling",
            "Error",
            "Finished",
            "Processing",
            "Queued",
            "Scheduled"
          ]
        }
      },
      correlationData: {
        serializedName: "correlationData",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const MediaJobError: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaJobError",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "Enum",
          allowedValues: [
            "ServiceError",
            "ServiceTransientError",
            "DownloadNotAccessible",
            "DownloadTransientError",
            "UploadNotAccessible",
            "UploadTransientError",
            "ConfigurationUnsupported",
            "ContentMalformed",
            "ContentUnsupported"
          ]
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      category: {
        serializedName: "category",
        readOnly: true,
        type: {
          name: "Enum",
          allowedValues: [
            "Service",
            "Download",
            "Upload",
            "Configuration",
            "Content"
          ]
        }
      },
      retry: {
        serializedName: "retry",
        readOnly: true,
        type: {
          name: "Enum",
          allowedValues: ["DoNotRetry", "MayRetry"]
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "MediaJobErrorDetail" }
          }
        }
      }
    }
  }
};

export const MediaJobErrorDetail: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaJobErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaJobOutput: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaJobOutput",
    uberParent: "MediaJobOutput",
    polymorphicDiscriminator: {
      serializedName: "@odata\\.type",
      clientName: "@odata\\.type"
    },
    modelProperties: {
      odataType: {
        serializedName: "@odata\\.type",
        type: {
          name: "String"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "MediaJobError"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      progress: {
        serializedName: "progress",
        required: true,
        type: {
          name: "Number"
        }
      },
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "Enum",
          allowedValues: [
            "Canceled",
            "Canceling",
            "Error",
            "Finished",
            "Processing",
            "Queued",
            "Scheduled"
          ]
        }
      }
    }
  }
};

export const MediaJobOutputAsset: coreHttp.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputAsset",
  type: {
    name: "Composite",
    className: "MediaJobOutputAsset",
    uberParent: "MediaJobOutput",
    polymorphicDiscriminator: MediaJobOutput.type.polymorphicDiscriminator,
    modelProperties: {
      ...MediaJobOutput.type.modelProperties,
      assetName: {
        serializedName: "assetName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaJobOutputProgressEventData: coreHttp.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputProgress",
  type: {
    name: "Composite",
    className: "MediaJobOutputProgressEventData",
    modelProperties: {
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      progress: {
        serializedName: "progress",
        type: {
          name: "Number"
        }
      },
      jobCorrelationData: {
        serializedName: "jobCorrelationData",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const MediaJobOutputStateChangeEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaJobOutputStateChangeEventData",
    modelProperties: {
      previousState: {
        serializedName: "previousState",
        readOnly: true,
        type: {
          name: "Enum",
          allowedValues: [
            "Canceled",
            "Canceling",
            "Error",
            "Finished",
            "Processing",
            "Queued",
            "Scheduled"
          ]
        }
      },
      output: {
        serializedName: "output",
        type: {
          name: "Composite",
          className: "MediaJobOutput"
        }
      },
      jobCorrelationData: {
        serializedName: "jobCorrelationData",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const MediaJobScheduledEventData: coreHttp.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobScheduled",
  type: {
    name: "Composite",
    className: "MediaJobScheduledEventData",
    modelProperties: {
      ...MediaJobStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobProcessingEventData: coreHttp.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobProcessing",
  type: {
    name: "Composite",
    className: "MediaJobProcessingEventData",
    modelProperties: {
      ...MediaJobStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobCancelingEventData: coreHttp.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobCanceling",
  type: {
    name: "Composite",
    className: "MediaJobCancelingEventData",
    modelProperties: {
      ...MediaJobStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobFinishedEventData: coreHttp.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobFinished",
  type: {
    name: "Composite",
    className: "MediaJobFinishedEventData",
    modelProperties: {
      ...MediaJobStateChangeEventData.type.modelProperties,
      outputs: {
        serializedName: "outputs",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "MediaJobOutput" } }
        }
      }
    }
  }
};

export const MediaJobCanceledEventData: coreHttp.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobCanceled",
  type: {
    name: "Composite",
    className: "MediaJobCanceledEventData",
    modelProperties: {
      ...MediaJobStateChangeEventData.type.modelProperties,
      outputs: {
        serializedName: "outputs",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "MediaJobOutput" } }
        }
      }
    }
  }
};

export const MediaJobErroredEventData: coreHttp.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobErrored",
  type: {
    name: "Composite",
    className: "MediaJobErroredEventData",
    modelProperties: {
      ...MediaJobStateChangeEventData.type.modelProperties,
      outputs: {
        serializedName: "outputs",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "MediaJobOutput" } }
        }
      }
    }
  }
};

export const MediaJobOutputCanceledEventData: coreHttp.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputCanceled",
  type: {
    name: "Composite",
    className: "MediaJobOutputCanceledEventData",
    modelProperties: {
      ...MediaJobOutputStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobOutputCancelingEventData: coreHttp.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputCanceling",
  type: {
    name: "Composite",
    className: "MediaJobOutputCancelingEventData",
    modelProperties: {
      ...MediaJobOutputStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobOutputErroredEventData: coreHttp.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputErrored",
  type: {
    name: "Composite",
    className: "MediaJobOutputErroredEventData",
    modelProperties: {
      ...MediaJobOutputStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobOutputFinishedEventData: coreHttp.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputFinished",
  type: {
    name: "Composite",
    className: "MediaJobOutputFinishedEventData",
    modelProperties: {
      ...MediaJobOutputStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobOutputProcessingEventData: coreHttp.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputProcessing",
  type: {
    name: "Composite",
    className: "MediaJobOutputProcessingEventData",
    modelProperties: {
      ...MediaJobOutputStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobOutputScheduledEventData: coreHttp.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputScheduled",
  type: {
    name: "Composite",
    className: "MediaJobOutputScheduledEventData",
    modelProperties: {
      ...MediaJobOutputStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaLiveEventEncoderConnectedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaLiveEventEncoderConnectedEventData",
    modelProperties: {
      ingestUrl: {
        serializedName: "ingestUrl",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      streamId: {
        serializedName: "streamId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      encoderIp: {
        serializedName: "encoderIp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      encoderPort: {
        serializedName: "encoderPort",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventConnectionRejectedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaLiveEventConnectionRejectedEventData",
    modelProperties: {
      ingestUrl: {
        serializedName: "ingestUrl",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      streamId: {
        serializedName: "streamId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      encoderIp: {
        serializedName: "encoderIp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      encoderPort: {
        serializedName: "encoderPort",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resultCode: {
        serializedName: "resultCode",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventEncoderDisconnectedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaLiveEventEncoderDisconnectedEventData",
    modelProperties: {
      ingestUrl: {
        serializedName: "ingestUrl",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      streamId: {
        serializedName: "streamId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      encoderIp: {
        serializedName: "encoderIp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      encoderPort: {
        serializedName: "encoderPort",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resultCode: {
        serializedName: "resultCode",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventIncomingStreamReceivedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaLiveEventIncomingStreamReceivedEventData",
    modelProperties: {
      ingestUrl: {
        serializedName: "ingestUrl",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      trackType: {
        serializedName: "trackType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      trackName: {
        serializedName: "trackName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      bitrate: {
        serializedName: "bitrate",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      encoderIp: {
        serializedName: "encoderIp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      encoderPort: {
        serializedName: "encoderPort",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      duration: {
        serializedName: "duration",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      timescale: {
        serializedName: "timescale",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventIncomingStreamsOutOfSyncEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaLiveEventIncomingStreamsOutOfSyncEventData",
    modelProperties: {
      minLastTimestamp: {
        serializedName: "minLastTimestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      typeOfStreamWithMinLastTimestamp: {
        serializedName: "typeOfStreamWithMinLastTimestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      maxLastTimestamp: {
        serializedName: "maxLastTimestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      typeOfStreamWithMaxLastTimestamp: {
        serializedName: "typeOfStreamWithMaxLastTimestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      timescaleOfMinLastTimestamp: {
        serializedName: "timescaleOfMinLastTimestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      timescaleOfMaxLastTimestamp: {
        serializedName: "timescaleOfMaxLastTimestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventIncomingVideoStreamsOutOfSyncEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaLiveEventIncomingVideoStreamsOutOfSyncEventData",
    modelProperties: {
      firstTimestamp: {
        serializedName: "firstTimestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      firstDuration: {
        serializedName: "firstDuration",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      secondTimestamp: {
        serializedName: "secondTimestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      secondDuration: {
        serializedName: "secondDuration",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      timescale: {
        serializedName: "timescale",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventIncomingDataChunkDroppedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaLiveEventIncomingDataChunkDroppedEventData",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      trackType: {
        serializedName: "trackType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      bitrate: {
        serializedName: "bitrate",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      timescale: {
        serializedName: "timescale",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resultCode: {
        serializedName: "resultCode",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      trackName: {
        serializedName: "trackName",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventIngestHeartbeatEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaLiveEventIngestHeartbeatEventData",
    modelProperties: {
      trackType: {
        serializedName: "trackType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      trackName: {
        serializedName: "trackName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      bitrate: {
        serializedName: "bitrate",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      incomingBitrate: {
        serializedName: "incomingBitrate",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      lastTimestamp: {
        serializedName: "lastTimestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      timescale: {
        serializedName: "timescale",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      overlapCount: {
        serializedName: "overlapCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      discontinuityCount: {
        serializedName: "discontinuityCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      nonincreasingCount: {
        serializedName: "nonincreasingCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      unexpectedBitrate: {
        serializedName: "unexpectedBitrate",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      state: {
        serializedName: "state",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      healthy: {
        serializedName: "healthy",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const MediaLiveEventTrackDiscontinuityDetectedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaLiveEventTrackDiscontinuityDetectedEventData",
    modelProperties: {
      trackType: {
        serializedName: "trackType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      trackName: {
        serializedName: "trackName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      bitrate: {
        serializedName: "bitrate",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      previousTimestamp: {
        serializedName: "previousTimestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      newTimestamp: {
        serializedName: "newTimestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      timescale: {
        serializedName: "timescale",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      discontinuityGap: {
        serializedName: "discontinuityGap",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MapsGeofenceEventProperties: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MapsGeofenceEventProperties",
    modelProperties: {
      expiredGeofenceGeometryId: {
        serializedName: "expiredGeofenceGeometryId",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      geometries: {
        serializedName: "geometries",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "MapsGeofenceGeometry" }
          }
        }
      },
      invalidPeriodGeofenceGeometryId: {
        serializedName: "invalidPeriodGeofenceGeometryId",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      isEventPublished: {
        serializedName: "isEventPublished",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const MapsGeofenceGeometry: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MapsGeofenceGeometry",
    modelProperties: {
      deviceId: {
        serializedName: "deviceId",
        type: {
          name: "String"
        }
      },
      distance: {
        serializedName: "distance",
        type: {
          name: "Number"
        }
      },
      geometryId: {
        serializedName: "geometryId",
        type: {
          name: "String"
        }
      },
      nearestLat: {
        serializedName: "nearestLat",
        type: {
          name: "Number"
        }
      },
      nearestLon: {
        serializedName: "nearestLon",
        type: {
          name: "Number"
        }
      },
      udId: {
        serializedName: "udId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MapsGeofenceEnteredEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MapsGeofenceEnteredEventData",
    modelProperties: {
      ...MapsGeofenceEventProperties.type.modelProperties
    }
  }
};

export const MapsGeofenceExitedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MapsGeofenceExitedEventData",
    modelProperties: {
      ...MapsGeofenceEventProperties.type.modelProperties
    }
  }
};

export const MapsGeofenceResultEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MapsGeofenceResultEventData",
    modelProperties: {
      ...MapsGeofenceEventProperties.type.modelProperties
    }
  }
};

export const AppConfigurationKeyValueModifiedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppConfigurationKeyValueModifiedEventData",
    modelProperties: {
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppConfigurationKeyValueDeletedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppConfigurationKeyValueDeletedEventData",
    modelProperties: {
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SignalRServiceClientConnectionConnectedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SignalRServiceClientConnectionConnectedEventData",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      hubName: {
        serializedName: "hubName",
        type: {
          name: "String"
        }
      },
      connectionId: {
        serializedName: "connectionId",
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "userId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SignalRServiceClientConnectionDisconnectedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SignalRServiceClientConnectionDisconnectedEventData",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      hubName: {
        serializedName: "hubName",
        type: {
          name: "String"
        }
      },
      connectionId: {
        serializedName: "connectionId",
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "userId",
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const KeyVaultCertificateNewVersionCreatedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultCertificateNewVersionCreatedEventData",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "vaultName",
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "objectType",
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "objectName",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "nbf",
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "exp",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const KeyVaultCertificateNearExpiryEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultCertificateNearExpiryEventData",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "vaultName",
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "objectType",
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "objectName",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "nbf",
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "exp",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const KeyVaultCertificateExpiredEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultCertificateExpiredEventData",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "vaultName",
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "objectType",
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "objectName",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "nbf",
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "exp",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const KeyVaultKeyNewVersionCreatedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultKeyNewVersionCreatedEventData",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "vaultName",
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "objectType",
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "objectName",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "nbf",
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "exp",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const KeyVaultKeyNearExpiryEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultKeyNearExpiryEventData",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "vaultName",
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "objectType",
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "objectName",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "nbf",
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "exp",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const KeyVaultKeyExpiredEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultKeyExpiredEventData",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "vaultName",
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "objectType",
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "objectName",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "nbf",
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "exp",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const KeyVaultSecretNewVersionCreatedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultSecretNewVersionCreatedEventData",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "vaultName",
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "objectType",
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "objectName",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "nbf",
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "exp",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const KeyVaultSecretNearExpiryEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultSecretNearExpiryEventData",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "vaultName",
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "objectType",
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "objectName",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "nbf",
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "exp",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const KeyVaultSecretExpiredEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultSecretExpiredEventData",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "vaultName",
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "objectType",
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "objectName",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "nbf",
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "exp",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const MachineLearningServicesModelRegisteredEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachineLearningServicesModelRegisteredEventData",
    modelProperties: {
      modelName: {
        serializedName: "modelName",
        type: {
          name: "String"
        }
      },
      modelVersion: {
        serializedName: "modelVersion",
        type: {
          name: "String"
        }
      },
      modelTags: {
        serializedName: "modelTags",
        type: {
          name: "any"
        }
      },
      modelProperties: {
        serializedName: "modelProperties",
        type: {
          name: "any"
        }
      }
    }
  }
};

export const MachineLearningServicesModelDeployedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachineLearningServicesModelDeployedEventData",
    modelProperties: {
      serviceName: {
        serializedName: "serviceName",
        type: {
          name: "String"
        }
      },
      serviceComputeType: {
        serializedName: "serviceComputeType",
        type: {
          name: "String"
        }
      },
      modelIds: {
        serializedName: "modelIds",
        type: {
          name: "String"
        }
      },
      serviceTags: {
        serializedName: "serviceTags",
        type: {
          name: "any"
        }
      },
      serviceProperties: {
        serializedName: "serviceProperties",
        type: {
          name: "any"
        }
      }
    }
  }
};

export const MachineLearningServicesRunCompletedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachineLearningServicesRunCompletedEventData",
    modelProperties: {
      experimentId: {
        serializedName: "experimentId",
        type: {
          name: "String"
        }
      },
      experimentName: {
        serializedName: "experimentName",
        type: {
          name: "String"
        }
      },
      runId: {
        serializedName: "runId",
        type: {
          name: "String"
        }
      },
      runType: {
        serializedName: "runType",
        type: {
          name: "String"
        }
      },
      runTags: {
        serializedName: "runTags",
        type: {
          name: "any"
        }
      },
      runProperties: {
        serializedName: "runProperties",
        type: {
          name: "any"
        }
      }
    }
  }
};

export const MachineLearningServicesDatasetDriftDetectedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachineLearningServicesDatasetDriftDetectedEventData",
    modelProperties: {
      dataDriftId: {
        serializedName: "dataDriftId",
        type: {
          name: "String"
        }
      },
      dataDriftName: {
        serializedName: "dataDriftName",
        type: {
          name: "String"
        }
      },
      runId: {
        serializedName: "runId",
        type: {
          name: "String"
        }
      },
      baseDatasetId: {
        serializedName: "baseDatasetId",
        type: {
          name: "String"
        }
      },
      targetDatasetId: {
        serializedName: "targetDatasetId",
        type: {
          name: "String"
        }
      },
      driftCoefficient: {
        serializedName: "driftCoefficient",
        type: {
          name: "Number"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const MachineLearningServicesRunStatusChangedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachineLearningServicesRunStatusChangedEventData",
    modelProperties: {
      experimentId: {
        serializedName: "experimentId",
        type: {
          name: "String"
        }
      },
      experimentName: {
        serializedName: "experimentName",
        type: {
          name: "String"
        }
      },
      runId: {
        serializedName: "runId",
        type: {
          name: "String"
        }
      },
      runType: {
        serializedName: "runType",
        type: {
          name: "String"
        }
      },
      runTags: {
        serializedName: "runTags",
        type: {
          name: "any"
        }
      },
      runProperties: {
        serializedName: "runProperties",
        type: {
          name: "any"
        }
      },
      runStatus: {
        serializedName: "runStatus",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RedisPatchingCompletedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RedisPatchingCompletedEventData",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RedisScalingCompletedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RedisScalingCompletedEventData",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RedisExportRDBCompletedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RedisExportRDBCompletedEventData",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RedisImportRDBCompletedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RedisImportRDBCompletedEventData",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebAppUpdatedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebAppUpdatedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppEventTypeDetail: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppEventTypeDetail",
    modelProperties: {
      action: {
        serializedName: "action",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebBackupOperationStartedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebBackupOperationStartedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebBackupOperationCompletedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebBackupOperationCompletedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebBackupOperationFailedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebBackupOperationFailedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebRestoreOperationStartedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebRestoreOperationStartedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebRestoreOperationCompletedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebRestoreOperationCompletedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebRestoreOperationFailedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebRestoreOperationFailedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebSlotSwapStartedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebSlotSwapStartedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebSlotSwapCompletedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebSlotSwapCompletedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebSlotSwapFailedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebSlotSwapFailedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebSlotSwapWithPreviewStartedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebSlotSwapWithPreviewStartedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebSlotSwapWithPreviewCancelledEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebSlotSwapWithPreviewCancelledEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebAppServicePlanUpdatedEventData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebAppServicePlanUpdatedEventData",
    modelProperties: {
      appServicePlanEventTypeDetail: {
        serializedName: "appServicePlanEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppServicePlanEventTypeDetail"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "WebAppServicePlanUpdatedEventDataSku"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppServicePlanEventTypeDetail: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppServicePlanEventTypeDetail",
    modelProperties: {
      stampKind: {
        serializedName: "stampKind",
        type: {
          name: "String"
        }
      },
      action: {
        defaultValue: "Updated",
        isConstant: true,
        serializedName: "action",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebAppServicePlanUpdatedEventDataSku: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebAppServicePlanUpdatedEventDataSku",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "Tier",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "Size",
        type: {
          name: "String"
        }
      },
      family: {
        serializedName: "Family",
        type: {
          name: "String"
        }
      },
      capacity: {
        serializedName: "Capacity",
        type: {
          name: "String"
        }
      }
    }
  }
};

export let discriminators = {
  MediaJobOutput: MediaJobOutput,
  "MediaJobOutput.#Microsoft.Media.JobOutputAsset": MediaJobOutputAsset
};
