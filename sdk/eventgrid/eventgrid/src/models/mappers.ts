/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const EventGridEvent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventGridEvent",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      topic: {
        serializedName: "topic",
        type: {
          name: "String"
        }
      },
      subject: {
        serializedName: "subject",
        required: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        required: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      eventType: {
        serializedName: "eventType",
        required: true,
        type: {
          name: "String"
        }
      },
      eventTime: {
        serializedName: "eventTime",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      metadataVersion: {
        serializedName: "metadataVersion",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      dataVersion: {
        serializedName: "dataVersion",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CloudEvent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudEvent",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "source",
        required: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      dataBase64: {
        serializedName: "data_base64",
        type: {
          name: "ByteArray"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      time: {
        serializedName: "time",
        type: {
          name: "DateTime"
        }
      },
      specversion: {
        serializedName: "specversion",
        required: true,
        type: {
          name: "String"
        }
      },
      dataschema: {
        serializedName: "dataschema",
        type: {
          name: "String"
        }
      },
      datacontenttype: {
        serializedName: "datacontenttype",
        type: {
          name: "String"
        }
      },
      subject: {
        serializedName: "subject",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageBlobCreatedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageBlobCreatedEventData",
    modelProperties: {
      api: {
        serializedName: "api",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "contentType",
        type: {
          name: "String"
        }
      },
      contentLength: {
        serializedName: "contentLength",
        type: {
          name: "Number"
        }
      },
      contentOffset: {
        serializedName: "contentOffset",
        type: {
          name: "Number"
        }
      },
      blobType: {
        serializedName: "blobType",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      sequencer: {
        serializedName: "sequencer",
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "String"
        }
      },
      storageDiagnostics: {
        serializedName: "storageDiagnostics",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const StorageBlobDeletedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageBlobDeletedEventData",
    modelProperties: {
      api: {
        serializedName: "api",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "contentType",
        type: {
          name: "String"
        }
      },
      blobType: {
        serializedName: "blobType",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      sequencer: {
        serializedName: "sequencer",
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "String"
        }
      },
      storageDiagnostics: {
        serializedName: "storageDiagnostics",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const StorageDirectoryCreatedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageDirectoryCreatedEventData",
    modelProperties: {
      api: {
        serializedName: "api",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      sequencer: {
        serializedName: "sequencer",
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "String"
        }
      },
      storageDiagnostics: {
        serializedName: "storageDiagnostics",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const StorageDirectoryDeletedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageDirectoryDeletedEventData",
    modelProperties: {
      api: {
        serializedName: "api",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      recursive: {
        serializedName: "recursive",
        type: {
          name: "Boolean"
        }
      },
      sequencer: {
        serializedName: "sequencer",
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "String"
        }
      },
      storageDiagnostics: {
        serializedName: "storageDiagnostics",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const StorageBlobRenamedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageBlobRenamedEventData",
    modelProperties: {
      api: {
        serializedName: "api",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      sourceUrl: {
        serializedName: "sourceUrl",
        type: {
          name: "String"
        }
      },
      destinationUrl: {
        serializedName: "destinationUrl",
        type: {
          name: "String"
        }
      },
      sequencer: {
        serializedName: "sequencer",
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "String"
        }
      },
      storageDiagnostics: {
        serializedName: "storageDiagnostics",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const StorageDirectoryRenamedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageDirectoryRenamedEventData",
    modelProperties: {
      api: {
        serializedName: "api",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      sourceUrl: {
        serializedName: "sourceUrl",
        type: {
          name: "String"
        }
      },
      destinationUrl: {
        serializedName: "destinationUrl",
        type: {
          name: "String"
        }
      },
      sequencer: {
        serializedName: "sequencer",
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "String"
        }
      },
      storageDiagnostics: {
        serializedName: "storageDiagnostics",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const StorageLifecyclePolicyCompletedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageLifecyclePolicyCompletedEventData",
    modelProperties: {
      scheduleTime: {
        serializedName: "scheduleTime",
        type: {
          name: "String"
        }
      },
      deleteSummary: {
        serializedName: "deleteSummary",
        type: {
          name: "Composite",
          className: "StorageLifecyclePolicyActionSummaryDetail"
        }
      },
      tierToCoolSummary: {
        serializedName: "tierToCoolSummary",
        type: {
          name: "Composite",
          className: "StorageLifecyclePolicyActionSummaryDetail"
        }
      },
      tierToArchiveSummary: {
        serializedName: "tierToArchiveSummary",
        type: {
          name: "Composite",
          className: "StorageLifecyclePolicyActionSummaryDetail"
        }
      }
    }
  }
};

export const StorageLifecyclePolicyActionSummaryDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageLifecyclePolicyActionSummaryDetail",
    modelProperties: {
      totalObjectsCount: {
        serializedName: "totalObjectsCount",
        type: {
          name: "Number"
        }
      },
      successCount: {
        serializedName: "successCount",
        type: {
          name: "Number"
        }
      },
      errorList: {
        serializedName: "errorList",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageBlobTierChangedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageBlobTierChangedEventData",
    modelProperties: {
      api: {
        serializedName: "api",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "contentType",
        type: {
          name: "String"
        }
      },
      contentLength: {
        serializedName: "contentLength",
        type: {
          name: "Number"
        }
      },
      blobType: {
        serializedName: "blobType",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      sequencer: {
        serializedName: "sequencer",
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "String"
        }
      },
      storageDiagnostics: {
        serializedName: "storageDiagnostics",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const StorageAsyncOperationInitiatedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageAsyncOperationInitiatedEventData",
    modelProperties: {
      api: {
        serializedName: "api",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "contentType",
        type: {
          name: "String"
        }
      },
      contentLength: {
        serializedName: "contentLength",
        type: {
          name: "Number"
        }
      },
      blobType: {
        serializedName: "blobType",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      sequencer: {
        serializedName: "sequencer",
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "String"
        }
      },
      storageDiagnostics: {
        serializedName: "storageDiagnostics",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const StorageBlobInventoryPolicyCompletedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageBlobInventoryPolicyCompletedEventData",
    modelProperties: {
      scheduleDateTime: {
        serializedName: "scheduleDateTime",
        type: {
          name: "DateTime"
        }
      },
      accountName: {
        serializedName: "accountName",
        type: {
          name: "String"
        }
      },
      ruleName: {
        serializedName: "ruleName",
        type: {
          name: "String"
        }
      },
      policyRunStatus: {
        serializedName: "policyRunStatus",
        type: {
          name: "String"
        }
      },
      policyRunStatusMessage: {
        serializedName: "policyRunStatusMessage",
        type: {
          name: "String"
        }
      },
      policyRunId: {
        serializedName: "policyRunId",
        type: {
          name: "String"
        }
      },
      manifestBlobUrl: {
        serializedName: "manifestBlobUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventHubCaptureFileCreatedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventHubCaptureFileCreatedEventData",
    modelProperties: {
      fileurl: {
        serializedName: "fileurl",
        type: {
          name: "String"
        }
      },
      fileType: {
        serializedName: "fileType",
        type: {
          name: "String"
        }
      },
      partitionId: {
        serializedName: "partitionId",
        type: {
          name: "String"
        }
      },
      sizeInBytes: {
        serializedName: "sizeInBytes",
        type: {
          name: "Number"
        }
      },
      eventCount: {
        serializedName: "eventCount",
        type: {
          name: "Number"
        }
      },
      firstSequenceNumber: {
        serializedName: "firstSequenceNumber",
        type: {
          name: "Number"
        }
      },
      lastSequenceNumber: {
        serializedName: "lastSequenceNumber",
        type: {
          name: "Number"
        }
      },
      firstEnqueueTime: {
        serializedName: "firstEnqueueTime",
        type: {
          name: "DateTime"
        }
      },
      lastEnqueueTime: {
        serializedName: "lastEnqueueTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ResourceWriteSuccessData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceWriteSuccessData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceWriteFailureData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceWriteFailureData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceWriteCancelData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceWriteCancelData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceDeleteSuccessData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceDeleteSuccessData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceDeleteFailureData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceDeleteFailureData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceDeleteCancelData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceDeleteCancelData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceActionSuccessData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceActionSuccessData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceActionFailureData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceActionFailureData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceActionCancelData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceActionCancelData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubscriptionValidationEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubscriptionValidationEventData",
    modelProperties: {
      validationCode: {
        serializedName: "validationCode",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      validationUrl: {
        serializedName: "validationUrl",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubscriptionValidationResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubscriptionValidationResponse",
    modelProperties: {
      validationResponse: {
        serializedName: "validationResponse",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubscriptionDeletedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubscriptionDeletedEventData",
    modelProperties: {
      eventSubscriptionId: {
        serializedName: "eventSubscriptionId",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceLifeCycleEventProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceLifeCycleEventProperties",
    modelProperties: {
      deviceId: {
        serializedName: "deviceId",
        type: {
          name: "String"
        }
      },
      hubName: {
        serializedName: "hubName",
        type: {
          name: "String"
        }
      },
      twin: {
        serializedName: "twin",
        type: {
          name: "Composite",
          className: "DeviceTwinInfo"
        }
      }
    }
  }
};

export const DeviceTwinInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceTwinInfo",
    modelProperties: {
      authenticationType: {
        serializedName: "authenticationType",
        type: {
          name: "String"
        }
      },
      cloudToDeviceMessageCount: {
        serializedName: "cloudToDeviceMessageCount",
        type: {
          name: "Number"
        }
      },
      connectionState: {
        serializedName: "connectionState",
        type: {
          name: "String"
        }
      },
      deviceId: {
        serializedName: "deviceId",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      lastActivityTime: {
        serializedName: "lastActivityTime",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "DeviceTwinInfoProperties"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      statusUpdateTime: {
        serializedName: "statusUpdateTime",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "Number"
        }
      },
      x509Thumbprint: {
        serializedName: "x509Thumbprint",
        type: {
          name: "Composite",
          className: "DeviceTwinInfoX509Thumbprint"
        }
      }
    }
  }
};

export const DeviceTwinInfoProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceTwinInfoProperties",
    modelProperties: {
      desired: {
        serializedName: "desired",
        type: {
          name: "Composite",
          className: "DeviceTwinProperties"
        }
      },
      reported: {
        serializedName: "reported",
        type: {
          name: "Composite",
          className: "DeviceTwinProperties"
        }
      }
    }
  }
};

export const DeviceTwinProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceTwinProperties",
    modelProperties: {
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "DeviceTwinMetadata"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DeviceTwinMetadata: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceTwinMetadata",
    modelProperties: {
      lastUpdated: {
        serializedName: "lastUpdated",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceTwinInfoX509Thumbprint: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceTwinInfoX509Thumbprint",
    modelProperties: {
      primaryThumbprint: {
        serializedName: "primaryThumbprint",
        type: {
          name: "String"
        }
      },
      secondaryThumbprint: {
        serializedName: "secondaryThumbprint",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceConnectionStateEventProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceConnectionStateEventProperties",
    modelProperties: {
      deviceId: {
        serializedName: "deviceId",
        type: {
          name: "String"
        }
      },
      moduleId: {
        serializedName: "moduleId",
        type: {
          name: "String"
        }
      },
      hubName: {
        serializedName: "hubName",
        type: {
          name: "String"
        }
      },
      deviceConnectionStateEventInfo: {
        serializedName: "deviceConnectionStateEventInfo",
        type: {
          name: "Composite",
          className: "DeviceConnectionStateEventInfo"
        }
      }
    }
  }
};

export const DeviceConnectionStateEventInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceConnectionStateEventInfo",
    modelProperties: {
      sequenceNumber: {
        serializedName: "sequenceNumber",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceTelemetryEventProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeviceTelemetryEventProperties",
    modelProperties: {
      body: {
        serializedName: "body",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      systemProperties: {
        serializedName: "systemProperties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const ContainerRegistryEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryEventData",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      action: {
        serializedName: "action",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "Composite",
          className: "ContainerRegistryEventTarget"
        }
      },
      request: {
        serializedName: "request",
        type: {
          name: "Composite",
          className: "ContainerRegistryEventRequest"
        }
      },
      actor: {
        serializedName: "actor",
        type: {
          name: "Composite",
          className: "ContainerRegistryEventActor"
        }
      },
      source: {
        serializedName: "source",
        type: {
          name: "Composite",
          className: "ContainerRegistryEventSource"
        }
      },
      connectedRegistry: {
        serializedName: "connectedRegistry",
        type: {
          name: "Composite",
          className: "ContainerRegistryEventConnectedRegistry"
        }
      }
    }
  }
};

export const ContainerRegistryEventTarget: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryEventTarget",
    modelProperties: {
      mediaType: {
        serializedName: "mediaType",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      digest: {
        serializedName: "digest",
        type: {
          name: "String"
        }
      },
      length: {
        serializedName: "length",
        type: {
          name: "Number"
        }
      },
      repository: {
        serializedName: "repository",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      tag: {
        serializedName: "tag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ContainerRegistryEventRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryEventRequest",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      addr: {
        serializedName: "addr",
        type: {
          name: "String"
        }
      },
      host: {
        serializedName: "host",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      useragent: {
        serializedName: "useragent",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ContainerRegistryEventActor: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryEventActor",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ContainerRegistryEventSource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryEventSource",
    modelProperties: {
      addr: {
        serializedName: "addr",
        type: {
          name: "String"
        }
      },
      instanceID: {
        serializedName: "instanceID",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ContainerRegistryEventConnectedRegistry: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryEventConnectedRegistry",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ContainerRegistryArtifactEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryArtifactEventData",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      action: {
        serializedName: "action",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "Composite",
          className: "ContainerRegistryArtifactEventTarget"
        }
      },
      connectedRegistry: {
        serializedName: "connectedRegistry",
        type: {
          name: "Composite",
          className: "ContainerRegistryEventConnectedRegistry"
        }
      }
    }
  }
};

export const ContainerRegistryArtifactEventTarget: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryArtifactEventTarget",
    modelProperties: {
      mediaType: {
        serializedName: "mediaType",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      digest: {
        serializedName: "digest",
        type: {
          name: "String"
        }
      },
      repository: {
        serializedName: "repository",
        type: {
          name: "String"
        }
      },
      tag: {
        serializedName: "tag",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceBusActiveMessagesAvailableWithNoListenersEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceBusActiveMessagesAvailableWithNoListenersEventData",
    modelProperties: {
      namespaceName: {
        serializedName: "namespaceName",
        type: {
          name: "String"
        }
      },
      requestUri: {
        serializedName: "requestUri",
        type: {
          name: "String"
        }
      },
      entityType: {
        serializedName: "entityType",
        type: {
          name: "String"
        }
      },
      queueName: {
        serializedName: "queueName",
        type: {
          name: "String"
        }
      },
      topicName: {
        serializedName: "topicName",
        type: {
          name: "String"
        }
      },
      subscriptionName: {
        serializedName: "subscriptionName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceBusDeadletterMessagesAvailableWithNoListenersEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceBusDeadletterMessagesAvailableWithNoListenersEventData",
    modelProperties: {
      namespaceName: {
        serializedName: "namespaceName",
        type: {
          name: "String"
        }
      },
      requestUri: {
        serializedName: "requestUri",
        type: {
          name: "String"
        }
      },
      entityType: {
        serializedName: "entityType",
        type: {
          name: "String"
        }
      },
      queueName: {
        serializedName: "queueName",
        type: {
          name: "String"
        }
      },
      topicName: {
        serializedName: "topicName",
        type: {
          name: "String"
        }
      },
      subscriptionName: {
        serializedName: "subscriptionName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceBusActiveMessagesAvailablePeriodicNotificationsEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ServiceBusActiveMessagesAvailablePeriodicNotificationsEventData",
    modelProperties: {
      namespaceName: {
        serializedName: "namespaceName",
        type: {
          name: "String"
        }
      },
      requestUri: {
        serializedName: "requestUri",
        type: {
          name: "String"
        }
      },
      entityType: {
        serializedName: "entityType",
        type: {
          name: "String"
        }
      },
      queueName: {
        serializedName: "queueName",
        type: {
          name: "String"
        }
      },
      topicName: {
        serializedName: "topicName",
        type: {
          name: "String"
        }
      },
      subscriptionName: {
        serializedName: "subscriptionName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceBusDeadletterMessagesAvailablePeriodicNotificationsEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "ServiceBusDeadletterMessagesAvailablePeriodicNotificationsEventData",
    modelProperties: {
      namespaceName: {
        serializedName: "namespaceName",
        type: {
          name: "String"
        }
      },
      requestUri: {
        serializedName: "requestUri",
        type: {
          name: "String"
        }
      },
      entityType: {
        serializedName: "entityType",
        type: {
          name: "String"
        }
      },
      queueName: {
        serializedName: "queueName",
        type: {
          name: "String"
        }
      },
      topicName: {
        serializedName: "topicName",
        type: {
          name: "String"
        }
      },
      subscriptionName: {
        serializedName: "subscriptionName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaJobStateChangeEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaJobStateChangeEventData",
    modelProperties: {
      previousState: {
        serializedName: "previousState",
        readOnly: true,
        type: {
          name: "Enum",
          allowedValues: [
            "Canceled",
            "Canceling",
            "Error",
            "Finished",
            "Processing",
            "Queued",
            "Scheduled"
          ]
        }
      },
      state: {
        serializedName: "state",
        readOnly: true,
        type: {
          name: "Enum",
          allowedValues: [
            "Canceled",
            "Canceling",
            "Error",
            "Finished",
            "Processing",
            "Queued",
            "Scheduled"
          ]
        }
      },
      correlationData: {
        serializedName: "correlationData",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const MediaJobError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaJobError",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "Enum",
          allowedValues: [
            "ServiceError",
            "ServiceTransientError",
            "DownloadNotAccessible",
            "DownloadTransientError",
            "UploadNotAccessible",
            "UploadTransientError",
            "ConfigurationUnsupported",
            "ContentMalformed",
            "ContentUnsupported"
          ]
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      category: {
        serializedName: "category",
        readOnly: true,
        type: {
          name: "Enum",
          allowedValues: [
            "Service",
            "Download",
            "Upload",
            "Configuration",
            "Content"
          ]
        }
      },
      retry: {
        serializedName: "retry",
        readOnly: true,
        type: {
          name: "Enum",
          allowedValues: ["DoNotRetry", "MayRetry"]
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MediaJobErrorDetail"
            }
          }
        }
      }
    }
  }
};

export const MediaJobErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaJobErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaJobOutput: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaJobOutput",
    uberParent: "MediaJobOutput",
    polymorphicDiscriminator: {
      serializedName: "@odata\\.type",
      clientName: "odataType"
    },
    modelProperties: {
      odataType: {
        serializedName: "@odata\\.type",
        type: {
          name: "String"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "MediaJobError"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      progress: {
        serializedName: "progress",
        required: true,
        type: {
          name: "Number"
        }
      },
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "Enum",
          allowedValues: [
            "Canceled",
            "Canceling",
            "Error",
            "Finished",
            "Processing",
            "Queued",
            "Scheduled"
          ]
        }
      }
    }
  }
};

export const MediaJobOutputProgressEventData: coreClient.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputProgress",
  type: {
    name: "Composite",
    className: "MediaJobOutputProgressEventData",
    modelProperties: {
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      progress: {
        serializedName: "progress",
        type: {
          name: "Number"
        }
      },
      jobCorrelationData: {
        serializedName: "jobCorrelationData",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const MediaJobOutputStateChangeEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaJobOutputStateChangeEventData",
    modelProperties: {
      previousState: {
        serializedName: "previousState",
        readOnly: true,
        type: {
          name: "Enum",
          allowedValues: [
            "Canceled",
            "Canceling",
            "Error",
            "Finished",
            "Processing",
            "Queued",
            "Scheduled"
          ]
        }
      },
      output: {
        serializedName: "output",
        type: {
          name: "Composite",
          className: "MediaJobOutput"
        }
      },
      jobCorrelationData: {
        serializedName: "jobCorrelationData",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const MediaLiveEventEncoderConnectedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaLiveEventEncoderConnectedEventData",
    modelProperties: {
      ingestUrl: {
        serializedName: "ingestUrl",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      streamId: {
        serializedName: "streamId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      encoderIp: {
        serializedName: "encoderIp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      encoderPort: {
        serializedName: "encoderPort",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventConnectionRejectedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaLiveEventConnectionRejectedEventData",
    modelProperties: {
      ingestUrl: {
        serializedName: "ingestUrl",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      streamId: {
        serializedName: "streamId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      encoderIp: {
        serializedName: "encoderIp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      encoderPort: {
        serializedName: "encoderPort",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resultCode: {
        serializedName: "resultCode",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventEncoderDisconnectedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaLiveEventEncoderDisconnectedEventData",
    modelProperties: {
      ingestUrl: {
        serializedName: "ingestUrl",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      streamId: {
        serializedName: "streamId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      encoderIp: {
        serializedName: "encoderIp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      encoderPort: {
        serializedName: "encoderPort",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resultCode: {
        serializedName: "resultCode",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventIncomingStreamReceivedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaLiveEventIncomingStreamReceivedEventData",
    modelProperties: {
      ingestUrl: {
        serializedName: "ingestUrl",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      trackType: {
        serializedName: "trackType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      trackName: {
        serializedName: "trackName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      bitrate: {
        serializedName: "bitrate",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      encoderIp: {
        serializedName: "encoderIp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      encoderPort: {
        serializedName: "encoderPort",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      duration: {
        serializedName: "duration",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      timescale: {
        serializedName: "timescale",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventIncomingStreamsOutOfSyncEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaLiveEventIncomingStreamsOutOfSyncEventData",
    modelProperties: {
      minLastTimestamp: {
        serializedName: "minLastTimestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      typeOfStreamWithMinLastTimestamp: {
        serializedName: "typeOfStreamWithMinLastTimestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      maxLastTimestamp: {
        serializedName: "maxLastTimestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      typeOfStreamWithMaxLastTimestamp: {
        serializedName: "typeOfStreamWithMaxLastTimestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      timescaleOfMinLastTimestamp: {
        serializedName: "timescaleOfMinLastTimestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      timescaleOfMaxLastTimestamp: {
        serializedName: "timescaleOfMaxLastTimestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventIncomingVideoStreamsOutOfSyncEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaLiveEventIncomingVideoStreamsOutOfSyncEventData",
    modelProperties: {
      firstTimestamp: {
        serializedName: "firstTimestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      firstDuration: {
        serializedName: "firstDuration",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      secondTimestamp: {
        serializedName: "secondTimestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      secondDuration: {
        serializedName: "secondDuration",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      timescale: {
        serializedName: "timescale",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventIncomingDataChunkDroppedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaLiveEventIncomingDataChunkDroppedEventData",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      trackType: {
        serializedName: "trackType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      bitrate: {
        serializedName: "bitrate",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      timescale: {
        serializedName: "timescale",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resultCode: {
        serializedName: "resultCode",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      trackName: {
        serializedName: "trackName",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventIngestHeartbeatEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaLiveEventIngestHeartbeatEventData",
    modelProperties: {
      trackType: {
        serializedName: "trackType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      trackName: {
        serializedName: "trackName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      transcriptionLanguage: {
        serializedName: "transcriptionLanguage",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      transcriptionState: {
        serializedName: "transcriptionState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      bitrate: {
        serializedName: "bitrate",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      incomingBitrate: {
        serializedName: "incomingBitrate",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      ingestDriftValue: {
        serializedName: "ingestDriftValue",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      lastFragmentArrivalTime: {
        serializedName: "lastFragmentArrivalTime",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      lastTimestamp: {
        serializedName: "lastTimestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      timescale: {
        serializedName: "timescale",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      overlapCount: {
        serializedName: "overlapCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      discontinuityCount: {
        serializedName: "discontinuityCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      nonincreasingCount: {
        serializedName: "nonincreasingCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      unexpectedBitrate: {
        serializedName: "unexpectedBitrate",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      state: {
        serializedName: "state",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      healthy: {
        serializedName: "healthy",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const MediaLiveEventTrackDiscontinuityDetectedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaLiveEventTrackDiscontinuityDetectedEventData",
    modelProperties: {
      trackType: {
        serializedName: "trackType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      trackName: {
        serializedName: "trackName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      bitrate: {
        serializedName: "bitrate",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      previousTimestamp: {
        serializedName: "previousTimestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      newTimestamp: {
        serializedName: "newTimestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      timescale: {
        serializedName: "timescale",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      discontinuityGap: {
        serializedName: "discontinuityGap",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventChannelArchiveHeartbeatEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaLiveEventChannelArchiveHeartbeatEventData",
    modelProperties: {
      channelLatencyMs: {
        serializedName: "channelLatencyMs",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      latencyResultCode: {
        serializedName: "latencyResultCode",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MapsGeofenceEventProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MapsGeofenceEventProperties",
    modelProperties: {
      expiredGeofenceGeometryId: {
        serializedName: "expiredGeofenceGeometryId",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      geometries: {
        serializedName: "geometries",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MapsGeofenceGeometry"
            }
          }
        }
      },
      invalidPeriodGeofenceGeometryId: {
        serializedName: "invalidPeriodGeofenceGeometryId",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      isEventPublished: {
        serializedName: "isEventPublished",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const MapsGeofenceGeometry: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MapsGeofenceGeometry",
    modelProperties: {
      deviceId: {
        serializedName: "deviceId",
        type: {
          name: "String"
        }
      },
      distance: {
        serializedName: "distance",
        type: {
          name: "Number"
        }
      },
      geometryId: {
        serializedName: "geometryId",
        type: {
          name: "String"
        }
      },
      nearestLat: {
        serializedName: "nearestLat",
        type: {
          name: "Number"
        }
      },
      nearestLon: {
        serializedName: "nearestLon",
        type: {
          name: "Number"
        }
      },
      udId: {
        serializedName: "udId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppConfigurationKeyValueModifiedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppConfigurationKeyValueModifiedEventData",
    modelProperties: {
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      syncToken: {
        serializedName: "syncToken",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppConfigurationKeyValueDeletedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppConfigurationKeyValueDeletedEventData",
    modelProperties: {
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      syncToken: {
        serializedName: "syncToken",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SignalRServiceClientConnectionConnectedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SignalRServiceClientConnectionConnectedEventData",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      hubName: {
        serializedName: "hubName",
        type: {
          name: "String"
        }
      },
      connectionId: {
        serializedName: "connectionId",
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "userId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SignalRServiceClientConnectionDisconnectedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SignalRServiceClientConnectionDisconnectedEventData",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      hubName: {
        serializedName: "hubName",
        type: {
          name: "String"
        }
      },
      connectionId: {
        serializedName: "connectionId",
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "userId",
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const KeyVaultCertificateNewVersionCreatedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultCertificateNewVersionCreatedEventData",
    modelProperties: {
      id: {
        serializedName: "Id",
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "VaultName",
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "ObjectType",
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "ObjectName",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "Version",
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "NBF",
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "EXP",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const KeyVaultCertificateNearExpiryEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultCertificateNearExpiryEventData",
    modelProperties: {
      id: {
        serializedName: "Id",
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "VaultName",
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "ObjectType",
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "ObjectName",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "Version",
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "NBF",
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "EXP",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const KeyVaultCertificateExpiredEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultCertificateExpiredEventData",
    modelProperties: {
      id: {
        serializedName: "Id",
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "VaultName",
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "ObjectType",
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "ObjectName",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "Version",
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "NBF",
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "EXP",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const KeyVaultKeyNewVersionCreatedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultKeyNewVersionCreatedEventData",
    modelProperties: {
      id: {
        serializedName: "Id",
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "VaultName",
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "ObjectType",
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "ObjectName",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "Version",
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "NBF",
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "EXP",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const KeyVaultKeyNearExpiryEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultKeyNearExpiryEventData",
    modelProperties: {
      id: {
        serializedName: "Id",
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "VaultName",
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "ObjectType",
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "ObjectName",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "Version",
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "NBF",
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "EXP",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const KeyVaultKeyExpiredEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultKeyExpiredEventData",
    modelProperties: {
      id: {
        serializedName: "Id",
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "VaultName",
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "ObjectType",
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "ObjectName",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "Version",
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "NBF",
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "EXP",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const KeyVaultSecretNewVersionCreatedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultSecretNewVersionCreatedEventData",
    modelProperties: {
      id: {
        serializedName: "Id",
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "VaultName",
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "ObjectType",
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "ObjectName",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "Version",
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "NBF",
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "EXP",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const KeyVaultSecretNearExpiryEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultSecretNearExpiryEventData",
    modelProperties: {
      id: {
        serializedName: "Id",
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "VaultName",
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "ObjectType",
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "ObjectName",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "Version",
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "NBF",
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "EXP",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const KeyVaultSecretExpiredEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultSecretExpiredEventData",
    modelProperties: {
      id: {
        serializedName: "Id",
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "VaultName",
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "ObjectType",
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "ObjectName",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "Version",
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "NBF",
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "EXP",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const KeyVaultAccessPolicyChangedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultAccessPolicyChangedEventData",
    modelProperties: {
      id: {
        serializedName: "Id",
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "VaultName",
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "ObjectType",
        type: {
          name: "String"
        }
      },
      objectName: {
        serializedName: "ObjectName",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "Version",
        type: {
          name: "String"
        }
      },
      nbf: {
        serializedName: "NBF",
        type: {
          name: "Number"
        }
      },
      exp: {
        serializedName: "EXP",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const MachineLearningServicesModelRegisteredEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachineLearningServicesModelRegisteredEventData",
    modelProperties: {
      modelName: {
        serializedName: "modelName",
        type: {
          name: "String"
        }
      },
      modelVersion: {
        serializedName: "modelVersion",
        type: {
          name: "String"
        }
      },
      modelTags: {
        serializedName: "modelTags",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      modelProperties: {
        serializedName: "modelProperties",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const MachineLearningServicesModelDeployedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachineLearningServicesModelDeployedEventData",
    modelProperties: {
      serviceName: {
        serializedName: "serviceName",
        type: {
          name: "String"
        }
      },
      serviceComputeType: {
        serializedName: "serviceComputeType",
        type: {
          name: "String"
        }
      },
      modelIds: {
        serializedName: "modelIds",
        type: {
          name: "String"
        }
      },
      serviceTags: {
        serializedName: "serviceTags",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      serviceProperties: {
        serializedName: "serviceProperties",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const MachineLearningServicesRunCompletedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachineLearningServicesRunCompletedEventData",
    modelProperties: {
      experimentId: {
        serializedName: "experimentId",
        type: {
          name: "String"
        }
      },
      experimentName: {
        serializedName: "experimentName",
        type: {
          name: "String"
        }
      },
      runId: {
        serializedName: "runId",
        type: {
          name: "String"
        }
      },
      runType: {
        serializedName: "runType",
        type: {
          name: "String"
        }
      },
      runTags: {
        serializedName: "runTags",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      runProperties: {
        serializedName: "runProperties",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const MachineLearningServicesDatasetDriftDetectedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachineLearningServicesDatasetDriftDetectedEventData",
    modelProperties: {
      dataDriftId: {
        serializedName: "dataDriftId",
        type: {
          name: "String"
        }
      },
      dataDriftName: {
        serializedName: "dataDriftName",
        type: {
          name: "String"
        }
      },
      runId: {
        serializedName: "runId",
        type: {
          name: "String"
        }
      },
      baseDatasetId: {
        serializedName: "baseDatasetId",
        type: {
          name: "String"
        }
      },
      targetDatasetId: {
        serializedName: "targetDatasetId",
        type: {
          name: "String"
        }
      },
      driftCoefficient: {
        serializedName: "driftCoefficient",
        type: {
          name: "Number"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const MachineLearningServicesRunStatusChangedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachineLearningServicesRunStatusChangedEventData",
    modelProperties: {
      experimentId: {
        serializedName: "experimentId",
        type: {
          name: "String"
        }
      },
      experimentName: {
        serializedName: "experimentName",
        type: {
          name: "String"
        }
      },
      runId: {
        serializedName: "runId",
        type: {
          name: "String"
        }
      },
      runType: {
        serializedName: "runType",
        type: {
          name: "String"
        }
      },
      runTags: {
        serializedName: "runTags",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      runProperties: {
        serializedName: "runProperties",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      runStatus: {
        serializedName: "runStatus",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RedisPatchingCompletedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RedisPatchingCompletedEventData",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RedisScalingCompletedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RedisScalingCompletedEventData",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RedisExportRDBCompletedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RedisExportRDBCompletedEventData",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RedisImportRDBCompletedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RedisImportRDBCompletedEventData",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebAppUpdatedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebAppUpdatedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppEventTypeDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppEventTypeDetail",
    modelProperties: {
      action: {
        serializedName: "action",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebBackupOperationStartedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebBackupOperationStartedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebBackupOperationCompletedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebBackupOperationCompletedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebBackupOperationFailedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebBackupOperationFailedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebRestoreOperationStartedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebRestoreOperationStartedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebRestoreOperationCompletedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebRestoreOperationCompletedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebRestoreOperationFailedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebRestoreOperationFailedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebSlotSwapStartedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebSlotSwapStartedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebSlotSwapCompletedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebSlotSwapCompletedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebSlotSwapFailedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebSlotSwapFailedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebSlotSwapWithPreviewStartedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebSlotSwapWithPreviewStartedEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebSlotSwapWithPreviewCancelledEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebSlotSwapWithPreviewCancelledEventData",
    modelProperties: {
      appEventTypeDetail: {
        serializedName: "appEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppEventTypeDetail"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebAppServicePlanUpdatedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebAppServicePlanUpdatedEventData",
    modelProperties: {
      appServicePlanEventTypeDetail: {
        serializedName: "appServicePlanEventTypeDetail",
        type: {
          name: "Composite",
          className: "AppServicePlanEventTypeDetail"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "WebAppServicePlanUpdatedEventDataSku"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      correlationRequestId: {
        serializedName: "correlationRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      },
      verb: {
        serializedName: "verb",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppServicePlanEventTypeDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppServicePlanEventTypeDetail",
    modelProperties: {
      stampKind: {
        serializedName: "stampKind",
        type: {
          name: "String"
        }
      },
      action: {
        serializedName: "action",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebAppServicePlanUpdatedEventDataSku: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebAppServicePlanUpdatedEventDataSku",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "Tier",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "Size",
        type: {
          name: "String"
        }
      },
      family: {
        serializedName: "Family",
        type: {
          name: "String"
        }
      },
      capacity: {
        serializedName: "Capacity",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AcsUserDisconnectedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsUserDisconnectedEventData",
    modelProperties: {
      userCommunicationIdentifier: {
        serializedName: "userCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      }
    }
  }
};

export const CommunicationIdentifierModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationIdentifierModel",
    modelProperties: {
      rawId: {
        serializedName: "rawId",
        type: {
          name: "String"
        }
      },
      communicationUser: {
        serializedName: "communicationUser",
        type: {
          name: "Composite",
          className: "CommunicationUserIdentifierModel"
        }
      },
      phoneNumber: {
        serializedName: "phoneNumber",
        type: {
          name: "Composite",
          className: "PhoneNumberIdentifierModel"
        }
      },
      microsoftTeamsUser: {
        serializedName: "microsoftTeamsUser",
        type: {
          name: "Composite",
          className: "MicrosoftTeamsUserIdentifierModel"
        }
      }
    }
  }
};

export const CommunicationUserIdentifierModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationUserIdentifierModel",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PhoneNumberIdentifierModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PhoneNumberIdentifierModel",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MicrosoftTeamsUserIdentifierModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MicrosoftTeamsUserIdentifierModel",
    modelProperties: {
      userId: {
        serializedName: "userId",
        required: true,
        type: {
          name: "String"
        }
      },
      isAnonymous: {
        serializedName: "isAnonymous",
        type: {
          name: "Boolean"
        }
      },
      cloud: {
        serializedName: "cloud",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AcsChatEventBaseProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatEventBaseProperties",
    modelProperties: {
      recipientCommunicationIdentifier: {
        serializedName: "recipientCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      transactionId: {
        serializedName: "transactionId",
        type: {
          name: "String"
        }
      },
      threadId: {
        serializedName: "threadId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AcsChatEventInThreadBaseProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatEventInThreadBaseProperties",
    modelProperties: {
      transactionId: {
        serializedName: "transactionId",
        type: {
          name: "String"
        }
      },
      threadId: {
        serializedName: "threadId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AcsChatThreadParticipantProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatThreadParticipantProperties",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      participantCommunicationIdentifier: {
        serializedName: "participantCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      }
    }
  }
};

export const AcsSmsDeliveryAttemptProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsSmsDeliveryAttemptProperties",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      segmentsSucceeded: {
        serializedName: "segmentsSucceeded",
        type: {
          name: "Number"
        }
      },
      segmentsFailed: {
        serializedName: "segmentsFailed",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AcsSmsEventBaseProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsSmsEventBaseProperties",
    modelProperties: {
      messageId: {
        serializedName: "messageId",
        type: {
          name: "String"
        }
      },
      from: {
        serializedName: "from",
        type: {
          name: "String"
        }
      },
      to: {
        serializedName: "to",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AcsRecordingFileStatusUpdatedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsRecordingFileStatusUpdatedEventData",
    modelProperties: {
      recordingStorageInfo: {
        serializedName: "recordingStorageInfo",
        type: {
          name: "Composite",
          className: "AcsRecordingStorageInfoProperties"
        }
      },
      recordingStartTime: {
        serializedName: "recordingStartTime",
        type: {
          name: "DateTime"
        }
      },
      recordingDurationMs: {
        serializedName: "recordingDurationMs",
        type: {
          name: "Number"
        }
      },
      recordingContentType: {
        serializedName: "recordingContentType",
        type: {
          name: "String"
        }
      },
      recordingChannelType: {
        serializedName: "recordingChannelType",
        type: {
          name: "String"
        }
      },
      recordingFormatType: {
        serializedName: "recordingFormatType",
        type: {
          name: "String"
        }
      },
      sessionEndReason: {
        serializedName: "sessionEndReason",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AcsRecordingStorageInfoProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsRecordingStorageInfoProperties",
    modelProperties: {
      recordingChunks: {
        serializedName: "recordingChunks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AcsRecordingChunkInfoProperties"
            }
          }
        }
      }
    }
  }
};

export const AcsRecordingChunkInfoProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsRecordingChunkInfoProperties",
    modelProperties: {
      documentId: {
        serializedName: "documentId",
        type: {
          name: "String"
        }
      },
      index: {
        serializedName: "index",
        type: {
          name: "Number"
        }
      },
      endReason: {
        serializedName: "endReason",
        type: {
          name: "String"
        }
      },
      metadataLocation: {
        serializedName: "metadataLocation",
        type: {
          name: "String"
        }
      },
      contentLocation: {
        serializedName: "contentLocation",
        type: {
          name: "String"
        }
      },
      deleteLocation: {
        serializedName: "deleteLocation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PolicyInsightsPolicyStateCreatedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PolicyInsightsPolicyStateCreatedEventData",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      policyAssignmentId: {
        serializedName: "policyAssignmentId",
        type: {
          name: "String"
        }
      },
      policyDefinitionId: {
        serializedName: "policyDefinitionId",
        type: {
          name: "String"
        }
      },
      policyDefinitionReferenceId: {
        serializedName: "policyDefinitionReferenceId",
        type: {
          name: "String"
        }
      },
      complianceState: {
        serializedName: "complianceState",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      complianceReasonCode: {
        serializedName: "complianceReasonCode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PolicyInsightsPolicyStateChangedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PolicyInsightsPolicyStateChangedEventData",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      policyAssignmentId: {
        serializedName: "policyAssignmentId",
        type: {
          name: "String"
        }
      },
      policyDefinitionId: {
        serializedName: "policyDefinitionId",
        type: {
          name: "String"
        }
      },
      policyDefinitionReferenceId: {
        serializedName: "policyDefinitionReferenceId",
        type: {
          name: "String"
        }
      },
      complianceState: {
        serializedName: "complianceState",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      complianceReasonCode: {
        serializedName: "complianceReasonCode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PolicyInsightsPolicyStateDeletedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PolicyInsightsPolicyStateDeletedEventData",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      policyAssignmentId: {
        serializedName: "policyAssignmentId",
        type: {
          name: "String"
        }
      },
      policyDefinitionId: {
        serializedName: "policyDefinitionId",
        type: {
          name: "String"
        }
      },
      policyDefinitionReferenceId: {
        serializedName: "policyDefinitionReferenceId",
        type: {
          name: "String"
        }
      },
      complianceState: {
        serializedName: "complianceState",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      complianceReasonCode: {
        serializedName: "complianceReasonCode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ContainerServiceNewKubernetesVersionAvailableEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerServiceNewKubernetesVersionAvailableEventData",
    modelProperties: {
      latestSupportedKubernetesVersion: {
        serializedName: "latestSupportedKubernetesVersion",
        type: {
          name: "String"
        }
      },
      latestStableKubernetesVersion: {
        serializedName: "latestStableKubernetesVersion",
        type: {
          name: "String"
        }
      },
      lowestMinorKubernetesVersion: {
        serializedName: "lowestMinorKubernetesVersion",
        type: {
          name: "String"
        }
      },
      latestPreviewKubernetesVersion: {
        serializedName: "latestPreviewKubernetesVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiManagementUserCreatedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiManagementUserCreatedEventData",
    modelProperties: {
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiManagementUserUpdatedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiManagementUserUpdatedEventData",
    modelProperties: {
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiManagementUserDeletedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiManagementUserDeletedEventData",
    modelProperties: {
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiManagementSubscriptionCreatedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiManagementSubscriptionCreatedEventData",
    modelProperties: {
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiManagementSubscriptionUpdatedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiManagementSubscriptionUpdatedEventData",
    modelProperties: {
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiManagementSubscriptionDeletedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiManagementSubscriptionDeletedEventData",
    modelProperties: {
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiManagementProductCreatedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiManagementProductCreatedEventData",
    modelProperties: {
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiManagementProductUpdatedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiManagementProductUpdatedEventData",
    modelProperties: {
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiManagementProductDeletedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiManagementProductDeletedEventData",
    modelProperties: {
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiManagementApiCreatedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiManagementApiCreatedEventData",
    modelProperties: {
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiManagementApiUpdatedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiManagementApiUpdatedEventData",
    modelProperties: {
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiManagementApiDeletedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiManagementApiDeletedEventData",
    modelProperties: {
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiManagementApiReleaseCreatedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiManagementApiReleaseCreatedEventData",
    modelProperties: {
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiManagementApiReleaseUpdatedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiManagementApiReleaseUpdatedEventData",
    modelProperties: {
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiManagementApiReleaseDeletedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiManagementApiReleaseDeletedEventData",
    modelProperties: {
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IotHubDeviceCreatedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IotHubDeviceCreatedEventData",
    modelProperties: {
      ...DeviceLifeCycleEventProperties.type.modelProperties
    }
  }
};

export const IotHubDeviceDeletedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IotHubDeviceDeletedEventData",
    modelProperties: {
      ...DeviceLifeCycleEventProperties.type.modelProperties
    }
  }
};

export const IotHubDeviceConnectedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IotHubDeviceConnectedEventData",
    modelProperties: {
      ...DeviceConnectionStateEventProperties.type.modelProperties
    }
  }
};

export const IotHubDeviceDisconnectedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IotHubDeviceDisconnectedEventData",
    modelProperties: {
      ...DeviceConnectionStateEventProperties.type.modelProperties
    }
  }
};

export const IotHubDeviceTelemetryEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IotHubDeviceTelemetryEventData",
    modelProperties: {
      ...DeviceTelemetryEventProperties.type.modelProperties
    }
  }
};

export const ContainerRegistryImagePushedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryImagePushedEventData",
    modelProperties: {
      ...ContainerRegistryEventData.type.modelProperties
    }
  }
};

export const ContainerRegistryImageDeletedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryImageDeletedEventData",
    modelProperties: {
      ...ContainerRegistryEventData.type.modelProperties
    }
  }
};

export const ContainerRegistryChartPushedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryChartPushedEventData",
    modelProperties: {
      ...ContainerRegistryArtifactEventData.type.modelProperties
    }
  }
};

export const ContainerRegistryChartDeletedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerRegistryChartDeletedEventData",
    modelProperties: {
      ...ContainerRegistryArtifactEventData.type.modelProperties
    }
  }
};

export const MediaJobScheduledEventData: coreClient.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobScheduled",
  type: {
    name: "Composite",
    className: "MediaJobScheduledEventData",
    modelProperties: {
      ...MediaJobStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobProcessingEventData: coreClient.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobProcessing",
  type: {
    name: "Composite",
    className: "MediaJobProcessingEventData",
    modelProperties: {
      ...MediaJobStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobCancelingEventData: coreClient.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobCanceling",
  type: {
    name: "Composite",
    className: "MediaJobCancelingEventData",
    modelProperties: {
      ...MediaJobStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobFinishedEventData: coreClient.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobFinished",
  type: {
    name: "Composite",
    className: "MediaJobFinishedEventData",
    modelProperties: {
      ...MediaJobStateChangeEventData.type.modelProperties,
      outputs: {
        serializedName: "outputs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MediaJobOutput"
            }
          }
        }
      }
    }
  }
};

export const MediaJobCanceledEventData: coreClient.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobCanceled",
  type: {
    name: "Composite",
    className: "MediaJobCanceledEventData",
    modelProperties: {
      ...MediaJobStateChangeEventData.type.modelProperties,
      outputs: {
        serializedName: "outputs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MediaJobOutput"
            }
          }
        }
      }
    }
  }
};

export const MediaJobErroredEventData: coreClient.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobErrored",
  type: {
    name: "Composite",
    className: "MediaJobErroredEventData",
    modelProperties: {
      ...MediaJobStateChangeEventData.type.modelProperties,
      outputs: {
        serializedName: "outputs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MediaJobOutput"
            }
          }
        }
      }
    }
  }
};

export const MediaJobOutputAsset: coreClient.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputAsset",
  type: {
    name: "Composite",
    className: "MediaJobOutputAsset",
    uberParent: "MediaJobOutput",
    polymorphicDiscriminator: MediaJobOutput.type.polymorphicDiscriminator,
    modelProperties: {
      ...MediaJobOutput.type.modelProperties,
      assetName: {
        serializedName: "assetName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaJobOutputCanceledEventData: coreClient.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputCanceled",
  type: {
    name: "Composite",
    className: "MediaJobOutputCanceledEventData",
    modelProperties: {
      ...MediaJobOutputStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobOutputCancelingEventData: coreClient.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputCanceling",
  type: {
    name: "Composite",
    className: "MediaJobOutputCancelingEventData",
    modelProperties: {
      ...MediaJobOutputStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobOutputErroredEventData: coreClient.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputErrored",
  type: {
    name: "Composite",
    className: "MediaJobOutputErroredEventData",
    modelProperties: {
      ...MediaJobOutputStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobOutputFinishedEventData: coreClient.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputFinished",
  type: {
    name: "Composite",
    className: "MediaJobOutputFinishedEventData",
    modelProperties: {
      ...MediaJobOutputStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobOutputProcessingEventData: coreClient.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputProcessing",
  type: {
    name: "Composite",
    className: "MediaJobOutputProcessingEventData",
    modelProperties: {
      ...MediaJobOutputStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobOutputScheduledEventData: coreClient.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputScheduled",
  type: {
    name: "Composite",
    className: "MediaJobOutputScheduledEventData",
    modelProperties: {
      ...MediaJobOutputStateChangeEventData.type.modelProperties
    }
  }
};

export const MapsGeofenceEnteredEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MapsGeofenceEnteredEventData",
    modelProperties: {
      ...MapsGeofenceEventProperties.type.modelProperties
    }
  }
};

export const MapsGeofenceExitedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MapsGeofenceExitedEventData",
    modelProperties: {
      ...MapsGeofenceEventProperties.type.modelProperties
    }
  }
};

export const MapsGeofenceResultEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MapsGeofenceResultEventData",
    modelProperties: {
      ...MapsGeofenceEventProperties.type.modelProperties
    }
  }
};

export const AcsChatMessageEventBaseProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatMessageEventBaseProperties",
    modelProperties: {
      ...AcsChatEventBaseProperties.type.modelProperties,
      messageId: {
        serializedName: "messageId",
        type: {
          name: "String"
        }
      },
      senderCommunicationIdentifier: {
        serializedName: "senderCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      senderDisplayName: {
        serializedName: "senderDisplayName",
        type: {
          name: "String"
        }
      },
      composeTime: {
        serializedName: "composeTime",
        type: {
          name: "DateTime"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AcsChatThreadEventBaseProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatThreadEventBaseProperties",
    modelProperties: {
      ...AcsChatEventBaseProperties.type.modelProperties,
      createTime: {
        serializedName: "createTime",
        type: {
          name: "DateTime"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AcsChatMessageEventInThreadBaseProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatMessageEventInThreadBaseProperties",
    modelProperties: {
      ...AcsChatEventInThreadBaseProperties.type.modelProperties,
      messageId: {
        serializedName: "messageId",
        type: {
          name: "String"
        }
      },
      senderCommunicationIdentifier: {
        serializedName: "senderCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      senderDisplayName: {
        serializedName: "senderDisplayName",
        type: {
          name: "String"
        }
      },
      composeTime: {
        serializedName: "composeTime",
        type: {
          name: "DateTime"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AcsChatThreadEventInThreadBaseProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatThreadEventInThreadBaseProperties",
    modelProperties: {
      ...AcsChatEventInThreadBaseProperties.type.modelProperties,
      createTime: {
        serializedName: "createTime",
        type: {
          name: "DateTime"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AcsChatParticipantAddedToThreadEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatParticipantAddedToThreadEventData",
    modelProperties: {
      ...AcsChatEventInThreadBaseProperties.type.modelProperties,
      time: {
        serializedName: "time",
        type: {
          name: "DateTime"
        }
      },
      addedByCommunicationIdentifier: {
        serializedName: "addedByCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      participantAdded: {
        serializedName: "participantAdded",
        type: {
          name: "Composite",
          className: "AcsChatThreadParticipantProperties"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AcsChatParticipantRemovedFromThreadEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatParticipantRemovedFromThreadEventData",
    modelProperties: {
      ...AcsChatEventInThreadBaseProperties.type.modelProperties,
      time: {
        serializedName: "time",
        type: {
          name: "DateTime"
        }
      },
      removedByCommunicationIdentifier: {
        serializedName: "removedByCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      participantRemoved: {
        serializedName: "participantRemoved",
        type: {
          name: "Composite",
          className: "AcsChatThreadParticipantProperties"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AcsSmsDeliveryReportReceivedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsSmsDeliveryReportReceivedEventData",
    modelProperties: {
      ...AcsSmsEventBaseProperties.type.modelProperties,
      deliveryStatus: {
        serializedName: "deliveryStatus",
        type: {
          name: "String"
        }
      },
      deliveryStatusDetails: {
        serializedName: "deliveryStatusDetails",
        type: {
          name: "String"
        }
      },
      deliveryAttempts: {
        serializedName: "deliveryAttempts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AcsSmsDeliveryAttemptProperties"
            }
          }
        }
      },
      receivedTimestamp: {
        serializedName: "receivedTimestamp",
        type: {
          name: "DateTime"
        }
      },
      tag: {
        serializedName: "tag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AcsSmsReceivedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsSmsReceivedEventData",
    modelProperties: {
      ...AcsSmsEventBaseProperties.type.modelProperties,
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      receivedTimestamp: {
        serializedName: "receivedTimestamp",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const AcsChatMessageReceivedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatMessageReceivedEventData",
    modelProperties: {
      ...AcsChatMessageEventBaseProperties.type.modelProperties,
      messageBody: {
        serializedName: "messageBody",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const AcsChatMessageEditedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatMessageEditedEventData",
    modelProperties: {
      ...AcsChatMessageEventBaseProperties.type.modelProperties,
      messageBody: {
        serializedName: "messageBody",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      editTime: {
        serializedName: "editTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const AcsChatMessageDeletedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatMessageDeletedEventData",
    modelProperties: {
      ...AcsChatMessageEventBaseProperties.type.modelProperties,
      deleteTime: {
        serializedName: "deleteTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const AcsChatThreadCreatedWithUserEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatThreadCreatedWithUserEventData",
    modelProperties: {
      ...AcsChatThreadEventBaseProperties.type.modelProperties,
      createdByCommunicationIdentifier: {
        serializedName: "createdByCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      },
      participants: {
        serializedName: "participants",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AcsChatThreadParticipantProperties"
            }
          }
        }
      }
    }
  }
};

export const AcsChatThreadWithUserDeletedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatThreadWithUserDeletedEventData",
    modelProperties: {
      ...AcsChatThreadEventBaseProperties.type.modelProperties,
      deletedByCommunicationIdentifier: {
        serializedName: "deletedByCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      deleteTime: {
        serializedName: "deleteTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const AcsChatThreadPropertiesUpdatedPerUserEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatThreadPropertiesUpdatedPerUserEventData",
    modelProperties: {
      ...AcsChatThreadEventBaseProperties.type.modelProperties,
      editedByCommunicationIdentifier: {
        serializedName: "editedByCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      editTime: {
        serializedName: "editTime",
        type: {
          name: "DateTime"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      }
    }
  }
};

export const AcsChatParticipantAddedToThreadWithUserEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatParticipantAddedToThreadWithUserEventData",
    modelProperties: {
      ...AcsChatThreadEventBaseProperties.type.modelProperties,
      time: {
        serializedName: "time",
        type: {
          name: "DateTime"
        }
      },
      addedByCommunicationIdentifier: {
        serializedName: "addedByCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      participantAdded: {
        serializedName: "participantAdded",
        type: {
          name: "Composite",
          className: "AcsChatThreadParticipantProperties"
        }
      }
    }
  }
};

export const AcsChatParticipantRemovedFromThreadWithUserEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatParticipantRemovedFromThreadWithUserEventData",
    modelProperties: {
      ...AcsChatThreadEventBaseProperties.type.modelProperties,
      time: {
        serializedName: "time",
        type: {
          name: "DateTime"
        }
      },
      removedByCommunicationIdentifier: {
        serializedName: "removedByCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      participantRemoved: {
        serializedName: "participantRemoved",
        type: {
          name: "Composite",
          className: "AcsChatThreadParticipantProperties"
        }
      }
    }
  }
};

export const AcsChatMessageReceivedInThreadEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatMessageReceivedInThreadEventData",
    modelProperties: {
      ...AcsChatMessageEventInThreadBaseProperties.type.modelProperties,
      messageBody: {
        serializedName: "messageBody",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const AcsChatMessageEditedInThreadEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatMessageEditedInThreadEventData",
    modelProperties: {
      ...AcsChatMessageEventInThreadBaseProperties.type.modelProperties,
      messageBody: {
        serializedName: "messageBody",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      editTime: {
        serializedName: "editTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const AcsChatMessageDeletedInThreadEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatMessageDeletedInThreadEventData",
    modelProperties: {
      ...AcsChatMessageEventInThreadBaseProperties.type.modelProperties,
      deleteTime: {
        serializedName: "deleteTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const AcsChatThreadCreatedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatThreadCreatedEventData",
    modelProperties: {
      ...AcsChatThreadEventInThreadBaseProperties.type.modelProperties,
      createdByCommunicationIdentifier: {
        serializedName: "createdByCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      },
      participants: {
        serializedName: "participants",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AcsChatThreadParticipantProperties"
            }
          }
        }
      }
    }
  }
};

export const AcsChatThreadDeletedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatThreadDeletedEventData",
    modelProperties: {
      ...AcsChatThreadEventInThreadBaseProperties.type.modelProperties,
      deletedByCommunicationIdentifier: {
        serializedName: "deletedByCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      deleteTime: {
        serializedName: "deleteTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const AcsChatThreadPropertiesUpdatedEventData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsChatThreadPropertiesUpdatedEventData",
    modelProperties: {
      ...AcsChatThreadEventInThreadBaseProperties.type.modelProperties,
      editedByCommunicationIdentifier: {
        serializedName: "editedByCommunicationIdentifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      editTime: {
        serializedName: "editTime",
        type: {
          name: "DateTime"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      }
    }
  }
};

export let discriminators = {
  MediaJobOutput: MediaJobOutput,
  "MediaJobOutput.#Microsoft.Media.JobOutputAsset": MediaJobOutputAsset
};
