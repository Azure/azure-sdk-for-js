/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        type: {
          name: "String"
        }
      },
      operation: {
        readOnly: true,
        serializedName: "display.operation",
        type: {
          name: "String"
        }
      },
      resource: {
        readOnly: true,
        serializedName: "display.resource",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "display.description",
        type: {
          name: "String"
        }
      },
      provider: {
        readOnly: true,
        serializedName: "display.provider",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InputValue: msRest.CompositeMapper = {
  serializedName: "InputValue",
  type: {
    name: "Composite",
    className: "InputValue",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      displayValue: {
        serializedName: "displayValue",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InputDescriptor: msRest.CompositeMapper = {
  serializedName: "InputDescriptor",
  type: {
    name: "Composite",
    className: "InputDescriptor",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      possibleValues: {
        serializedName: "possibleValues",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InputValue"
            }
          }
        }
      }
    }
  }
};

export const PipelineTemplateDefinition: msRest.CompositeMapper = {
  serializedName: "PipelineTemplateDefinition",
  type: {
    name: "Composite",
    className: "PipelineTemplateDefinition",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      inputs: {
        serializedName: "inputs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InputDescriptor"
            }
          }
        }
      }
    }
  }
};

export const OrganizationReference: msRest.CompositeMapper = {
  serializedName: "OrganizationReference",
  type: {
    name: "Composite",
    className: "OrganizationReference",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectReference: msRest.CompositeMapper = {
  serializedName: "ProjectReference",
  type: {
    name: "Composite",
    className: "ProjectReference",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Authorization: msRest.CompositeMapper = {
  serializedName: "Authorization",
  type: {
    name: "Composite",
    className: "Authorization",
    modelProperties: {
      authorizationType: {
        required: true,
        isConstant: true,
        serializedName: "authorizationType",
        defaultValue: 'personalAccessToken',
        type: {
          name: "String"
        }
      },
      parameters: {
        serializedName: "parameters",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const CodeRepository: msRest.CompositeMapper = {
  serializedName: "CodeRepository",
  type: {
    name: "Composite",
    className: "CodeRepository",
    modelProperties: {
      repositoryType: {
        required: true,
        serializedName: "repositoryType",
        type: {
          name: "String"
        }
      },
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      defaultBranch: {
        required: true,
        serializedName: "defaultBranch",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "Composite",
          className: "Authorization"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PipelineTemplate: msRest.CompositeMapper = {
  serializedName: "PipelineTemplate",
  type: {
    name: "Composite",
    className: "PipelineTemplate",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      parameters: {
        serializedName: "parameters",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const BootstrapConfiguration: msRest.CompositeMapper = {
  serializedName: "BootstrapConfiguration",
  type: {
    name: "Composite",
    className: "BootstrapConfiguration",
    modelProperties: {
      repository: {
        serializedName: "repository",
        type: {
          name: "Composite",
          className: "CodeRepository"
        }
      },
      template: {
        required: true,
        serializedName: "template",
        type: {
          name: "Composite",
          className: "PipelineTemplate"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PipelineModel: msRest.CompositeMapper = {
  serializedName: "Pipeline",
  type: {
    name: "Composite",
    className: "PipelineModel",
    modelProperties: {
      ...Resource.type.modelProperties,
      pipelineId: {
        readOnly: true,
        serializedName: "properties.pipelineId",
        type: {
          name: "Number"
        }
      },
      organization: {
        required: true,
        serializedName: "properties.organization",
        type: {
          name: "Composite",
          className: "OrganizationReference"
        }
      },
      project: {
        required: true,
        serializedName: "properties.project",
        type: {
          name: "Composite",
          className: "ProjectReference"
        }
      },
      bootstrapConfiguration: {
        required: true,
        serializedName: "properties.bootstrapConfiguration",
        defaultValue: {},
        type: {
          name: "Composite",
          className: "BootstrapConfiguration"
        }
      }
    }
  }
};

export const PipelineUpdateParameters: msRest.CompositeMapper = {
  serializedName: "PipelineUpdateParameters",
  type: {
    name: "Composite",
    className: "PipelineUpdateParameters",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PipelineTemplateDefinitionListResult: msRest.CompositeMapper = {
  serializedName: "PipelineTemplateDefinitionListResult",
  type: {
    name: "Composite",
    className: "PipelineTemplateDefinitionListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PipelineTemplateDefinition"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PipelineListResult: msRest.CompositeMapper = {
  serializedName: "PipelineListResult",
  type: {
    name: "Composite",
    className: "PipelineListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PipelineModel"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
