/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/instancesMappers";
import * as Parameters from "../models/parameters";
import { DFPManagementClientContext } from "../dFPManagementClientContext";

/** Class representing a Instances. */
export class Instances {
  private readonly client: DFPManagementClientContext;

  /**
   * Create a Instances.
   * @param {DFPManagementClientContext} client Reference to the service client.
   */
  constructor(client: DFPManagementClientContext) {
    this.client = client;
  }

  /**
   * Gets details about the specified instances.
   * @param resourceGroupName The name of the Azure Resource group of which a given DFP instance is
   * part. This name must be at least 1 character in length, and no more than 90.
   * @param instanceName The name of the instance. It must be a minimum of 3 characters, and a
   * maximum of 63.
   * @param [options] The optional parameters
   * @returns Promise<Models.InstancesGetDetailsResponse>
   */
  getDetails(resourceGroupName: string, instanceName: string, options?: msRest.RequestOptionsBase): Promise<Models.InstancesGetDetailsResponse>;
  /**
   * @param resourceGroupName The name of the Azure Resource group of which a given DFP instance is
   * part. This name must be at least 1 character in length, and no more than 90.
   * @param instanceName The name of the instance. It must be a minimum of 3 characters, and a
   * maximum of 63.
   * @param callback The callback
   */
  getDetails(resourceGroupName: string, instanceName: string, callback: msRest.ServiceCallback<Models.DFPInstance>): void;
  /**
   * @param resourceGroupName The name of the Azure Resource group of which a given DFP instance is
   * part. This name must be at least 1 character in length, and no more than 90.
   * @param instanceName The name of the instance. It must be a minimum of 3 characters, and a
   * maximum of 63.
   * @param options The optional parameters
   * @param callback The callback
   */
  getDetails(resourceGroupName: string, instanceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DFPInstance>): void;
  getDetails(resourceGroupName: string, instanceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DFPInstance>, callback?: msRest.ServiceCallback<Models.DFPInstance>): Promise<Models.InstancesGetDetailsResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        instanceName,
        options
      },
      getDetailsOperationSpec,
      callback) as Promise<Models.InstancesGetDetailsResponse>;
  }

  /**
   * Provisions the specified DFP instance based on the configuration specified in the request.
   * @param resourceGroupName The name of the Azure Resource group of which a given DFP instance is
   * part. This name must be at least 1 character in length, and no more than 90.
   * @param instanceName The name of the DFP instances. It must be a minimum of 3 characters, and a
   * maximum of 63.
   * @param instanceParameters Contains the information used to provision the DFP instance.
   * @param [options] The optional parameters
   * @returns Promise<Models.InstancesCreateResponse>
   */
  create(resourceGroupName: string, instanceName: string, instanceParameters: Models.DFPInstance, options?: msRest.RequestOptionsBase): Promise<Models.InstancesCreateResponse> {
    return this.beginCreate(resourceGroupName,instanceName,instanceParameters,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.InstancesCreateResponse>;
  }

  /**
   * Deletes the specified DFP instance.
   * @param resourceGroupName The name of the Azure Resource group of which a given DFP instance is
   * part. This name must be at least 1 character in length, and no more than 90.
   * @param instanceName The name of the DFP instance. It must be at least 3 characters in length,
   * and no more than 63.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, instanceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {
    return this.beginDeleteMethod(resourceGroupName,instanceName,options)
      .then(lroPoller => lroPoller.pollUntilFinished());
  }

  /**
   * Updates the current state of the specified DFP instance.
   * @param resourceGroupName The name of the Azure Resource group of which a given DFP instance is
   * part. This name must be at least 1 character in length, and no more than 90.
   * @param instanceName The name of the DFP instance. It must be at least 3 characters in length,
   * and no more than 63.
   * @param instanceUpdateParameters Request object that contains the updated information for the
   * instance.
   * @param [options] The optional parameters
   * @returns Promise<Models.InstancesUpdateResponse>
   */
  update(resourceGroupName: string, instanceName: string, instanceUpdateParameters: Models.DFPInstanceUpdateParameters, options?: msRest.RequestOptionsBase): Promise<Models.InstancesUpdateResponse> {
    return this.beginUpdate(resourceGroupName,instanceName,instanceUpdateParameters,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.InstancesUpdateResponse>;
  }

  /**
   * Gets all the Dedicated instance for the given resource group.
   * @param resourceGroupName The name of the Azure Resource group of which a given DFP instance is
   * part. This name must be at least 1 character in length, and no more than 90.
   * @param [options] The optional parameters
   * @returns Promise<Models.InstancesListByResourceGroupResponse>
   */
  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.InstancesListByResourceGroupResponse>;
  /**
   * @param resourceGroupName The name of the Azure Resource group of which a given DFP instance is
   * part. This name must be at least 1 character in length, and no more than 90.
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.DFPInstances>): void;
  /**
   * @param resourceGroupName The name of the Azure Resource group of which a given DFP instance is
   * part. This name must be at least 1 character in length, and no more than 90.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DFPInstances>): void;
  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DFPInstances>, callback?: msRest.ServiceCallback<Models.DFPInstances>): Promise<Models.InstancesListByResourceGroupResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        options
      },
      listByResourceGroupOperationSpec,
      callback) as Promise<Models.InstancesListByResourceGroupResponse>;
  }

  /**
   * Lists all the Dedicated instances for the given subscription.
   * @param [options] The optional parameters
   * @returns Promise<Models.InstancesListResponse>
   */
  list(options?: msRest.RequestOptionsBase): Promise<Models.InstancesListResponse>;
  /**
   * @param callback The callback
   */
  list(callback: msRest.ServiceCallback<Models.DFPInstances>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DFPInstances>): void;
  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DFPInstances>, callback?: msRest.ServiceCallback<Models.DFPInstances>): Promise<Models.InstancesListResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listOperationSpec,
      callback) as Promise<Models.InstancesListResponse>;
  }

  /**
   * Check the name availability in the target location.
   * @param location The region name which the operation will lookup into.
   * @param instanceParameters The name of the instance.
   * @param [options] The optional parameters
   * @returns Promise<Models.InstancesCheckNameAvailabilityResponse>
   */
  checkNameAvailability(location: string, instanceParameters: Models.CheckInstanceNameAvailabilityParameters, options?: msRest.RequestOptionsBase): Promise<Models.InstancesCheckNameAvailabilityResponse>;
  /**
   * @param location The region name which the operation will lookup into.
   * @param instanceParameters The name of the instance.
   * @param callback The callback
   */
  checkNameAvailability(location: string, instanceParameters: Models.CheckInstanceNameAvailabilityParameters, callback: msRest.ServiceCallback<Models.CheckInstanceNameAvailabilityResult>): void;
  /**
   * @param location The region name which the operation will lookup into.
   * @param instanceParameters The name of the instance.
   * @param options The optional parameters
   * @param callback The callback
   */
  checkNameAvailability(location: string, instanceParameters: Models.CheckInstanceNameAvailabilityParameters, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CheckInstanceNameAvailabilityResult>): void;
  checkNameAvailability(location: string, instanceParameters: Models.CheckInstanceNameAvailabilityParameters, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CheckInstanceNameAvailabilityResult>, callback?: msRest.ServiceCallback<Models.CheckInstanceNameAvailabilityResult>): Promise<Models.InstancesCheckNameAvailabilityResponse> {
    return this.client.sendOperationRequest(
      {
        location,
        instanceParameters,
        options
      },
      checkNameAvailabilityOperationSpec,
      callback) as Promise<Models.InstancesCheckNameAvailabilityResponse>;
  }

  /**
   * Provisions the specified DFP instance based on the configuration specified in the request.
   * @param resourceGroupName The name of the Azure Resource group of which a given DFP instance is
   * part. This name must be at least 1 character in length, and no more than 90.
   * @param instanceName The name of the DFP instances. It must be a minimum of 3 characters, and a
   * maximum of 63.
   * @param instanceParameters Contains the information used to provision the DFP instance.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginCreate(resourceGroupName: string, instanceName: string, instanceParameters: Models.DFPInstance, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        instanceName,
        instanceParameters,
        options
      },
      beginCreateOperationSpec,
      options);
  }

  /**
   * Deletes the specified DFP instance.
   * @param resourceGroupName The name of the Azure Resource group of which a given DFP instance is
   * part. This name must be at least 1 character in length, and no more than 90.
   * @param instanceName The name of the DFP instance. It must be at least 3 characters in length,
   * and no more than 63.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeleteMethod(resourceGroupName: string, instanceName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        instanceName,
        options
      },
      beginDeleteMethodOperationSpec,
      options);
  }

  /**
   * Updates the current state of the specified DFP instance.
   * @param resourceGroupName The name of the Azure Resource group of which a given DFP instance is
   * part. This name must be at least 1 character in length, and no more than 90.
   * @param instanceName The name of the DFP instance. It must be at least 3 characters in length,
   * and no more than 63.
   * @param instanceUpdateParameters Request object that contains the updated information for the
   * instance.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginUpdate(resourceGroupName: string, instanceName: string, instanceUpdateParameters: Models.DFPInstanceUpdateParameters, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        instanceName,
        instanceUpdateParameters,
        options
      },
      beginUpdateOperationSpec,
      options);
  }

  /**
   * Gets all the Dedicated instance for the given resource group.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.InstancesListByResourceGroupNextResponse>
   */
  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.InstancesListByResourceGroupNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DFPInstances>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DFPInstances>): void;
  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DFPInstances>, callback?: msRest.ServiceCallback<Models.DFPInstances>): Promise<Models.InstancesListByResourceGroupNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByResourceGroupNextOperationSpec,
      callback) as Promise<Models.InstancesListByResourceGroupNextResponse>;
  }

  /**
   * Lists all the Dedicated instances for the given subscription.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.InstancesListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.InstancesListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DFPInstances>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DFPInstances>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DFPInstances>, callback?: msRest.ServiceCallback<Models.DFPInstances>): Promise<Models.InstancesListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.InstancesListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getDetailsOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Dynamics365FraudProtection/instances/{instanceName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.instanceName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DFPInstance
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByResourceGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Dynamics365FraudProtection/instances",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DFPInstances
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.Dynamics365FraudProtection/instances",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DFPInstances
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const checkNameAvailabilityOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.Dynamics365FraudProtection/locations/{location}/checkNameAvailability",
  urlParameters: [
    Parameters.location,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "instanceParameters",
    mapper: {
      ...Mappers.CheckInstanceNameAvailabilityParameters,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.CheckInstanceNameAvailabilityResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const beginCreateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Dynamics365FraudProtection/instances/{instanceName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.instanceName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "instanceParameters",
    mapper: {
      ...Mappers.DFPInstance,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.DFPInstance
    },
    201: {
      bodyMapper: Mappers.DFPInstance
    },
    202: {
      bodyMapper: Mappers.DFPInstance
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const beginDeleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Dynamics365FraudProtection/instances/{instanceName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.instanceName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    202: {},
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const beginUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Dynamics365FraudProtection/instances/{instanceName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.instanceName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "instanceUpdateParameters",
    mapper: {
      ...Mappers.DFPInstanceUpdateParameters,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.DFPInstance
    },
    202: {
      bodyMapper: Mappers.DFPInstance
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByResourceGroupNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DFPInstances
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DFPInstances
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
