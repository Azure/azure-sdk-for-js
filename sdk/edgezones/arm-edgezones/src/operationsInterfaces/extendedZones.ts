/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ExtendedZone,
  ExtendedZonesListBySubscriptionOptionalParams,
  ExtendedZonesGetOptionalParams,
  ExtendedZonesGetResponse,
  ExtendedZonesRegisterOptionalParams,
  ExtendedZonesRegisterResponse,
  ExtendedZonesUnregisterOptionalParams,
  ExtendedZonesUnregisterResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ExtendedZones. */
export interface ExtendedZones {
  /**
   * Lists the Azure Extended Zones available to a subscription
   * @param options The options parameters.
   */
  listBySubscription(
    options?: ExtendedZonesListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<ExtendedZone>;
  /**
   * Gets an Azure Extended Zone for a subscription
   * @param extendedZoneName The name of the ExtendedZone
   * @param options The options parameters.
   */
  get(
    extendedZoneName: string,
    options?: ExtendedZonesGetOptionalParams,
  ): Promise<ExtendedZonesGetResponse>;
  /**
   * Registers a subscription for an Extended Zone
   * @param extendedZoneName The name of the ExtendedZone
   * @param options The options parameters.
   */
  register(
    extendedZoneName: string,
    options?: ExtendedZonesRegisterOptionalParams,
  ): Promise<ExtendedZonesRegisterResponse>;
  /**
   * Unregisters a subscription for an Extended Zone
   * @param extendedZoneName The name of the ExtendedZone
   * @param options The options parameters.
   */
  unregister(
    extendedZoneName: string,
    options?: ExtendedZonesUnregisterOptionalParams,
  ): Promise<ExtendedZonesUnregisterResponse>;
}
