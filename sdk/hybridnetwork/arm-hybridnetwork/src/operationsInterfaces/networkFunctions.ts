/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  NetworkFunction,
  NetworkFunctionsListBySubscriptionOptionalParams,
  NetworkFunctionsListByResourceGroupOptionalParams,
  NetworkFunctionsDeleteOptionalParams,
  NetworkFunctionsGetOptionalParams,
  NetworkFunctionsGetResponse,
  NetworkFunctionsCreateOrUpdateOptionalParams,
  NetworkFunctionsCreateOrUpdateResponse,
  TagsObject,
  NetworkFunctionsUpdateTagsOptionalParams,
  NetworkFunctionsUpdateTagsResponse,
  ExecuteRequestParameters,
  NetworkFunctionsExecuteRequestOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a NetworkFunctions. */
export interface NetworkFunctions {
  /**
   * Lists all the network functions in a subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: NetworkFunctionsListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<NetworkFunction>;
  /**
   * Lists all the network function resources in a resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: NetworkFunctionsListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<NetworkFunction>;
  /**
   * Deletes the specified network function resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkFunctionName The name of the network function.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    networkFunctionName: string,
    options?: NetworkFunctionsDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Deletes the specified network function resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkFunctionName The name of the network function.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    networkFunctionName: string,
    options?: NetworkFunctionsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Gets information about the specified network function resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkFunctionName The name of the network function resource.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    networkFunctionName: string,
    options?: NetworkFunctionsGetOptionalParams
  ): Promise<NetworkFunctionsGetResponse>;
  /**
   * Creates or updates a network function resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkFunctionName Resource name for the network function resource.
   * @param parameters Parameters supplied in the body to the create or update network function
   *                   operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    networkFunctionName: string,
    parameters: NetworkFunction,
    options?: NetworkFunctionsCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<NetworkFunctionsCreateOrUpdateResponse>,
      NetworkFunctionsCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a network function resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkFunctionName Resource name for the network function resource.
   * @param parameters Parameters supplied in the body to the create or update network function
   *                   operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    networkFunctionName: string,
    parameters: NetworkFunction,
    options?: NetworkFunctionsCreateOrUpdateOptionalParams
  ): Promise<NetworkFunctionsCreateOrUpdateResponse>;
  /**
   * Updates the tags for the network function resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkFunctionName Resource name for the network function resource.
   * @param parameters Parameters supplied to the update network function tags operation.
   * @param options The options parameters.
   */
  updateTags(
    resourceGroupName: string,
    networkFunctionName: string,
    parameters: TagsObject,
    options?: NetworkFunctionsUpdateTagsOptionalParams
  ): Promise<NetworkFunctionsUpdateTagsResponse>;
  /**
   * Execute a request to services on a containerized network function.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkFunctionName The name of the network function.
   * @param parameters Payload for execute request post call.
   * @param options The options parameters.
   */
  beginExecuteRequest(
    resourceGroupName: string,
    networkFunctionName: string,
    parameters: ExecuteRequestParameters,
    options?: NetworkFunctionsExecuteRequestOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Execute a request to services on a containerized network function.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkFunctionName The name of the network function.
   * @param parameters Payload for execute request post call.
   * @param options The options parameters.
   */
  beginExecuteRequestAndWait(
    resourceGroupName: string,
    networkFunctionName: string,
    parameters: ExecuteRequestParameters,
    options?: NetworkFunctionsExecuteRequestOptionalParams
  ): Promise<void>;
}
