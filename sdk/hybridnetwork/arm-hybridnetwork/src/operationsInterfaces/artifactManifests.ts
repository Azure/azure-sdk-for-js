/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  ArtifactManifest,
  ArtifactManifestsListByArtifactStoreOptionalParams,
  ArtifactManifestsDeleteOptionalParams,
  ArtifactManifestsDeleteResponse,
  ArtifactManifestsCreateOrUpdateOptionalParams,
  ArtifactManifestsCreateOrUpdateResponse,
  ArtifactManifestsGetOptionalParams,
  ArtifactManifestsGetResponse,
  TagsObject,
  ArtifactManifestsUpdateOptionalParams,
  ArtifactManifestsUpdateResponse,
  ArtifactManifestsListCredentialOptionalParams,
  ArtifactManifestsListCredentialResponse,
  ArtifactManifestUpdateState,
  ArtifactManifestsUpdateStateOptionalParams,
  ArtifactManifestsUpdateStateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ArtifactManifests. */
export interface ArtifactManifests {
  /**
   * Gets information about the artifact manifest.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param options The options parameters.
   */
  listByArtifactStore(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    options?: ArtifactManifestsListByArtifactStoreOptionalParams
  ): PagedAsyncIterableIterator<ArtifactManifest>;
  /**
   * Deletes the specified artifact manifest.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param artifactManifestName The name of the artifact manifest.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    artifactManifestName: string,
    options?: ArtifactManifestsDeleteOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<ArtifactManifestsDeleteResponse>,
      ArtifactManifestsDeleteResponse
    >
  >;
  /**
   * Deletes the specified artifact manifest.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param artifactManifestName The name of the artifact manifest.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    artifactManifestName: string,
    options?: ArtifactManifestsDeleteOptionalParams
  ): Promise<ArtifactManifestsDeleteResponse>;
  /**
   * Creates or updates a artifact manifest.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param artifactManifestName The name of the artifact manifest.
   * @param parameters Parameters supplied to the create or update artifact manifest operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    artifactManifestName: string,
    parameters: ArtifactManifest,
    options?: ArtifactManifestsCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<ArtifactManifestsCreateOrUpdateResponse>,
      ArtifactManifestsCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a artifact manifest.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param artifactManifestName The name of the artifact manifest.
   * @param parameters Parameters supplied to the create or update artifact manifest operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    artifactManifestName: string,
    parameters: ArtifactManifest,
    options?: ArtifactManifestsCreateOrUpdateOptionalParams
  ): Promise<ArtifactManifestsCreateOrUpdateResponse>;
  /**
   * Gets information about a artifact manifest resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param artifactManifestName The name of the artifact manifest.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    artifactManifestName: string,
    options?: ArtifactManifestsGetOptionalParams
  ): Promise<ArtifactManifestsGetResponse>;
  /**
   * Updates a artifact manifest resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param artifactManifestName The name of the artifact manifest.
   * @param parameters Parameters supplied to the create or update artifact manifest operation.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    artifactManifestName: string,
    parameters: TagsObject,
    options?: ArtifactManifestsUpdateOptionalParams
  ): Promise<ArtifactManifestsUpdateResponse>;
  /**
   * List credential for publishing artifacts defined in artifact manifest.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param artifactManifestName The name of the artifact manifest.
   * @param options The options parameters.
   */
  listCredential(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    artifactManifestName: string,
    options?: ArtifactManifestsListCredentialOptionalParams
  ): Promise<ArtifactManifestsListCredentialResponse>;
  /**
   * Update state for artifact manifest.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param artifactManifestName The name of the artifact manifest.
   * @param parameters Parameters supplied to update the state of artifact manifest.
   * @param options The options parameters.
   */
  beginUpdateState(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    artifactManifestName: string,
    parameters: ArtifactManifestUpdateState,
    options?: ArtifactManifestsUpdateStateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<ArtifactManifestsUpdateStateResponse>,
      ArtifactManifestsUpdateStateResponse
    >
  >;
  /**
   * Update state for artifact manifest.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param artifactManifestName The name of the artifact manifest.
   * @param parameters Parameters supplied to update the state of artifact manifest.
   * @param options The options parameters.
   */
  beginUpdateStateAndWait(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    artifactManifestName: string,
    parameters: ArtifactManifestUpdateState,
    options?: ArtifactManifestsUpdateStateOptionalParams
  ): Promise<ArtifactManifestsUpdateStateResponse>;
}
