/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  ArtifactStore,
  ArtifactStoresListByPublisherOptionalParams,
  ArtifactStoresDeleteOptionalParams,
  ArtifactStoresDeleteResponse,
  ArtifactStoresCreateOrUpdateOptionalParams,
  ArtifactStoresCreateOrUpdateResponse,
  ArtifactStoresGetOptionalParams,
  ArtifactStoresGetResponse,
  TagsObject,
  ArtifactStoresUpdateOptionalParams,
  ArtifactStoresUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ArtifactStores. */
export interface ArtifactStores {
  /**
   * Gets information of the ArtifactStores under publisher.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param options The options parameters.
   */
  listByPublisher(
    resourceGroupName: string,
    publisherName: string,
    options?: ArtifactStoresListByPublisherOptionalParams
  ): PagedAsyncIterableIterator<ArtifactStore>;
  /**
   * Deletes the specified artifact store.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    options?: ArtifactStoresDeleteOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<ArtifactStoresDeleteResponse>,
      ArtifactStoresDeleteResponse
    >
  >;
  /**
   * Deletes the specified artifact store.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    options?: ArtifactStoresDeleteOptionalParams
  ): Promise<ArtifactStoresDeleteResponse>;
  /**
   * Creates or updates a artifact store.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param parameters Parameters supplied to the create or update application group operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    parameters: ArtifactStore,
    options?: ArtifactStoresCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<ArtifactStoresCreateOrUpdateResponse>,
      ArtifactStoresCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a artifact store.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param parameters Parameters supplied to the create or update application group operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    parameters: ArtifactStore,
    options?: ArtifactStoresCreateOrUpdateOptionalParams
  ): Promise<ArtifactStoresCreateOrUpdateResponse>;
  /**
   * Gets information about the specified artifact store.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    options?: ArtifactStoresGetOptionalParams
  ): Promise<ArtifactStoresGetResponse>;
  /**
   * Update artifact store resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param parameters Parameters supplied to the create or update application group operation.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    parameters: TagsObject,
    options?: ArtifactStoresUpdateOptionalParams
  ): Promise<ArtifactStoresUpdateResponse>;
}
