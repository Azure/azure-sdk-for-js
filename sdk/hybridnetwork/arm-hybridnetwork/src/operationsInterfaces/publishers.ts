/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  Publisher,
  PublishersListBySubscriptionOptionalParams,
  PublishersListByResourceGroupOptionalParams,
  PublishersDeleteOptionalParams,
  PublishersDeleteResponse,
  PublishersGetOptionalParams,
  PublishersGetResponse,
  PublishersCreateOrUpdateOptionalParams,
  PublishersCreateOrUpdateResponse,
  PublishersUpdateOptionalParams,
  PublishersUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Publishers. */
export interface Publishers {
  /**
   * Lists all the publishers in a subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: PublishersListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<Publisher>;
  /**
   * Lists all the publishers in a resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: PublishersListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<Publisher>;
  /**
   * Deletes the specified publisher.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    publisherName: string,
    options?: PublishersDeleteOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<PublishersDeleteResponse>,
      PublishersDeleteResponse
    >
  >;
  /**
   * Deletes the specified publisher.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    publisherName: string,
    options?: PublishersDeleteOptionalParams
  ): Promise<PublishersDeleteResponse>;
  /**
   * Gets information about the specified publisher.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    publisherName: string,
    options?: PublishersGetOptionalParams
  ): Promise<PublishersGetResponse>;
  /**
   * Creates or updates a publisher.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    publisherName: string,
    options?: PublishersCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<PublishersCreateOrUpdateResponse>,
      PublishersCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a publisher.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    publisherName: string,
    options?: PublishersCreateOrUpdateOptionalParams
  ): Promise<PublishersCreateOrUpdateResponse>;
  /**
   * Update a publisher resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    publisherName: string,
    options?: PublishersUpdateOptionalParams
  ): Promise<PublishersUpdateResponse>;
}
