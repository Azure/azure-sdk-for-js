/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  ConfigurationGroupValue,
  ConfigurationGroupValuesListBySubscriptionOptionalParams,
  ConfigurationGroupValuesListByResourceGroupOptionalParams,
  ConfigurationGroupValuesDeleteOptionalParams,
  ConfigurationGroupValuesDeleteResponse,
  ConfigurationGroupValuesGetOptionalParams,
  ConfigurationGroupValuesGetResponse,
  ConfigurationGroupValuesCreateOrUpdateOptionalParams,
  ConfigurationGroupValuesCreateOrUpdateResponse,
  TagsObject,
  ConfigurationGroupValuesUpdateTagsOptionalParams,
  ConfigurationGroupValuesUpdateTagsResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ConfigurationGroupValues. */
export interface ConfigurationGroupValues {
  /**
   * Lists all sites in the configuration group value in a subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: ConfigurationGroupValuesListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<ConfigurationGroupValue>;
  /**
   * Lists all the hybrid network configurationGroupValues in a resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: ConfigurationGroupValuesListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<ConfigurationGroupValue>;
  /**
   * Deletes the specified hybrid configuration group value.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param configurationGroupValueName The name of the configuration group value.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    configurationGroupValueName: string,
    options?: ConfigurationGroupValuesDeleteOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<ConfigurationGroupValuesDeleteResponse>,
      ConfigurationGroupValuesDeleteResponse
    >
  >;
  /**
   * Deletes the specified hybrid configuration group value.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param configurationGroupValueName The name of the configuration group value.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    configurationGroupValueName: string,
    options?: ConfigurationGroupValuesDeleteOptionalParams
  ): Promise<ConfigurationGroupValuesDeleteResponse>;
  /**
   * Gets information about the specified hybrid configuration group values.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param configurationGroupValueName The name of the configuration group value.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    configurationGroupValueName: string,
    options?: ConfigurationGroupValuesGetOptionalParams
  ): Promise<ConfigurationGroupValuesGetResponse>;
  /**
   * Creates or updates a hybrid configuration group value.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param configurationGroupValueName The name of the configuration group value.
   * @param parameters Parameters supplied to the create or update configuration group value resource.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    configurationGroupValueName: string,
    parameters: ConfigurationGroupValue,
    options?: ConfigurationGroupValuesCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<ConfigurationGroupValuesCreateOrUpdateResponse>,
      ConfigurationGroupValuesCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a hybrid configuration group value.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param configurationGroupValueName The name of the configuration group value.
   * @param parameters Parameters supplied to the create or update configuration group value resource.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    configurationGroupValueName: string,
    parameters: ConfigurationGroupValue,
    options?: ConfigurationGroupValuesCreateOrUpdateOptionalParams
  ): Promise<ConfigurationGroupValuesCreateOrUpdateResponse>;
  /**
   * Updates a hybrid configuration group tags.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param configurationGroupValueName The name of the configuration group value.
   * @param parameters Parameters supplied to update configuration group values tags.
   * @param options The options parameters.
   */
  updateTags(
    resourceGroupName: string,
    configurationGroupValueName: string,
    parameters: TagsObject,
    options?: ConfigurationGroupValuesUpdateTagsOptionalParams
  ): Promise<ConfigurationGroupValuesUpdateTagsResponse>;
}
