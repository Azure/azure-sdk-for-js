/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  ConfigurationGroupSchema,
  ConfigurationGroupSchemasListByPublisherOptionalParams,
  ConfigurationGroupSchemasDeleteOptionalParams,
  ConfigurationGroupSchemasDeleteResponse,
  ConfigurationGroupSchemasCreateOrUpdateOptionalParams,
  ConfigurationGroupSchemasCreateOrUpdateResponse,
  ConfigurationGroupSchemasGetOptionalParams,
  ConfigurationGroupSchemasGetResponse,
  TagsObject,
  ConfigurationGroupSchemasUpdateOptionalParams,
  ConfigurationGroupSchemasUpdateResponse,
  ConfigurationGroupSchemaVersionUpdateState,
  ConfigurationGroupSchemasUpdateStateOptionalParams,
  ConfigurationGroupSchemasUpdateStateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ConfigurationGroupSchemas. */
export interface ConfigurationGroupSchemas {
  /**
   * Gets information of the configuration group schemas under a publisher.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param options The options parameters.
   */
  listByPublisher(
    resourceGroupName: string,
    publisherName: string,
    options?: ConfigurationGroupSchemasListByPublisherOptionalParams
  ): PagedAsyncIterableIterator<ConfigurationGroupSchema>;
  /**
   * Deletes a specified configuration group schema.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param configurationGroupSchemaName The name of the configuration group schema.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    publisherName: string,
    configurationGroupSchemaName: string,
    options?: ConfigurationGroupSchemasDeleteOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<ConfigurationGroupSchemasDeleteResponse>,
      ConfigurationGroupSchemasDeleteResponse
    >
  >;
  /**
   * Deletes a specified configuration group schema.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param configurationGroupSchemaName The name of the configuration group schema.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    publisherName: string,
    configurationGroupSchemaName: string,
    options?: ConfigurationGroupSchemasDeleteOptionalParams
  ): Promise<ConfigurationGroupSchemasDeleteResponse>;
  /**
   * Creates or updates a configuration group schema.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param configurationGroupSchemaName The name of the configuration group schema.
   * @param parameters Parameters supplied to the create or update configuration group schema resource.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    publisherName: string,
    configurationGroupSchemaName: string,
    parameters: ConfigurationGroupSchema,
    options?: ConfigurationGroupSchemasCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<ConfigurationGroupSchemasCreateOrUpdateResponse>,
      ConfigurationGroupSchemasCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a configuration group schema.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param configurationGroupSchemaName The name of the configuration group schema.
   * @param parameters Parameters supplied to the create or update configuration group schema resource.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    publisherName: string,
    configurationGroupSchemaName: string,
    parameters: ConfigurationGroupSchema,
    options?: ConfigurationGroupSchemasCreateOrUpdateOptionalParams
  ): Promise<ConfigurationGroupSchemasCreateOrUpdateResponse>;
  /**
   * Gets information about the specified configuration group schema.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param configurationGroupSchemaName The name of the configuration group schema.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    publisherName: string,
    configurationGroupSchemaName: string,
    options?: ConfigurationGroupSchemasGetOptionalParams
  ): Promise<ConfigurationGroupSchemasGetResponse>;
  /**
   * Updates a configuration group schema resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param configurationGroupSchemaName The name of the configuration group schema.
   * @param parameters Parameters supplied to the create or update network service design version
   *                   operation.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    publisherName: string,
    configurationGroupSchemaName: string,
    parameters: TagsObject,
    options?: ConfigurationGroupSchemasUpdateOptionalParams
  ): Promise<ConfigurationGroupSchemasUpdateResponse>;
  /**
   * Update configuration group schema state.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param configurationGroupSchemaName The name of the configuration group schema.
   * @param parameters Parameters supplied to update the state of configuration group schema.
   * @param options The options parameters.
   */
  beginUpdateState(
    resourceGroupName: string,
    publisherName: string,
    configurationGroupSchemaName: string,
    parameters: ConfigurationGroupSchemaVersionUpdateState,
    options?: ConfigurationGroupSchemasUpdateStateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<ConfigurationGroupSchemasUpdateStateResponse>,
      ConfigurationGroupSchemasUpdateStateResponse
    >
  >;
  /**
   * Update configuration group schema state.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param configurationGroupSchemaName The name of the configuration group schema.
   * @param parameters Parameters supplied to update the state of configuration group schema.
   * @param options The options parameters.
   */
  beginUpdateStateAndWait(
    resourceGroupName: string,
    publisherName: string,
    configurationGroupSchemaName: string,
    parameters: ConfigurationGroupSchemaVersionUpdateState,
    options?: ConfigurationGroupSchemasUpdateStateOptionalParams
  ): Promise<ConfigurationGroupSchemasUpdateStateResponse>;
}
