/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export type ConfigurationGroupValuePropertiesFormatUnion =
  | ConfigurationGroupValuePropertiesFormat
  | ConfigurationValueWithSecrets
  | ConfigurationValueWithoutSecrets;
export type DeploymentResourceIdReferenceUnion =
  | DeploymentResourceIdReference
  | SecretDeploymentResourceReference
  | OpenDeploymentResourceReference;
export type NetworkFunctionPropertiesFormatUnion =
  | NetworkFunctionPropertiesFormat
  | NetworkFunctionValueWithSecrets
  | NetworkFunctionValueWithoutSecrets;
export type NetworkFunctionDefinitionVersionPropertiesFormatUnion =
  | NetworkFunctionDefinitionVersionPropertiesFormat
  | ContainerizedNetworkFunctionDefinitionVersion
  | VirtualNetworkFunctionDefinitionVersion;
export type ResourceElementTemplateUnion =
  | ResourceElementTemplate
  | ArmResourceDefinitionResourceElementTemplateDetails
  | NetworkFunctionDefinitionResourceElementTemplateDetails;
export type ArtifactAccessCredentialUnion =
  | ArtifactAccessCredential
  | AzureContainerRegistryScopedTokenCredential
  | AzureStorageAccountCredential;
export type NFVIsUnion =
  | NFVIs
  | AzureCoreNfviDetails
  | AzureArcK8SClusterNfviDetails
  | AzureOperatorNexusClusterNfviDetails;
export type ContainerizedNetworkFunctionTemplateUnion =
  | ContainerizedNetworkFunctionTemplate
  | AzureArcKubernetesNetworkFunctionTemplate;
export type VirtualNetworkFunctionTemplateUnion =
  | VirtualNetworkFunctionTemplate
  | AzureCoreNetworkFunctionTemplate
  | AzureOperatorNexusNetworkFunctionTemplate;
export type AzureArcKubernetesNetworkFunctionApplicationUnion =
  | AzureArcKubernetesNetworkFunctionApplication
  | AzureArcKubernetesHelmApplication;
export type AzureCoreNetworkFunctionApplicationUnion =
  | AzureCoreNetworkFunctionApplication
  | AzureCoreNetworkFunctionVhdApplication
  | AzureCoreNetworkFunctionArmTemplateApplication;
export type AzureOperatorNexusNetworkFunctionApplicationUnion =
  | AzureOperatorNexusNetworkFunctionApplication
  | AzureOperatorNexusNetworkFunctionImageApplication
  | AzureOperatorNexusNetworkFunctionArmTemplateApplication;

/** A list of configuration group schema resources. */
export interface ConfigurationGroupSchemaListResult {
  /** A list of configuration group schema. */
  value?: ConfigurationGroupSchema[];
  /**
   * The URL to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Configuration group schema properties. */
export interface ConfigurationGroupSchemaPropertiesFormat {
  /**
   * The provisioning state of the Configuration group schema resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The configuration group schema version state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly versionState?: VersionState;
  /** Description of what schema can contain. */
  description?: string;
  /** Name and value pairs that define the configuration value. It can be a well formed escaped JSON string. */
  schemaDefinition?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** Tags object for patch operations. */
export interface TagsObject {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** Publisher configuration group schema update request definition. */
export interface ConfigurationGroupSchemaVersionUpdateState {
  /** The configuration group schema state. */
  versionState?: VersionState;
}

/** Hybrid configuration group value properties. */
export interface ConfigurationGroupValuePropertiesFormat {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  configurationType: "Secret" | "Open";
  /**
   * The provisioning state of the site resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The publisher name for the configuration group schema.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly publisherName?: string;
  /**
   * The scope of the publisher.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly publisherScope?: PublisherScope;
  /**
   * The configuration group schema name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly configurationGroupSchemaName?: string;
  /**
   * The location of the configuration group schema offering.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly configurationGroupSchemaOfferingLocation?: string;
  /** The configuration group schema resource reference. */
  configurationGroupSchemaResourceReference?: DeploymentResourceIdReferenceUnion;
}

/** The azure resource reference which is used for deployment. */
export interface DeploymentResourceIdReference {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  idType: "Secret" | "Open";
}

/** Response for hybrid configurationGroups API service call. */
export interface ConfigurationGroupValueListResult {
  /** A list of hybrid configurationGroups. */
  value?: ConfigurationGroupValue[];
  /**
   * The URL to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Network function properties. */
export interface NetworkFunctionPropertiesFormat {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  configurationType: "Secret" | "Open";
  /**
   * The provisioning state of the network function resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The publisher name for the network function.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly publisherName?: string;
  /**
   * The scope of the publisher.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly publisherScope?: PublisherScope;
  /**
   * The network function definition group name for the network function.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkFunctionDefinitionGroupName?: string;
  /**
   * The network function definition version for the network function.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkFunctionDefinitionVersion?: string;
  /**
   * The location of the network function definition offering.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkFunctionDefinitionOfferingLocation?: string;
  /** The network function definition version resource reference. */
  networkFunctionDefinitionVersionResourceReference?: DeploymentResourceIdReferenceUnion;
  /** The nfvi type for the network function. */
  nfviType?: NfviType;
  /** The nfviId for the network function. */
  nfviId?: string;
  /** Indicates if software updates are allowed during deployment. */
  allowSoftwareUpdate?: boolean;
  /** The role configuration override values from the user. */
  roleOverrideValues?: string[];
}

/** Managed service identity (system assigned and/or user assigned identities) */
export interface ManagedServiceIdentity {
  /**
   * The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed). */
  type: ManagedServiceIdentityType;
  /** The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests. */
  userAssignedIdentities?: { [propertyName: string]: UserAssignedIdentity };
}

/** User assigned identity properties */
export interface UserAssignedIdentity {
  /**
   * The principal ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The client ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clientId?: string;
}

/** Response for network function API service call. */
export interface NetworkFunctionListResult {
  /** A list of network function resources in a subscription or resource group. */
  value?: NetworkFunction[];
  /**
   * The URL to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Payload for execute request post call. */
export interface ExecuteRequestParameters {
  /** The endpoint of service to call. */
  serviceEndpoint: string;
  /** The request metadata. */
  requestMetadata: RequestMetadata;
}

/** Request metadata of execute request post call payload. */
export interface RequestMetadata {
  /** The relative path of the request. */
  relativePath: string;
  /** The http method of the request. */
  httpMethod: HttpMethod;
  /** The serialized body of the request. */
  serializedBody: string;
  /** The api version of the request. */
  apiVersion?: string;
}

/** The component properties of the network function. */
export interface ComponentProperties {
  /**
   * The provisioning state of the component resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The JSON-serialized deployment profile of the component resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly deploymentProfile?: string;
  /**
   * The deployment status of the component resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly deploymentStatus?: DeploymentStatusProperties;
}

/** The deployment status properties of the network function component. */
export interface DeploymentStatusProperties {
  /** The status of the component resource. */
  status?: Status;
  /** The resource related to the component resource. */
  resources?: Resources;
  /** The next expected update of deployment status. */
  nextExpectedUpdateAt?: Date;
}

/** The resources of the network function component. */
export interface Resources {
  /** Deployments that are related to component resource. */
  deployments?: Deployment[];
  /** Pods related to component resource. */
  pods?: Pod[];
  /** Replica sets related to component resource. */
  replicaSets?: ReplicaSet[];
  /** Stateful sets related to component resource. */
  statefulSets?: StatefulSet[];
  /** Daemonsets related to component resource. */
  daemonSets?: DaemonSet[];
}

/** Helm Deployment status properties. */
export interface Deployment {
  /** The name of the deployment. */
  name?: string;
  /** The namespace of the deployment. */
  namespace?: string;
  /** Desired number of pods */
  desired?: number;
  /** Number of ready pods. */
  ready?: number;
  /** Number of upto date pods. */
  upToDate?: number;
  /** Number of available pods. */
  available?: number;
  /** Creation Time of deployment. */
  creationTime?: Date;
}

/** Helm Pod status properties. */
export interface Pod {
  /** The name of the Pod. */
  name?: string;
  /** The namespace of the Pod. */
  namespace?: string;
  /** Desired number of containers */
  desired?: number;
  /** Number of ready containers. */
  ready?: number;
  /** The status of a pod. */
  status?: PodStatus;
  /** Creation Time of Pod. */
  creationTime?: Date;
  /** Last 5 Pod events. */
  events?: PodEvent[];
}

/** Pod Event  properties. */
export interface PodEvent {
  /** The type of pod event. */
  type?: PodEventType;
  /** Event reason. */
  reason?: string;
  /** Event message. */
  message?: string;
  /** Event Last seen. */
  lastSeenTime?: Date;
}

/** Helm ReplicaSet status properties. */
export interface ReplicaSet {
  /** The name of the replicaSet. */
  name?: string;
  /** The namespace of the replicaSet. */
  namespace?: string;
  /** Desired number of pods */
  desired?: number;
  /** Number of ready pods. */
  ready?: number;
  /** Number of current pods. */
  current?: number;
  /** Creation Time of replicaSet. */
  creationTime?: Date;
}

/** Helm StatefulSet status properties. */
export interface StatefulSet {
  /** The name of the statefulset. */
  name?: string;
  /** The namespace of the statefulset. */
  namespace?: string;
  /** Desired number of pods */
  desired?: number;
  /** Number of ready pods. */
  ready?: number;
  /** Creation Time of statefulset. */
  creationTime?: Date;
}

/** Helm DaemonSet status properties. */
export interface DaemonSet {
  /** The name of the daemonSet. */
  name?: string;
  /** The namespace of the daemonSet. */
  namespace?: string;
  /** Desired number of pods */
  desired?: number;
  /** Current number of pods */
  current?: number;
  /** Number of Ready pods */
  ready?: number;
  /** Number of  upto date pods */
  upToDate?: number;
  /** Number of available pods. */
  available?: number;
  /** Creation Time of daemonSet. */
  creationTime?: Date;
}

/** Response for list component API service call. */
export interface ComponentListResult {
  /** A list of component resources in a networkFunction. */
  value?: Component[];
  /**
   * The URL to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** A list of network function definition group resources. */
export interface NetworkFunctionDefinitionGroupListResult {
  /** A list of network function definition group. */
  value?: NetworkFunctionDefinitionGroup[];
  /**
   * The URL to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Network function definition group properties. */
export interface NetworkFunctionDefinitionGroupPropertiesFormat {
  /**
   * The provisioning state of the network function definition groups resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** The network function definition group description. */
  description?: string;
}

/** Network function definition version properties. */
export interface NetworkFunctionDefinitionVersionPropertiesFormat {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  networkFunctionType:
    | "ContainerizedNetworkFunction"
    | "VirtualNetworkFunction";
  /**
   * The provisioning state of the network function definition version resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The network function definition version state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly versionState?: VersionState;
  /** The network function definition version description. */
  description?: string;
  /** The deployment parameters of the network function definition version. */
  deployParameters?: string;
}

/** A list of network function definition versions. */
export interface NetworkFunctionDefinitionVersionListResult {
  /** A list of network function definition versions. */
  value?: NetworkFunctionDefinitionVersion[];
  /**
   * The URI to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Publisher network function definition version update request definition. */
export interface NetworkFunctionDefinitionVersionUpdateState {
  /** The network function definition version state. Only the 'Active' and 'Deprecated' states are allowed for updates. Other states are used for internal state transitioning. */
  versionState?: VersionState;
}

/** A list of network service design group resources. */
export interface NetworkServiceDesignGroupListResult {
  /** A list of network service design group. */
  value?: NetworkServiceDesignGroup[];
  /**
   * The URL to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** network service design group properties. */
export interface NetworkServiceDesignGroupPropertiesFormat {
  /**
   * The provisioning state of the network service design groups resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** The network service design group description. */
  description?: string;
}

/** network service design version properties. */
export interface NetworkServiceDesignVersionPropertiesFormat {
  /**
   * The provisioning state of the network service design version resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The network service design version state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly versionState?: VersionState;
  /** The network service design version description. */
  description?: string;
  /** The configuration schemas to used to define the values. */
  configurationGroupSchemaReferences?: {
    [propertyName: string]: ReferencedResource;
  };
  /** The nfvis from the site. */
  nfvisFromSite?: { [propertyName: string]: NfviDetails };
  /** List of resource element template */
  resourceElementTemplates?: ResourceElementTemplateUnion[];
}

/** Reference to another resource. */
export interface ReferencedResource {
  /** Resource ID. */
  id?: string;
}

/** The nfvi details. */
export interface NfviDetails {
  /** The nfvi name. */
  name?: string;
  /** The nfvi type. */
  type?: string;
}

/** The resource element template object. */
export interface ResourceElementTemplate {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  resourceElementType: "ArmResourceDefinition" | "NetworkFunctionDefinition";
  /** Name of the resource element template. */
  name?: string;
  /** The depends on profile. */
  dependsOnProfile?: DependsOnProfile;
}

/** Depends on profile definition. */
export interface DependsOnProfile {
  /** Application installation operation dependency. */
  installDependsOn?: string[];
  /** Application deletion operation dependency. */
  uninstallDependsOn?: string[];
  /** Application update operation dependency. */
  updateDependsOn?: string[];
}

/** A list of network service design versions. */
export interface NetworkServiceDesignVersionListResult {
  /** A list of network service design versions. */
  value?: NetworkServiceDesignVersion[];
  /**
   * The URI to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Publisher network service design version update request definition. */
export interface NetworkServiceDesignVersionUpdateState {
  /** The network service design version state. */
  versionState?: VersionState;
}

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** A list of publishers. */
export interface PublisherListResult {
  /** A list of publishers. */
  value?: Publisher[];
  /**
   * The URL to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** publisher properties. */
export interface PublisherPropertiesFormat {
  /**
   * The provisioning state of the publisher resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** The publisher scope. */
  scope?: PublisherScope;
}

/** A list of artifact stores. */
export interface ArtifactStoreListResult {
  /** A list of artifact stores. */
  value?: ArtifactStore[];
  /**
   * The URL to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Artifact store properties. */
export interface ArtifactStorePropertiesFormat {
  /**
   * The provisioning state of the application groups resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** The artifact store type. */
  storeType?: ArtifactStoreType;
  /** The replication strategy. */
  replicationStrategy?: ArtifactReplicationStrategy;
  managedResourceGroupConfiguration?: ArtifactStorePropertiesFormatManagedResourceGroupConfiguration;
  /**
   * The created storage resource id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly storageResourceId?: string;
}

export interface ArtifactStorePropertiesFormatManagedResourceGroupConfiguration {
  /** The managed resource group name. */
  name?: string;
  /** The managed resource group location. */
  location?: string;
}

/** A list of artifact manifests. */
export interface ArtifactManifestListResult {
  /** A list of artifact manifests. */
  value?: ArtifactManifest[];
  /**
   * The URI to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Artifact manifest properties. */
export interface ArtifactManifestPropertiesFormat {
  /**
   * The provisioning state of the ArtifactManifest resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The artifact manifest state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly artifactManifestState?: ArtifactManifestState;
  /** The artifacts list. */
  artifacts?: ManifestArtifactFormat[];
}

/** Manifest artifact properties. */
export interface ManifestArtifactFormat {
  /** The artifact name */
  artifactName?: string;
  /** The artifact type. */
  artifactType?: ArtifactType;
  /** The artifact version. */
  artifactVersion?: string;
}

/** The artifact manifest credential definition. */
export interface ArtifactAccessCredential {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  credentialType:
    | "AzureContainerRegistryScopedToken"
    | "AzureStorageAccountToken";
}

/** The artifact manifest updating request payload. Only the 'Uploaded' state is allowed for updates. Other states are used for internal state transitioning. */
export interface ArtifactManifestUpdateState {
  /** The artifact manifest state. */
  artifactManifestState?: ArtifactManifestState;
}

/** The proxy artifact list result. */
export interface ProxyArtifactOverviewListResult {
  /** A list of available proxy artifacts. */
  value?: ProxyArtifactListOverview[];
  /**
   * The URL to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** The proxy artifact list result. */
export interface ProxyArtifactVersionsOverviewListResult {
  /** A list of available proxy artifacts. */
  value?: ProxyArtifactVersionsListOverview[];
  /**
   * The URL to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

export interface ProxyArtifactOverviewPropertiesValue {
  /** The artifact type. */
  artifactType?: ArtifactType;
  /** The artifact version. */
  artifactVersion?: string;
  /** The artifact state */
  artifactState?: ArtifactState;
}

/** The artifact updating request payload. */
export interface ArtifactChangeState {
  /** Artifact update state properties. */
  properties?: ArtifactChangeStateProperties;
}

/** The artifact update state properties. */
export interface ArtifactChangeStateProperties {
  /** The artifact state */
  artifactState?: ArtifactState;
}

/** Site properties. */
export interface SitePropertiesFormat {
  /**
   * The provisioning state of the site resource. **TODO**: Confirm if this is needed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** List of NFVIs */
  nfvis?: NFVIsUnion[];
  /**
   * The list of site network services on the site.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly siteNetworkServiceReferences?: ReferencedResource[];
}

/** The NFVI object. */
export interface NFVIs {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  nfviType: "AzureCore" | "AzureArcKubernetes" | "AzureOperatorNexus";
  /** Name of the nfvi. */
  name?: string;
}

/** Response for sites API service call. */
export interface SiteListResult {
  /** A list of sites in a resource group. */
  value?: Site[];
  /**
   * The URL to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Site network service properties. */
export interface SiteNetworkServicePropertiesFormat {
  /**
   * The provisioning state of the site network service resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Managed resource group configuration. */
  managedResourceGroupConfiguration?: ManagedResourceGroupConfiguration;
  /** The site details */
  siteReference?: ReferencedResource;
  /**
   * The publisher name for the site network service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly publisherName?: string;
  /**
   * The scope of the publisher.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly publisherScope?: PublisherScope;
  /**
   * The network service design group name for the site network service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkServiceDesignGroupName?: string;
  /**
   * The network service design version for the site network service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkServiceDesignVersionName?: string;
  /**
   * The location of the network service design offering.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkServiceDesignVersionOfferingLocation?: string;
  /** The network service design version resource reference. */
  networkServiceDesignVersionResourceReference?: DeploymentResourceIdReferenceUnion;
  /** The goal state of the site network service resource. This has references to the configuration group value objects that describe the desired state of the site network service. */
  desiredStateConfigurationGroupValueReferences?: {
    [propertyName: string]: ReferencedResource;
  };
  /**
   * The network service design version for the site network service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastStateNetworkServiceDesignVersionName?: string;
  /**
   * The last state of the site network service resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastStateConfigurationGroupValueReferences?: {
    [propertyName: string]: ReferencedResource;
  };
}

/** Managed resource group configuration. */
export interface ManagedResourceGroupConfiguration {
  /** Managed resource group name. */
  name?: string;
  /** Managed resource group location. */
  location?: string;
}

/** Sku, to be associated with a SiteNetworkService. */
export interface Sku {
  /** Name of this Sku */
  name: SkuName;
  /**
   * The SKU tier based on the SKU name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tier?: SkuTier;
}

/** Response for site network services API service call. */
export interface SiteNetworkServiceListResult {
  /** A list of site network services in a resource group. */
  value?: SiteNetworkService[];
  /**
   * The URL to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Reference to an Azure ARC custom location resource. */
export interface CustomLocationResourceId {
  /** Azure ARC custom location resource ID. */
  id?: string;
}

/** Network function application definition. */
export interface NetworkFunctionApplication {
  /** The name of the network function application. */
  name?: string;
  /** Depends on profile definition. */
  dependsOnProfile?: DependsOnProfile;
}

/** Artifact profile properties. */
export interface ArtifactProfile {
  /** The reference to artifact store. */
  artifactStore?: ReferencedResource;
}

/** Mapping rule profile properties. */
export interface MappingRuleProfile {
  /** The application enablement. */
  applicationEnablement?: ApplicationEnablement;
}

/** The azure storage account container credential definition. */
export interface AzureStorageAccountContainerCredential {
  /** The storage account container name */
  containerName?: string;
  /** The storage account container sas uri */
  containerSasUri?: string;
}

/** Containerized network function template. */
export interface ContainerizedNetworkFunctionTemplate {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  nfviType: "AzureArcKubernetes";
}

/** Virtual network function template. */
export interface VirtualNetworkFunctionTemplate {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  nfviType: "AzureCore" | "AzureOperatorNexus";
}

/** Helm artifact profile. */
export interface HelmArtifactProfile {
  /** Helm package name. */
  helmPackageName?: string;
  /** Helm package version range. */
  helmPackageVersionRange?: string;
  /** The registry values path list. */
  registryValuesPaths?: string[];
  /** The image pull secrets values path list. */
  imagePullSecretsValuesPaths?: string[];
}

/** Helm mapping rule profile */
export interface HelmMappingRuleProfile {
  /** Helm release namespace. */
  releaseNamespace?: string;
  /** Helm release name. */
  releaseName?: string;
  /** Helm package version. */
  helmPackageVersion?: string;
  /** Helm release values. */
  values?: string;
  /** The helm deployment options */
  options?: HelmMappingRuleProfileOptions;
}

/** The helm deployment options */
export interface HelmMappingRuleProfileOptions {
  /** The helm deployment install options */
  installOptions?: HelmInstallOptions;
  /** The helm deployment upgrade options */
  upgradeOptions?: HelmUpgradeOptions;
}

/** The helm deployment install options */
export interface HelmInstallOptions {
  /** The helm deployment atomic options */
  atomic?: string;
  /** The helm deployment wait options */
  wait?: string;
  /** The helm deployment timeout options */
  timeout?: string;
}

/** The helm deployment install options */
export interface HelmUpgradeOptions {
  /** The helm deployment atomic options */
  atomic?: string;
  /** The helm deployment wait options */
  wait?: string;
  /** The helm deployment timeout options */
  timeout?: string;
}

/** Vhd artifact profile. */
export interface VhdImageArtifactProfile {
  /** Vhd name. */
  vhdName?: string;
  /** Vhd version. */
  vhdVersion?: string;
}

/** Vhd mapping rule profile */
export interface VhdImageMappingRuleProfile {
  /** List of values. */
  userConfiguration?: string;
}

/** Template artifact profile. */
export interface ArmTemplateArtifactProfile {
  /** Template name. */
  templateName?: string;
  /** Template version. */
  templateVersion?: string;
}

/** Template mapping rule profile */
export interface ArmTemplateMappingRuleProfile {
  /** List of template parameters. */
  templateParameters?: string;
}

/** Image artifact profile. */
export interface ImageArtifactProfile {
  /** Image name. */
  imageName?: string;
  /** Image version. */
  imageVersion?: string;
}

/** Image mapping rule profile */
export interface ImageMappingRuleProfile {
  /** List of values. */
  userConfiguration?: string;
}

/** The arm template RE. */
export interface ArmResourceDefinitionResourceElementTemplate {
  /** The template type. */
  templateType?: TemplateType;
  /** Name and value pairs that define the parameter values. It can be  a well formed escaped JSON string. */
  parameterValues?: string;
  /** Artifact profile properties. */
  artifactProfile?: NSDArtifactProfile;
}

/** Artifact profile properties. */
export interface NSDArtifactProfile {
  /** The artifact store resource id */
  artifactStoreReference?: ReferencedResource;
  /** Artifact name. */
  artifactName?: string;
  /** Artifact version. */
  artifactVersion?: string;
}

/** Proxy Artifact overview properties. */
export interface ProxyArtifactOverviewPropertiesFormat {
  /** The proxy artifact overview properties. */
  artifactVersions?: ProxyArtifactOverviewPropertiesValue[];
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** The ConfigurationValue with secrets. */
export interface ConfigurationValueWithSecrets
  extends ConfigurationGroupValuePropertiesFormat {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  configurationType: "Secret";
  /** Name and value pairs that define the configuration value secrets. It can be a well formed escaped JSON string. */
  secretConfigurationValue?: string;
}

/** The ConfigurationValue with no secrets. */
export interface ConfigurationValueWithoutSecrets
  extends ConfigurationGroupValuePropertiesFormat {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  configurationType: "Open";
  /** Name and value pairs that define the configuration value. It can be a well formed escaped JSON string. */
  configurationValue?: string;
}

/** Secret deployment resource id reference. */
export interface SecretDeploymentResourceReference
  extends DeploymentResourceIdReference {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  idType: "Secret";
  /** Resource ID. */
  id?: string;
}

/** Non secret deployment resource id reference. */
export interface OpenDeploymentResourceReference
  extends DeploymentResourceIdReference {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  idType: "Open";
  /** Resource ID. */
  id?: string;
}

/** NetworkFunction with secrets. */
export interface NetworkFunctionValueWithSecrets
  extends NetworkFunctionPropertiesFormat {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  configurationType: "Secret";
  /** The JSON-serialized secret deployment values from the user. This contains secrets like passwords,keys etc */
  secretDeploymentValues?: string;
}

/** NetworkFunction with no secrets. */
export interface NetworkFunctionValueWithoutSecrets
  extends NetworkFunctionPropertiesFormat {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  configurationType: "Open";
  /** The JSON-serialized deployment values from the user. */
  deploymentValues?: string;
}

/** Containerized network function network function definition version properties. */
export interface ContainerizedNetworkFunctionDefinitionVersion
  extends NetworkFunctionDefinitionVersionPropertiesFormat {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  networkFunctionType: "ContainerizedNetworkFunction";
  /** Containerized network function template. */
  networkFunctionTemplate?: ContainerizedNetworkFunctionTemplateUnion;
}

/** Virtual network function network function definition version properties. */
export interface VirtualNetworkFunctionDefinitionVersion
  extends NetworkFunctionDefinitionVersionPropertiesFormat {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  networkFunctionType: "VirtualNetworkFunction";
  /** Virtual network function template. */
  networkFunctionTemplate?: VirtualNetworkFunctionTemplateUnion;
}

/** The arm resource definition resource element template details. */
export interface ArmResourceDefinitionResourceElementTemplateDetails
  extends ResourceElementTemplate {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  resourceElementType: "ArmResourceDefinition";
  /** The resource element template type. */
  configuration?: ArmResourceDefinitionResourceElementTemplate;
}

/** The network function definition resource element template details. */
export interface NetworkFunctionDefinitionResourceElementTemplateDetails
  extends ResourceElementTemplate {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  resourceElementType: "NetworkFunctionDefinition";
  /** The resource element template type. */
  configuration?: ArmResourceDefinitionResourceElementTemplate;
}

/** The azure container registry scoped token credential definition. */
export interface AzureContainerRegistryScopedTokenCredential
  extends ArtifactAccessCredential {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  credentialType: "AzureContainerRegistryScopedToken";
  /** The username of the credential. */
  username?: string;
  /** The credential value. */
  acrToken?: string;
  /** The Acr server url */
  acrServerUrl?: string;
  /** The repositories that could be accessed using the current credential. */
  repositories?: string[];
  /** The UTC time when credential will expire. */
  expiry?: Date;
}

/** The azure storage account credential definition. */
export interface AzureStorageAccountCredential
  extends ArtifactAccessCredential {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  credentialType: "AzureStorageAccountToken";
  /** The storage account Id */
  storageAccountId?: string;
  /** The containers that could be accessed using the current credential. */
  containerCredentials?: AzureStorageAccountContainerCredential[];
  /** The UTC time when credential will expire. */
  expiry?: Date;
}

/** The Azure Core NFVI detail. */
export interface AzureCoreNfviDetails extends NFVIs {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  nfviType: "AzureCore";
  /** Location of the Azure core. */
  location?: string;
}

/** The AzureArcK8sCluster NFVI detail. */
export interface AzureArcK8SClusterNfviDetails extends NFVIs {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  nfviType: "AzureArcKubernetes";
  /** The reference to the custom location. */
  customLocationReference?: ReferencedResource;
}

/** The AzureOperatorNexusCluster NFVI detail. */
export interface AzureOperatorNexusClusterNfviDetails extends NFVIs {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  nfviType: "AzureOperatorNexus";
  /** The reference to the custom location. */
  customLocationReference?: ReferencedResource;
}

/** Azure arc kubernetes network function application definition. */
export interface AzureArcKubernetesNetworkFunctionApplication
  extends NetworkFunctionApplication {
  /** The artifact type. */
  artifactType: AzureArcKubernetesArtifactType;
}

/** Azure virtual network function application definition. */
export interface AzureCoreNetworkFunctionApplication
  extends NetworkFunctionApplication {
  /** The artifact type. */
  artifactType: AzureCoreArtifactType;
}

/** Azure Operator Distributed Services network function application definition. */
export interface AzureOperatorNexusNetworkFunctionApplication
  extends NetworkFunctionApplication {
  /** The artifact type. */
  artifactType: AzureOperatorNexusArtifactType;
}

/** Azure arc kubernetes artifact profile properties. */
export interface AzureArcKubernetesArtifactProfile extends ArtifactProfile {
  /** Helm artifact profile. */
  helmArtifactProfile?: HelmArtifactProfile;
}

/** Azure vhd artifact profile properties. */
export interface AzureCoreVhdImageArtifactProfile extends ArtifactProfile {
  /** Vhd artifact profile. */
  vhdArtifactProfile?: VhdImageArtifactProfile;
}

/** Azure template artifact profile properties. */
export interface AzureCoreArmTemplateArtifactProfile extends ArtifactProfile {
  /** Template artifact profile. */
  templateArtifactProfile?: ArmTemplateArtifactProfile;
}

/** Azure Operator Distributed Services image artifact profile properties. */
export interface AzureOperatorNexusImageArtifactProfile
  extends ArtifactProfile {
  /** Image artifact profile. */
  imageArtifactProfile?: ImageArtifactProfile;
}

/** Azure Operator Distributed Services vhd artifact profile properties. */
export interface AzureOperatorNexusArmTemplateArtifactProfile
  extends ArtifactProfile {
  /** Template artifact profile. */
  templateArtifactProfile?: ArmTemplateArtifactProfile;
}

/** Azure arc kubernetes deploy mapping rule profile. */
export interface AzureArcKubernetesDeployMappingRuleProfile
  extends MappingRuleProfile {
  /** The helm mapping rule profile. */
  helmMappingRuleProfile?: HelmMappingRuleProfile;
}

/** Azure vhd deploy mapping rule profile. */
export interface AzureCoreVhdImageDeployMappingRuleProfile
  extends MappingRuleProfile {
  /** The vhd mapping rule profile. */
  vhdImageMappingRuleProfile?: VhdImageMappingRuleProfile;
}

/** Azure template deploy mapping rule profile. */
export interface AzureCoreArmTemplateDeployMappingRuleProfile
  extends MappingRuleProfile {
  /** The template mapping rule profile. */
  templateMappingRuleProfile?: ArmTemplateMappingRuleProfile;
}

/** Azure Operator Distributed Services image deploy mapping rule profile. */
export interface AzureOperatorNexusImageDeployMappingRuleProfile
  extends MappingRuleProfile {
  /** The vhd mapping rule profile. */
  imageMappingRuleProfile?: ImageMappingRuleProfile;
}

/** Azure Operator Distributed Services template deploy mapping rule profile. */
export interface AzureOperatorNexusArmTemplateDeployMappingRuleProfile
  extends MappingRuleProfile {
  /** The template mapping rule profile. */
  templateMappingRuleProfile?: ArmTemplateMappingRuleProfile;
}

/** Azure Arc kubernetes network function template. */
export interface AzureArcKubernetesNetworkFunctionTemplate
  extends ContainerizedNetworkFunctionTemplate {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  nfviType: "AzureArcKubernetes";
  /** Network function applications. */
  networkFunctionApplications?: AzureArcKubernetesNetworkFunctionApplicationUnion[];
}

/** Azure virtual network function template. */
export interface AzureCoreNetworkFunctionTemplate
  extends VirtualNetworkFunctionTemplate {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  nfviType: "AzureCore";
  /** Network function applications. */
  networkFunctionApplications?: AzureCoreNetworkFunctionApplicationUnion[];
}

/** Azure Operator Distributed Services network function template. */
export interface AzureOperatorNexusNetworkFunctionTemplate
  extends VirtualNetworkFunctionTemplate {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  nfviType: "AzureOperatorNexus";
  /** Network function applications. */
  networkFunctionApplications?: AzureOperatorNexusNetworkFunctionApplicationUnion[];
}

/** Configuration group schema resource. */
export interface ConfigurationGroupSchema extends TrackedResource {
  /** Configuration group schema properties. */
  properties?: ConfigurationGroupSchemaPropertiesFormat;
}

/** Hybrid configuration group value resource. */
export interface ConfigurationGroupValue extends TrackedResource {
  /** Hybrid configuration group value properties. */
  properties?: ConfigurationGroupValuePropertiesFormatUnion;
}

/** Network function resource response. */
export interface NetworkFunction extends TrackedResource {
  /** Network function properties. */
  properties?: NetworkFunctionPropertiesFormatUnion;
  /** A unique read-only string that changes whenever the resource is updated. */
  etag?: string;
  /** The managed identity of the network function. */
  identity?: ManagedServiceIdentity;
}

/** Network function definition group resource. */
export interface NetworkFunctionDefinitionGroup extends TrackedResource {
  /** Network function definition group properties. */
  properties?: NetworkFunctionDefinitionGroupPropertiesFormat;
}

/** Network function definition version. */
export interface NetworkFunctionDefinitionVersion extends TrackedResource {
  /** Network function definition version properties. */
  properties?: NetworkFunctionDefinitionVersionPropertiesFormatUnion;
}

/** network service design group resource. */
export interface NetworkServiceDesignGroup extends TrackedResource {
  /** network service design group properties. */
  properties?: NetworkServiceDesignGroupPropertiesFormat;
}

/** network service design version. */
export interface NetworkServiceDesignVersion extends TrackedResource {
  /** network service design version properties. */
  properties?: NetworkServiceDesignVersionPropertiesFormat;
}

/** publisher resource. */
export interface Publisher extends TrackedResource {
  /** Publisher properties. */
  properties?: PublisherPropertiesFormat;
  /** The managed identity of the publisher, if configured. */
  identity?: ManagedServiceIdentity;
}

/** Artifact store properties. */
export interface ArtifactStore extends TrackedResource {
  /** ArtifactStores properties. */
  properties?: ArtifactStorePropertiesFormat;
}

/** Artifact manifest properties. */
export interface ArtifactManifest extends TrackedResource {
  /** Artifact manifest properties. */
  properties?: ArtifactManifestPropertiesFormat;
}

/** Site resource. */
export interface Site extends TrackedResource {
  /** Site properties. */
  properties?: SitePropertiesFormat;
}

/** Site network service resource. */
export interface SiteNetworkService extends TrackedResource {
  /** Site network service properties. */
  properties?: SiteNetworkServicePropertiesFormat;
  /** The managed identity of the Site network service, if configured. */
  identity?: ManagedServiceIdentity;
  /** Sku of the site network service. */
  sku?: Sku;
}

/** The component sub resource. */
export interface Component extends ProxyResource {
  /** The component properties. */
  properties?: ComponentProperties;
}

/** The proxy artifact overview. */
export interface ProxyArtifactListOverview extends ProxyResource {}

/** The proxy artifact overview. */
export interface ProxyArtifactVersionsListOverview extends ProxyResource {
  /**
   * Proxy Artifact overview properties.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly properties?: ProxyArtifactOverviewPropertiesValue;
}

/** The proxy artifact overview. */
export interface ProxyArtifactOverview extends ProxyResource {
  /**
   * Proxy Artifact properties overview.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly properties?: ProxyArtifactOverviewPropertiesFormat;
}

/** Azure arc kubernetes helm application configurations. */
export interface AzureArcKubernetesHelmApplication
  extends AzureArcKubernetesNetworkFunctionApplication {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  artifactType: "HelmPackage";
  /** Azure arc kubernetes artifact profile. */
  artifactProfile?: AzureArcKubernetesArtifactProfile;
  /** Deploy mapping rule profile. */
  deployParametersMappingRuleProfile?: AzureArcKubernetesDeployMappingRuleProfile;
}

/** Azure core network function vhd application definition. */
export interface AzureCoreNetworkFunctionVhdApplication
  extends AzureCoreNetworkFunctionApplication {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  artifactType: "VhdImageFile";
  /** Azure vhd image artifact profile. */
  artifactProfile?: AzureCoreVhdImageArtifactProfile;
  /** Deploy mapping rule profile. */
  deployParametersMappingRuleProfile?: AzureCoreVhdImageDeployMappingRuleProfile;
}

/** Azure core network function Template application definition. */
export interface AzureCoreNetworkFunctionArmTemplateApplication
  extends AzureCoreNetworkFunctionApplication {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  artifactType: "ArmTemplate";
  /** Azure template artifact profile. */
  artifactProfile?: AzureCoreArmTemplateArtifactProfile;
  /** Deploy mapping rule profile. */
  deployParametersMappingRuleProfile?: AzureCoreArmTemplateDeployMappingRuleProfile;
}

/** Azure Operator Distributed Services network function image application definition. */
export interface AzureOperatorNexusNetworkFunctionImageApplication
  extends AzureOperatorNexusNetworkFunctionApplication {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  artifactType: "ImageFile";
  /** Azure Operator Distributed Services image artifact profile. */
  artifactProfile?: AzureOperatorNexusImageArtifactProfile;
  /** Deploy mapping rule profile. */
  deployParametersMappingRuleProfile?: AzureOperatorNexusImageDeployMappingRuleProfile;
}

/** Azure Operator Distributed Services network function Template application definition. */
export interface AzureOperatorNexusNetworkFunctionArmTemplateApplication
  extends AzureOperatorNexusNetworkFunctionApplication {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  artifactType: "ArmTemplate";
  /** Azure Operator Distributed Services Template artifact profile. */
  artifactProfile?: AzureOperatorNexusArmTemplateArtifactProfile;
  /** Deploy mapping rule profile. */
  deployParametersMappingRuleProfile?: AzureOperatorNexusArmTemplateDeployMappingRuleProfile;
}

/** Defines headers for ConfigurationGroupSchemas_delete operation. */
export interface ConfigurationGroupSchemasDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for ConfigurationGroupSchemas_updateState operation. */
export interface ConfigurationGroupSchemasUpdateStateHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for ConfigurationGroupValues_delete operation. */
export interface ConfigurationGroupValuesDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for NetworkFunctions_delete operation. */
export interface NetworkFunctionsDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for NetworkFunctions_executeRequest operation. */
export interface NetworkFunctionsExecuteRequestHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for NetworkFunctionDefinitionGroups_delete operation. */
export interface NetworkFunctionDefinitionGroupsDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for NetworkFunctionDefinitionVersions_delete operation. */
export interface NetworkFunctionDefinitionVersionsDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for NetworkFunctionDefinitionVersions_updateState operation. */
export interface NetworkFunctionDefinitionVersionsUpdateStateHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for NetworkServiceDesignGroups_delete operation. */
export interface NetworkServiceDesignGroupsDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for NetworkServiceDesignVersions_delete operation. */
export interface NetworkServiceDesignVersionsDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for NetworkServiceDesignVersions_updateState operation. */
export interface NetworkServiceDesignVersionsUpdateStateHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for Publishers_delete operation. */
export interface PublishersDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for ArtifactStores_delete operation. */
export interface ArtifactStoresDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for ArtifactManifests_delete operation. */
export interface ArtifactManifestsDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for ArtifactManifests_updateState operation. */
export interface ArtifactManifestsUpdateStateHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for ProxyArtifact_updateState operation. */
export interface ProxyArtifactUpdateStateHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for Sites_delete operation. */
export interface SitesDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for SiteNetworkServices_delete operation. */
export interface SiteNetworkServicesDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Unknown */
  Unknown = "Unknown",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Accepted */
  Accepted = "Accepted",
  /** Deleting */
  Deleting = "Deleting",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
  /** Deleted */
  Deleted = "Deleted",
  /** Converging */
  Converging = "Converging"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Succeeded** \
 * **Accepted** \
 * **Deleting** \
 * **Failed** \
 * **Canceled** \
 * **Deleted** \
 * **Converging**
 */
export type ProvisioningState = string;

/** Known values of {@link VersionState} that the service accepts. */
export enum KnownVersionState {
  /** Unknown */
  Unknown = "Unknown",
  /** Preview */
  Preview = "Preview",
  /** Active */
  Active = "Active",
  /** Deprecated */
  Deprecated = "Deprecated",
  /** Validating */
  Validating = "Validating",
  /** ValidationFailed */
  ValidationFailed = "ValidationFailed"
}

/**
 * Defines values for VersionState. \
 * {@link KnownVersionState} can be used interchangeably with VersionState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Preview** \
 * **Active** \
 * **Deprecated** \
 * **Validating** \
 * **ValidationFailed**
 */
export type VersionState = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link PublisherScope} that the service accepts. */
export enum KnownPublisherScope {
  /** Unknown */
  Unknown = "Unknown",
  /** Private */
  Private = "Private"
}

/**
 * Defines values for PublisherScope. \
 * {@link KnownPublisherScope} can be used interchangeably with PublisherScope,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Private**
 */
export type PublisherScope = string;

/** Known values of {@link IdType} that the service accepts. */
export enum KnownIdType {
  /** Unknown */
  Unknown = "Unknown",
  /** Open */
  Open = "Open",
  /** Secret */
  Secret = "Secret"
}

/**
 * Defines values for IdType. \
 * {@link KnownIdType} can be used interchangeably with IdType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Open** \
 * **Secret**
 */
export type IdType = string;

/** Known values of {@link ConfigurationGroupValueConfigurationType} that the service accepts. */
export enum KnownConfigurationGroupValueConfigurationType {
  /** Unknown */
  Unknown = "Unknown",
  /** Secret */
  Secret = "Secret",
  /** Open */
  Open = "Open"
}

/**
 * Defines values for ConfigurationGroupValueConfigurationType. \
 * {@link KnownConfigurationGroupValueConfigurationType} can be used interchangeably with ConfigurationGroupValueConfigurationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Secret** \
 * **Open**
 */
export type ConfigurationGroupValueConfigurationType = string;

/** Known values of {@link NfviType} that the service accepts. */
export enum KnownNfviType {
  /** Unknown */
  Unknown = "Unknown",
  /** AzureArcKubernetes */
  AzureArcKubernetes = "AzureArcKubernetes",
  /** AzureCore */
  AzureCore = "AzureCore",
  /** AzureOperatorNexus */
  AzureOperatorNexus = "AzureOperatorNexus"
}

/**
 * Defines values for NfviType. \
 * {@link KnownNfviType} can be used interchangeably with NfviType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **AzureArcKubernetes** \
 * **AzureCore** \
 * **AzureOperatorNexus**
 */
export type NfviType = string;

/** Known values of {@link NetworkFunctionConfigurationType} that the service accepts. */
export enum KnownNetworkFunctionConfigurationType {
  /** Unknown */
  Unknown = "Unknown",
  /** Secret */
  Secret = "Secret",
  /** Open */
  Open = "Open"
}

/**
 * Defines values for NetworkFunctionConfigurationType. \
 * {@link KnownNetworkFunctionConfigurationType} can be used interchangeably with NetworkFunctionConfigurationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Secret** \
 * **Open**
 */
export type NetworkFunctionConfigurationType = string;

/** Known values of {@link ManagedServiceIdentityType} that the service accepts. */
export enum KnownManagedServiceIdentityType {
  /** None */
  None = "None",
  /** SystemAssigned */
  SystemAssigned = "SystemAssigned",
  /** UserAssigned */
  UserAssigned = "UserAssigned",
  /** SystemAssignedUserAssigned */
  SystemAssignedUserAssigned = "SystemAssigned,UserAssigned"
}

/**
 * Defines values for ManagedServiceIdentityType. \
 * {@link KnownManagedServiceIdentityType} can be used interchangeably with ManagedServiceIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **SystemAssigned** \
 * **UserAssigned** \
 * **SystemAssigned,UserAssigned**
 */
export type ManagedServiceIdentityType = string;

/** Known values of {@link HttpMethod} that the service accepts. */
export enum KnownHttpMethod {
  /** Unknown */
  Unknown = "Unknown",
  /** Post */
  Post = "Post",
  /** Put */
  Put = "Put",
  /** Get */
  Get = "Get",
  /** Patch */
  Patch = "Patch",
  /** Delete */
  Delete = "Delete"
}

/**
 * Defines values for HttpMethod. \
 * {@link KnownHttpMethod} can be used interchangeably with HttpMethod,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Post** \
 * **Put** \
 * **Get** \
 * **Patch** \
 * **Delete**
 */
export type HttpMethod = string;

/** Known values of {@link Status} that the service accepts. */
export enum KnownStatus {
  /** Unknown */
  Unknown = "Unknown",
  /** Deployed */
  Deployed = "Deployed",
  /** Uninstalled */
  Uninstalled = "Uninstalled",
  /** Superseded */
  Superseded = "Superseded",
  /** Failed */
  Failed = "Failed",
  /** Uninstalling */
  Uninstalling = "Uninstalling",
  /** PendingInstall */
  PendingInstall = "Pending-Install",
  /** PendingUpgrade */
  PendingUpgrade = "Pending-Upgrade",
  /** PendingRollback */
  PendingRollback = "Pending-Rollback",
  /** Downloading */
  Downloading = "Downloading",
  /** Installing */
  Installing = "Installing",
  /** Reinstalling */
  Reinstalling = "Reinstalling",
  /** Rollingback */
  Rollingback = "Rollingback",
  /** Upgrading */
  Upgrading = "Upgrading"
}

/**
 * Defines values for Status. \
 * {@link KnownStatus} can be used interchangeably with Status,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Deployed** \
 * **Uninstalled** \
 * **Superseded** \
 * **Failed** \
 * **Uninstalling** \
 * **Pending-Install** \
 * **Pending-Upgrade** \
 * **Pending-Rollback** \
 * **Downloading** \
 * **Installing** \
 * **Reinstalling** \
 * **Rollingback** \
 * **Upgrading**
 */
export type Status = string;

/** Known values of {@link PodStatus} that the service accepts. */
export enum KnownPodStatus {
  /** Unknown */
  Unknown = "Unknown",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Running */
  Running = "Running",
  /** Pending */
  Pending = "Pending",
  /** Terminating */
  Terminating = "Terminating",
  /** NotReady */
  NotReady = "NotReady"
}

/**
 * Defines values for PodStatus. \
 * {@link KnownPodStatus} can be used interchangeably with PodStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Succeeded** \
 * **Failed** \
 * **Running** \
 * **Pending** \
 * **Terminating** \
 * **NotReady**
 */
export type PodStatus = string;

/** Known values of {@link PodEventType} that the service accepts. */
export enum KnownPodEventType {
  /** Normal */
  Normal = "Normal",
  /** Warning */
  Warning = "Warning"
}

/**
 * Defines values for PodEventType. \
 * {@link KnownPodEventType} can be used interchangeably with PodEventType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Normal** \
 * **Warning**
 */
export type PodEventType = string;

/** Known values of {@link NetworkFunctionType} that the service accepts. */
export enum KnownNetworkFunctionType {
  /** Unknown */
  Unknown = "Unknown",
  /** VirtualNetworkFunction */
  VirtualNetworkFunction = "VirtualNetworkFunction",
  /** ContainerizedNetworkFunction */
  ContainerizedNetworkFunction = "ContainerizedNetworkFunction"
}

/**
 * Defines values for NetworkFunctionType. \
 * {@link KnownNetworkFunctionType} can be used interchangeably with NetworkFunctionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **VirtualNetworkFunction** \
 * **ContainerizedNetworkFunction**
 */
export type NetworkFunctionType = string;

/** Known values of {@link Type} that the service accepts. */
export enum KnownType {
  /** Unknown */
  Unknown = "Unknown",
  /** ArmResourceDefinition */
  ArmResourceDefinition = "ArmResourceDefinition",
  /** NetworkFunctionDefinition */
  NetworkFunctionDefinition = "NetworkFunctionDefinition"
}

/**
 * Defines values for Type. \
 * {@link KnownType} can be used interchangeably with Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **ArmResourceDefinition** \
 * **NetworkFunctionDefinition**
 */
export type Type = string;

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system"
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link ArtifactStoreType} that the service accepts. */
export enum KnownArtifactStoreType {
  /** Unknown */
  Unknown = "Unknown",
  /** AzureContainerRegistry */
  AzureContainerRegistry = "AzureContainerRegistry",
  /** AzureStorageAccount */
  AzureStorageAccount = "AzureStorageAccount"
}

/**
 * Defines values for ArtifactStoreType. \
 * {@link KnownArtifactStoreType} can be used interchangeably with ArtifactStoreType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **AzureContainerRegistry** \
 * **AzureStorageAccount**
 */
export type ArtifactStoreType = string;

/** Known values of {@link ArtifactReplicationStrategy} that the service accepts. */
export enum KnownArtifactReplicationStrategy {
  /** Unknown */
  Unknown = "Unknown",
  /** SingleReplication */
  SingleReplication = "SingleReplication"
}

/**
 * Defines values for ArtifactReplicationStrategy. \
 * {@link KnownArtifactReplicationStrategy} can be used interchangeably with ArtifactReplicationStrategy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **SingleReplication**
 */
export type ArtifactReplicationStrategy = string;

/** Known values of {@link ArtifactManifestState} that the service accepts. */
export enum KnownArtifactManifestState {
  /** Unknown */
  Unknown = "Unknown",
  /** Uploading */
  Uploading = "Uploading",
  /** Uploaded */
  Uploaded = "Uploaded",
  /** Validating */
  Validating = "Validating",
  /** ValidationFailed */
  ValidationFailed = "ValidationFailed",
  /** Succeeded */
  Succeeded = "Succeeded"
}

/**
 * Defines values for ArtifactManifestState. \
 * {@link KnownArtifactManifestState} can be used interchangeably with ArtifactManifestState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Uploading** \
 * **Uploaded** \
 * **Validating** \
 * **ValidationFailed** \
 * **Succeeded**
 */
export type ArtifactManifestState = string;

/** Known values of {@link ArtifactType} that the service accepts. */
export enum KnownArtifactType {
  /** Unknown */
  Unknown = "Unknown",
  /** OCIArtifact */
  OCIArtifact = "OCIArtifact",
  /** VhdImageFile */
  VhdImageFile = "VhdImageFile",
  /** ArmTemplate */
  ArmTemplate = "ArmTemplate",
  /** ImageFile */
  ImageFile = "ImageFile"
}

/**
 * Defines values for ArtifactType. \
 * {@link KnownArtifactType} can be used interchangeably with ArtifactType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **OCIArtifact** \
 * **VhdImageFile** \
 * **ArmTemplate** \
 * **ImageFile**
 */
export type ArtifactType = string;

/** Known values of {@link CredentialType} that the service accepts. */
export enum KnownCredentialType {
  /** Unknown */
  Unknown = "Unknown",
  /** AzureContainerRegistryScopedToken */
  AzureContainerRegistryScopedToken = "AzureContainerRegistryScopedToken",
  /** AzureStorageAccountToken */
  AzureStorageAccountToken = "AzureStorageAccountToken"
}

/**
 * Defines values for CredentialType. \
 * {@link KnownCredentialType} can be used interchangeably with CredentialType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **AzureContainerRegistryScopedToken** \
 * **AzureStorageAccountToken**
 */
export type CredentialType = string;

/** Known values of {@link ArtifactState} that the service accepts. */
export enum KnownArtifactState {
  /** Unknown */
  Unknown = "Unknown",
  /** Preview */
  Preview = "Preview",
  /** Active */
  Active = "Active",
  /** Deprecated */
  Deprecated = "Deprecated"
}

/**
 * Defines values for ArtifactState. \
 * {@link KnownArtifactState} can be used interchangeably with ArtifactState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Preview** \
 * **Active** \
 * **Deprecated**
 */
export type ArtifactState = string;

/** Known values of {@link SkuName} that the service accepts. */
export enum KnownSkuName {
  /** Basic */
  Basic = "Basic",
  /** Standard */
  Standard = "Standard"
}

/**
 * Defines values for SkuName. \
 * {@link KnownSkuName} can be used interchangeably with SkuName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Basic** \
 * **Standard**
 */
export type SkuName = string;

/** Known values of {@link SkuTier} that the service accepts. */
export enum KnownSkuTier {
  /** Basic */
  Basic = "Basic",
  /** Standard */
  Standard = "Standard"
}

/**
 * Defines values for SkuTier. \
 * {@link KnownSkuTier} can be used interchangeably with SkuTier,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Basic** \
 * **Standard**
 */
export type SkuTier = string;

/** Known values of {@link ApplicationEnablement} that the service accepts. */
export enum KnownApplicationEnablement {
  /** Unknown */
  Unknown = "Unknown",
  /** Enabled */
  Enabled = "Enabled",
  /** Disabled */
  Disabled = "Disabled"
}

/**
 * Defines values for ApplicationEnablement. \
 * {@link KnownApplicationEnablement} can be used interchangeably with ApplicationEnablement,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Enabled** \
 * **Disabled**
 */
export type ApplicationEnablement = string;

/** Known values of {@link ContainerizedNetworkFunctionNfviType} that the service accepts. */
export enum KnownContainerizedNetworkFunctionNfviType {
  /** Unknown */
  Unknown = "Unknown",
  /** AzureArcKubernetes */
  AzureArcKubernetes = "AzureArcKubernetes"
}

/**
 * Defines values for ContainerizedNetworkFunctionNfviType. \
 * {@link KnownContainerizedNetworkFunctionNfviType} can be used interchangeably with ContainerizedNetworkFunctionNfviType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **AzureArcKubernetes**
 */
export type ContainerizedNetworkFunctionNfviType = string;

/** Known values of {@link VirtualNetworkFunctionNfviType} that the service accepts. */
export enum KnownVirtualNetworkFunctionNfviType {
  /** Unknown */
  Unknown = "Unknown",
  /** AzureCore */
  AzureCore = "AzureCore",
  /** AzureOperatorNexus */
  AzureOperatorNexus = "AzureOperatorNexus"
}

/**
 * Defines values for VirtualNetworkFunctionNfviType. \
 * {@link KnownVirtualNetworkFunctionNfviType} can be used interchangeably with VirtualNetworkFunctionNfviType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **AzureCore** \
 * **AzureOperatorNexus**
 */
export type VirtualNetworkFunctionNfviType = string;

/** Known values of {@link AzureArcKubernetesArtifactType} that the service accepts. */
export enum KnownAzureArcKubernetesArtifactType {
  /** Unknown */
  Unknown = "Unknown",
  /** HelmPackage */
  HelmPackage = "HelmPackage"
}

/**
 * Defines values for AzureArcKubernetesArtifactType. \
 * {@link KnownAzureArcKubernetesArtifactType} can be used interchangeably with AzureArcKubernetesArtifactType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **HelmPackage**
 */
export type AzureArcKubernetesArtifactType = string;

/** Known values of {@link AzureCoreArtifactType} that the service accepts. */
export enum KnownAzureCoreArtifactType {
  /** Unknown */
  Unknown = "Unknown",
  /** VhdImageFile */
  VhdImageFile = "VhdImageFile",
  /** ArmTemplate */
  ArmTemplate = "ArmTemplate"
}

/**
 * Defines values for AzureCoreArtifactType. \
 * {@link KnownAzureCoreArtifactType} can be used interchangeably with AzureCoreArtifactType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **VhdImageFile** \
 * **ArmTemplate**
 */
export type AzureCoreArtifactType = string;

/** Known values of {@link AzureOperatorNexusArtifactType} that the service accepts. */
export enum KnownAzureOperatorNexusArtifactType {
  /** Unknown */
  Unknown = "Unknown",
  /** ImageFile */
  ImageFile = "ImageFile",
  /** ArmTemplate */
  ArmTemplate = "ArmTemplate"
}

/**
 * Defines values for AzureOperatorNexusArtifactType. \
 * {@link KnownAzureOperatorNexusArtifactType} can be used interchangeably with AzureOperatorNexusArtifactType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **ImageFile** \
 * **ArmTemplate**
 */
export type AzureOperatorNexusArtifactType = string;

/** Known values of {@link TemplateType} that the service accepts. */
export enum KnownTemplateType {
  /** Unknown */
  Unknown = "Unknown",
  /** ArmTemplate */
  ArmTemplate = "ArmTemplate"
}

/**
 * Defines values for TemplateType. \
 * {@link KnownTemplateType} can be used interchangeably with TemplateType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **ArmTemplate**
 */
export type TemplateType = string;

/** Known values of {@link ConfigurationGenerationType} that the service accepts. */
export enum KnownConfigurationGenerationType {
  /** Unknown */
  Unknown = "Unknown",
  /** HandlebarTemplate */
  HandlebarTemplate = "HandlebarTemplate"
}

/**
 * Defines values for ConfigurationGenerationType. \
 * {@link KnownConfigurationGenerationType} can be used interchangeably with ConfigurationGenerationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **HandlebarTemplate**
 */
export type ConfigurationGenerationType = string;

/** Optional parameters. */
export interface ConfigurationGroupSchemasListByPublisherOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByPublisher operation. */
export type ConfigurationGroupSchemasListByPublisherResponse = ConfigurationGroupSchemaListResult;

/** Optional parameters. */
export interface ConfigurationGroupSchemasDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type ConfigurationGroupSchemasDeleteResponse = ConfigurationGroupSchemasDeleteHeaders;

/** Optional parameters. */
export interface ConfigurationGroupSchemasCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ConfigurationGroupSchemasCreateOrUpdateResponse = ConfigurationGroupSchema;

/** Optional parameters. */
export interface ConfigurationGroupSchemasGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ConfigurationGroupSchemasGetResponse = ConfigurationGroupSchema;

/** Optional parameters. */
export interface ConfigurationGroupSchemasUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type ConfigurationGroupSchemasUpdateResponse = ConfigurationGroupSchema;

/** Optional parameters. */
export interface ConfigurationGroupSchemasUpdateStateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the updateState operation. */
export type ConfigurationGroupSchemasUpdateStateResponse = ConfigurationGroupSchemaVersionUpdateState;

/** Optional parameters. */
export interface ConfigurationGroupSchemasListByPublisherNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByPublisherNext operation. */
export type ConfigurationGroupSchemasListByPublisherNextResponse = ConfigurationGroupSchemaListResult;

/** Optional parameters. */
export interface ConfigurationGroupValuesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type ConfigurationGroupValuesDeleteResponse = ConfigurationGroupValuesDeleteHeaders;

/** Optional parameters. */
export interface ConfigurationGroupValuesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ConfigurationGroupValuesGetResponse = ConfigurationGroupValue;

/** Optional parameters. */
export interface ConfigurationGroupValuesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ConfigurationGroupValuesCreateOrUpdateResponse = ConfigurationGroupValue;

/** Optional parameters. */
export interface ConfigurationGroupValuesUpdateTagsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the updateTags operation. */
export type ConfigurationGroupValuesUpdateTagsResponse = ConfigurationGroupValue;

/** Optional parameters. */
export interface ConfigurationGroupValuesListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type ConfigurationGroupValuesListBySubscriptionResponse = ConfigurationGroupValueListResult;

/** Optional parameters. */
export interface ConfigurationGroupValuesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type ConfigurationGroupValuesListByResourceGroupResponse = ConfigurationGroupValueListResult;

/** Optional parameters. */
export interface ConfigurationGroupValuesListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type ConfigurationGroupValuesListBySubscriptionNextResponse = ConfigurationGroupValueListResult;

/** Optional parameters. */
export interface ConfigurationGroupValuesListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type ConfigurationGroupValuesListByResourceGroupNextResponse = ConfigurationGroupValueListResult;

/** Optional parameters. */
export interface NetworkFunctionsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface NetworkFunctionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type NetworkFunctionsGetResponse = NetworkFunction;

/** Optional parameters. */
export interface NetworkFunctionsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type NetworkFunctionsCreateOrUpdateResponse = NetworkFunction;

/** Optional parameters. */
export interface NetworkFunctionsUpdateTagsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the updateTags operation. */
export type NetworkFunctionsUpdateTagsResponse = NetworkFunction;

/** Optional parameters. */
export interface NetworkFunctionsListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type NetworkFunctionsListBySubscriptionResponse = NetworkFunctionListResult;

/** Optional parameters. */
export interface NetworkFunctionsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type NetworkFunctionsListByResourceGroupResponse = NetworkFunctionListResult;

/** Optional parameters. */
export interface NetworkFunctionsExecuteRequestOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface NetworkFunctionsListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type NetworkFunctionsListBySubscriptionNextResponse = NetworkFunctionListResult;

/** Optional parameters. */
export interface NetworkFunctionsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type NetworkFunctionsListByResourceGroupNextResponse = NetworkFunctionListResult;

/** Optional parameters. */
export interface ComponentsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ComponentsGetResponse = Component;

/** Optional parameters. */
export interface ComponentsListByNetworkFunctionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByNetworkFunction operation. */
export type ComponentsListByNetworkFunctionResponse = ComponentListResult;

/** Optional parameters. */
export interface ComponentsListByNetworkFunctionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByNetworkFunctionNext operation. */
export type ComponentsListByNetworkFunctionNextResponse = ComponentListResult;

/** Optional parameters. */
export interface NetworkFunctionDefinitionGroupsListByPublisherOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByPublisher operation. */
export type NetworkFunctionDefinitionGroupsListByPublisherResponse = NetworkFunctionDefinitionGroupListResult;

/** Optional parameters. */
export interface NetworkFunctionDefinitionGroupsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type NetworkFunctionDefinitionGroupsDeleteResponse = NetworkFunctionDefinitionGroupsDeleteHeaders;

/** Optional parameters. */
export interface NetworkFunctionDefinitionGroupsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type NetworkFunctionDefinitionGroupsCreateOrUpdateResponse = NetworkFunctionDefinitionGroup;

/** Optional parameters. */
export interface NetworkFunctionDefinitionGroupsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type NetworkFunctionDefinitionGroupsGetResponse = NetworkFunctionDefinitionGroup;

/** Optional parameters. */
export interface NetworkFunctionDefinitionGroupsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type NetworkFunctionDefinitionGroupsUpdateResponse = NetworkFunctionDefinitionGroup;

/** Optional parameters. */
export interface NetworkFunctionDefinitionGroupsListByPublisherNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByPublisherNext operation. */
export type NetworkFunctionDefinitionGroupsListByPublisherNextResponse = NetworkFunctionDefinitionGroupListResult;

/** Optional parameters. */
export interface NetworkFunctionDefinitionVersionsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type NetworkFunctionDefinitionVersionsDeleteResponse = NetworkFunctionDefinitionVersionsDeleteHeaders;

/** Optional parameters. */
export interface NetworkFunctionDefinitionVersionsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type NetworkFunctionDefinitionVersionsCreateOrUpdateResponse = NetworkFunctionDefinitionVersion;

/** Optional parameters. */
export interface NetworkFunctionDefinitionVersionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type NetworkFunctionDefinitionVersionsGetResponse = NetworkFunctionDefinitionVersion;

/** Optional parameters. */
export interface NetworkFunctionDefinitionVersionsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type NetworkFunctionDefinitionVersionsUpdateResponse = NetworkFunctionDefinitionVersion;

/** Optional parameters. */
export interface NetworkFunctionDefinitionVersionsListByNetworkFunctionDefinitionGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByNetworkFunctionDefinitionGroup operation. */
export type NetworkFunctionDefinitionVersionsListByNetworkFunctionDefinitionGroupResponse = NetworkFunctionDefinitionVersionListResult;

/** Optional parameters. */
export interface NetworkFunctionDefinitionVersionsUpdateStateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the updateState operation. */
export type NetworkFunctionDefinitionVersionsUpdateStateResponse = NetworkFunctionDefinitionVersionUpdateState;

/** Optional parameters. */
export interface NetworkFunctionDefinitionVersionsListByNetworkFunctionDefinitionGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByNetworkFunctionDefinitionGroupNext operation. */
export type NetworkFunctionDefinitionVersionsListByNetworkFunctionDefinitionGroupNextResponse = NetworkFunctionDefinitionVersionListResult;

/** Optional parameters. */
export interface NetworkServiceDesignGroupsListByPublisherOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByPublisher operation. */
export type NetworkServiceDesignGroupsListByPublisherResponse = NetworkServiceDesignGroupListResult;

/** Optional parameters. */
export interface NetworkServiceDesignGroupsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type NetworkServiceDesignGroupsDeleteResponse = NetworkServiceDesignGroupsDeleteHeaders;

/** Optional parameters. */
export interface NetworkServiceDesignGroupsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type NetworkServiceDesignGroupsCreateOrUpdateResponse = NetworkServiceDesignGroup;

/** Optional parameters. */
export interface NetworkServiceDesignGroupsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type NetworkServiceDesignGroupsGetResponse = NetworkServiceDesignGroup;

/** Optional parameters. */
export interface NetworkServiceDesignGroupsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type NetworkServiceDesignGroupsUpdateResponse = NetworkServiceDesignGroup;

/** Optional parameters. */
export interface NetworkServiceDesignGroupsListByPublisherNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByPublisherNext operation. */
export type NetworkServiceDesignGroupsListByPublisherNextResponse = NetworkServiceDesignGroupListResult;

/** Optional parameters. */
export interface NetworkServiceDesignVersionsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type NetworkServiceDesignVersionsDeleteResponse = NetworkServiceDesignVersionsDeleteHeaders;

/** Optional parameters. */
export interface NetworkServiceDesignVersionsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type NetworkServiceDesignVersionsCreateOrUpdateResponse = NetworkServiceDesignVersion;

/** Optional parameters. */
export interface NetworkServiceDesignVersionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type NetworkServiceDesignVersionsGetResponse = NetworkServiceDesignVersion;

/** Optional parameters. */
export interface NetworkServiceDesignVersionsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type NetworkServiceDesignVersionsUpdateResponse = NetworkServiceDesignVersion;

/** Optional parameters. */
export interface NetworkServiceDesignVersionsListByNetworkServiceDesignGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByNetworkServiceDesignGroup operation. */
export type NetworkServiceDesignVersionsListByNetworkServiceDesignGroupResponse = NetworkServiceDesignVersionListResult;

/** Optional parameters. */
export interface NetworkServiceDesignVersionsUpdateStateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the updateState operation. */
export type NetworkServiceDesignVersionsUpdateStateResponse = NetworkServiceDesignVersionUpdateState;

/** Optional parameters. */
export interface NetworkServiceDesignVersionsListByNetworkServiceDesignGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByNetworkServiceDesignGroupNext operation. */
export type NetworkServiceDesignVersionsListByNetworkServiceDesignGroupNextResponse = NetworkServiceDesignVersionListResult;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface PublishersListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type PublishersListBySubscriptionResponse = PublisherListResult;

/** Optional parameters. */
export interface PublishersListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type PublishersListByResourceGroupResponse = PublisherListResult;

/** Optional parameters. */
export interface PublishersDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type PublishersDeleteResponse = PublishersDeleteHeaders;

/** Optional parameters. */
export interface PublishersGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PublishersGetResponse = Publisher;

/** Optional parameters. */
export interface PublishersCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Parameters supplied to the create publisher operation. */
  parameters?: Publisher;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type PublishersCreateOrUpdateResponse = Publisher;

/** Optional parameters. */
export interface PublishersUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Parameters supplied to the create publisher operation. */
  parameters?: TagsObject;
}

/** Contains response data for the update operation. */
export type PublishersUpdateResponse = Publisher;

/** Optional parameters. */
export interface PublishersListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type PublishersListBySubscriptionNextResponse = PublisherListResult;

/** Optional parameters. */
export interface PublishersListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type PublishersListByResourceGroupNextResponse = PublisherListResult;

/** Optional parameters. */
export interface ArtifactStoresListByPublisherOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByPublisher operation. */
export type ArtifactStoresListByPublisherResponse = ArtifactStoreListResult;

/** Optional parameters. */
export interface ArtifactStoresDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type ArtifactStoresDeleteResponse = ArtifactStoresDeleteHeaders;

/** Optional parameters. */
export interface ArtifactStoresCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ArtifactStoresCreateOrUpdateResponse = ArtifactStore;

/** Optional parameters. */
export interface ArtifactStoresGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ArtifactStoresGetResponse = ArtifactStore;

/** Optional parameters. */
export interface ArtifactStoresUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type ArtifactStoresUpdateResponse = ArtifactStore;

/** Optional parameters. */
export interface ArtifactStoresListByPublisherNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByPublisherNext operation. */
export type ArtifactStoresListByPublisherNextResponse = ArtifactStoreListResult;

/** Optional parameters. */
export interface ArtifactManifestsListByArtifactStoreOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByArtifactStore operation. */
export type ArtifactManifestsListByArtifactStoreResponse = ArtifactManifestListResult;

/** Optional parameters. */
export interface ArtifactManifestsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type ArtifactManifestsDeleteResponse = ArtifactManifestsDeleteHeaders;

/** Optional parameters. */
export interface ArtifactManifestsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ArtifactManifestsCreateOrUpdateResponse = ArtifactManifest;

/** Optional parameters. */
export interface ArtifactManifestsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ArtifactManifestsGetResponse = ArtifactManifest;

/** Optional parameters. */
export interface ArtifactManifestsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type ArtifactManifestsUpdateResponse = ArtifactManifest;

/** Optional parameters. */
export interface ArtifactManifestsListCredentialOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listCredential operation. */
export type ArtifactManifestsListCredentialResponse = ArtifactAccessCredentialUnion;

/** Optional parameters. */
export interface ArtifactManifestsUpdateStateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the updateState operation. */
export type ArtifactManifestsUpdateStateResponse = ArtifactManifestUpdateState;

/** Optional parameters. */
export interface ArtifactManifestsListByArtifactStoreNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByArtifactStoreNext operation. */
export type ArtifactManifestsListByArtifactStoreNextResponse = ArtifactManifestListResult;

/** Optional parameters. */
export interface ProxyArtifactListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ProxyArtifactListResponse = ProxyArtifactOverviewListResult;

/** Optional parameters. */
export interface ProxyArtifactListVersionsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listVersions operation. */
export type ProxyArtifactListVersionsResponse = ProxyArtifactVersionsOverviewListResult;

/** Optional parameters. */
export interface ProxyArtifactUpdateStateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the updateState operation. */
export type ProxyArtifactUpdateStateResponse = ProxyArtifactVersionsListOverview;

/** Optional parameters. */
export interface ProxyArtifactListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ProxyArtifactListNextResponse = ProxyArtifactOverviewListResult;

/** Optional parameters. */
export interface ProxyArtifactListVersionsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listVersionsNext operation. */
export type ProxyArtifactListVersionsNextResponse = ProxyArtifactVersionsOverviewListResult;

/** Optional parameters. */
export interface SitesDeleteOptionalParams extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type SitesDeleteResponse = SitesDeleteHeaders;

/** Optional parameters. */
export interface SitesGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SitesGetResponse = Site;

/** Optional parameters. */
export interface SitesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type SitesCreateOrUpdateResponse = Site;

/** Optional parameters. */
export interface SitesUpdateTagsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the updateTags operation. */
export type SitesUpdateTagsResponse = Site;

/** Optional parameters. */
export interface SitesListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type SitesListBySubscriptionResponse = SiteListResult;

/** Optional parameters. */
export interface SitesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type SitesListByResourceGroupResponse = SiteListResult;

/** Optional parameters. */
export interface SitesListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type SitesListBySubscriptionNextResponse = SiteListResult;

/** Optional parameters. */
export interface SitesListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type SitesListByResourceGroupNextResponse = SiteListResult;

/** Optional parameters. */
export interface SiteNetworkServicesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type SiteNetworkServicesDeleteResponse = SiteNetworkServicesDeleteHeaders;

/** Optional parameters. */
export interface SiteNetworkServicesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SiteNetworkServicesGetResponse = SiteNetworkService;

/** Optional parameters. */
export interface SiteNetworkServicesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type SiteNetworkServicesCreateOrUpdateResponse = SiteNetworkService;

/** Optional parameters. */
export interface SiteNetworkServicesUpdateTagsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the updateTags operation. */
export type SiteNetworkServicesUpdateTagsResponse = SiteNetworkService;

/** Optional parameters. */
export interface SiteNetworkServicesListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type SiteNetworkServicesListBySubscriptionResponse = SiteNetworkServiceListResult;

/** Optional parameters. */
export interface SiteNetworkServicesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type SiteNetworkServicesListByResourceGroupResponse = SiteNetworkServiceListResult;

/** Optional parameters. */
export interface SiteNetworkServicesListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type SiteNetworkServicesListBySubscriptionNextResponse = SiteNetworkServiceListResult;

/** Optional parameters. */
export interface SiteNetworkServicesListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type SiteNetworkServicesListByResourceGroupNextResponse = SiteNetworkServiceListResult;

/** Optional parameters. */
export interface HybridNetworkManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
