/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  PeeringServicePrefixesGetOptionalParams,
  PeeringServicePrefixesGetResponse,
  PeeringServicePrefix,
  PeeringServicePrefixesCreateOrUpdateOptionalParams,
  PeeringServicePrefixesCreateOrUpdateResponse,
  PeeringServicePrefixesDeleteOptionalParams
} from "../models";

/** Interface representing a PeeringServicePrefixes. */
export interface PeeringServicePrefixes {
  /**
   * Gets the peering service prefix.
   * @param resourceGroupName The resource group name.
   * @param peeringServiceName The peering service name.
   * @param prefixName The prefix name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    peeringServiceName: string,
    prefixName: string,
    options?: PeeringServicePrefixesGetOptionalParams
  ): Promise<PeeringServicePrefixesGetResponse>;
  /**
   * Creates or updates the peering prefix.
   * @param resourceGroupName The resource group name.
   * @param peeringServiceName The peering service name.
   * @param prefixName The prefix name
   * @param peeringServicePrefix The IP prefix for an peering
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    peeringServiceName: string,
    prefixName: string,
    peeringServicePrefix: PeeringServicePrefix,
    options?: PeeringServicePrefixesCreateOrUpdateOptionalParams
  ): Promise<PeeringServicePrefixesCreateOrUpdateResponse>;
  /**
   * removes the peering prefix.
   * @param resourceGroupName The resource group name.
   * @param peeringServiceName The peering service name.
   * @param prefixName The prefix name
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    peeringServiceName: string,
    prefixName: string,
    options?: PeeringServicePrefixesDeleteOptionalParams
  ): Promise<void>;
}
