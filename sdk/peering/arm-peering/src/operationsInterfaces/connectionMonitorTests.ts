/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ConnectionMonitorTest,
  ConnectionMonitorTestsListByPeeringServiceOptionalParams,
  ConnectionMonitorTestsGetOptionalParams,
  ConnectionMonitorTestsGetResponse,
  ConnectionMonitorTestsCreateOrUpdateOptionalParams,
  ConnectionMonitorTestsCreateOrUpdateResponse,
  ConnectionMonitorTestsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ConnectionMonitorTests. */
export interface ConnectionMonitorTests {
  /**
   * Lists all connection monitor tests under the given subscription, resource group and peering service.
   * @param resourceGroupName The name of the resource group.
   * @param peeringServiceName The name of the peering service.
   * @param options The options parameters.
   */
  listByPeeringService(
    resourceGroupName: string,
    peeringServiceName: string,
    options?: ConnectionMonitorTestsListByPeeringServiceOptionalParams
  ): PagedAsyncIterableIterator<ConnectionMonitorTest>;
  /**
   * Gets an existing connection monitor test with the specified name under the given subscription,
   * resource group and peering service.
   * @param resourceGroupName The name of the resource group.
   * @param peeringServiceName The name of the peering service.
   * @param connectionMonitorTestName The name of the connection monitor test
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    peeringServiceName: string,
    connectionMonitorTestName: string,
    options?: ConnectionMonitorTestsGetOptionalParams
  ): Promise<ConnectionMonitorTestsGetResponse>;
  /**
   * Creates or updates a connection monitor test with the specified name under the given subscription,
   * resource group and peering service.
   * @param resourceGroupName The name of the resource group.
   * @param peeringServiceName The name of the peering service.
   * @param connectionMonitorTestName The name of the connection monitor test
   * @param connectionMonitorTest The properties needed to create a connection monitor test
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    peeringServiceName: string,
    connectionMonitorTestName: string,
    connectionMonitorTest: ConnectionMonitorTest,
    options?: ConnectionMonitorTestsCreateOrUpdateOptionalParams
  ): Promise<ConnectionMonitorTestsCreateOrUpdateResponse>;
  /**
   * Deletes an existing connection monitor test with the specified name under the given subscription,
   * resource group and peering service.
   * @param resourceGroupName The name of the resource group.
   * @param peeringServiceName The name of the peering service.
   * @param connectionMonitorTestName The name of the connection monitor test
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    peeringServiceName: string,
    connectionMonitorTestName: string,
    options?: ConnectionMonitorTestsDeleteOptionalParams
  ): Promise<void>;
}
