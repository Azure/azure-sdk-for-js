/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Peering,
  PeeringsListByResourceGroupOptionalParams,
  PeeringsListBySubscriptionOptionalParams,
  PeeringsGetOptionalParams,
  PeeringsGetResponse,
  PeeringsCreateOrUpdateOptionalParams,
  PeeringsCreateOrUpdateResponse,
  PeeringsDeleteOptionalParams,
  ResourceTags,
  PeeringsUpdateOptionalParams,
  PeeringsUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Peerings. */
export interface Peerings {
  /**
   * Lists all of the peerings under the given subscription and resource group.
   * @param resourceGroupName The name of the resource group.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: PeeringsListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<Peering>;
  /**
   * Lists all of the peerings under the given subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: PeeringsListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<Peering>;
  /**
   * Gets an existing peering with the specified name under the given subscription and resource group.
   * @param resourceGroupName The name of the resource group.
   * @param peeringName The name of the peering.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    peeringName: string,
    options?: PeeringsGetOptionalParams
  ): Promise<PeeringsGetResponse>;
  /**
   * Creates a new peering or updates an existing peering with the specified name under the given
   * subscription and resource group.
   * @param resourceGroupName The name of the resource group.
   * @param peeringName The name of the peering.
   * @param peering The properties needed to create or update a peering.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    peeringName: string,
    peering: Peering,
    options?: PeeringsCreateOrUpdateOptionalParams
  ): Promise<PeeringsCreateOrUpdateResponse>;
  /**
   * Deletes an existing peering with the specified name under the given subscription and resource group.
   * @param resourceGroupName The name of the resource group.
   * @param peeringName The name of the peering.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    peeringName: string,
    options?: PeeringsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Updates tags for a peering with the specified name under the given subscription and resource group.
   * @param resourceGroupName The name of the resource group.
   * @param peeringName The name of the peering.
   * @param tags The resource tags.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    peeringName: string,
    tags: ResourceTags,
    options?: PeeringsUpdateOptionalParams
  ): Promise<PeeringsUpdateResponse>;
}
