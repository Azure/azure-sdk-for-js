/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  PeeringServicePrefix,
  PrefixesListByPeeringServiceOptionalParams,
  PrefixesGetOptionalParams,
  PrefixesGetResponse,
  PrefixesCreateOrUpdateOptionalParams,
  PrefixesCreateOrUpdateResponse,
  PrefixesDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Prefixes. */
export interface Prefixes {
  /**
   * Lists all prefixes under the given subscription, resource group and peering service.
   * @param resourceGroupName The name of the resource group.
   * @param peeringServiceName The name of the peering service.
   * @param options The options parameters.
   */
  listByPeeringService(
    resourceGroupName: string,
    peeringServiceName: string,
    options?: PrefixesListByPeeringServiceOptionalParams
  ): PagedAsyncIterableIterator<PeeringServicePrefix>;
  /**
   * Gets an existing prefix with the specified name under the given subscription, resource group and
   * peering service.
   * @param resourceGroupName The name of the resource group.
   * @param peeringServiceName The name of the peering service.
   * @param prefixName The name of the prefix.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    peeringServiceName: string,
    prefixName: string,
    options?: PrefixesGetOptionalParams
  ): Promise<PrefixesGetResponse>;
  /**
   * Creates a new prefix with the specified name under the given subscription, resource group and
   * peering service.
   * @param resourceGroupName The name of the resource group.
   * @param peeringServiceName The name of the peering service.
   * @param prefixName The name of the prefix.
   * @param peeringServicePrefix The properties needed to create a prefix.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    peeringServiceName: string,
    prefixName: string,
    peeringServicePrefix: PeeringServicePrefix,
    options?: PrefixesCreateOrUpdateOptionalParams
  ): Promise<PrefixesCreateOrUpdateResponse>;
  /**
   * Deletes an existing prefix with the specified name under the given subscription, resource group and
   * peering service.
   * @param resourceGroupName The name of the resource group.
   * @param peeringServiceName The name of the peering service.
   * @param prefixName The name of the prefix.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    peeringServiceName: string,
    prefixName: string,
    options?: PrefixesDeleteOptionalParams
  ): Promise<void>;
}
