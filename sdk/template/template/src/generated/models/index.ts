/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** The result of a list request. */
export interface KeyListResult {
  /** The collection value. */
  items?: Key[];
  /** The URI that can be used to request the next set of paged results. */
  nextLink?: string;
}

export interface Key {
  /**
   * The name of the key.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
}

/** Azure App Configuration error object. */
export interface ErrorModel {
  /** The type of the error. */
  type?: string;
  /** A brief summary of the error. */
  title?: string;
  /** The name of the parameter that resulted in the error. */
  name?: string;
  /** A detailed description of the error. */
  detail?: string;
  /** The HTTP status code that the error maps to. */
  status?: number;
}

/** The result of a list request. */
export interface KeyValueListResult {
  /** The collection value. */
  items?: ConfigurationSetting[];
  /** An identifier representing the returned state of the resource. */
  etag?: string;
  /** The URI that can be used to request the next set of paged results. */
  nextLink?: string;
}

export interface ConfigurationSetting {
  /** The key of the key-value. */
  key?: string;
  /** The label the key-value belongs to. */
  label?: string;
  /** The content type of the value stored within the key-value. */
  contentType?: string;
  /** The value of the key-value. */
  value?: string;
  /** A date representing the last time the key-value was modified. */
  lastModified?: Date;
  /** The tags of the key-value */
  tags?: { [propertyName: string]: string };
  /** Indicates whether the key-value is locked. */
  isReadOnly?: boolean;
  /** A value representing the current state of the resource. */
  etag?: string;
}

/** The result of a snapshot list request. */
export interface SnapshotListResult {
  /** The collection value. */
  items?: Snapshot[];
  /** The URI that can be used to request the next set of paged results. */
  nextLink?: string;
}

export interface Snapshot {
  /**
   * The name of the snapshot.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The current status of the snapshot.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: SnapshotStatus;
  /** A list of filters used to filter the key-values included in the snapshot. */
  filters: KeyValueFilter[];
  /** The composition type describes how the key-values within the snapshot are composed. The 'key' composition type ensures there are no two key-values containing the same key. The 'key_label' composition type ensures there are no two key-values containing the same key and label. */
  compositionType?: CompositionType;
  /**
   * The time that the snapshot was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly created?: Date;
  /**
   * The time that the snapshot will expire.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expires?: Date;
  /** The amount of time, in seconds, that a snapshot will remain in the archived state before expiring. This property is only writable during the creation of a snapshot. If not specified, the default lifetime of key-value revisions will be used. */
  retentionPeriod?: number;
  /**
   * The size in bytes of the snapshot.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly size?: number;
  /**
   * The amount of key-values in the snapshot.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly itemsCount?: number;
  /** The tags of the snapshot. */
  tags?: { [propertyName: string]: string };
  /**
   * A value representing the current state of the snapshot.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly etag?: string;
}

/** Enables filtering of key-values. */
export interface KeyValueFilter {
  /** Filters key-values by their key field. */
  key: string;
  /** Filters key-values by their label field. */
  label?: string;
}

/** Parameters used to update a snapshot. */
export interface SnapshotUpdateParameters {
  /** The desired status of the snapshot. */
  status?: SnapshotStatus;
}

/** The result of a list request. */
export interface LabelListResult {
  /** The collection value. */
  items?: Label[];
  /** The URI that can be used to request the next set of paged results. */
  nextLink?: string;
}

export interface Label {
  /**
   * The name of the label.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
}

/** Details of a long running operation. */
export interface OperationDetails {
  /** The unique id of the operation. */
  id: string;
  /** The current status of the operation */
  status: State;
  /** An error, available when the status is `Failed`, describing why the operation failed. */
  error?: ErrorDetail;
}

/** The details of an error. */
export interface ErrorDetail {
  /** One of a server-defined set of error codes. */
  code: string;
  /** A human-readable representation of the error. */
  message: string;
  /** An array of details about specific errors that led to this reported error. */
  details?: ErrorDetail[];
  /** An object containing more specific information than the current object about the error. */
  innererror?: InnerError;
}

/** An object containing specific information about an error. */
export interface InnerError {
  /** One of a server-defined set of error codes. */
  code?: string;
  /** An object containing more specific information than the current object about the error. */
  innererror?: InnerError;
}

/** Defines headers for GeneratedClient_getKeys operation. */
export interface GeneratedClientGetKeysHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
}

/** Defines headers for GeneratedClient_checkKeys operation. */
export interface GeneratedClientCheckKeysHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
}

/** Defines headers for GeneratedClient_getKeyValues operation. */
export interface GeneratedClientGetKeyValuesHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
  /** An identifier representing the returned state of the resource. */
  eTag?: string;
}

/** Defines headers for GeneratedClient_checkKeyValues operation. */
export interface GeneratedClientCheckKeyValuesHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
  /** An identifier representing the returned state of the resource. */
  eTag?: string;
}

/** Defines headers for GeneratedClient_getKeyValue operation. */
export interface GeneratedClientGetKeyValueHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
  /** An identifier representing the returned state of the resource. */
  eTag?: string;
}

/** Defines headers for GeneratedClient_putKeyValue operation. */
export interface GeneratedClientPutKeyValueHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
  /** An identifier representing the returned state of the resource. */
  eTag?: string;
}

/** Defines headers for GeneratedClient_deleteKeyValue operation. */
export interface GeneratedClientDeleteKeyValueHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
  /** An identifier representing the returned state of the resource. */
  eTag?: string;
}

/** Defines headers for GeneratedClient_checkKeyValue operation. */
export interface GeneratedClientCheckKeyValueHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
  /** An identifier representing the returned state of the resource. */
  eTag?: string;
}

/** Defines headers for GeneratedClient_getSnapshots operation. */
export interface GeneratedClientGetSnapshotsHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
}

/** Defines headers for GeneratedClient_checkSnapshots operation. */
export interface GeneratedClientCheckSnapshotsHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
}

/** Defines headers for GeneratedClient_getSnapshot operation. */
export interface GeneratedClientGetSnapshotHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
  /** An identifier representing the returned state of the resource. */
  eTag?: string;
  /** Includes links to related resources. */
  link?: string;
}

/** Defines headers for GeneratedClient_createSnapshot operation. */
export interface GeneratedClientCreateSnapshotHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
  /** An identifier representing the returned state of the resource. */
  eTag?: string;
  /** Includes links to related resources. */
  link?: string;
  /** The URL to track the status of the long running operation. */
  operationLocation?: string;
}

/** Defines headers for GeneratedClient_updateSnapshot operation. */
export interface GeneratedClientUpdateSnapshotHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
  /** An identifier representing the returned state of the resource. */
  eTag?: string;
  /** Includes links to related resources. */
  link?: string;
}

/** Defines headers for GeneratedClient_checkSnapshot operation. */
export interface GeneratedClientCheckSnapshotHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
  /** An identifier representing the returned state of the resource. */
  eTag?: string;
  /** Includes links to related resources. */
  link?: string;
}

/** Defines headers for GeneratedClient_getLabels operation. */
export interface GeneratedClientGetLabelsHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
}

/** Defines headers for GeneratedClient_checkLabels operation. */
export interface GeneratedClientCheckLabelsHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
}

/** Defines headers for GeneratedClient_putLock operation. */
export interface GeneratedClientPutLockHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
  /** An identifier representing the returned state of the resource. */
  eTag?: string;
}

/** Defines headers for GeneratedClient_deleteLock operation. */
export interface GeneratedClientDeleteLockHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
  /** An identifier representing the returned state of the resource. */
  eTag?: string;
}

/** Defines headers for GeneratedClient_getRevisions operation. */
export interface GeneratedClientGetRevisionsHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
  /** An identifier representing the returned state of the resource. */
  eTag?: string;
}

/** Defines headers for GeneratedClient_checkRevisions operation. */
export interface GeneratedClientCheckRevisionsHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
  /** An identifier representing the returned state of the resource. */
  eTag?: string;
}

/** Defines headers for GeneratedClient_getKeysNext operation. */
export interface GeneratedClientGetKeysNextHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
}

/** Defines headers for GeneratedClient_getKeyValuesNext operation. */
export interface GeneratedClientGetKeyValuesNextHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
  /** An identifier representing the returned state of the resource. */
  eTag?: string;
}

/** Defines headers for GeneratedClient_getSnapshotsNext operation. */
export interface GeneratedClientGetSnapshotsNextHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
}

/** Defines headers for GeneratedClient_getLabelsNext operation. */
export interface GeneratedClientGetLabelsNextHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
}

/** Defines headers for GeneratedClient_getRevisionsNext operation. */
export interface GeneratedClientGetRevisionsNextHeaders {
  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */
  syncToken?: string;
  /** An identifier representing the returned state of the resource. */
  eTag?: string;
}

/** Known values of {@link KeyValueFields} that the service accepts. */
export enum KnownKeyValueFields {
  Key = "key",
  Label = "label",
  ContentType = "content_type",
  Value = "value",
  LastModified = "last_modified",
  Tags = "tags",
  Locked = "locked",
  Etag = "etag"
}

/**
 * Defines values for KeyValueFields. \
 * {@link KnownKeyValueFields} can be used interchangeably with KeyValueFields,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **key** \
 * **label** \
 * **content_type** \
 * **value** \
 * **last_modified** \
 * **tags** \
 * **locked** \
 * **etag**
 */
export type KeyValueFields = string;

/** Known values of {@link SnapshotFields} that the service accepts. */
export enum KnownSnapshotFields {
  Name = "name",
  Status = "status",
  Filters = "filters",
  CompositionType = "composition_type",
  Created = "created",
  Expires = "expires",
  RetentionPeriod = "retention_period",
  Size = "size",
  ItemsCount = "items_count",
  Tags = "tags",
  Etag = "etag"
}

/**
 * Defines values for SnapshotFields. \
 * {@link KnownSnapshotFields} can be used interchangeably with SnapshotFields,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **name** \
 * **status** \
 * **filters** \
 * **composition_type** \
 * **created** \
 * **expires** \
 * **retention_period** \
 * **size** \
 * **items_count** \
 * **tags** \
 * **etag**
 */
export type SnapshotFields = string;

/** Known values of {@link SnapshotStatus} that the service accepts. */
export enum KnownSnapshotStatus {
  Provisioning = "provisioning",
  Ready = "ready",
  Archived = "archived",
  Failed = "failed"
}

/**
 * Defines values for SnapshotStatus. \
 * {@link KnownSnapshotStatus} can be used interchangeably with SnapshotStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **provisioning** \
 * **ready** \
 * **archived** \
 * **failed**
 */
export type SnapshotStatus = string;

/** Known values of {@link CompositionType} that the service accepts. */
export enum KnownCompositionType {
  Key = "key",
  KeyLabel = "key_label"
}

/**
 * Defines values for CompositionType. \
 * {@link KnownCompositionType} can be used interchangeably with CompositionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **key** \
 * **key_label**
 */
export type CompositionType = string;

/** Known values of {@link LabelFields} that the service accepts. */
export enum KnownLabelFields {
  Name = "name"
}

/**
 * Defines values for LabelFields. \
 * {@link KnownLabelFields} can be used interchangeably with LabelFields,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **name**
 */
export type LabelFields = string;
/** Defines values for State. */
export type State =
  | "NotStarted"
  | "Running"
  | "Succeeded"
  | "Failed"
  | "Canceled";

/** Optional parameters. */
export interface GetKeysOptionalParams extends coreClient.OperationOptions {
  /** A filter for the name of the returned keys. */
  name?: string;
  /** Instructs the server to return elements that appear after the element referred to by the specified token. */
  after?: string;
  /** Requests the server to respond with the state of the resource at the specified time. */
  acceptDatetime?: string;
}

/** Contains response data for the getKeys operation. */
export type GetKeysResponse = GeneratedClientGetKeysHeaders & KeyListResult;

/** Optional parameters. */
export interface CheckKeysOptionalParams extends coreClient.OperationOptions {
  /** A filter for the name of the returned keys. */
  name?: string;
  /** Instructs the server to return elements that appear after the element referred to by the specified token. */
  after?: string;
  /** Requests the server to respond with the state of the resource at the specified time. */
  acceptDatetime?: string;
}

/** Contains response data for the checkKeys operation. */
export type CheckKeysResponse = GeneratedClientCheckKeysHeaders;

/** Optional parameters. */
export interface GetKeyValuesOptionalParams
  extends coreClient.OperationOptions {
  /** Instructs the server to return elements that appear after the element referred to by the specified token. */
  after?: string;
  /** Requests the server to respond with the state of the resource at the specified time. */
  acceptDatetime?: string;
  /** A filter used to match keys. */
  key?: string;
  /** A filter used to match labels */
  label?: string;
  /** Used to select what fields are present in the returned resource(s). */
  select?: KeyValueFields[];
  /** A filter used get key-values for a snapshot. The value should be the name of the snapshot. Not valid when used with 'key' and 'label' filters. */
  snapshot?: string;
  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */
  ifMatch?: string;
  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */
  ifNoneMatch?: string;
}

/** Contains response data for the getKeyValues operation. */
export type GetKeyValuesResponse = GeneratedClientGetKeyValuesHeaders &
  KeyValueListResult;

/** Optional parameters. */
export interface CheckKeyValuesOptionalParams
  extends coreClient.OperationOptions {
  /** Instructs the server to return elements that appear after the element referred to by the specified token. */
  after?: string;
  /** Requests the server to respond with the state of the resource at the specified time. */
  acceptDatetime?: string;
  /** A filter used to match keys. */
  key?: string;
  /** A filter used to match labels */
  label?: string;
  /** Used to select what fields are present in the returned resource(s). */
  select?: KeyValueFields[];
  /** A filter used get key-values for a snapshot. Not valid when used with 'key' and 'label' filters. */
  snapshot?: string;
  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */
  ifMatch?: string;
  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */
  ifNoneMatch?: string;
}

/** Contains response data for the checkKeyValues operation. */
export type CheckKeyValuesResponse = GeneratedClientCheckKeyValuesHeaders;

/** Optional parameters. */
export interface GetKeyValueOptionalParams extends coreClient.OperationOptions {
  /** Requests the server to respond with the state of the resource at the specified time. */
  acceptDatetime?: string;
  /** The label of the key-value to retrieve. */
  label?: string;
  /** Used to select what fields are present in the returned resource(s). */
  select?: KeyValueFields[];
  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */
  ifMatch?: string;
  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */
  ifNoneMatch?: string;
}

/** Contains response data for the getKeyValue operation. */
export type GetKeyValueResponse = GeneratedClientGetKeyValueHeaders &
  ConfigurationSetting;

/** Optional parameters. */
export interface PutKeyValueOptionalParams extends coreClient.OperationOptions {
  /** The label of the key-value to create. */
  label?: string;
  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */
  ifMatch?: string;
  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */
  ifNoneMatch?: string;
  /** The key-value to create. */
  entity?: ConfigurationSetting;
}

/** Contains response data for the putKeyValue operation. */
export type PutKeyValueResponse = GeneratedClientPutKeyValueHeaders &
  ConfigurationSetting;

/** Optional parameters. */
export interface DeleteKeyValueOptionalParams
  extends coreClient.OperationOptions {
  /** The label of the key-value to delete. */
  label?: string;
  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */
  ifMatch?: string;
}

/** Contains response data for the deleteKeyValue operation. */
export type DeleteKeyValueResponse = GeneratedClientDeleteKeyValueHeaders &
  ConfigurationSetting;

/** Optional parameters. */
export interface CheckKeyValueOptionalParams
  extends coreClient.OperationOptions {
  /** Requests the server to respond with the state of the resource at the specified time. */
  acceptDatetime?: string;
  /** The label of the key-value to retrieve. */
  label?: string;
  /** Used to select what fields are present in the returned resource(s). */
  select?: KeyValueFields[];
  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */
  ifMatch?: string;
  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */
  ifNoneMatch?: string;
}

/** Contains response data for the checkKeyValue operation. */
export type CheckKeyValueResponse = GeneratedClientCheckKeyValueHeaders;

/** Optional parameters. */
export interface GetSnapshotsOptionalParams
  extends coreClient.OperationOptions {
  /** A filter for the name of the returned snapshots. */
  name?: string;
  /** Instructs the server to return elements that appear after the element referred to by the specified token. */
  after?: string;
  /** Used to select what fields are present in the returned resource(s). */
  select?: SnapshotFields[];
  /** Used to filter returned snapshots by their status property. */
  status?: SnapshotStatus[];
}

/** Contains response data for the getSnapshots operation. */
export type GetSnapshotsResponse = GeneratedClientGetSnapshotsHeaders &
  SnapshotListResult;

/** Optional parameters. */
export interface CheckSnapshotsOptionalParams
  extends coreClient.OperationOptions {
  /** Instructs the server to return elements that appear after the element referred to by the specified token. */
  after?: string;
}

/** Contains response data for the checkSnapshots operation. */
export type CheckSnapshotsResponse = GeneratedClientCheckSnapshotsHeaders;

/** Optional parameters. */
export interface GetSnapshotOptionalParams extends coreClient.OperationOptions {
  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */
  ifMatch?: string;
  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */
  ifNoneMatch?: string;
  /** Used to select what fields are present in the returned resource(s). */
  select?: SnapshotFields[];
}

/** Contains response data for the getSnapshot operation. */
export type GetSnapshotResponse = GeneratedClientGetSnapshotHeaders & Snapshot;

/** Optional parameters. */
export interface CreateSnapshotOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createSnapshot operation. */
export type CreateSnapshotResponse = GeneratedClientCreateSnapshotHeaders &
  Snapshot;

/** Optional parameters. */
export interface UpdateSnapshotOptionalParams
  extends coreClient.OperationOptions {
  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */
  ifMatch?: string;
  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */
  ifNoneMatch?: string;
}

/** Contains response data for the updateSnapshot operation. */
export type UpdateSnapshotResponse = GeneratedClientUpdateSnapshotHeaders &
  Snapshot;

/** Optional parameters. */
export interface CheckSnapshotOptionalParams
  extends coreClient.OperationOptions {
  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */
  ifMatch?: string;
  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */
  ifNoneMatch?: string;
}

/** Contains response data for the checkSnapshot operation. */
export type CheckSnapshotResponse = GeneratedClientCheckSnapshotHeaders;

/** Optional parameters. */
export interface GetLabelsOptionalParams extends coreClient.OperationOptions {
  /** A filter for the name of the returned labels. */
  name?: string;
  /** Instructs the server to return elements that appear after the element referred to by the specified token. */
  after?: string;
  /** Requests the server to respond with the state of the resource at the specified time. */
  acceptDatetime?: string;
  /** Used to select what fields are present in the returned resource(s). */
  select?: LabelFields[];
}

/** Contains response data for the getLabels operation. */
export type GetLabelsResponse = GeneratedClientGetLabelsHeaders &
  LabelListResult;

/** Optional parameters. */
export interface CheckLabelsOptionalParams extends coreClient.OperationOptions {
  /** A filter for the name of the returned labels. */
  name?: string;
  /** Instructs the server to return elements that appear after the element referred to by the specified token. */
  after?: string;
  /** Requests the server to respond with the state of the resource at the specified time. */
  acceptDatetime?: string;
  /** Used to select what fields are present in the returned resource(s). */
  select?: LabelFields[];
}

/** Contains response data for the checkLabels operation. */
export type CheckLabelsResponse = GeneratedClientCheckLabelsHeaders;

/** Optional parameters. */
export interface PutLockOptionalParams extends coreClient.OperationOptions {
  /** The label, if any, of the key-value to lock. */
  label?: string;
  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */
  ifMatch?: string;
  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */
  ifNoneMatch?: string;
}

/** Contains response data for the putLock operation. */
export type PutLockResponse = GeneratedClientPutLockHeaders &
  ConfigurationSetting;

/** Optional parameters. */
export interface DeleteLockOptionalParams extends coreClient.OperationOptions {
  /** The label, if any, of the key-value to unlock. */
  label?: string;
  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */
  ifMatch?: string;
  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */
  ifNoneMatch?: string;
}

/** Contains response data for the deleteLock operation. */
export type DeleteLockResponse = GeneratedClientDeleteLockHeaders &
  ConfigurationSetting;

/** Optional parameters. */
export interface GetRevisionsOptionalParams
  extends coreClient.OperationOptions {
  /** Instructs the server to return elements that appear after the element referred to by the specified token. */
  after?: string;
  /** Requests the server to respond with the state of the resource at the specified time. */
  acceptDatetime?: string;
  /** A filter used to match keys. */
  key?: string;
  /** A filter used to match labels */
  label?: string;
  /** Used to select what fields are present in the returned resource(s). */
  select?: KeyValueFields[];
}

/** Contains response data for the getRevisions operation. */
export type GetRevisionsResponse = GeneratedClientGetRevisionsHeaders &
  KeyValueListResult;

/** Optional parameters. */
export interface CheckRevisionsOptionalParams
  extends coreClient.OperationOptions {
  /** Instructs the server to return elements that appear after the element referred to by the specified token. */
  after?: string;
  /** Requests the server to respond with the state of the resource at the specified time. */
  acceptDatetime?: string;
  /** A filter used to match keys. */
  key?: string;
  /** A filter used to match labels */
  label?: string;
  /** Used to select what fields are present in the returned resource(s). */
  select?: KeyValueFields[];
}

/** Contains response data for the checkRevisions operation. */
export type CheckRevisionsResponse = GeneratedClientCheckRevisionsHeaders;

/** Optional parameters. */
export interface GetOperationDetailsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getOperationDetails operation. */
export type GetOperationDetailsResponse = OperationDetails;

/** Optional parameters. */
export interface GetKeysNextOptionalParams extends coreClient.OperationOptions {
  /** A filter for the name of the returned keys. */
  name?: string;
  /** Instructs the server to return elements that appear after the element referred to by the specified token. */
  after?: string;
  /** Requests the server to respond with the state of the resource at the specified time. */
  acceptDatetime?: string;
}

/** Contains response data for the getKeysNext operation. */
export type GetKeysNextResponse = GeneratedClientGetKeysNextHeaders &
  KeyListResult;

/** Optional parameters. */
export interface GetKeyValuesNextOptionalParams
  extends coreClient.OperationOptions {
  /** Instructs the server to return elements that appear after the element referred to by the specified token. */
  after?: string;
  /** Requests the server to respond with the state of the resource at the specified time. */
  acceptDatetime?: string;
  /** A filter used to match keys. */
  key?: string;
  /** A filter used to match labels */
  label?: string;
  /** Used to select what fields are present in the returned resource(s). */
  select?: KeyValueFields[];
  /** A filter used get key-values for a snapshot. The value should be the name of the snapshot. Not valid when used with 'key' and 'label' filters. */
  snapshot?: string;
  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */
  ifMatch?: string;
  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */
  ifNoneMatch?: string;
}

/** Contains response data for the getKeyValuesNext operation. */
export type GetKeyValuesNextResponse = GeneratedClientGetKeyValuesNextHeaders &
  KeyValueListResult;

/** Optional parameters. */
export interface GetSnapshotsNextOptionalParams
  extends coreClient.OperationOptions {
  /** A filter for the name of the returned snapshots. */
  name?: string;
  /** Instructs the server to return elements that appear after the element referred to by the specified token. */
  after?: string;
  /** Used to select what fields are present in the returned resource(s). */
  select?: SnapshotFields[];
  /** Used to filter returned snapshots by their status property. */
  status?: SnapshotStatus[];
}

/** Contains response data for the getSnapshotsNext operation. */
export type GetSnapshotsNextResponse = GeneratedClientGetSnapshotsNextHeaders &
  SnapshotListResult;

/** Optional parameters. */
export interface GetLabelsNextOptionalParams
  extends coreClient.OperationOptions {
  /** A filter for the name of the returned labels. */
  name?: string;
  /** Instructs the server to return elements that appear after the element referred to by the specified token. */
  after?: string;
  /** Requests the server to respond with the state of the resource at the specified time. */
  acceptDatetime?: string;
  /** Used to select what fields are present in the returned resource(s). */
  select?: LabelFields[];
}

/** Contains response data for the getLabelsNext operation. */
export type GetLabelsNextResponse = GeneratedClientGetLabelsNextHeaders &
  LabelListResult;

/** Optional parameters. */
export interface GetRevisionsNextOptionalParams
  extends coreClient.OperationOptions {
  /** Instructs the server to return elements that appear after the element referred to by the specified token. */
  after?: string;
  /** Requests the server to respond with the state of the resource at the specified time. */
  acceptDatetime?: string;
  /** A filter used to match keys. */
  key?: string;
  /** A filter used to match labels */
  label?: string;
  /** Used to select what fields are present in the returned resource(s). */
  select?: KeyValueFields[];
}

/** Contains response data for the getRevisionsNext operation. */
export type GetRevisionsNextResponse = GeneratedClientGetRevisionsNextHeaders &
  KeyValueListResult;

/** Optional parameters. */
export interface GeneratedClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** Used to guarantee real-time consistency between requests. */
  syncToken?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
