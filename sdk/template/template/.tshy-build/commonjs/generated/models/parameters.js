"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.nextLink = exports.snapshot1 = exports.accept6 = exports.select2 = exports.accept5 = exports.entity2 = exports.contentType2 = exports.name2 = exports.entity1 = exports.contentType1 = exports.name1 = exports.accept4 = exports.status = exports.select1 = exports.accept3 = exports.entity = exports.contentType = exports.key1 = exports.accept2 = exports.ifNoneMatch = exports.ifMatch = exports.snapshot = exports.select = exports.label = exports.key = exports.accept1 = exports.acceptDatetime = exports.after = exports.apiVersion = exports.syncToken = exports.name = exports.endpoint = exports.accept = void 0;
const mappers_js_1 = require("../models/mappers.js");
exports.accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/vnd.microsoft.appconfig.keyset+json, application/problem+json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
exports.endpoint = {
    parameterPath: "endpoint",
    mapper: {
        serializedName: "endpoint",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
exports.name = {
    parameterPath: ["options", "name"],
    mapper: {
        serializedName: "name",
        type: {
            name: "String"
        }
    }
};
exports.syncToken = {
    parameterPath: "syncToken",
    mapper: {
        serializedName: "Sync-Token",
        type: {
            name: "String"
        }
    }
};
exports.apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2023-10-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
exports.after = {
    parameterPath: ["options", "after"],
    mapper: {
        serializedName: "After",
        type: {
            name: "String"
        }
    }
};
exports.acceptDatetime = {
    parameterPath: ["options", "acceptDatetime"],
    mapper: {
        serializedName: "Accept-Datetime",
        type: {
            name: "String"
        }
    }
};
exports.accept1 = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/vnd.microsoft.appconfig.kvset+json, application/problem+json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
exports.key = {
    parameterPath: ["options", "key"],
    mapper: {
        serializedName: "key",
        type: {
            name: "String"
        }
    }
};
exports.label = {
    parameterPath: ["options", "label"],
    mapper: {
        serializedName: "label",
        type: {
            name: "String"
        }
    }
};
exports.select = {
    parameterPath: ["options", "select"],
    mapper: {
        serializedName: "$Select",
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "String"
                }
            }
        }
    },
    collectionFormat: "CSV"
};
exports.snapshot = {
    parameterPath: ["options", "snapshot"],
    mapper: {
        serializedName: "snapshot",
        type: {
            name: "String"
        }
    }
};
exports.ifMatch = {
    parameterPath: ["options", "ifMatch"],
    mapper: {
        serializedName: "If-Match",
        type: {
            name: "String"
        }
    }
};
exports.ifNoneMatch = {
    parameterPath: ["options", "ifNoneMatch"],
    mapper: {
        serializedName: "If-None-Match",
        type: {
            name: "String"
        }
    }
};
exports.accept2 = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/vnd.microsoft.appconfig.kv+json, application/problem+json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
exports.key1 = {
    parameterPath: "key",
    mapper: {
        serializedName: "key",
        required: true,
        type: {
            name: "String"
        }
    }
};
exports.contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/vnd.microsoft.appconfig.kv+json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
exports.entity = {
    parameterPath: ["options", "entity"],
    mapper: mappers_js_1.ConfigurationSetting
};
exports.accept3 = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/vnd.microsoft.appconfig.snapshotset+json, application/problem+json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
exports.select1 = {
    parameterPath: ["options", "select"],
    mapper: {
        serializedName: "$Select",
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "String"
                }
            }
        }
    },
    collectionFormat: "CSV"
};
exports.status = {
    parameterPath: ["options", "status"],
    mapper: {
        serializedName: "status",
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "String"
                }
            }
        }
    },
    collectionFormat: "CSV"
};
exports.accept4 = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/vnd.microsoft.appconfig.snapshot+json, application/problem+json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
exports.name1 = {
    parameterPath: "name",
    mapper: {
        serializedName: "name",
        required: true,
        type: {
            name: "String"
        }
    }
};
exports.contentType1 = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/vnd.microsoft.appconfig.snapshot+json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
exports.entity1 = {
    parameterPath: "entity",
    mapper: mappers_js_1.Snapshot
};
exports.name2 = {
    parameterPath: "name",
    mapper: {
        constraints: {
            MaxLength: 256
        },
        serializedName: "name",
        required: true,
        type: {
            name: "String"
        }
    }
};
exports.contentType2 = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
exports.entity2 = {
    parameterPath: "entity",
    mapper: mappers_js_1.SnapshotUpdateParameters
};
exports.accept5 = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/vnd.microsoft.appconfig.labelset+json, application/problem+json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
exports.select2 = {
    parameterPath: ["options", "select"],
    mapper: {
        serializedName: "$Select",
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "String"
                }
            }
        }
    },
    collectionFormat: "CSV"
};
exports.accept6 = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
exports.snapshot1 = {
    parameterPath: "snapshot",
    mapper: {
        serializedName: "snapshot",
        required: true,
        type: {
            name: "String"
        }
    }
};
exports.nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
//# sourceMappingURL=parameters.js.map