/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { ConfigurationSetting as ConfigurationSettingMapper, Snapshot as SnapshotMapper, SnapshotUpdateParameters as SnapshotUpdateParametersMapper } from "../models/mappers.js";
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/vnd.microsoft.appconfig.keyset+json, application/problem+json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const endpoint = {
    parameterPath: "endpoint",
    mapper: {
        serializedName: "endpoint",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const name = {
    parameterPath: ["options", "name"],
    mapper: {
        serializedName: "name",
        type: {
            name: "String"
        }
    }
};
export const syncToken = {
    parameterPath: "syncToken",
    mapper: {
        serializedName: "Sync-Token",
        type: {
            name: "String"
        }
    }
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2023-10-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const after = {
    parameterPath: ["options", "after"],
    mapper: {
        serializedName: "After",
        type: {
            name: "String"
        }
    }
};
export const acceptDatetime = {
    parameterPath: ["options", "acceptDatetime"],
    mapper: {
        serializedName: "Accept-Datetime",
        type: {
            name: "String"
        }
    }
};
export const accept1 = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/vnd.microsoft.appconfig.kvset+json, application/problem+json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const key = {
    parameterPath: ["options", "key"],
    mapper: {
        serializedName: "key",
        type: {
            name: "String"
        }
    }
};
export const label = {
    parameterPath: ["options", "label"],
    mapper: {
        serializedName: "label",
        type: {
            name: "String"
        }
    }
};
export const select = {
    parameterPath: ["options", "select"],
    mapper: {
        serializedName: "$Select",
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "String"
                }
            }
        }
    },
    collectionFormat: "CSV"
};
export const snapshot = {
    parameterPath: ["options", "snapshot"],
    mapper: {
        serializedName: "snapshot",
        type: {
            name: "String"
        }
    }
};
export const ifMatch = {
    parameterPath: ["options", "ifMatch"],
    mapper: {
        serializedName: "If-Match",
        type: {
            name: "String"
        }
    }
};
export const ifNoneMatch = {
    parameterPath: ["options", "ifNoneMatch"],
    mapper: {
        serializedName: "If-None-Match",
        type: {
            name: "String"
        }
    }
};
export const accept2 = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/vnd.microsoft.appconfig.kv+json, application/problem+json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const key1 = {
    parameterPath: "key",
    mapper: {
        serializedName: "key",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/vnd.microsoft.appconfig.kv+json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
export const entity = {
    parameterPath: ["options", "entity"],
    mapper: ConfigurationSettingMapper
};
export const accept3 = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/vnd.microsoft.appconfig.snapshotset+json, application/problem+json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const select1 = {
    parameterPath: ["options", "select"],
    mapper: {
        serializedName: "$Select",
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "String"
                }
            }
        }
    },
    collectionFormat: "CSV"
};
export const status = {
    parameterPath: ["options", "status"],
    mapper: {
        serializedName: "status",
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "String"
                }
            }
        }
    },
    collectionFormat: "CSV"
};
export const accept4 = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/vnd.microsoft.appconfig.snapshot+json, application/problem+json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const name1 = {
    parameterPath: "name",
    mapper: {
        serializedName: "name",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const contentType1 = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/vnd.microsoft.appconfig.snapshot+json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
export const entity1 = {
    parameterPath: "entity",
    mapper: SnapshotMapper
};
export const name2 = {
    parameterPath: "name",
    mapper: {
        constraints: {
            MaxLength: 256
        },
        serializedName: "name",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const contentType2 = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
export const entity2 = {
    parameterPath: "entity",
    mapper: SnapshotUpdateParametersMapper
};
export const accept5 = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/vnd.microsoft.appconfig.labelset+json, application/problem+json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const select2 = {
    parameterPath: ["options", "select"],
    mapper: {
        serializedName: "$Select",
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "String"
                }
            }
        }
    },
    collectionFormat: "CSV"
};
export const accept6 = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const snapshot1 = {
    parameterPath: "snapshot",
    mapper: {
        serializedName: "snapshot",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
//# sourceMappingURL=parameters.js.map