{"version":3,"file":"operations.js","sourceRoot":"","sources":["../../../src/api/operations.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * THIS IS AN AUTO-GENERATED FILE - DO NOT EDIT!\n *\n * Any changes you make here may be lost.\n *\n * If you need to make changes, please do so in the original source file, \\{project-root\\}/sources/custom\n */\n\nimport type { StreamableMethod } from \"@azure-rest/core-client\";\nimport { RestError } from \"@azure/core-rest-pipeline\";\nimport type { RequestOptions } from \"../common/interfaces.js\";\nimport type { WidgetServiceContext as Client } from \"../rest/clientDefinitions.js\";\nimport type {\n  AnalyzeWidget200Response,\n  AnalyzeWidgetDefaultResponse,\n  CreateWidget201Response,\n  CreateWidgetDefaultResponse,\n  DeleteWidget204Response,\n  DeleteWidgetDefaultResponse,\n  GetWidget200Response,\n  GetWidgetDefaultResponse,\n  ListWidgets200Response,\n  ListWidgetsDefaultResponse,\n  UpdateWidget200Response,\n  UpdateWidgetDefaultResponse,\n} from \"../rest/index.js\";\nimport { isUnexpected } from \"../rest/index.js\";\nimport { foo } from \"./foo.js\";\nimport type { AnalyzeResult, ColorType, Widget } from \"./models.js\";\n\nexport interface ListWidgetsOptions extends RequestOptions {}\n\nexport interface GetWidgetOptions extends RequestOptions {}\n\nexport interface CreateWidgetOptions extends RequestOptions {}\n\nexport interface UpdateWidgetOptions extends RequestOptions {\n  /** The weight of the widget. This is an int32, but must be greater than zero. */\n  weight?: number;\n  /** The color of the widget. */\n  color?: ColorType;\n}\n\nexport interface DeleteWidgetOptions extends RequestOptions {}\n\nexport interface AnalyzeWidgetOptions extends RequestOptions {}\n\nexport function _listWidgetsSend(\n  context: Client,\n  options: ListWidgetsOptions = { requestOptions: {} },\n): StreamableMethod<ListWidgets200Response | ListWidgetsDefaultResponse> {\n  return context.path(\"/widgets\").get({\n    allowInsecureConnection: options.requestOptions?.allowInsecureConnection,\n    skipUrlEncoding: options.requestOptions?.skipUrlEncoding,\n    headers: { ...options.requestOptions?.headers },\n  });\n}\n\nexport async function _listWidgetsDeserialize(\n  result: ListWidgets200Response | ListWidgetsDefaultResponse,\n): Promise<Widget[]> {\n  if (isUnexpected(result)) {\n    throw result.body;\n  }\n\n  return (result.body ?? []).map((p) => ({\n    id: p[\"id\"],\n    weight: p[\"weight\"],\n    color: p[\"color\"],\n  }));\n}\n\n/**\n * List all widgets in the system. This operation is not paginated, and returns a simple array of widgets.\n *\n * It does not accept any options or parameters.\n */\nexport async function listWidgets(\n  context: Client,\n  options: ListWidgetsOptions = { requestOptions: {} },\n): Promise<Widget[]> {\n  const result = await _listWidgetsSend(context, options);\n  return _listWidgetsDeserialize(result);\n}\n\nexport function _getWidgetSend(\n  context: Client,\n  id: string,\n  options: GetWidgetOptions = { requestOptions: {} },\n): StreamableMethod<GetWidget200Response | GetWidgetDefaultResponse> {\n  return context.path(\"/widgets/{id}\", id).get({\n    allowInsecureConnection: options.requestOptions?.allowInsecureConnection,\n    skipUrlEncoding: options.requestOptions?.skipUrlEncoding,\n    headers: { ...options.requestOptions?.headers },\n  });\n}\n\nexport async function _getWidgetDeserialize(\n  result: GetWidget200Response | GetWidgetDefaultResponse,\n): Promise<Widget> {\n  if (isUnexpected(result)) {\n    throw result.body;\n  }\n\n  return {\n    id: result.body[\"id\"],\n    weight: result.body[\"weight\"],\n    color: result.body[\"color\"],\n  };\n}\n\n/** Get a widget by ID. */\nexport async function getWidget(\n  context: Client,\n  id: string,\n  options: GetWidgetOptions = { requestOptions: {} },\n): Promise<Widget> {\n  const result = await _getWidgetSend(context, id, options);\n  return _getWidgetDeserialize(result);\n}\n\nexport function _createWidgetSend(\n  context: Client,\n  weight: number,\n  color: ColorType,\n  options: CreateWidgetOptions = { requestOptions: {} },\n): StreamableMethod<CreateWidget201Response | CreateWidgetDefaultResponse> {\n  return context.path(\"/widgets\").post({\n    allowInsecureConnection: options.requestOptions?.allowInsecureConnection,\n    skipUrlEncoding: options.requestOptions?.skipUrlEncoding,\n    headers: { ...options.requestOptions?.headers },\n    body: { weight: weight, color: color },\n  });\n}\n\nexport async function _createWidgetDeserialize(\n  result: CreateWidget201Response | CreateWidgetDefaultResponse,\n): Promise<Widget> {\n  if (isUnexpected(result)) {\n    throw result.body;\n  }\n\n  return {\n    id: result.body[\"id\"],\n    weight: result.body[\"weight\"],\n    color: result.body[\"color\"],\n  };\n}\n\n/**\n * Create a new widget.\n *\n * The widget ID is not required during creation, as it is automatically set by the server. Providing an ID will\n * result in an error.\n */\nexport async function createWidget(\n  context: Client,\n  weight: number,\n  color: ColorType,\n  options: CreateWidgetOptions = { requestOptions: {} },\n): Promise<Widget> {\n  const result = await _createWidgetSend(context, weight, color, options);\n  return _createWidgetDeserialize(result);\n}\n\nexport function _updateWidgetSend(\n  context: Client,\n  id: string,\n  options: UpdateWidgetOptions = { requestOptions: {} },\n): StreamableMethod<UpdateWidget200Response | UpdateWidgetDefaultResponse> {\n  return context.path(\"/widgets/{id}\", id).patch({\n    allowInsecureConnection: options.requestOptions?.allowInsecureConnection,\n    skipUrlEncoding: options.requestOptions?.skipUrlEncoding,\n    headers: { ...options.requestOptions?.headers },\n    body: { weight: options?.weight, color: options?.color },\n  });\n}\n\nexport async function _updateWidgetDeserialize(\n  result: UpdateWidget200Response | UpdateWidgetDefaultResponse,\n): Promise<Widget> {\n  if (isUnexpected(result)) {\n    throw result.body;\n  }\n\n  return {\n    id: result.body[\"id\"],\n    weight: result.body[\"weight\"],\n    color: result.body[\"color\"],\n  };\n}\n\n/**\n * Update the contents of the widget. The widget ID is required in the input, but cannot be changed. All other fields\n * are optional and will be updated within the widget if provided.\n */\nexport async function updateWidget(\n  context: Client,\n  id: string,\n  options: UpdateWidgetOptions = { requestOptions: {} },\n): Promise<Widget> {\n  const result = await _updateWidgetSend(context, id, options);\n  return _updateWidgetDeserialize(result);\n}\n\nexport function _deleteWidgetSend(\n  context: Client,\n  id: string,\n  options: DeleteWidgetOptions = { requestOptions: {} },\n): StreamableMethod<DeleteWidget204Response | DeleteWidgetDefaultResponse> {\n  return context.path(\"/widgets/{id}\", id).delete({\n    allowInsecureConnection: options.requestOptions?.allowInsecureConnection,\n    skipUrlEncoding: options.requestOptions?.skipUrlEncoding,\n    headers: { ...options.requestOptions?.headers },\n  });\n}\n\nexport async function _deleteWidgetDeserialize(\n  result: DeleteWidget204Response | DeleteWidgetDefaultResponse,\n): Promise<void> {\n  if (isUnexpected(result)) {\n    throw result.body;\n  }\n\n  return;\n}\n\n/** Delete a widget by ID. */\nexport async function deleteWidget(\n  context: Client,\n  id: string,\n  options: DeleteWidgetOptions = { requestOptions: {} },\n): Promise<void> {\n  const result = await _deleteWidgetSend(context, id, options);\n  return _deleteWidgetDeserialize(result);\n}\n\nexport function _analyzeWidgetSend(\n  context: Client,\n  id: string,\n  options: AnalyzeWidgetOptions = { requestOptions: {} },\n): StreamableMethod<AnalyzeWidget200Response | AnalyzeWidgetDefaultResponse> {\n  return context.path(\"/widgets/{id}/analyze\", id).post({\n    allowInsecureConnection: options.requestOptions?.allowInsecureConnection,\n    skipUrlEncoding: options.requestOptions?.skipUrlEncoding,\n    headers: { ...options.requestOptions?.headers },\n  });\n}\n\nexport async function _analyzeWidgetDeserialize(\n  result: AnalyzeWidget200Response | AnalyzeWidgetDefaultResponse,\n): Promise<AnalyzeResult> {\n  if (isUnexpected(result)) {\n    throw result.body;\n  }\n\n  return {\n    summary: result.body[\"summary\"],\n  };\n}\n\n/**\n * In this customization we will perform the following tasks in addition to the generated:\n *  - We are going to add special error handling for demonstration purposes\n */\nexport async function analyzeWidget(\n  context: Client,\n  id: string,\n  options?: AnalyzeWidgetOptions,\n): Promise<AnalyzeResult> {\n  try {\n    foo();\n    const result = await _analyzeWidget(context, id, options);\n    return result;\n  } catch (error: any) {\n    console.error(\"Error occurred while calling analyzeWidget:\", error);\n    if (error.message && error.statusCode) {\n      throw new RestError(error.message, { code: error.statusCode });\n    }\n\n    throw new Error(error);\n  }\n}\n\n/** Analyze a widget. The only guarantee is that this method will return a string containing the results of the analysis. */\nasync function _analyzeWidget(\n  context: Client,\n  id: string,\n  options: AnalyzeWidgetOptions = { requestOptions: {} },\n): Promise<AnalyzeResult> {\n  const result = await _analyzeWidgetSend(context, id, options);\n  return _analyzeWidgetDeserialize(result);\n}\n"]}