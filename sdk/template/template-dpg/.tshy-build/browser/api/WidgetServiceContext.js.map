{"version":3,"file":"WidgetServiceContext.js","sourceRoot":"","sources":["../../../src/api/WidgetServiceContext.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAYlC,OAAO,EAAE,iBAAiB,EAAE,MAAM,kBAAkB,CAAC;AAErD,OAAO,SAAS,MAAM,gCAAgC,CAAC;AAkBvD,MAAM,UAAU,mBAAmB,CACjC,QAAgB,EAChB,mBAAqD,EACrD,UAAyB,EAAE;IAE3B,MAAM,OAAO,GAAG,QAAQ,CAAC;IACzB,IAAI,iBAAiB,CAAC,mBAAmB,CAAC,EAAE,CAAC;QAC3C,OAAO,SAAS,CAAC,OAAO,EAAE,mBAAmB,EAAE,OAAO,CAAC,CAAC;IAC1D,CAAC;SAAM,CAAC;QACN,OAAO,SAAS,CAAC,OAAO,EAAE,mBAAmB,CAAC,CAAC;IACjD,CAAC;AACH,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * THIS IS AN AUTO-GENERATED FILE - DO NOT EDIT!\n *\n * Any changes you make here may be lost.\n *\n * If you need to make changes, please do so in the original source file, \\{project-root\\}/sources/custom\n */\n\nimport type { ClientOptions } from \"@azure-rest/core-client\";\nimport type { TokenCredential } from \"@azure/core-auth\";\nimport { isTokenCredential } from \"@azure/core-auth\";\nimport type { WidgetServiceContext } from \"../rest/index.js\";\nimport getClient from \"../rest/widgetServiceClient.js\";\n\nexport { WidgetServiceContext } from \"../rest/index.js\";\n\nexport interface WidgetServiceClientOptions extends ClientOptions {}\n\n/**\n * This customization adds authentication to the client.\n */\nexport function createWidgetService(\n  endpoint: string,\n  options?: ClientOptions,\n): WidgetServiceContext;\nexport function createWidgetService(\n  endpoint: string,\n  credential: TokenCredential,\n  options?: ClientOptions,\n): WidgetServiceContext;\nexport function createWidgetService(\n  endpoint: string,\n  credentialOrOptions?: TokenCredential | ClientOptions,\n  options: ClientOptions = {},\n): WidgetServiceContext {\n  const baseUrl = endpoint;\n  if (isTokenCredential(credentialOrOptions)) {\n    return getClient(baseUrl, credentialOrOptions, options);\n  } else {\n    return getClient(baseUrl, credentialOrOptions);\n  }\n}\n"]}