/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  DnsSecurityRule,
  DnsSecurityRulesListOptionalParams,
  DnsSecurityRulesCreateOrUpdateOptionalParams,
  DnsSecurityRulesCreateOrUpdateResponse,
  DnsSecurityRulePatch,
  DnsSecurityRulesUpdateOptionalParams,
  DnsSecurityRulesUpdateResponse,
  DnsSecurityRulesDeleteOptionalParams,
  DnsSecurityRulesDeleteResponse,
  DnsSecurityRulesGetOptionalParams,
  DnsSecurityRulesGetResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a DnsSecurityRules. */
export interface DnsSecurityRules {
  /**
   * Lists DNS security rules for a DNS resolver policy.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsResolverPolicyName The name of the DNS resolver policy.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    dnsResolverPolicyName: string,
    options?: DnsSecurityRulesListOptionalParams,
  ): PagedAsyncIterableIterator<DnsSecurityRule>;
  /**
   * Creates or updates a DNS security rule for a DNS resolver policy.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsResolverPolicyName The name of the DNS resolver policy.
   * @param dnsSecurityRuleName The name of the DNS security rule.
   * @param parameters Parameters supplied to the CreateOrUpdate operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    dnsResolverPolicyName: string,
    dnsSecurityRuleName: string,
    parameters: DnsSecurityRule,
    options?: DnsSecurityRulesCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<DnsSecurityRulesCreateOrUpdateResponse>,
      DnsSecurityRulesCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a DNS security rule for a DNS resolver policy.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsResolverPolicyName The name of the DNS resolver policy.
   * @param dnsSecurityRuleName The name of the DNS security rule.
   * @param parameters Parameters supplied to the CreateOrUpdate operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    dnsResolverPolicyName: string,
    dnsSecurityRuleName: string,
    parameters: DnsSecurityRule,
    options?: DnsSecurityRulesCreateOrUpdateOptionalParams,
  ): Promise<DnsSecurityRulesCreateOrUpdateResponse>;
  /**
   * Updates a DNS security rule.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsResolverPolicyName The name of the DNS resolver policy.
   * @param dnsSecurityRuleName The name of the DNS security rule.
   * @param parameters Parameters supplied to the Update operation.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    dnsResolverPolicyName: string,
    dnsSecurityRuleName: string,
    parameters: DnsSecurityRulePatch,
    options?: DnsSecurityRulesUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<DnsSecurityRulesUpdateResponse>,
      DnsSecurityRulesUpdateResponse
    >
  >;
  /**
   * Updates a DNS security rule.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsResolverPolicyName The name of the DNS resolver policy.
   * @param dnsSecurityRuleName The name of the DNS security rule.
   * @param parameters Parameters supplied to the Update operation.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    dnsResolverPolicyName: string,
    dnsSecurityRuleName: string,
    parameters: DnsSecurityRulePatch,
    options?: DnsSecurityRulesUpdateOptionalParams,
  ): Promise<DnsSecurityRulesUpdateResponse>;
  /**
   * Deletes a DNS security rule for a DNS resolver policy. WARNING: This operation cannot be undone.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsResolverPolicyName The name of the DNS resolver policy.
   * @param dnsSecurityRuleName The name of the DNS security rule.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    dnsResolverPolicyName: string,
    dnsSecurityRuleName: string,
    options?: DnsSecurityRulesDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<DnsSecurityRulesDeleteResponse>,
      DnsSecurityRulesDeleteResponse
    >
  >;
  /**
   * Deletes a DNS security rule for a DNS resolver policy. WARNING: This operation cannot be undone.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsResolverPolicyName The name of the DNS resolver policy.
   * @param dnsSecurityRuleName The name of the DNS security rule.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    dnsResolverPolicyName: string,
    dnsSecurityRuleName: string,
    options?: DnsSecurityRulesDeleteOptionalParams,
  ): Promise<DnsSecurityRulesDeleteResponse>;
  /**
   * Gets properties of a DNS security rule for a DNS resolver policy.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsResolverPolicyName The name of the DNS resolver policy.
   * @param dnsSecurityRuleName The name of the DNS security rule.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    dnsResolverPolicyName: string,
    dnsSecurityRuleName: string,
    options?: DnsSecurityRulesGetOptionalParams,
  ): Promise<DnsSecurityRulesGetResponse>;
}
