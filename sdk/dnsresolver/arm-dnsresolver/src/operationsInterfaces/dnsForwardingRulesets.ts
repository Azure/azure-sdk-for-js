/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  DnsForwardingRuleset,
  DnsForwardingRulesetsListByResourceGroupOptionalParams,
  DnsForwardingRulesetsListOptionalParams,
  VirtualNetworkDnsForwardingRuleset,
  DnsForwardingRulesetsListByVirtualNetworkOptionalParams,
  DnsForwardingRulesetsCreateOrUpdateOptionalParams,
  DnsForwardingRulesetsCreateOrUpdateResponse,
  DnsForwardingRulesetPatch,
  DnsForwardingRulesetsUpdateOptionalParams,
  DnsForwardingRulesetsUpdateResponse,
  DnsForwardingRulesetsDeleteOptionalParams,
  DnsForwardingRulesetsGetOptionalParams,
  DnsForwardingRulesetsGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a DnsForwardingRulesets. */
export interface DnsForwardingRulesets {
  /**
   * Lists DNS forwarding rulesets within a resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: DnsForwardingRulesetsListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<DnsForwardingRuleset>;
  /**
   * Lists DNS forwarding rulesets in all resource groups of a subscription.
   * @param options The options parameters.
   */
  list(
    options?: DnsForwardingRulesetsListOptionalParams
  ): PagedAsyncIterableIterator<DnsForwardingRuleset>;
  /**
   * Lists DNS forwarding ruleset resource IDs attached to a virtual network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualNetworkName The name of the virtual network.
   * @param options The options parameters.
   */
  listByVirtualNetwork(
    resourceGroupName: string,
    virtualNetworkName: string,
    options?: DnsForwardingRulesetsListByVirtualNetworkOptionalParams
  ): PagedAsyncIterableIterator<VirtualNetworkDnsForwardingRuleset>;
  /**
   * Creates or updates a DNS forwarding ruleset.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsForwardingRulesetName The name of the DNS forwarding ruleset.
   * @param parameters Parameters supplied to the CreateOrUpdate operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    dnsForwardingRulesetName: string,
    parameters: DnsForwardingRuleset,
    options?: DnsForwardingRulesetsCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<DnsForwardingRulesetsCreateOrUpdateResponse>,
      DnsForwardingRulesetsCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a DNS forwarding ruleset.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsForwardingRulesetName The name of the DNS forwarding ruleset.
   * @param parameters Parameters supplied to the CreateOrUpdate operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    dnsForwardingRulesetName: string,
    parameters: DnsForwardingRuleset,
    options?: DnsForwardingRulesetsCreateOrUpdateOptionalParams
  ): Promise<DnsForwardingRulesetsCreateOrUpdateResponse>;
  /**
   * Updates a DNS forwarding ruleset.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsForwardingRulesetName The name of the DNS forwarding ruleset.
   * @param parameters Parameters supplied to the Update operation.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    dnsForwardingRulesetName: string,
    parameters: DnsForwardingRulesetPatch,
    options?: DnsForwardingRulesetsUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<DnsForwardingRulesetsUpdateResponse>,
      DnsForwardingRulesetsUpdateResponse
    >
  >;
  /**
   * Updates a DNS forwarding ruleset.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsForwardingRulesetName The name of the DNS forwarding ruleset.
   * @param parameters Parameters supplied to the Update operation.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    dnsForwardingRulesetName: string,
    parameters: DnsForwardingRulesetPatch,
    options?: DnsForwardingRulesetsUpdateOptionalParams
  ): Promise<DnsForwardingRulesetsUpdateResponse>;
  /**
   * Deletes a DNS forwarding ruleset. WARNING: This operation cannot be undone. All forwarding rules
   * within the ruleset will be deleted.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsForwardingRulesetName The name of the DNS forwarding ruleset.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    dnsForwardingRulesetName: string,
    options?: DnsForwardingRulesetsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes a DNS forwarding ruleset. WARNING: This operation cannot be undone. All forwarding rules
   * within the ruleset will be deleted.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsForwardingRulesetName The name of the DNS forwarding ruleset.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    dnsForwardingRulesetName: string,
    options?: DnsForwardingRulesetsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Gets a DNS forwarding ruleset properties.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsForwardingRulesetName The name of the DNS forwarding ruleset.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    dnsForwardingRulesetName: string,
    options?: DnsForwardingRulesetsGetOptionalParams
  ): Promise<DnsForwardingRulesetsGetResponse>;
}
