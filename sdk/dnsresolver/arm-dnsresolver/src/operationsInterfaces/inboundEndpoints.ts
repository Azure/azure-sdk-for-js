/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  InboundEndpoint,
  InboundEndpointsListOptionalParams,
  InboundEndpointsCreateOrUpdateOptionalParams,
  InboundEndpointsCreateOrUpdateResponse,
  InboundEndpointPatch,
  InboundEndpointsUpdateOptionalParams,
  InboundEndpointsUpdateResponse,
  InboundEndpointsDeleteOptionalParams,
  InboundEndpointsGetOptionalParams,
  InboundEndpointsGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a InboundEndpoints. */
export interface InboundEndpoints {
  /**
   * Lists inbound endpoints for a DNS resolver.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsResolverName The name of the DNS resolver.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    dnsResolverName: string,
    options?: InboundEndpointsListOptionalParams
  ): PagedAsyncIterableIterator<InboundEndpoint>;
  /**
   * Creates or updates an inbound endpoint for a DNS resolver.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsResolverName The name of the DNS resolver.
   * @param inboundEndpointName The name of the inbound endpoint for the DNS resolver.
   * @param parameters Parameters supplied to the CreateOrUpdate operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    dnsResolverName: string,
    inboundEndpointName: string,
    parameters: InboundEndpoint,
    options?: InboundEndpointsCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<InboundEndpointsCreateOrUpdateResponse>,
      InboundEndpointsCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates an inbound endpoint for a DNS resolver.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsResolverName The name of the DNS resolver.
   * @param inboundEndpointName The name of the inbound endpoint for the DNS resolver.
   * @param parameters Parameters supplied to the CreateOrUpdate operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    dnsResolverName: string,
    inboundEndpointName: string,
    parameters: InboundEndpoint,
    options?: InboundEndpointsCreateOrUpdateOptionalParams
  ): Promise<InboundEndpointsCreateOrUpdateResponse>;
  /**
   * Updates an inbound endpoint for a DNS resolver.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsResolverName The name of the DNS resolver.
   * @param inboundEndpointName The name of the inbound endpoint for the DNS resolver.
   * @param parameters Parameters supplied to the Update operation.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    dnsResolverName: string,
    inboundEndpointName: string,
    parameters: InboundEndpointPatch,
    options?: InboundEndpointsUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<InboundEndpointsUpdateResponse>,
      InboundEndpointsUpdateResponse
    >
  >;
  /**
   * Updates an inbound endpoint for a DNS resolver.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsResolverName The name of the DNS resolver.
   * @param inboundEndpointName The name of the inbound endpoint for the DNS resolver.
   * @param parameters Parameters supplied to the Update operation.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    dnsResolverName: string,
    inboundEndpointName: string,
    parameters: InboundEndpointPatch,
    options?: InboundEndpointsUpdateOptionalParams
  ): Promise<InboundEndpointsUpdateResponse>;
  /**
   * Deletes an inbound endpoint for a DNS resolver. WARNING: This operation cannot be undone.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsResolverName The name of the DNS resolver.
   * @param inboundEndpointName The name of the inbound endpoint for the DNS resolver.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    dnsResolverName: string,
    inboundEndpointName: string,
    options?: InboundEndpointsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes an inbound endpoint for a DNS resolver. WARNING: This operation cannot be undone.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsResolverName The name of the DNS resolver.
   * @param inboundEndpointName The name of the inbound endpoint for the DNS resolver.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    dnsResolverName: string,
    inboundEndpointName: string,
    options?: InboundEndpointsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Gets properties of an inbound endpoint for a DNS resolver.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsResolverName The name of the DNS resolver.
   * @param inboundEndpointName The name of the inbound endpoint for the DNS resolver.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    dnsResolverName: string,
    inboundEndpointName: string,
    options?: InboundEndpointsGetOptionalParams
  ): Promise<InboundEndpointsGetResponse>;
}
