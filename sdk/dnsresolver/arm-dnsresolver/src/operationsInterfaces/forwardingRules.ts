/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ForwardingRule,
  ForwardingRulesListOptionalParams,
  ForwardingRulesCreateOrUpdateOptionalParams,
  ForwardingRulesCreateOrUpdateResponse,
  ForwardingRulePatch,
  ForwardingRulesUpdateOptionalParams,
  ForwardingRulesUpdateResponse,
  ForwardingRulesDeleteOptionalParams,
  ForwardingRulesGetOptionalParams,
  ForwardingRulesGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ForwardingRules. */
export interface ForwardingRules {
  /**
   * Lists forwarding rules in a DNS forwarding ruleset.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsForwardingRulesetName The name of the DNS forwarding ruleset.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    dnsForwardingRulesetName: string,
    options?: ForwardingRulesListOptionalParams
  ): PagedAsyncIterableIterator<ForwardingRule>;
  /**
   * Creates or updates a forwarding rule in a DNS forwarding ruleset.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsForwardingRulesetName The name of the DNS forwarding ruleset.
   * @param forwardingRuleName The name of the forwarding rule.
   * @param parameters Parameters supplied to the CreateOrUpdate operation.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    dnsForwardingRulesetName: string,
    forwardingRuleName: string,
    parameters: ForwardingRule,
    options?: ForwardingRulesCreateOrUpdateOptionalParams
  ): Promise<ForwardingRulesCreateOrUpdateResponse>;
  /**
   * Updates a forwarding rule in a DNS forwarding ruleset.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsForwardingRulesetName The name of the DNS forwarding ruleset.
   * @param forwardingRuleName The name of the forwarding rule.
   * @param parameters Parameters supplied to the Update operation.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    dnsForwardingRulesetName: string,
    forwardingRuleName: string,
    parameters: ForwardingRulePatch,
    options?: ForwardingRulesUpdateOptionalParams
  ): Promise<ForwardingRulesUpdateResponse>;
  /**
   * Deletes a forwarding rule in a DNS forwarding ruleset. WARNING: This operation cannot be undone.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsForwardingRulesetName The name of the DNS forwarding ruleset.
   * @param forwardingRuleName The name of the forwarding rule.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    dnsForwardingRulesetName: string,
    forwardingRuleName: string,
    options?: ForwardingRulesDeleteOptionalParams
  ): Promise<void>;
  /**
   * Gets properties of a forwarding rule in a DNS forwarding ruleset.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dnsForwardingRulesetName The name of the DNS forwarding ruleset.
   * @param forwardingRuleName The name of the forwarding rule.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    dnsForwardingRulesetName: string,
    forwardingRuleName: string,
    options?: ForwardingRulesGetOptionalParams
  ): Promise<ForwardingRulesGetResponse>;
}
