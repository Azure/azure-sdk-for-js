/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "Operation_display",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Dimension: msRest.CompositeMapper = {
  serializedName: "Dimension",
  type: {
    name: "Composite",
    className: "Dimension",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetricSpecification: msRest.CompositeMapper = {
  serializedName: "MetricSpecification",
  type: {
    name: "Composite",
    className: "MetricSpecification",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      displayDescription: {
        serializedName: "displayDescription",
        type: {
          name: "String"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      dimensions: {
        serializedName: "dimensions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Dimension"
            }
          }
        }
      },
      aggregationType: {
        serializedName: "aggregationType",
        type: {
          name: "String"
        }
      },
      fillGapWithZero: {
        serializedName: "fillGapWithZero",
        type: {
          name: "Boolean"
        }
      },
      category: {
        serializedName: "category",
        type: {
          name: "String"
        }
      },
      resourceIdDimensionNameOverride: {
        serializedName: "resourceIdDimensionNameOverride",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceSpecification: msRest.CompositeMapper = {
  serializedName: "ServiceSpecification",
  type: {
    name: "Composite",
    className: "ServiceSpecification",
    modelProperties: {
      metricSpecifications: {
        serializedName: "metricSpecifications",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MetricSpecification"
            }
          }
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      serviceSpecification: {
        serializedName: "properties.serviceSpecification",
        type: {
          name: "Composite",
          className: "ServiceSpecification"
        }
      }
    }
  }
};

export const CheckAvailabilityResponse: msRest.CompositeMapper = {
  serializedName: "CheckAvailabilityResponse",
  type: {
    name: "Composite",
    className: "CheckAvailabilityResponse",
    modelProperties: {
      isAvailable: {
        serializedName: "isAvailable",
        type: {
          name: "Boolean"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceNameAvailabilityRequest: msRest.CompositeMapper = {
  serializedName: "ResourceNameAvailabilityRequest",
  type: {
    name: "Composite",
    className: "ResourceNameAvailabilityRequest",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        required: true,
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QuotaAvailabilityRequest: msRest.CompositeMapper = {
  serializedName: "QuotaAvailabilityRequest",
  type: {
    name: "Composite",
    className: "QuotaAvailabilityRequest",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        required: true,
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ActiveDirectory: msRest.CompositeMapper = {
  serializedName: "activeDirectory",
  type: {
    name: "Composite",
    className: "ActiveDirectory",
    modelProperties: {
      activeDirectoryId: {
        nullable: true,
        serializedName: "activeDirectoryId",
        type: {
          name: "String"
        }
      },
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        type: {
          name: "String"
        }
      },
      domain: {
        serializedName: "domain",
        type: {
          name: "String"
        }
      },
      dns: {
        serializedName: "dns",
        constraints: {
          Pattern: /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$/
        },
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      statusDetails: {
        readOnly: true,
        serializedName: "statusDetails",
        type: {
          name: "String"
        }
      },
      smbServerName: {
        serializedName: "smbServerName",
        type: {
          name: "String"
        }
      },
      organizationalUnit: {
        serializedName: "organizationalUnit",
        defaultValue: "CN=Computers",
        type: {
          name: "String"
        }
      },
      site: {
        serializedName: "site",
        type: {
          name: "String"
        }
      },
      backupOperators: {
        serializedName: "backupOperators",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      kdcIP: {
        serializedName: "kdcIP",
        constraints: {
          Pattern: /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$/
        },
        type: {
          name: "String"
        }
      },
      adName: {
        serializedName: "adName",
        constraints: {
          MaxLength: 64,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      serverRootCACertificate: {
        serializedName: "serverRootCACertificate",
        constraints: {
          MaxLength: 10240,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      aesEncryption: {
        serializedName: "aesEncryption",
        type: {
          name: "Boolean"
        }
      },
      ldapSigning: {
        serializedName: "ldapSigning",
        type: {
          name: "Boolean"
        }
      },
      securityOperators: {
        serializedName: "securityOperators",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      ldapOverTLS: {
        serializedName: "ldapOverTLS",
        type: {
          name: "Boolean"
        }
      },
      allowLocalNfsUsersWithLdap: {
        serializedName: "allowLocalNfsUsersWithLdap",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AccountEncryption: msRest.CompositeMapper = {
  serializedName: "accountEncryption",
  type: {
    name: "Composite",
    className: "AccountEncryption",
    modelProperties: {
      keySource: {
        serializedName: "keySource",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SystemData: msRest.CompositeMapper = {
  serializedName: "systemData",
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const NetAppAccount: msRest.CompositeMapper = {
  serializedName: "netAppAccount",
  type: {
    name: "Composite",
    className: "NetAppAccount",
    modelProperties: {
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      activeDirectories: {
        serializedName: "properties.activeDirectories",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ActiveDirectory"
            }
          }
        }
      },
      encryption: {
        serializedName: "properties.encryption",
        type: {
          name: "Composite",
          className: "AccountEncryption"
        }
      },
      systemData: {
        readOnly: true,
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const NetAppAccountPatch: msRest.CompositeMapper = {
  serializedName: "netAppAccountPatch",
  type: {
    name: "Composite",
    className: "NetAppAccountPatch",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      activeDirectories: {
        serializedName: "properties.activeDirectories",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ActiveDirectory"
            }
          }
        }
      },
      encryption: {
        serializedName: "properties.encryption",
        type: {
          name: "Composite",
          className: "AccountEncryption"
        }
      }
    }
  }
};

export const CapacityPool: msRest.CompositeMapper = {
  serializedName: "capacityPool",
  type: {
    name: "Composite",
    className: "CapacityPool",
    modelProperties: {
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      poolId: {
        readOnly: true,
        serializedName: "properties.poolId",
        constraints: {
          MaxLength: 36,
          MinLength: 36,
          Pattern: /^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/
        },
        type: {
          name: "String"
        }
      },
      size: {
        required: true,
        serializedName: "properties.size",
        constraints: {
          InclusiveMaximum: 549755813888000,
          InclusiveMinimum: 4398046511104
        },
        type: {
          name: "Number"
        }
      },
      serviceLevel: {
        required: true,
        serializedName: "properties.serviceLevel",
        defaultValue: "Premium",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      totalThroughputMibps: {
        readOnly: true,
        serializedName: "properties.totalThroughputMibps",
        type: {
          name: "Number"
        }
      },
      utilizedThroughputMibps: {
        readOnly: true,
        serializedName: "properties.utilizedThroughputMibps",
        type: {
          name: "Number"
        }
      },
      qosType: {
        serializedName: "properties.qosType",
        defaultValue: "Auto",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CapacityPoolPatch: msRest.CompositeMapper = {
  serializedName: "capacityPoolPatch",
  type: {
    name: "Composite",
    className: "CapacityPoolPatch",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      size: {
        serializedName: "properties.size",
        defaultValue: 4398046511104,
        constraints: {
          InclusiveMaximum: 549755813888000,
          InclusiveMinimum: 4398046511104
        },
        type: {
          name: "Number"
        }
      },
      qosType: {
        serializedName: "properties.qosType",
        defaultValue: "Auto",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExportPolicyRule: msRest.CompositeMapper = {
  serializedName: "exportPolicyRule",
  type: {
    name: "Composite",
    className: "ExportPolicyRule",
    modelProperties: {
      ruleIndex: {
        serializedName: "ruleIndex",
        type: {
          name: "Number"
        }
      },
      unixReadOnly: {
        serializedName: "unixReadOnly",
        type: {
          name: "Boolean"
        }
      },
      unixReadWrite: {
        serializedName: "unixReadWrite",
        type: {
          name: "Boolean"
        }
      },
      kerberos5ReadOnly: {
        serializedName: "kerberos5ReadOnly",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      kerberos5ReadWrite: {
        serializedName: "kerberos5ReadWrite",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      kerberos5iReadOnly: {
        serializedName: "kerberos5iReadOnly",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      kerberos5iReadWrite: {
        serializedName: "kerberos5iReadWrite",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      kerberos5pReadOnly: {
        serializedName: "kerberos5pReadOnly",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      kerberos5pReadWrite: {
        serializedName: "kerberos5pReadWrite",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      cifs: {
        serializedName: "cifs",
        type: {
          name: "Boolean"
        }
      },
      nfsv3: {
        serializedName: "nfsv3",
        type: {
          name: "Boolean"
        }
      },
      nfsv41: {
        serializedName: "nfsv41",
        type: {
          name: "Boolean"
        }
      },
      allowedClients: {
        serializedName: "allowedClients",
        type: {
          name: "String"
        }
      },
      hasRootAccess: {
        serializedName: "hasRootAccess",
        defaultValue: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const VolumePropertiesExportPolicy: msRest.CompositeMapper = {
  serializedName: "volumeProperties_exportPolicy",
  type: {
    name: "Composite",
    className: "VolumePropertiesExportPolicy",
    modelProperties: {
      rules: {
        serializedName: "rules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExportPolicyRule"
            }
          }
        }
      }
    }
  }
};

export const MountTargetProperties: msRest.CompositeMapper = {
  serializedName: "mountTargetProperties",
  type: {
    name: "Composite",
    className: "MountTargetProperties",
    modelProperties: {
      mountTargetId: {
        readOnly: true,
        serializedName: "mountTargetId",
        constraints: {
          MaxLength: 36,
          MinLength: 36,
          Pattern: /^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/
        },
        type: {
          name: "String"
        }
      },
      fileSystemId: {
        required: true,
        serializedName: "fileSystemId",
        constraints: {
          MaxLength: 36,
          MinLength: 36,
          Pattern: /^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/
        },
        type: {
          name: "String"
        }
      },
      ipAddress: {
        readOnly: true,
        serializedName: "ipAddress",
        type: {
          name: "String"
        }
      },
      smbServerFqdn: {
        serializedName: "smbServerFqdn",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VolumeBackupProperties: msRest.CompositeMapper = {
  serializedName: "volumeBackupProperties",
  type: {
    name: "Composite",
    className: "VolumeBackupProperties",
    modelProperties: {
      backupPolicyId: {
        serializedName: "backupPolicyId",
        type: {
          name: "String"
        }
      },
      policyEnforced: {
        serializedName: "policyEnforced",
        type: {
          name: "Boolean"
        }
      },
      vaultId: {
        serializedName: "vaultId",
        type: {
          name: "String"
        }
      },
      backupEnabled: {
        serializedName: "backupEnabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ReplicationObject: msRest.CompositeMapper = {
  serializedName: "replicationObject",
  type: {
    name: "Composite",
    className: "ReplicationObject",
    modelProperties: {
      replicationId: {
        serializedName: "replicationId",
        type: {
          name: "String"
        }
      },
      endpointType: {
        serializedName: "endpointType",
        type: {
          name: "String"
        }
      },
      replicationSchedule: {
        required: true,
        serializedName: "replicationSchedule",
        type: {
          name: "String"
        }
      },
      remoteVolumeResourceId: {
        required: true,
        serializedName: "remoteVolumeResourceId",
        type: {
          name: "String"
        }
      },
      remoteVolumeRegion: {
        serializedName: "remoteVolumeRegion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VolumeSnapshotProperties: msRest.CompositeMapper = {
  serializedName: "volumeSnapshotProperties",
  type: {
    name: "Composite",
    className: "VolumeSnapshotProperties",
    modelProperties: {
      snapshotPolicyId: {
        serializedName: "snapshotPolicyId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VolumePropertiesDataProtection: msRest.CompositeMapper = {
  serializedName: "volumeProperties_dataProtection",
  type: {
    name: "Composite",
    className: "VolumePropertiesDataProtection",
    modelProperties: {
      backup: {
        serializedName: "backup",
        type: {
          name: "Composite",
          className: "VolumeBackupProperties"
        }
      },
      replication: {
        serializedName: "replication",
        type: {
          name: "Composite",
          className: "ReplicationObject"
        }
      },
      snapshot: {
        serializedName: "snapshot",
        type: {
          name: "Composite",
          className: "VolumeSnapshotProperties"
        }
      }
    }
  }
};

export const Volume: msRest.CompositeMapper = {
  serializedName: "volume",
  type: {
    name: "Composite",
    className: "Volume",
    modelProperties: {
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      fileSystemId: {
        readOnly: true,
        serializedName: "properties.fileSystemId",
        constraints: {
          MaxLength: 36,
          MinLength: 36,
          Pattern: /^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/
        },
        type: {
          name: "String"
        }
      },
      creationToken: {
        required: true,
        serializedName: "properties.creationToken",
        constraints: {
          MaxLength: 80,
          MinLength: 1,
          Pattern: /^[a-zA-Z][a-zA-Z0-9\-]{0,79}$/
        },
        type: {
          name: "String"
        }
      },
      serviceLevel: {
        serializedName: "properties.serviceLevel",
        defaultValue: "Premium",
        type: {
          name: "String"
        }
      },
      usageThreshold: {
        required: true,
        serializedName: "properties.usageThreshold",
        defaultValue: 107374182400,
        constraints: {
          InclusiveMaximum: 109951162777600,
          InclusiveMinimum: 107374182400
        },
        type: {
          name: "Number"
        }
      },
      exportPolicy: {
        serializedName: "properties.exportPolicy",
        type: {
          name: "Composite",
          className: "VolumePropertiesExportPolicy"
        }
      },
      protocolTypes: {
        serializedName: "properties.protocolTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      snapshotId: {
        nullable: true,
        serializedName: "properties.snapshotId",
        constraints: {
          MaxLength: 36,
          MinLength: 36,
          Pattern: /^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\?([^\/]*[\/])*)([^\/]+)$/
        },
        type: {
          name: "String"
        }
      },
      backupId: {
        serializedName: "properties.backupId",
        constraints: {
          MaxLength: 36,
          MinLength: 36,
          Pattern: /^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\?([^\/]*[\/])*)([^\/]+)$/
        },
        type: {
          name: "String"
        }
      },
      baremetalTenantId: {
        readOnly: true,
        serializedName: "properties.baremetalTenantId",
        type: {
          name: "String"
        }
      },
      subnetId: {
        required: true,
        serializedName: "properties.subnetId",
        type: {
          name: "String"
        }
      },
      mountTargets: {
        readOnly: true,
        serializedName: "properties.mountTargets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MountTargetProperties"
            }
          }
        }
      },
      volumeType: {
        serializedName: "properties.volumeType",
        type: {
          name: "String"
        }
      },
      dataProtection: {
        serializedName: "properties.dataProtection",
        type: {
          name: "Composite",
          className: "VolumePropertiesDataProtection"
        }
      },
      isRestoring: {
        serializedName: "properties.isRestoring",
        type: {
          name: "Boolean"
        }
      },
      snapshotDirectoryVisible: {
        serializedName: "properties.snapshotDirectoryVisible",
        defaultValue: true,
        type: {
          name: "Boolean"
        }
      },
      kerberosEnabled: {
        serializedName: "properties.kerberosEnabled",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      securityStyle: {
        serializedName: "properties.securityStyle",
        defaultValue: "unix",
        type: {
          name: "String"
        }
      },
      smbEncryption: {
        serializedName: "properties.smbEncryption",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      smbContinuouslyAvailable: {
        serializedName: "properties.smbContinuouslyAvailable",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      throughputMibps: {
        serializedName: "properties.throughputMibps",
        defaultValue: 0,
        constraints: {
          InclusiveMaximum: 4500,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      encryptionKeySource: {
        serializedName: "properties.encryptionKeySource",
        type: {
          name: "String"
        }
      },
      ldapEnabled: {
        serializedName: "properties.ldapEnabled",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ResourceIdentity: msRest.CompositeMapper = {
  serializedName: "resourceIdentity",
  type: {
    name: "Composite",
    className: "ResourceIdentity",
    modelProperties: {
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReplicationStatus: msRest.CompositeMapper = {
  serializedName: "replicationStatus",
  type: {
    name: "Composite",
    className: "ReplicationStatus",
    modelProperties: {
      healthy: {
        serializedName: "healthy",
        type: {
          name: "Boolean"
        }
      },
      relationshipStatus: {
        serializedName: "relationshipStatus",
        type: {
          name: "String"
        }
      },
      mirrorState: {
        serializedName: "mirrorState",
        type: {
          name: "String"
        }
      },
      totalProgress: {
        serializedName: "totalProgress",
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VolumePatchPropertiesExportPolicy: msRest.CompositeMapper = {
  serializedName: "volumePatchProperties_exportPolicy",
  type: {
    name: "Composite",
    className: "VolumePatchPropertiesExportPolicy",
    modelProperties: {
      rules: {
        serializedName: "rules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExportPolicyRule"
            }
          }
        }
      }
    }
  }
};

export const VolumePatchPropertiesDataProtection: msRest.CompositeMapper = {
  serializedName: "volumePatchProperties_dataProtection",
  type: {
    name: "Composite",
    className: "VolumePatchPropertiesDataProtection",
    modelProperties: {
      backup: {
        serializedName: "backup",
        type: {
          name: "Composite",
          className: "VolumeBackupProperties"
        }
      },
      snapshot: {
        serializedName: "snapshot",
        type: {
          name: "Composite",
          className: "VolumeSnapshotProperties"
        }
      }
    }
  }
};

export const VolumePatch: msRest.CompositeMapper = {
  serializedName: "volumePatch",
  type: {
    name: "Composite",
    className: "VolumePatch",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      serviceLevel: {
        serializedName: "properties.serviceLevel",
        defaultValue: "Premium",
        type: {
          name: "String"
        }
      },
      usageThreshold: {
        serializedName: "properties.usageThreshold",
        defaultValue: 107374182400,
        constraints: {
          InclusiveMaximum: 109951162777600,
          InclusiveMinimum: 107374182400
        },
        type: {
          name: "Number"
        }
      },
      exportPolicy: {
        serializedName: "properties.exportPolicy",
        type: {
          name: "Composite",
          className: "VolumePatchPropertiesExportPolicy"
        }
      },
      throughputMibps: {
        serializedName: "properties.throughputMibps",
        constraints: {
          InclusiveMaximum: 4500,
          InclusiveMinimum: 1
        },
        type: {
          name: "Number"
        }
      },
      dataProtection: {
        serializedName: "properties.dataProtection",
        type: {
          name: "Composite",
          className: "VolumePatchPropertiesDataProtection"
        }
      }
    }
  }
};

export const MountTarget: msRest.CompositeMapper = {
  serializedName: "mountTarget",
  type: {
    name: "Composite",
    className: "MountTarget",
    modelProperties: {
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      mountTargetId: {
        readOnly: true,
        serializedName: "properties.mountTargetId",
        constraints: {
          MaxLength: 36,
          MinLength: 36,
          Pattern: /^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/
        },
        type: {
          name: "String"
        }
      },
      fileSystemId: {
        required: true,
        serializedName: "properties.fileSystemId",
        constraints: {
          MaxLength: 36,
          MinLength: 36,
          Pattern: /^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/
        },
        type: {
          name: "String"
        }
      },
      ipAddress: {
        readOnly: true,
        serializedName: "properties.ipAddress",
        type: {
          name: "String"
        }
      },
      smbServerFqdn: {
        serializedName: "properties.smbServerFqdn",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Snapshot: msRest.CompositeMapper = {
  serializedName: "snapshot",
  type: {
    name: "Composite",
    className: "Snapshot",
    modelProperties: {
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      snapshotId: {
        readOnly: true,
        serializedName: "properties.snapshotId",
        constraints: {
          MaxLength: 36,
          MinLength: 36,
          Pattern: /^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/
        },
        type: {
          name: "String"
        }
      },
      created: {
        readOnly: true,
        serializedName: "properties.created",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HourlySchedule: msRest.CompositeMapper = {
  serializedName: "hourlySchedule",
  type: {
    name: "Composite",
    className: "HourlySchedule",
    modelProperties: {
      snapshotsToKeep: {
        serializedName: "snapshotsToKeep",
        type: {
          name: "Number"
        }
      },
      minute: {
        serializedName: "minute",
        type: {
          name: "Number"
        }
      },
      usedBytes: {
        serializedName: "usedBytes",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DailySchedule: msRest.CompositeMapper = {
  serializedName: "dailySchedule",
  type: {
    name: "Composite",
    className: "DailySchedule",
    modelProperties: {
      snapshotsToKeep: {
        serializedName: "snapshotsToKeep",
        type: {
          name: "Number"
        }
      },
      hour: {
        serializedName: "hour",
        type: {
          name: "Number"
        }
      },
      minute: {
        serializedName: "minute",
        type: {
          name: "Number"
        }
      },
      usedBytes: {
        serializedName: "usedBytes",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const WeeklySchedule: msRest.CompositeMapper = {
  serializedName: "weeklySchedule",
  type: {
    name: "Composite",
    className: "WeeklySchedule",
    modelProperties: {
      snapshotsToKeep: {
        serializedName: "snapshotsToKeep",
        type: {
          name: "Number"
        }
      },
      day: {
        serializedName: "day",
        type: {
          name: "String"
        }
      },
      hour: {
        serializedName: "hour",
        type: {
          name: "Number"
        }
      },
      minute: {
        serializedName: "minute",
        type: {
          name: "Number"
        }
      },
      usedBytes: {
        serializedName: "usedBytes",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const MonthlySchedule: msRest.CompositeMapper = {
  serializedName: "monthlySchedule",
  type: {
    name: "Composite",
    className: "MonthlySchedule",
    modelProperties: {
      snapshotsToKeep: {
        serializedName: "snapshotsToKeep",
        type: {
          name: "Number"
        }
      },
      daysOfMonth: {
        serializedName: "daysOfMonth",
        type: {
          name: "String"
        }
      },
      hour: {
        serializedName: "hour",
        type: {
          name: "Number"
        }
      },
      minute: {
        serializedName: "minute",
        type: {
          name: "Number"
        }
      },
      usedBytes: {
        serializedName: "usedBytes",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const SnapshotPolicy: msRest.CompositeMapper = {
  serializedName: "snapshotPolicy",
  type: {
    name: "Composite",
    className: "SnapshotPolicy",
    modelProperties: {
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      hourlySchedule: {
        serializedName: "properties.hourlySchedule",
        type: {
          name: "Composite",
          className: "HourlySchedule"
        }
      },
      dailySchedule: {
        serializedName: "properties.dailySchedule",
        type: {
          name: "Composite",
          className: "DailySchedule"
        }
      },
      weeklySchedule: {
        serializedName: "properties.weeklySchedule",
        type: {
          name: "Composite",
          className: "WeeklySchedule"
        }
      },
      monthlySchedule: {
        serializedName: "properties.monthlySchedule",
        type: {
          name: "Composite",
          className: "MonthlySchedule"
        }
      },
      enabled: {
        serializedName: "properties.enabled",
        type: {
          name: "Boolean"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SnapshotPolicyDetails: msRest.CompositeMapper = {
  serializedName: "snapshotPolicyDetails",
  type: {
    name: "Composite",
    className: "SnapshotPolicyDetails",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      hourlySchedule: {
        serializedName: "properties.hourlySchedule",
        type: {
          name: "Composite",
          className: "HourlySchedule"
        }
      },
      dailySchedule: {
        serializedName: "properties.dailySchedule",
        type: {
          name: "Composite",
          className: "DailySchedule"
        }
      },
      weeklySchedule: {
        serializedName: "properties.weeklySchedule",
        type: {
          name: "Composite",
          className: "WeeklySchedule"
        }
      },
      monthlySchedule: {
        serializedName: "properties.monthlySchedule",
        type: {
          name: "Composite",
          className: "MonthlySchedule"
        }
      },
      enabled: {
        serializedName: "properties.enabled",
        type: {
          name: "Boolean"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SnapshotPolicyPatch: msRest.CompositeMapper = {
  serializedName: "snapshotPolicyPatch",
  type: {
    name: "Composite",
    className: "SnapshotPolicyPatch",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      hourlySchedule: {
        serializedName: "properties.hourlySchedule",
        type: {
          name: "Composite",
          className: "HourlySchedule"
        }
      },
      dailySchedule: {
        serializedName: "properties.dailySchedule",
        type: {
          name: "Composite",
          className: "DailySchedule"
        }
      },
      weeklySchedule: {
        serializedName: "properties.weeklySchedule",
        type: {
          name: "Composite",
          className: "WeeklySchedule"
        }
      },
      monthlySchedule: {
        serializedName: "properties.monthlySchedule",
        type: {
          name: "Composite",
          className: "MonthlySchedule"
        }
      },
      enabled: {
        serializedName: "properties.enabled",
        type: {
          name: "Boolean"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SnapshotPolicyVolumeList: msRest.CompositeMapper = {
  serializedName: "snapshotPolicyVolumeList",
  type: {
    name: "Composite",
    className: "SnapshotPolicyVolumeList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Object"
            }
          }
        }
      }
    }
  }
};

export const VolumeRevert: msRest.CompositeMapper = {
  serializedName: "volumeRevert",
  type: {
    name: "Composite",
    className: "VolumeRevert",
    modelProperties: {
      snapshotId: {
        serializedName: "snapshotId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AuthorizeRequest: msRest.CompositeMapper = {
  serializedName: "authorizeRequest",
  type: {
    name: "Composite",
    className: "AuthorizeRequest",
    modelProperties: {
      remoteVolumeResourceId: {
        serializedName: "remoteVolumeResourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BreakReplicationRequest: msRest.CompositeMapper = {
  serializedName: "breakReplicationRequest",
  type: {
    name: "Composite",
    className: "BreakReplicationRequest",
    modelProperties: {
      forceBreakReplication: {
        serializedName: "forceBreakReplication",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PoolChangeRequest: msRest.CompositeMapper = {
  serializedName: "poolChangeRequest",
  type: {
    name: "Composite",
    className: "PoolChangeRequest",
    modelProperties: {
      newPoolResourceId: {
        required: true,
        serializedName: "newPoolResourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Backup: msRest.CompositeMapper = {
  serializedName: "backup",
  type: {
    name: "Composite",
    className: "Backup",
    modelProperties: {
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      backupId: {
        readOnly: true,
        serializedName: "properties.backupId",
        constraints: {
          MaxLength: 36,
          MinLength: 36,
          Pattern: /^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/
        },
        type: {
          name: "String"
        }
      },
      creationDate: {
        readOnly: true,
        serializedName: "properties.creationDate",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      size: {
        readOnly: true,
        serializedName: "properties.size",
        type: {
          name: "Number"
        }
      },
      label: {
        serializedName: "properties.label",
        type: {
          name: "String"
        }
      },
      backupType: {
        readOnly: true,
        serializedName: "properties.backupType",
        type: {
          name: "String"
        }
      },
      failureReason: {
        readOnly: true,
        serializedName: "properties.failureReason",
        type: {
          name: "String"
        }
      },
      volumeName: {
        readOnly: true,
        serializedName: "properties.volumeName",
        type: {
          name: "String"
        }
      },
      useExistingSnapshot: {
        serializedName: "properties.useExistingSnapshot",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const BackupPatch: msRest.CompositeMapper = {
  serializedName: "backupPatch",
  type: {
    name: "Composite",
    className: "BackupPatch",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      backupId: {
        readOnly: true,
        serializedName: "properties.backupId",
        constraints: {
          MaxLength: 36,
          MinLength: 36,
          Pattern: /^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/
        },
        type: {
          name: "String"
        }
      },
      creationDate: {
        readOnly: true,
        serializedName: "properties.creationDate",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      size: {
        readOnly: true,
        serializedName: "properties.size",
        type: {
          name: "Number"
        }
      },
      label: {
        serializedName: "properties.label",
        type: {
          name: "String"
        }
      },
      backupType: {
        readOnly: true,
        serializedName: "properties.backupType",
        type: {
          name: "String"
        }
      },
      failureReason: {
        readOnly: true,
        serializedName: "properties.failureReason",
        type: {
          name: "String"
        }
      },
      volumeName: {
        readOnly: true,
        serializedName: "properties.volumeName",
        type: {
          name: "String"
        }
      },
      useExistingSnapshot: {
        serializedName: "properties.useExistingSnapshot",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const VolumeBackups: msRest.CompositeMapper = {
  serializedName: "volumeBackups",
  type: {
    name: "Composite",
    className: "VolumeBackups",
    modelProperties: {
      volumeName: {
        serializedName: "volumeName",
        type: {
          name: "String"
        }
      },
      backupsCount: {
        serializedName: "backupsCount",
        type: {
          name: "Number"
        }
      },
      policyEnabled: {
        serializedName: "policyEnabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const BackupPolicy: msRest.CompositeMapper = {
  serializedName: "backupPolicy",
  type: {
    name: "Composite",
    className: "BackupPolicy",
    modelProperties: {
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      name1: {
        readOnly: true,
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      dailyBackupsToKeep: {
        serializedName: "properties.dailyBackupsToKeep",
        type: {
          name: "Number"
        }
      },
      weeklyBackupsToKeep: {
        serializedName: "properties.weeklyBackupsToKeep",
        type: {
          name: "Number"
        }
      },
      monthlyBackupsToKeep: {
        serializedName: "properties.monthlyBackupsToKeep",
        type: {
          name: "Number"
        }
      },
      yearlyBackupsToKeep: {
        serializedName: "properties.yearlyBackupsToKeep",
        type: {
          name: "Number"
        }
      },
      volumesAssigned: {
        serializedName: "properties.volumesAssigned",
        type: {
          name: "Number"
        }
      },
      enabled: {
        serializedName: "properties.enabled",
        type: {
          name: "Boolean"
        }
      },
      volumeBackups: {
        serializedName: "properties.volumeBackups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VolumeBackups"
            }
          }
        }
      }
    }
  }
};

export const BackupPolicyDetails: msRest.CompositeMapper = {
  serializedName: "backupPolicyDetails",
  type: {
    name: "Composite",
    className: "BackupPolicyDetails",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      name1: {
        readOnly: true,
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      dailyBackupsToKeep: {
        serializedName: "properties.dailyBackupsToKeep",
        type: {
          name: "Number"
        }
      },
      weeklyBackupsToKeep: {
        serializedName: "properties.weeklyBackupsToKeep",
        type: {
          name: "Number"
        }
      },
      monthlyBackupsToKeep: {
        serializedName: "properties.monthlyBackupsToKeep",
        type: {
          name: "Number"
        }
      },
      yearlyBackupsToKeep: {
        serializedName: "properties.yearlyBackupsToKeep",
        type: {
          name: "Number"
        }
      },
      volumesAssigned: {
        serializedName: "properties.volumesAssigned",
        type: {
          name: "Number"
        }
      },
      enabled: {
        serializedName: "properties.enabled",
        type: {
          name: "Boolean"
        }
      },
      volumeBackups: {
        serializedName: "properties.volumeBackups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VolumeBackups"
            }
          }
        }
      }
    }
  }
};

export const BackupPolicyPatch: msRest.CompositeMapper = {
  serializedName: "backupPolicyPatch",
  type: {
    name: "Composite",
    className: "BackupPolicyPatch",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      name1: {
        readOnly: true,
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      dailyBackupsToKeep: {
        serializedName: "properties.dailyBackupsToKeep",
        type: {
          name: "Number"
        }
      },
      weeklyBackupsToKeep: {
        serializedName: "properties.weeklyBackupsToKeep",
        type: {
          name: "Number"
        }
      },
      monthlyBackupsToKeep: {
        serializedName: "properties.monthlyBackupsToKeep",
        type: {
          name: "Number"
        }
      },
      yearlyBackupsToKeep: {
        serializedName: "properties.yearlyBackupsToKeep",
        type: {
          name: "Number"
        }
      },
      volumesAssigned: {
        serializedName: "properties.volumesAssigned",
        type: {
          name: "Number"
        }
      },
      enabled: {
        serializedName: "properties.enabled",
        type: {
          name: "Boolean"
        }
      },
      volumeBackups: {
        serializedName: "properties.volumeBackups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VolumeBackups"
            }
          }
        }
      }
    }
  }
};

export const Vault: msRest.CompositeMapper = {
  serializedName: "vault",
  type: {
    name: "Composite",
    className: "Vault",
    modelProperties: {
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      vaultName: {
        serializedName: "properties.vaultName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BackupStatus: msRest.CompositeMapper = {
  serializedName: "backupStatus",
  type: {
    name: "Composite",
    className: "BackupStatus",
    modelProperties: {
      healthy: {
        readOnly: true,
        serializedName: "healthy",
        type: {
          name: "Boolean"
        }
      },
      relationshipStatus: {
        readOnly: true,
        serializedName: "relationshipStatus",
        type: {
          name: "String"
        }
      },
      mirrorState: {
        readOnly: true,
        serializedName: "mirrorState",
        type: {
          name: "String"
        }
      },
      unhealthyReason: {
        readOnly: true,
        serializedName: "unhealthyReason",
        type: {
          name: "String"
        }
      },
      errorMessage: {
        readOnly: true,
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      }
    }
  }
};

export const NetAppAccountList: msRest.CompositeMapper = {
  serializedName: "netAppAccountList",
  type: {
    name: "Composite",
    className: "NetAppAccountList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NetAppAccount"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CapacityPoolList: msRest.CompositeMapper = {
  serializedName: "capacityPoolList",
  type: {
    name: "Composite",
    className: "CapacityPoolList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CapacityPool"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VolumeList: msRest.CompositeMapper = {
  serializedName: "volumeList",
  type: {
    name: "Composite",
    className: "VolumeList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Volume"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SnapshotsList: msRest.CompositeMapper = {
  serializedName: "snapshotsList",
  type: {
    name: "Composite",
    className: "SnapshotsList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Snapshot"
            }
          }
        }
      }
    }
  }
};

export const SnapshotPoliciesList: msRest.CompositeMapper = {
  serializedName: "snapshotPoliciesList",
  type: {
    name: "Composite",
    className: "SnapshotPoliciesList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SnapshotPolicy"
            }
          }
        }
      }
    }
  }
};

export const BackupsList: msRest.CompositeMapper = {
  serializedName: "backupsList",
  type: {
    name: "Composite",
    className: "BackupsList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Backup"
            }
          }
        }
      }
    }
  }
};

export const BackupPoliciesList: msRest.CompositeMapper = {
  serializedName: "backupPoliciesList",
  type: {
    name: "Composite",
    className: "BackupPoliciesList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BackupPolicy"
            }
          }
        }
      }
    }
  }
};

export const VaultList: msRest.CompositeMapper = {
  serializedName: "vaultList",
  type: {
    name: "Composite",
    className: "VaultList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Vault"
            }
          }
        }
      }
    }
  }
};
