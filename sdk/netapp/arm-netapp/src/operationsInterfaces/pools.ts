/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  CapacityPool,
  PoolsListOptionalParams,
  PoolsGetOptionalParams,
  PoolsGetResponse,
  PoolsCreateOrUpdateOptionalParams,
  PoolsCreateOrUpdateResponse,
  CapacityPoolPatch,
  PoolsUpdateOptionalParams,
  PoolsUpdateResponse,
  PoolsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Pools. */
export interface Pools {
  /**
   * List all capacity pools in the NetApp Account
   * @param resourceGroupName The name of the resource group.
   * @param accountName The name of the NetApp account
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    accountName: string,
    options?: PoolsListOptionalParams
  ): PagedAsyncIterableIterator<CapacityPool>;
  /**
   * Get details of the specified capacity pool
   * @param resourceGroupName The name of the resource group.
   * @param accountName The name of the NetApp account
   * @param poolName The name of the capacity pool
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    poolName: string,
    options?: PoolsGetOptionalParams
  ): Promise<PoolsGetResponse>;
  /**
   * Create or Update a capacity pool
   * @param resourceGroupName The name of the resource group.
   * @param accountName The name of the NetApp account
   * @param poolName The name of the capacity pool
   * @param body Capacity pool object supplied in the body of the operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    accountName: string,
    poolName: string,
    body: CapacityPool,
    options?: PoolsCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<PoolsCreateOrUpdateResponse>,
      PoolsCreateOrUpdateResponse
    >
  >;
  /**
   * Create or Update a capacity pool
   * @param resourceGroupName The name of the resource group.
   * @param accountName The name of the NetApp account
   * @param poolName The name of the capacity pool
   * @param body Capacity pool object supplied in the body of the operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    accountName: string,
    poolName: string,
    body: CapacityPool,
    options?: PoolsCreateOrUpdateOptionalParams
  ): Promise<PoolsCreateOrUpdateResponse>;
  /**
   * Patch the specified capacity pool
   * @param resourceGroupName The name of the resource group.
   * @param accountName The name of the NetApp account
   * @param poolName The name of the capacity pool
   * @param body Capacity pool object supplied in the body of the operation.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    accountName: string,
    poolName: string,
    body: CapacityPoolPatch,
    options?: PoolsUpdateOptionalParams
  ): Promise<
    PollerLike<PollOperationState<PoolsUpdateResponse>, PoolsUpdateResponse>
  >;
  /**
   * Patch the specified capacity pool
   * @param resourceGroupName The name of the resource group.
   * @param accountName The name of the NetApp account
   * @param poolName The name of the capacity pool
   * @param body Capacity pool object supplied in the body of the operation.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    accountName: string,
    poolName: string,
    body: CapacityPoolPatch,
    options?: PoolsUpdateOptionalParams
  ): Promise<PoolsUpdateResponse>;
  /**
   * Delete the specified capacity pool
   * @param resourceGroupName The name of the resource group.
   * @param accountName The name of the NetApp account
   * @param poolName The name of the capacity pool
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    accountName: string,
    poolName: string,
    options?: PoolsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Delete the specified capacity pool
   * @param resourceGroupName The name of the resource group.
   * @param accountName The name of the NetApp account
   * @param poolName The name of the capacity pool
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    accountName: string,
    poolName: string,
    options?: PoolsDeleteOptionalParams
  ): Promise<void>;
}
