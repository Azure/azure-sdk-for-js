/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  VolumeGroup,
  VolumeGroupsListByNetAppAccountOptionalParams,
  VolumeGroupsGetOptionalParams,
  VolumeGroupsGetResponse,
  VolumeGroupDetails,
  VolumeGroupsCreateOptionalParams,
  VolumeGroupsCreateResponse,
  VolumeGroupsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a VolumeGroups. */
export interface VolumeGroups {
  /**
   * List all volume groups for given account
   * @param resourceGroupName The name of the resource group.
   * @param accountName The name of the NetApp account
   * @param options The options parameters.
   */
  listByNetAppAccount(
    resourceGroupName: string,
    accountName: string,
    options?: VolumeGroupsListByNetAppAccountOptionalParams
  ): PagedAsyncIterableIterator<VolumeGroup>;
  /**
   * Get details of the specified volume group
   * @param resourceGroupName The name of the resource group.
   * @param accountName The name of the NetApp account
   * @param volumeGroupName The name of the volumeGroup
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    volumeGroupName: string,
    options?: VolumeGroupsGetOptionalParams
  ): Promise<VolumeGroupsGetResponse>;
  /**
   * Create a volume group along with specified volumes
   * @param resourceGroupName The name of the resource group.
   * @param accountName The name of the NetApp account
   * @param volumeGroupName The name of the volumeGroup
   * @param body Volume Group object supplied in the body of the operation.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    accountName: string,
    volumeGroupName: string,
    body: VolumeGroupDetails,
    options?: VolumeGroupsCreateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<VolumeGroupsCreateResponse>,
      VolumeGroupsCreateResponse
    >
  >;
  /**
   * Create a volume group along with specified volumes
   * @param resourceGroupName The name of the resource group.
   * @param accountName The name of the NetApp account
   * @param volumeGroupName The name of the volumeGroup
   * @param body Volume Group object supplied in the body of the operation.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    accountName: string,
    volumeGroupName: string,
    body: VolumeGroupDetails,
    options?: VolumeGroupsCreateOptionalParams
  ): Promise<VolumeGroupsCreateResponse>;
  /**
   * Delete the specified volume group only if there are no volumes under volume group.
   * @param resourceGroupName The name of the resource group.
   * @param accountName The name of the NetApp account
   * @param volumeGroupName The name of the volumeGroup
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    accountName: string,
    volumeGroupName: string,
    options?: VolumeGroupsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Delete the specified volume group only if there are no volumes under volume group.
   * @param resourceGroupName The name of the resource group.
   * @param accountName The name of the NetApp account
   * @param volumeGroupName The name of the volumeGroup
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    accountName: string,
    volumeGroupName: string,
    options?: VolumeGroupsDeleteOptionalParams
  ): Promise<void>;
}
