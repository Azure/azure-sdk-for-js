/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  Backup,
  AccountBackupsListOptionalParams,
  AccountBackupsGetOptionalParams,
  AccountBackupsGetResponse,
  AccountBackupsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a AccountBackups. */
export interface AccountBackups {
  /**
   * List all Backups for a Netapp Account
   * @param resourceGroupName The name of the resource group.
   * @param accountName The name of the NetApp account
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    accountName: string,
    options?: AccountBackupsListOptionalParams
  ): PagedAsyncIterableIterator<Backup>;
  /**
   * Gets the specified backup for a Netapp Account
   * @param resourceGroupName The name of the resource group.
   * @param accountName The name of the NetApp account
   * @param backupName The name of the backup
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    backupName: string,
    options?: AccountBackupsGetOptionalParams
  ): Promise<AccountBackupsGetResponse>;
  /**
   * Delete the specified Backup for a Netapp Account
   * @param resourceGroupName The name of the resource group.
   * @param accountName The name of the NetApp account
   * @param backupName The name of the backup
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    accountName: string,
    backupName: string,
    options?: AccountBackupsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Delete the specified Backup for a Netapp Account
   * @param resourceGroupName The name of the resource group.
   * @param accountName The name of the NetApp account
   * @param backupName The name of the backup
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    accountName: string,
    backupName: string,
    options?: AccountBackupsDeleteOptionalParams
  ): Promise<void>;
}
