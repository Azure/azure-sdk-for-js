/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  SnapshotPolicy,
  SnapshotPoliciesListOptionalParams,
  SnapshotPoliciesGetOptionalParams,
  SnapshotPoliciesGetResponse,
  SnapshotPoliciesCreateOptionalParams,
  SnapshotPoliciesCreateResponse,
  SnapshotPolicyPatch,
  SnapshotPoliciesUpdateOptionalParams,
  SnapshotPoliciesUpdateResponse,
  SnapshotPoliciesDeleteOptionalParams,
  SnapshotPoliciesListVolumesOptionalParams,
  SnapshotPoliciesListVolumesResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SnapshotPolicies. */
export interface SnapshotPolicies {
  /**
   * List snapshot policy
   * @param resourceGroupName The name of the resource group.
   * @param accountName The name of the NetApp account
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    accountName: string,
    options?: SnapshotPoliciesListOptionalParams
  ): PagedAsyncIterableIterator<SnapshotPolicy>;
  /**
   * Get a snapshot Policy
   * @param resourceGroupName The name of the resource group.
   * @param accountName The name of the NetApp account
   * @param snapshotPolicyName The name of the snapshot policy
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    snapshotPolicyName: string,
    options?: SnapshotPoliciesGetOptionalParams
  ): Promise<SnapshotPoliciesGetResponse>;
  /**
   * Create a snapshot policy
   * @param resourceGroupName The name of the resource group.
   * @param accountName The name of the NetApp account
   * @param snapshotPolicyName The name of the snapshot policy
   * @param body Snapshot policy object supplied in the body of the operation.
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    accountName: string,
    snapshotPolicyName: string,
    body: SnapshotPolicy,
    options?: SnapshotPoliciesCreateOptionalParams
  ): Promise<SnapshotPoliciesCreateResponse>;
  /**
   * Patch a snapshot policy
   * @param resourceGroupName The name of the resource group.
   * @param accountName The name of the NetApp account
   * @param snapshotPolicyName The name of the snapshot policy
   * @param body Snapshot policy object supplied in the body of the operation.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    accountName: string,
    snapshotPolicyName: string,
    body: SnapshotPolicyPatch,
    options?: SnapshotPoliciesUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<SnapshotPoliciesUpdateResponse>,
      SnapshotPoliciesUpdateResponse
    >
  >;
  /**
   * Patch a snapshot policy
   * @param resourceGroupName The name of the resource group.
   * @param accountName The name of the NetApp account
   * @param snapshotPolicyName The name of the snapshot policy
   * @param body Snapshot policy object supplied in the body of the operation.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    accountName: string,
    snapshotPolicyName: string,
    body: SnapshotPolicyPatch,
    options?: SnapshotPoliciesUpdateOptionalParams
  ): Promise<SnapshotPoliciesUpdateResponse>;
  /**
   * Delete snapshot policy
   * @param resourceGroupName The name of the resource group.
   * @param accountName The name of the NetApp account
   * @param snapshotPolicyName The name of the snapshot policy
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    accountName: string,
    snapshotPolicyName: string,
    options?: SnapshotPoliciesDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Delete snapshot policy
   * @param resourceGroupName The name of the resource group.
   * @param accountName The name of the NetApp account
   * @param snapshotPolicyName The name of the snapshot policy
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    accountName: string,
    snapshotPolicyName: string,
    options?: SnapshotPoliciesDeleteOptionalParams
  ): Promise<void>;
  /**
   * Get volumes associated with snapshot policy
   * @param resourceGroupName The name of the resource group.
   * @param accountName The name of the NetApp account
   * @param snapshotPolicyName The name of the snapshot policy
   * @param options The options parameters.
   */
  listVolumes(
    resourceGroupName: string,
    accountName: string,
    snapshotPolicyName: string,
    options?: SnapshotPoliciesListVolumesOptionalParams
  ): Promise<SnapshotPoliciesListVolumesResponse>;
}
