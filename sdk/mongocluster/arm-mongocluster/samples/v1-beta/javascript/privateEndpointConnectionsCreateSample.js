/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
const { MongoClusterManagementClient } = require("@azure/arm-mongocluster");
const { DefaultAzureCredential } = require("@azure/identity");
require("dotenv").config();

/**
 * This sample demonstrates how to Create a Private endpoint connection
 *
 * @summary Create a Private endpoint connection
 * x-ms-original-file: specification/mongocluster/resource-manager/Microsoft.DocumentDB/preview/2024-03-01-preview/examples/MongoClusters_PrivateEndpointConnectionPut.json
 */
async function approvesAPrivateEndpointConnectionOnAMongoClusterResource() {
  const subscriptionId =
    process.env["MONGOCLUSTER_SUBSCRIPTION_ID"] || "ffffffff-ffff-ffff-ffff-ffffffffffff";
  const resourceGroupName = process.env["MONGOCLUSTER_RESOURCE_GROUP"] || "TestGroup";
  const mongoClusterName = "myMongoCluster";
  const privateEndpointConnectionName = "pecTest";
  const resource = {
    properties: {
      privateLinkServiceConnectionState: {
        description: "Auto-Approved",
        status: "Approved",
      },
    },
  };
  const credential = new DefaultAzureCredential();
  const client = new MongoClusterManagementClient(credential, subscriptionId);
  const result = await client.privateEndpointConnections.beginCreateAndWait(
    resourceGroupName,
    mongoClusterName,
    privateEndpointConnectionName,
    resource,
  );
  console.log(result);
}

async function main() {
  approvesAPrivateEndpointConnectionOnAMongoClusterResource();
}

main().catch(console.error);
