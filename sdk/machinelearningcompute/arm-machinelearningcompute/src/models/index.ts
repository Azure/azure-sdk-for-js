/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** Wrapper for error response to follow ARM guidelines. */
export interface ErrorResponseWrapper {
  /** The error response. */
  error?: ErrorResponse;
}

/** Error response information. */
export interface ErrorResponse {
  /** Error code. */
  code: string;
  /** Error message. */
  message: string;
  /** An array of error detail objects. */
  details?: ErrorDetail[];
}

/** Error detail information. */
export interface ErrorDetail {
  /** Error code. */
  code: string;
  /** Error message. */
  message: string;
}

/** Properties of Storage Account. */
export interface StorageAccountProperties {
  /** ARM resource ID of the Azure Storage Account to store CLI specific files. If not provided one will be created. This cannot be changed once the cluster is created. */
  resourceId?: string;
}

/** Properties of Azure Container Registry. */
export interface ContainerRegistryProperties {
  /** ARM resource ID of the Azure Container Registry used to store Docker images for web services in the cluster. If not provided one will be created. This cannot be changed once the cluster is created. */
  resourceId?: string;
}

/** Information about the container service backing the cluster */
export interface AcsClusterProperties {
  /**
   * The FQDN of the cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clusterFqdn?: string;
  /** Type of orchestrator. It cannot be changed once the cluster is created. */
  orchestratorType: OrchestratorType;
  /** Orchestrator specific properties */
  orchestratorProperties?: KubernetesClusterProperties;
  /** The system services deployed to the cluster */
  systemServices?: SystemService[];
  /** The number of master nodes in the container service. */
  masterCount?: number;
  /** The number of agent nodes in the Container Service. This can be changed to scale the cluster. */
  agentCount?: number;
  /** The Azure VM size of the agent VM nodes. This cannot be changed once the cluster is created. This list is non exhaustive; refer to https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes for the possible VM sizes. */
  agentVmSize?: AgentVMSizeTypes;
}

/** Kubernetes cluster specific properties */
export interface KubernetesClusterProperties {
  /** The Azure Service Principal used by Kubernetes */
  servicePrincipal?: ServicePrincipalProperties;
}

/** The Azure service principal used by Kubernetes for configuring load balancers */
export interface ServicePrincipalProperties {
  /** The service principal client ID */
  clientId: string;
  /** The service principal secret. This is not returned in response of GET/PUT on the resource. To see this please call listKeys. */
  secret: string;
}

/** Information about a system service deployed in the cluster */
export interface SystemService {
  /** The system service type */
  systemServiceType: SystemServiceType;
  /**
   * The public IP address of the system service
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly publicIpAddress?: string;
  /**
   * The state of the system service
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly version?: string;
}

/** Properties of App Insights. */
export interface AppInsightsProperties {
  /** ARM resource ID of the App Insights. */
  resourceId?: string;
}

/** Global configuration for services in the cluster. */
export interface GlobalServiceConfiguration {
  /** Describes unknown properties. The value of an unknown property can be of "any" type. */
  [property: string]: any;
  /** The configuration ETag for updates. */
  etag?: string;
  /** The SSL configuration properties */
  ssl?: SslConfiguration;
  /** Optional global authorization keys for all user services deployed in cluster. These are used if the service does not have auth keys. */
  serviceAuth?: ServiceAuthConfiguration;
  /** The auto-scale configuration */
  autoScale?: AutoScaleConfiguration;
}

/** SSL configuration. If configured data-plane calls to user services will be exposed over SSL only. */
export interface SslConfiguration {
  /** SSL status. Allowed values are Enabled and Disabled. */
  status?: Status;
  /** The SSL cert data in PEM format. */
  cert?: string;
  /** The SSL key data in PEM format. This is not returned in response of GET/PUT on the resource. To see this please call listKeys API. */
  key?: string;
  /** The CName of the certificate. */
  cname?: string;
}

/** Global service auth configuration properties. These are the data-plane authorization keys and are used if a service doesn't define it's own. */
export interface ServiceAuthConfiguration {
  /** The primary auth key hash. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API. */
  primaryAuthKeyHash: string;
  /** The secondary auth key hash. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API. */
  secondaryAuthKeyHash: string;
}

/** AutoScale configuration properties. */
export interface AutoScaleConfiguration {
  /** If auto-scale is enabled for all services. Each service can turn it off individually. */
  status?: Status;
  /** The minimum number of replicas for each service. */
  minReplicas?: number;
  /** The maximum number of replicas for each service. */
  maxReplicas?: number;
  /** The target utilization. */
  targetUtilization?: number;
  /** Refresh period in seconds. */
  refreshPeriodInSeconds?: number;
}

/** Azure resource */
export interface Resource {
  /**
   * Specifies the resource ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Specifies the name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /** Specifies the location of the resource. */
  location: string;
  /**
   * Specifies the type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** Contains resource tags defined as key/value pairs. */
  tags?: { [propertyName: string]: string };
}

/** Parameters for PATCH operation on an operationalization cluster */
export interface OperationalizationClusterUpdateParameters {
  /** Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters. */
  tags?: { [propertyName: string]: string };
}

/** Credentials to resources in the cluster. */
export interface OperationalizationClusterCredentials {
  /** Credentials for the Storage Account. */
  storageAccount?: StorageAccountCredentials;
  /** Credentials for Azure Container Registry. */
  containerRegistry?: ContainerRegistryCredentials;
  /** Credentials for Azure Container Service. */
  containerService?: ContainerServiceCredentials;
  /** Credentials for Azure AppInsights. */
  appInsights?: AppInsightsCredentials;
  /** Global authorization keys for all user services deployed in cluster. These are used if the service does not have auth keys. */
  serviceAuthConfiguration?: ServiceAuthConfiguration;
  /** The SSL configuration for the services. */
  sslConfiguration?: SslConfiguration;
}

/** Access information for the storage account. */
export interface StorageAccountCredentials {
  /**
   * The ARM resource ID of the storage account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceId?: string;
  /**
   * The primary key of the storage account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly primaryKey?: string;
  /**
   * The secondary key of the storage account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly secondaryKey?: string;
}

/** Information about the Azure Container Registry which contains the images deployed to the cluster. */
export interface ContainerRegistryCredentials {
  /**
   * The ACR login server name. User name is the first part of the FQDN.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly loginServer?: string;
  /**
   * The ACR primary password.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly password?: string;
  /**
   * The ACR secondary password.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly password2?: string;
  /**
   * The ACR login username.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly username?: string;
}

/** Information about the Azure Container Registry which contains the images deployed to the cluster. */
export interface ContainerServiceCredentials {
  /**
   * The ACS kube config file.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly acsKubeConfig?: string;
  /**
   * Service principal configuration used by Kubernetes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly servicePrincipalConfiguration?: ServicePrincipalProperties;
  /**
   * The ACR image pull secret name which was created in Kubernetes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly imagePullSecretName?: string;
}

/** AppInsights credentials. */
export interface AppInsightsCredentials {
  /** The AppInsights application ID. */
  appId?: string;
  /** The AppInsights instrumentation key. This is not returned in response of GET/PUT on the resource. To see this please call listKeys API. */
  instrumentationKey?: string;
}

/** Information about updates available for system services in a cluster. */
export interface CheckSystemServicesUpdatesAvailableResponse {
  /**
   * Yes if updates are available for the system services, No if not.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly updatesAvailable?: UpdatesAvailable;
}

/** Response of the update system services API */
export interface UpdateSystemServicesResponse {
  /**
   * Update status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly updateStatus?: OperationStatus;
  /**
   * The date and time when the last system services update was started.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly updateStartedOn?: Date;
  /**
   * The date and time when the last system services update completed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly updateCompletedOn?: Date;
}

/** Paginated list of operationalization clusters. */
export interface PaginatedOperationalizationClustersList {
  /** An array of cluster objects. */
  value?: OperationalizationCluster[];
  /** A continuation link (absolute URI) to the next page of results in the list. */
  nextLink?: string;
}

/** Available operation list. */
export interface AvailableOperations {
  /** An array of available operations. */
  value?: ResourceOperation[];
}

/** Resource operation. */
export interface ResourceOperation {
  /** Name of this operation. */
  name?: string;
  /** Display of the operation. */
  display?: ResourceOperationDisplay;
  /** The operation origin. */
  origin?: string;
}

/** Display of the operation. */
export interface ResourceOperationDisplay {
  /** The resource provider name. */
  provider?: string;
  /** The resource name. */
  resource?: string;
  /** The operation. */
  operation?: string;
  /** The description of the operation. */
  description?: string;
}

/** Instance of an Azure ML Operationalization Cluster resource. */
export interface OperationalizationCluster extends Resource {
  /** The description of the cluster. */
  description?: string;
  /**
   * The date and time when the cluster was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdOn?: Date;
  /**
   * The date and time when the cluster was last modified.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly modifiedOn?: Date;
  /**
   * The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: OperationStatus;
  /**
   * List of provisioning errors reported by the resource provider.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningErrors?: ErrorResponseWrapper[];
  /** The cluster type. */
  clusterType?: ClusterType;
  /** Storage Account properties. */
  storageAccount?: StorageAccountProperties;
  /** Container Registry properties. */
  containerRegistry?: ContainerRegistryProperties;
  /** Parameters for the Azure Container Service cluster. */
  containerService?: AcsClusterProperties;
  /** AppInsights configuration. */
  appInsights?: AppInsightsProperties;
  /** Contains global configuration for the web services in the cluster. */
  globalServiceConfiguration?: GlobalServiceConfiguration;
}

/** Defines headers for OperationalizationClusters_delete operation. */
export interface OperationalizationClustersDeleteHeaders {
  /** URI of the async operation. */
  location?: string;
}

/** Defines headers for OperationalizationClusters_updateSystemServices operation. */
export interface OperationalizationClustersUpdateSystemServicesHeaders {
  /** URI of the async operation. */
  location?: string;
}

/** Known values of {@link OperationStatus} that the service accepts. */
export enum KnownOperationStatus {
  /** Unknown */
  Unknown = "Unknown",
  /** Updating */
  Updating = "Updating",
  /** Creating */
  Creating = "Creating",
  /** Deleting */
  Deleting = "Deleting",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled"
}

/**
 * Defines values for OperationStatus. \
 * {@link KnownOperationStatus} can be used interchangeably with OperationStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Updating** \
 * **Creating** \
 * **Deleting** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled**
 */
export type OperationStatus = string;

/** Known values of {@link ClusterType} that the service accepts. */
export enum KnownClusterType {
  /** ACS */
  ACS = "ACS",
  /** Local */
  Local = "Local"
}

/**
 * Defines values for ClusterType. \
 * {@link KnownClusterType} can be used interchangeably with ClusterType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ACS** \
 * **Local**
 */
export type ClusterType = string;

/** Known values of {@link OrchestratorType} that the service accepts. */
export enum KnownOrchestratorType {
  /** Kubernetes */
  Kubernetes = "Kubernetes",
  /** None */
  None = "None"
}

/**
 * Defines values for OrchestratorType. \
 * {@link KnownOrchestratorType} can be used interchangeably with OrchestratorType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Kubernetes** \
 * **None**
 */
export type OrchestratorType = string;

/** Known values of {@link SystemServiceType} that the service accepts. */
export enum KnownSystemServiceType {
  /** None */
  None = "None",
  /** ScoringFrontEnd */
  ScoringFrontEnd = "ScoringFrontEnd",
  /** BatchFrontEnd */
  BatchFrontEnd = "BatchFrontEnd"
}

/**
 * Defines values for SystemServiceType. \
 * {@link KnownSystemServiceType} can be used interchangeably with SystemServiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **ScoringFrontEnd** \
 * **BatchFrontEnd**
 */
export type SystemServiceType = string;

/** Known values of {@link AgentVMSizeTypes} that the service accepts. */
export enum KnownAgentVMSizeTypes {
  /** StandardA0 */
  StandardA0 = "Standard_A0",
  /** StandardA1 */
  StandardA1 = "Standard_A1",
  /** StandardA2 */
  StandardA2 = "Standard_A2",
  /** StandardA3 */
  StandardA3 = "Standard_A3",
  /** StandardA4 */
  StandardA4 = "Standard_A4",
  /** StandardA5 */
  StandardA5 = "Standard_A5",
  /** StandardA6 */
  StandardA6 = "Standard_A6",
  /** StandardA7 */
  StandardA7 = "Standard_A7",
  /** StandardA8 */
  StandardA8 = "Standard_A8",
  /** StandardA9 */
  StandardA9 = "Standard_A9",
  /** StandardA10 */
  StandardA10 = "Standard_A10",
  /** StandardA11 */
  StandardA11 = "Standard_A11",
  /** StandardD1 */
  StandardD1 = "Standard_D1",
  /** StandardD2 */
  StandardD2 = "Standard_D2",
  /** StandardD3 */
  StandardD3 = "Standard_D3",
  /** StandardD4 */
  StandardD4 = "Standard_D4",
  /** StandardD11 */
  StandardD11 = "Standard_D11",
  /** StandardD12 */
  StandardD12 = "Standard_D12",
  /** StandardD13 */
  StandardD13 = "Standard_D13",
  /** StandardD14 */
  StandardD14 = "Standard_D14",
  /** StandardD1V2 */
  StandardD1V2 = "Standard_D1_v2",
  /** StandardD2V2 */
  StandardD2V2 = "Standard_D2_v2",
  /** StandardD3V2 */
  StandardD3V2 = "Standard_D3_v2",
  /** StandardD4V2 */
  StandardD4V2 = "Standard_D4_v2",
  /** StandardD5V2 */
  StandardD5V2 = "Standard_D5_v2",
  /** StandardD11V2 */
  StandardD11V2 = "Standard_D11_v2",
  /** StandardD12V2 */
  StandardD12V2 = "Standard_D12_v2",
  /** StandardD13V2 */
  StandardD13V2 = "Standard_D13_v2",
  /** StandardD14V2 */
  StandardD14V2 = "Standard_D14_v2",
  /** StandardG1 */
  StandardG1 = "Standard_G1",
  /** StandardG2 */
  StandardG2 = "Standard_G2",
  /** StandardG3 */
  StandardG3 = "Standard_G3",
  /** StandardG4 */
  StandardG4 = "Standard_G4",
  /** StandardG5 */
  StandardG5 = "Standard_G5",
  /** StandardDS1 */
  StandardDS1 = "Standard_DS1",
  /** StandardDS2 */
  StandardDS2 = "Standard_DS2",
  /** StandardDS3 */
  StandardDS3 = "Standard_DS3",
  /** StandardDS4 */
  StandardDS4 = "Standard_DS4",
  /** StandardDS11 */
  StandardDS11 = "Standard_DS11",
  /** StandardDS12 */
  StandardDS12 = "Standard_DS12",
  /** StandardDS13 */
  StandardDS13 = "Standard_DS13",
  /** StandardDS14 */
  StandardDS14 = "Standard_DS14",
  /** StandardGS1 */
  StandardGS1 = "Standard_GS1",
  /** StandardGS2 */
  StandardGS2 = "Standard_GS2",
  /** StandardGS3 */
  StandardGS3 = "Standard_GS3",
  /** StandardGS4 */
  StandardGS4 = "Standard_GS4",
  /** StandardGS5 */
  StandardGS5 = "Standard_GS5"
}

/**
 * Defines values for AgentVMSizeTypes. \
 * {@link KnownAgentVMSizeTypes} can be used interchangeably with AgentVMSizeTypes,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Standard_A0** \
 * **Standard_A1** \
 * **Standard_A2** \
 * **Standard_A3** \
 * **Standard_A4** \
 * **Standard_A5** \
 * **Standard_A6** \
 * **Standard_A7** \
 * **Standard_A8** \
 * **Standard_A9** \
 * **Standard_A10** \
 * **Standard_A11** \
 * **Standard_D1** \
 * **Standard_D2** \
 * **Standard_D3** \
 * **Standard_D4** \
 * **Standard_D11** \
 * **Standard_D12** \
 * **Standard_D13** \
 * **Standard_D14** \
 * **Standard_D1_v2** \
 * **Standard_D2_v2** \
 * **Standard_D3_v2** \
 * **Standard_D4_v2** \
 * **Standard_D5_v2** \
 * **Standard_D11_v2** \
 * **Standard_D12_v2** \
 * **Standard_D13_v2** \
 * **Standard_D14_v2** \
 * **Standard_G1** \
 * **Standard_G2** \
 * **Standard_G3** \
 * **Standard_G4** \
 * **Standard_G5** \
 * **Standard_DS1** \
 * **Standard_DS2** \
 * **Standard_DS3** \
 * **Standard_DS4** \
 * **Standard_DS11** \
 * **Standard_DS12** \
 * **Standard_DS13** \
 * **Standard_DS14** \
 * **Standard_GS1** \
 * **Standard_GS2** \
 * **Standard_GS3** \
 * **Standard_GS4** \
 * **Standard_GS5**
 */
export type AgentVMSizeTypes = string;

/** Known values of {@link Status} that the service accepts. */
export enum KnownStatus {
  /** Enabled */
  Enabled = "Enabled",
  /** Disabled */
  Disabled = "Disabled"
}

/**
 * Defines values for Status. \
 * {@link KnownStatus} can be used interchangeably with Status,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export type Status = string;

/** Known values of {@link UpdatesAvailable} that the service accepts. */
export enum KnownUpdatesAvailable {
  /** Yes */
  Yes = "Yes",
  /** No */
  No = "No"
}

/**
 * Defines values for UpdatesAvailable. \
 * {@link KnownUpdatesAvailable} can be used interchangeably with UpdatesAvailable,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Yes** \
 * **No**
 */
export type UpdatesAvailable = string;

/** Optional parameters. */
export interface OperationalizationClustersCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type OperationalizationClustersCreateOrUpdateResponse = OperationalizationCluster;

/** Optional parameters. */
export interface OperationalizationClustersGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type OperationalizationClustersGetResponse = OperationalizationCluster;

/** Optional parameters. */
export interface OperationalizationClustersUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type OperationalizationClustersUpdateResponse = OperationalizationCluster;

/** Optional parameters. */
export interface OperationalizationClustersDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** If true, deletes all resources associated with this cluster. */
  deleteAll?: boolean;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type OperationalizationClustersDeleteResponse = OperationalizationClustersDeleteHeaders;

/** Optional parameters. */
export interface OperationalizationClustersListKeysOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listKeys operation. */
export type OperationalizationClustersListKeysResponse = OperationalizationClusterCredentials;

/** Optional parameters. */
export interface OperationalizationClustersCheckSystemServicesUpdatesAvailableOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkSystemServicesUpdatesAvailable operation. */
export type OperationalizationClustersCheckSystemServicesUpdatesAvailableResponse = CheckSystemServicesUpdatesAvailableResponse;

/** Optional parameters. */
export interface OperationalizationClustersUpdateSystemServicesOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the updateSystemServices operation. */
export type OperationalizationClustersUpdateSystemServicesResponse = UpdateSystemServicesResponse;

/** Optional parameters. */
export interface OperationalizationClustersListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {
  /** Continuation token for pagination. */
  skiptoken?: string;
}

/** Contains response data for the listByResourceGroup operation. */
export type OperationalizationClustersListByResourceGroupResponse = PaginatedOperationalizationClustersList;

/** Optional parameters. */
export interface OperationalizationClustersListBySubscriptionIdOptionalParams
  extends coreClient.OperationOptions {
  /** Continuation token for pagination. */
  skiptoken?: string;
}

/** Contains response data for the listBySubscriptionId operation. */
export type OperationalizationClustersListBySubscriptionIdResponse = PaginatedOperationalizationClustersList;

/** Optional parameters. */
export interface OperationalizationClustersListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {
  /** Continuation token for pagination. */
  skiptoken?: string;
}

/** Contains response data for the listByResourceGroupNext operation. */
export type OperationalizationClustersListByResourceGroupNextResponse = PaginatedOperationalizationClustersList;

/** Optional parameters. */
export interface OperationalizationClustersListBySubscriptionIdNextOptionalParams
  extends coreClient.OperationOptions {
  /** Continuation token for pagination. */
  skiptoken?: string;
}

/** Contains response data for the listBySubscriptionIdNext operation. */
export type OperationalizationClustersListBySubscriptionIdNextResponse = PaginatedOperationalizationClustersList;

/** Optional parameters. */
export interface MachineLearningComputeListAvailableOperationsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listAvailableOperations operation. */
export type MachineLearningComputeListAvailableOperationsResponse = AvailableOperations;

/** Optional parameters. */
export interface MachineLearningComputeManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
