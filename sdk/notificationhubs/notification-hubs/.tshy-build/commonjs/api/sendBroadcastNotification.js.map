{"version":3,"file":"sendBroadcastNotification.js","sourceRoot":"","sources":["../../../src/api/sendBroadcastNotification.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;AAelC,8DAMC;AAfD,0EAA2E;AAE3E;;;;;;GAMG;AACH,SAAgB,yBAAyB,CACvC,OAAsC,EACtC,YAA0B,EAC1B,UAA4C,EAAE;IAE9C,OAAO,IAAA,+CAAwB,EAAC,OAAO,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;AAClE,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { BroadcastSendNotificationOptions } from \"../models/options.js\";\nimport type { Notification } from \"../models/notification.js\";\nimport type { NotificationHubsClientContext } from \"./index.js\";\nimport type { NotificationHubsMessageResponse } from \"../models/notificationDetails.js\";\nimport { sendNotificationInternal } from \"./internal/_sendNotification.js\";\n\n/**\n * Sends push notifications to all devices with a broadcast send.\n * @param context - The Notification Hubs client.\n * @param notification - The notification to send to the matching devices.\n * @param options - Options for the notification including whether to enable test send.\n * @returns A NotificationHubResponse with the tracking ID, correlation ID and location.\n */\nexport function sendBroadcastNotification(\n  context: NotificationHubsClientContext,\n  notification: Notification,\n  options: BroadcastSendNotificationOptions = {},\n): Promise<NotificationHubsMessageResponse> {\n  return sendNotificationInternal(context, notification, options);\n}\n"]}