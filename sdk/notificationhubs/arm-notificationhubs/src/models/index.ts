/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing OperationDisplay.
 * The object that represents the operation.
 *
 */
export interface OperationDisplay {
  /**
   * @member {string} [provider] Service provider: Microsoft.NotificationHubs
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: string;
  /**
   * @member {string} [resource] Resource on which the operation is performed:
   * Invoice, etc.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resource?: string;
  /**
   * @member {string} [operation] Operation type: Read, write, delete, etc.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly operation?: string;
}

/**
 * @interface
 * An interface representing Operation.
 * A NotificationHubs REST API operation
 *
 */
export interface Operation {
  /**
   * @member {string} [name] Operation name: {provider}/{resource}/{operation}
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {OperationDisplay} [display] The object that represents the
   * operation.
   */
  display?: OperationDisplay;
}

/**
 * @interface
 * An interface representing ErrorResponse.
 * Error reponse indicates NotificationHubs service is not able to process the
 * incoming request. The reason is provided in the error message.
 *
 */
export interface ErrorResponse {
  /**
   * @member {string} [code] Error code.
   */
  code?: string;
  /**
   * @member {string} [message] Error message indicating why the operation
   * failed.
   */
  message?: string;
}

/**
 * @interface
 * An interface representing Sku.
 * The Sku description for a namespace
 *
 */
export interface Sku {
  /**
   * @member {SkuName} name Name of the notification hub sku. Possible values
   * include: 'Free', 'Basic', 'Standard'
   */
  name: SkuName;
  /**
   * @member {string} [tier] The tier of particular sku
   */
  tier?: string;
  /**
   * @member {string} [size] The Sku size
   */
  size?: string;
  /**
   * @member {string} [family] The Sku Family
   */
  family?: string;
  /**
   * @member {number} [capacity] The capacity of the resource
   */
  capacity?: number;
}

/**
 * @interface
 * An interface representing CheckAvailabilityParameters.
 * Parameters supplied to the Check Name Availability for Namespace and
 * NotificationHubs.
 *
 */
export interface CheckAvailabilityParameters {
  /**
   * @member {string} [id] Resource Id
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} name Resource name
   */
  name: string;
  /**
   * @member {string} [type] Resource type
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} [location] Resource location
   */
  location?: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * @member {Sku} [sku] The sku of the created namespace
   */
  sku?: Sku;
  /**
   * @member {boolean} [isAvailiable] True if the name is available and can be
   * used to create new Namespace/NotificationHub. Otherwise false.
   */
  isAvailiable?: boolean;
}

/**
 * @interface
 * An interface representing Resource.
 * @extends BaseResource
 */
export interface Resource extends BaseResource {
  /**
   * @member {string} [id] Resource Id
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] Resource name
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] Resource type
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} [location] Resource location
   */
  location?: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * @member {Sku} [sku] The sku of the created namespace
   */
  sku?: Sku;
}

/**
 * @interface
 * An interface representing CheckAvailabilityResult.
 * Description of a CheckAvailibility resource.
 *
 * @extends Resource
 */
export interface CheckAvailabilityResult extends Resource {
  /**
   * @member {boolean} [isAvailiable] True if the name is available and can be
   * used to create new Namespace/NotificationHub. Otherwise false.
   */
  isAvailiable?: boolean;
}

/**
 * @interface
 * An interface representing NamespaceCreateOrUpdateParameters.
 * Parameters supplied to the CreateOrUpdate Namespace operation.
 *
 * @extends Resource
 */
export interface NamespaceCreateOrUpdateParameters extends Resource {
  /**
   * @member {string} [namespaceCreateOrUpdateParametersName] The name of the
   * namespace.
   */
  namespaceCreateOrUpdateParametersName?: string;
  /**
   * @member {string} [provisioningState] Provisioning state of the Namespace.
   */
  provisioningState?: string;
  /**
   * @member {string} [region] Specifies the targeted region in which the
   * namespace should be created. It can be any of the following values:
   * Australia EastAustralia SoutheastCentral USEast USEast US 2West USNorth
   * Central USSouth Central USEast AsiaSoutheast AsiaBrazil SouthJapan
   * EastJapan WestNorth EuropeWest Europe
   */
  region?: string;
  /**
   * @member {string} [metricId] Identifier for Azure Insights metrics
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly metricId?: string;
  /**
   * @member {string} [status] Status of the namespace. It can be any of these
   * values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting
   */
  status?: string;
  /**
   * @member {Date} [createdAt] The time the namespace was created.
   */
  createdAt?: Date;
  /**
   * @member {Date} [updatedAt] The time the namespace was updated.
   */
  updatedAt?: Date;
  /**
   * @member {string} [serviceBusEndpoint] Endpoint you can use to perform
   * NotificationHub operations.
   */
  serviceBusEndpoint?: string;
  /**
   * @member {string} [subscriptionId] The Id of the Azure subscription
   * associated with the namespace.
   */
  subscriptionId?: string;
  /**
   * @member {string} [scaleUnit] ScaleUnit where the namespace gets created
   */
  scaleUnit?: string;
  /**
   * @member {boolean} [enabled] Whether or not the namespace is currently
   * enabled.
   */
  enabled?: boolean;
  /**
   * @member {boolean} [critical] Whether or not the namespace is set as
   * Critical.
   */
  critical?: boolean;
  /**
   * @member {string} [dataCenter] Data center for the namespace
   */
  dataCenter?: string;
  /**
   * @member {NamespaceType} [namespaceType] The namespace type. Possible
   * values include: 'Messaging', 'NotificationHub'
   */
  namespaceType?: NamespaceType;
}

/**
 * @interface
 * An interface representing NamespacePatchParameters.
 * Parameters supplied to the Patch Namespace operation.
 *
 */
export interface NamespacePatchParameters {
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * @member {Sku} [sku] The sku of the created namespace
   */
  sku?: Sku;
}

/**
 * @interface
 * An interface representing NamespaceResource.
 * Description of a Namespace resource.
 *
 * @extends Resource
 */
export interface NamespaceResource extends Resource {
  /**
   * @member {string} [namespaceResourceName] The name of the namespace.
   */
  namespaceResourceName?: string;
  /**
   * @member {string} [provisioningState] Provisioning state of the Namespace.
   */
  provisioningState?: string;
  /**
   * @member {string} [region] Specifies the targeted region in which the
   * namespace should be created. It can be any of the following values:
   * Australia EastAustralia SoutheastCentral USEast USEast US 2West USNorth
   * Central USSouth Central USEast AsiaSoutheast AsiaBrazil SouthJapan
   * EastJapan WestNorth EuropeWest Europe
   */
  region?: string;
  /**
   * @member {string} [metricId] Identifier for Azure Insights metrics
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly metricId?: string;
  /**
   * @member {string} [status] Status of the namespace. It can be any of these
   * values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting
   */
  status?: string;
  /**
   * @member {Date} [createdAt] The time the namespace was created.
   */
  createdAt?: Date;
  /**
   * @member {Date} [updatedAt] The time the namespace was updated.
   */
  updatedAt?: Date;
  /**
   * @member {string} [serviceBusEndpoint] Endpoint you can use to perform
   * NotificationHub operations.
   */
  serviceBusEndpoint?: string;
  /**
   * @member {string} [subscriptionId] The Id of the Azure subscription
   * associated with the namespace.
   */
  subscriptionId?: string;
  /**
   * @member {string} [scaleUnit] ScaleUnit where the namespace gets created
   */
  scaleUnit?: string;
  /**
   * @member {boolean} [enabled] Whether or not the namespace is currently
   * enabled.
   */
  enabled?: boolean;
  /**
   * @member {boolean} [critical] Whether or not the namespace is set as
   * Critical.
   */
  critical?: boolean;
  /**
   * @member {string} [dataCenter] Data center for the namespace
   */
  dataCenter?: string;
  /**
   * @member {NamespaceType} [namespaceType] The namespace type. Possible
   * values include: 'Messaging', 'NotificationHub'
   */
  namespaceType?: NamespaceType;
}

/**
 * @interface
 * An interface representing SharedAccessAuthorizationRuleProperties.
 * SharedAccessAuthorizationRule properties.
 *
 */
export interface SharedAccessAuthorizationRuleProperties {
  /**
   * @member {AccessRights[]} [rights] The rights associated with the rule.
   */
  rights?: AccessRights[];
  /**
   * @member {string} [primaryKey] A base64-encoded 256-bit primary key for
   * signing and validating the SAS token.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly primaryKey?: string;
  /**
   * @member {string} [secondaryKey] A base64-encoded 256-bit primary key for
   * signing and validating the SAS token.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly secondaryKey?: string;
  /**
   * @member {string} [keyName] A string that describes the authorization rule.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly keyName?: string;
  /**
   * @member {string} [claimType] A string that describes the claim type
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly claimType?: string;
  /**
   * @member {string} [claimValue] A string that describes the claim value
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly claimValue?: string;
  /**
   * @member {string} [modifiedTime] The last modified time for this rule
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly modifiedTime?: string;
  /**
   * @member {string} [createdTime] The created time for this rule
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdTime?: string;
  /**
   * @member {number} [revision] The revision number for the rule
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly revision?: number;
}

/**
 * @interface
 * An interface representing SharedAccessAuthorizationRuleCreateOrUpdateParameters.
 * Parameters supplied to the CreateOrUpdate Namespace AuthorizationRules.
 *
 */
export interface SharedAccessAuthorizationRuleCreateOrUpdateParameters {
  /**
   * @member {SharedAccessAuthorizationRuleProperties} properties Properties of
   * the Namespace AuthorizationRules.
   */
  properties: SharedAccessAuthorizationRuleProperties;
}

/**
 * @interface
 * An interface representing SharedAccessAuthorizationRuleResource.
 * Description of a Namespace AuthorizationRules.
 *
 * @extends Resource
 */
export interface SharedAccessAuthorizationRuleResource extends Resource {
  /**
   * @member {AccessRights[]} [rights] The rights associated with the rule.
   */
  rights?: AccessRights[];
  /**
   * @member {string} [primaryKey] A base64-encoded 256-bit primary key for
   * signing and validating the SAS token.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly primaryKey?: string;
  /**
   * @member {string} [secondaryKey] A base64-encoded 256-bit primary key for
   * signing and validating the SAS token.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly secondaryKey?: string;
  /**
   * @member {string} [keyName] A string that describes the authorization rule.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly keyName?: string;
  /**
   * @member {string} [claimType] A string that describes the claim type
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly claimType?: string;
  /**
   * @member {string} [claimValue] A string that describes the claim value
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly claimValue?: string;
  /**
   * @member {string} [modifiedTime] The last modified time for this rule
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly modifiedTime?: string;
  /**
   * @member {string} [createdTime] The created time for this rule
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdTime?: string;
  /**
   * @member {number} [revision] The revision number for the rule
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly revision?: number;
}

/**
 * @interface
 * An interface representing ResourceListKeys.
 * Namespace/NotificationHub Connection String
 *
 */
export interface ResourceListKeys {
  /**
   * @member {string} [primaryConnectionString] PrimaryConnectionString of the
   * AuthorizationRule.
   */
  primaryConnectionString?: string;
  /**
   * @member {string} [secondaryConnectionString] SecondaryConnectionString of
   * the created AuthorizationRule
   */
  secondaryConnectionString?: string;
  /**
   * @member {string} [primaryKey] PrimaryKey of the created AuthorizationRule.
   */
  primaryKey?: string;
  /**
   * @member {string} [secondaryKey] SecondaryKey of the created
   * AuthorizationRule
   */
  secondaryKey?: string;
  /**
   * @member {string} [keyName] KeyName of the created AuthorizationRule
   */
  keyName?: string;
}

/**
 * @interface
 * An interface representing PolicykeyResource.
 * Namespace/NotificationHub Regenerate Keys
 *
 */
export interface PolicykeyResource {
  /**
   * @member {string} [policyKey] Name of the key that has to be regenerated
   * for the Namespace/Notification Hub Authorization Rule. The value can be
   * Primary Key/Secondary Key.
   */
  policyKey?: string;
}

/**
 * @interface
 * An interface representing ApnsCredential.
 * Description of a NotificationHub ApnsCredential.
 *
 */
export interface ApnsCredential {
  /**
   * @member {string} [apnsCertificate] The APNS certificate.
   */
  apnsCertificate?: string;
  /**
   * @member {string} [certificateKey] The certificate key.
   */
  certificateKey?: string;
  /**
   * @member {string} [endpoint] The endpoint of this credential.
   */
  endpoint?: string;
  /**
   * @member {string} [thumbprint] The Apns certificate Thumbprint
   */
  thumbprint?: string;
  /**
   * @member {string} [keyId] A 10-character key identifier (kid) key, obtained
   * from your developer account
   */
  keyId?: string;
  /**
   * @member {string} [appName] The name of the application
   */
  appName?: string;
  /**
   * @member {string} [appId] The issuer (iss) registered claim key, whose
   * value is your 10-character Team ID, obtained from your developer account
   */
  appId?: string;
  /**
   * @member {string} [token] Provider Authentication Token, obtained through
   * your developer account
   */
  token?: string;
}

/**
 * @interface
 * An interface representing WnsCredential.
 * Description of a NotificationHub WnsCredential.
 *
 */
export interface WnsCredential {
  /**
   * @member {string} [packageSid] The package ID for this credential.
   */
  packageSid?: string;
  /**
   * @member {string} [secretKey] The secret key.
   */
  secretKey?: string;
  /**
   * @member {string} [windowsLiveEndpoint] The Windows Live endpoint.
   */
  windowsLiveEndpoint?: string;
}

/**
 * @interface
 * An interface representing GcmCredential.
 * Description of a NotificationHub GcmCredential.
 *
 */
export interface GcmCredential {
  /**
   * @member {string} [gcmEndpoint] The GCM endpoint.
   */
  gcmEndpoint?: string;
  /**
   * @member {string} [googleApiKey] The Google API key.
   */
  googleApiKey?: string;
}

/**
 * @interface
 * An interface representing MpnsCredential.
 * Description of a NotificationHub MpnsCredential.
 *
 */
export interface MpnsCredential {
  /**
   * @member {string} [mpnsCertificate] The MPNS certificate.
   */
  mpnsCertificate?: string;
  /**
   * @member {string} [certificateKey] The certificate key for this credential.
   */
  certificateKey?: string;
  /**
   * @member {string} [thumbprint] The Mpns certificate Thumbprint
   */
  thumbprint?: string;
}

/**
 * @interface
 * An interface representing AdmCredential.
 * Description of a NotificationHub AdmCredential.
 *
 */
export interface AdmCredential {
  /**
   * @member {string} [clientId] The client identifier.
   */
  clientId?: string;
  /**
   * @member {string} [clientSecret] The credential secret access key.
   */
  clientSecret?: string;
  /**
   * @member {string} [authTokenUrl] The URL of the authorization token.
   */
  authTokenUrl?: string;
}

/**
 * @interface
 * An interface representing BaiduCredential.
 * Description of a NotificationHub BaiduCredential.
 *
 */
export interface BaiduCredential {
  /**
   * @member {string} [baiduApiKey] Baidu Api Key.
   */
  baiduApiKey?: string;
  /**
   * @member {string} [baiduEndPoint] Baidu Endpoint.
   */
  baiduEndPoint?: string;
  /**
   * @member {string} [baiduSecretKey] Baidu Secret Key
   */
  baiduSecretKey?: string;
}

/**
 * @interface
 * An interface representing NotificationHubCreateOrUpdateParameters.
 * Parameters supplied to the CreateOrUpdate NotificationHub operation.
 *
 * @extends Resource
 */
export interface NotificationHubCreateOrUpdateParameters extends Resource {
  /**
   * @member {string} [notificationHubCreateOrUpdateParametersName] The
   * NotificationHub name.
   */
  notificationHubCreateOrUpdateParametersName?: string;
  /**
   * @member {string} [registrationTtl] The RegistrationTtl of the created
   * NotificationHub
   */
  registrationTtl?: string;
  /**
   * @member {SharedAccessAuthorizationRuleProperties[]} [authorizationRules]
   * The AuthorizationRules of the created NotificationHub
   */
  authorizationRules?: SharedAccessAuthorizationRuleProperties[];
  /**
   * @member {ApnsCredential} [apnsCredential] The ApnsCredential of the
   * created NotificationHub
   */
  apnsCredential?: ApnsCredential;
  /**
   * @member {WnsCredential} [wnsCredential] The WnsCredential of the created
   * NotificationHub
   */
  wnsCredential?: WnsCredential;
  /**
   * @member {GcmCredential} [gcmCredential] The GcmCredential of the created
   * NotificationHub
   */
  gcmCredential?: GcmCredential;
  /**
   * @member {MpnsCredential} [mpnsCredential] The MpnsCredential of the
   * created NotificationHub
   */
  mpnsCredential?: MpnsCredential;
  /**
   * @member {AdmCredential} [admCredential] The AdmCredential of the created
   * NotificationHub
   */
  admCredential?: AdmCredential;
  /**
   * @member {BaiduCredential} [baiduCredential] The BaiduCredential of the
   * created NotificationHub
   */
  baiduCredential?: BaiduCredential;
}

/**
 * @interface
 * An interface representing NotificationHubPatchParameters.
 * Parameters supplied to the patch NotificationHub operation.
 *
 * @extends Resource
 */
export interface NotificationHubPatchParameters extends Resource {
  /**
   * @member {string} [notificationHubPatchParametersName] The NotificationHub
   * name.
   */
  notificationHubPatchParametersName?: string;
  /**
   * @member {string} [registrationTtl] The RegistrationTtl of the created
   * NotificationHub
   */
  registrationTtl?: string;
  /**
   * @member {SharedAccessAuthorizationRuleProperties[]} [authorizationRules]
   * The AuthorizationRules of the created NotificationHub
   */
  authorizationRules?: SharedAccessAuthorizationRuleProperties[];
  /**
   * @member {ApnsCredential} [apnsCredential] The ApnsCredential of the
   * created NotificationHub
   */
  apnsCredential?: ApnsCredential;
  /**
   * @member {WnsCredential} [wnsCredential] The WnsCredential of the created
   * NotificationHub
   */
  wnsCredential?: WnsCredential;
  /**
   * @member {GcmCredential} [gcmCredential] The GcmCredential of the created
   * NotificationHub
   */
  gcmCredential?: GcmCredential;
  /**
   * @member {MpnsCredential} [mpnsCredential] The MpnsCredential of the
   * created NotificationHub
   */
  mpnsCredential?: MpnsCredential;
  /**
   * @member {AdmCredential} [admCredential] The AdmCredential of the created
   * NotificationHub
   */
  admCredential?: AdmCredential;
  /**
   * @member {BaiduCredential} [baiduCredential] The BaiduCredential of the
   * created NotificationHub
   */
  baiduCredential?: BaiduCredential;
}

/**
 * @interface
 * An interface representing NotificationHubResource.
 * Description of a NotificationHub Resource.
 *
 * @extends Resource
 */
export interface NotificationHubResource extends Resource {
  /**
   * @member {string} [notificationHubResourceName] The NotificationHub name.
   */
  notificationHubResourceName?: string;
  /**
   * @member {string} [registrationTtl] The RegistrationTtl of the created
   * NotificationHub
   */
  registrationTtl?: string;
  /**
   * @member {SharedAccessAuthorizationRuleProperties[]} [authorizationRules]
   * The AuthorizationRules of the created NotificationHub
   */
  authorizationRules?: SharedAccessAuthorizationRuleProperties[];
  /**
   * @member {ApnsCredential} [apnsCredential] The ApnsCredential of the
   * created NotificationHub
   */
  apnsCredential?: ApnsCredential;
  /**
   * @member {WnsCredential} [wnsCredential] The WnsCredential of the created
   * NotificationHub
   */
  wnsCredential?: WnsCredential;
  /**
   * @member {GcmCredential} [gcmCredential] The GcmCredential of the created
   * NotificationHub
   */
  gcmCredential?: GcmCredential;
  /**
   * @member {MpnsCredential} [mpnsCredential] The MpnsCredential of the
   * created NotificationHub
   */
  mpnsCredential?: MpnsCredential;
  /**
   * @member {AdmCredential} [admCredential] The AdmCredential of the created
   * NotificationHub
   */
  admCredential?: AdmCredential;
  /**
   * @member {BaiduCredential} [baiduCredential] The BaiduCredential of the
   * created NotificationHub
   */
  baiduCredential?: BaiduCredential;
}

/**
 * @interface
 * An interface representing DebugSendResponse.
 * Description of a NotificationHub Resource.
 *
 * @extends Resource
 */
export interface DebugSendResponse extends Resource {
  /**
   * @member {number} [success] successful send
   */
  success?: number;
  /**
   * @member {number} [failure] send failure
   */
  failure?: number;
  /**
   * @member {any} [results] actual failure description
   */
  results?: any;
}

/**
 * @interface
 * An interface representing PnsCredentialsResource.
 * Description of a NotificationHub PNS Credentials.
 *
 * @extends Resource
 */
export interface PnsCredentialsResource extends Resource {
  /**
   * @member {ApnsCredential} [apnsCredential] The ApnsCredential of the
   * created NotificationHub
   */
  apnsCredential?: ApnsCredential;
  /**
   * @member {WnsCredential} [wnsCredential] The WnsCredential of the created
   * NotificationHub
   */
  wnsCredential?: WnsCredential;
  /**
   * @member {GcmCredential} [gcmCredential] The GcmCredential of the created
   * NotificationHub
   */
  gcmCredential?: GcmCredential;
  /**
   * @member {MpnsCredential} [mpnsCredential] The MpnsCredential of the
   * created NotificationHub
   */
  mpnsCredential?: MpnsCredential;
  /**
   * @member {AdmCredential} [admCredential] The AdmCredential of the created
   * NotificationHub
   */
  admCredential?: AdmCredential;
  /**
   * @member {BaiduCredential} [baiduCredential] The BaiduCredential of the
   * created NotificationHub
   */
  baiduCredential?: BaiduCredential;
}

/**
 * @interface
 * An interface representing SubResource.
 * @extends BaseResource
 */
export interface SubResource extends BaseResource {
  /**
   * @member {string} [id] Resource Id
   */
  id?: string;
}

/**
 * @interface
 * An interface representing NotificationHubsPatchOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface NotificationHubsPatchOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {NotificationHubPatchParameters} [parameters] Parameters supplied
   * to patch a NotificationHub Resource.
   */
  parameters?: NotificationHubPatchParameters;
}

/**
 * @interface
 * An interface representing NotificationHubsDebugSendOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface NotificationHubsDebugSendOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {any} [parameters] Debug send parameters
   */
  parameters?: any;
}

/**
 * @interface
 * An interface representing NotificationHubsManagementClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface NotificationHubsManagementClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the OperationListResult.
 * Result of the request to list NotificationHubs operations. It contains a
 * list of operations and a URL link to get the next set of results.
 *
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * @member {string} [nextLink] URL to get the next set of operation list
   * results if there are any.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the NamespaceListResult.
 * The response of the List Namespace operation.
 *
 * @extends Array<NamespaceResource>
 */
export interface NamespaceListResult extends Array<NamespaceResource> {
  /**
   * @member {string} [nextLink] Link to the next set of results. Not empty if
   * Value contains incomplete list of Namespaces
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the SharedAccessAuthorizationRuleListResult.
 * The response of the List Namespace operation.
 *
 * @extends Array<SharedAccessAuthorizationRuleResource>
 */
export interface SharedAccessAuthorizationRuleListResult extends Array<SharedAccessAuthorizationRuleResource> {
  /**
   * @member {string} [nextLink] Link to the next set of results. Not empty if
   * Value contains incomplete list of AuthorizationRules
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the NotificationHubListResult.
 * The response of the List NotificationHub operation.
 *
 * @extends Array<NotificationHubResource>
 */
export interface NotificationHubListResult extends Array<NotificationHubResource> {
  /**
   * @member {string} [nextLink] Link to the next set of results. Not empty if
   * Value contains incomplete list of NotificationHub
   */
  nextLink?: string;
}

/**
 * Defines values for SkuName.
 * Possible values include: 'Free', 'Basic', 'Standard'
 * @readonly
 * @enum {string}
 */
export type SkuName = 'Free' | 'Basic' | 'Standard';

/**
 * Defines values for NamespaceType.
 * Possible values include: 'Messaging', 'NotificationHub'
 * @readonly
 * @enum {string}
 */
export type NamespaceType = 'Messaging' | 'NotificationHub';

/**
 * Defines values for AccessRights.
 * Possible values include: 'Manage', 'Send', 'Listen'
 * @readonly
 * @enum {string}
 */
export type AccessRights = 'Manage' | 'Send' | 'Listen';

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the checkAvailability operation.
 */
export type NamespacesCheckAvailabilityResponse = CheckAvailabilityResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CheckAvailabilityResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type NamespacesCreateOrUpdateResponse = NamespaceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NamespaceResource;
    };
};

/**
 * Contains response data for the patch operation.
 */
export type NamespacesPatchResponse = NamespaceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NamespaceResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type NamespacesGetResponse = NamespaceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NamespaceResource;
    };
};

/**
 * Contains response data for the createOrUpdateAuthorizationRule operation.
 */
export type NamespacesCreateOrUpdateAuthorizationRuleResponse = SharedAccessAuthorizationRuleResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SharedAccessAuthorizationRuleResource;
    };
};

/**
 * Contains response data for the getAuthorizationRule operation.
 */
export type NamespacesGetAuthorizationRuleResponse = SharedAccessAuthorizationRuleResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SharedAccessAuthorizationRuleResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type NamespacesListResponse = NamespaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NamespaceListResult;
    };
};

/**
 * Contains response data for the listAll operation.
 */
export type NamespacesListAllResponse = NamespaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NamespaceListResult;
    };
};

/**
 * Contains response data for the listAuthorizationRules operation.
 */
export type NamespacesListAuthorizationRulesResponse = SharedAccessAuthorizationRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SharedAccessAuthorizationRuleListResult;
    };
};

/**
 * Contains response data for the listKeys operation.
 */
export type NamespacesListKeysResponse = SharedAccessAuthorizationRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SharedAccessAuthorizationRuleListResult;
    };
};

/**
 * Contains response data for the regenerateKeys operation.
 */
export type NamespacesRegenerateKeysResponse = ResourceListKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceListKeys;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type NamespacesListNextResponse = NamespaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NamespaceListResult;
    };
};

/**
 * Contains response data for the listAllNext operation.
 */
export type NamespacesListAllNextResponse = NamespaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NamespaceListResult;
    };
};

/**
 * Contains response data for the listAuthorizationRulesNext operation.
 */
export type NamespacesListAuthorizationRulesNextResponse = SharedAccessAuthorizationRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SharedAccessAuthorizationRuleListResult;
    };
};

/**
 * Contains response data for the checkNotificationHubAvailability operation.
 */
export type NotificationHubsCheckNotificationHubAvailabilityResponse = CheckAvailabilityResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CheckAvailabilityResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type NotificationHubsCreateOrUpdateResponse = NotificationHubResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NotificationHubResource;
    };
};

/**
 * Contains response data for the patch operation.
 */
export type NotificationHubsPatchResponse = NotificationHubResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NotificationHubResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type NotificationHubsGetResponse = NotificationHubResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NotificationHubResource;
    };
};

/**
 * Contains response data for the debugSend operation.
 */
export type NotificationHubsDebugSendResponse = DebugSendResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DebugSendResponse;
    };
};

/**
 * Contains response data for the createOrUpdateAuthorizationRule operation.
 */
export type NotificationHubsCreateOrUpdateAuthorizationRuleResponse = SharedAccessAuthorizationRuleResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SharedAccessAuthorizationRuleResource;
    };
};

/**
 * Contains response data for the getAuthorizationRule operation.
 */
export type NotificationHubsGetAuthorizationRuleResponse = SharedAccessAuthorizationRuleResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SharedAccessAuthorizationRuleResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type NotificationHubsListResponse = NotificationHubListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NotificationHubListResult;
    };
};

/**
 * Contains response data for the listAuthorizationRules operation.
 */
export type NotificationHubsListAuthorizationRulesResponse = SharedAccessAuthorizationRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SharedAccessAuthorizationRuleListResult;
    };
};

/**
 * Contains response data for the listKeys operation.
 */
export type NotificationHubsListKeysResponse = ResourceListKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceListKeys;
    };
};

/**
 * Contains response data for the regenerateKeys operation.
 */
export type NotificationHubsRegenerateKeysResponse = ResourceListKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceListKeys;
    };
};

/**
 * Contains response data for the getPnsCredentials operation.
 */
export type NotificationHubsGetPnsCredentialsResponse = PnsCredentialsResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PnsCredentialsResource;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type NotificationHubsListNextResponse = NotificationHubListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NotificationHubListResult;
    };
};

/**
 * Contains response data for the listAuthorizationRulesNext operation.
 */
export type NotificationHubsListAuthorizationRulesNextResponse = SharedAccessAuthorizationRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SharedAccessAuthorizationRuleListResult;
    };
};
