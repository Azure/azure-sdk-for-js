/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreAuth from "@azure/core-auth";
import {
  OperationsImpl,
  NamespacesImpl,
  NotificationHubsImpl
} from "./operations";
import {
  Operations,
  Namespaces,
  NotificationHubs
} from "./operationsInterfaces";
import { NotificationHubsManagementClientContext } from "./notificationHubsManagementClientContext";
import { NotificationHubsManagementClientOptionalParams } from "./models";

export class NotificationHubsManagementClient extends NotificationHubsManagementClientContext {
  /**
   * Initializes a new instance of the NotificationHubsManagementClient class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure
   *                       subscription. The subscription ID forms part of the URI for every service call.
   * @param options The parameter options
   */
  constructor(
    credentials: coreAuth.TokenCredential,
    subscriptionId: string,
    options?: NotificationHubsManagementClientOptionalParams
  ) {
    super(credentials, subscriptionId, options);
    this.operations = new OperationsImpl(this);
    this.namespaces = new NamespacesImpl(this);
    this.notificationHubs = new NotificationHubsImpl(this);
  }

  operations: Operations;
  namespaces: Namespaces;
  notificationHubs: NotificationHubs;
}
