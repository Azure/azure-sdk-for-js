/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  PrivateEndpointConnectionResource,
  PrivateEndpointConnectionsListOptionalParams,
  PrivateLinkResource,
  PrivateEndpointConnectionsListGroupIdsOptionalParams,
  PrivateEndpointConnectionsUpdateOptionalParams,
  PrivateEndpointConnectionsUpdateResponse,
  PrivateEndpointConnectionsDeleteOptionalParams,
  PrivateEndpointConnectionsDeleteResponse,
  PrivateEndpointConnectionsGetOptionalParams,
  PrivateEndpointConnectionsGetResponse,
  PrivateEndpointConnectionsGetGroupIdOptionalParams,
  PrivateEndpointConnectionsGetGroupIdResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a PrivateEndpointConnections. */
export interface PrivateEndpointConnections {
  /**
   * Returns all Private Endpoint Connections that belong to the given Notification Hubs namespace.
   * This is a public API that can be called directly by Notification Hubs users.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param namespaceName Namespace name
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    namespaceName: string,
    options?: PrivateEndpointConnectionsListOptionalParams,
  ): PagedAsyncIterableIterator<PrivateEndpointConnectionResource>;
  /**
   * Even though this namespace requires subscription id, resource group and namespace name, it returns a
   * constant payload (for a given namespacE) every time it's called.
   * That's why we don't send it to the sibling RP, but process it directly in the scale unit that
   * received the request.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param namespaceName Namespace name
   * @param options The options parameters.
   */
  listGroupIds(
    resourceGroupName: string,
    namespaceName: string,
    options?: PrivateEndpointConnectionsListGroupIdsOptionalParams,
  ): PagedAsyncIterableIterator<PrivateLinkResource>;
  /**
   * Approves or rejects Private Endpoint Connection.
   * This is a public API that can be called directly by Notification Hubs users.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param namespaceName Namespace name
   * @param privateEndpointConnectionName Private Endpoint Connection Name
   * @param parameters Description of the Private Endpoint Connection resource.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    namespaceName: string,
    privateEndpointConnectionName: string,
    parameters: PrivateEndpointConnectionResource,
    options?: PrivateEndpointConnectionsUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<PrivateEndpointConnectionsUpdateResponse>,
      PrivateEndpointConnectionsUpdateResponse
    >
  >;
  /**
   * Approves or rejects Private Endpoint Connection.
   * This is a public API that can be called directly by Notification Hubs users.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param namespaceName Namespace name
   * @param privateEndpointConnectionName Private Endpoint Connection Name
   * @param parameters Description of the Private Endpoint Connection resource.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    namespaceName: string,
    privateEndpointConnectionName: string,
    parameters: PrivateEndpointConnectionResource,
    options?: PrivateEndpointConnectionsUpdateOptionalParams,
  ): Promise<PrivateEndpointConnectionsUpdateResponse>;
  /**
   * Deletes the Private Endpoint Connection.
   * This is a public API that can be called directly by Notification Hubs users.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param namespaceName Namespace name
   * @param privateEndpointConnectionName Private Endpoint Connection Name
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    namespaceName: string,
    privateEndpointConnectionName: string,
    options?: PrivateEndpointConnectionsDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<PrivateEndpointConnectionsDeleteResponse>,
      PrivateEndpointConnectionsDeleteResponse
    >
  >;
  /**
   * Deletes the Private Endpoint Connection.
   * This is a public API that can be called directly by Notification Hubs users.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param namespaceName Namespace name
   * @param privateEndpointConnectionName Private Endpoint Connection Name
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    namespaceName: string,
    privateEndpointConnectionName: string,
    options?: PrivateEndpointConnectionsDeleteOptionalParams,
  ): Promise<PrivateEndpointConnectionsDeleteResponse>;
  /**
   * Returns a Private Endpoint Connection with a given name.
   * This is a public API that can be called directly by Notification Hubs users.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param namespaceName Namespace name
   * @param privateEndpointConnectionName Private Endpoint Connection Name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    namespaceName: string,
    privateEndpointConnectionName: string,
    options?: PrivateEndpointConnectionsGetOptionalParams,
  ): Promise<PrivateEndpointConnectionsGetResponse>;
  /**
   * Even though this namespace requires subscription id, resource group and namespace name, it returns a
   * constant payload (for a given namespacE) every time it's called.
   * That's why we don't send it to the sibling RP, but process it directly in the scale unit that
   * received the request.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param namespaceName Namespace name
   * @param subResourceName Name of the Private Link sub-resource. The only supported sub-resource is
   *                        "namespace"
   * @param options The options parameters.
   */
  getGroupId(
    resourceGroupName: string,
    namespaceName: string,
    subResourceName: string,
    options?: PrivateEndpointConnectionsGetGroupIdOptionalParams,
  ): Promise<PrivateEndpointConnectionsGetGroupIdResponse>;
}
