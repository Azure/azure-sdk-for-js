/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  Pool,
  PoolListByBatchAccountOptionalParams,
  PoolCreateOptionalParams,
  PoolCreateResponse,
  PoolUpdateOptionalParams,
  PoolUpdateResponse,
  PoolDeleteOptionalParams,
  PoolGetOptionalParams,
  PoolGetResponse,
  PoolDisableAutoScaleOptionalParams,
  PoolDisableAutoScaleResponse,
  PoolStopResizeOptionalParams,
  PoolStopResizeResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a PoolOperations. */
export interface PoolOperations {
  /**
   * Lists all of the pools in the specified account.
   * @param resourceGroupName The name of the resource group that contains the Batch account.
   * @param accountName The name of the Batch account.
   * @param options The options parameters.
   */
  listByBatchAccount(
    resourceGroupName: string,
    accountName: string,
    options?: PoolListByBatchAccountOptionalParams
  ): PagedAsyncIterableIterator<Pool>;
  /**
   * Creates a new pool inside the specified account.
   * @param resourceGroupName The name of the resource group that contains the Batch account.
   * @param accountName The name of the Batch account.
   * @param poolName The pool name. This must be unique within the account.
   * @param parameters Additional parameters for pool creation.
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    accountName: string,
    poolName: string,
    parameters: Pool,
    options?: PoolCreateOptionalParams
  ): Promise<PoolCreateResponse>;
  /**
   * Updates the properties of an existing pool.
   * @param resourceGroupName The name of the resource group that contains the Batch account.
   * @param accountName The name of the Batch account.
   * @param poolName The pool name. This must be unique within the account.
   * @param parameters Pool properties that should be updated. Properties that are supplied will be
   *                   updated, any property not supplied will be unchanged.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    accountName: string,
    poolName: string,
    parameters: Pool,
    options?: PoolUpdateOptionalParams
  ): Promise<PoolUpdateResponse>;
  /**
   * Deletes the specified pool.
   * @param resourceGroupName The name of the resource group that contains the Batch account.
   * @param accountName The name of the Batch account.
   * @param poolName The pool name. This must be unique within the account.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    accountName: string,
    poolName: string,
    options?: PoolDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes the specified pool.
   * @param resourceGroupName The name of the resource group that contains the Batch account.
   * @param accountName The name of the Batch account.
   * @param poolName The pool name. This must be unique within the account.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    accountName: string,
    poolName: string,
    options?: PoolDeleteOptionalParams
  ): Promise<void>;
  /**
   * Gets information about the specified pool.
   * @param resourceGroupName The name of the resource group that contains the Batch account.
   * @param accountName The name of the Batch account.
   * @param poolName The pool name. This must be unique within the account.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    poolName: string,
    options?: PoolGetOptionalParams
  ): Promise<PoolGetResponse>;
  /**
   * Disables automatic scaling for a pool.
   * @param resourceGroupName The name of the resource group that contains the Batch account.
   * @param accountName The name of the Batch account.
   * @param poolName The pool name. This must be unique within the account.
   * @param options The options parameters.
   */
  disableAutoScale(
    resourceGroupName: string,
    accountName: string,
    poolName: string,
    options?: PoolDisableAutoScaleOptionalParams
  ): Promise<PoolDisableAutoScaleResponse>;
  /**
   * This does not restore the pool to its previous state before the resize operation: it only stops any
   * further changes being made, and the pool maintains its current state. After stopping, the pool
   * stabilizes at the number of nodes it was at when the stop operation was done. During the stop
   * operation, the pool allocation state changes first to stopping and then to steady. A resize
   * operation need not be an explicit resize pool request; this API can also be used to halt the initial
   * sizing of the pool when it is created.
   * @param resourceGroupName The name of the resource group that contains the Batch account.
   * @param accountName The name of the Batch account.
   * @param poolName The pool name. This must be unique within the account.
   * @param options The options parameters.
   */
  stopResize(
    resourceGroupName: string,
    accountName: string,
    poolName: string,
    options?: PoolStopResizeOptionalParams
  ): Promise<PoolStopResizeResponse>;
}
