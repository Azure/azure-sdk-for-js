/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  Certificate,
  CertificateListByBatchAccountOptionalParams,
  CertificateCreateOrUpdateParameters,
  CertificateCreateOptionalParams,
  CertificateCreateResponse,
  CertificateUpdateOptionalParams,
  CertificateUpdateResponse,
  CertificateDeleteOptionalParams,
  CertificateGetOptionalParams,
  CertificateGetResponse,
  CertificateCancelDeletionOptionalParams,
  CertificateCancelDeletionResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a CertificateOperations. */
export interface CertificateOperations {
  /**
   * Warning: This operation is deprecated and will be removed after February, 2024. Please use the
   * [Azure KeyVault
   * Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide) instead.
   * @param resourceGroupName The name of the resource group that contains the Batch account.
   * @param accountName The name of the Batch account.
   * @param options The options parameters.
   */
  listByBatchAccount(
    resourceGroupName: string,
    accountName: string,
    options?: CertificateListByBatchAccountOptionalParams
  ): PagedAsyncIterableIterator<Certificate>;
  /**
   * Warning: This operation is deprecated and will be removed after February, 2024. Please use the
   * [Azure KeyVault
   * Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide) instead.
   * @param resourceGroupName The name of the resource group that contains the Batch account.
   * @param accountName The name of the Batch account.
   * @param certificateName The identifier for the certificate. This must be made up of algorithm and
   *                        thumbprint separated by a dash, and must match the certificate data in the request. For example
   *                        SHA1-a3d1c5.
   * @param parameters Additional parameters for certificate creation.
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    accountName: string,
    certificateName: string,
    parameters: CertificateCreateOrUpdateParameters,
    options?: CertificateCreateOptionalParams
  ): Promise<CertificateCreateResponse>;
  /**
   * Warning: This operation is deprecated and will be removed after February, 2024. Please use the
   * [Azure KeyVault
   * Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide) instead.
   * @param resourceGroupName The name of the resource group that contains the Batch account.
   * @param accountName The name of the Batch account.
   * @param certificateName The identifier for the certificate. This must be made up of algorithm and
   *                        thumbprint separated by a dash, and must match the certificate data in the request. For example
   *                        SHA1-a3d1c5.
   * @param parameters Certificate entity to update.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    accountName: string,
    certificateName: string,
    parameters: CertificateCreateOrUpdateParameters,
    options?: CertificateUpdateOptionalParams
  ): Promise<CertificateUpdateResponse>;
  /**
   * Warning: This operation is deprecated and will be removed after February, 2024. Please use the
   * [Azure KeyVault
   * Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide) instead.
   * @param resourceGroupName The name of the resource group that contains the Batch account.
   * @param accountName The name of the Batch account.
   * @param certificateName The identifier for the certificate. This must be made up of algorithm and
   *                        thumbprint separated by a dash, and must match the certificate data in the request. For example
   *                        SHA1-a3d1c5.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    accountName: string,
    certificateName: string,
    options?: CertificateDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Warning: This operation is deprecated and will be removed after February, 2024. Please use the
   * [Azure KeyVault
   * Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide) instead.
   * @param resourceGroupName The name of the resource group that contains the Batch account.
   * @param accountName The name of the Batch account.
   * @param certificateName The identifier for the certificate. This must be made up of algorithm and
   *                        thumbprint separated by a dash, and must match the certificate data in the request. For example
   *                        SHA1-a3d1c5.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    accountName: string,
    certificateName: string,
    options?: CertificateDeleteOptionalParams
  ): Promise<void>;
  /**
   * Warning: This operation is deprecated and will be removed after February, 2024. Please use the
   * [Azure KeyVault
   * Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide) instead.
   * @param resourceGroupName The name of the resource group that contains the Batch account.
   * @param accountName The name of the Batch account.
   * @param certificateName The identifier for the certificate. This must be made up of algorithm and
   *                        thumbprint separated by a dash, and must match the certificate data in the request. For example
   *                        SHA1-a3d1c5.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    certificateName: string,
    options?: CertificateGetOptionalParams
  ): Promise<CertificateGetResponse>;
  /**
   * If you try to delete a certificate that is being used by a pool or compute node, the status of the
   * certificate changes to deleteFailed. If you decide that you want to continue using the certificate,
   * you can use this operation to set the status of the certificate back to active. If you intend to
   * delete the certificate, you do not need to run this operation after the deletion failed. You must
   * make sure that the certificate is not being used by any resources, and then you can try again to
   * delete the certificate.
   *
   * Warning: This operation is deprecated and will be removed after February, 2024. Please use the
   * [Azure KeyVault
   * Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide) instead.
   * @param resourceGroupName The name of the resource group that contains the Batch account.
   * @param accountName The name of the Batch account.
   * @param certificateName The identifier for the certificate. This must be made up of algorithm and
   *                        thumbprint separated by a dash, and must match the certificate data in the request. For example
   *                        SHA1-a3d1c5.
   * @param options The options parameters.
   */
  cancelDeletion(
    resourceGroupName: string,
    accountName: string,
    certificateName: string,
    options?: CertificateCancelDeletionOptionalParams
  ): Promise<CertificateCancelDeletionResponse>;
}
