/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  SupportedSku,
  LocationListSupportedVirtualMachineSkusOptionalParams,
  LocationListSupportedCloudServiceSkusOptionalParams,
  LocationGetQuotasOptionalParams,
  LocationGetQuotasResponse,
  CheckNameAvailabilityParameters,
  LocationCheckNameAvailabilityOptionalParams,
  LocationCheckNameAvailabilityResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Location. */
export interface Location {
  /**
   * Gets the list of Batch supported Virtual Machine VM sizes available at the given location.
   * @param locationName The region for which to retrieve Batch service supported SKUs.
   * @param options The options parameters.
   */
  listSupportedVirtualMachineSkus(
    locationName: string,
    options?: LocationListSupportedVirtualMachineSkusOptionalParams
  ): PagedAsyncIterableIterator<SupportedSku>;
  /**
   * Gets the list of Batch supported Cloud Service VM sizes available at the given location.
   * @param locationName The region for which to retrieve Batch service supported SKUs.
   * @param options The options parameters.
   */
  listSupportedCloudServiceSkus(
    locationName: string,
    options?: LocationListSupportedCloudServiceSkusOptionalParams
  ): PagedAsyncIterableIterator<SupportedSku>;
  /**
   * Gets the Batch service quotas for the specified subscription at the given location.
   * @param locationName The region for which to retrieve Batch service quotas.
   * @param options The options parameters.
   */
  getQuotas(
    locationName: string,
    options?: LocationGetQuotasOptionalParams
  ): Promise<LocationGetQuotasResponse>;
  /**
   * Checks whether the Batch account name is available in the specified region.
   * @param locationName The desired region for the name check.
   * @param parameters Properties needed to check the availability of a name.
   * @param options The options parameters.
   */
  checkNameAvailability(
    locationName: string,
    parameters: CheckNameAvailabilityParameters,
    options?: LocationCheckNameAvailabilityOptionalParams
  ): Promise<LocationCheckNameAvailabilityResponse>;
}
