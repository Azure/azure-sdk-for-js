/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const acceptLanguage: coreHttp.OperationParameter = {
  parameterPath: "acceptLanguage",
  mapper: {
    serializedName: "accept-language",
    defaultValue: 'en-US',
    type: {
      name: "String"
    }
  }
};
export const apiVersion: coreHttp.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    required: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};
export const applicationId: coreHttp.OperationURLParameter = {
  parameterPath: "applicationId",
  mapper: {
    required: true,
    serializedName: "applicationId",
    type: {
      name: "String"
    }
  }
};
export const batchUrl: coreHttp.OperationURLParameter = {
  parameterPath: "batchUrl",
  mapper: {
    required: true,
    serializedName: "batchUrl",
    defaultValue: '',
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const clientRequestId0: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "applicationListOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId1: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "applicationGetOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId10: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolPatchOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId11: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolDisableAutoScaleOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId12: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolEnableAutoScaleOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId13: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolEvaluateAutoScaleOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId14: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolResizeOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId15: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolStopResizeOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId16: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolUpdatePropertiesOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId17: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolRemoveNodesOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId18: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolListUsageMetricsNextOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId19: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolListNextOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId2: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "applicationListNextOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId20: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "accountListSupportedImagesOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId21: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "accountListPoolNodeCountsOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId22: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "accountListSupportedImagesNextOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId23: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "accountListPoolNodeCountsNextOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId24: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobGetAllLifetimeStatisticsOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId25: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobDeleteMethodOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId26: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobGetOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId27: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobPatchOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId28: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobUpdateOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId29: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobDisableOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId3: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolListUsageMetricsOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId30: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobEnableOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId31: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobTerminateOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId32: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobAddOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId33: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobListOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId34: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobListFromJobScheduleOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId35: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobListPreparationAndReleaseTaskStatusOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId36: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobGetTaskCountsOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId37: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobListNextOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId38: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobListFromJobScheduleNextOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId39: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobListPreparationAndReleaseTaskStatusNextOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId4: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolGetAllLifetimeStatisticsOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId40: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "certificateAddOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId41: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "certificateListOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId42: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "certificateCancelDeletionOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId43: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "certificateDeleteMethodOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId44: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "certificateGetOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId45: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "certificateListNextOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId46: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileDeleteFromTaskOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId47: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileGetFromTaskOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId48: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileGetPropertiesFromTaskOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId49: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileDeleteFromComputeNodeOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId5: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolAddOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId50: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileGetFromComputeNodeOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId51: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileGetPropertiesFromComputeNodeOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId52: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileListFromTaskOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId53: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileListFromComputeNodeOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId54: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileListFromTaskNextOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId55: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileListFromComputeNodeNextOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId56: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleExistsOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId57: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleDeleteMethodOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId58: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleGetOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId59: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobSchedulePatchOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId6: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolListOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId60: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleUpdateOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId61: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleDisableOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId62: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleEnableOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId63: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleTerminateOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId64: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleAddOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId65: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleListOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId66: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleListNextOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId67: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskAddOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId68: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskListOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId69: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskAddCollectionOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId7: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolDeleteMethodOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId70: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskDeleteMethodOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId71: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskGetOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId72: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskUpdateOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId73: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskListSubtasksOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId74: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskTerminateOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId75: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskReactivateOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId76: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskListNextOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId77: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeAddUserOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId78: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeDeleteUserOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId79: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeUpdateUserOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId8: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolExistsOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId80: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeGetOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId81: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeRebootOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId82: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeReimageOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId83: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeDisableSchedulingOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId84: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeEnableSchedulingOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId85: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeGetRemoteLoginSettingsOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId86: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeGetRemoteDesktopOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId87: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeUploadBatchServiceLogsOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId88: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeListOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId89: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeListNextOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const clientRequestId9: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolGetOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};
export const endTime: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "poolListUsageMetricsOptions",
    "endTime"
  ],
  mapper: {
    serializedName: "endtime",
    type: {
      name: "DateTime"
    }
  }
};
export const expand0: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "poolListOptions",
    "expand"
  ],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};
export const expand1: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "poolGetOptions",
    "expand"
  ],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};
export const expand2: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobGetOptions",
    "expand"
  ],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};
export const expand3: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobListOptions",
    "expand"
  ],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};
export const expand4: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobListFromJobScheduleOptions",
    "expand"
  ],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};
export const expand5: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobScheduleGetOptions",
    "expand"
  ],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};
export const expand6: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobScheduleListOptions",
    "expand"
  ],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};
export const expand7: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "taskListOptions",
    "expand"
  ],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};
export const expand8: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "taskGetOptions",
    "expand"
  ],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};
export const filePath: coreHttp.OperationURLParameter = {
  parameterPath: "filePath",
  mapper: {
    required: true,
    serializedName: "filePath",
    type: {
      name: "String"
    }
  }
};
export const filter0: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "poolListUsageMetricsOptions",
    "filter"
  ],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};
export const filter1: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "poolListOptions",
    "filter"
  ],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};
export const filter10: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobScheduleListOptions",
    "filter"
  ],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};
export const filter11: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "taskListOptions",
    "filter"
  ],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};
export const filter12: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "computeNodeListOptions",
    "filter"
  ],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};
export const filter2: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "accountListSupportedImagesOptions",
    "filter"
  ],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};
export const filter3: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "accountListPoolNodeCountsOptions",
    "filter"
  ],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};
export const filter4: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobListOptions",
    "filter"
  ],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};
export const filter5: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobListFromJobScheduleOptions",
    "filter"
  ],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};
export const filter6: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobListPreparationAndReleaseTaskStatusOptions",
    "filter"
  ],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};
export const filter7: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "certificateListOptions",
    "filter"
  ],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};
export const filter8: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "fileListFromTaskOptions",
    "filter"
  ],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};
export const filter9: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "fileListFromComputeNodeOptions",
    "filter"
  ],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};
export const ifMatch0: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolDeleteMethodOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifMatch1: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolExistsOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifMatch10: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobPatchOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifMatch11: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobUpdateOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifMatch12: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobDisableOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifMatch13: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobEnableOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifMatch14: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobTerminateOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifMatch15: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleExistsOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifMatch16: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleDeleteMethodOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifMatch17: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleGetOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifMatch18: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobSchedulePatchOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifMatch19: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleUpdateOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifMatch2: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolGetOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifMatch20: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleDisableOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifMatch21: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleEnableOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifMatch22: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleTerminateOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifMatch23: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskDeleteMethodOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifMatch24: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskGetOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifMatch25: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskUpdateOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifMatch26: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskTerminateOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifMatch27: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskReactivateOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifMatch3: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolPatchOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifMatch4: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolEnableAutoScaleOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifMatch5: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolResizeOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifMatch6: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolStopResizeOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifMatch7: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolRemoveNodesOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifMatch8: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobDeleteMethodOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifMatch9: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobGetOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifModifiedSince0: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolDeleteMethodOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince1: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolExistsOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince10: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobPatchOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince11: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobUpdateOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince12: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobDisableOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince13: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobEnableOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince14: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobTerminateOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince15: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileGetFromTaskOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince16: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileGetPropertiesFromTaskOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince17: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileGetFromComputeNodeOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince18: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileGetPropertiesFromComputeNodeOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince19: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleExistsOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince2: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolGetOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince20: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleDeleteMethodOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince21: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleGetOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince22: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobSchedulePatchOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince23: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleUpdateOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince24: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleDisableOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince25: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleEnableOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince26: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleTerminateOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince27: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskDeleteMethodOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince28: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskGetOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince29: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskUpdateOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince3: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolPatchOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince30: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskTerminateOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince31: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskReactivateOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince4: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolEnableAutoScaleOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince5: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolResizeOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince6: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolStopResizeOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince7: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolRemoveNodesOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince8: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobDeleteMethodOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifModifiedSince9: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobGetOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifNoneMatch0: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolDeleteMethodOptions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifNoneMatch1: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolExistsOptions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifNoneMatch10: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobPatchOptions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifNoneMatch11: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobUpdateOptions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifNoneMatch12: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobDisableOptions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifNoneMatch13: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobEnableOptions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifNoneMatch14: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobTerminateOptions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifNoneMatch15: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleExistsOptions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifNoneMatch16: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleDeleteMethodOptions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifNoneMatch17: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleGetOptions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifNoneMatch18: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobSchedulePatchOptions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifNoneMatch19: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleUpdateOptions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifNoneMatch2: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolGetOptions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifNoneMatch20: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleDisableOptions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifNoneMatch21: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleEnableOptions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifNoneMatch22: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleTerminateOptions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifNoneMatch23: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskDeleteMethodOptions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifNoneMatch24: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskGetOptions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifNoneMatch25: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskUpdateOptions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifNoneMatch26: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskTerminateOptions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifNoneMatch27: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskReactivateOptions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifNoneMatch3: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolPatchOptions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifNoneMatch4: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolEnableAutoScaleOptions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifNoneMatch5: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolResizeOptions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifNoneMatch6: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolStopResizeOptions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifNoneMatch7: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolRemoveNodesOptions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifNoneMatch8: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobDeleteMethodOptions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifNoneMatch9: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobGetOptions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifUnmodifiedSince0: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolDeleteMethodOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince1: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolExistsOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince10: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobPatchOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince11: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobUpdateOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince12: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobDisableOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince13: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobEnableOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince14: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobTerminateOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince15: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileGetFromTaskOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince16: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileGetPropertiesFromTaskOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince17: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileGetFromComputeNodeOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince18: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileGetPropertiesFromComputeNodeOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince19: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleExistsOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince2: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolGetOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince20: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleDeleteMethodOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince21: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleGetOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince22: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobSchedulePatchOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince23: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleUpdateOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince24: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleDisableOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince25: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleEnableOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince26: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleTerminateOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince27: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskDeleteMethodOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince28: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskGetOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince29: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskUpdateOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince3: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolPatchOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince30: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskTerminateOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince31: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskReactivateOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince4: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolEnableAutoScaleOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince5: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolResizeOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince6: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolStopResizeOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince7: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolRemoveNodesOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince8: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobDeleteMethodOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifUnmodifiedSince9: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobGetOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const jobId: coreHttp.OperationURLParameter = {
  parameterPath: "jobId",
  mapper: {
    required: true,
    serializedName: "jobId",
    type: {
      name: "String"
    }
  }
};
export const jobScheduleId: coreHttp.OperationURLParameter = {
  parameterPath: "jobScheduleId",
  mapper: {
    required: true,
    serializedName: "jobScheduleId",
    type: {
      name: "String"
    }
  }
};
export const maxResults0: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "applicationListOptions",
    "maxResults"
  ],
  mapper: {
    serializedName: "maxresults",
    defaultValue: 1000,
    constraints: {
      InclusiveMaximum: 1000,
      InclusiveMinimum: 1
    },
    type: {
      name: "Number"
    }
  }
};
export const maxResults1: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "poolListUsageMetricsOptions",
    "maxResults"
  ],
  mapper: {
    serializedName: "maxresults",
    defaultValue: 1000,
    constraints: {
      InclusiveMaximum: 1000,
      InclusiveMinimum: 1
    },
    type: {
      name: "Number"
    }
  }
};
export const maxResults10: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "fileListFromComputeNodeOptions",
    "maxResults"
  ],
  mapper: {
    serializedName: "maxresults",
    defaultValue: 1000,
    constraints: {
      InclusiveMaximum: 1000,
      InclusiveMinimum: 1
    },
    type: {
      name: "Number"
    }
  }
};
export const maxResults11: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobScheduleListOptions",
    "maxResults"
  ],
  mapper: {
    serializedName: "maxresults",
    defaultValue: 1000,
    constraints: {
      InclusiveMaximum: 1000,
      InclusiveMinimum: 1
    },
    type: {
      name: "Number"
    }
  }
};
export const maxResults12: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "taskListOptions",
    "maxResults"
  ],
  mapper: {
    serializedName: "maxresults",
    defaultValue: 1000,
    constraints: {
      InclusiveMaximum: 1000,
      InclusiveMinimum: 1
    },
    type: {
      name: "Number"
    }
  }
};
export const maxResults13: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "computeNodeListOptions",
    "maxResults"
  ],
  mapper: {
    serializedName: "maxresults",
    defaultValue: 1000,
    constraints: {
      InclusiveMaximum: 1000,
      InclusiveMinimum: 1
    },
    type: {
      name: "Number"
    }
  }
};
export const maxResults2: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "poolListOptions",
    "maxResults"
  ],
  mapper: {
    serializedName: "maxresults",
    defaultValue: 1000,
    constraints: {
      InclusiveMaximum: 1000,
      InclusiveMinimum: 1
    },
    type: {
      name: "Number"
    }
  }
};
export const maxResults3: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "accountListSupportedImagesOptions",
    "maxResults"
  ],
  mapper: {
    serializedName: "maxresults",
    defaultValue: 1000,
    constraints: {
      InclusiveMaximum: 1000,
      InclusiveMinimum: 1
    },
    type: {
      name: "Number"
    }
  }
};
export const maxResults4: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "accountListPoolNodeCountsOptions",
    "maxResults"
  ],
  mapper: {
    serializedName: "maxresults",
    defaultValue: 10,
    constraints: {
      InclusiveMaximum: 10,
      InclusiveMinimum: 1
    },
    type: {
      name: "Number"
    }
  }
};
export const maxResults5: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobListOptions",
    "maxResults"
  ],
  mapper: {
    serializedName: "maxresults",
    defaultValue: 1000,
    constraints: {
      InclusiveMaximum: 1000,
      InclusiveMinimum: 1
    },
    type: {
      name: "Number"
    }
  }
};
export const maxResults6: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobListFromJobScheduleOptions",
    "maxResults"
  ],
  mapper: {
    serializedName: "maxresults",
    defaultValue: 1000,
    constraints: {
      InclusiveMaximum: 1000,
      InclusiveMinimum: 1
    },
    type: {
      name: "Number"
    }
  }
};
export const maxResults7: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobListPreparationAndReleaseTaskStatusOptions",
    "maxResults"
  ],
  mapper: {
    serializedName: "maxresults",
    defaultValue: 1000,
    constraints: {
      InclusiveMaximum: 1000,
      InclusiveMinimum: 1
    },
    type: {
      name: "Number"
    }
  }
};
export const maxResults8: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "certificateListOptions",
    "maxResults"
  ],
  mapper: {
    serializedName: "maxresults",
    defaultValue: 1000,
    constraints: {
      InclusiveMaximum: 1000,
      InclusiveMinimum: 1
    },
    type: {
      name: "Number"
    }
  }
};
export const maxResults9: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "fileListFromTaskOptions",
    "maxResults"
  ],
  mapper: {
    serializedName: "maxresults",
    defaultValue: 1000,
    constraints: {
      InclusiveMaximum: 1000,
      InclusiveMinimum: 1
    },
    type: {
      name: "Number"
    }
  }
};
export const nextPageLink: coreHttp.OperationURLParameter = {
  parameterPath: "nextPageLink",
  mapper: {
    required: true,
    serializedName: "nextLink",
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const nodeId: coreHttp.OperationURLParameter = {
  parameterPath: "nodeId",
  mapper: {
    required: true,
    serializedName: "nodeId",
    type: {
      name: "String"
    }
  }
};
export const ocpDate0: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "applicationListOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate1: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "applicationGetOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate10: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolPatchOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate11: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolDisableAutoScaleOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate12: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolEnableAutoScaleOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate13: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolEvaluateAutoScaleOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate14: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolResizeOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate15: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolStopResizeOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate16: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolUpdatePropertiesOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate17: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolRemoveNodesOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate18: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolListUsageMetricsNextOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate19: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolListNextOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate2: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "applicationListNextOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate20: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "accountListSupportedImagesOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate21: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "accountListPoolNodeCountsOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate22: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "accountListSupportedImagesNextOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate23: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "accountListPoolNodeCountsNextOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate24: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobGetAllLifetimeStatisticsOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate25: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobDeleteMethodOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate26: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobGetOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate27: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobPatchOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate28: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobUpdateOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate29: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobDisableOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate3: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolListUsageMetricsOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate30: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobEnableOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate31: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobTerminateOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate32: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobAddOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate33: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobListOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate34: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobListFromJobScheduleOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate35: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobListPreparationAndReleaseTaskStatusOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate36: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobGetTaskCountsOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate37: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobListNextOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate38: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobListFromJobScheduleNextOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate39: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobListPreparationAndReleaseTaskStatusNextOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate4: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolGetAllLifetimeStatisticsOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate40: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "certificateAddOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate41: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "certificateListOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate42: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "certificateCancelDeletionOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate43: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "certificateDeleteMethodOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate44: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "certificateGetOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate45: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "certificateListNextOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate46: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileDeleteFromTaskOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate47: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileGetFromTaskOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate48: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileGetPropertiesFromTaskOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate49: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileDeleteFromComputeNodeOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate5: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolAddOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate50: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileGetFromComputeNodeOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate51: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileGetPropertiesFromComputeNodeOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate52: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileListFromTaskOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate53: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileListFromComputeNodeOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate54: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileListFromTaskNextOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate55: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileListFromComputeNodeNextOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate56: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleExistsOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate57: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleDeleteMethodOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate58: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleGetOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate59: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobSchedulePatchOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate6: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolListOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate60: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleUpdateOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate61: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleDisableOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate62: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleEnableOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate63: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleTerminateOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate64: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleAddOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate65: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleListOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate66: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleListNextOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate67: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskAddOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate68: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskListOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate69: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskAddCollectionOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate7: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolDeleteMethodOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate70: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskDeleteMethodOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate71: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskGetOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate72: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskUpdateOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate73: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskListSubtasksOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate74: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskTerminateOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate75: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskReactivateOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate76: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskListNextOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate77: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeAddUserOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate78: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeDeleteUserOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate79: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeUpdateUserOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate8: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolExistsOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate80: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeGetOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate81: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeRebootOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate82: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeReimageOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate83: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeDisableSchedulingOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate84: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeEnableSchedulingOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate85: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeGetRemoteLoginSettingsOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate86: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeGetRemoteDesktopOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate87: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeUploadBatchServiceLogsOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate88: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeListOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate89: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeListNextOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpDate9: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolGetOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ocpRange0: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileGetFromTaskOptions",
    "ocpRange"
  ],
  mapper: {
    serializedName: "ocp-range",
    type: {
      name: "String"
    }
  }
};
export const ocpRange1: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileGetFromComputeNodeOptions",
    "ocpRange"
  ],
  mapper: {
    serializedName: "ocp-range",
    type: {
      name: "String"
    }
  }
};
export const poolId: coreHttp.OperationURLParameter = {
  parameterPath: "poolId",
  mapper: {
    required: true,
    serializedName: "poolId",
    type: {
      name: "String"
    }
  }
};
export const recursive: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "recursive"
  ],
  mapper: {
    serializedName: "recursive",
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId0: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "applicationListOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId1: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "applicationGetOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId10: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolPatchOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId11: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolDisableAutoScaleOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId12: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolEnableAutoScaleOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId13: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolEvaluateAutoScaleOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId14: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolResizeOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId15: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolStopResizeOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId16: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolUpdatePropertiesOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId17: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolRemoveNodesOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId18: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolListUsageMetricsNextOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId19: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolListNextOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId2: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "applicationListNextOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId20: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "accountListSupportedImagesOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId21: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "accountListPoolNodeCountsOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId22: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "accountListSupportedImagesNextOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId23: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "accountListPoolNodeCountsNextOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId24: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobGetAllLifetimeStatisticsOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId25: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobDeleteMethodOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId26: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobGetOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId27: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobPatchOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId28: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobUpdateOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId29: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobDisableOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId3: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolListUsageMetricsOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId30: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobEnableOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId31: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobTerminateOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId32: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobAddOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId33: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobListOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId34: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobListFromJobScheduleOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId35: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobListPreparationAndReleaseTaskStatusOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId36: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobGetTaskCountsOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId37: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobListNextOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId38: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobListFromJobScheduleNextOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId39: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobListPreparationAndReleaseTaskStatusNextOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId4: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolGetAllLifetimeStatisticsOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId40: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "certificateAddOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId41: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "certificateListOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId42: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "certificateCancelDeletionOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId43: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "certificateDeleteMethodOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId44: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "certificateGetOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId45: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "certificateListNextOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId46: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileDeleteFromTaskOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId47: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileGetFromTaskOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId48: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileGetPropertiesFromTaskOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId49: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileDeleteFromComputeNodeOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId5: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolAddOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId50: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileGetFromComputeNodeOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId51: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileGetPropertiesFromComputeNodeOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId52: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileListFromTaskOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId53: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileListFromComputeNodeOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId54: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileListFromTaskNextOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId55: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "fileListFromComputeNodeNextOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId56: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleExistsOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId57: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleDeleteMethodOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId58: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleGetOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId59: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobSchedulePatchOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId6: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolListOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId60: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleUpdateOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId61: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleDisableOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId62: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleEnableOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId63: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleTerminateOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId64: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleAddOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId65: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleListOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId66: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleListNextOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId67: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskAddOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId68: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskListOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId69: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskAddCollectionOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId7: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolDeleteMethodOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId70: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskDeleteMethodOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId71: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskGetOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId72: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskUpdateOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId73: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskListSubtasksOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId74: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskTerminateOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId75: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskReactivateOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId76: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "taskListNextOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId77: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeAddUserOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId78: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeDeleteUserOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId79: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeUpdateUserOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId8: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolExistsOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId80: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeGetOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId81: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeRebootOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId82: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeReimageOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId83: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeDisableSchedulingOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId84: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeEnableSchedulingOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId85: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeGetRemoteLoginSettingsOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId86: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeGetRemoteDesktopOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId87: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeUploadBatchServiceLogsOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId88: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeListOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId89: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeListNextOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const returnClientRequestId9: coreHttp.OperationParameter = {
  parameterPath: [
    "options",
    "poolGetOptions",
    "returnClientRequestId"
  ],
  mapper: {
    serializedName: "return-client-request-id",
    defaultValue: false,
    type: {
      name: "Boolean"
    }
  }
};
export const select0: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "poolListOptions",
    "select"
  ],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};
export const select1: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "poolGetOptions",
    "select"
  ],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};
export const select10: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "taskListOptions",
    "select"
  ],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};
export const select11: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "taskGetOptions",
    "select"
  ],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};
export const select12: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "taskListSubtasksOptions",
    "select"
  ],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};
export const select13: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "computeNodeGetOptions",
    "select"
  ],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};
export const select14: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "computeNodeListOptions",
    "select"
  ],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};
export const select2: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobGetOptions",
    "select"
  ],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};
export const select3: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobListOptions",
    "select"
  ],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};
export const select4: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobListFromJobScheduleOptions",
    "select"
  ],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};
export const select5: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobListPreparationAndReleaseTaskStatusOptions",
    "select"
  ],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};
export const select6: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "certificateListOptions",
    "select"
  ],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};
export const select7: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "certificateGetOptions",
    "select"
  ],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};
export const select8: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobScheduleGetOptions",
    "select"
  ],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};
export const select9: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobScheduleListOptions",
    "select"
  ],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};
export const startTime: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "poolListUsageMetricsOptions",
    "startTime"
  ],
  mapper: {
    serializedName: "starttime",
    type: {
      name: "DateTime"
    }
  }
};
export const taskId: coreHttp.OperationURLParameter = {
  parameterPath: "taskId",
  mapper: {
    required: true,
    serializedName: "taskId",
    type: {
      name: "String"
    }
  }
};
export const thumbprint: coreHttp.OperationURLParameter = {
  parameterPath: "thumbprint",
  mapper: {
    required: true,
    serializedName: "thumbprint",
    type: {
      name: "String"
    }
  }
};
export const thumbprintAlgorithm: coreHttp.OperationURLParameter = {
  parameterPath: "thumbprintAlgorithm",
  mapper: {
    required: true,
    serializedName: "thumbprintAlgorithm",
    type: {
      name: "String"
    }
  }
};
export const timeout0: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "applicationListOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout1: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "applicationGetOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout10: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "poolDisableAutoScaleOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout11: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "poolEnableAutoScaleOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout12: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "poolEvaluateAutoScaleOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout13: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "poolResizeOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout14: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "poolStopResizeOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout15: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "poolUpdatePropertiesOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout16: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "poolRemoveNodesOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout17: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "accountListSupportedImagesOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout18: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "accountListPoolNodeCountsOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout19: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobGetAllLifetimeStatisticsOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout2: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "poolListUsageMetricsOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout20: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobDeleteMethodOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout21: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobGetOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout22: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobPatchOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout23: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobUpdateOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout24: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobDisableOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout25: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobEnableOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout26: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobTerminateOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout27: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobAddOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout28: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobListOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout29: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobListFromJobScheduleOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout3: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "poolGetAllLifetimeStatisticsOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout30: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobListPreparationAndReleaseTaskStatusOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout31: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobGetTaskCountsOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout32: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "certificateAddOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout33: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "certificateListOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout34: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "certificateCancelDeletionOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout35: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "certificateDeleteMethodOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout36: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "certificateGetOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout37: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "fileDeleteFromTaskOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout38: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "fileGetFromTaskOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout39: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "fileGetPropertiesFromTaskOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout4: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "poolAddOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout40: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "fileDeleteFromComputeNodeOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout41: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "fileGetFromComputeNodeOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout42: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "fileGetPropertiesFromComputeNodeOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout43: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "fileListFromTaskOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout44: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "fileListFromComputeNodeOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout45: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobScheduleExistsOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout46: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobScheduleDeleteMethodOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout47: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobScheduleGetOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout48: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobSchedulePatchOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout49: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobScheduleUpdateOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout5: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "poolListOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout50: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobScheduleDisableOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout51: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobScheduleEnableOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout52: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobScheduleTerminateOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout53: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobScheduleAddOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout54: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobScheduleListOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout55: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "taskAddOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout56: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "taskListOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout57: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "taskAddCollectionOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout58: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "taskDeleteMethodOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout59: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "taskGetOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout6: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "poolDeleteMethodOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout60: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "taskUpdateOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout61: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "taskListSubtasksOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout62: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "taskTerminateOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout63: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "taskReactivateOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout64: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "computeNodeAddUserOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout65: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "computeNodeDeleteUserOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout66: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "computeNodeUpdateUserOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout67: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "computeNodeGetOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout68: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "computeNodeRebootOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout69: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "computeNodeReimageOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout7: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "poolExistsOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout70: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "computeNodeDisableSchedulingOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout71: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "computeNodeEnableSchedulingOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout72: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "computeNodeGetRemoteLoginSettingsOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout73: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "computeNodeGetRemoteDesktopOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout74: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "computeNodeUploadBatchServiceLogsOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout75: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "computeNodeListOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout8: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "poolGetOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const timeout9: coreHttp.OperationQueryParameter = {
  parameterPath: [
    "options",
    "poolPatchOptions",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    defaultValue: 30,
    type: {
      name: "Number"
    }
  }
};
export const userName: coreHttp.OperationURLParameter = {
  parameterPath: "userName",
  mapper: {
    required: true,
    serializedName: "userName",
    type: {
      name: "String"
    }
  }
};
