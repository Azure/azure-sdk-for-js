/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
const { AzureHSMResourceProvider } = require("@azure/arm-hardwaresecuritymodules");
const { DefaultAzureCredential } = require("@azure/identity");
require("dotenv").config();

/**
 * This sample demonstrates how to Queued validating pre restore operation
 *
 * @summary Queued validating pre restore operation
 * x-ms-original-file: specification/hardwaresecuritymodules/resource-manager/Microsoft.HardwareSecurityModules/preview/2024-06-30-preview/examples/CloudHsmCluster_RequestOrValidate_Restore_MaximumSet_Gen.json
 */
async function cloudHsmClusterValidateRestoreMaximumSetGen() {
  const subscriptionId =
    process.env["HARDWARESECURITYMODULES_SUBSCRIPTION_ID"] ||
    "00000000-0000-0000-0000-000000000000";
  const resourceGroupName = process.env["HARDWARESECURITYMODULES_RESOURCE_GROUP"] || "rgcloudhsm";
  const cloudHsmClusterName = "chsm1";
  const restoreRequestProperties = {
    azureStorageBlobContainerUri:
      "https://myaccount.blob.core.windows.net/sascontainer/sasContainer",
    backupId: "backupId",
  };
  const options = {
    restoreRequestProperties,
  };
  const credential = new DefaultAzureCredential();
  const client = new AzureHSMResourceProvider(credential, subscriptionId);
  const result = await client.cloudHsmClusters.beginValidateRestorePropertiesAndWait(
    resourceGroupName,
    cloudHsmClusterName,
    options,
  );
  console.log(result);
}

async function main() {
  cloudHsmClusterValidateRestoreMaximumSetGen();
}

main().catch(console.error);
