/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import {
  DedicatedHsmUpdateOptionalParams,
  AzureDedicatedHSMResourceProvider
} from "@azure/arm-hardwaresecuritymodules";
import { DefaultAzureCredential } from "@azure/identity";

/**
 * This sample demonstrates how to Update a dedicated HSM in the specified subscription.
 *
 * @summary Update a dedicated HSM in the specified subscription.
 * x-ms-original-file: specification/hardwaresecuritymodules/resource-manager/Microsoft.HardwareSecurityModules/stable/2021-11-30/examples/DedicatedHsm_Update.json
 */
async function updateAnExistingDedicatedHsm() {
  const subscriptionId = "00000000-0000-0000-0000-000000000000";
  const resourceGroupName = "hsm-group";
  const name = "hsm1";
  const tags = { dept: "hsm", environment: "dogfood", slice: "A" };
  const options: DedicatedHsmUpdateOptionalParams = { tags };
  const credential = new DefaultAzureCredential();
  const client = new AzureDedicatedHSMResourceProvider(
    credential,
    subscriptionId
  );
  const result = await client.dedicatedHsmOperations.beginUpdateAndWait(
    resourceGroupName,
    name,
    options
  );
  console.log(result);
}

updateAnExistingDedicatedHsm().catch(console.error);

/**
 * This sample demonstrates how to Update a dedicated HSM in the specified subscription.
 *
 * @summary Update a dedicated HSM in the specified subscription.
 * x-ms-original-file: specification/hardwaresecuritymodules/resource-manager/Microsoft.HardwareSecurityModules/stable/2021-11-30/examples/PaymentHsm_Update.json
 */
async function updateAnExistingPaymentHsm() {
  const subscriptionId = "00000000-0000-0000-0000-000000000000";
  const resourceGroupName = "hsm-group";
  const name = "hsm1";
  const tags = { dept: "hsm", environment: "dogfood", slice: "A" };
  const options: DedicatedHsmUpdateOptionalParams = { tags };
  const credential = new DefaultAzureCredential();
  const client = new AzureDedicatedHSMResourceProvider(
    credential,
    subscriptionId
  );
  const result = await client.dedicatedHsmOperations.beginUpdateAndWait(
    resourceGroupName,
    name,
    options
  );
  console.log(result);
}

updateAnExistingPaymentHsm().catch(console.error);
