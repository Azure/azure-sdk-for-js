/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { Endpoint, StorageMoverClient } from "@azure/arm-storagemover";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";

dotenv.config();

/**
 * This sample demonstrates how to Creates or updates an Endpoint resource, which represents a data transfer source or destination.
 *
 * @summary Creates or updates an Endpoint resource, which represents a data transfer source or destination.
 * x-ms-original-file: specification/storagemover/resource-manager/Microsoft.StorageMover/preview/2023-07-01-preview/examples/Endpoints_CreateOrUpdate_AzureStorageBlobContainer.json
 */
async function endpointsCreateOrUpdateAzureStorageBlobContainer() {
  const subscriptionId =
    process.env["STORAGEMOVER_SUBSCRIPTION_ID"] ||
    "60bcfc77-6589-4da2-b7fd-f9ec9322cf95";
  const resourceGroupName =
    process.env["STORAGEMOVER_RESOURCE_GROUP"] || "examples-rg";
  const storageMoverName = "examples-storageMoverName";
  const endpointName = "examples-endpointName";
  const endpoint: Endpoint = {
    properties: {
      description: "Example Storage Blob Container Endpoint Description",
      blobContainerName: "examples-blobcontainer",
      endpointType: "AzureStorageBlobContainer",
      storageAccountResourceId:
        "/subscriptions/60bcfc77-6589-4da2-b7fd-f9ec9322cf95/resourceGroups/examples-rg/providers/Microsoft.Storage/storageAccounts/examplesa"
    }
  };
  const credential = new DefaultAzureCredential();
  const client = new StorageMoverClient(credential, subscriptionId);
  const result = await client.endpoints.createOrUpdate(
    resourceGroupName,
    storageMoverName,
    endpointName,
    endpoint
  );
  console.log(result);
}

/**
 * This sample demonstrates how to Creates or updates an Endpoint resource, which represents a data transfer source or destination.
 *
 * @summary Creates or updates an Endpoint resource, which represents a data transfer source or destination.
 * x-ms-original-file: specification/storagemover/resource-manager/Microsoft.StorageMover/preview/2023-07-01-preview/examples/Endpoints_CreateOrUpdate_AzureStorageSmbFileShare.json
 */
async function endpointsCreateOrUpdateAzureStorageSmbFileShare() {
  const subscriptionId =
    process.env["STORAGEMOVER_SUBSCRIPTION_ID"] ||
    "60bcfc77-6589-4da2-b7fd-f9ec9322cf95";
  const resourceGroupName =
    process.env["STORAGEMOVER_RESOURCE_GROUP"] || "examples-rg";
  const storageMoverName = "examples-storageMoverName";
  const endpointName = "examples-endpointName";
  const endpoint: Endpoint = {
    properties: {
      description: "Example Storage File Share Endpoint Description",
      endpointType: "AzureStorageSmbFileShare",
      fileShareName: "examples-fileshare",
      storageAccountResourceId:
        "/subscriptions/60bcfc77-6589-4da2-b7fd-f9ec9322cf95/resourceGroups/examples-rg/providers/Microsoft.Storage/storageAccounts/examplesa"
    }
  };
  const credential = new DefaultAzureCredential();
  const client = new StorageMoverClient(credential, subscriptionId);
  const result = await client.endpoints.createOrUpdate(
    resourceGroupName,
    storageMoverName,
    endpointName,
    endpoint
  );
  console.log(result);
}

/**
 * This sample demonstrates how to Creates or updates an Endpoint resource, which represents a data transfer source or destination.
 *
 * @summary Creates or updates an Endpoint resource, which represents a data transfer source or destination.
 * x-ms-original-file: specification/storagemover/resource-manager/Microsoft.StorageMover/preview/2023-07-01-preview/examples/Endpoints_CreateOrUpdate_NfsMount.json
 */
async function endpointsCreateOrUpdateNfsMount() {
  const subscriptionId =
    process.env["STORAGEMOVER_SUBSCRIPTION_ID"] ||
    "60bcfc77-6589-4da2-b7fd-f9ec9322cf95";
  const resourceGroupName =
    process.env["STORAGEMOVER_RESOURCE_GROUP"] || "examples-rg";
  const storageMoverName = "examples-storageMoverName";
  const endpointName = "examples-endpointName";
  const endpoint: Endpoint = {
    properties: {
      description: "Example NFS Mount Endpoint Description",
      endpointType: "NfsMount",
      export: "examples-exportName",
      host: "0.0.0.0"
    }
  };
  const credential = new DefaultAzureCredential();
  const client = new StorageMoverClient(credential, subscriptionId);
  const result = await client.endpoints.createOrUpdate(
    resourceGroupName,
    storageMoverName,
    endpointName,
    endpoint
  );
  console.log(result);
}

/**
 * This sample demonstrates how to Creates or updates an Endpoint resource, which represents a data transfer source or destination.
 *
 * @summary Creates or updates an Endpoint resource, which represents a data transfer source or destination.
 * x-ms-original-file: specification/storagemover/resource-manager/Microsoft.StorageMover/preview/2023-07-01-preview/examples/Endpoints_CreateOrUpdate_SmbMount.json
 */
async function endpointsCreateOrUpdateSmbMount() {
  const subscriptionId =
    process.env["STORAGEMOVER_SUBSCRIPTION_ID"] ||
    "60bcfc77-6589-4da2-b7fd-f9ec9322cf95";
  const resourceGroupName =
    process.env["STORAGEMOVER_RESOURCE_GROUP"] || "examples-rg";
  const storageMoverName = "examples-storageMoverName";
  const endpointName = "examples-endpointName";
  const endpoint: Endpoint = {
    properties: {
      description: "Example SMB Mount Endpoint Description",
      credentials: {
        type: "AzureKeyVaultSmb",
        passwordUri:
          "https://examples-azureKeyVault.vault.azure.net/secrets/examples-password",
        usernameUri:
          "https://examples-azureKeyVault.vault.azure.net/secrets/examples-username"
      },
      endpointType: "SmbMount",
      host: "0.0.0.0",
      shareName: "examples-shareName"
    }
  };
  const credential = new DefaultAzureCredential();
  const client = new StorageMoverClient(credential, subscriptionId);
  const result = await client.endpoints.createOrUpdate(
    resourceGroupName,
    storageMoverName,
    endpointName,
    endpoint
  );
  console.log(result);
}

async function main() {
  endpointsCreateOrUpdateAzureStorageBlobContainer();
  endpointsCreateOrUpdateAzureStorageSmbFileShare();
  endpointsCreateOrUpdateNfsMount();
  endpointsCreateOrUpdateSmbMount();
}

main().catch(console.error);
