/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  Endpoint,
  EndpointsListOptionalParams,
  EndpointsGetOptionalParams,
  EndpointsGetResponse,
  EndpointsCreateOrUpdateOptionalParams,
  EndpointsCreateOrUpdateResponse,
  EndpointBaseUpdateParameters,
  EndpointsUpdateOptionalParams,
  EndpointsUpdateResponse,
  EndpointsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Endpoints. */
export interface Endpoints {
  /**
   * Lists all Endpoints in a Storage Mover.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageMoverName The name of the Storage Mover resource.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    storageMoverName: string,
    options?: EndpointsListOptionalParams
  ): PagedAsyncIterableIterator<Endpoint>;
  /**
   * Gets an Endpoint resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageMoverName The name of the Storage Mover resource.
   * @param endpointName The name of the Endpoint resource.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    storageMoverName: string,
    endpointName: string,
    options?: EndpointsGetOptionalParams
  ): Promise<EndpointsGetResponse>;
  /**
   * Creates or updates an Endpoint resource, which represents a data transfer source or destination.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageMoverName The name of the Storage Mover resource.
   * @param endpointName The name of the Endpoint resource.
   * @param endpoint The Endpoint resource, which contains information about file sources and targets.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    storageMoverName: string,
    endpointName: string,
    endpoint: Endpoint,
    options?: EndpointsCreateOrUpdateOptionalParams
  ): Promise<EndpointsCreateOrUpdateResponse>;
  /**
   * Updates properties for an Endpoint resource. Properties not specified in the request body will be
   * unchanged.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageMoverName The name of the Storage Mover resource.
   * @param endpointName The name of the Endpoint resource.
   * @param endpoint The Endpoint resource.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    storageMoverName: string,
    endpointName: string,
    endpoint: EndpointBaseUpdateParameters,
    options?: EndpointsUpdateOptionalParams
  ): Promise<EndpointsUpdateResponse>;
  /**
   * Deletes an Endpoint resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageMoverName The name of the Storage Mover resource.
   * @param endpointName The name of the Endpoint resource.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    storageMoverName: string,
    endpointName: string,
    options?: EndpointsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes an Endpoint resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageMoverName The name of the Storage Mover resource.
   * @param endpointName The name of the Endpoint resource.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    storageMoverName: string,
    endpointName: string,
    options?: EndpointsDeleteOptionalParams
  ): Promise<void>;
}
