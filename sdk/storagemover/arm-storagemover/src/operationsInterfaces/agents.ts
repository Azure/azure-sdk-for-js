/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  Agent,
  AgentsListOptionalParams,
  AgentsGetOptionalParams,
  AgentsGetResponse,
  AgentsCreateOrUpdateOptionalParams,
  AgentsCreateOrUpdateResponse,
  AgentUpdateParameters,
  AgentsUpdateOptionalParams,
  AgentsUpdateResponse,
  AgentsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Agents. */
export interface Agents {
  /**
   * Lists all agents in a Storage Mover.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageMoverName The name of the Storage Mover resource.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    storageMoverName: string,
    options?: AgentsListOptionalParams
  ): PagedAsyncIterableIterator<Agent>;
  /**
   * Gets an agent resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageMoverName The name of the Storage Mover resource.
   * @param agentName The name of the agent resource.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    storageMoverName: string,
    agentName: string,
    options?: AgentsGetOptionalParams
  ): Promise<AgentsGetResponse>;
  /**
   * Creates or updates an agent resource, which references a hybrid compute machine that can run jobs.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageMoverName The name of the Storage Mover resource.
   * @param agentName The name of the agent resource.
   * @param agent The agent resource.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    storageMoverName: string,
    agentName: string,
    agent: Agent,
    options?: AgentsCreateOrUpdateOptionalParams
  ): Promise<AgentsCreateOrUpdateResponse>;
  /**
   * Creates or updates an agent resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageMoverName The name of the Storage Mover resource.
   * @param agentName The name of the agent resource.
   * @param agent The agent resource.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    storageMoverName: string,
    agentName: string,
    agent: AgentUpdateParameters,
    options?: AgentsUpdateOptionalParams
  ): Promise<AgentsUpdateResponse>;
  /**
   * Deletes an agent resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageMoverName The name of the Storage Mover resource.
   * @param agentName The name of the agent resource.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    storageMoverName: string,
    agentName: string,
    options?: AgentsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes an agent resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageMoverName The name of the Storage Mover resource.
   * @param agentName The name of the agent resource.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    storageMoverName: string,
    agentName: string,
    options?: AgentsDeleteOptionalParams
  ): Promise<void>;
}
