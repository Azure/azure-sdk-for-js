/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export type EndpointBasePropertiesUnion =
  | EndpointBaseProperties
  | AzureStorageBlobContainerEndpointProperties
  | NfsMountEndpointProperties;

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** List of Storage Movers. */
export interface StorageMoverList {
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly value?: StorageMover[];
  /**
   * Request URL that can be used to query next page of containers. Returned when total number of requested containers exceed maximum page size.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** The Storage Mover resource. */
export interface StorageMoverUpdateParameters {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** A description for the Storage Mover. */
  description?: string;
}

/** List of agents. */
export interface AgentList {
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly value?: Agent[];
  /**
   * Request URL that can be used to query next page of containers. Returned when total number of requested containers exceed maximum page size.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

export interface AgentPropertiesErrorDetails {
  /** Error code reported by Agent */
  code?: string;
  /** Expanded description of reported error code */
  message?: string;
}

/** The agent resource. */
export interface AgentUpdateParameters {
  /** A description for the agent. */
  description?: string;
}

/** List of endpoints. */
export interface EndpointList {
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly value?: Endpoint[];
  /**
   * Request URL that can be used to query next page of containers. Returned when total number of requested containers exceed maximum page size.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** The resource specific properties for the Storage Mover resource. */
export interface EndpointBaseProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  endpointType: "AzureStorageBlobContainer" | "NfsMount";
  /** A description for the endpoint. */
  description?: string;
  /**
   * The provisioning state of this resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** The endpoint resource. */
export interface EndpointBaseUpdateParameters {
  /** The endpoint resource, which contains information about file sources and targets. */
  properties?: EndpointBaseUpdateProperties;
}

/** The endpoint resource, which contains information about file sources and targets. */
export interface EndpointBaseUpdateProperties {
  /** A description for the endpoint. */
  description?: string;
}

/** List of project resources. */
export interface ProjectList {
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly value?: Project[];
  /**
   * Request URL that can be used to query next page of containers. Returned when total number of requested containers exceed maximum page size.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** The project resource. */
export interface ProjectUpdateParameters {
  /** A description for the project. */
  description?: string;
}

/** List of job definitions. */
export interface JobDefinitionList {
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly value?: JobDefinition[];
  /**
   * Request URL that can be used to query next page of containers. Returned when total number of requested containers exceed maximum page size.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** The job definition resource. */
export interface JobDefinitionUpdateParameters {
  /** A description for the job definition. */
  description?: string;
  /** Strategy to use for copy. */
  copyMode?: CopyMode;
  /** Name of the agent to assign for new job runs of this definition. */
  agentName?: string;
}

/** Response that identifies a JobRun. */
export interface JobRunResourceId {
  /**
   * Fully qualified resource id of the JobRun.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly jobRunResourceId?: string;
}

/** List of job runs. */
export interface JobRunList {
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly value?: JobRun[];
  /**
   * Request URL that can be used to query next page of containers. Returned when total number of requested containers exceed maximum page size.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Error type */
export interface JobRunError {
  /** Error code of the given entry. */
  code?: string;
  /** Error message of the given entry. */
  message?: string;
  /** Target of the given error entry. */
  target?: string;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export type TrackedResource = Resource & {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
};

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export type ProxyResource = Resource & {};

export type AzureStorageBlobContainerEndpointProperties = EndpointBaseProperties & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  endpointType: "AzureStorageBlobContainer";
  /** The Azure Resource ID of the storage account that is the target destination. */
  storageAccountResourceId: string;
  /** The name of the Storage blob container that is the target destination. */
  blobContainerName: string;
};

export type NfsMountEndpointProperties = EndpointBaseProperties & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  endpointType: "NfsMount";
  /** The host name or IP address of the server exporting the file system. */
  host: string;
  /** The NFS protocol version. */
  nfsVersion?: NfsVersion;
  /** The directory being exported from the server. */
  remoteExport: string;
};

export type AzureStorageBlobContainerEndpointUpdateProperties = EndpointBaseUpdateProperties & {};

export type NfsMountEndpointUpdateProperties = EndpointBaseUpdateProperties & {};

/** The Storage Mover resource, which is a container for a group of Storage Mover agents and projects. */
export type StorageMover = TrackedResource & {
  /**
   * Resource system metadata.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** A description for the Storage Mover. */
  description?: string;
  /**
   * The provisioning state of this resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
};

/** The agent resource. */
export type Agent = ProxyResource & {
  /**
   * Resource system metadata.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** A description for the agent. */
  description?: string;
  /**
   * The agent version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly agentVersion?: string;
  /** The fully qualified resource ID of the hybrid compute resource for the agent. */
  arcResourceId?: string;
  /** A GUID for this agent. */
  arcVmUuid?: string;
  /**
   * The agent status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly agentStatus?: AgentStatus;
  /**
   * The last updated time of the agent status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastStatusUpdate?: Date;
  /**
   * Local IP address reported by the agent.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly localIPAddress?: string;
  /**
   * Available memory reported by the agent, in MB.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly memoryInMB?: number;
  /**
   * Available compute cores reported by the agent.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly numberOfCores?: number;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly errorDetails?: AgentPropertiesErrorDetails;
  /**
   * The provisioning state of this resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
};

/** The endpoint resource, which contains information about file sources and targets. */
export type Endpoint = ProxyResource & {
  /** The resource specific properties for the Storage Mover resource. */
  properties?: EndpointBasePropertiesUnion;
  /**
   * Resource system metadata.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
};

/** The project resource. */
export type Project = ProxyResource & {
  /**
   * Resource system metadata.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** A description for the project. */
  description?: string;
  /**
   * The provisioning state of this resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
};

/** The job definition resource. */
export type JobDefinition = ProxyResource & {
  /**
   * Resource system metadata.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** A description for the job definition. */
  description?: string;
  /** Strategy to use for copy. */
  copyMode?: CopyMode;
  /** The name of the source endpoint. */
  sourceName?: string;
  /**
   * Fully qualified resource ID of the source endpoint.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceResourceId?: string;
  /** The subpath to use when reading from the source Endpoint. */
  sourceSubpath?: string;
  /** The name of the target endpoint. */
  targetName?: string;
  /**
   * Fully qualified resource ID of the target endpoint.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetResourceId?: string;
  /** The subpath to use when writing to the target Endpoint. */
  targetSubpath?: string;
  /**
   * The name of the job run in a non-terminal state, if exists.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly latestJobRunName?: string;
  /**
   * The fully qualified resource ID of the job run in a non-terminal state, if exists.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly latestJobRunResourceId?: string;
  /**
   * The current status of the job run in a non-terminal state, if exists.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly latestJobRunStatus?: JobRunStatus;
  /** Name of the agent to assign for new job runs of this definition. */
  agentName?: string;
  /**
   * Fully qualified resource id of the agent to assign for new job runs of this definition.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly agentResourceId?: string;
  /**
   * The provisioning state of this resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
};

/** The job run resource. */
export type JobRun = ProxyResource & {
  /**
   * Resource system metadata.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /**
   * The state of the job execution.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: JobRunStatus;
  /**
   * The status of agent's scanning of source.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly scanStatus?: JobRunScanStatus;
  /**
   * Name of the agent assigned to this run.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly agentName?: string;
  /**
   * Fully qualified resource id of the agent assigned to this run.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly agentResourceId?: string;
  /**
   * Start time of the run. Null if no agent reported that the job has started.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly executionStartTime?: Date;
  /**
   * End time of the run. Null if agent has not reported that the job has ended.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly executionEndTime?: Date;
  /**
   * Last update time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastUpdatedTime?: Date;
  /**
   * Number of items scanned so far in source.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly itemsScanned?: number;
  /**
   * Number of items that will not be transferred, as they are excluded by user configuration.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly itemsExcluded?: number;
  /**
   * Number of items that will not be transferred, as they are unsupported on target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly itemsUnsupported?: number;
  /**
   * Number of items that will not be transferred, as they are already found on target (e.g. mirror mode).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly itemsNoTransferNeeded?: number;
  /**
   * Number of items identified for transferring so far in scan.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly itemsDesignatedForTransfer?: number;
  /**
   * Number of items that were attempted to transfer and failed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly itemsFailed?: number;
  /**
   * Number of items successfully transferred to target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly itemsTransferred?: number;
  /**
   * Bytes of data scanned so far in source.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly bytesScanned?: number;
  /**
   * Bytes of data that will not be transferred, as they are excluded by user configuration.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly bytesExcluded?: number;
  /**
   * Bytes of data that will not be transferred, as they are unsupported on target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly bytesUnsupported?: number;
  /**
   * Bytes of data that will not be transferred, as they are already found on target (e.g. mirror mode).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly bytesNoTransferNeeded?: number;
  /**
   * Bytes of data identified for transferring so far in scan.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly bytesDesignatedForTransfer?: number;
  /**
   * Bytes of data that were attempted to transfer and failed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly bytesFailed?: number;
  /**
   * Bytes of data successfully transferred to target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly bytesTransferred?: number;
  /**
   * Name of source Endpoint resource. This resource may no longer exist.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceName?: string;
  /**
   * Fully qualified resource id of source Endpoint. This id may no longer exist.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceResourceId?: string;
  /**
   * Copy of source Endpoint resource's properties at time of Job Run creation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceProperties?: Record<string, unknown>;
  /**
   * Name of target Endpoint resource. This resource may no longer exist.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetName?: string;
  /**
   * Fully qualified resource id of of Endpoint. This id may no longer exist.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetResourceId?: string;
  /**
   * Copy of Endpoint resource's properties at time of Job Run creation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetProperties?: Record<string, unknown>;
  /**
   * Copy of parent Job Definition's properties at time of Job Run creation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly jobDefinitionProperties?: Record<string, unknown>;
  /**
   * Error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly error?: JobRunError;
  /**
   * The provisioning state of this resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
};

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  User = "user",
  System = "system",
  UserSystem = "user,system"
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  Internal = "Internal"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  Succeeded = "Succeeded"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**
 */
export type ProvisioningState = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  User = "User",
  Application = "Application",
  ManagedIdentity = "ManagedIdentity",
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link AgentStatus} that the service accepts. */
export enum KnownAgentStatus {
  Provisioning = "Provisioning",
  Offline = "Offline",
  Online = "Online",
  Executing = "Executing",
  RequiresAttention = "RequiresAttention",
  Deprovisioning = "Deprovisioning"
}

/**
 * Defines values for AgentStatus. \
 * {@link KnownAgentStatus} can be used interchangeably with AgentStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Provisioning** \
 * **Offline** \
 * **Online** \
 * **Executing** \
 * **RequiresAttention** \
 * **Deprovisioning**
 */
export type AgentStatus = string;

/** Known values of {@link EndpointType} that the service accepts. */
export enum KnownEndpointType {
  AzureStorageBlobContainer = "AzureStorageBlobContainer",
  NfsMount = "NfsMount"
}

/**
 * Defines values for EndpointType. \
 * {@link KnownEndpointType} can be used interchangeably with EndpointType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AzureStorageBlobContainer** \
 * **NfsMount**
 */
export type EndpointType = string;

/** Known values of {@link CopyMode} that the service accepts. */
export enum KnownCopyMode {
  Additive = "Additive",
  Mirror = "Mirror"
}

/**
 * Defines values for CopyMode. \
 * {@link KnownCopyMode} can be used interchangeably with CopyMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Additive** \
 * **Mirror**
 */
export type CopyMode = string;

/** Known values of {@link JobRunStatus} that the service accepts. */
export enum KnownJobRunStatus {
  Queued = "Queued",
  Started = "Started",
  Running = "Running",
  CancelRequested = "CancelRequested",
  Canceling = "Canceling",
  Canceled = "Canceled",
  Failed = "Failed",
  Succeeded = "Succeeded"
}

/**
 * Defines values for JobRunStatus. \
 * {@link KnownJobRunStatus} can be used interchangeably with JobRunStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Queued** \
 * **Started** \
 * **Running** \
 * **CancelRequested** \
 * **Canceling** \
 * **Canceled** \
 * **Failed** \
 * **Succeeded**
 */
export type JobRunStatus = string;

/** Known values of {@link JobRunScanStatus} that the service accepts. */
export enum KnownJobRunScanStatus {
  NotStarted = "NotStarted",
  Scanning = "Scanning",
  Completed = "Completed"
}

/**
 * Defines values for JobRunScanStatus. \
 * {@link KnownJobRunScanStatus} can be used interchangeably with JobRunScanStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotStarted** \
 * **Scanning** \
 * **Completed**
 */
export type JobRunScanStatus = string;

/** Known values of {@link NfsVersion} that the service accepts. */
export enum KnownNfsVersion {
  NFSauto = "NFSauto",
  NFSv3 = "NFSv3",
  NFSv4 = "NFSv4"
}

/**
 * Defines values for NfsVersion. \
 * {@link KnownNfsVersion} can be used interchangeably with NfsVersion,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NFSauto** \
 * **NFSv3** \
 * **NFSv4**
 */
export type NfsVersion = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface StorageMoversListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type StorageMoversListBySubscriptionResponse = StorageMoverList;

/** Optional parameters. */
export interface StorageMoversListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type StorageMoversListResponse = StorageMoverList;

/** Optional parameters. */
export interface StorageMoversGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type StorageMoversGetResponse = StorageMover;

/** Optional parameters. */
export interface StorageMoversCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type StorageMoversCreateOrUpdateResponse = StorageMover;

/** Optional parameters. */
export interface StorageMoversUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type StorageMoversUpdateResponse = StorageMover;

/** Optional parameters. */
export interface StorageMoversDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface StorageMoversListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type StorageMoversListBySubscriptionNextResponse = StorageMoverList;

/** Optional parameters. */
export interface StorageMoversListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type StorageMoversListNextResponse = StorageMoverList;

/** Optional parameters. */
export interface AgentsListOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type AgentsListResponse = AgentList;

/** Optional parameters. */
export interface AgentsGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AgentsGetResponse = Agent;

/** Optional parameters. */
export interface AgentsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type AgentsCreateOrUpdateResponse = Agent;

/** Optional parameters. */
export interface AgentsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type AgentsUpdateResponse = Agent;

/** Optional parameters. */
export interface AgentsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface AgentsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type AgentsListNextResponse = AgentList;

/** Optional parameters. */
export interface EndpointsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type EndpointsListResponse = EndpointList;

/** Optional parameters. */
export interface EndpointsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type EndpointsGetResponse = Endpoint;

/** Optional parameters. */
export interface EndpointsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type EndpointsCreateOrUpdateResponse = Endpoint;

/** Optional parameters. */
export interface EndpointsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type EndpointsUpdateResponse = Endpoint;

/** Optional parameters. */
export interface EndpointsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface EndpointsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type EndpointsListNextResponse = EndpointList;

/** Optional parameters. */
export interface ProjectsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ProjectsListResponse = ProjectList;

/** Optional parameters. */
export interface ProjectsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ProjectsGetResponse = Project;

/** Optional parameters. */
export interface ProjectsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type ProjectsCreateOrUpdateResponse = Project;

/** Optional parameters. */
export interface ProjectsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type ProjectsUpdateResponse = Project;

/** Optional parameters. */
export interface ProjectsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ProjectsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ProjectsListNextResponse = ProjectList;

/** Optional parameters. */
export interface JobDefinitionsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type JobDefinitionsListResponse = JobDefinitionList;

/** Optional parameters. */
export interface JobDefinitionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type JobDefinitionsGetResponse = JobDefinition;

/** Optional parameters. */
export interface JobDefinitionsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type JobDefinitionsCreateOrUpdateResponse = JobDefinition;

/** Optional parameters. */
export interface JobDefinitionsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type JobDefinitionsUpdateResponse = JobDefinition;

/** Optional parameters. */
export interface JobDefinitionsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface JobDefinitionsStartJobOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the startJob operation. */
export type JobDefinitionsStartJobResponse = JobRunResourceId;

/** Optional parameters. */
export interface JobDefinitionsStopJobOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the stopJob operation. */
export type JobDefinitionsStopJobResponse = JobRunResourceId;

/** Optional parameters. */
export interface JobDefinitionsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type JobDefinitionsListNextResponse = JobDefinitionList;

/** Optional parameters. */
export interface JobRunsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type JobRunsListResponse = JobRunList;

/** Optional parameters. */
export interface JobRunsGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type JobRunsGetResponse = JobRun;

/** Optional parameters. */
export interface JobRunsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type JobRunsListNextResponse = JobRunList;

/** Optional parameters. */
export interface StorageMoverClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
