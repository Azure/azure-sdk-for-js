/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export type OrchestratorSpecificConnectionDetailsUnion =
  | OrchestratorSpecificConnectionDetails
  | KubernetesConnectionDetails;

/** Container host mapping object specifying the Container host resource ID and its associated Controller resource. */
export interface ContainerHostMapping {
  /** ARM ID of the Container Host resource */
  containerHostResourceId?: string;
  /**
   * ARM ID of the mapped Controller resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly mappedControllerResourceId?: string;
}

/** Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message. */
export interface DevSpacesErrorResponse {
  /** The details of the error. */
  error?: ErrorDetails;
}

export interface ErrorDetails {
  /**
   * Status code for the error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * Error message describing the error in detail.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The target of the particular error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
}

export interface ResourceProviderOperationList {
  /** Resource provider operations list. */
  value?: ResourceProviderOperationDefinition[];
  /**
   * The URI that can be used to request the next page for list of Azure operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

export interface ResourceProviderOperationDefinition {
  /** Resource provider operation name. */
  name?: string;
  display?: ResourceProviderOperationDisplay;
}

export interface ResourceProviderOperationDisplay {
  /** Name of the resource provider. */
  provider?: string;
  /** Name of the resource type. */
  resource?: string;
  /** Name of the resource provider operation. */
  operation?: string;
  /** Description of the resource provider operation. */
  description?: string;
}

/** Model representing SKU for Azure Dev Spaces Controller. */
export interface Sku {
  /** The name of the SKU for Azure Dev Spaces Controller. */
  name: SkuName;
  /** The tier of the SKU for Azure Dev Spaces Controller. */
  tier?: SkuTier;
}

/** An Azure resource. */
export interface Resource {
  /**
   * Fully qualified resource Id for the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** Parameters for updating an Azure Dev Spaces Controller. */
export interface ControllerUpdateParameters {
  /** Tags for the Azure Dev Spaces Controller. */
  tags?: { [propertyName: string]: string };
  /** Credentials of the target container host (base64). */
  targetContainerHostCredentialsBase64?: string;
}

export interface ControllerList {
  /** List of Azure Dev Spaces Controllers. */
  value?: Controller[];
  /**
   * The URI that can be used to request the next page for list of Azure Dev Spaces Controllers.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Parameters for listing connection details of an Azure Dev Spaces Controller. */
export interface ListConnectionDetailsParameters {
  /** Resource ID of the target container host mapped to the Azure Dev Spaces Controller. */
  targetContainerHostResourceId: string;
}

export interface ControllerConnectionDetailsList {
  /** List of Azure Dev Spaces Controller connection details. */
  connectionDetailsList?: ControllerConnectionDetails[];
}

export interface ControllerConnectionDetails {
  /** Base class for types that supply values used to connect to container orchestrators */
  orchestratorSpecificConnectionDetails?: OrchestratorSpecificConnectionDetailsUnion;
}

/** Base class for types that supply values used to connect to container orchestrators */
export interface OrchestratorSpecificConnectionDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "Kubernetes";
}

/** The resource model definition for a ARM tracked top level resource. */
export type TrackedResource = Resource & {
  /** Tags for the Azure resource. */
  tags?: { [propertyName: string]: string };
  /** Region where the Azure resource is located. */
  location?: string;
};

/** Contains information used to connect to a Kubernetes cluster */
export type KubernetesConnectionDetails = OrchestratorSpecificConnectionDetails & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "Kubernetes";
  /** Gets the kubeconfig for the cluster. */
  kubeConfig?: string;
};

export type Controller = TrackedResource & {
  /** Model representing SKU for Azure Dev Spaces Controller. */
  sku: Sku;
  /**
   * Provisioning state of the Azure Dev Spaces Controller.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * DNS suffix for public endpoints running in the Azure Dev Spaces Controller.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostSuffix?: string;
  /**
   * DNS name for accessing DataPlane services
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dataPlaneFqdn?: string;
  /**
   * DNS of the target container host's API server
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetContainerHostApiServerFqdn?: string;
  /** Resource ID of the target container host */
  targetContainerHostResourceId: string;
  /** Credentials of the target container host (base64). */
  targetContainerHostCredentialsBase64: string;
};

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  Succeeded = "Succeeded",
  Failed = "Failed",
  Canceled = "Canceled",
  Updating = "Updating",
  Creating = "Creating",
  Deleting = "Deleting",
  Deleted = "Deleted"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Updating** \
 * **Creating** \
 * **Deleting** \
 * **Deleted**
 */
export type ProvisioningState = string;

/** Known values of {@link SkuName} that the service accepts. */
export enum KnownSkuName {
  S1 = "S1"
}

/**
 * Defines values for SkuName. \
 * {@link KnownSkuName} can be used interchangeably with SkuName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **S1**
 */
export type SkuName = string;

/** Known values of {@link SkuTier} that the service accepts. */
export enum KnownSkuTier {
  Standard = "Standard"
}

/**
 * Defines values for SkuTier. \
 * {@link KnownSkuTier} can be used interchangeably with SkuTier,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Standard**
 */
export type SkuTier = string;

/** Optional parameters. */
export interface ContainerHostMappingsGetContainerHostMappingOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getContainerHostMapping operation. */
export type ContainerHostMappingsGetContainerHostMappingResponse = ContainerHostMapping;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = ResourceProviderOperationList;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = ResourceProviderOperationList;

/** Optional parameters. */
export interface ControllersGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ControllersGetResponse = Controller;

/** Optional parameters. */
export interface ControllersCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ControllersCreateResponse = Controller;

/** Optional parameters. */
export interface ControllersDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ControllersUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type ControllersUpdateResponse = Controller;

/** Optional parameters. */
export interface ControllersListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type ControllersListByResourceGroupResponse = ControllerList;

/** Optional parameters. */
export interface ControllersListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ControllersListResponse = ControllerList;

/** Optional parameters. */
export interface ControllersListConnectionDetailsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listConnectionDetails operation. */
export type ControllersListConnectionDetailsResponse = ControllerConnectionDetailsList;

/** Optional parameters. */
export interface ControllersListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type ControllersListByResourceGroupNextResponse = ControllerList;

/** Optional parameters. */
export interface ControllersListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ControllersListNextResponse = ControllerList;

/** Optional parameters. */
export interface DevSpacesManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
