/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  PartnerGetOptionalParams,
  PartnerGetResponse,
  PartnerCreateOptionalParams,
  PartnerCreateResponse,
  PartnerUpdateOptionalParams,
  PartnerUpdateResponse,
  PartnerDeleteOptionalParams
} from "../models";

/** Interface representing a Partner. */
export interface Partner {
  /**
   * Get the management partner using the partnerId, objectId and tenantId.
   * @param partnerId Id of the Partner
   * @param options The options parameters.
   */
  get(
    partnerId: string,
    options?: PartnerGetOptionalParams
  ): Promise<PartnerGetResponse>;
  /**
   * Create a management partner for the objectId and tenantId.
   * @param partnerId Id of the Partner
   * @param options The options parameters.
   */
  create(
    partnerId: string,
    options?: PartnerCreateOptionalParams
  ): Promise<PartnerCreateResponse>;
  /**
   * Update the management partner for the objectId and tenantId.
   * @param partnerId Id of the Partner
   * @param options The options parameters.
   */
  update(
    partnerId: string,
    options?: PartnerUpdateOptionalParams
  ): Promise<PartnerUpdateResponse>;
  /**
   * Delete the management partner for the objectId and tenantId.
   * @param partnerId Id of the Partner
   * @param options The options parameters.
   */
  delete(
    partnerId: string,
    options?: PartnerDeleteOptionalParams
  ): Promise<void>;
}
