/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { Partners } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { ACEProvisioningManagementPartnerAPI } from "../aCEProvisioningManagementPartnerAPI";
import { PartnersGetOptionalParams, PartnersGetResponse } from "../models";

/** Class containing Partners operations. */
export class PartnersImpl implements Partners {
  private readonly client: ACEProvisioningManagementPartnerAPI;

  /**
   * Initialize a new instance of the class Partners class.
   * @param client Reference to the service client
   */
  constructor(client: ACEProvisioningManagementPartnerAPI) {
    this.client = client;
  }

  /**
   * Get the management partner using the objectId and tenantId.
   * @param options The options parameters.
   */
  get(options?: PartnersGetOptionalParams): Promise<PartnersGetResponse> {
    return this.client.sendOperationRequest({ options }, getOperationSpec);
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getOperationSpec: coreClient.OperationSpec = {
  path: "/providers/Microsoft.ManagementPartner/partners",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.PartnerResponse
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.$host],
  headerParameters: [Parameters.accept],
  serializer
};
