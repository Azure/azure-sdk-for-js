/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import {
  CheckTrafficManagerRelativeDnsNameAvailabilityParameters,
  TrafficManagerManagementClient
} from "@azure/arm-trafficmanager";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";

dotenv.config();

/**
 * This sample demonstrates how to Checks the availability of a Traffic Manager Relative DNS name.
 *
 * @summary Checks the availability of a Traffic Manager Relative DNS name.
 * x-ms-original-file: specification/trafficmanager/resource-manager/Microsoft.Network/stable/2022-04-01/examples/NameAvailabilityV2Test_NameAvailable-POST-example-21.json
 */
async function nameAvailabilityV2TestNameAvailablePost21() {
  const subscriptionId =
    process.env["TRAFFICMANAGER_SUBSCRIPTION_ID"] || "{subscription-id}";
  const parameters: CheckTrafficManagerRelativeDnsNameAvailabilityParameters = {
    name: "azsmnet5403",
    type: "microsoft.network/trafficmanagerprofiles"
  };
  const credential = new DefaultAzureCredential();
  const client = new TrafficManagerManagementClient(credential, subscriptionId);
  const result = await client.profiles.checkTrafficManagerNameAvailabilityV2(
    parameters
  );
  console.log(result);
}

/**
 * This sample demonstrates how to Checks the availability of a Traffic Manager Relative DNS name.
 *
 * @summary Checks the availability of a Traffic Manager Relative DNS name.
 * x-ms-original-file: specification/trafficmanager/resource-manager/Microsoft.Network/stable/2022-04-01/examples/NameAvailabilityV2Test_NameNotAvailable-POST-example-23.json
 */
async function nameAvailabilityV2TestNameNotAvailablePost23() {
  const subscriptionId =
    process.env["TRAFFICMANAGER_SUBSCRIPTION_ID"] || "{subscription-id}";
  const parameters: CheckTrafficManagerRelativeDnsNameAvailabilityParameters = {
    name: "azsmnet4696",
    type: "microsoft.network/trafficmanagerprofiles"
  };
  const credential = new DefaultAzureCredential();
  const client = new TrafficManagerManagementClient(credential, subscriptionId);
  const result = await client.profiles.checkTrafficManagerNameAvailabilityV2(
    parameters
  );
  console.log(result);
}

async function main() {
  nameAvailabilityV2TestNameAvailablePost21();
  nameAvailabilityV2TestNameNotAvailablePost23();
}

main().catch(console.error);
