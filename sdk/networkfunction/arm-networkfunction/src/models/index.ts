/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** Result of the request to list Azure Traffic Collector operations. It contains a list of operations and a URL link to get the next set of results. */
export interface OperationListResult {
  /** List of operations supported by the Azure Traffic Collector resource provider. */
  value?: Operation[];
  /** URL to get the next set of operation list results if there are any. */
  nextLink?: string;
}

/** Azure Traffic Collector REST API operation definition. */
export interface Operation {
  /** Operation name: {provider}/{resource}/{operation} */
  name?: string;
  /** Indicates whether the operation is a data action */
  isDataAction?: boolean;
  /** Display metadata associated with the operation. */
  display?: OperationDisplay;
  /** Origin of the operation */
  origin?: string;
}

/** Display metadata associated with the operation. */
export interface OperationDisplay {
  /** Service provider: Microsoft NetworkFunction. */
  provider?: string;
  /** Resource on which the operation is performed etc. */
  resource?: string;
  /** Type of operation: get, read, delete, etc. */
  operation?: string;
  /** Description of the operation. */
  description?: string;
}

/** An error response from the service. */
export interface CloudError {
  /** An error response from the service. */
  error?: CloudErrorBody;
}

/** An error response from the service. */
export interface CloudErrorBody {
  /** An identifier for the error. Codes are invariant and are intended to be consumed programmatically. */
  code?: string;
  /** A message describing the error, intended to be suitable for display in a user interface. */
  message?: string;
  /** The target of the particular error. For example, the name of the property in error. */
  target?: string;
  /** A list of additional details about the error. */
  details?: CloudErrorBody[];
}

/** Response for the ListTrafficCollectors API service call. */
export interface AzureTrafficCollectorListResult {
  /** A list of Traffic Collector resources. */
  value?: AzureTrafficCollector[];
  /**
   * The URL to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Ingestion Policy properties. */
export interface IngestionPolicyPropertiesFormat {
  /** The ingestion type. */
  ingestionType?: IngestionType;
  /** Ingestion Sources. */
  ingestionSources?: IngestionSourcesPropertiesFormat[];
}

/** Ingestion policy properties. */
export interface IngestionSourcesPropertiesFormat {
  /** Ingestion source type. */
  sourceType?: SourceType;
  /** Resource ID. */
  resourceId?: string;
}

/** Emission policy properties. */
export interface EmissionPoliciesPropertiesFormat {
  /** Emission format type. */
  emissionType?: EmissionType;
  /** Emission policy destinations. */
  emissionDestinations?: EmissionPolicyDestination[];
}

/** Emission policy destination properties. */
export interface EmissionPolicyDestination {
  /** Emission destination type. */
  destinationType?: DestinationType;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
}

/** An azure resource object */
export interface ProxyResource {
  /**
   * Azure resource Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Azure resource type
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure resource name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
}

/** Resource reference properties. */
export interface ResourceReference {
  /**
   * Resource ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
}

/** Common resource representation. */
export interface TrackedResource {
  /**
   * Resource ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Resource name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Resource type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** Resource location. */
  location?: string;
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: TrackedResourceSystemData;
}

/** Tags object for patch operations. */
export interface TagsObject {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** Response for the ListCollectorPolicies API service call. */
export interface CollectorPolicyListResult {
  /** A list of collection policies. */
  value?: CollectorPolicy[];
  /**
   * The URL to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface CollectorPolicySystemData extends SystemData {}

/** Metadata pertaining to creation and last modification of the resource. */
export interface TrackedResourceSystemData extends SystemData {}

/** Collector policy resource. */
export interface CollectorPolicy extends ProxyResource {
  /**
   * A unique read-only string that changes whenever the resource is updated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly etag?: string;
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: CollectorPolicySystemData;
  /** Ingestion policies. */
  ingestionPolicy?: IngestionPolicyPropertiesFormat;
  /** Emission policies. */
  emissionPolicies?: EmissionPoliciesPropertiesFormat[];
  /**
   * The provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** Azure Traffic Collector resource. */
export interface AzureTrafficCollector extends TrackedResource {
  /**
   * A unique read-only string that changes whenever the resource is updated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly etag?: string;
  /** Collector Policies for Azure Traffic Collector. */
  collectorPolicies?: CollectorPolicy[];
  /** The virtualHub to which the Azure Traffic Collector belongs. */
  virtualHub?: ResourceReference;
  /**
   * The provisioning state of the application rule collection resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** Known values of {@link IngestionType} that the service accepts. */
export enum KnownIngestionType {
  /** Ipfix */
  Ipfix = "IPFIX"
}

/**
 * Defines values for IngestionType. \
 * {@link KnownIngestionType} can be used interchangeably with IngestionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **IPFIX**
 */
export type IngestionType = string;

/** Known values of {@link SourceType} that the service accepts. */
export enum KnownSourceType {
  /** Resource */
  Resource = "Resource"
}

/**
 * Defines values for SourceType. \
 * {@link KnownSourceType} can be used interchangeably with SourceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Resource**
 */
export type SourceType = string;

/** Known values of {@link EmissionType} that the service accepts. */
export enum KnownEmissionType {
  /** Ipfix */
  Ipfix = "IPFIX"
}

/**
 * Defines values for EmissionType. \
 * {@link KnownEmissionType} can be used interchangeably with EmissionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **IPFIX**
 */
export type EmissionType = string;

/** Known values of {@link DestinationType} that the service accepts. */
export enum KnownDestinationType {
  /** AzureMonitor */
  AzureMonitor = "AzureMonitor"
}

/**
 * Defines values for DestinationType. \
 * {@link KnownDestinationType} can be used interchangeably with DestinationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AzureMonitor**
 */
export type DestinationType = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Updating */
  Updating = "Updating",
  /** Deleting */
  Deleting = "Deleting",
  /** Failed */
  Failed = "Failed"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Updating** \
 * **Deleting** \
 * **Failed**
 */
export type ProvisioningState = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Optional parameters. */
export interface NetworkFunctionListOperationsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listOperations operation. */
export type NetworkFunctionListOperationsResponse = OperationListResult;

/** Optional parameters. */
export interface AzureTrafficCollectorsBySubscriptionListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type AzureTrafficCollectorsBySubscriptionListResponse = AzureTrafficCollectorListResult;

/** Optional parameters. */
export interface AzureTrafficCollectorsBySubscriptionListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type AzureTrafficCollectorsBySubscriptionListNextResponse = AzureTrafficCollectorListResult;

/** Optional parameters. */
export interface AzureTrafficCollectorsByResourceGroupListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type AzureTrafficCollectorsByResourceGroupListResponse = AzureTrafficCollectorListResult;

/** Optional parameters. */
export interface AzureTrafficCollectorsByResourceGroupListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type AzureTrafficCollectorsByResourceGroupListNextResponse = AzureTrafficCollectorListResult;

/** Optional parameters. */
export interface AzureTrafficCollectorsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AzureTrafficCollectorsGetResponse = AzureTrafficCollector;

/** Optional parameters. */
export interface AzureTrafficCollectorsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Resource location. */
  location?: string;
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** Collector Policies for Azure Traffic Collector. */
  collectorPolicies?: CollectorPolicy[];
  /** The virtualHub to which the Azure Traffic Collector belongs. */
  virtualHub?: ResourceReference;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type AzureTrafficCollectorsCreateOrUpdateResponse = AzureTrafficCollector;

/** Optional parameters. */
export interface AzureTrafficCollectorsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface AzureTrafficCollectorsUpdateTagsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the updateTags operation. */
export type AzureTrafficCollectorsUpdateTagsResponse = AzureTrafficCollector;

/** Optional parameters. */
export interface CollectorPoliciesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type CollectorPoliciesListResponse = CollectorPolicyListResult;

/** Optional parameters. */
export interface CollectorPoliciesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type CollectorPoliciesGetResponse = CollectorPolicy;

/** Optional parameters. */
export interface CollectorPoliciesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Ingestion policies. */
  ingestionPolicy?: IngestionPolicyPropertiesFormat;
  /** Emission policies. */
  emissionPolicies?: EmissionPoliciesPropertiesFormat[];
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type CollectorPoliciesCreateOrUpdateResponse = CollectorPolicy;

/** Optional parameters. */
export interface CollectorPoliciesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface CollectorPoliciesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type CollectorPoliciesListNextResponse = CollectorPolicyListResult;

/** Optional parameters. */
export interface AzureTrafficCollectorClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
