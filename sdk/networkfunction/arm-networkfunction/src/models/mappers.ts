/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      isDataAction: {
        defaultValue: false,
        serializedName: "isDataAction",
        type: {
          name: "Boolean"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CloudError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudError",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "CloudErrorBody"
        }
      }
    }
  }
};

export const CloudErrorBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudErrorBody",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CloudErrorBody"
            }
          }
        }
      }
    }
  }
};

export const AzureTrafficCollectorListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureTrafficCollectorListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureTrafficCollector"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IngestionPolicyPropertiesFormat: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IngestionPolicyPropertiesFormat",
    modelProperties: {
      ingestionType: {
        serializedName: "ingestionType",
        type: {
          name: "String"
        }
      },
      ingestionSources: {
        serializedName: "ingestionSources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IngestionSourcesPropertiesFormat"
            }
          }
        }
      }
    }
  }
};

export const IngestionSourcesPropertiesFormat: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IngestionSourcesPropertiesFormat",
    modelProperties: {
      sourceType: {
        serializedName: "sourceType",
        type: {
          name: "String"
        }
      },
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EmissionPoliciesPropertiesFormat: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EmissionPoliciesPropertiesFormat",
    modelProperties: {
      emissionType: {
        serializedName: "emissionType",
        type: {
          name: "String"
        }
      },
      emissionDestinations: {
        serializedName: "emissionDestinations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EmissionPolicyDestination"
            }
          }
        }
      }
    }
  }
};

export const EmissionPolicyDestination: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EmissionPolicyDestination",
    modelProperties: {
      destinationType: {
        serializedName: "destinationType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceReference: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceReference",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "TrackedResourceSystemData"
        }
      }
    }
  }
};

export const TagsObject: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TagsObject",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const CollectorPolicyListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CollectorPolicyListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CollectorPolicy"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CollectorPolicySystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CollectorPolicySystemData",
    modelProperties: {
      ...SystemData.type.modelProperties
    }
  }
};

export const TrackedResourceSystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResourceSystemData",
    modelProperties: {
      ...SystemData.type.modelProperties
    }
  }
};

export const CollectorPolicy: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CollectorPolicy",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      etag: {
        serializedName: "etag",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "CollectorPolicySystemData"
        }
      },
      ingestionPolicy: {
        serializedName: "properties.ingestionPolicy",
        type: {
          name: "Composite",
          className: "IngestionPolicyPropertiesFormat"
        }
      },
      emissionPolicies: {
        serializedName: "properties.emissionPolicies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EmissionPoliciesPropertiesFormat"
            }
          }
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureTrafficCollector: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureTrafficCollector",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      etag: {
        serializedName: "etag",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      collectorPolicies: {
        serializedName: "properties.collectorPolicies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CollectorPolicy"
            }
          }
        }
      },
      virtualHub: {
        serializedName: "properties.virtualHub",
        type: {
          name: "Composite",
          className: "ResourceReference"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};
