{"version":3,"file":"noOpCredential.js","sourceRoot":"","sources":["../../src/noOpCredential.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAIlC;;;;;;GAMG;AACH,MAAM,OAAO,cAAc;IACzB,QAAQ;QACN,OAAO,OAAO,CAAC,OAAO,CAAC;YACrB,KAAK,EAAE,mBAAmB;YAC1B,kBAAkB,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI;SAC9C,CAAC,CAAC;IACL,CAAC;CACF","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { AccessToken, TokenCredential } from \"@azure/core-auth\";\n\n/**\n * `TokenCredential` implementation for playback.\n * If your regular AAD credentials don't take the recorder httpClient option, the AAD traffic won't be recorded.\n * In this case, you'll need to bypass the AAD requests with no-op.\n *\n * Using this NoOpCredential as your credential in playback mode would help you bypass the AAD traffic.\n */\nexport class NoOpCredential implements TokenCredential {\n  getToken(): Promise<AccessToken> {\n    return Promise.resolve({\n      token: \"SecretPlaceholder\",\n      expiresOnTimestamp: Date.now() + 86400 * 1000,\n    });\n  }\n}\n"]}