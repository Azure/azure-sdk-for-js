{"version":3,"file":"relativePathCalculator.js","sourceRoot":"","sources":["../../../src/utils/relativePathCalculator.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,IAAI,MAAM,WAAW,CAAC;AAC7B,OAAO,EAAE,MAAM,SAAS,CAAC;AACzB,OAAO,EAAE,aAAa,EAAE,MAAM,YAAY,CAAC;AAE3C;;;;;GAKG;AACH,SAAS,UAAU,CAAC,QAAgB;IAClC,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACvD,CAAC;AAED;;GAEG;AACH,SAAS,mBAAmB;IAC1B,MAAM,WAAW,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,sCAAsC;IAEzE,IAAI,QAAQ,GAAG,SAAS,CAAC;IACzB,IAAI,mBAAmB,GAAG,SAAS,CAAC;IAEpC,IAAI,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC,EAAE,CAAC;QAC1D,0CAA0C;QAC1C,IAAI,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC,EAAE,CAAC;YAC1D,mBAAmB,GAAG,WAAW,CAAC,CAAC,8BAA8B;YACjE,MAAM,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,UAAU;YAC7E,IACE,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC,IAAI,aAAa;gBACnE,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC,CAAC,mBAAmB;cAC3E,CAAC;gBACD,oBAAoB;gBACpB,QAAQ,GAAG,gBAAgB,CAAC;YAC9B,CAAC;QACH,CAAC;IACH,CAAC;SAAM,CAAC;QACN,MAAM,IAAI,aAAa,CAAC,kCAAkC,WAAW,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,IAAI,CAAC,CAAC,QAAQ,KAAK,SAAS,IAAI,mBAAmB,KAAK,SAAS,CAAC,EAAE,CAAC;QACnE,UAAU;QACV,8BAA8B;QAC9B,yBAAyB;QACzB,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,mBAAmB,CAAC,CAAC;IACtD,CAAC;SAAM,CAAC;QACN,MAAM,IAAI,aAAa,CACrB,qFAAqF,CACtF,CAAC;IACJ,CAAC;AACH,CAAC;AAED;;;;;;;;;;;;;;;;;;;GAmBG;AACH,MAAM,UAAU,sBAAsB;IACpC,OAAO,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE,YAAY,CAAC,CAAC,CAAC;AACpE,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport path from \"node:path\";\nimport fs from \"node:fs\";\nimport { RecorderError } from \"./utils.js\";\n\n/**\n * Replace backslashes in a path with forward slashes so they are not treated as escape characters\n * in the browser tests.\n * @param filePath The path to replace\n * @returns A path without backslashes\n */\nfunction toSafePath(filePath: string): string {\n  return filePath.split(path.sep).join(path.posix.sep);\n}\n\n/**\n * Determines the path of the package being tested relative to the repository root.\n */\nfunction relativePackagePath(): string {\n  const currentPath = process.cwd(); // Gives the current working directory\n\n  let rootPath = undefined;\n  let expectedProjectPath = undefined;\n\n  if (fs.existsSync(path.join(currentPath, \"package.json\"))) {\n    // <root>/sdk/service/project/package.json\n    if (fs.existsSync(path.join(currentPath, \"package.json\"))) {\n      expectedProjectPath = currentPath; // <root>/sdk/service/project/\n      const expectedRootPath = path.join(currentPath, \"..\", \"..\", \"..\"); // <root>/\n      if (\n        fs.existsSync(path.join(expectedRootPath, \"sdk/\")) && // <root>/sdk\n        fs.existsSync(path.join(expectedRootPath, \"rush.json\")) // <root>/rush.json\n      ) {\n        // reached root path\n        rootPath = expectedRootPath;\n      }\n    }\n  } else {\n    throw new RecorderError(`'package.json' is not found at ${currentPath}`);\n  }\n\n  if (!(rootPath === undefined || expectedProjectPath === undefined)) {\n    // <root>/\n    // <root>/sdk/service/project/\n    // => sdk/service/project\n    return path.relative(rootPath, expectedProjectPath);\n  } else {\n    throw new RecorderError(\n      \"rootPath or expectedProjectPath could not be calculated properly from process.cwd()\",\n    );\n  }\n}\n\n/**\n * Returns the potential `recordings` folder(relative path) for the project using `process.cwd()`.\n *\n * Note for browser tests:\n *    1. Supposed to be called from karma.conf.js in the package for which the testing is being done.\n *    2. Set this `RECORDINGS_RELATIVE_PATH` as an env variable\n *      ```js\n *        const { relativeRecordingsPathForBrowser } = require(\"@azure-tools/test-recorder-new\");\n *        process.env.RECORDINGS_RELATIVE_PATH = relativeRecordingsPathForBrowser();\n *      ```\n *    3. Add \"RECORDINGS_RELATIVE_PATH\" in the `envPreprocessor` array to let this be loaded in the browser environment.\n *      ```\n *        envPreprocessor: [\"RECORDINGS_RELATIVE_PATH\"],\n *      ```\n *\n * `RECORDINGS_RELATIVE_PATH` in the browser environment is used in the recorder to tell the proxy-tool about the location to generate the browser recordings at.\n *\n * @export\n * @returns {string} location of the relative `recordings` folder path - `sdk/storage/storage-blob/recordings/` example\n */\nexport function relativeRecordingsPath(): string {\n  return toSafePath(path.join(relativePackagePath(), \"recordings\"));\n}\n"]}