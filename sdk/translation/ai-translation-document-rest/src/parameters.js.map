{"version":3,"file":"parameters.js","sourceRoot":"","sources":["parameters.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { RawHttpHeadersInput } from \"@azure/core-rest-pipeline\";\nimport { RequestParameters } from \"@azure-rest/core-client\";\nimport {\n  DocumentTranslateContent,\n  StartTranslationDetails,\n  FileFormatType,\n} from \"./models.js\";\n\nexport interface DocumentTranslateHeaders {\n  /** An opaque, globally-unique, client-generated string identifier for the request. */\n  \"x-ms-client-request-id\"?: string;\n}\n\nexport interface DocumentTranslateBodyParam {\n  body?: DocumentTranslateContent;\n}\n\nexport interface DocumentTranslateQueryParamProperties {\n  /**\n   * Specifies source language of the input document.\n   * If this parameter isn't specified, automatic language detection is applied to determine the source language.\n   * For example if the source document is written in English, then use sourceLanguage=en\n   */\n  sourceLanguage?: string;\n  /**\n   * Specifies the language of the output document.\n   * The target language must be one of the supported languages included in the translation scope.\n   * For example if you want to translate the document in German language, then use targetLanguage=de\n   */\n  targetLanguage: string;\n  /**\n   * A string specifying the category (domain) of the translation. This parameter is used to get translations\n   * from a customized system built with Custom Translator. Add the Category ID from your Custom Translator\n   * project details to this parameter to use your deployed customized system. Default value is: general.\n   */\n  category?: string;\n  /**\n   * Specifies that the service is allowed to fall back to a general system when a custom system doesn't exist.\n   * Possible values are: true (default) or false.\n   */\n  allowFallback?: boolean;\n}\n\nexport interface DocumentTranslateQueryParam {\n  queryParameters: DocumentTranslateQueryParamProperties;\n}\n\nexport interface DocumentTranslateHeaderParam {\n  headers?: RawHttpHeadersInput & DocumentTranslateHeaders;\n}\n\nexport interface DocumentTranslateMediaTypesParam {\n  /** Content Type as multipart/form-data */\n  contentType: \"multipart/form-data\";\n}\n\nexport type DocumentTranslateParameters = DocumentTranslateQueryParam &\n  DocumentTranslateHeaderParam &\n  DocumentTranslateMediaTypesParam &\n  DocumentTranslateBodyParam &\n  RequestParameters;\n\nexport interface StartTranslationBodyParam {\n  body?: StartTranslationDetails;\n}\n\nexport type StartTranslationParameters = StartTranslationBodyParam &\n  RequestParameters;\n\nexport interface GetTranslationsStatusQueryParamProperties {\n  /**\n   * top indicates the total number of records the user wants to be returned across\n   * all pages.\n   *\n   * Clients MAY use top and skip query parameters to\n   * specify a number of results to return and an offset into the collection.\n   * When\n   * both top and skip are given by a client, the server SHOULD first apply skip\n   * and then top on the collection.\n   *\n   * Note: If the server can't honor\n   * top and/or skip, the server MUST return an error to the client informing\n   * about it instead of just ignoring the query options.\n   */\n  top?: number;\n  /**\n   * skip indicates the number of records to skip from the list of records held by\n   * the server based on the sorting method specified.  By default, we sort by\n   * descending start time.\n   *\n   * Clients MAY use top and skip query\n   * parameters to specify a number of results to return and an offset into the\n   * collection.\n   * When both top and skip are given by a client, the server SHOULD\n   * first apply skip and then top on the collection.\n   *\n   * Note: If the\n   * server can't honor top and/or skip, the server MUST return an error to the\n   * client informing about it instead of just ignoring the query options.\n   */\n  skip?: number;\n  /**\n   * maxpagesize is the maximum items returned in a page.  If more items are\n   * requested via top (or top is not specified and there are more items to be\n   * returned), @nextLink will contain the link to the next page.\n   *\n   *\n   * Clients MAY request server-driven paging with a specific page size by\n   * specifying a maxpagesize preference. The server SHOULD honor this preference\n   * if the specified page size is smaller than the server's default page size.\n   */\n  maxpagesize?: number;\n  /** Ids to use in filtering */\n  ids?: string[];\n  /** Statuses to use in filtering */\n  statuses?: string[];\n  /** the start datetime to get items after */\n  createdDateTimeUtcStart?: Date | string;\n  /** the end datetime to get items before */\n  createdDateTimeUtcEnd?: Date | string;\n  /** the sorting query for the collection (ex: 'CreatedDateTimeUtc asc','CreatedDateTimeUtc desc') */\n  orderby?: string[];\n}\n\nexport interface GetTranslationsStatusQueryParam {\n  queryParameters?: GetTranslationsStatusQueryParamProperties;\n}\n\nexport type GetTranslationsStatusParameters = GetTranslationsStatusQueryParam &\n  RequestParameters;\nexport type GetDocumentStatusParameters = RequestParameters;\nexport type GetTranslationStatusParameters = RequestParameters;\nexport type CancelTranslationParameters = RequestParameters;\n\nexport interface GetDocumentsStatusQueryParamProperties {\n  /**\n   * top indicates the total number of records the user wants to be returned across\n   * all pages.\n   *\n   * Clients MAY use top and skip query parameters to\n   * specify a number of results to return and an offset into the collection.\n   * When\n   * both top and skip are given by a client, the server SHOULD first apply skip\n   * and then top on the collection.\n   *\n   * Note: If the server can't honor\n   * top and/or skip, the server MUST return an error to the client informing\n   * about it instead of just ignoring the query options.\n   */\n  top?: number;\n  /**\n   * skip indicates the number of records to skip from the list of records held by\n   * the server based on the sorting method specified.  By default, we sort by\n   * descending start time.\n   *\n   * Clients MAY use top and skip query\n   * parameters to specify a number of results to return and an offset into the\n   * collection.\n   * When both top and skip are given by a client, the server SHOULD\n   * first apply skip and then top on the collection.\n   *\n   * Note: If the\n   * server can't honor top and/or skip, the server MUST return an error to the\n   * client informing about it instead of just ignoring the query options.\n   */\n  skip?: number;\n  /**\n   * maxpagesize is the maximum items returned in a page.  If more items are\n   * requested via top (or top is not specified and there are more items to be\n   * returned), @nextLink will contain the link to the next page.\n   *\n   *\n   * Clients MAY request server-driven paging with a specific page size by\n   * specifying a maxpagesize preference. The server SHOULD honor this preference\n   * if the specified page size is smaller than the server's default page size.\n   */\n  maxpagesize?: number;\n  /** Ids to use in filtering */\n  ids?: string[];\n  /** Statuses to use in filtering */\n  statuses?: string[];\n  /** the start datetime to get items after */\n  createdDateTimeUtcStart?: Date | string;\n  /** the end datetime to get items before */\n  createdDateTimeUtcEnd?: Date | string;\n  /** the sorting query for the collection (ex: 'CreatedDateTimeUtc asc','CreatedDateTimeUtc desc') */\n  orderby?: string[];\n}\n\nexport interface GetDocumentsStatusQueryParam {\n  queryParameters?: GetDocumentsStatusQueryParamProperties;\n}\n\nexport type GetDocumentsStatusParameters = GetDocumentsStatusQueryParam &\n  RequestParameters;\n\nexport interface GetSupportedFormatsQueryParamProperties {\n  /** the type of format like document or glossary */\n  type?: FileFormatType;\n}\n\nexport interface GetSupportedFormatsQueryParam {\n  queryParameters?: GetSupportedFormatsQueryParamProperties;\n}\n\nexport type GetSupportedFormatsParameters = GetSupportedFormatsQueryParam &\n  RequestParameters;\n"]}