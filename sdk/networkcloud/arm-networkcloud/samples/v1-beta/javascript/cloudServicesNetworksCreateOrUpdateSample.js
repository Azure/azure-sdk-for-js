/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
const { NetworkCloud } = require("@azure/arm-networkcloud");
const { DefaultAzureCredential } = require("@azure/identity");
require("dotenv").config();

/**
 * This sample demonstrates how to Create a new cloud services network or update the properties of the existing cloud services network.
 *
 * @summary Create a new cloud services network or update the properties of the existing cloud services network.
 * x-ms-original-file: specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2022-12-12-preview/examples/CloudServicesNetworks_Create.json
 */
async function createOrUpdateCloudServicesNetwork() {
  const subscriptionId = process.env["NETWORKCLOUD_SUBSCRIPTION_ID"] || "subscriptionId";
  const resourceGroupName = process.env["NETWORKCLOUD_RESOURCE_GROUP"] || "resourceGroupName";
  const cloudServicesNetworkName = "cloudServicesNetworkName";
  const cloudServicesNetworkParameters = {
    additionalEgressEndpoints: [
      {
        category: "azure-resource-management",
        endpoints: [
          {
            domainName: "https://storageaccountex.blob.core.windows.net",
            port: 443,
          },
        ],
      },
    ],
    enableDefaultEgressEndpoints: "False",
    extendedLocation: {
      name: "/subscriptions/subscriptionId/resourceGroups/resourceGroupName/providers/Microsoft.ExtendedLocation/customLocations/clusterExtendedLocationName",
      type: "CustomLocation",
    },
    location: "location",
    tags: { key1: "myvalue1", key2: "myvalue2" },
  };
  const credential = new DefaultAzureCredential();
  const client = new NetworkCloud(credential, subscriptionId);
  const result = await client.cloudServicesNetworks.beginCreateOrUpdateAndWait(
    resourceGroupName,
    cloudServicesNetworkName,
    cloudServicesNetworkParameters
  );
  console.log(result);
}

async function main() {
  createOrUpdateCloudServicesNetwork();
}

main().catch(console.error);
