/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  VirtualMachine,
  VirtualMachinesListBySubscriptionOptionalParams,
  VirtualMachinesListByResourceGroupOptionalParams,
  VirtualMachinesGetOptionalParams,
  VirtualMachinesGetResponse,
  VirtualMachinesCreateOrUpdateOptionalParams,
  VirtualMachinesCreateOrUpdateResponse,
  VirtualMachinesDeleteOptionalParams,
  VirtualMachinesUpdateOptionalParams,
  VirtualMachinesUpdateResponse,
  VirtualMachineVolumeParameters,
  VirtualMachinesAttachVolumeOptionalParams,
  VirtualMachinesAttachVolumeResponse,
  VirtualMachinesDetachVolumeOptionalParams,
  VirtualMachinesDetachVolumeResponse,
  VirtualMachinesPowerOffOptionalParams,
  VirtualMachinesPowerOffResponse,
  VirtualMachinesReimageOptionalParams,
  VirtualMachinesReimageResponse,
  VirtualMachinesRestartOptionalParams,
  VirtualMachinesRestartResponse,
  VirtualMachinesStartOptionalParams,
  VirtualMachinesStartResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a VirtualMachines. */
export interface VirtualMachines {
  /**
   * Get a list of virtual machines in the provided subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: VirtualMachinesListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<VirtualMachine>;
  /**
   * Get a list of virtual machines in the provided resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: VirtualMachinesListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<VirtualMachine>;
  /**
   * Get properties of the provided virtual machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualMachineName The name of the virtual machine.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    virtualMachineName: string,
    options?: VirtualMachinesGetOptionalParams
  ): Promise<VirtualMachinesGetResponse>;
  /**
   * Create a new virtual machine or update the properties of the existing virtual machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualMachineName The name of the virtual machine.
   * @param virtualMachineParameters The request body.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    virtualMachineName: string,
    virtualMachineParameters: VirtualMachine,
    options?: VirtualMachinesCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<VirtualMachinesCreateOrUpdateResponse>,
      VirtualMachinesCreateOrUpdateResponse
    >
  >;
  /**
   * Create a new virtual machine or update the properties of the existing virtual machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualMachineName The name of the virtual machine.
   * @param virtualMachineParameters The request body.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    virtualMachineName: string,
    virtualMachineParameters: VirtualMachine,
    options?: VirtualMachinesCreateOrUpdateOptionalParams
  ): Promise<VirtualMachinesCreateOrUpdateResponse>;
  /**
   * Delete the provided virtual machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualMachineName The name of the virtual machine.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    virtualMachineName: string,
    options?: VirtualMachinesDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete the provided virtual machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualMachineName The name of the virtual machine.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    virtualMachineName: string,
    options?: VirtualMachinesDeleteOptionalParams
  ): Promise<void>;
  /**
   * Patch the properties of the provided virtual machine, or update the tags associated with the virtual
   * machine. Properties and tag updates can be done independently.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualMachineName The name of the virtual machine.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    virtualMachineName: string,
    options?: VirtualMachinesUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<VirtualMachinesUpdateResponse>,
      VirtualMachinesUpdateResponse
    >
  >;
  /**
   * Patch the properties of the provided virtual machine, or update the tags associated with the virtual
   * machine. Properties and tag updates can be done independently.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualMachineName The name of the virtual machine.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    virtualMachineName: string,
    options?: VirtualMachinesUpdateOptionalParams
  ): Promise<VirtualMachinesUpdateResponse>;
  /**
   * Attach volume to the provided virtual machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualMachineName The name of the virtual machine.
   * @param virtualMachineAttachVolumeParameters The request body.
   * @param options The options parameters.
   */
  beginAttachVolume(
    resourceGroupName: string,
    virtualMachineName: string,
    virtualMachineAttachVolumeParameters: VirtualMachineVolumeParameters,
    options?: VirtualMachinesAttachVolumeOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<VirtualMachinesAttachVolumeResponse>,
      VirtualMachinesAttachVolumeResponse
    >
  >;
  /**
   * Attach volume to the provided virtual machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualMachineName The name of the virtual machine.
   * @param virtualMachineAttachVolumeParameters The request body.
   * @param options The options parameters.
   */
  beginAttachVolumeAndWait(
    resourceGroupName: string,
    virtualMachineName: string,
    virtualMachineAttachVolumeParameters: VirtualMachineVolumeParameters,
    options?: VirtualMachinesAttachVolumeOptionalParams
  ): Promise<VirtualMachinesAttachVolumeResponse>;
  /**
   * Detach volume from the provided virtual machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualMachineName The name of the virtual machine.
   * @param virtualMachineDetachVolumeParameters The request body.
   * @param options The options parameters.
   */
  beginDetachVolume(
    resourceGroupName: string,
    virtualMachineName: string,
    virtualMachineDetachVolumeParameters: VirtualMachineVolumeParameters,
    options?: VirtualMachinesDetachVolumeOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<VirtualMachinesDetachVolumeResponse>,
      VirtualMachinesDetachVolumeResponse
    >
  >;
  /**
   * Detach volume from the provided virtual machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualMachineName The name of the virtual machine.
   * @param virtualMachineDetachVolumeParameters The request body.
   * @param options The options parameters.
   */
  beginDetachVolumeAndWait(
    resourceGroupName: string,
    virtualMachineName: string,
    virtualMachineDetachVolumeParameters: VirtualMachineVolumeParameters,
    options?: VirtualMachinesDetachVolumeOptionalParams
  ): Promise<VirtualMachinesDetachVolumeResponse>;
  /**
   * Power off the provided virtual machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualMachineName The name of the virtual machine.
   * @param options The options parameters.
   */
  beginPowerOff(
    resourceGroupName: string,
    virtualMachineName: string,
    options?: VirtualMachinesPowerOffOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<VirtualMachinesPowerOffResponse>,
      VirtualMachinesPowerOffResponse
    >
  >;
  /**
   * Power off the provided virtual machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualMachineName The name of the virtual machine.
   * @param options The options parameters.
   */
  beginPowerOffAndWait(
    resourceGroupName: string,
    virtualMachineName: string,
    options?: VirtualMachinesPowerOffOptionalParams
  ): Promise<VirtualMachinesPowerOffResponse>;
  /**
   * Reimage the provided virtual machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualMachineName The name of the virtual machine.
   * @param options The options parameters.
   */
  beginReimage(
    resourceGroupName: string,
    virtualMachineName: string,
    options?: VirtualMachinesReimageOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<VirtualMachinesReimageResponse>,
      VirtualMachinesReimageResponse
    >
  >;
  /**
   * Reimage the provided virtual machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualMachineName The name of the virtual machine.
   * @param options The options parameters.
   */
  beginReimageAndWait(
    resourceGroupName: string,
    virtualMachineName: string,
    options?: VirtualMachinesReimageOptionalParams
  ): Promise<VirtualMachinesReimageResponse>;
  /**
   * Restart the provided virtual machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualMachineName The name of the virtual machine.
   * @param options The options parameters.
   */
  beginRestart(
    resourceGroupName: string,
    virtualMachineName: string,
    options?: VirtualMachinesRestartOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<VirtualMachinesRestartResponse>,
      VirtualMachinesRestartResponse
    >
  >;
  /**
   * Restart the provided virtual machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualMachineName The name of the virtual machine.
   * @param options The options parameters.
   */
  beginRestartAndWait(
    resourceGroupName: string,
    virtualMachineName: string,
    options?: VirtualMachinesRestartOptionalParams
  ): Promise<VirtualMachinesRestartResponse>;
  /**
   * Start the provided virtual machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualMachineName The name of the virtual machine.
   * @param options The options parameters.
   */
  beginStart(
    resourceGroupName: string,
    virtualMachineName: string,
    options?: VirtualMachinesStartOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<VirtualMachinesStartResponse>,
      VirtualMachinesStartResponse
    >
  >;
  /**
   * Start the provided virtual machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualMachineName The name of the virtual machine.
   * @param options The options parameters.
   */
  beginStartAndWait(
    resourceGroupName: string,
    virtualMachineName: string,
    options?: VirtualMachinesStartOptionalParams
  ): Promise<VirtualMachinesStartResponse>;
}
