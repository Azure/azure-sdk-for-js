/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  StorageAppliance,
  StorageAppliancesListBySubscriptionOptionalParams,
  StorageAppliancesListByResourceGroupOptionalParams,
  StorageAppliancesGetOptionalParams,
  StorageAppliancesGetResponse,
  StorageAppliancesCreateOrUpdateOptionalParams,
  StorageAppliancesCreateOrUpdateResponse,
  StorageAppliancesDeleteOptionalParams,
  StorageAppliancesUpdateOptionalParams,
  StorageAppliancesUpdateResponse,
  StorageAppliancesDisableRemoteVendorManagementOptionalParams,
  StorageAppliancesDisableRemoteVendorManagementResponse,
  StorageAppliancesEnableRemoteVendorManagementOptionalParams,
  StorageAppliancesEnableRemoteVendorManagementResponse,
  StorageAppliancesRunReadCommandsOptionalParams,
  StorageAppliancesRunReadCommandsResponse,
  StorageAppliancesValidateHardwareOptionalParams,
  StorageAppliancesValidateHardwareResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a StorageAppliances. */
export interface StorageAppliances {
  /**
   * Get a list of storage appliances in the provided subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: StorageAppliancesListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<StorageAppliance>;
  /**
   * Get a list of storage appliances in the provided resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: StorageAppliancesListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<StorageAppliance>;
  /**
   * Get properties of the provided storage appliance.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageApplianceName The name of the storage appliance.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    storageApplianceName: string,
    options?: StorageAppliancesGetOptionalParams
  ): Promise<StorageAppliancesGetResponse>;
  /**
   * Create a new storage appliance or update the properties of the existing one.
   * All customer initiated requests will be rejected as the life cycle of this resource is managed by
   * the system.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageApplianceName The name of the storage appliance.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    storageApplianceName: string,
    options?: StorageAppliancesCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<StorageAppliancesCreateOrUpdateResponse>,
      StorageAppliancesCreateOrUpdateResponse
    >
  >;
  /**
   * Create a new storage appliance or update the properties of the existing one.
   * All customer initiated requests will be rejected as the life cycle of this resource is managed by
   * the system.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageApplianceName The name of the storage appliance.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    storageApplianceName: string,
    options?: StorageAppliancesCreateOrUpdateOptionalParams
  ): Promise<StorageAppliancesCreateOrUpdateResponse>;
  /**
   * Delete the provided storage appliance.
   * All customer initiated requests will be rejected as the life cycle of this resource is managed by
   * the system.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageApplianceName The name of the storage appliance.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    storageApplianceName: string,
    options?: StorageAppliancesDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Delete the provided storage appliance.
   * All customer initiated requests will be rejected as the life cycle of this resource is managed by
   * the system.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageApplianceName The name of the storage appliance.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    storageApplianceName: string,
    options?: StorageAppliancesDeleteOptionalParams
  ): Promise<void>;
  /**
   * Patch properties of the provided bare metal machine, or update tags associated with the bare metal
   * machine. Properties and tag updates can be done independently.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageApplianceName The name of the storage appliance.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    storageApplianceName: string,
    options?: StorageAppliancesUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<StorageAppliancesUpdateResponse>,
      StorageAppliancesUpdateResponse
    >
  >;
  /**
   * Patch properties of the provided bare metal machine, or update tags associated with the bare metal
   * machine. Properties and tag updates can be done independently.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageApplianceName The name of the storage appliance.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    storageApplianceName: string,
    options?: StorageAppliancesUpdateOptionalParams
  ): Promise<StorageAppliancesUpdateResponse>;
  /**
   * Disable remote vendor management of the provided storage appliance.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageApplianceName The name of the storage appliance.
   * @param options The options parameters.
   */
  beginDisableRemoteVendorManagement(
    resourceGroupName: string,
    storageApplianceName: string,
    options?: StorageAppliancesDisableRemoteVendorManagementOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<
        StorageAppliancesDisableRemoteVendorManagementResponse
      >,
      StorageAppliancesDisableRemoteVendorManagementResponse
    >
  >;
  /**
   * Disable remote vendor management of the provided storage appliance.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageApplianceName The name of the storage appliance.
   * @param options The options parameters.
   */
  beginDisableRemoteVendorManagementAndWait(
    resourceGroupName: string,
    storageApplianceName: string,
    options?: StorageAppliancesDisableRemoteVendorManagementOptionalParams
  ): Promise<StorageAppliancesDisableRemoteVendorManagementResponse>;
  /**
   * Enable remote vendor management of the provided storage appliance.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageApplianceName The name of the storage appliance.
   * @param options The options parameters.
   */
  beginEnableRemoteVendorManagement(
    resourceGroupName: string,
    storageApplianceName: string,
    options?: StorageAppliancesEnableRemoteVendorManagementOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<StorageAppliancesEnableRemoteVendorManagementResponse>,
      StorageAppliancesEnableRemoteVendorManagementResponse
    >
  >;
  /**
   * Enable remote vendor management of the provided storage appliance.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageApplianceName The name of the storage appliance.
   * @param options The options parameters.
   */
  beginEnableRemoteVendorManagementAndWait(
    resourceGroupName: string,
    storageApplianceName: string,
    options?: StorageAppliancesEnableRemoteVendorManagementOptionalParams
  ): Promise<StorageAppliancesEnableRemoteVendorManagementResponse>;
  /**
   * Run and retrieve output from read only commands on the provided storage appliance.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageApplianceName The name of the storage appliance.
   * @param options The options parameters.
   */
  beginRunReadCommands(
    resourceGroupName: string,
    storageApplianceName: string,
    options?: StorageAppliancesRunReadCommandsOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<StorageAppliancesRunReadCommandsResponse>,
      StorageAppliancesRunReadCommandsResponse
    >
  >;
  /**
   * Run and retrieve output from read only commands on the provided storage appliance.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageApplianceName The name of the storage appliance.
   * @param options The options parameters.
   */
  beginRunReadCommandsAndWait(
    resourceGroupName: string,
    storageApplianceName: string,
    options?: StorageAppliancesRunReadCommandsOptionalParams
  ): Promise<StorageAppliancesRunReadCommandsResponse>;
  /**
   * Validate the hardware of the provided storage appliance.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageApplianceName The name of the storage appliance.
   * @param options The options parameters.
   */
  beginValidateHardware(
    resourceGroupName: string,
    storageApplianceName: string,
    options?: StorageAppliancesValidateHardwareOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<StorageAppliancesValidateHardwareResponse>,
      StorageAppliancesValidateHardwareResponse
    >
  >;
  /**
   * Validate the hardware of the provided storage appliance.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageApplianceName The name of the storage appliance.
   * @param options The options parameters.
   */
  beginValidateHardwareAndWait(
    resourceGroupName: string,
    storageApplianceName: string,
    options?: StorageAppliancesValidateHardwareOptionalParams
  ): Promise<StorageAppliancesValidateHardwareResponse>;
}
