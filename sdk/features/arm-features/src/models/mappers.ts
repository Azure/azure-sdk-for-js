/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const FeatureProperties: msRest.CompositeMapper = {
  serializedName: "FeatureProperties",
  type: {
    name: "Composite",
    className: "FeatureProperties",
    modelProperties: {
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FeatureResult: msRest.CompositeMapper = {
  serializedName: "FeatureResult",
  type: {
    name: "Composite",
    className: "FeatureResult",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "FeatureProperties"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "Operation_display",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      }
    }
  }
};

export const ErrorDefinition: msRest.CompositeMapper = {
  serializedName: "ErrorDefinition",
  type: {
    name: "Composite",
    className: "ErrorDefinition",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDefinition"
            }
          }
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDefinition"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AuthorizationProfile: msRest.CompositeMapper = {
  serializedName: "AuthorizationProfile",
  type: {
    name: "Composite",
    className: "AuthorizationProfile",
    modelProperties: {
      requestedTime: {
        readOnly: true,
        serializedName: "requestedTime",
        type: {
          name: "DateTime"
        }
      },
      requester: {
        readOnly: true,
        serializedName: "requester",
        type: {
          name: "String"
        }
      },
      requesterObjectId: {
        readOnly: true,
        serializedName: "requesterObjectId",
        type: {
          name: "String"
        }
      },
      approvedTime: {
        readOnly: true,
        serializedName: "approvedTime",
        type: {
          name: "DateTime"
        }
      },
      approver: {
        readOnly: true,
        serializedName: "approver",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubscriptionFeatureRegistrationProperties: msRest.CompositeMapper = {
  serializedName: "SubscriptionFeatureRegistration_properties",
  type: {
    name: "Composite",
    className: "SubscriptionFeatureRegistrationProperties",
    modelProperties: {
      tenantId: {
        readOnly: true,
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        readOnly: true,
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      featureName: {
        readOnly: true,
        serializedName: "featureName",
        type: {
          name: "String"
        }
      },
      displayName: {
        readOnly: true,
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      providerNamespace: {
        readOnly: true,
        serializedName: "providerNamespace",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      authorizationProfile: {
        serializedName: "authorizationProfile",
        type: {
          name: "Composite",
          className: "AuthorizationProfile"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      releaseDate: {
        readOnly: true,
        serializedName: "releaseDate",
        type: {
          name: "DateTime"
        }
      },
      registrationDate: {
        readOnly: true,
        serializedName: "registrationDate",
        type: {
          name: "DateTime"
        }
      },
      documentationLink: {
        readOnly: true,
        serializedName: "documentationLink",
        constraints: {
          MaxLength: 1000
        },
        type: {
          name: "String"
        }
      },
      approvalType: {
        readOnly: true,
        serializedName: "approvalType",
        type: {
          name: "String"
        }
      },
      shouldFeatureDisplayInPortal: {
        serializedName: "shouldFeatureDisplayInPortal",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      description: {
        serializedName: "description",
        constraints: {
          MaxLength: 1000
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubscriptionFeatureRegistration: msRest.CompositeMapper = {
  serializedName: "SubscriptionFeatureRegistration",
  type: {
    name: "Composite",
    className: "SubscriptionFeatureRegistration",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SubscriptionFeatureRegistrationProperties"
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FeatureOperationsListResult: msRest.CompositeMapper = {
  serializedName: "FeatureOperationsListResult",
  type: {
    name: "Composite",
    className: "FeatureOperationsListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FeatureResult"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubscriptionFeatureRegistrationList: msRest.CompositeMapper = {
  serializedName: "SubscriptionFeatureRegistrationList",
  type: {
    name: "Composite",
    className: "SubscriptionFeatureRegistrationList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubscriptionFeatureRegistration"
            }
          }
        }
      }
    }
  }
};
