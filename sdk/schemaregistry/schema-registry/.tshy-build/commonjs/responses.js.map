{"version":3,"file":"responses.js","sourceRoot":"","sources":["../../src/responses.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { RawHttpHeaders } from \"@azure/core-rest-pipeline\";\nimport type { HttpResponse, ErrorResponse } from \"@azure-rest/core-client\";\nimport type {\n  SchemaGroupsOutput,\n  SchemaVersionsOutput,\n  SchemaContentTypeValuesOutput,\n} from \"./outputModels.js\";\n\n/** The request has succeeded. */\nexport interface ListSchemaGroups200Response extends HttpResponse {\n  status: \"200\";\n  body: SchemaGroupsOutput;\n}\n\nexport interface ListSchemaGroupsDefaultHeaders {\n  /** String error code indicating what went wrong. */\n  \"x-ms-error-code\"?: string;\n}\n\nexport interface ListSchemaGroupsDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponse;\n  headers: RawHttpHeaders & ListSchemaGroupsDefaultHeaders;\n}\n\n/** The request has succeeded. */\nexport interface ListSchemaVersions200Response extends HttpResponse {\n  status: \"200\";\n  body: SchemaVersionsOutput;\n}\n\nexport interface ListSchemaVersionsDefaultHeaders {\n  /** String error code indicating what went wrong. */\n  \"x-ms-error-code\"?: string;\n}\n\nexport interface ListSchemaVersionsDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponse;\n  headers: RawHttpHeaders & ListSchemaVersionsDefaultHeaders;\n}\n\nexport interface GetSchemaById200Headers {\n  /** URL location of schema, identified by schema group, schema name, and version. */\n  location: string;\n  /** References specific schema in registry namespace. */\n  \"schema-id\": string;\n  /** URL location of schema, identified by schema ID. */\n  \"schema-id-location\": string;\n  /** References schema group. */\n  \"schema-group-name\": string;\n  /** References schema name. */\n  \"schema-name\": string;\n  /** Version of the returned schema. */\n  \"schema-version\": number;\n  /** The content type for given schema. */\n  \"content-type\": SchemaContentTypeValuesOutput;\n}\n\n/** The request has succeeded. */\nexport interface GetSchemaById200Response extends HttpResponse {\n  status: \"200\";\n  body: string;\n  headers: RawHttpHeaders & GetSchemaById200Headers;\n}\n\nexport interface GetSchemaByIdDefaultHeaders {\n  /** String error code indicating what went wrong. */\n  \"x-ms-error-code\"?: string;\n}\n\nexport interface GetSchemaByIdDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponse;\n  headers: RawHttpHeaders & GetSchemaByIdDefaultHeaders;\n}\n\nexport interface GetSchemaByVersion200Headers {\n  /** URL location of schema, identified by schema group, schema name, and version. */\n  location: string;\n  /** References specific schema in registry namespace. */\n  \"schema-id\": string;\n  /** URL location of schema, identified by schema ID. */\n  \"schema-id-location\": string;\n  /** References schema group. */\n  \"schema-group-name\": string;\n  /** References schema name. */\n  \"schema-name\": string;\n  /** Version of the returned schema. */\n  \"schema-version\": number;\n  /** The content type for given schema. */\n  \"content-type\": SchemaContentTypeValuesOutput;\n}\n\n/** The request has succeeded. */\nexport interface GetSchemaByVersion200Response extends HttpResponse {\n  status: \"200\";\n  body: string;\n  headers: RawHttpHeaders & GetSchemaByVersion200Headers;\n}\n\nexport interface GetSchemaByVersionDefaultHeaders {\n  /** String error code indicating what went wrong. */\n  \"x-ms-error-code\"?: string;\n}\n\nexport interface GetSchemaByVersionDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponse;\n  headers: RawHttpHeaders & GetSchemaByVersionDefaultHeaders;\n}\n\nexport interface GetSchemaPropertiesByContent204Headers {\n  /** URL location of schema, identified by schema group, schema name, and version. */\n  location: string;\n  /** References specific schema in registry namespace. */\n  \"schema-id\": string;\n  /** URL location of schema, identified by schema ID. */\n  \"schema-id-location\": string;\n  /** References schema group. */\n  \"schema-group-name\": string;\n  /** References schema name. */\n  \"schema-name\": string;\n  /** Version of the returned schema. */\n  \"schema-version\": number;\n}\n\n/** There is no content to send for this request, but the headers may be useful. */\nexport interface GetSchemaPropertiesByContent204Response extends HttpResponse {\n  status: \"204\";\n  headers: RawHttpHeaders & GetSchemaPropertiesByContent204Headers;\n}\n\nexport interface GetSchemaPropertiesByContentDefaultHeaders {\n  /** String error code indicating what went wrong. */\n  \"x-ms-error-code\"?: string;\n}\n\nexport interface GetSchemaPropertiesByContentDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponse;\n  headers: RawHttpHeaders & GetSchemaPropertiesByContentDefaultHeaders;\n}\n\nexport interface RegisterSchema204Headers {\n  /** URL location of schema, identified by schema group, schema name, and version. */\n  location: string;\n  /** References specific schema in registry namespace. */\n  \"schema-id\": string;\n  /** URL location of schema, identified by schema ID. */\n  \"schema-id-location\": string;\n  /** References schema group. */\n  \"schema-group-name\": string;\n  /** References schema name. */\n  \"schema-name\": string;\n  /** Version of the returned schema. */\n  \"schema-version\": number;\n}\n\n/** There is no content to send for this request, but the headers may be useful. */\nexport interface RegisterSchema204Response extends HttpResponse {\n  status: \"204\";\n  headers: RawHttpHeaders & RegisterSchema204Headers;\n}\n\nexport interface RegisterSchemaDefaultHeaders {\n  /** String error code indicating what went wrong. */\n  \"x-ms-error-code\"?: string;\n}\n\nexport interface RegisterSchemaDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponse;\n  headers: RawHttpHeaders & RegisterSchemaDefaultHeaders;\n}\n"]}