/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export interface SchemaId {
  id: string;
}

/**
 * Defines headers for SchemaRegistryClient_getSchemaById operation.
 */
export interface SchemaRegistryClientGetSchemaByIdHeaders {
  location?: string;
  /**
   * schema type
   */
  xSerialization?: string;
  /**
   * unique schema identifier
   */
  xSchemaId?: string;
  /**
   * location of schema resource
   */
  xSchemaIdLocation?: string;
  /**
   * version of returned schema
   */
  xSchemaVersion?: number;
}

/**
 * Defines headers for SchemaRegistryClient_getIdBySchemaContent operation.
 */
export interface SchemaRegistryClientGetIdBySchemaContentHeaders {
  location?: string;
  /**
   * schema type
   */
  xSerialization?: string;
  /**
   * unique schema identifier
   */
  xSchemaId?: string;
  /**
   * location of schema resource
   */
  xSchemaIdLocation?: string;
  /**
   * version of returned schema
   */
  xSchemaVersion?: number;
}

/**
 * Defines headers for SchemaRegistryClient_registerSchema operation.
 */
export interface SchemaRegistryClientRegisterSchemaHeaders {
  location?: string;
  /**
   * schema type
   */
  xSerialization?: string;
  /**
   * unique schema identifier
   */
  xSchemaId?: string;
  /**
   * location of schema resource
   */
  xSchemaIdLocation?: string;
  /**
   * version of returned schema
   */
  xSchemaVersion?: number;
}

/**
 * Contains response data for the getSchemaById operation.
 */
export type SchemaRegistryClientGetSchemaByIdResponse = SchemaRegistryClientGetSchemaByIdHeaders & {
  /**
   * The parsed response body.
   */
  body: string;

  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: string;
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: SchemaRegistryClientGetSchemaByIdHeaders;
  };
};

/**
 * Contains response data for the getIdBySchemaContent operation.
 */
export type SchemaRegistryClientGetIdBySchemaContentResponse = SchemaRegistryClientGetIdBySchemaContentHeaders &
  SchemaId & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SchemaId;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SchemaRegistryClientGetIdBySchemaContentHeaders;
    };
  };

/**
 * Contains response data for the registerSchema operation.
 */
export type SchemaRegistryClientRegisterSchemaResponse = SchemaRegistryClientRegisterSchemaHeaders &
  SchemaId & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SchemaId;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SchemaRegistryClientRegisterSchemaHeaders;
    };
  };

/**
 * Optional parameters.
 */
export interface SchemaRegistryClientOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
