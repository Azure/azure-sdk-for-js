/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const UserIdentityProperties: msRest.CompositeMapper = {
  serializedName: "UserIdentityProperties",
  type: {
    name: "Composite",
    className: "UserIdentityProperties",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      clientId: {
        serializedName: "clientId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IdentityProperties: msRest.CompositeMapper = {
  serializedName: "IdentityProperties",
  type: {
    name: "Composite",
    className: "IdentityProperties",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "Enum",
          allowedValues: [
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned",
            "None"
          ]
        }
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "UserIdentityProperties"
            }
          }
        }
      }
    }
  }
};

export const ExportPipelineTargetProperties: msRest.CompositeMapper = {
  serializedName: "ExportPipelineTargetProperties",
  type: {
    name: "Composite",
    className: "ExportPipelineTargetProperties",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      uri: {
        serializedName: "uri",
        type: {
          name: "String"
        }
      },
      keyVaultUri: {
        required: true,
        serializedName: "keyVaultUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExportPipeline: msRest.CompositeMapper = {
  serializedName: "ExportPipeline",
  type: {
    name: "Composite",
    className: "ExportPipeline",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "IdentityProperties"
        }
      },
      target: {
        required: true,
        serializedName: "properties.target",
        type: {
          name: "Composite",
          className: "ExportPipelineTargetProperties"
        }
      },
      options: {
        serializedName: "properties.options",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImportSourceCredentials: msRest.CompositeMapper = {
  serializedName: "ImportSourceCredentials",
  type: {
    name: "Composite",
    className: "ImportSourceCredentials",
    modelProperties: {
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      },
      password: {
        required: true,
        serializedName: "password",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImportSource: msRest.CompositeMapper = {
  serializedName: "ImportSource",
  type: {
    name: "Composite",
    className: "ImportSource",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      registryUri: {
        serializedName: "registryUri",
        type: {
          name: "String"
        }
      },
      credentials: {
        serializedName: "credentials",
        type: {
          name: "Composite",
          className: "ImportSourceCredentials"
        }
      },
      sourceImage: {
        required: true,
        serializedName: "sourceImage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImportImageParameters: msRest.CompositeMapper = {
  serializedName: "ImportImageParameters",
  type: {
    name: "Composite",
    className: "ImportImageParameters",
    modelProperties: {
      source: {
        required: true,
        serializedName: "source",
        type: {
          name: "Composite",
          className: "ImportSource"
        }
      },
      targetTags: {
        serializedName: "targetTags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      untaggedTargetRepositories: {
        serializedName: "untaggedTargetRepositories",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      mode: {
        serializedName: "mode",
        defaultValue: 'NoForce',
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImportPipelineSourceProperties: msRest.CompositeMapper = {
  serializedName: "ImportPipelineSourceProperties",
  type: {
    name: "Composite",
    className: "ImportPipelineSourceProperties",
    modelProperties: {
      type: {
        serializedName: "type",
        defaultValue: 'AzureStorageBlobContainer',
        type: {
          name: "String"
        }
      },
      uri: {
        serializedName: "uri",
        type: {
          name: "String"
        }
      },
      keyVaultUri: {
        required: true,
        serializedName: "keyVaultUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PipelineSourceTriggerProperties: msRest.CompositeMapper = {
  serializedName: "PipelineSourceTriggerProperties",
  type: {
    name: "Composite",
    className: "PipelineSourceTriggerProperties",
    modelProperties: {
      status: {
        required: true,
        serializedName: "status",
        defaultValue: 'Enabled',
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PipelineTriggerProperties: msRest.CompositeMapper = {
  serializedName: "PipelineTriggerProperties",
  type: {
    name: "Composite",
    className: "PipelineTriggerProperties",
    modelProperties: {
      sourceTrigger: {
        serializedName: "sourceTrigger",
        type: {
          name: "Composite",
          className: "PipelineSourceTriggerProperties"
        }
      }
    }
  }
};

export const ImportPipeline: msRest.CompositeMapper = {
  serializedName: "ImportPipeline",
  type: {
    name: "Composite",
    className: "ImportPipeline",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "IdentityProperties"
        }
      },
      source: {
        required: true,
        serializedName: "properties.source",
        type: {
          name: "Composite",
          className: "ImportPipelineSourceProperties"
        }
      },
      trigger: {
        serializedName: "properties.trigger",
        type: {
          name: "Composite",
          className: "PipelineTriggerProperties"
        }
      },
      options: {
        serializedName: "properties.options",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegistryNameCheckRequest: msRest.CompositeMapper = {
  serializedName: "RegistryNameCheckRequest",
  type: {
    name: "Composite",
    className: "RegistryNameCheckRequest",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        constraints: {
          MaxLength: 50,
          MinLength: 5,
          Pattern: /^[a-zA-Z0-9]*$/
        },
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        isConstant: true,
        serializedName: "type",
        defaultValue: 'Microsoft.ContainerRegistry/registries',
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegistryNameStatus: msRest.CompositeMapper = {
  serializedName: "RegistryNameStatus",
  type: {
    name: "Composite",
    className: "RegistryNameStatus",
    modelProperties: {
      nameAvailable: {
        serializedName: "nameAvailable",
        type: {
          name: "Boolean"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplayDefinition: msRest.CompositeMapper = {
  serializedName: "OperationDisplayDefinition",
  type: {
    name: "Composite",
    className: "OperationDisplayDefinition",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationMetricSpecificationDefinition: msRest.CompositeMapper = {
  serializedName: "OperationMetricSpecificationDefinition",
  type: {
    name: "Composite",
    className: "OperationMetricSpecificationDefinition",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      displayDescription: {
        serializedName: "displayDescription",
        type: {
          name: "String"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      aggregationType: {
        serializedName: "aggregationType",
        type: {
          name: "String"
        }
      },
      internalMetricName: {
        serializedName: "internalMetricName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationServiceSpecificationDefinition: msRest.CompositeMapper = {
  serializedName: "OperationServiceSpecificationDefinition",
  type: {
    name: "Composite",
    className: "OperationServiceSpecificationDefinition",
    modelProperties: {
      metricSpecifications: {
        serializedName: "metricSpecifications",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationMetricSpecificationDefinition"
            }
          }
        }
      }
    }
  }
};

export const OperationDefinition: msRest.CompositeMapper = {
  serializedName: "OperationDefinition",
  type: {
    name: "Composite",
    className: "OperationDefinition",
    modelProperties: {
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplayDefinition"
        }
      },
      serviceSpecification: {
        serializedName: "properties.serviceSpecification",
        type: {
          name: "Composite",
          className: "OperationServiceSpecificationDefinition"
        }
      }
    }
  }
};

export const PipelineRunSourceProperties: msRest.CompositeMapper = {
  serializedName: "PipelineRunSourceProperties",
  type: {
    name: "Composite",
    className: "PipelineRunSourceProperties",
    modelProperties: {
      type: {
        serializedName: "type",
        defaultValue: 'AzureStorageBlob',
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PipelineRunTargetProperties: msRest.CompositeMapper = {
  serializedName: "PipelineRunTargetProperties",
  type: {
    name: "Composite",
    className: "PipelineRunTargetProperties",
    modelProperties: {
      type: {
        serializedName: "type",
        defaultValue: 'AzureStorageBlob',
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PipelineRunRequest: msRest.CompositeMapper = {
  serializedName: "PipelineRunRequest",
  type: {
    name: "Composite",
    className: "PipelineRunRequest",
    modelProperties: {
      pipelineResourceId: {
        serializedName: "pipelineResourceId",
        type: {
          name: "String"
        }
      },
      artifacts: {
        serializedName: "artifacts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      source: {
        serializedName: "source",
        type: {
          name: "Composite",
          className: "PipelineRunSourceProperties"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "Composite",
          className: "PipelineRunTargetProperties"
        }
      },
      catalogDigest: {
        serializedName: "catalogDigest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProgressProperties: msRest.CompositeMapper = {
  serializedName: "ProgressProperties",
  type: {
    name: "Composite",
    className: "ProgressProperties",
    modelProperties: {
      percentage: {
        serializedName: "percentage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PipelineSourceTriggerDescriptor: msRest.CompositeMapper = {
  serializedName: "PipelineSourceTriggerDescriptor",
  type: {
    name: "Composite",
    className: "PipelineSourceTriggerDescriptor",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const PipelineTriggerDescriptor: msRest.CompositeMapper = {
  serializedName: "PipelineTriggerDescriptor",
  type: {
    name: "Composite",
    className: "PipelineTriggerDescriptor",
    modelProperties: {
      sourceTrigger: {
        serializedName: "sourceTrigger",
        type: {
          name: "Composite",
          className: "PipelineSourceTriggerDescriptor"
        }
      }
    }
  }
};

export const PipelineRunResponse: msRest.CompositeMapper = {
  serializedName: "PipelineRunResponse",
  type: {
    name: "Composite",
    className: "PipelineRunResponse",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      importedArtifacts: {
        serializedName: "importedArtifacts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      progress: {
        serializedName: "progress",
        type: {
          name: "Composite",
          className: "ProgressProperties"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      finishTime: {
        serializedName: "finishTime",
        type: {
          name: "DateTime"
        }
      },
      source: {
        serializedName: "source",
        type: {
          name: "Composite",
          className: "ImportPipelineSourceProperties"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "Composite",
          className: "ExportPipelineTargetProperties"
        }
      },
      catalogDigest: {
        serializedName: "catalogDigest",
        type: {
          name: "String"
        }
      },
      trigger: {
        serializedName: "trigger",
        type: {
          name: "Composite",
          className: "PipelineTriggerDescriptor"
        }
      },
      pipelineRunErrorMessage: {
        serializedName: "pipelineRunErrorMessage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PipelineRun: msRest.CompositeMapper = {
  serializedName: "PipelineRun",
  type: {
    name: "Composite",
    className: "PipelineRun",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      request: {
        serializedName: "properties.request",
        type: {
          name: "Composite",
          className: "PipelineRunRequest"
        }
      },
      response: {
        readOnly: true,
        serializedName: "properties.response",
        type: {
          name: "Composite",
          className: "PipelineRunResponse"
        }
      },
      forceUpdateTag: {
        serializedName: "properties.forceUpdateTag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpoint: msRest.CompositeMapper = {
  serializedName: "PrivateEndpoint",
  type: {
    name: "Composite",
    className: "PrivateEndpoint",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateLinkServiceConnectionState: msRest.CompositeMapper = {
  serializedName: "PrivateLinkServiceConnectionState",
  type: {
    name: "Composite",
    className: "PrivateLinkServiceConnectionState",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      actionsRequired: {
        serializedName: "actionsRequired",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointConnection: msRest.CompositeMapper = {
  serializedName: "PrivateEndpointConnection",
  type: {
    name: "Composite",
    className: "PrivateEndpointConnection",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      privateEndpoint: {
        serializedName: "properties.privateEndpoint",
        type: {
          name: "Composite",
          className: "PrivateEndpoint"
        }
      },
      privateLinkServiceConnectionState: {
        serializedName: "properties.privateLinkServiceConnectionState",
        type: {
          name: "Composite",
          className: "PrivateLinkServiceConnectionState"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Sku: msRest.CompositeMapper = {
  serializedName: "Sku",
  type: {
    name: "Composite",
    className: "Sku",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tier: {
        readOnly: true,
        serializedName: "tier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Status: msRest.CompositeMapper = {
  serializedName: "Status",
  type: {
    name: "Composite",
    className: "Status",
    modelProperties: {
      displayStatus: {
        readOnly: true,
        serializedName: "displayStatus",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      timestamp: {
        readOnly: true,
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const StorageAccountProperties: msRest.CompositeMapper = {
  serializedName: "StorageAccountProperties",
  type: {
    name: "Composite",
    className: "StorageAccountProperties",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualNetworkRule: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkRule",
  type: {
    name: "Composite",
    className: "VirtualNetworkRule",
    modelProperties: {
      action: {
        serializedName: "action",
        defaultValue: 'Allow',
        type: {
          name: "String"
        }
      },
      virtualNetworkResourceId: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IPRule: msRest.CompositeMapper = {
  serializedName: "IPRule",
  type: {
    name: "Composite",
    className: "IPRule",
    modelProperties: {
      action: {
        serializedName: "action",
        defaultValue: 'Allow',
        type: {
          name: "String"
        }
      },
      iPAddressOrRange: {
        required: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkRuleSet: msRest.CompositeMapper = {
  serializedName: "NetworkRuleSet",
  type: {
    name: "Composite",
    className: "NetworkRuleSet",
    modelProperties: {
      defaultAction: {
        required: true,
        serializedName: "defaultAction",
        defaultValue: 'Allow',
        type: {
          name: "String"
        }
      },
      virtualNetworkRules: {
        serializedName: "virtualNetworkRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualNetworkRule"
            }
          }
        }
      },
      ipRules: {
        serializedName: "ipRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IPRule"
            }
          }
        }
      }
    }
  }
};

export const QuarantinePolicy: msRest.CompositeMapper = {
  serializedName: "QuarantinePolicy",
  type: {
    name: "Composite",
    className: "QuarantinePolicy",
    modelProperties: {
      status: {
        serializedName: "status",
        defaultValue: 'disabled',
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrustPolicy: msRest.CompositeMapper = {
  serializedName: "TrustPolicy",
  type: {
    name: "Composite",
    className: "TrustPolicy",
    modelProperties: {
      type: {
        serializedName: "type",
        defaultValue: 'Notary',
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        defaultValue: 'disabled',
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RetentionPolicy: msRest.CompositeMapper = {
  serializedName: "RetentionPolicy",
  type: {
    name: "Composite",
    className: "RetentionPolicy",
    modelProperties: {
      days: {
        serializedName: "days",
        defaultValue: 7,
        type: {
          name: "Number"
        }
      },
      lastUpdatedTime: {
        readOnly: true,
        serializedName: "lastUpdatedTime",
        type: {
          name: "DateTime"
        }
      },
      status: {
        serializedName: "status",
        defaultValue: 'disabled',
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Policies: msRest.CompositeMapper = {
  serializedName: "Policies",
  type: {
    name: "Composite",
    className: "Policies",
    modelProperties: {
      quarantinePolicy: {
        serializedName: "quarantinePolicy",
        type: {
          name: "Composite",
          className: "QuarantinePolicy"
        }
      },
      trustPolicy: {
        serializedName: "trustPolicy",
        type: {
          name: "Composite",
          className: "TrustPolicy"
        }
      },
      retentionPolicy: {
        serializedName: "retentionPolicy",
        type: {
          name: "Composite",
          className: "RetentionPolicy"
        }
      }
    }
  }
};

export const KeyVaultProperties: msRest.CompositeMapper = {
  serializedName: "KeyVaultProperties",
  type: {
    name: "Composite",
    className: "KeyVaultProperties",
    modelProperties: {
      keyIdentifier: {
        serializedName: "keyIdentifier",
        type: {
          name: "String"
        }
      },
      versionedKeyIdentifier: {
        readOnly: true,
        serializedName: "versionedKeyIdentifier",
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EncryptionProperty: msRest.CompositeMapper = {
  serializedName: "EncryptionProperty",
  type: {
    name: "Composite",
    className: "EncryptionProperty",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      keyVaultProperties: {
        serializedName: "keyVaultProperties",
        type: {
          name: "Composite",
          className: "KeyVaultProperties"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Registry: msRest.CompositeMapper = {
  serializedName: "Registry",
  type: {
    name: "Composite",
    className: "Registry",
    modelProperties: {
      ...Resource.type.modelProperties,
      sku: {
        required: true,
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "IdentityProperties"
        }
      },
      loginServer: {
        readOnly: true,
        serializedName: "properties.loginServer",
        type: {
          name: "String"
        }
      },
      creationDate: {
        readOnly: true,
        serializedName: "properties.creationDate",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "properties.status",
        type: {
          name: "Composite",
          className: "Status"
        }
      },
      adminUserEnabled: {
        serializedName: "properties.adminUserEnabled",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      storageAccount: {
        serializedName: "properties.storageAccount",
        type: {
          name: "Composite",
          className: "StorageAccountProperties"
        }
      },
      networkRuleSet: {
        serializedName: "properties.networkRuleSet",
        type: {
          name: "Composite",
          className: "NetworkRuleSet"
        }
      },
      policies: {
        serializedName: "properties.policies",
        type: {
          name: "Composite",
          className: "Policies"
        }
      },
      encryption: {
        serializedName: "properties.encryption",
        type: {
          name: "Composite",
          className: "EncryptionProperty"
        }
      },
      dataEndpointEnabled: {
        serializedName: "properties.dataEndpointEnabled",
        type: {
          name: "Boolean"
        }
      },
      dataEndpointHostNames: {
        readOnly: true,
        serializedName: "properties.dataEndpointHostNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      privateEndpointConnections: {
        readOnly: true,
        serializedName: "properties.privateEndpointConnections",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnection"
            }
          }
        }
      },
      publicNetworkAccess: {
        serializedName: "properties.publicNetworkAccess",
        defaultValue: 'Enabled',
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegistryUpdateParameters: msRest.CompositeMapper = {
  serializedName: "RegistryUpdateParameters",
  type: {
    name: "Composite",
    className: "RegistryUpdateParameters",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "IdentityProperties"
        }
      },
      adminUserEnabled: {
        serializedName: "properties.adminUserEnabled",
        type: {
          name: "Boolean"
        }
      },
      networkRuleSet: {
        serializedName: "properties.networkRuleSet",
        type: {
          name: "Composite",
          className: "NetworkRuleSet"
        }
      },
      policies: {
        serializedName: "properties.policies",
        type: {
          name: "Composite",
          className: "Policies"
        }
      },
      encryption: {
        serializedName: "properties.encryption",
        type: {
          name: "Composite",
          className: "EncryptionProperty"
        }
      },
      dataEndpointEnabled: {
        serializedName: "properties.dataEndpointEnabled",
        type: {
          name: "Boolean"
        }
      },
      publicNetworkAccess: {
        serializedName: "properties.publicNetworkAccess",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegistryPassword: msRest.CompositeMapper = {
  serializedName: "RegistryPassword",
  type: {
    name: "Composite",
    className: "RegistryPassword",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "Enum",
          allowedValues: [
            "password",
            "password2"
          ]
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegistryListCredentialsResult: msRest.CompositeMapper = {
  serializedName: "RegistryListCredentialsResult",
  type: {
    name: "Composite",
    className: "RegistryListCredentialsResult",
    modelProperties: {
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      },
      passwords: {
        serializedName: "passwords",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RegistryPassword"
            }
          }
        }
      }
    }
  }
};

export const RegenerateCredentialParameters: msRest.CompositeMapper = {
  serializedName: "RegenerateCredentialParameters",
  type: {
    name: "Composite",
    className: "RegenerateCredentialParameters",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "Enum",
          allowedValues: [
            "password",
            "password2"
          ]
        }
      }
    }
  }
};

export const RegistryUsage: msRest.CompositeMapper = {
  serializedName: "RegistryUsage",
  type: {
    name: "Composite",
    className: "RegistryUsage",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      limit: {
        serializedName: "limit",
        type: {
          name: "Number"
        }
      },
      currentValue: {
        serializedName: "currentValue",
        type: {
          name: "Number"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegistryUsageListResult: msRest.CompositeMapper = {
  serializedName: "RegistryUsageListResult",
  type: {
    name: "Composite",
    className: "RegistryUsageListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RegistryUsage"
            }
          }
        }
      }
    }
  }
};

export const PrivateLinkResource: msRest.CompositeMapper = {
  serializedName: "PrivateLinkResource",
  type: {
    name: "Composite",
    className: "PrivateLinkResource",
    modelProperties: {
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      groupId: {
        serializedName: "properties.groupId",
        type: {
          name: "String"
        }
      },
      requiredMembers: {
        serializedName: "properties.requiredMembers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      requiredZoneNames: {
        serializedName: "properties.requiredZoneNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Replication: msRest.CompositeMapper = {
  serializedName: "Replication",
  type: {
    name: "Composite",
    className: "Replication",
    modelProperties: {
      ...Resource.type.modelProperties,
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "properties.status",
        type: {
          name: "Composite",
          className: "Status"
        }
      },
      regionEndpointEnabled: {
        serializedName: "properties.regionEndpointEnabled",
        defaultValue: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ReplicationUpdateParameters: msRest.CompositeMapper = {
  serializedName: "ReplicationUpdateParameters",
  type: {
    name: "Composite",
    className: "ReplicationUpdateParameters",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      regionEndpointEnabled: {
        serializedName: "properties.regionEndpointEnabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Webhook: msRest.CompositeMapper = {
  serializedName: "Webhook",
  type: {
    name: "Composite",
    className: "Webhook",
    modelProperties: {
      ...Resource.type.modelProperties,
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "properties.scope",
        type: {
          name: "String"
        }
      },
      actions: {
        required: true,
        serializedName: "properties.actions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebhookCreateParameters: msRest.CompositeMapper = {
  serializedName: "WebhookCreateParameters",
  type: {
    name: "Composite",
    className: "WebhookCreateParameters",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      serviceUri: {
        required: true,
        serializedName: "properties.serviceUri",
        type: {
          name: "String"
        }
      },
      customHeaders: {
        serializedName: "properties.customHeaders",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "properties.scope",
        type: {
          name: "String"
        }
      },
      actions: {
        required: true,
        serializedName: "properties.actions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const WebhookUpdateParameters: msRest.CompositeMapper = {
  serializedName: "WebhookUpdateParameters",
  type: {
    name: "Composite",
    className: "WebhookUpdateParameters",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      serviceUri: {
        serializedName: "properties.serviceUri",
        type: {
          name: "String"
        }
      },
      customHeaders: {
        serializedName: "properties.customHeaders",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "properties.scope",
        type: {
          name: "String"
        }
      },
      actions: {
        serializedName: "properties.actions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const EventInfo: msRest.CompositeMapper = {
  serializedName: "EventInfo",
  type: {
    name: "Composite",
    className: "EventInfo",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CallbackConfig: msRest.CompositeMapper = {
  serializedName: "CallbackConfig",
  type: {
    name: "Composite",
    className: "CallbackConfig",
    modelProperties: {
      serviceUri: {
        required: true,
        serializedName: "serviceUri",
        type: {
          name: "String"
        }
      },
      customHeaders: {
        serializedName: "customHeaders",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Target: msRest.CompositeMapper = {
  serializedName: "Target",
  type: {
    name: "Composite",
    className: "Target",
    modelProperties: {
      mediaType: {
        serializedName: "mediaType",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      digest: {
        serializedName: "digest",
        type: {
          name: "String"
        }
      },
      length: {
        serializedName: "length",
        type: {
          name: "Number"
        }
      },
      repository: {
        serializedName: "repository",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      tag: {
        serializedName: "tag",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Request: msRest.CompositeMapper = {
  serializedName: "Request",
  type: {
    name: "Composite",
    className: "Request",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      addr: {
        serializedName: "addr",
        type: {
          name: "String"
        }
      },
      host: {
        serializedName: "host",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      useragent: {
        serializedName: "useragent",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Actor: msRest.CompositeMapper = {
  serializedName: "Actor",
  type: {
    name: "Composite",
    className: "Actor",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Source: msRest.CompositeMapper = {
  serializedName: "Source",
  type: {
    name: "Composite",
    className: "Source",
    modelProperties: {
      addr: {
        serializedName: "addr",
        type: {
          name: "String"
        }
      },
      instanceID: {
        serializedName: "instanceID",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventContent: msRest.CompositeMapper = {
  serializedName: "EventContent",
  type: {
    name: "Composite",
    className: "EventContent",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      action: {
        serializedName: "action",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "Composite",
          className: "Target"
        }
      },
      request: {
        serializedName: "request",
        type: {
          name: "Composite",
          className: "Request"
        }
      },
      actor: {
        serializedName: "actor",
        type: {
          name: "Composite",
          className: "Actor"
        }
      },
      source: {
        serializedName: "source",
        type: {
          name: "Composite",
          className: "Source"
        }
      }
    }
  }
};

export const EventRequestMessage: msRest.CompositeMapper = {
  serializedName: "EventRequestMessage",
  type: {
    name: "Composite",
    className: "EventRequestMessage",
    modelProperties: {
      content: {
        serializedName: "content",
        type: {
          name: "Composite",
          className: "EventContent"
        }
      },
      headers: {
        serializedName: "headers",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      requestUri: {
        serializedName: "requestUri",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventResponseMessage: msRest.CompositeMapper = {
  serializedName: "EventResponseMessage",
  type: {
    name: "Composite",
    className: "EventResponseMessage",
    modelProperties: {
      content: {
        serializedName: "content",
        type: {
          name: "String"
        }
      },
      headers: {
        serializedName: "headers",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      reasonPhrase: {
        serializedName: "reasonPhrase",
        type: {
          name: "String"
        }
      },
      statusCode: {
        serializedName: "statusCode",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Event: msRest.CompositeMapper = {
  serializedName: "Event",
  type: {
    name: "Composite",
    className: "Event",
    modelProperties: {
      ...EventInfo.type.modelProperties,
      eventRequestMessage: {
        serializedName: "eventRequestMessage",
        type: {
          name: "Composite",
          className: "EventRequestMessage"
        }
      },
      eventResponseMessage: {
        serializedName: "eventResponseMessage",
        type: {
          name: "Composite",
          className: "EventResponseMessage"
        }
      }
    }
  }
};

export const AgentPool: msRest.CompositeMapper = {
  serializedName: "AgentPool",
  type: {
    name: "Composite",
    className: "AgentPool",
    modelProperties: {
      ...Resource.type.modelProperties,
      count: {
        serializedName: "properties.count",
        type: {
          name: "Number"
        }
      },
      tier: {
        serializedName: "properties.tier",
        type: {
          name: "String"
        }
      },
      os: {
        serializedName: "properties.os",
        type: {
          name: "String"
        }
      },
      virtualNetworkSubnetResourceId: {
        serializedName: "properties.virtualNetworkSubnetResourceId",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AgentPoolUpdateParameters: msRest.CompositeMapper = {
  serializedName: "AgentPoolUpdateParameters",
  type: {
    name: "Composite",
    className: "AgentPoolUpdateParameters",
    modelProperties: {
      count: {
        serializedName: "properties.count",
        type: {
          name: "Number"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AgentPoolQueueStatus: msRest.CompositeMapper = {
  serializedName: "AgentPoolQueueStatus",
  type: {
    name: "Composite",
    className: "AgentPoolQueueStatus",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const RunRequest: msRest.CompositeMapper = {
  serializedName: "RunRequest",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    uberParent: "RunRequest",
    className: "RunRequest",
    modelProperties: {
      isArchiveEnabled: {
        serializedName: "isArchiveEnabled",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      agentPoolName: {
        serializedName: "agentPoolName",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageDescriptor: msRest.CompositeMapper = {
  serializedName: "ImageDescriptor",
  type: {
    name: "Composite",
    className: "ImageDescriptor",
    modelProperties: {
      registry: {
        serializedName: "registry",
        type: {
          name: "String"
        }
      },
      repository: {
        serializedName: "repository",
        type: {
          name: "String"
        }
      },
      tag: {
        serializedName: "tag",
        type: {
          name: "String"
        }
      },
      digest: {
        serializedName: "digest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageUpdateTrigger: msRest.CompositeMapper = {
  serializedName: "ImageUpdateTrigger",
  type: {
    name: "Composite",
    className: "ImageUpdateTrigger",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      images: {
        serializedName: "images",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ImageDescriptor"
            }
          }
        }
      }
    }
  }
};

export const SourceTriggerDescriptor: msRest.CompositeMapper = {
  serializedName: "SourceTriggerDescriptor",
  type: {
    name: "Composite",
    className: "SourceTriggerDescriptor",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      eventType: {
        serializedName: "eventType",
        type: {
          name: "String"
        }
      },
      commitId: {
        serializedName: "commitId",
        type: {
          name: "String"
        }
      },
      pullRequestId: {
        serializedName: "pullRequestId",
        type: {
          name: "String"
        }
      },
      repositoryUrl: {
        serializedName: "repositoryUrl",
        type: {
          name: "String"
        }
      },
      branchName: {
        serializedName: "branchName",
        type: {
          name: "String"
        }
      },
      providerType: {
        serializedName: "providerType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TimerTriggerDescriptor: msRest.CompositeMapper = {
  serializedName: "TimerTriggerDescriptor",
  type: {
    name: "Composite",
    className: "TimerTriggerDescriptor",
    modelProperties: {
      timerTriggerName: {
        serializedName: "timerTriggerName",
        type: {
          name: "String"
        }
      },
      scheduleOccurrence: {
        serializedName: "scheduleOccurrence",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PlatformProperties: msRest.CompositeMapper = {
  serializedName: "PlatformProperties",
  type: {
    name: "Composite",
    className: "PlatformProperties",
    modelProperties: {
      os: {
        required: true,
        serializedName: "os",
        type: {
          name: "String"
        }
      },
      architecture: {
        serializedName: "architecture",
        type: {
          name: "String"
        }
      },
      variant: {
        serializedName: "variant",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AgentProperties: msRest.CompositeMapper = {
  serializedName: "AgentProperties",
  type: {
    name: "Composite",
    className: "AgentProperties",
    modelProperties: {
      cpu: {
        serializedName: "cpu",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Run: msRest.CompositeMapper = {
  serializedName: "Run",
  type: {
    name: "Composite",
    className: "Run",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      runId: {
        serializedName: "properties.runId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      lastUpdatedTime: {
        serializedName: "properties.lastUpdatedTime",
        type: {
          name: "DateTime"
        }
      },
      runType: {
        serializedName: "properties.runType",
        type: {
          name: "String"
        }
      },
      agentPoolName: {
        serializedName: "properties.agentPoolName",
        type: {
          name: "String"
        }
      },
      createTime: {
        serializedName: "properties.createTime",
        type: {
          name: "DateTime"
        }
      },
      startTime: {
        serializedName: "properties.startTime",
        type: {
          name: "DateTime"
        }
      },
      finishTime: {
        serializedName: "properties.finishTime",
        type: {
          name: "DateTime"
        }
      },
      outputImages: {
        serializedName: "properties.outputImages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ImageDescriptor"
            }
          }
        }
      },
      task: {
        serializedName: "properties.task",
        type: {
          name: "String"
        }
      },
      imageUpdateTrigger: {
        serializedName: "properties.imageUpdateTrigger",
        type: {
          name: "Composite",
          className: "ImageUpdateTrigger"
        }
      },
      sourceTrigger: {
        serializedName: "properties.sourceTrigger",
        type: {
          name: "Composite",
          className: "SourceTriggerDescriptor"
        }
      },
      timerTrigger: {
        serializedName: "properties.timerTrigger",
        type: {
          name: "Composite",
          className: "TimerTriggerDescriptor"
        }
      },
      platform: {
        serializedName: "properties.platform",
        type: {
          name: "Composite",
          className: "PlatformProperties"
        }
      },
      agentConfiguration: {
        serializedName: "properties.agentConfiguration",
        type: {
          name: "Composite",
          className: "AgentProperties"
        }
      },
      sourceRegistryAuth: {
        serializedName: "properties.sourceRegistryAuth",
        type: {
          name: "String"
        }
      },
      customRegistries: {
        serializedName: "properties.customRegistries",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      runErrorMessage: {
        readOnly: true,
        serializedName: "properties.runErrorMessage",
        type: {
          name: "String"
        }
      },
      updateTriggerToken: {
        serializedName: "properties.updateTriggerToken",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      isArchiveEnabled: {
        serializedName: "properties.isArchiveEnabled",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const SourceUploadDefinition: msRest.CompositeMapper = {
  serializedName: "SourceUploadDefinition",
  type: {
    name: "Composite",
    className: "SourceUploadDefinition",
    modelProperties: {
      uploadUrl: {
        serializedName: "uploadUrl",
        type: {
          name: "String"
        }
      },
      relativePath: {
        serializedName: "relativePath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RunFilter: msRest.CompositeMapper = {
  serializedName: "RunFilter",
  type: {
    name: "Composite",
    className: "RunFilter",
    modelProperties: {
      runId: {
        serializedName: "runId",
        type: {
          name: "String"
        }
      },
      runType: {
        serializedName: "runType",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      createTime: {
        serializedName: "createTime",
        type: {
          name: "DateTime"
        }
      },
      finishTime: {
        serializedName: "finishTime",
        type: {
          name: "DateTime"
        }
      },
      outputImageManifests: {
        serializedName: "outputImageManifests",
        type: {
          name: "String"
        }
      },
      isArchiveEnabled: {
        serializedName: "isArchiveEnabled",
        type: {
          name: "Boolean"
        }
      },
      taskName: {
        serializedName: "taskName",
        type: {
          name: "String"
        }
      },
      agentPoolName: {
        serializedName: "agentPoolName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RunUpdateParameters: msRest.CompositeMapper = {
  serializedName: "RunUpdateParameters",
  type: {
    name: "Composite",
    className: "RunUpdateParameters",
    modelProperties: {
      isArchiveEnabled: {
        serializedName: "isArchiveEnabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const RunGetLogResult: msRest.CompositeMapper = {
  serializedName: "RunGetLogResult",
  type: {
    name: "Composite",
    className: "RunGetLogResult",
    modelProperties: {
      logLink: {
        serializedName: "logLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TaskRun: msRest.CompositeMapper = {
  serializedName: "TaskRun",
  type: {
    name: "Composite",
    className: "TaskRun",
    modelProperties: {
      ...Resource.type.modelProperties,
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "IdentityProperties"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      runRequest: {
        serializedName: "properties.runRequest",
        type: {
          name: "Composite",
          className: "RunRequest"
        }
      },
      runResult: {
        readOnly: true,
        serializedName: "properties.runResult",
        type: {
          name: "Composite",
          className: "Run"
        }
      },
      forceUpdateTag: {
        serializedName: "properties.forceUpdateTag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TaskRunUpdateParameters: msRest.CompositeMapper = {
  serializedName: "TaskRunUpdateParameters",
  type: {
    name: "Composite",
    className: "TaskRunUpdateParameters",
    modelProperties: {
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "IdentityProperties"
        }
      },
      runRequest: {
        serializedName: "properties.runRequest",
        type: {
          name: "Composite",
          className: "RunRequest"
        }
      },
      forceUpdateTag: {
        serializedName: "properties.forceUpdateTag",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const BaseImageDependency: msRest.CompositeMapper = {
  serializedName: "BaseImageDependency",
  type: {
    name: "Composite",
    className: "BaseImageDependency",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      registry: {
        serializedName: "registry",
        type: {
          name: "String"
        }
      },
      repository: {
        serializedName: "repository",
        type: {
          name: "String"
        }
      },
      tag: {
        serializedName: "tag",
        type: {
          name: "String"
        }
      },
      digest: {
        serializedName: "digest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TaskStepProperties: msRest.CompositeMapper = {
  serializedName: "TaskStepProperties",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    uberParent: "TaskStepProperties",
    className: "TaskStepProperties",
    modelProperties: {
      baseImageDependencies: {
        readOnly: true,
        serializedName: "baseImageDependencies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BaseImageDependency"
            }
          }
        }
      },
      contextPath: {
        serializedName: "contextPath",
        type: {
          name: "String"
        }
      },
      contextAccessToken: {
        serializedName: "contextAccessToken",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TimerTrigger: msRest.CompositeMapper = {
  serializedName: "TimerTrigger",
  type: {
    name: "Composite",
    className: "TimerTrigger",
    modelProperties: {
      schedule: {
        required: true,
        serializedName: "schedule",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        defaultValue: 'Enabled',
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AuthInfo: msRest.CompositeMapper = {
  serializedName: "AuthInfo",
  type: {
    name: "Composite",
    className: "AuthInfo",
    modelProperties: {
      tokenType: {
        required: true,
        serializedName: "tokenType",
        type: {
          name: "String"
        }
      },
      token: {
        required: true,
        serializedName: "token",
        type: {
          name: "String"
        }
      },
      refreshToken: {
        serializedName: "refreshToken",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "String"
        }
      },
      expiresIn: {
        serializedName: "expiresIn",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const SourceProperties: msRest.CompositeMapper = {
  serializedName: "SourceProperties",
  type: {
    name: "Composite",
    className: "SourceProperties",
    modelProperties: {
      sourceControlType: {
        required: true,
        serializedName: "sourceControlType",
        type: {
          name: "String"
        }
      },
      repositoryUrl: {
        required: true,
        serializedName: "repositoryUrl",
        type: {
          name: "String"
        }
      },
      branch: {
        serializedName: "branch",
        type: {
          name: "String"
        }
      },
      sourceControlAuthProperties: {
        serializedName: "sourceControlAuthProperties",
        type: {
          name: "Composite",
          className: "AuthInfo"
        }
      }
    }
  }
};

export const SourceTrigger: msRest.CompositeMapper = {
  serializedName: "SourceTrigger",
  type: {
    name: "Composite",
    className: "SourceTrigger",
    modelProperties: {
      sourceRepository: {
        required: true,
        serializedName: "sourceRepository",
        type: {
          name: "Composite",
          className: "SourceProperties"
        }
      },
      sourceTriggerEvents: {
        required: true,
        serializedName: "sourceTriggerEvents",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      status: {
        serializedName: "status",
        defaultValue: 'Enabled',
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BaseImageTrigger: msRest.CompositeMapper = {
  serializedName: "BaseImageTrigger",
  type: {
    name: "Composite",
    className: "BaseImageTrigger",
    modelProperties: {
      baseImageTriggerType: {
        required: true,
        serializedName: "baseImageTriggerType",
        type: {
          name: "String"
        }
      },
      updateTriggerEndpoint: {
        serializedName: "updateTriggerEndpoint",
        type: {
          name: "String"
        }
      },
      updateTriggerPayloadType: {
        serializedName: "updateTriggerPayloadType",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        defaultValue: 'Enabled',
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TriggerProperties: msRest.CompositeMapper = {
  serializedName: "TriggerProperties",
  type: {
    name: "Composite",
    className: "TriggerProperties",
    modelProperties: {
      timerTriggers: {
        serializedName: "timerTriggers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TimerTrigger"
            }
          }
        }
      },
      sourceTriggers: {
        serializedName: "sourceTriggers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SourceTrigger"
            }
          }
        }
      },
      baseImageTrigger: {
        serializedName: "baseImageTrigger",
        type: {
          name: "Composite",
          className: "BaseImageTrigger"
        }
      }
    }
  }
};

export const SourceRegistryCredentials: msRest.CompositeMapper = {
  serializedName: "SourceRegistryCredentials",
  type: {
    name: "Composite",
    className: "SourceRegistryCredentials",
    modelProperties: {
      loginMode: {
        serializedName: "loginMode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecretObject: msRest.CompositeMapper = {
  serializedName: "SecretObject",
  type: {
    name: "Composite",
    className: "SecretObject",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomRegistryCredentials: msRest.CompositeMapper = {
  serializedName: "CustomRegistryCredentials",
  type: {
    name: "Composite",
    className: "CustomRegistryCredentials",
    modelProperties: {
      userName: {
        serializedName: "userName",
        type: {
          name: "Composite",
          className: "SecretObject"
        }
      },
      password: {
        serializedName: "password",
        type: {
          name: "Composite",
          className: "SecretObject"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Credentials: msRest.CompositeMapper = {
  serializedName: "Credentials",
  type: {
    name: "Composite",
    className: "Credentials",
    modelProperties: {
      sourceRegistry: {
        serializedName: "sourceRegistry",
        type: {
          name: "Composite",
          className: "SourceRegistryCredentials"
        }
      },
      customRegistries: {
        serializedName: "customRegistries",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "CustomRegistryCredentials"
            }
          }
        }
      }
    }
  }
};

export const Task: msRest.CompositeMapper = {
  serializedName: "Task",
  type: {
    name: "Composite",
    className: "Task",
    modelProperties: {
      ...Resource.type.modelProperties,
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "IdentityProperties"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      creationDate: {
        readOnly: true,
        serializedName: "properties.creationDate",
        type: {
          name: "DateTime"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      platform: {
        required: true,
        serializedName: "properties.platform",
        type: {
          name: "Composite",
          className: "PlatformProperties"
        }
      },
      agentConfiguration: {
        serializedName: "properties.agentConfiguration",
        type: {
          name: "Composite",
          className: "AgentProperties"
        }
      },
      agentPoolName: {
        serializedName: "properties.agentPoolName",
        type: {
          name: "String"
        }
      },
      timeout: {
        serializedName: "properties.timeout",
        defaultValue: 3600,
        constraints: {
          InclusiveMaximum: 28800,
          InclusiveMinimum: 300
        },
        type: {
          name: "Number"
        }
      },
      step: {
        required: true,
        serializedName: "properties.step",
        type: {
          name: "Composite",
          className: "TaskStepProperties"
        }
      },
      trigger: {
        serializedName: "properties.trigger",
        type: {
          name: "Composite",
          className: "TriggerProperties"
        }
      },
      credentials: {
        serializedName: "properties.credentials",
        type: {
          name: "Composite",
          className: "Credentials"
        }
      }
    }
  }
};

export const PlatformUpdateParameters: msRest.CompositeMapper = {
  serializedName: "PlatformUpdateParameters",
  type: {
    name: "Composite",
    className: "PlatformUpdateParameters",
    modelProperties: {
      os: {
        serializedName: "os",
        type: {
          name: "String"
        }
      },
      architecture: {
        serializedName: "architecture",
        type: {
          name: "String"
        }
      },
      variant: {
        serializedName: "variant",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TaskStepUpdateParameters: msRest.CompositeMapper = {
  serializedName: "TaskStepUpdateParameters",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    uberParent: "TaskStepUpdateParameters",
    className: "TaskStepUpdateParameters",
    modelProperties: {
      contextPath: {
        serializedName: "contextPath",
        type: {
          name: "String"
        }
      },
      contextAccessToken: {
        serializedName: "contextAccessToken",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TimerTriggerUpdateParameters: msRest.CompositeMapper = {
  serializedName: "TimerTriggerUpdateParameters",
  type: {
    name: "Composite",
    className: "TimerTriggerUpdateParameters",
    modelProperties: {
      schedule: {
        serializedName: "schedule",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        defaultValue: 'Enabled',
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AuthInfoUpdateParameters: msRest.CompositeMapper = {
  serializedName: "AuthInfoUpdateParameters",
  type: {
    name: "Composite",
    className: "AuthInfoUpdateParameters",
    modelProperties: {
      tokenType: {
        serializedName: "tokenType",
        type: {
          name: "String"
        }
      },
      token: {
        serializedName: "token",
        type: {
          name: "String"
        }
      },
      refreshToken: {
        serializedName: "refreshToken",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "String"
        }
      },
      expiresIn: {
        serializedName: "expiresIn",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const SourceUpdateParameters: msRest.CompositeMapper = {
  serializedName: "SourceUpdateParameters",
  type: {
    name: "Composite",
    className: "SourceUpdateParameters",
    modelProperties: {
      sourceControlType: {
        serializedName: "sourceControlType",
        type: {
          name: "String"
        }
      },
      repositoryUrl: {
        serializedName: "repositoryUrl",
        type: {
          name: "String"
        }
      },
      branch: {
        serializedName: "branch",
        type: {
          name: "String"
        }
      },
      sourceControlAuthProperties: {
        serializedName: "sourceControlAuthProperties",
        type: {
          name: "Composite",
          className: "AuthInfoUpdateParameters"
        }
      }
    }
  }
};

export const SourceTriggerUpdateParameters: msRest.CompositeMapper = {
  serializedName: "SourceTriggerUpdateParameters",
  type: {
    name: "Composite",
    className: "SourceTriggerUpdateParameters",
    modelProperties: {
      sourceRepository: {
        serializedName: "sourceRepository",
        type: {
          name: "Composite",
          className: "SourceUpdateParameters"
        }
      },
      sourceTriggerEvents: {
        serializedName: "sourceTriggerEvents",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      status: {
        serializedName: "status",
        defaultValue: 'Enabled',
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BaseImageTriggerUpdateParameters: msRest.CompositeMapper = {
  serializedName: "BaseImageTriggerUpdateParameters",
  type: {
    name: "Composite",
    className: "BaseImageTriggerUpdateParameters",
    modelProperties: {
      baseImageTriggerType: {
        serializedName: "baseImageTriggerType",
        type: {
          name: "String"
        }
      },
      updateTriggerEndpoint: {
        serializedName: "updateTriggerEndpoint",
        type: {
          name: "String"
        }
      },
      updateTriggerPayloadType: {
        serializedName: "updateTriggerPayloadType",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        defaultValue: 'Enabled',
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TriggerUpdateParameters: msRest.CompositeMapper = {
  serializedName: "TriggerUpdateParameters",
  type: {
    name: "Composite",
    className: "TriggerUpdateParameters",
    modelProperties: {
      timerTriggers: {
        serializedName: "timerTriggers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TimerTriggerUpdateParameters"
            }
          }
        }
      },
      sourceTriggers: {
        serializedName: "sourceTriggers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SourceTriggerUpdateParameters"
            }
          }
        }
      },
      baseImageTrigger: {
        serializedName: "baseImageTrigger",
        type: {
          name: "Composite",
          className: "BaseImageTriggerUpdateParameters"
        }
      }
    }
  }
};

export const TaskUpdateParameters: msRest.CompositeMapper = {
  serializedName: "TaskUpdateParameters",
  type: {
    name: "Composite",
    className: "TaskUpdateParameters",
    modelProperties: {
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "IdentityProperties"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "properties.platform",
        type: {
          name: "Composite",
          className: "PlatformUpdateParameters"
        }
      },
      agentConfiguration: {
        serializedName: "properties.agentConfiguration",
        type: {
          name: "Composite",
          className: "AgentProperties"
        }
      },
      agentPoolName: {
        serializedName: "properties.agentPoolName",
        type: {
          name: "String"
        }
      },
      timeout: {
        serializedName: "properties.timeout",
        type: {
          name: "Number"
        }
      },
      step: {
        serializedName: "properties.step",
        type: {
          name: "Composite",
          className: "TaskStepUpdateParameters"
        }
      },
      trigger: {
        serializedName: "properties.trigger",
        type: {
          name: "Composite",
          className: "TriggerUpdateParameters"
        }
      },
      credentials: {
        serializedName: "properties.credentials",
        type: {
          name: "Composite",
          className: "Credentials"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const InnerErrorDescription: msRest.CompositeMapper = {
  serializedName: "InnerErrorDescription",
  type: {
    name: "Composite",
    className: "InnerErrorDescription",
    modelProperties: {
      code: {
        required: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        required: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponseBody: msRest.CompositeMapper = {
  serializedName: "ErrorResponseBody",
  type: {
    name: "Composite",
    className: "ErrorResponseBody",
    modelProperties: {
      code: {
        required: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        required: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Composite",
          className: "InnerErrorDescription"
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorResponseBody"
        }
      }
    }
  }
};

export const Argument: msRest.CompositeMapper = {
  serializedName: "Argument",
  type: {
    name: "Composite",
    className: "Argument",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      isSecret: {
        serializedName: "isSecret",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DockerBuildRequest: msRest.CompositeMapper = {
  serializedName: "DockerBuildRequest",
  type: {
    name: "Composite",
    polymorphicDiscriminator: RunRequest.type.polymorphicDiscriminator,
    uberParent: "RunRequest",
    className: "DockerBuildRequest",
    modelProperties: {
      ...RunRequest.type.modelProperties,
      imageNames: {
        serializedName: "imageNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      isPushEnabled: {
        serializedName: "isPushEnabled",
        defaultValue: true,
        type: {
          name: "Boolean"
        }
      },
      noCache: {
        serializedName: "noCache",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      dockerFilePath: {
        required: true,
        serializedName: "dockerFilePath",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      argumentsProperty: {
        serializedName: "arguments",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Argument"
            }
          }
        }
      },
      timeout: {
        serializedName: "timeout",
        defaultValue: 3600,
        constraints: {
          InclusiveMaximum: 28800,
          InclusiveMinimum: 300
        },
        type: {
          name: "Number"
        }
      },
      platform: {
        required: true,
        serializedName: "platform",
        type: {
          name: "Composite",
          className: "PlatformProperties"
        }
      },
      agentConfiguration: {
        serializedName: "agentConfiguration",
        type: {
          name: "Composite",
          className: "AgentProperties"
        }
      },
      sourceLocation: {
        serializedName: "sourceLocation",
        type: {
          name: "String"
        }
      },
      credentials: {
        serializedName: "credentials",
        type: {
          name: "Composite",
          className: "Credentials"
        }
      }
    }
  }
};

export const SetValue: msRest.CompositeMapper = {
  serializedName: "SetValue",
  type: {
    name: "Composite",
    className: "SetValue",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      isSecret: {
        serializedName: "isSecret",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const FileTaskRunRequest: msRest.CompositeMapper = {
  serializedName: "FileTaskRunRequest",
  type: {
    name: "Composite",
    polymorphicDiscriminator: RunRequest.type.polymorphicDiscriminator,
    uberParent: "RunRequest",
    className: "FileTaskRunRequest",
    modelProperties: {
      ...RunRequest.type.modelProperties,
      taskFilePath: {
        required: true,
        serializedName: "taskFilePath",
        type: {
          name: "String"
        }
      },
      valuesFilePath: {
        serializedName: "valuesFilePath",
        type: {
          name: "String"
        }
      },
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SetValue"
            }
          }
        }
      },
      timeout: {
        serializedName: "timeout",
        defaultValue: 3600,
        constraints: {
          InclusiveMaximum: 28800,
          InclusiveMinimum: 300
        },
        type: {
          name: "Number"
        }
      },
      platform: {
        required: true,
        serializedName: "platform",
        type: {
          name: "Composite",
          className: "PlatformProperties"
        }
      },
      agentConfiguration: {
        serializedName: "agentConfiguration",
        type: {
          name: "Composite",
          className: "AgentProperties"
        }
      },
      sourceLocation: {
        serializedName: "sourceLocation",
        type: {
          name: "String"
        }
      },
      credentials: {
        serializedName: "credentials",
        type: {
          name: "Composite",
          className: "Credentials"
        }
      }
    }
  }
};

export const OverrideTaskStepProperties: msRest.CompositeMapper = {
  serializedName: "OverrideTaskStepProperties",
  type: {
    name: "Composite",
    className: "OverrideTaskStepProperties",
    modelProperties: {
      contextPath: {
        serializedName: "contextPath",
        type: {
          name: "String"
        }
      },
      file: {
        serializedName: "file",
        type: {
          name: "String"
        }
      },
      argumentsProperty: {
        serializedName: "arguments",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Argument"
            }
          }
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SetValue"
            }
          }
        }
      },
      updateTriggerToken: {
        serializedName: "updateTriggerToken",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TaskRunRequest: msRest.CompositeMapper = {
  serializedName: "TaskRunRequest",
  type: {
    name: "Composite",
    polymorphicDiscriminator: RunRequest.type.polymorphicDiscriminator,
    uberParent: "RunRequest",
    className: "TaskRunRequest",
    modelProperties: {
      ...RunRequest.type.modelProperties,
      taskId: {
        required: true,
        serializedName: "taskId",
        type: {
          name: "String"
        }
      },
      overrideTaskStepProperties: {
        serializedName: "overrideTaskStepProperties",
        type: {
          name: "Composite",
          className: "OverrideTaskStepProperties"
        }
      }
    }
  }
};

export const EncodedTaskRunRequest: msRest.CompositeMapper = {
  serializedName: "EncodedTaskRunRequest",
  type: {
    name: "Composite",
    polymorphicDiscriminator: RunRequest.type.polymorphicDiscriminator,
    uberParent: "RunRequest",
    className: "EncodedTaskRunRequest",
    modelProperties: {
      ...RunRequest.type.modelProperties,
      encodedTaskContent: {
        required: true,
        serializedName: "encodedTaskContent",
        type: {
          name: "String"
        }
      },
      encodedValuesContent: {
        serializedName: "encodedValuesContent",
        type: {
          name: "String"
        }
      },
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SetValue"
            }
          }
        }
      },
      timeout: {
        serializedName: "timeout",
        defaultValue: 3600,
        constraints: {
          InclusiveMaximum: 28800,
          InclusiveMinimum: 300
        },
        type: {
          name: "Number"
        }
      },
      platform: {
        required: true,
        serializedName: "platform",
        type: {
          name: "Composite",
          className: "PlatformProperties"
        }
      },
      agentConfiguration: {
        serializedName: "agentConfiguration",
        type: {
          name: "Composite",
          className: "AgentProperties"
        }
      },
      sourceLocation: {
        serializedName: "sourceLocation",
        type: {
          name: "String"
        }
      },
      credentials: {
        serializedName: "credentials",
        type: {
          name: "Composite",
          className: "Credentials"
        }
      }
    }
  }
};

export const DockerBuildStep: msRest.CompositeMapper = {
  serializedName: "Docker",
  type: {
    name: "Composite",
    polymorphicDiscriminator: TaskStepProperties.type.polymorphicDiscriminator,
    uberParent: "TaskStepProperties",
    className: "DockerBuildStep",
    modelProperties: {
      ...TaskStepProperties.type.modelProperties,
      imageNames: {
        serializedName: "imageNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      isPushEnabled: {
        serializedName: "isPushEnabled",
        defaultValue: true,
        type: {
          name: "Boolean"
        }
      },
      noCache: {
        serializedName: "noCache",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      dockerFilePath: {
        required: true,
        serializedName: "dockerFilePath",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      argumentsProperty: {
        serializedName: "arguments",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Argument"
            }
          }
        }
      }
    }
  }
};

export const FileTaskStep: msRest.CompositeMapper = {
  serializedName: "FileTask",
  type: {
    name: "Composite",
    polymorphicDiscriminator: TaskStepProperties.type.polymorphicDiscriminator,
    uberParent: "TaskStepProperties",
    className: "FileTaskStep",
    modelProperties: {
      ...TaskStepProperties.type.modelProperties,
      taskFilePath: {
        required: true,
        serializedName: "taskFilePath",
        type: {
          name: "String"
        }
      },
      valuesFilePath: {
        serializedName: "valuesFilePath",
        type: {
          name: "String"
        }
      },
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SetValue"
            }
          }
        }
      }
    }
  }
};

export const EncodedTaskStep: msRest.CompositeMapper = {
  serializedName: "EncodedTask",
  type: {
    name: "Composite",
    polymorphicDiscriminator: TaskStepProperties.type.polymorphicDiscriminator,
    uberParent: "TaskStepProperties",
    className: "EncodedTaskStep",
    modelProperties: {
      ...TaskStepProperties.type.modelProperties,
      encodedTaskContent: {
        required: true,
        serializedName: "encodedTaskContent",
        type: {
          name: "String"
        }
      },
      encodedValuesContent: {
        serializedName: "encodedValuesContent",
        type: {
          name: "String"
        }
      },
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SetValue"
            }
          }
        }
      }
    }
  }
};

export const DockerBuildStepUpdateParameters: msRest.CompositeMapper = {
  serializedName: "Docker",
  type: {
    name: "Composite",
    polymorphicDiscriminator: TaskStepUpdateParameters.type.polymorphicDiscriminator,
    uberParent: "TaskStepUpdateParameters",
    className: "DockerBuildStepUpdateParameters",
    modelProperties: {
      ...TaskStepUpdateParameters.type.modelProperties,
      imageNames: {
        serializedName: "imageNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      isPushEnabled: {
        serializedName: "isPushEnabled",
        type: {
          name: "Boolean"
        }
      },
      noCache: {
        serializedName: "noCache",
        type: {
          name: "Boolean"
        }
      },
      dockerFilePath: {
        serializedName: "dockerFilePath",
        type: {
          name: "String"
        }
      },
      argumentsProperty: {
        serializedName: "arguments",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Argument"
            }
          }
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileTaskStepUpdateParameters: msRest.CompositeMapper = {
  serializedName: "FileTask",
  type: {
    name: "Composite",
    polymorphicDiscriminator: TaskStepUpdateParameters.type.polymorphicDiscriminator,
    uberParent: "TaskStepUpdateParameters",
    className: "FileTaskStepUpdateParameters",
    modelProperties: {
      ...TaskStepUpdateParameters.type.modelProperties,
      taskFilePath: {
        serializedName: "taskFilePath",
        type: {
          name: "String"
        }
      },
      valuesFilePath: {
        serializedName: "valuesFilePath",
        type: {
          name: "String"
        }
      },
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SetValue"
            }
          }
        }
      }
    }
  }
};

export const EncodedTaskStepUpdateParameters: msRest.CompositeMapper = {
  serializedName: "EncodedTask",
  type: {
    name: "Composite",
    polymorphicDiscriminator: TaskStepUpdateParameters.type.polymorphicDiscriminator,
    uberParent: "TaskStepUpdateParameters",
    className: "EncodedTaskStepUpdateParameters",
    modelProperties: {
      ...TaskStepUpdateParameters.type.modelProperties,
      encodedTaskContent: {
        serializedName: "encodedTaskContent",
        type: {
          name: "String"
        }
      },
      encodedValuesContent: {
        serializedName: "encodedValuesContent",
        type: {
          name: "String"
        }
      },
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SetValue"
            }
          }
        }
      }
    }
  }
};

export const ScopeMap: msRest.CompositeMapper = {
  serializedName: "ScopeMap",
  type: {
    name: "Composite",
    className: "ScopeMap",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      scopeMapType: {
        readOnly: true,
        serializedName: "properties.type",
        type: {
          name: "String"
        }
      },
      creationDate: {
        readOnly: true,
        serializedName: "properties.creationDate",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      actions: {
        required: true,
        serializedName: "properties.actions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ScopeMapUpdateParameters: msRest.CompositeMapper = {
  serializedName: "ScopeMapUpdateParameters",
  type: {
    name: "Composite",
    className: "ScopeMapUpdateParameters",
    modelProperties: {
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      actions: {
        serializedName: "properties.actions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ActiveDirectoryObject: msRest.CompositeMapper = {
  serializedName: "ActiveDirectoryObject",
  type: {
    name: "Composite",
    className: "ActiveDirectoryObject",
    modelProperties: {
      objectId: {
        serializedName: "objectId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TokenCertificate: msRest.CompositeMapper = {
  serializedName: "TokenCertificate",
  type: {
    name: "Composite",
    className: "TokenCertificate",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      expiry: {
        serializedName: "expiry",
        type: {
          name: "DateTime"
        }
      },
      thumbprint: {
        serializedName: "thumbprint",
        type: {
          name: "String"
        }
      },
      encodedPemCertificate: {
        serializedName: "encodedPemCertificate",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TokenPassword: msRest.CompositeMapper = {
  serializedName: "TokenPassword",
  type: {
    name: "Composite",
    className: "TokenPassword",
    modelProperties: {
      creationTime: {
        serializedName: "creationTime",
        type: {
          name: "DateTime"
        }
      },
      expiry: {
        serializedName: "expiry",
        type: {
          name: "DateTime"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TokenCredentialsProperties: msRest.CompositeMapper = {
  serializedName: "TokenCredentialsProperties",
  type: {
    name: "Composite",
    className: "TokenCredentialsProperties",
    modelProperties: {
      activeDirectoryObject: {
        serializedName: "activeDirectoryObject",
        type: {
          name: "Composite",
          className: "ActiveDirectoryObject"
        }
      },
      certificates: {
        serializedName: "certificates",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TokenCertificate"
            }
          }
        }
      },
      passwords: {
        serializedName: "passwords",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TokenPassword"
            }
          }
        }
      }
    }
  }
};

export const Token: msRest.CompositeMapper = {
  serializedName: "Token",
  type: {
    name: "Composite",
    className: "Token",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      creationDate: {
        readOnly: true,
        serializedName: "properties.creationDate",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      scopeMapId: {
        serializedName: "properties.scopeMapId",
        type: {
          name: "String"
        }
      },
      credentials: {
        serializedName: "properties.credentials",
        type: {
          name: "Composite",
          className: "TokenCredentialsProperties"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TokenUpdateParameters: msRest.CompositeMapper = {
  serializedName: "TokenUpdateParameters",
  type: {
    name: "Composite",
    className: "TokenUpdateParameters",
    modelProperties: {
      scopeMapId: {
        serializedName: "properties.scopeMapId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      credentials: {
        serializedName: "properties.credentials",
        type: {
          name: "Composite",
          className: "TokenCredentialsProperties"
        }
      }
    }
  }
};

export const GenerateCredentialsParameters: msRest.CompositeMapper = {
  serializedName: "GenerateCredentialsParameters",
  type: {
    name: "Composite",
    className: "GenerateCredentialsParameters",
    modelProperties: {
      tokenId: {
        serializedName: "tokenId",
        type: {
          name: "String"
        }
      },
      expiry: {
        serializedName: "expiry",
        type: {
          name: "DateTime"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GenerateCredentialsResult: msRest.CompositeMapper = {
  serializedName: "GenerateCredentialsResult",
  type: {
    name: "Composite",
    className: "GenerateCredentialsResult",
    modelProperties: {
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      },
      passwords: {
        serializedName: "passwords",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TokenPassword"
            }
          }
        }
      }
    }
  }
};

export const ExportPipelineListResult: msRest.CompositeMapper = {
  serializedName: "ExportPipelineListResult",
  type: {
    name: "Composite",
    className: "ExportPipelineListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExportPipeline"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegistryListResult: msRest.CompositeMapper = {
  serializedName: "RegistryListResult",
  type: {
    name: "Composite",
    className: "RegistryListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Registry"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateLinkResourceListResult: msRest.CompositeMapper = {
  serializedName: "PrivateLinkResourceListResult",
  type: {
    name: "Composite",
    className: "PrivateLinkResourceListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateLinkResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImportPipelineListResult: msRest.CompositeMapper = {
  serializedName: "ImportPipelineListResult",
  type: {
    name: "Composite",
    className: "ImportPipelineListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ImportPipeline"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationDefinition"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PipelineRunListResult: msRest.CompositeMapper = {
  serializedName: "PipelineRunListResult",
  type: {
    name: "Composite",
    className: "PipelineRunListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PipelineRun"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointConnectionListResult: msRest.CompositeMapper = {
  serializedName: "PrivateEndpointConnectionListResult",
  type: {
    name: "Composite",
    className: "PrivateEndpointConnectionListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnection"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReplicationListResult: msRest.CompositeMapper = {
  serializedName: "ReplicationListResult",
  type: {
    name: "Composite",
    className: "ReplicationListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Replication"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebhookListResult: msRest.CompositeMapper = {
  serializedName: "WebhookListResult",
  type: {
    name: "Composite",
    className: "WebhookListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Webhook"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventListResult: msRest.CompositeMapper = {
  serializedName: "EventListResult",
  type: {
    name: "Composite",
    className: "EventListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Event"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AgentPoolListResult: msRest.CompositeMapper = {
  serializedName: "AgentPoolListResult",
  type: {
    name: "Composite",
    className: "AgentPoolListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AgentPool"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RunListResult: msRest.CompositeMapper = {
  serializedName: "RunListResult",
  type: {
    name: "Composite",
    className: "RunListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Run"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TaskRunListResult: msRest.CompositeMapper = {
  serializedName: "TaskRunListResult",
  type: {
    name: "Composite",
    className: "TaskRunListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TaskRun"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TaskListResult: msRest.CompositeMapper = {
  serializedName: "TaskListResult",
  type: {
    name: "Composite",
    className: "TaskListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Task"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ScopeMapListResult: msRest.CompositeMapper = {
  serializedName: "ScopeMapListResult",
  type: {
    name: "Composite",
    className: "ScopeMapListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ScopeMap"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TokenListResult: msRest.CompositeMapper = {
  serializedName: "TokenListResult",
  type: {
    name: "Composite",
    className: "TokenListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Token"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const discriminators = {
  'RunRequest' : RunRequest,
  'TaskStepProperties' : TaskStepProperties,
  'TaskStepUpdateParameters' : TaskStepUpdateParameters,
  'RunRequest.DockerBuildRequest' : DockerBuildRequest,
  'RunRequest.FileTaskRunRequest' : FileTaskRunRequest,
  'RunRequest.TaskRunRequest' : TaskRunRequest,
  'RunRequest.EncodedTaskRunRequest' : EncodedTaskRunRequest,
  'TaskStepProperties.Docker' : DockerBuildStep,
  'TaskStepProperties.FileTask' : FileTaskStep,
  'TaskStepProperties.EncodedTask' : EncodedTaskStep,
  'TaskStepUpdateParameters.Docker' : DockerBuildStepUpdateParameters,
  'TaskStepUpdateParameters.FileTask' : FileTaskStepUpdateParameters,
  'TaskStepUpdateParameters.EncodedTask' : EncodedTaskStepUpdateParameters

};
