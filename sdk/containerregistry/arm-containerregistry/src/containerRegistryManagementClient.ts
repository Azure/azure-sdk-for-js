/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreAuth from "@azure/core-auth";
import {
  ConnectedRegistriesImpl,
  ExportPipelinesImpl,
  RegistriesImpl,
  ImportPipelinesImpl,
  OperationsImpl,
  PipelineRunsImpl,
  PrivateEndpointConnectionsImpl,
  ReplicationsImpl,
  ScopeMapsImpl,
  TokensImpl,
  WebhooksImpl,
  AgentPoolsImpl,
  RunsImpl,
  TaskRunsImpl,
  TasksImpl
} from "./operations";
import {
  ConnectedRegistries,
  ExportPipelines,
  Registries,
  ImportPipelines,
  Operations,
  PipelineRuns,
  PrivateEndpointConnections,
  Replications,
  ScopeMaps,
  Tokens,
  Webhooks,
  AgentPools,
  Runs,
  TaskRuns,
  Tasks
} from "./operationsInterfaces";
import { ContainerRegistryManagementClientContext } from "./containerRegistryManagementClientContext";
import { ContainerRegistryManagementClientOptionalParams } from "./models";

export class ContainerRegistryManagementClient extends ContainerRegistryManagementClientContext {
  /**
   * Initializes a new instance of the ContainerRegistryManagementClient class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param subscriptionId The Microsoft Azure subscription ID.
   * @param options The parameter options
   */
  constructor(
    credentials: coreAuth.TokenCredential,
    subscriptionId: string,
    options?: ContainerRegistryManagementClientOptionalParams
  ) {
    super(credentials, subscriptionId, options);
    this.connectedRegistries = new ConnectedRegistriesImpl(this);
    this.exportPipelines = new ExportPipelinesImpl(this);
    this.registries = new RegistriesImpl(this);
    this.importPipelines = new ImportPipelinesImpl(this);
    this.operations = new OperationsImpl(this);
    this.pipelineRuns = new PipelineRunsImpl(this);
    this.privateEndpointConnections = new PrivateEndpointConnectionsImpl(this);
    this.replications = new ReplicationsImpl(this);
    this.scopeMaps = new ScopeMapsImpl(this);
    this.tokens = new TokensImpl(this);
    this.webhooks = new WebhooksImpl(this);
    this.agentPools = new AgentPoolsImpl(this);
    this.runs = new RunsImpl(this);
    this.taskRuns = new TaskRunsImpl(this);
    this.tasks = new TasksImpl(this);
  }

  connectedRegistries: ConnectedRegistries;
  exportPipelines: ExportPipelines;
  registries: Registries;
  importPipelines: ImportPipelines;
  operations: Operations;
  pipelineRuns: PipelineRuns;
  privateEndpointConnections: PrivateEndpointConnections;
  replications: Replications;
  scopeMaps: ScopeMaps;
  tokens: Tokens;
  webhooks: Webhooks;
  agentPools: AgentPools;
  runs: Runs;
  taskRuns: TaskRuns;
  tasks: Tasks;
}
