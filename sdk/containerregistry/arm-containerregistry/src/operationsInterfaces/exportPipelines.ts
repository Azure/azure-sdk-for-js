/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  ExportPipeline,
  ExportPipelinesListOptionalParams,
  ExportPipelinesGetOptionalParams,
  ExportPipelinesGetResponse,
  ExportPipelinesCreateOptionalParams,
  ExportPipelinesCreateResponse,
  ExportPipelinesDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ExportPipelines. */
export interface ExportPipelines {
  /**
   * Lists all export pipelines for the specified container registry.
   * @param resourceGroupName The name of the resource group to which the container registry belongs.
   * @param registryName The name of the container registry.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    registryName: string,
    options?: ExportPipelinesListOptionalParams
  ): PagedAsyncIterableIterator<ExportPipeline>;
  /**
   * Gets the properties of the export pipeline.
   * @param resourceGroupName The name of the resource group to which the container registry belongs.
   * @param registryName The name of the container registry.
   * @param exportPipelineName The name of the export pipeline.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    registryName: string,
    exportPipelineName: string,
    options?: ExportPipelinesGetOptionalParams
  ): Promise<ExportPipelinesGetResponse>;
  /**
   * Creates an export pipeline for a container registry with the specified parameters.
   * @param resourceGroupName The name of the resource group to which the container registry belongs.
   * @param registryName The name of the container registry.
   * @param exportPipelineName The name of the export pipeline.
   * @param exportPipelineCreateParameters The parameters for creating an export pipeline.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    registryName: string,
    exportPipelineName: string,
    exportPipelineCreateParameters: ExportPipeline,
    options?: ExportPipelinesCreateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ExportPipelinesCreateResponse>,
      ExportPipelinesCreateResponse
    >
  >;
  /**
   * Creates an export pipeline for a container registry with the specified parameters.
   * @param resourceGroupName The name of the resource group to which the container registry belongs.
   * @param registryName The name of the container registry.
   * @param exportPipelineName The name of the export pipeline.
   * @param exportPipelineCreateParameters The parameters for creating an export pipeline.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    registryName: string,
    exportPipelineName: string,
    exportPipelineCreateParameters: ExportPipeline,
    options?: ExportPipelinesCreateOptionalParams
  ): Promise<ExportPipelinesCreateResponse>;
  /**
   * Deletes an export pipeline from a container registry.
   * @param resourceGroupName The name of the resource group to which the container registry belongs.
   * @param registryName The name of the container registry.
   * @param exportPipelineName The name of the export pipeline.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    registryName: string,
    exportPipelineName: string,
    options?: ExportPipelinesDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes an export pipeline from a container registry.
   * @param resourceGroupName The name of the resource group to which the container registry belongs.
   * @param registryName The name of the container registry.
   * @param exportPipelineName The name of the export pipeline.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    registryName: string,
    exportPipelineName: string,
    options?: ExportPipelinesDeleteOptionalParams
  ): Promise<void>;
}
