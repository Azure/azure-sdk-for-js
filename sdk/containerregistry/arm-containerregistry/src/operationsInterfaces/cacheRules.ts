/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  CacheRule,
  CacheRulesListOptionalParams,
  CacheRulesGetOptionalParams,
  CacheRulesGetResponse,
  CacheRulesCreateOptionalParams,
  CacheRulesCreateResponse,
  CacheRulesDeleteOptionalParams,
  CacheRuleUpdateParameters,
  CacheRulesUpdateOptionalParams,
  CacheRulesUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a CacheRules. */
export interface CacheRules {
  /**
   * Lists all cache rule resources for the specified container registry.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registryName The name of the container registry.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    registryName: string,
    options?: CacheRulesListOptionalParams
  ): PagedAsyncIterableIterator<CacheRule>;
  /**
   * Gets the properties of the specified cache rule resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registryName The name of the container registry.
   * @param cacheRuleName The name of the cache rule.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    registryName: string,
    cacheRuleName: string,
    options?: CacheRulesGetOptionalParams
  ): Promise<CacheRulesGetResponse>;
  /**
   * Creates a cache rule for a container registry with the specified parameters.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registryName The name of the container registry.
   * @param cacheRuleName The name of the cache rule.
   * @param cacheRuleCreateParameters The parameters for creating a cache rule.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    registryName: string,
    cacheRuleName: string,
    cacheRuleCreateParameters: CacheRule,
    options?: CacheRulesCreateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<CacheRulesCreateResponse>,
      CacheRulesCreateResponse
    >
  >;
  /**
   * Creates a cache rule for a container registry with the specified parameters.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registryName The name of the container registry.
   * @param cacheRuleName The name of the cache rule.
   * @param cacheRuleCreateParameters The parameters for creating a cache rule.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    registryName: string,
    cacheRuleName: string,
    cacheRuleCreateParameters: CacheRule,
    options?: CacheRulesCreateOptionalParams
  ): Promise<CacheRulesCreateResponse>;
  /**
   * Deletes a cache rule resource from a container registry.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registryName The name of the container registry.
   * @param cacheRuleName The name of the cache rule.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    registryName: string,
    cacheRuleName: string,
    options?: CacheRulesDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Deletes a cache rule resource from a container registry.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registryName The name of the container registry.
   * @param cacheRuleName The name of the cache rule.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    registryName: string,
    cacheRuleName: string,
    options?: CacheRulesDeleteOptionalParams
  ): Promise<void>;
  /**
   * Updates a cache rule for a container registry with the specified parameters.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registryName The name of the container registry.
   * @param cacheRuleName The name of the cache rule.
   * @param cacheRuleUpdateParameters The parameters for updating a cache rule.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    registryName: string,
    cacheRuleName: string,
    cacheRuleUpdateParameters: CacheRuleUpdateParameters,
    options?: CacheRulesUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<CacheRulesUpdateResponse>,
      CacheRulesUpdateResponse
    >
  >;
  /**
   * Updates a cache rule for a container registry with the specified parameters.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registryName The name of the container registry.
   * @param cacheRuleName The name of the cache rule.
   * @param cacheRuleUpdateParameters The parameters for updating a cache rule.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    registryName: string,
    cacheRuleName: string,
    cacheRuleUpdateParameters: CacheRuleUpdateParameters,
    options?: CacheRulesUpdateOptionalParams
  ): Promise<CacheRulesUpdateResponse>;
}
