/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  Task,
  TasksListOptionalParams,
  TasksGetOptionalParams,
  TasksGetResponse,
  TasksCreateOptionalParams,
  TasksCreateResponse,
  TasksDeleteOptionalParams,
  TaskUpdateParameters,
  TasksUpdateOptionalParams,
  TasksUpdateResponse,
  TasksGetDetailsOptionalParams,
  TasksGetDetailsResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Tasks. */
export interface Tasks {
  /**
   * Lists all the tasks for a specified container registry.
   * @param resourceGroupName The name of the resource group to which the container registry belongs.
   * @param registryName The name of the container registry.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    registryName: string,
    options?: TasksListOptionalParams
  ): PagedAsyncIterableIterator<Task>;
  /**
   * Get the properties of a specified task.
   * @param resourceGroupName The name of the resource group to which the container registry belongs.
   * @param registryName The name of the container registry.
   * @param taskName The name of the container registry task.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    registryName: string,
    taskName: string,
    options?: TasksGetOptionalParams
  ): Promise<TasksGetResponse>;
  /**
   * Creates a task for a container registry with the specified parameters.
   * @param resourceGroupName The name of the resource group to which the container registry belongs.
   * @param registryName The name of the container registry.
   * @param taskName The name of the container registry task.
   * @param taskCreateParameters The parameters for creating a task.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    registryName: string,
    taskName: string,
    taskCreateParameters: Task,
    options?: TasksCreateOptionalParams
  ): Promise<
    PollerLike<PollOperationState<TasksCreateResponse>, TasksCreateResponse>
  >;
  /**
   * Creates a task for a container registry with the specified parameters.
   * @param resourceGroupName The name of the resource group to which the container registry belongs.
   * @param registryName The name of the container registry.
   * @param taskName The name of the container registry task.
   * @param taskCreateParameters The parameters for creating a task.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    registryName: string,
    taskName: string,
    taskCreateParameters: Task,
    options?: TasksCreateOptionalParams
  ): Promise<TasksCreateResponse>;
  /**
   * Deletes a specified task.
   * @param resourceGroupName The name of the resource group to which the container registry belongs.
   * @param registryName The name of the container registry.
   * @param taskName The name of the container registry task.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    registryName: string,
    taskName: string,
    options?: TasksDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes a specified task.
   * @param resourceGroupName The name of the resource group to which the container registry belongs.
   * @param registryName The name of the container registry.
   * @param taskName The name of the container registry task.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    registryName: string,
    taskName: string,
    options?: TasksDeleteOptionalParams
  ): Promise<void>;
  /**
   * Updates a task with the specified parameters.
   * @param resourceGroupName The name of the resource group to which the container registry belongs.
   * @param registryName The name of the container registry.
   * @param taskName The name of the container registry task.
   * @param taskUpdateParameters The parameters for updating a task.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    registryName: string,
    taskName: string,
    taskUpdateParameters: TaskUpdateParameters,
    options?: TasksUpdateOptionalParams
  ): Promise<
    PollerLike<PollOperationState<TasksUpdateResponse>, TasksUpdateResponse>
  >;
  /**
   * Updates a task with the specified parameters.
   * @param resourceGroupName The name of the resource group to which the container registry belongs.
   * @param registryName The name of the container registry.
   * @param taskName The name of the container registry task.
   * @param taskUpdateParameters The parameters for updating a task.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    registryName: string,
    taskName: string,
    taskUpdateParameters: TaskUpdateParameters,
    options?: TasksUpdateOptionalParams
  ): Promise<TasksUpdateResponse>;
  /**
   * Returns a task with extended information that includes all secrets.
   * @param resourceGroupName The name of the resource group to which the container registry belongs.
   * @param registryName The name of the container registry.
   * @param taskName The name of the container registry task.
   * @param options The options parameters.
   */
  getDetails(
    resourceGroupName: string,
    registryName: string,
    taskName: string,
    options?: TasksGetDetailsOptionalParams
  ): Promise<TasksGetDetailsResponse>;
}
