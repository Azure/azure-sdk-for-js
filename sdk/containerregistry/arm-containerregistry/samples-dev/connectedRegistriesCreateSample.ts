/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import {
  ConnectedRegistry,
  ContainerRegistryManagementClient
} from "@azure/arm-containerregistry";
import { DefaultAzureCredential } from "@azure/identity";

/**
 * This sample demonstrates how to Creates a connected registry for a container registry with the specified parameters.
 *
 * @summary Creates a connected registry for a container registry with the specified parameters.
 * x-ms-original-file: specification/containerregistry/resource-manager/Microsoft.ContainerRegistry/preview/2021-12-01-preview/examples/ConnectedRegistryCreate.json
 */
async function connectedRegistryCreate() {
  const subscriptionId = "00000000-0000-0000-0000-000000000000";
  const resourceGroupName = "myResourceGroup";
  const registryName = "myRegistry";
  const connectedRegistryName = "myConnectedRegistry";
  const connectedRegistryCreateParameters: ConnectedRegistry = {
    clientTokenIds: [
      "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tokens/client1Token"
    ],
    mode: "ReadWrite",
    notificationsList: ["hello-world:*:*", "sample/repo/*:1.0:*"],
    parent: {
      syncProperties: {
        messageTtl: "P2D",
        schedule: "0 9 * * *",
        syncWindow: "PT3H",
        tokenId:
          "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tokens/syncToken"
      }
    }
  };
  const credential = new DefaultAzureCredential();
  const client = new ContainerRegistryManagementClient(
    credential,
    subscriptionId
  );
  const result = await client.connectedRegistries.beginCreateAndWait(
    resourceGroupName,
    registryName,
    connectedRegistryName,
    connectedRegistryCreateParameters
  );
  console.log(result);
}

connectedRegistryCreate().catch(console.error);
