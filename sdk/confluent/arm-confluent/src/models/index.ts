/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * The object that represents the operation.
 */
export interface OperationDisplay {
  /**
   * Service provider: Microsoft.Confluent
   */
  provider?: string;
  /**
   * Type on which the operation is performed, e.g., 'clusters'.
   */
  resource?: string;
  /**
   * Operation type, e.g., read, write, delete, etc.
   */
  operation?: string;
  /**
   * Description of the operation, e.g., 'Write confluent'.
   */
  description?: string;
}

/**
 * An Confluent REST API operation.
 */
export interface OperationResult {
  /**
   * Operation name: {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * The object that represents the operation.
   */
  display?: OperationDisplay;
}

/**
 * Response body of Error
 * @summary ErrorResponseBody
 */
export interface ErrorResponseBody {
  /**
   * Error code
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * Error message
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * Error target
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly target?: string;
  /**
   * Error detail
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: ErrorResponseBody[];
}

/**
 * Default error response for resource provider
 * @summary ResourceProviderDefaultErrorResponse
 */
export interface ResourceProviderDefaultErrorResponse {
  /**
   * Response body of Error
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: ErrorResponseBody;
}

/**
 * Confluent Offer detail
 */
export interface OfferDetail {
  /**
   * Publisher Id
   */
  publisherId?: string;
  /**
   * Offer Id
   */
  id?: string;
  /**
   * Offer Plan Id
   */
  planId?: string;
  /**
   * Offer Plan Name
   */
  planName?: string;
  /**
   * Offer Plan Term unit
   */
  termUnit?: string;
  /**
   * SaaS Offer Status. Possible values include: 'Started', 'PendingFulfillmentStart',
   * 'InProgress', 'Subscribed', 'Suspended', 'Reinstated', 'Succeeded', 'Failed', 'Unsubscribed',
   * 'Updating'
   */
  status?: SaaSOfferStatus;
}

/**
 * Subscriber detail
 */
export interface UserDetail {
  /**
   * First name
   */
  firstName?: string;
  /**
   * Last name
   */
  lastName?: string;
  /**
   * Email address
   */
  emailAddress?: string;
}

/**
 * Confluent offer detail
 */
export interface OrganizationResourcePropertiesOfferDetail extends OfferDetail {
}

/**
 * Subscriber detail
 */
export interface OrganizationResourcePropertiesUserDetail extends UserDetail {
}

/**
 * Organization resource property
 */
export interface OrganizationResourceProperties {
  /**
   * The creation time of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdTime?: Date;
  /**
   * Provision states for confluent RP. Possible values include: 'Accepted', 'Creating',
   * 'Updating', 'Deleting', 'Succeeded', 'Failed', 'Canceled', 'Deleted', 'NotSpecified'
   */
  provisioningState?: ProvisionState;
  /**
   * Id of the Confluent organization.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly organizationId?: string;
  /**
   * SSO url for the Confluent organization.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly ssoUrl?: string;
  /**
   * Confluent offer detail
   */
  offerDetail?: OrganizationResourcePropertiesOfferDetail;
  /**
   * Subscriber detail
   */
  userDetail?: OrganizationResourcePropertiesUserDetail;
}

/**
 * Organization resource.
 */
export interface OrganizationResource extends BaseResource {
  /**
   * The ARM id of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The creation time of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdTime?: Date;
  /**
   * Provision states for confluent RP. Possible values include: 'Accepted', 'Creating',
   * 'Updating', 'Deleting', 'Succeeded', 'Failed', 'Canceled', 'Deleted', 'NotSpecified'
   */
  provisioningState?: ProvisionState;
  /**
   * Id of the Confluent organization.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly organizationId?: string;
  /**
   * SSO url for the Confluent organization.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly ssoUrl?: string;
  /**
   * Confluent offer detail
   */
  offerDetail?: OrganizationResourcePropertiesOfferDetail;
  /**
   * Subscriber detail
   */
  userDetail?: OrganizationResourcePropertiesUserDetail;
  /**
   * Organization resource tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * Location of Organization resource
   */
  location?: string;
}

/**
 * Organization Resource update
 */
export interface OrganizationResourceUpdate {
  /**
   * ARM resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Optional Parameters.
 */
export interface OrganizationCreateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Organization resource model
   */
  body?: OrganizationResource;
}

/**
 * Optional Parameters.
 */
export interface OrganizationUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Updated Organization resource
   */
  body?: OrganizationResourceUpdate;
}

/**
 * Optional Parameters.
 */
export interface OrganizationBeginCreateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Organization resource model
   */
  body?: OrganizationResource;
}

/**
 * An interface representing ConfluentManagementClientOptions.
 */
export interface ConfluentManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * Result of GET request to list Confluent operations.
 * @extends Array<OperationResult>
 */
export interface OperationListResult extends Array<OperationResult> {
  /**
   * URL to get the next set of operation list results if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * The response of a list operation.
 * @extends Array<OrganizationResource>
 */
export interface OrganizationResourceListResult extends Array<OrganizationResource> {
  /**
   * Link to the next set of results, if any.
   */
  nextLink?: string;
}

/**
 * Defines values for ProvisionState.
 * Possible values include: 'Accepted', 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Failed',
 * 'Canceled', 'Deleted', 'NotSpecified'
 * @readonly
 * @enum {string}
 */
export type ProvisionState = 'Accepted' | 'Creating' | 'Updating' | 'Deleting' | 'Succeeded' | 'Failed' | 'Canceled' | 'Deleted' | 'NotSpecified';

/**
 * Defines values for SaaSOfferStatus.
 * Possible values include: 'Started', 'PendingFulfillmentStart', 'InProgress', 'Subscribed',
 * 'Suspended', 'Reinstated', 'Succeeded', 'Failed', 'Unsubscribed', 'Updating'
 * @readonly
 * @enum {string}
 */
export type SaaSOfferStatus = 'Started' | 'PendingFulfillmentStart' | 'InProgress' | 'Subscribed' | 'Suspended' | 'Reinstated' | 'Succeeded' | 'Failed' | 'Unsubscribed' | 'Updating';

/**
 * Contains response data for the list operation.
 */
export type OrganizationOperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OrganizationOperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type OrganizationListBySubscriptionResponse = OrganizationResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OrganizationResourceListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type OrganizationListByResourceGroupResponse = OrganizationResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OrganizationResourceListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type OrganizationGetResponse = OrganizationResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OrganizationResource;
    };
};

/**
 * Contains response data for the create operation.
 */
export type OrganizationCreateResponse = OrganizationResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OrganizationResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type OrganizationUpdateResponse = OrganizationResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OrganizationResource;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type OrganizationBeginCreateResponse = OrganizationResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OrganizationResource;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type OrganizationListBySubscriptionNextResponse = OrganizationResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OrganizationResourceListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type OrganizationListByResourceGroupNextResponse = OrganizationResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OrganizationResourceListResult;
    };
};
