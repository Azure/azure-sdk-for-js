/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** Response of a list operation. */
export interface ConfluentAgreementResourceListResponse {
  /** Results of a list operation. */
  value?: ConfluentAgreementResource[];
  /** Link to the next set of results, if any. */
  nextLink?: string;
}

/** Agreement Terms definition */
export interface ConfluentAgreementResource {
  /**
   * The ARM id of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the agreement.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the agreement.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Metadata pertaining to creation and last modification of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** Publisher identifier string. */
  publisher?: string;
  /** Product identifier string. */
  product?: string;
  /** Plan identifier string. */
  plan?: string;
  /** Link to HTML with Microsoft and Publisher terms. */
  licenseTextLink?: string;
  /** Link to the privacy policy of the publisher. */
  privacyPolicyLink?: string;
  /** Date and time in UTC of when the terms were accepted. This is empty if Accepted is false. */
  retrieveDatetime?: Date;
  /** Terms signature. */
  signature?: string;
  /** If any version of the terms have been accepted, otherwise false. */
  accepted?: boolean;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Default error response for resource provider */
export interface ResourceProviderDefaultErrorResponse {
  /**
   * Response body of Error
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly error?: ErrorResponseBody;
}

/** Response body of Error */
export interface ErrorResponseBody {
  /**
   * Error code
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * Error message
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * Error target
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * Error detail
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorResponseBody[];
}

/** Result of GET request to list Confluent operations. */
export interface OperationListResult {
  /** List of Confluent operations supported by the Microsoft.Confluent provider. */
  value?: OperationResult[];
  /** URL to get the next set of operation list results if there are any. */
  nextLink?: string;
}

/** An Confluent REST API operation. */
export interface OperationResult {
  /** Operation name: {provider}/{resource}/{operation} */
  name?: string;
  /** The object that represents the operation. */
  display?: OperationDisplay;
  /** Indicates whether the operation is a data action */
  isDataAction?: boolean;
}

/** The object that represents the operation. */
export interface OperationDisplay {
  /** Service provider: Microsoft.Confluent */
  provider?: string;
  /** Type on which the operation is performed, e.g., 'clusters'. */
  resource?: string;
  /** Operation type, e.g., read, write, delete, etc. */
  operation?: string;
  /** Description of the operation, e.g., 'Write confluent'. */
  description?: string;
}

/** The response of a list operation. */
export interface OrganizationResourceListResult {
  /** Result of a list operation. */
  value?: OrganizationResource[];
  /** Link to the next set of results, if any. */
  nextLink?: string;
}

/** Organization resource. */
export interface OrganizationResource {
  /**
   * The ARM id of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Metadata pertaining to creation and last modification of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** Organization resource tags */
  tags?: { [propertyName: string]: string };
  /** Location of Organization resource */
  location?: string;
  /**
   * The creation time of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdTime?: Date;
  /**
   * Provision states for confluent RP
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisionState;
  /**
   * Id of the Confluent organization.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly organizationId?: string;
  /**
   * SSO url for the Confluent organization.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ssoUrl?: string;
  /** Confluent offer detail */
  offerDetail: OfferDetail;
  /** Subscriber detail */
  userDetail: UserDetail;
  /** Link an existing Confluent organization */
  linkOrganization?: LinkOrganization;
}

/** Confluent Offer detail */
export interface OfferDetail {
  /** Publisher Id */
  publisherId: string;
  /** Offer Id */
  id: string;
  /** Offer Plan Id */
  planId: string;
  /** Offer Plan Name */
  planName: string;
  /** Offer Plan Term unit */
  termUnit: string;
  /** Offer Plan Term Id */
  termId?: string;
  /** Private Offer Id */
  privateOfferId?: string;
  /** Array of Private Offer Ids */
  privateOfferIds?: string[];
  /** SaaS Offer Status */
  status?: SaaSOfferStatus;
}

/** Subscriber detail */
export interface UserDetail {
  /** First name */
  firstName?: string;
  /** Last name */
  lastName?: string;
  /** Email address */
  emailAddress: string;
  /** User principal name */
  userPrincipalName?: string;
  /** AAD email address */
  aadEmail?: string;
}

/** Link an existing Confluent organization */
export interface LinkOrganization {
  /** User auth token */
  token: string;
}

/** Organization Resource update */
export interface OrganizationResourceUpdate {
  /** ARM resource tags */
  tags?: { [propertyName: string]: string };
}

/** Validation response from the provider */
export interface ValidationResponse {
  /** Info from the response */
  info?: { [propertyName: string]: string };
}

/** List Access Request Model */
export interface ListAccessRequestModel {
  /** Search filters for the request */
  searchFilters?: { [propertyName: string]: string };
}

/** List users success response */
export interface AccessListUsersSuccessResponse {
  /** Type of response */
  kind?: string;
  /** Metadata of the list */
  metadata?: ConfluentListMetadata;
  /** Data of the users list */
  data?: UserRecord[];
}

/** Metadata of the list */
export interface ConfluentListMetadata {
  /** First page of the list */
  first?: string;
  /** Last page of the list */
  last?: string;
  /** Previous page of the list */
  prev?: string;
  /** Next page of the list */
  next?: string;
  /** Total size of the list */
  totalSize?: number;
}

/** Record of the user */
export interface UserRecord {
  /** Type of account */
  kind?: string;
  /** Id of the user */
  id?: string;
  /** Metadata of the record */
  metadata?: MetadataEntity;
  /** Email of the user */
  email?: string;
  /** Name of the user */
  fullName?: string;
  /** Auth type of the user */
  authType?: string;
}

/** Metadata of the data record */
export interface MetadataEntity {
  /** Self lookup url */
  self?: string;
  /** Resource name of the record */
  resourceName?: string;
  /** Created Date Time */
  createdAt?: string;
  /** Updated Date time */
  updatedAt?: string;
  /** Deleted Date time */
  deletedAt?: string;
}

/** List service accounts success response */
export interface AccessListServiceAccountsSuccessResponse {
  /** Type of response */
  kind?: string;
  /** Metadata of the list */
  metadata?: ConfluentListMetadata;
  /** Data of the service accounts list */
  data?: ServiceAccountRecord[];
}

/** Record of the service account */
export interface ServiceAccountRecord {
  /** Type of account */
  kind?: string;
  /** Id of the service account */
  id?: string;
  /** Metadata of the record */
  metadata?: MetadataEntity;
  /** Name of the service account */
  displayName?: string;
  /** Description of the service account */
  description?: string;
}

/** List invitations success response */
export interface AccessListInvitationsSuccessResponse {
  /** Type of response */
  kind?: string;
  /** Metadata of the list */
  metadata?: ConfluentListMetadata;
  /** Data of the invitations list */
  data?: InvitationRecord[];
}

/** Record of the invitation */
export interface InvitationRecord {
  /** Type of account */
  kind?: string;
  /** Id of the invitation */
  id?: string;
  /** Metadata of the record */
  metadata?: MetadataEntity;
  /** Email of the user */
  email?: string;
  /** Auth type of the user */
  authType?: string;
  /** Status of the invitation */
  status?: string;
  /** Accepted date time of the invitation */
  acceptedAt?: string;
  /** Expiration date time of the invitation */
  expiresAt?: string;
}

/** Invite User Account model */
export interface AccessInviteUserAccountModel {
  /** Id of the organization */
  organizationId?: string;
  /** Email of the logged in user */
  email?: string;
  /** Upn of the logged in user */
  upn?: string;
  /** Details of the user who is being invited */
  invitedUserDetails?: AccessInvitedUserDetails;
}

/** Details of the user being invited */
export interface AccessInvitedUserDetails {
  /** UPN/Email of the user who is being invited */
  invitedEmail?: string;
  /** Auth type of the user */
  authType?: string;
}

/** List environments success response */
export interface AccessListEnvironmentsSuccessResponse {
  /** Type of response */
  kind?: string;
  /** Metadata of the list */
  metadata?: ConfluentListMetadata;
  /** Data of the environments list */
  data?: EnvironmentRecord[];
}

/** Record of the environment */
export interface EnvironmentRecord {
  /** Type of environment */
  kind?: string;
  /** Id of the environment */
  id?: string;
  /** Metadata of the record */
  metadata?: MetadataEntity;
  /** Display name of the user */
  displayName?: string;
}

/** List cluster success response */
export interface AccessListClusterSuccessResponse {
  /** Type of response */
  kind?: string;
  /** Metadata of the list */
  metadata?: ConfluentListMetadata;
  /** Data of the environments list */
  data?: ClusterRecord[];
}

/** Record of the environment */
export interface ClusterRecord {
  /** Type of environment */
  kind?: string;
  /** Id of the environment */
  id?: string;
  /** Metadata of the record */
  metadata?: MetadataEntity;
  /** Display name of the user */
  displayName?: string;
  /** Specification of the cluster */
  spec?: ClusterSpecEntity;
  /** Specification of the cluster */
  status?: ClusterStatusEntity;
}

/** Spec of the cluster record */
export interface ClusterSpecEntity {
  /** The name of the cluster */
  displayName?: string;
  /** The availability zone configuration of the cluster */
  availability?: string;
  /** The cloud service provider */
  cloud?: string;
  /** type of zone availability */
  zone?: string;
  /** The cloud service provider region */
  region?: string;
  /** The bootstrap endpoint used by Kafka clients to connect to the cluster */
  kafkaBootstrapEndpoint?: string;
  /** The cluster HTTP request URL. */
  httpEndpoint?: string;
  /** The Kafka API cluster endpoint */
  apiEndpoint?: string;
  /** Specification of the cluster */
  config?: ClusterConfigEntity;
  /** Specification of the cluster */
  environment?: ClusterEnvironmentEntity;
  /** Specification of the cluster */
  network?: ClusterNetworkEntity;
  /** Specification of the cluster */
  byok?: ClusterByokEntity;
}

/** The configuration of the Kafka cluster */
export interface ClusterConfigEntity {
  /** The lifecycle phase of the cluster */
  kind?: string;
}

/** The environment to which cluster belongs */
export interface ClusterEnvironmentEntity {
  /** ID of the referred resource */
  id?: string;
  /** Environment of the referred resource */
  environment?: string;
  /** API URL for accessing or modifying the referred object */
  related?: string;
  /** CRN reference to the referred resource */
  resourceName?: string;
}

/** The network associated with this object */
export interface ClusterNetworkEntity {
  /** ID of the referred resource */
  id?: string;
  /** Environment of the referred resource */
  environment?: string;
  /** API URL for accessing or modifying the referred object */
  related?: string;
  /** CRN reference to the referred resource */
  resourceName?: string;
}

/** The network associated with this object */
export interface ClusterByokEntity {
  /** ID of the referred resource */
  id?: string;
  /** API URL for accessing or modifying the referred object */
  related?: string;
  /** CRN reference to the referred resource */
  resourceName?: string;
}

/** Status of the cluster record */
export interface ClusterStatusEntity {
  /** The lifecycle phase of the cluster */
  phase?: string;
  /** The number of Confluent Kafka Units */
  cku?: number;
}

/** List cluster success response */
export interface AccessListRoleBindingsSuccessResponse {
  /** Type of response */
  kind?: string;
  /** Metadata of the list */
  metadata?: ConfluentListMetadata;
  /** Data of the environments list */
  data?: RoleBindingRecord[];
}

/** Record of the environment */
export interface RoleBindingRecord {
  /** The type of the resource. */
  kind?: string;
  /** Id of the role */
  id?: string;
  /** Metadata of the record */
  metadata?: MetadataEntity;
  /** The principal User or Group to bind the role to */
  principal?: string;
  /** The name of the role to bind to the principal */
  roleName?: string;
  /** A CRN that specifies the scope and resource patterns necessary for the role to bind */
  crnPattern?: string;
}

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link ProvisionState} that the service accepts. */
export enum KnownProvisionState {
  /** Accepted */
  Accepted = "Accepted",
  /** Creating */
  Creating = "Creating",
  /** Updating */
  Updating = "Updating",
  /** Deleting */
  Deleting = "Deleting",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
  /** Deleted */
  Deleted = "Deleted",
  /** NotSpecified */
  NotSpecified = "NotSpecified"
}

/**
 * Defines values for ProvisionState. \
 * {@link KnownProvisionState} can be used interchangeably with ProvisionState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Accepted** \
 * **Creating** \
 * **Updating** \
 * **Deleting** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Deleted** \
 * **NotSpecified**
 */
export type ProvisionState = string;

/** Known values of {@link SaaSOfferStatus} that the service accepts. */
export enum KnownSaaSOfferStatus {
  /** Started */
  Started = "Started",
  /** PendingFulfillmentStart */
  PendingFulfillmentStart = "PendingFulfillmentStart",
  /** InProgress */
  InProgress = "InProgress",
  /** Subscribed */
  Subscribed = "Subscribed",
  /** Suspended */
  Suspended = "Suspended",
  /** Reinstated */
  Reinstated = "Reinstated",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Unsubscribed */
  Unsubscribed = "Unsubscribed",
  /** Updating */
  Updating = "Updating"
}

/**
 * Defines values for SaaSOfferStatus. \
 * {@link KnownSaaSOfferStatus} can be used interchangeably with SaaSOfferStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Started** \
 * **PendingFulfillmentStart** \
 * **InProgress** \
 * **Subscribed** \
 * **Suspended** \
 * **Reinstated** \
 * **Succeeded** \
 * **Failed** \
 * **Unsubscribed** \
 * **Updating**
 */
export type SaaSOfferStatus = string;

/** Optional parameters. */
export interface MarketplaceAgreementsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type MarketplaceAgreementsListResponse = ConfluentAgreementResourceListResponse;

/** Optional parameters. */
export interface MarketplaceAgreementsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Confluent Marketplace Agreement resource */
  body?: ConfluentAgreementResource;
}

/** Contains response data for the create operation. */
export type MarketplaceAgreementsCreateResponse = ConfluentAgreementResource;

/** Optional parameters. */
export interface MarketplaceAgreementsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type MarketplaceAgreementsListNextResponse = ConfluentAgreementResourceListResponse;

/** Optional parameters. */
export interface OrganizationOperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OrganizationOperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OrganizationOperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OrganizationOperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface OrganizationListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type OrganizationListBySubscriptionResponse = OrganizationResourceListResult;

/** Optional parameters. */
export interface OrganizationListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type OrganizationListByResourceGroupResponse = OrganizationResourceListResult;

/** Optional parameters. */
export interface OrganizationGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type OrganizationGetResponse = OrganizationResource;

/** Optional parameters. */
export interface OrganizationCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Organization resource model */
  body?: OrganizationResource;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type OrganizationCreateResponse = OrganizationResource;

/** Optional parameters. */
export interface OrganizationUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Updated Organization resource */
  body?: OrganizationResourceUpdate;
}

/** Contains response data for the update operation. */
export type OrganizationUpdateResponse = OrganizationResource;

/** Optional parameters. */
export interface OrganizationDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface OrganizationListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type OrganizationListBySubscriptionNextResponse = OrganizationResourceListResult;

/** Optional parameters. */
export interface OrganizationListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type OrganizationListByResourceGroupNextResponse = OrganizationResourceListResult;

/** Optional parameters. */
export interface ValidationsValidateOrganizationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the validateOrganization operation. */
export type ValidationsValidateOrganizationResponse = OrganizationResource;

/** Optional parameters. */
export interface ValidationsValidateOrganizationV2OptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the validateOrganizationV2 operation. */
export type ValidationsValidateOrganizationV2Response = ValidationResponse;

/** Optional parameters. */
export interface AccessListUsersOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listUsers operation. */
export type AccessListUsersResponse = AccessListUsersSuccessResponse;

/** Optional parameters. */
export interface AccessListServiceAccountsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listServiceAccounts operation. */
export type AccessListServiceAccountsResponse = AccessListServiceAccountsSuccessResponse;

/** Optional parameters. */
export interface AccessListInvitationsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listInvitations operation. */
export type AccessListInvitationsResponse = AccessListInvitationsSuccessResponse;

/** Optional parameters. */
export interface AccessInviteUserOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the inviteUser operation. */
export type AccessInviteUserResponse = InvitationRecord;

/** Optional parameters. */
export interface AccessListEnvironmentsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listEnvironments operation. */
export type AccessListEnvironmentsResponse = AccessListEnvironmentsSuccessResponse;

/** Optional parameters. */
export interface AccessListClustersOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listClusters operation. */
export type AccessListClustersResponse = AccessListClusterSuccessResponse;

/** Optional parameters. */
export interface AccessListRoleBindingsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listRoleBindings operation. */
export type AccessListRoleBindingsResponse = AccessListRoleBindingsSuccessResponse;

/** Optional parameters. */
export interface ConfluentManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
