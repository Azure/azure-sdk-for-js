/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const ConfluentAgreementResourceListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConfluentAgreementResourceListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ConfluentAgreementResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConfluentAgreementResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConfluentAgreementResource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      publisher: {
        serializedName: "properties.publisher",
        type: {
          name: "String"
        }
      },
      product: {
        serializedName: "properties.product",
        type: {
          name: "String"
        }
      },
      plan: {
        serializedName: "properties.plan",
        type: {
          name: "String"
        }
      },
      licenseTextLink: {
        serializedName: "properties.licenseTextLink",
        type: {
          name: "String"
        }
      },
      privacyPolicyLink: {
        serializedName: "properties.privacyPolicyLink",
        type: {
          name: "String"
        }
      },
      retrieveDatetime: {
        serializedName: "properties.retrieveDatetime",
        type: {
          name: "DateTime"
        }
      },
      signature: {
        serializedName: "properties.signature",
        type: {
          name: "String"
        }
      },
      accepted: {
        serializedName: "properties.accepted",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ResourceProviderDefaultErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceProviderDefaultErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorResponseBody"
        }
      }
    }
  }
};

export const ErrorResponseBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponseBody",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorResponseBody"
            }
          }
        }
      }
    }
  }
};

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationResult"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationResult",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OrganizationResourceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OrganizationResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OrganizationResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OrganizationResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OrganizationResource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      createdTime: {
        serializedName: "properties.createdTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      organizationId: {
        serializedName: "properties.organizationId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      ssoUrl: {
        serializedName: "properties.ssoUrl",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      offerDetail: {
        serializedName: "properties.offerDetail",
        type: {
          name: "Composite",
          className: "OfferDetail"
        }
      },
      userDetail: {
        serializedName: "properties.userDetail",
        type: {
          name: "Composite",
          className: "UserDetail"
        }
      }
    }
  }
};

export const OfferDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OfferDetail",
    modelProperties: {
      publisherId: {
        constraints: {
          MaxLength: 50
        },
        serializedName: "publisherId",
        required: true,
        type: {
          name: "String"
        }
      },
      id: {
        constraints: {
          MaxLength: 50
        },
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      planId: {
        constraints: {
          MaxLength: 50
        },
        serializedName: "planId",
        required: true,
        type: {
          name: "String"
        }
      },
      planName: {
        constraints: {
          MaxLength: 50
        },
        serializedName: "planName",
        required: true,
        type: {
          name: "String"
        }
      },
      termUnit: {
        constraints: {
          MaxLength: 25
        },
        serializedName: "termUnit",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserDetail",
    modelProperties: {
      firstName: {
        constraints: {
          MaxLength: 50
        },
        serializedName: "firstName",
        type: {
          name: "String"
        }
      },
      lastName: {
        constraints: {
          MaxLength: 50
        },
        serializedName: "lastName",
        type: {
          name: "String"
        }
      },
      emailAddress: {
        constraints: {
          Pattern: new RegExp("^\\S+@\\S+\\.\\S+$")
        },
        serializedName: "emailAddress",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OrganizationResourceUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OrganizationResourceUpdate",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};
