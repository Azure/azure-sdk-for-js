/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  ListAccessRequestModel,
  AccessListUsersOptionalParams,
  AccessListUsersResponse,
  AccessListServiceAccountsOptionalParams,
  AccessListServiceAccountsResponse,
  AccessListInvitationsOptionalParams,
  AccessListInvitationsResponse,
  AccessInviteUserAccountModel,
  AccessInviteUserOptionalParams,
  AccessInviteUserResponse,
  AccessListEnvironmentsOptionalParams,
  AccessListEnvironmentsResponse,
  AccessListClustersOptionalParams,
  AccessListClustersResponse,
  AccessListRoleBindingsOptionalParams,
  AccessListRoleBindingsResponse,
  AccessCreateRoleBindingRequestModel,
  AccessCreateRoleBindingOptionalParams,
  AccessCreateRoleBindingResponse,
  AccessDeleteRoleBindingOptionalParams,
  AccessListRoleBindingNameListOptionalParams,
  AccessListRoleBindingNameListResponse,
} from "../models";

/** Interface representing a Access. */
export interface Access {
  /**
   * Organization users details
   * @param resourceGroupName Resource group name
   * @param organizationName Organization resource name
   * @param body List Access Request Model
   * @param options The options parameters.
   */
  listUsers(
    resourceGroupName: string,
    organizationName: string,
    body: ListAccessRequestModel,
    options?: AccessListUsersOptionalParams,
  ): Promise<AccessListUsersResponse>;
  /**
   * Organization service accounts details
   * @param resourceGroupName Resource group name
   * @param organizationName Organization resource name
   * @param body List Access Request Model
   * @param options The options parameters.
   */
  listServiceAccounts(
    resourceGroupName: string,
    organizationName: string,
    body: ListAccessRequestModel,
    options?: AccessListServiceAccountsOptionalParams,
  ): Promise<AccessListServiceAccountsResponse>;
  /**
   * Organization accounts invitation details
   * @param resourceGroupName Resource group name
   * @param organizationName Organization resource name
   * @param body List Access Request Model
   * @param options The options parameters.
   */
  listInvitations(
    resourceGroupName: string,
    organizationName: string,
    body: ListAccessRequestModel,
    options?: AccessListInvitationsOptionalParams,
  ): Promise<AccessListInvitationsResponse>;
  /**
   * Invite user to the organization
   * @param resourceGroupName Resource group name
   * @param organizationName Organization resource name
   * @param body Invite user account model
   * @param options The options parameters.
   */
  inviteUser(
    resourceGroupName: string,
    organizationName: string,
    body: AccessInviteUserAccountModel,
    options?: AccessInviteUserOptionalParams,
  ): Promise<AccessInviteUserResponse>;
  /**
   * Environment list of an organization
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param organizationName Organization resource name
   * @param body List Access Request Model
   * @param options The options parameters.
   */
  listEnvironments(
    resourceGroupName: string,
    organizationName: string,
    body: ListAccessRequestModel,
    options?: AccessListEnvironmentsOptionalParams,
  ): Promise<AccessListEnvironmentsResponse>;
  /**
   * Cluster details
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param organizationName Organization resource name
   * @param body List Access Request Model
   * @param options The options parameters.
   */
  listClusters(
    resourceGroupName: string,
    organizationName: string,
    body: ListAccessRequestModel,
    options?: AccessListClustersOptionalParams,
  ): Promise<AccessListClustersResponse>;
  /**
   * Organization role bindings
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param organizationName Organization resource name
   * @param body List Access Request Model
   * @param options The options parameters.
   */
  listRoleBindings(
    resourceGroupName: string,
    organizationName: string,
    body: ListAccessRequestModel,
    options?: AccessListRoleBindingsOptionalParams,
  ): Promise<AccessListRoleBindingsResponse>;
  /**
   * Organization role bindings
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param organizationName Organization resource name
   * @param body Create role binding Request Model
   * @param options The options parameters.
   */
  createRoleBinding(
    resourceGroupName: string,
    organizationName: string,
    body: AccessCreateRoleBindingRequestModel,
    options?: AccessCreateRoleBindingOptionalParams,
  ): Promise<AccessCreateRoleBindingResponse>;
  /**
   * Organization role bindings
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param organizationName Organization resource name
   * @param roleBindingId Confluent Role binding id
   * @param options The options parameters.
   */
  deleteRoleBinding(
    resourceGroupName: string,
    organizationName: string,
    roleBindingId: string,
    options?: AccessDeleteRoleBindingOptionalParams,
  ): Promise<void>;
  /**
   * Organization role bindings
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param organizationName Organization resource name
   * @param body List Access Request Model
   * @param options The options parameters.
   */
  listRoleBindingNameList(
    resourceGroupName: string,
    organizationName: string,
    body: ListAccessRequestModel,
    options?: AccessListRoleBindingNameListOptionalParams,
  ): Promise<AccessListRoleBindingNameListResponse>;
}
