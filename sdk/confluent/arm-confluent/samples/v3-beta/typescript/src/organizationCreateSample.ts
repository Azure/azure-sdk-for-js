/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import {
  OrganizationResource,
  OrganizationCreateOptionalParams,
  ConfluentManagementClient
} from "@azure/arm-confluent";
import { DefaultAzureCredential } from "@azure/identity";

/**
 * This sample demonstrates how to Create Organization resource
 *
 * @summary Create Organization resource
 * x-ms-original-file: specification/confluent/resource-manager/Microsoft.Confluent/preview/2021-09-01-preview/examples/Organization_Create.json
 */
async function organizationCreate() {
  const subscriptionId = "00000000-0000-0000-0000-000000000000";
  const resourceGroupName = "myResourceGroup";
  const organizationName = "myOrganization";
  const body: OrganizationResource = {
    location: "West US",
    offerDetail: {
      id: "string",
      planId: "string",
      planName: "string",
      publisherId: "string",
      termUnit: "string"
    },
    tags: { environment: "Dev" },
    userDetail: {
      emailAddress: "contoso@microsoft.com",
      firstName: "string",
      lastName: "string"
    }
  };
  const options: OrganizationCreateOptionalParams = { body };
  const credential = new DefaultAzureCredential();
  const client = new ConfluentManagementClient(credential, subscriptionId);
  const result = await client.organization.beginCreateAndWait(
    resourceGroupName,
    organizationName,
    options
  );
  console.log(result);
}

organizationCreate().catch(console.error);
