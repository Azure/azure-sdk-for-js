/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const WorkspaceCustomStringParameter: msRest.CompositeMapper = {
  serializedName: "WorkspaceCustomStringParameter",
  type: {
    name: "Composite",
    className: "WorkspaceCustomStringParameter",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkspaceCustomBooleanParameter: msRest.CompositeMapper = {
  serializedName: "WorkspaceCustomBooleanParameter",
  type: {
    name: "Composite",
    className: "WorkspaceCustomBooleanParameter",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Encryption: msRest.CompositeMapper = {
  serializedName: "Encryption",
  type: {
    name: "Composite",
    className: "Encryption",
    modelProperties: {
      keySource: {
        serializedName: "keySource",
        defaultValue: 'Default',
        type: {
          name: "String"
        }
      },
      keyName: {
        serializedName: "KeyName",
        type: {
          name: "String"
        }
      },
      keyVersion: {
        serializedName: "keyversion",
        type: {
          name: "String"
        }
      },
      keyVaultUri: {
        serializedName: "keyvaulturi",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkspaceEncryptionParameter: msRest.CompositeMapper = {
  serializedName: "WorkspaceEncryptionParameter",
  type: {
    name: "Composite",
    className: "WorkspaceEncryptionParameter",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Composite",
          className: "Encryption"
        }
      }
    }
  }
};

export const WorkspaceCustomParameters: msRest.CompositeMapper = {
  serializedName: "WorkspaceCustomParameters",
  type: {
    name: "Composite",
    className: "WorkspaceCustomParameters",
    modelProperties: {
      amlWorkspaceId: {
        serializedName: "amlWorkspaceId",
        type: {
          name: "Composite",
          className: "WorkspaceCustomStringParameter"
        }
      },
      customVirtualNetworkId: {
        serializedName: "customVirtualNetworkId",
        type: {
          name: "Composite",
          className: "WorkspaceCustomStringParameter"
        }
      },
      customPublicSubnetName: {
        serializedName: "customPublicSubnetName",
        type: {
          name: "Composite",
          className: "WorkspaceCustomStringParameter"
        }
      },
      customPrivateSubnetName: {
        serializedName: "customPrivateSubnetName",
        type: {
          name: "Composite",
          className: "WorkspaceCustomStringParameter"
        }
      },
      enableNoPublicIp: {
        serializedName: "enableNoPublicIp",
        type: {
          name: "Composite",
          className: "WorkspaceCustomBooleanParameter"
        }
      },
      prepareEncryption: {
        serializedName: "prepareEncryption",
        type: {
          name: "Composite",
          className: "WorkspaceCustomBooleanParameter"
        }
      },
      encryption: {
        serializedName: "encryption",
        type: {
          name: "Composite",
          className: "WorkspaceEncryptionParameter"
        }
      },
      requireInfrastructureEncryption: {
        serializedName: "requireInfrastructureEncryption",
        type: {
          name: "Composite",
          className: "WorkspaceCustomBooleanParameter"
        }
      }
    }
  }
};

export const WorkspaceProviderAuthorization: msRest.CompositeMapper = {
  serializedName: "WorkspaceProviderAuthorization",
  type: {
    name: "Composite",
    className: "WorkspaceProviderAuthorization",
    modelProperties: {
      principalId: {
        required: true,
        serializedName: "principalId",
        type: {
          name: "Uuid"
        }
      },
      roleDefinitionId: {
        required: true,
        serializedName: "roleDefinitionId",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const CreatedBy: msRest.CompositeMapper = {
  serializedName: "CreatedBy",
  type: {
    name: "Composite",
    className: "CreatedBy",
    modelProperties: {
      oid: {
        readOnly: true,
        serializedName: "oid",
        type: {
          name: "Uuid"
        }
      },
      puid: {
        readOnly: true,
        serializedName: "puid",
        type: {
          name: "String"
        }
      },
      applicationId: {
        readOnly: true,
        serializedName: "applicationId",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const ManagedIdentityConfiguration: msRest.CompositeMapper = {
  serializedName: "ManagedIdentityConfiguration",
  type: {
    name: "Composite",
    className: "ManagedIdentityConfiguration",
    modelProperties: {
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "tenantId",
        type: {
          name: "Uuid"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Sku: msRest.CompositeMapper = {
  serializedName: "Sku",
  type: {
    name: "Composite",
    className: "Sku",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "tier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Workspace: msRest.CompositeMapper = {
  serializedName: "Workspace",
  type: {
    name: "Composite",
    className: "Workspace",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      managedResourceGroupId: {
        required: true,
        serializedName: "properties.managedResourceGroupId",
        type: {
          name: "String"
        }
      },
      parameters: {
        serializedName: "properties.parameters",
        type: {
          name: "Composite",
          className: "WorkspaceCustomParameters"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      uiDefinitionUri: {
        serializedName: "properties.uiDefinitionUri",
        type: {
          name: "String"
        }
      },
      authorizations: {
        serializedName: "properties.authorizations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WorkspaceProviderAuthorization"
            }
          }
        }
      },
      createdBy: {
        serializedName: "properties.createdBy",
        type: {
          name: "Composite",
          className: "CreatedBy"
        }
      },
      updatedBy: {
        serializedName: "properties.updatedBy",
        type: {
          name: "Composite",
          className: "CreatedBy"
        }
      },
      createdDateTime: {
        serializedName: "properties.createdDateTime",
        type: {
          name: "DateTime"
        }
      },
      workspaceId: {
        readOnly: true,
        serializedName: "properties.workspaceId",
        type: {
          name: "String"
        }
      },
      workspaceUrl: {
        readOnly: true,
        serializedName: "properties.workspaceUrl",
        type: {
          name: "String"
        }
      },
      storageAccountIdentity: {
        serializedName: "properties.storageAccountIdentity",
        type: {
          name: "Composite",
          className: "ManagedIdentityConfiguration"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      }
    }
  }
};

export const WorkspaceCustomObjectParameter: msRest.CompositeMapper = {
  serializedName: "WorkspaceCustomObjectParameter",
  type: {
    name: "Composite",
    className: "WorkspaceCustomObjectParameter",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const WorkspaceUpdate: msRest.CompositeMapper = {
  serializedName: "WorkspaceUpdate",
  type: {
    name: "Composite",
    className: "WorkspaceUpdate",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ErrorDetail: msRest.CompositeMapper = {
  serializedName: "ErrorDetail",
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        required: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        required: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorInfo: msRest.CompositeMapper = {
  serializedName: "ErrorInfo",
  type: {
    name: "Composite",
    className: "ErrorInfo",
    modelProperties: {
      code: {
        required: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        required: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      },
      innererror: {
        serializedName: "innererror",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        required: true,
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorInfo"
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "Operation_display",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      }
    }
  }
};

export const VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkPeeringPropertiesFormat_databricksVirtualNetwork",
  type: {
    name: "Composite",
    className: "VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AddressSpace: msRest.CompositeMapper = {
  serializedName: "AddressSpace",
  type: {
    name: "Composite",
    className: "AddressSpace",
    modelProperties: {
      addressPrefixes: {
        serializedName: "addressPrefixes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const VirtualNetworkPeeringPropertiesFormatRemoteVirtualNetwork: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkPeeringPropertiesFormat_remoteVirtualNetwork",
  type: {
    name: "Composite",
    className: "VirtualNetworkPeeringPropertiesFormatRemoteVirtualNetwork",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualNetworkPeering: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkPeering",
  type: {
    name: "Composite",
    className: "VirtualNetworkPeering",
    modelProperties: {
      allowVirtualNetworkAccess: {
        serializedName: "properties.allowVirtualNetworkAccess",
        type: {
          name: "Boolean"
        }
      },
      allowForwardedTraffic: {
        serializedName: "properties.allowForwardedTraffic",
        type: {
          name: "Boolean"
        }
      },
      allowGatewayTransit: {
        serializedName: "properties.allowGatewayTransit",
        type: {
          name: "Boolean"
        }
      },
      useRemoteGateways: {
        serializedName: "properties.useRemoteGateways",
        type: {
          name: "Boolean"
        }
      },
      databricksVirtualNetwork: {
        serializedName: "properties.databricksVirtualNetwork",
        type: {
          name: "Composite",
          className: "VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork"
        }
      },
      databricksAddressSpace: {
        serializedName: "properties.databricksAddressSpace",
        type: {
          name: "Composite",
          className: "AddressSpace"
        }
      },
      remoteVirtualNetwork: {
        required: true,
        serializedName: "properties.remoteVirtualNetwork",
        type: {
          name: "Composite",
          className: "VirtualNetworkPeeringPropertiesFormatRemoteVirtualNetwork"
        }
      },
      remoteAddressSpace: {
        serializedName: "properties.remoteAddressSpace",
        type: {
          name: "Composite",
          className: "AddressSpace"
        }
      },
      peeringState: {
        readOnly: true,
        serializedName: "properties.peeringState",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkspaceListResult: msRest.CompositeMapper = {
  serializedName: "WorkspaceListResult",
  type: {
    name: "Composite",
    className: "WorkspaceListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Workspace"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualNetworkPeeringList: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkPeeringList",
  type: {
    name: "Composite",
    className: "VirtualNetworkPeeringList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualNetworkPeering"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
