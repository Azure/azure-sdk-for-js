/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Publisher,
  PublishersListOptionalParams,
  PublishersListBySubscriptionOptionalParams,
  PublishersGetOptionalParams,
  PublishersGetResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Publishers. */
export interface Publishers {
  /**
   * List Publisher resources by parent
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param options The options parameters.
   */
  list(
    resourceUri: string,
    options?: PublishersListOptionalParams,
  ): PagedAsyncIterableIterator<Publisher>;
  /**
   * List Publisher resources in subscription
   * @param options The options parameters.
   */
  listBySubscription(
    options?: PublishersListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<Publisher>;
  /**
   * Get a Publisher
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param publisherName Name of the publisher
   * @param options The options parameters.
   */
  get(
    resourceUri: string,
    publisherName: string,
    options?: PublishersGetOptionalParams,
  ): Promise<PublishersGetResponse>;
}
