/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter,
} from "@azure/core-client";
import {
  ContainerGroup as ContainerGroupMapper,
  Resource as ResourceMapper,
  ContainerExecRequest as ContainerExecRequestMapper,
  ContainerGroupProfile as ContainerGroupProfileMapper,
  ContainerGroupProfilePatch as ContainerGroupProfilePatchMapper,
} from "../models/mappers";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String",
    },
  },
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "Uuid",
    },
  },
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2024-05-01-preview",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String",
    },
  },
};

export const resourceGroupName: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    constraints: {
      MaxLength: 90,
      MinLength: 1,
    },
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const containerGroupName: OperationURLParameter = {
  parameterPath: "containerGroupName",
  mapper: {
    serializedName: "containerGroupName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String",
    },
  },
};

export const containerGroup: OperationParameter = {
  parameterPath: "containerGroup",
  mapper: ContainerGroupMapper,
};

export const resource: OperationParameter = {
  parameterPath: "resource",
  mapper: ResourceMapper,
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const location: OperationURLParameter = {
  parameterPath: "location",
  mapper: {
    constraints: {
      MinLength: 1,
    },
    serializedName: "location",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const containerName: OperationURLParameter = {
  parameterPath: "containerName",
  mapper: {
    serializedName: "containerName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const tail: OperationQueryParameter = {
  parameterPath: ["options", "tail"],
  mapper: {
    serializedName: "tail",
    type: {
      name: "Number",
    },
  },
};

export const timestamps: OperationQueryParameter = {
  parameterPath: ["options", "timestamps"],
  mapper: {
    serializedName: "timestamps",
    type: {
      name: "Boolean",
    },
  },
};

export const containerExecRequest: OperationParameter = {
  parameterPath: "containerExecRequest",
  mapper: ContainerExecRequestMapper,
};

export const virtualNetworkName: OperationURLParameter = {
  parameterPath: "virtualNetworkName",
  mapper: {
    serializedName: "virtualNetworkName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const subnetName: OperationURLParameter = {
  parameterPath: "subnetName",
  mapper: {
    serializedName: "subnetName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const containerGroupProfileName: OperationURLParameter = {
  parameterPath: "containerGroupProfileName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^(?!.*--)[a-z0-9]([-a-z0-9]*[a-z0-9])?$"),
      MaxLength: 63,
      MinLength: 1,
    },
    serializedName: "containerGroupProfileName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const containerGroupProfile: OperationParameter = {
  parameterPath: "containerGroupProfile",
  mapper: ContainerGroupProfileMapper,
};

export const properties: OperationParameter = {
  parameterPath: "properties",
  mapper: ContainerGroupProfilePatchMapper,
};

export const revisionNumber: OperationURLParameter = {
  parameterPath: "revisionNumber",
  mapper: {
    serializedName: "revisionNumber",
    required: true,
    type: {
      name: "String",
    },
  },
};
