/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator, PageSettings } from "@azure/core-paging";
import { setContinuationToken } from "../pagingHelper";
import { ContainerGroupProfileOperations } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { ContainerInstanceManagementClient } from "../containerInstanceManagementClient";
import {
  ContainerGroupProfile,
  ContainerGroupProfileListAllRevisionsNextOptionalParams,
  ContainerGroupProfileListAllRevisionsOptionalParams,
  ContainerGroupProfileListAllRevisionsResponse,
  ContainerGroupProfileGetByRevisionNumberOptionalParams,
  ContainerGroupProfileGetByRevisionNumberResponse,
  ContainerGroupProfileListAllRevisionsNextResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Class containing ContainerGroupProfileOperations operations. */
export class ContainerGroupProfileOperationsImpl
  implements ContainerGroupProfileOperations
{
  private readonly client: ContainerInstanceManagementClient;

  /**
   * Initialize a new instance of the class ContainerGroupProfileOperations class.
   * @param client Reference to the service client
   */
  constructor(client: ContainerInstanceManagementClient) {
    this.client = client;
  }

  /**
   * Get a list of all the revisions of the specified container group profile in the given subscription
   * and resource group. This operation returns properties of each revision of the specified container
   * group profile including containers, image registry credentials, restart policy, IP address type, OS
   * type volumes, revision number, etc.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param containerGroupProfileName The name of the container group profile.
   * @param options The options parameters.
   */
  public listAllRevisions(
    resourceGroupName: string,
    containerGroupProfileName: string,
    options?: ContainerGroupProfileListAllRevisionsOptionalParams,
  ): PagedAsyncIterableIterator<ContainerGroupProfile> {
    const iter = this.listAllRevisionsPagingAll(
      resourceGroupName,
      containerGroupProfileName,
      options,
    );
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: (settings?: PageSettings) => {
        if (settings?.maxPageSize) {
          throw new Error("maxPageSize is not supported by this operation.");
        }
        return this.listAllRevisionsPagingPage(
          resourceGroupName,
          containerGroupProfileName,
          options,
          settings,
        );
      },
    };
  }

  private async *listAllRevisionsPagingPage(
    resourceGroupName: string,
    containerGroupProfileName: string,
    options?: ContainerGroupProfileListAllRevisionsOptionalParams,
    settings?: PageSettings,
  ): AsyncIterableIterator<ContainerGroupProfile[]> {
    let result: ContainerGroupProfileListAllRevisionsResponse;
    let continuationToken = settings?.continuationToken;
    if (!continuationToken) {
      result = await this._listAllRevisions(
        resourceGroupName,
        containerGroupProfileName,
        options,
      );
      let page = result.value || [];
      continuationToken = result.nextLink;
      setContinuationToken(page, continuationToken);
      yield page;
    }
    while (continuationToken) {
      result = await this._listAllRevisionsNext(
        resourceGroupName,
        containerGroupProfileName,
        continuationToken,
        options,
      );
      continuationToken = result.nextLink;
      let page = result.value || [];
      setContinuationToken(page, continuationToken);
      yield page;
    }
  }

  private async *listAllRevisionsPagingAll(
    resourceGroupName: string,
    containerGroupProfileName: string,
    options?: ContainerGroupProfileListAllRevisionsOptionalParams,
  ): AsyncIterableIterator<ContainerGroupProfile> {
    for await (const page of this.listAllRevisionsPagingPage(
      resourceGroupName,
      containerGroupProfileName,
      options,
    )) {
      yield* page;
    }
  }

  /**
   * Get a list of all the revisions of the specified container group profile in the given subscription
   * and resource group. This operation returns properties of each revision of the specified container
   * group profile including containers, image registry credentials, restart policy, IP address type, OS
   * type volumes, revision number, etc.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param containerGroupProfileName The name of the container group profile.
   * @param options The options parameters.
   */
  private _listAllRevisions(
    resourceGroupName: string,
    containerGroupProfileName: string,
    options?: ContainerGroupProfileListAllRevisionsOptionalParams,
  ): Promise<ContainerGroupProfileListAllRevisionsResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, containerGroupProfileName, options },
      listAllRevisionsOperationSpec,
    );
  }

  /**
   * Gets the properties of the specified revision of the container group profile in the given
   * subscription and resource group. The operation returns the properties of container group profile
   * including containers, image registry credentials, restart policy, IP address type, OS type, volumes,
   * current revision number, etc.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param containerGroupProfileName The name of the container group profile.
   * @param revisionNumber The revision number of the container group profile.
   * @param options The options parameters.
   */
  getByRevisionNumber(
    resourceGroupName: string,
    containerGroupProfileName: string,
    revisionNumber: string,
    options?: ContainerGroupProfileGetByRevisionNumberOptionalParams,
  ): Promise<ContainerGroupProfileGetByRevisionNumberResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, containerGroupProfileName, revisionNumber, options },
      getByRevisionNumberOperationSpec,
    );
  }

  /**
   * ListAllRevisionsNext
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param containerGroupProfileName The name of the container group profile.
   * @param nextLink The nextLink from the previous successful call to the ListAllRevisions method.
   * @param options The options parameters.
   */
  private _listAllRevisionsNext(
    resourceGroupName: string,
    containerGroupProfileName: string,
    nextLink: string,
    options?: ContainerGroupProfileListAllRevisionsNextOptionalParams,
  ): Promise<ContainerGroupProfileListAllRevisionsNextResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, containerGroupProfileName, nextLink, options },
      listAllRevisionsNextOperationSpec,
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const listAllRevisionsOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroupProfiles/{containerGroupProfileName}/revisions",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.ContainerGroupProfileListResult,
    },
    default: {
      bodyMapper: Mappers.CloudError,
    },
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.containerGroupProfileName,
  ],
  headerParameters: [Parameters.accept],
  serializer,
};
const getByRevisionNumberOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroupProfiles/{containerGroupProfileName}/revisions/{revisionNumber}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.ContainerGroupProfile,
    },
    default: {
      bodyMapper: Mappers.CloudError,
    },
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.containerGroupProfileName,
    Parameters.revisionNumber,
  ],
  headerParameters: [Parameters.accept],
  serializer,
};
const listAllRevisionsNextOperationSpec: coreClient.OperationSpec = {
  path: "{nextLink}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.ContainerGroupProfileListResult,
    },
    default: {
      bodyMapper: Mappers.CloudError,
    },
  },
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.nextLink,
    Parameters.containerGroupProfileName,
  ],
  headerParameters: [Parameters.accept],
  serializer,
};
