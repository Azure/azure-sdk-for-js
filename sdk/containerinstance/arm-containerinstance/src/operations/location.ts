/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/locationMappers";
import * as Parameters from "../models/parameters";
import { ContainerInstanceManagementClientContext } from "../containerInstanceManagementClientContext";

/** Class representing a Location. */
export class Location {
  private readonly client: ContainerInstanceManagementClientContext;

  /**
   * Create a Location.
   * @param {ContainerInstanceManagementClientContext} client Reference to the service client.
   */
  constructor(client: ContainerInstanceManagementClientContext) {
    this.client = client;
  }

  /**
   * Get the usage for a subscription
   * @param location The identifier for the physical azure location.
   * @param [options] The optional parameters
   * @returns Promise<Models.LocationListUsageResponse>
   */
  listUsage(location: string, options?: msRest.RequestOptionsBase): Promise<Models.LocationListUsageResponse>;
  /**
   * @param location The identifier for the physical azure location.
   * @param callback The callback
   */
  listUsage(location: string, callback: msRest.ServiceCallback<Models.UsageListResult>): void;
  /**
   * @param location The identifier for the physical azure location.
   * @param options The optional parameters
   * @param callback The callback
   */
  listUsage(location: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.UsageListResult>): void;
  listUsage(location: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.UsageListResult>, callback?: msRest.ServiceCallback<Models.UsageListResult>): Promise<Models.LocationListUsageResponse> {
    return this.client.sendOperationRequest(
      {
        location,
        options
      },
      listUsageOperationSpec,
      callback) as Promise<Models.LocationListUsageResponse>;
  }

  /**
   * Get the list of cached images on specific OS type for a subscription in a region.
   * @summary Get the list of cached images.
   * @param location The identifier for the physical azure location.
   * @param [options] The optional parameters
   * @returns Promise<Models.LocationListCachedImagesResponse>
   */
  listCachedImages(location: string, options?: msRest.RequestOptionsBase): Promise<Models.LocationListCachedImagesResponse>;
  /**
   * @param location The identifier for the physical azure location.
   * @param callback The callback
   */
  listCachedImages(location: string, callback: msRest.ServiceCallback<Models.CachedImagesListResult>): void;
  /**
   * @param location The identifier for the physical azure location.
   * @param options The optional parameters
   * @param callback The callback
   */
  listCachedImages(location: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CachedImagesListResult>): void;
  listCachedImages(location: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CachedImagesListResult>, callback?: msRest.ServiceCallback<Models.CachedImagesListResult>): Promise<Models.LocationListCachedImagesResponse> {
    return this.client.sendOperationRequest(
      {
        location,
        options
      },
      listCachedImagesOperationSpec,
      callback) as Promise<Models.LocationListCachedImagesResponse>;
  }

  /**
   * Get the list of CPU/memory/GPU capabilities of a region.
   * @summary Get the list of capabilities of the location.
   * @param location The identifier for the physical azure location.
   * @param [options] The optional parameters
   * @returns Promise<Models.LocationListCapabilitiesResponse>
   */
  listCapabilities(location: string, options?: msRest.RequestOptionsBase): Promise<Models.LocationListCapabilitiesResponse>;
  /**
   * @param location The identifier for the physical azure location.
   * @param callback The callback
   */
  listCapabilities(location: string, callback: msRest.ServiceCallback<Models.CapabilitiesListResult>): void;
  /**
   * @param location The identifier for the physical azure location.
   * @param options The optional parameters
   * @param callback The callback
   */
  listCapabilities(location: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CapabilitiesListResult>): void;
  listCapabilities(location: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CapabilitiesListResult>, callback?: msRest.ServiceCallback<Models.CapabilitiesListResult>): Promise<Models.LocationListCapabilitiesResponse> {
    return this.client.sendOperationRequest(
      {
        location,
        options
      },
      listCapabilitiesOperationSpec,
      callback) as Promise<Models.LocationListCapabilitiesResponse>;
  }

  /**
   * Get the list of cached images on specific OS type for a subscription in a region.
   * @summary Get the list of cached images.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.LocationListCachedImagesNextResponse>
   */
  listCachedImagesNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.LocationListCachedImagesNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listCachedImagesNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.CachedImagesListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listCachedImagesNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CachedImagesListResult>): void;
  listCachedImagesNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CachedImagesListResult>, callback?: msRest.ServiceCallback<Models.CachedImagesListResult>): Promise<Models.LocationListCachedImagesNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listCachedImagesNextOperationSpec,
      callback) as Promise<Models.LocationListCachedImagesNextResponse>;
  }

  /**
   * Get the list of CPU/memory/GPU capabilities of a region.
   * @summary Get the list of capabilities of the location.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.LocationListCapabilitiesNextResponse>
   */
  listCapabilitiesNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.LocationListCapabilitiesNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listCapabilitiesNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.CapabilitiesListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listCapabilitiesNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CapabilitiesListResult>): void;
  listCapabilitiesNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CapabilitiesListResult>, callback?: msRest.ServiceCallback<Models.CapabilitiesListResult>): Promise<Models.LocationListCapabilitiesNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listCapabilitiesNextOperationSpec,
      callback) as Promise<Models.LocationListCapabilitiesNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listUsageOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/locations/{location}/usages",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.location
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.UsageListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listCachedImagesOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/locations/{location}/cachedImages",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.location
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.CachedImagesListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listCapabilitiesOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/locations/{location}/capabilities",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.location
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.CapabilitiesListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listCachedImagesNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.CachedImagesListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listCapabilitiesNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.CapabilitiesListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
