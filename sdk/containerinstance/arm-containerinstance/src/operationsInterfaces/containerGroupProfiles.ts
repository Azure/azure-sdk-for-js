/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ContainerGroupProfile,
  ContainerGroupProfilesListOptionalParams,
  ContainerGroupProfilesListByResourceGroupOptionalParams,
  ContainerGroupProfilesGetOptionalParams,
  ContainerGroupProfilesGetResponse,
  ContainerGroupProfilesCreateOrUpdateOptionalParams,
  ContainerGroupProfilesCreateOrUpdateResponse,
  ContainerGroupProfilePatch,
  ContainerGroupProfilesPatchOptionalParams,
  ContainerGroupProfilesPatchResponse,
  ContainerGroupProfilesDeleteOptionalParams,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ContainerGroupProfiles. */
export interface ContainerGroupProfiles {
  /**
   * Get a list of container group profiles in the specified subscription. This operation returns
   * properties of each container group profile including containers, image registry credentials, restart
   * policy, IP address type, OS type,volumes,current revision number, etc.
   * @param options The options parameters.
   */
  list(
    options?: ContainerGroupProfilesListOptionalParams,
  ): PagedAsyncIterableIterator<ContainerGroupProfile>;
  /**
   * Get a list of container group profiles in a specified subscription and resource group. This
   * operation returns properties of each container group profile including containers, image registry
   * credentials, restart policy, IP address type, OS type volumes, current revision number, etc.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: ContainerGroupProfilesListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<ContainerGroupProfile>;
  /**
   * Gets the properties of the specified container group profile in the specified subscription and
   * resource group. The operation returns the properties of container group profile including
   * containers, image registry credentials, restart policy, IP address type, OS type, volumes, current
   * revision number, etc.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param containerGroupProfileName The name of the container group profile.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    containerGroupProfileName: string,
    options?: ContainerGroupProfilesGetOptionalParams,
  ): Promise<ContainerGroupProfilesGetResponse>;
  /**
   * Create or update container group profiles with specified configurations.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param containerGroupProfileName The name of the container group profile.
   * @param containerGroupProfile The properties of the container group profile to be created or updated.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    containerGroupProfileName: string,
    containerGroupProfile: ContainerGroupProfile,
    options?: ContainerGroupProfilesCreateOrUpdateOptionalParams,
  ): Promise<ContainerGroupProfilesCreateOrUpdateResponse>;
  /**
   * Patches container group profile with specified properties.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param containerGroupProfileName The name of the container group profile.
   * @param properties The container group profile properties that need to be updated.
   * @param options The options parameters.
   */
  patch(
    resourceGroupName: string,
    containerGroupProfileName: string,
    properties: ContainerGroupProfilePatch,
    options?: ContainerGroupProfilesPatchOptionalParams,
  ): Promise<ContainerGroupProfilesPatchResponse>;
  /**
   * Delete the specified container group profile in the specified subscription and resource group. The
   * operation does not delete other resources provided by the user, such as volumes.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param containerGroupProfileName The name of the container group profile.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    containerGroupProfileName: string,
    options?: ContainerGroupProfilesDeleteOptionalParams,
  ): Promise<void>;
}
