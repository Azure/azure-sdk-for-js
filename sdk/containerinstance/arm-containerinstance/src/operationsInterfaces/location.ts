/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Usage,
  LocationListUsageOptionalParams,
  CachedImages,
  LocationListCachedImagesOptionalParams,
  Capabilities,
  LocationListCapabilitiesOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Location. */
export interface Location {
  /**
   * Get the usage for a subscription
   * @param location The identifier for the physical azure location.
   * @param options The options parameters.
   */
  listUsage(
    location: string,
    options?: LocationListUsageOptionalParams
  ): PagedAsyncIterableIterator<Usage>;
  /**
   * Get the list of cached images on specific OS type for a subscription in a region.
   * @param location The identifier for the physical azure location.
   * @param options The options parameters.
   */
  listCachedImages(
    location: string,
    options?: LocationListCachedImagesOptionalParams
  ): PagedAsyncIterableIterator<CachedImages>;
  /**
   * Get the list of CPU/memory/GPU capabilities of a region.
   * @param location The identifier for the physical azure location.
   * @param options The options parameters.
   */
  listCapabilities(
    location: string,
    options?: LocationListCapabilitiesOptionalParams
  ): PagedAsyncIterableIterator<Capabilities>;
}
