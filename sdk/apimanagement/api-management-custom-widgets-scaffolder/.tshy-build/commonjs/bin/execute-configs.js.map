{"version":3,"file":"execute-configs.js","sourceRoot":"","sources":["../../../src/bin/execute-configs.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { Configs, ServiceInformation, Options, WidgetConfig } from \"../scaffolding.js\";\nimport { TECHNOLOGIES } from \"../scaffolding.js\";\n\nexport const fieldIdToName: Record<\n  keyof (WidgetConfig & ServiceInformation & Options) | string,\n  string\n> = {\n  displayName: \"Widget display name\",\n  technology: \"Technology\",\n  iconUrl: \"iconUrl\",\n\n  resourceId:\n    \"Azure API Management resource ID (following format: subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.ApiManagement/service/<api-management service-name>)\",\n  managementApiEndpoint: \"Management API hostname\",\n  apiVersion: \"Management API version\",\n\n  openUrl: \"Developer portal URL\",\n  configAdvancedTenantId: \"Tenant ID\",\n  configAdvancedRedirectUri: \"Redirect URI\",\n};\n\nexport const prefixUrlProtocol = (value: string): string =>\n  /https?:\\/\\//.test(value) ? value : `https://${value}`;\n\nconst validateRequired =\n  (name: string, msg: string = `The “${name}” parameter is required.`) =>\n  (input: unknown) =>\n    (input != null && input !== \"\") || msg;\n\nconst validateUrl =\n  (\n    name: string,\n    msg = (input: string) =>\n      `Provided “${name}” parameter value (“${prefixUrlProtocol(\n        input,\n      )}”) isn’t a valid URL. Use the correct URL format, e.g., https://contoso.com.`,\n  ) =>\n  (input: string) => {\n    try {\n      new URL(prefixUrlProtocol(input));\n      return true;\n    } catch (e) {\n      return msg(prefixUrlProtocol(input));\n    }\n  };\n\nexport type ReplaceTypesPreserveOptional<T extends Record<any, any>, V> = {\n  [Key in keyof T]: T[Key] extends undefined ? V | undefined : V;\n};\n\nexport type ValidateFnc = (input: string) => boolean | string;\nexport type Validate<C extends Configs> = ReplaceTypesPreserveOptional<C, ValidateFnc>;\n\nexport const validateWidgetConfig: Validate<WidgetConfig> = {\n  displayName: validateRequired(fieldIdToName.displayName),\n  technology: (input) => {\n    const required = validateRequired(fieldIdToName.technology)(input);\n    if (required !== true) return required;\n\n    if (TECHNOLOGIES.includes(input as any)) {\n      return true;\n    } else {\n      return (\n        \"Provided “technology” parameter value isn’t correct. Use one of the following: \" +\n        TECHNOLOGIES.join(\", \")\n      );\n    }\n  },\n};\n\nexport const validateDeployConfig: Validate<ServiceInformation> = {\n  resourceId: (input) => {\n    const required = validateRequired(fieldIdToName.resourceId)(input);\n    if (required !== true) return required;\n\n    const regex =\n      /^\\/?subscriptions\\/[^/]+\\/resourceGroups\\/[^/]+\\/providers\\/Microsoft\\.ApiManagement\\/service\\/[^/]+\\/?$/;\n    return input === \"test\" || regex.test(input)\n      ? true\n      : \"Resource ID needs to be a valid Azure resource ID. For example, subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso-group/providers/Microsoft.ApiManagement/service/contoso-apis.\";\n  },\n  managementApiEndpoint: (input) => validateRequired(fieldIdToName.managementApiEndpoint)(input),\n};\n\nexport const validateMiscConfig: Validate<Options> = {\n  openUrl: (input) => {\n    if (!input) return true;\n    return validateUrl(fieldIdToName.openUrl)(input);\n  },\n  configAdvancedTenantId: () => {\n    return true;\n  },\n  configAdvancedRedirectUri: (input) => {\n    if (!input) return true;\n    return validateUrl(fieldIdToName.openUrl)(input);\n  },\n};\n\nexport const promptWidgetConfig = async (partial: Partial<WidgetConfig>): Promise<WidgetConfig> => {\n  const inquirerImport = await import(\"inquirer\");\n  const inquirer = inquirerImport.default;\n  return inquirer.prompt(\n    [\n      {\n        name: \"displayName\",\n        type: \"input\",\n        message: fieldIdToName.displayName,\n        validate: validateWidgetConfig.displayName,\n      },\n      {\n        name: \"technology\",\n        type: \"list\",\n        message: fieldIdToName.technology,\n        choices: [\n          { name: \"React\", value: \"react\" },\n          { name: \"Vue\", value: \"vue\" },\n          { name: \"TypeScript\", value: \"typescript\" },\n        ],\n      },\n    ],\n    partial,\n  );\n};\n\nexport const promptServiceInformation = async (\n  partial: Partial<ServiceInformation>,\n): Promise<ServiceInformation> => {\n  const inquirerImport = await import(\"inquirer\");\n  const inquirer = inquirerImport.default;\n  return inquirer.prompt(\n    [\n      {\n        name: \"resourceId\",\n        type: \"input\",\n        message: fieldIdToName.resourceId,\n        validate: validateDeployConfig.resourceId,\n      },\n      {\n        name: \"managementApiEndpoint\",\n        type: \"list\",\n        message: fieldIdToName.managementApiEndpoint,\n        choices: [\n          {\n            name: \"management.azure.com (if you're not sure what to select, use this option)\",\n            value: \"management.azure.com\",\n          },\n          { name: \"management.usgovcloudapi.net\", value: \"management.usgovcloudapi.net\" },\n          { name: \"management.chinacloudapi.cn\", value: \"management.chinacloudapi.cn\" },\n        ],\n        transformer: prefixUrlProtocol,\n        validate: validateDeployConfig.managementApiEndpoint,\n      },\n      {\n        name: \"apiVersion\",\n        type: \"input\",\n        message: fieldIdToName.apiVersion + \" (optional; e.g., 2021-08-01)\",\n      },\n    ],\n    partial,\n  );\n};\n\nexport const promptMiscConfig = async (partial: Partial<Options>): Promise<Options> => {\n  const inquirerImport = await import(\"inquirer\");\n  const inquirer = inquirerImport.default;\n  return inquirer.prompt(\n    [\n      {\n        name: \"openUrl\",\n        type: \"input\",\n        message:\n          fieldIdToName.openUrl +\n          \" for widget development and testing (optional; e.g., https://contoso.developer.azure-api.net/ or http://localhost:8080)\",\n        transformer: prefixUrlProtocol,\n        validate: validateMiscConfig.openUrl,\n      },\n      {\n        name: \"configAdvancedTenantId\",\n        type: \"input\",\n        message:\n          fieldIdToName.configAdvancedTenantId +\n          \" to be used in Azure Identity InteractiveBrowserCredential class (optional)\",\n        validate: validateMiscConfig.openUrl,\n      },\n      {\n        name: \"configAdvancedRedirectUri\",\n        type: \"input\",\n        message:\n          fieldIdToName.configAdvancedRedirectUri +\n          \" to be used in Azure Identity InteractiveBrowserCredential class (optional; default is http://localhost:1337)\",\n        validate: validateMiscConfig.openUrl,\n      },\n    ],\n    partial,\n  );\n};\n"]}