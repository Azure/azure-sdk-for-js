/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import {
  GlobalSchemaContract,
  ApiManagementClient
} from "@azure/arm-apimanagement";
import { DefaultAzureCredential } from "@azure/identity";

/**
 * This sample demonstrates how to Creates new or updates existing specified Schema of the API Management service instance.
 *
 * @summary Creates new or updates existing specified Schema of the API Management service instance.
 * x-ms-original-file: specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2021-08-01/examples/ApiManagementCreateGlobalSchema1.json
 */
async function apiManagementCreateSchema1() {
  const subscriptionId = "subid";
  const resourceGroupName = "rg1";
  const serviceName = "apimService1";
  const schemaId = "schema1";
  const parameters: GlobalSchemaContract = {
    description: "sample schema description",
    schemaType: "xml",
    value:
      '<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"           xmlns:tns="http://tempuri.org/PurchaseOrderSchema.xsd"           targetNamespace="http://tempuri.org/PurchaseOrderSchema.xsd"           elementFormDefault="qualified"> <xsd:element name="PurchaseOrder" type="tns:PurchaseOrderType"/> <xsd:complexType name="PurchaseOrderType">  <xsd:sequence>   <xsd:element name="ShipTo" type="tns:USAddress" maxOccurs="2"/>   <xsd:element name="BillTo" type="tns:USAddress"/>  </xsd:sequence>  <xsd:attribute name="OrderDate" type="xsd:date"/> </xsd:complexType> <xsd:complexType name="USAddress">  <xsd:sequence>   <xsd:element name="name"   type="xsd:string"/>   <xsd:element name="street" type="xsd:string"/>   <xsd:element name="city"   type="xsd:string"/>   <xsd:element name="state"  type="xsd:string"/>   <xsd:element name="zip"    type="xsd:integer"/>  </xsd:sequence>  <xsd:attribute name="country" type="xsd:NMTOKEN" fixed="US"/> </xsd:complexType></xsd:schema>'
  };
  const credential = new DefaultAzureCredential();
  const client = new ApiManagementClient(credential, subscriptionId);
  const result = await client.globalSchema.beginCreateOrUpdateAndWait(
    resourceGroupName,
    serviceName,
    schemaId,
    parameters
  );
  console.log(result);
}

apiManagementCreateSchema1().catch(console.error);

/**
 * This sample demonstrates how to Creates new or updates existing specified Schema of the API Management service instance.
 *
 * @summary Creates new or updates existing specified Schema of the API Management service instance.
 * x-ms-original-file: specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2021-08-01/examples/ApiManagementCreateGlobalSchema2.json
 */
async function apiManagementCreateSchema2() {
  const subscriptionId = "subid";
  const resourceGroupName = "rg1";
  const serviceName = "apimService1";
  const schemaId = "schema1";
  const parameters: GlobalSchemaContract = {
    description: "sample schema description",
    document: {
      type: "object",
      $id: "https://example.com/person.schema.json",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      properties: {
        age: {
          type: "integer",
          description:
            "Age in years which must be equal to or greater than zero.",
          minimum: 0
        },
        firstName: { type: "string", description: "The person's first name." },
        lastName: { type: "string", description: "The person's last name." }
      },
      title: "Person"
    },
    schemaType: "json"
  };
  const credential = new DefaultAzureCredential();
  const client = new ApiManagementClient(credential, subscriptionId);
  const result = await client.globalSchema.beginCreateOrUpdateAndWait(
    resourceGroupName,
    serviceName,
    schemaId,
    parameters
  );
  console.log(result);
}

apiManagementCreateSchema2().catch(console.error);
