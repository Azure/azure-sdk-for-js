/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/quotaByCounterKeysMappers";
import * as Parameters from "../models/parameters";
import { ApiManagementClientContext } from "../apiManagementClientContext";

/** Class representing a QuotaByCounterKeys. */
export class QuotaByCounterKeys {
  private readonly client: ApiManagementClientContext;

  /**
   * Create a QuotaByCounterKeys.
   * @param {ApiManagementClientContext} client Reference to the service client.
   */
  constructor(client: ApiManagementClientContext) {
    this.client = client;
  }

  /**
   * Lists a collection of current quota counter periods associated with the counter-key configured
   * in the policy on the specified service instance. The api does not support paging yet.
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param quotaCounterKey Quota counter key identifier.This is the result of expression defined in
   * counter-key attribute of the quota-by-key policy.For Example, if you specify counter-key="boo"
   * in the policy, then it’s accessible by "boo" counter key. But if it’s defined as
   * counter-key="@("b"+"a")" then it will be accessible by "ba" key
   * @param [options] The optional parameters
   * @returns Promise<Models.QuotaByCounterKeysListByServiceResponse>
   */
  listByService(resourceGroupName: string, serviceName: string, quotaCounterKey: string, options?: msRest.RequestOptionsBase): Promise<Models.QuotaByCounterKeysListByServiceResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param quotaCounterKey Quota counter key identifier.This is the result of expression defined in
   * counter-key attribute of the quota-by-key policy.For Example, if you specify counter-key="boo"
   * in the policy, then it’s accessible by "boo" counter key. But if it’s defined as
   * counter-key="@("b"+"a")" then it will be accessible by "ba" key
   * @param callback The callback
   */
  listByService(resourceGroupName: string, serviceName: string, quotaCounterKey: string, callback: msRest.ServiceCallback<Models.QuotaCounterCollection>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param quotaCounterKey Quota counter key identifier.This is the result of expression defined in
   * counter-key attribute of the quota-by-key policy.For Example, if you specify counter-key="boo"
   * in the policy, then it’s accessible by "boo" counter key. But if it’s defined as
   * counter-key="@("b"+"a")" then it will be accessible by "ba" key
   * @param options The optional parameters
   * @param callback The callback
   */
  listByService(resourceGroupName: string, serviceName: string, quotaCounterKey: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.QuotaCounterCollection>): void;
  listByService(resourceGroupName: string, serviceName: string, quotaCounterKey: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.QuotaCounterCollection>, callback?: msRest.ServiceCallback<Models.QuotaCounterCollection>): Promise<Models.QuotaByCounterKeysListByServiceResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serviceName,
        quotaCounterKey,
        options
      },
      listByServiceOperationSpec,
      callback) as Promise<Models.QuotaByCounterKeysListByServiceResponse>;
  }

  /**
   * Updates all the quota counter values specified with the existing quota counter key to a value in
   * the specified service instance. This should be used for reset of the quota counter values.
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param quotaCounterKey Quota counter key identifier.This is the result of expression defined in
   * counter-key attribute of the quota-by-key policy.For Example, if you specify counter-key="boo"
   * in the policy, then it’s accessible by "boo" counter key. But if it’s defined as
   * counter-key="@("b"+"a")" then it will be accessible by "ba" key
   * @param parameters The value of the quota counter to be applied to all quota counter periods.
   * @param [options] The optional parameters
   * @returns Promise<Models.QuotaByCounterKeysUpdateResponse>
   */
  update(resourceGroupName: string, serviceName: string, quotaCounterKey: string, parameters: Models.QuotaCounterValueUpdateContract, options?: msRest.RequestOptionsBase): Promise<Models.QuotaByCounterKeysUpdateResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param quotaCounterKey Quota counter key identifier.This is the result of expression defined in
   * counter-key attribute of the quota-by-key policy.For Example, if you specify counter-key="boo"
   * in the policy, then it’s accessible by "boo" counter key. But if it’s defined as
   * counter-key="@("b"+"a")" then it will be accessible by "ba" key
   * @param parameters The value of the quota counter to be applied to all quota counter periods.
   * @param callback The callback
   */
  update(resourceGroupName: string, serviceName: string, quotaCounterKey: string, parameters: Models.QuotaCounterValueUpdateContract, callback: msRest.ServiceCallback<Models.QuotaCounterCollection>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param quotaCounterKey Quota counter key identifier.This is the result of expression defined in
   * counter-key attribute of the quota-by-key policy.For Example, if you specify counter-key="boo"
   * in the policy, then it’s accessible by "boo" counter key. But if it’s defined as
   * counter-key="@("b"+"a")" then it will be accessible by "ba" key
   * @param parameters The value of the quota counter to be applied to all quota counter periods.
   * @param options The optional parameters
   * @param callback The callback
   */
  update(resourceGroupName: string, serviceName: string, quotaCounterKey: string, parameters: Models.QuotaCounterValueUpdateContract, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.QuotaCounterCollection>): void;
  update(resourceGroupName: string, serviceName: string, quotaCounterKey: string, parameters: Models.QuotaCounterValueUpdateContract, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.QuotaCounterCollection>, callback?: msRest.ServiceCallback<Models.QuotaCounterCollection>): Promise<Models.QuotaByCounterKeysUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serviceName,
        quotaCounterKey,
        parameters,
        options
      },
      updateOperationSpec,
      callback) as Promise<Models.QuotaByCounterKeysUpdateResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listByServiceOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.serviceName,
    Parameters.quotaCounterKey,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.QuotaCounterCollection
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const updateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.serviceName,
    Parameters.quotaCounterKey,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.QuotaCounterValueUpdateContract,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.QuotaCounterCollection
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
