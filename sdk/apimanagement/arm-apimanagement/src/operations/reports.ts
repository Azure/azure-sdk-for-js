/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/reportsMappers";
import * as Parameters from "../models/parameters";
import { ApiManagementClientContext } from "../apiManagementClientContext";

/** Class representing a Reports. */
export class Reports {
  private readonly client: ApiManagementClientContext;

  /**
   * Create a Reports.
   * @param {ApiManagementClientContext} client Reference to the service client.
   */
  constructor(client: ApiManagementClientContext) {
    this.client = client;
  }

  /**
   * Lists report records by API.
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param filter The filter to apply on the operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReportsListByApiResponse>
   */
  listByApi(resourceGroupName: string, serviceName: string, filter: string, options?: Models.ReportsListByApiOptionalParams): Promise<Models.ReportsListByApiResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param filter The filter to apply on the operation.
   * @param callback The callback
   */
  listByApi(resourceGroupName: string, serviceName: string, filter: string, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param filter The filter to apply on the operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByApi(resourceGroupName: string, serviceName: string, filter: string, options: Models.ReportsListByApiOptionalParams, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
  listByApi(resourceGroupName: string, serviceName: string, filter: string, options?: Models.ReportsListByApiOptionalParams | msRest.ServiceCallback<Models.ReportCollection>, callback?: msRest.ServiceCallback<Models.ReportCollection>): Promise<Models.ReportsListByApiResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serviceName,
        filter,
        options
      },
      listByApiOperationSpec,
      callback) as Promise<Models.ReportsListByApiResponse>;
  }

  /**
   * Lists report records by User.
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
   * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
   * filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| userId |
   * select, filter | eq |     | </br>| apiRegion | filter | eq |     | </br>| productId | filter |
   * eq |     | </br>| subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>|
   * operationId | filter | eq |     | </br>| callCountSuccess | select, orderBy |     |     | </br>|
   * callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select, orderBy |
   * |     | </br>| callCountOther | select, orderBy |     |     | </br>| callCountTotal | select,
   * orderBy |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount |
   * select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select,
   * orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |
   * |     | </br>| serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |
   * | </br>| serviceTimeMax | select |     |     | </br>
   * @param [options] The optional parameters
   * @returns Promise<Models.ReportsListByUserResponse>
   */
  listByUser(resourceGroupName: string, serviceName: string, filter: string, options?: Models.ReportsListByUserOptionalParams): Promise<Models.ReportsListByUserResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
   * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
   * filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| userId |
   * select, filter | eq |     | </br>| apiRegion | filter | eq |     | </br>| productId | filter |
   * eq |     | </br>| subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>|
   * operationId | filter | eq |     | </br>| callCountSuccess | select, orderBy |     |     | </br>|
   * callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select, orderBy |
   * |     | </br>| callCountOther | select, orderBy |     |     | </br>| callCountTotal | select,
   * orderBy |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount |
   * select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select,
   * orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |
   * |     | </br>| serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |
   * | </br>| serviceTimeMax | select |     |     | </br>
   * @param callback The callback
   */
  listByUser(resourceGroupName: string, serviceName: string, filter: string, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
   * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
   * filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| userId |
   * select, filter | eq |     | </br>| apiRegion | filter | eq |     | </br>| productId | filter |
   * eq |     | </br>| subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>|
   * operationId | filter | eq |     | </br>| callCountSuccess | select, orderBy |     |     | </br>|
   * callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select, orderBy |
   * |     | </br>| callCountOther | select, orderBy |     |     | </br>| callCountTotal | select,
   * orderBy |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount |
   * select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select,
   * orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |
   * |     | </br>| serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |
   * | </br>| serviceTimeMax | select |     |     | </br>
   * @param options The optional parameters
   * @param callback The callback
   */
  listByUser(resourceGroupName: string, serviceName: string, filter: string, options: Models.ReportsListByUserOptionalParams, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
  listByUser(resourceGroupName: string, serviceName: string, filter: string, options?: Models.ReportsListByUserOptionalParams | msRest.ServiceCallback<Models.ReportCollection>, callback?: msRest.ServiceCallback<Models.ReportCollection>): Promise<Models.ReportsListByUserResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serviceName,
        filter,
        options
      },
      listByUserOperationSpec,
      callback) as Promise<Models.ReportsListByUserResponse>;
  }

  /**
   * Lists report records by API Operations.
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
   * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
   * filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| apiRegion |
   * filter | eq |     | </br>| userId | filter | eq |     | </br>| productId | filter | eq |     |
   * </br>| subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>|
   * operationId | select, filter | eq |     | </br>| callCountSuccess | select, orderBy |     |
   * | </br>| callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select,
   * orderBy |     |     | </br>| callCountOther | select, orderBy |     |     | </br>|
   * callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |     |     |
   * </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>|
   * apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>|
   * apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>|
   * serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>
   * @param [options] The optional parameters
   * @returns Promise<Models.ReportsListByOperationResponse>
   */
  listByOperation(resourceGroupName: string, serviceName: string, filter: string, options?: Models.ReportsListByOperationOptionalParams): Promise<Models.ReportsListByOperationResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
   * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
   * filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| apiRegion |
   * filter | eq |     | </br>| userId | filter | eq |     | </br>| productId | filter | eq |     |
   * </br>| subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>|
   * operationId | select, filter | eq |     | </br>| callCountSuccess | select, orderBy |     |
   * | </br>| callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select,
   * orderBy |     |     | </br>| callCountOther | select, orderBy |     |     | </br>|
   * callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |     |     |
   * </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>|
   * apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>|
   * apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>|
   * serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>
   * @param callback The callback
   */
  listByOperation(resourceGroupName: string, serviceName: string, filter: string, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
   * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
   * filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| apiRegion |
   * filter | eq |     | </br>| userId | filter | eq |     | </br>| productId | filter | eq |     |
   * </br>| subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>|
   * operationId | select, filter | eq |     | </br>| callCountSuccess | select, orderBy |     |
   * | </br>| callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select,
   * orderBy |     |     | </br>| callCountOther | select, orderBy |     |     | </br>|
   * callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |     |     |
   * </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>|
   * apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>|
   * apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>|
   * serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>
   * @param options The optional parameters
   * @param callback The callback
   */
  listByOperation(resourceGroupName: string, serviceName: string, filter: string, options: Models.ReportsListByOperationOptionalParams, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
  listByOperation(resourceGroupName: string, serviceName: string, filter: string, options?: Models.ReportsListByOperationOptionalParams | msRest.ServiceCallback<Models.ReportCollection>, callback?: msRest.ServiceCallback<Models.ReportCollection>): Promise<Models.ReportsListByOperationResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serviceName,
        filter,
        options
      },
      listByOperationOperationSpec,
      callback) as Promise<Models.ReportsListByOperationResponse>;
  }

  /**
   * Lists report records by Product.
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
   * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
   * filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| apiRegion |
   * filter | eq |     | </br>| userId | filter | eq |     | </br>| productId | select, filter | eq |
   * | </br>| subscriptionId | filter | eq |     | </br>| callCountSuccess | select, orderBy |     |
   * | </br>| callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select,
   * orderBy |     |     | </br>| callCountOther | select, orderBy |     |     | </br>|
   * callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |     |     |
   * </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>|
   * apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>|
   * apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>|
   * serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>
   * @param [options] The optional parameters
   * @returns Promise<Models.ReportsListByProductResponse>
   */
  listByProduct(resourceGroupName: string, serviceName: string, filter: string, options?: Models.ReportsListByProductOptionalParams): Promise<Models.ReportsListByProductResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
   * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
   * filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| apiRegion |
   * filter | eq |     | </br>| userId | filter | eq |     | </br>| productId | select, filter | eq |
   * | </br>| subscriptionId | filter | eq |     | </br>| callCountSuccess | select, orderBy |     |
   * | </br>| callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select,
   * orderBy |     |     | </br>| callCountOther | select, orderBy |     |     | </br>|
   * callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |     |     |
   * </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>|
   * apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>|
   * apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>|
   * serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>
   * @param callback The callback
   */
  listByProduct(resourceGroupName: string, serviceName: string, filter: string, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
   * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
   * filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| apiRegion |
   * filter | eq |     | </br>| userId | filter | eq |     | </br>| productId | select, filter | eq |
   * | </br>| subscriptionId | filter | eq |     | </br>| callCountSuccess | select, orderBy |     |
   * | </br>| callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select,
   * orderBy |     |     | </br>| callCountOther | select, orderBy |     |     | </br>|
   * callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |     |     |
   * </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>|
   * apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>|
   * apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>|
   * serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>
   * @param options The optional parameters
   * @param callback The callback
   */
  listByProduct(resourceGroupName: string, serviceName: string, filter: string, options: Models.ReportsListByProductOptionalParams, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
  listByProduct(resourceGroupName: string, serviceName: string, filter: string, options?: Models.ReportsListByProductOptionalParams | msRest.ServiceCallback<Models.ReportCollection>, callback?: msRest.ServiceCallback<Models.ReportCollection>): Promise<Models.ReportsListByProductResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serviceName,
        filter,
        options
      },
      listByProductOperationSpec,
      callback) as Promise<Models.ReportsListByProductResponse>;
  }

  /**
   * Lists report records by geography.
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
   * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
   * filter | ge, le |     | </br>| country | select |     |     | </br>| region | select |     |
   * | </br>| zip | select |     |     | </br>| apiRegion | filter | eq |     | </br>| userId |
   * filter | eq |     | </br>| productId | filter | eq |     | </br>| subscriptionId | filter | eq |
   * | </br>| apiId | filter | eq |     | </br>| operationId | filter | eq |     | </br>|
   * callCountSuccess | select |     |     | </br>| callCountBlocked | select |     |     | </br>|
   * callCountFailed | select |     |     | </br>| callCountOther | select |     |     | </br>|
   * bandwidth | select, orderBy |     |     | </br>| cacheHitsCount | select |     |     | </br>|
   * cacheMissCount | select |     |     | </br>| apiTimeAvg | select |     |     | </br>| apiTimeMin
   * | select |     |     | </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |
   * |     | </br>| serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |
   * | </br>
   * @param [options] The optional parameters
   * @returns Promise<Models.ReportsListByGeoResponse>
   */
  listByGeo(resourceGroupName: string, serviceName: string, filter: string, options?: Models.ReportsListByGeoOptionalParams): Promise<Models.ReportsListByGeoResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
   * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
   * filter | ge, le |     | </br>| country | select |     |     | </br>| region | select |     |
   * | </br>| zip | select |     |     | </br>| apiRegion | filter | eq |     | </br>| userId |
   * filter | eq |     | </br>| productId | filter | eq |     | </br>| subscriptionId | filter | eq |
   * | </br>| apiId | filter | eq |     | </br>| operationId | filter | eq |     | </br>|
   * callCountSuccess | select |     |     | </br>| callCountBlocked | select |     |     | </br>|
   * callCountFailed | select |     |     | </br>| callCountOther | select |     |     | </br>|
   * bandwidth | select, orderBy |     |     | </br>| cacheHitsCount | select |     |     | </br>|
   * cacheMissCount | select |     |     | </br>| apiTimeAvg | select |     |     | </br>| apiTimeMin
   * | select |     |     | </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |
   * |     | </br>| serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |
   * | </br>
   * @param callback The callback
   */
  listByGeo(resourceGroupName: string, serviceName: string, filter: string, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
   * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
   * filter | ge, le |     | </br>| country | select |     |     | </br>| region | select |     |
   * | </br>| zip | select |     |     | </br>| apiRegion | filter | eq |     | </br>| userId |
   * filter | eq |     | </br>| productId | filter | eq |     | </br>| subscriptionId | filter | eq |
   * | </br>| apiId | filter | eq |     | </br>| operationId | filter | eq |     | </br>|
   * callCountSuccess | select |     |     | </br>| callCountBlocked | select |     |     | </br>|
   * callCountFailed | select |     |     | </br>| callCountOther | select |     |     | </br>|
   * bandwidth | select, orderBy |     |     | </br>| cacheHitsCount | select |     |     | </br>|
   * cacheMissCount | select |     |     | </br>| apiTimeAvg | select |     |     | </br>| apiTimeMin
   * | select |     |     | </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |
   * |     | </br>| serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |
   * | </br>
   * @param options The optional parameters
   * @param callback The callback
   */
  listByGeo(resourceGroupName: string, serviceName: string, filter: string, options: Models.ReportsListByGeoOptionalParams, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
  listByGeo(resourceGroupName: string, serviceName: string, filter: string, options?: Models.ReportsListByGeoOptionalParams | msRest.ServiceCallback<Models.ReportCollection>, callback?: msRest.ServiceCallback<Models.ReportCollection>): Promise<Models.ReportsListByGeoResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serviceName,
        filter,
        options
      },
      listByGeoOperationSpec,
      callback) as Promise<Models.ReportsListByGeoResponse>;
  }

  /**
   * Lists report records by subscription.
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
   * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
   * filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| apiRegion |
   * filter | eq |     | </br>| userId | select, filter | eq |     | </br>| productId | select,
   * filter | eq |     | </br>| subscriptionId | select, filter | eq |     | </br>| callCountSuccess
   * | select, orderBy |     |     | </br>| callCountBlocked | select, orderBy |     |     | </br>|
   * callCountFailed | select, orderBy |     |     | </br>| callCountOther | select, orderBy |     |
   * | </br>| callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |
   * |     | </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |
   * | </br>| apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     |
   * </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>|
   * serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>
   * @param [options] The optional parameters
   * @returns Promise<Models.ReportsListBySubscriptionResponse>
   */
  listBySubscription(resourceGroupName: string, serviceName: string, filter: string, options?: Models.ReportsListBySubscriptionOptionalParams): Promise<Models.ReportsListBySubscriptionResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
   * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
   * filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| apiRegion |
   * filter | eq |     | </br>| userId | select, filter | eq |     | </br>| productId | select,
   * filter | eq |     | </br>| subscriptionId | select, filter | eq |     | </br>| callCountSuccess
   * | select, orderBy |     |     | </br>| callCountBlocked | select, orderBy |     |     | </br>|
   * callCountFailed | select, orderBy |     |     | </br>| callCountOther | select, orderBy |     |
   * | </br>| callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |
   * |     | </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |
   * | </br>| apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     |
   * </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>|
   * serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>
   * @param callback The callback
   */
  listBySubscription(resourceGroupName: string, serviceName: string, filter: string, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
   * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
   * filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| apiRegion |
   * filter | eq |     | </br>| userId | select, filter | eq |     | </br>| productId | select,
   * filter | eq |     | </br>| subscriptionId | select, filter | eq |     | </br>| callCountSuccess
   * | select, orderBy |     |     | </br>| callCountBlocked | select, orderBy |     |     | </br>|
   * callCountFailed | select, orderBy |     |     | </br>| callCountOther | select, orderBy |     |
   * | </br>| callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |
   * |     | </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |
   * | </br>| apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     |
   * </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>|
   * serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>
   * @param options The optional parameters
   * @param callback The callback
   */
  listBySubscription(resourceGroupName: string, serviceName: string, filter: string, options: Models.ReportsListBySubscriptionOptionalParams, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
  listBySubscription(resourceGroupName: string, serviceName: string, filter: string, options?: Models.ReportsListBySubscriptionOptionalParams | msRest.ServiceCallback<Models.ReportCollection>, callback?: msRest.ServiceCallback<Models.ReportCollection>): Promise<Models.ReportsListBySubscriptionResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serviceName,
        filter,
        options
      },
      listBySubscriptionOperationSpec,
      callback) as Promise<Models.ReportsListBySubscriptionResponse>;
  }

  /**
   * Lists report records by Time.
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
   * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
   * filter, select | ge, le |     | </br>| interval | select |     |     | </br>| apiRegion | filter
   * | eq |     | </br>| userId | filter | eq |     | </br>| productId | filter | eq |     | </br>|
   * subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>| operationId |
   * filter | eq |     | </br>| callCountSuccess | select |     |     | </br>| callCountBlocked |
   * select |     |     | </br>| callCountFailed | select |     |     | </br>| callCountOther |
   * select |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount |
   * select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select |
   * |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |     |     | </br>|
   * serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |     | </br>|
   * serviceTimeMax | select |     |     | </br>
   * @param interval By time interval. Interval must be multiple of 15 minutes and may not be zero.
   * The value should be in ISO  8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).This
   * code can be used to convert TimeSpan to a valid interval string: XmlConvert.ToString(new
   * TimeSpan(hours, minutes, seconds)).
   * @param [options] The optional parameters
   * @returns Promise<Models.ReportsListByTimeResponse>
   */
  listByTime(resourceGroupName: string, serviceName: string, filter: string, interval: string, options?: Models.ReportsListByTimeOptionalParams): Promise<Models.ReportsListByTimeResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
   * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
   * filter, select | ge, le |     | </br>| interval | select |     |     | </br>| apiRegion | filter
   * | eq |     | </br>| userId | filter | eq |     | </br>| productId | filter | eq |     | </br>|
   * subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>| operationId |
   * filter | eq |     | </br>| callCountSuccess | select |     |     | </br>| callCountBlocked |
   * select |     |     | </br>| callCountFailed | select |     |     | </br>| callCountOther |
   * select |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount |
   * select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select |
   * |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |     |     | </br>|
   * serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |     | </br>|
   * serviceTimeMax | select |     |     | </br>
   * @param interval By time interval. Interval must be multiple of 15 minutes and may not be zero.
   * The value should be in ISO  8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).This
   * code can be used to convert TimeSpan to a valid interval string: XmlConvert.ToString(new
   * TimeSpan(hours, minutes, seconds)).
   * @param callback The callback
   */
  listByTime(resourceGroupName: string, serviceName: string, filter: string, interval: string, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
   * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
   * filter, select | ge, le |     | </br>| interval | select |     |     | </br>| apiRegion | filter
   * | eq |     | </br>| userId | filter | eq |     | </br>| productId | filter | eq |     | </br>|
   * subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>| operationId |
   * filter | eq |     | </br>| callCountSuccess | select |     |     | </br>| callCountBlocked |
   * select |     |     | </br>| callCountFailed | select |     |     | </br>| callCountOther |
   * select |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount |
   * select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select |
   * |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |     |     | </br>|
   * serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |     | </br>|
   * serviceTimeMax | select |     |     | </br>
   * @param interval By time interval. Interval must be multiple of 15 minutes and may not be zero.
   * The value should be in ISO  8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).This
   * code can be used to convert TimeSpan to a valid interval string: XmlConvert.ToString(new
   * TimeSpan(hours, minutes, seconds)).
   * @param options The optional parameters
   * @param callback The callback
   */
  listByTime(resourceGroupName: string, serviceName: string, filter: string, interval: string, options: Models.ReportsListByTimeOptionalParams, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
  listByTime(resourceGroupName: string, serviceName: string, filter: string, interval: string, options?: Models.ReportsListByTimeOptionalParams | msRest.ServiceCallback<Models.ReportCollection>, callback?: msRest.ServiceCallback<Models.ReportCollection>): Promise<Models.ReportsListByTimeResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serviceName,
        filter,
        interval,
        options
      },
      listByTimeOperationSpec,
      callback) as Promise<Models.ReportsListByTimeResponse>;
  }

  /**
   * Lists report records by Request.
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
   * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
   * filter | ge, le |     | </br>| apiId | filter | eq |     | </br>| operationId | filter | eq |
   * | </br>| productId | filter | eq |     | </br>| userId | filter | eq |     | </br>| apiRegion |
   * filter | eq |     | </br>| subscriptionId | filter | eq |     | </br>
   * @param [options] The optional parameters
   * @returns Promise<Models.ReportsListByRequestResponse>
   */
  listByRequest(resourceGroupName: string, serviceName: string, filter: string, options?: Models.ReportsListByRequestOptionalParams): Promise<Models.ReportsListByRequestResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
   * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
   * filter | ge, le |     | </br>| apiId | filter | eq |     | </br>| operationId | filter | eq |
   * | </br>| productId | filter | eq |     | </br>| userId | filter | eq |     | </br>| apiRegion |
   * filter | eq |     | </br>| subscriptionId | filter | eq |     | </br>
   * @param callback The callback
   */
  listByRequest(resourceGroupName: string, serviceName: string, filter: string, callback: msRest.ServiceCallback<Models.RequestReportCollection>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
   * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
   * filter | ge, le |     | </br>| apiId | filter | eq |     | </br>| operationId | filter | eq |
   * | </br>| productId | filter | eq |     | </br>| userId | filter | eq |     | </br>| apiRegion |
   * filter | eq |     | </br>| subscriptionId | filter | eq |     | </br>
   * @param options The optional parameters
   * @param callback The callback
   */
  listByRequest(resourceGroupName: string, serviceName: string, filter: string, options: Models.ReportsListByRequestOptionalParams, callback: msRest.ServiceCallback<Models.RequestReportCollection>): void;
  listByRequest(resourceGroupName: string, serviceName: string, filter: string, options?: Models.ReportsListByRequestOptionalParams | msRest.ServiceCallback<Models.RequestReportCollection>, callback?: msRest.ServiceCallback<Models.RequestReportCollection>): Promise<Models.ReportsListByRequestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serviceName,
        filter,
        options
      },
      listByRequestOperationSpec,
      callback) as Promise<Models.ReportsListByRequestResponse>;
  }

  /**
   * Lists report records by API.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReportsListByApiNextResponse>
   */
  listByApiNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ReportsListByApiNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByApiNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByApiNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
  listByApiNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ReportCollection>, callback?: msRest.ServiceCallback<Models.ReportCollection>): Promise<Models.ReportsListByApiNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByApiNextOperationSpec,
      callback) as Promise<Models.ReportsListByApiNextResponse>;
  }

  /**
   * Lists report records by User.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReportsListByUserNextResponse>
   */
  listByUserNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ReportsListByUserNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByUserNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByUserNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
  listByUserNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ReportCollection>, callback?: msRest.ServiceCallback<Models.ReportCollection>): Promise<Models.ReportsListByUserNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByUserNextOperationSpec,
      callback) as Promise<Models.ReportsListByUserNextResponse>;
  }

  /**
   * Lists report records by API Operations.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReportsListByOperationNextResponse>
   */
  listByOperationNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ReportsListByOperationNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByOperationNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByOperationNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
  listByOperationNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ReportCollection>, callback?: msRest.ServiceCallback<Models.ReportCollection>): Promise<Models.ReportsListByOperationNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByOperationNextOperationSpec,
      callback) as Promise<Models.ReportsListByOperationNextResponse>;
  }

  /**
   * Lists report records by Product.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReportsListByProductNextResponse>
   */
  listByProductNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ReportsListByProductNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByProductNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByProductNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
  listByProductNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ReportCollection>, callback?: msRest.ServiceCallback<Models.ReportCollection>): Promise<Models.ReportsListByProductNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByProductNextOperationSpec,
      callback) as Promise<Models.ReportsListByProductNextResponse>;
  }

  /**
   * Lists report records by geography.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReportsListByGeoNextResponse>
   */
  listByGeoNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ReportsListByGeoNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByGeoNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByGeoNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
  listByGeoNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ReportCollection>, callback?: msRest.ServiceCallback<Models.ReportCollection>): Promise<Models.ReportsListByGeoNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByGeoNextOperationSpec,
      callback) as Promise<Models.ReportsListByGeoNextResponse>;
  }

  /**
   * Lists report records by subscription.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReportsListBySubscriptionNextResponse>
   */
  listBySubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ReportsListBySubscriptionNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listBySubscriptionNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listBySubscriptionNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
  listBySubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ReportCollection>, callback?: msRest.ServiceCallback<Models.ReportCollection>): Promise<Models.ReportsListBySubscriptionNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listBySubscriptionNextOperationSpec,
      callback) as Promise<Models.ReportsListBySubscriptionNextResponse>;
  }

  /**
   * Lists report records by Time.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReportsListByTimeNextResponse>
   */
  listByTimeNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ReportsListByTimeNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByTimeNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByTimeNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
  listByTimeNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ReportCollection>, callback?: msRest.ServiceCallback<Models.ReportCollection>): Promise<Models.ReportsListByTimeNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByTimeNextOperationSpec,
      callback) as Promise<Models.ReportsListByTimeNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listByApiOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byApi",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.serviceName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.filter1,
    Parameters.top,
    Parameters.skip,
    Parameters.orderby,
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ReportCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByUserOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byUser",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.serviceName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.filter1,
    Parameters.top,
    Parameters.skip,
    Parameters.orderby,
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ReportCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByOperationOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byOperation",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.serviceName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.filter1,
    Parameters.top,
    Parameters.skip,
    Parameters.orderby,
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ReportCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByProductOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byProduct",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.serviceName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.filter1,
    Parameters.top,
    Parameters.skip,
    Parameters.orderby,
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ReportCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByGeoOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byGeo",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.serviceName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.filter1,
    Parameters.top,
    Parameters.skip,
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ReportCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listBySubscriptionOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/bySubscription",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.serviceName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.filter1,
    Parameters.top,
    Parameters.skip,
    Parameters.orderby,
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ReportCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByTimeOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byTime",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.serviceName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.filter1,
    Parameters.top,
    Parameters.skip,
    Parameters.orderby,
    Parameters.interval,
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ReportCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByRequestOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byRequest",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.serviceName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.filter1,
    Parameters.top,
    Parameters.skip,
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.RequestReportCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByApiNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ReportCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByUserNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ReportCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByOperationNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ReportCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByProductNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ReportCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByGeoNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ReportCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listBySubscriptionNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ReportCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByTimeNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ReportCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
