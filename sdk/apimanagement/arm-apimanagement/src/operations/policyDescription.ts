/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";
import { ApiManagementClient } from "../apiManagementClient.js";
import {
    PolicyDescriptionListByServiceOptionalParams,
    PolicyDescriptionListByServiceResponse
} from "../models/index.js";
import * as Mappers from "../models/mappers.js";
import * as Parameters from "../models/parameters.js";
import { PolicyDescription } from "../operationsInterfaces/index.js";

/** Class containing PolicyDescription operations. */
export class PolicyDescriptionImpl implements PolicyDescription {
    private readonly client: ApiManagementClient;

    /**
     * Initialize a new instance of the class PolicyDescription class.
     * @param client Reference to the service client
     */
    constructor(client: ApiManagementClient) {
        this.client = client;
    }

    /**
     * Lists all policy descriptions.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of the API Management service.
     * @param options The options parameters.
     */
    listByService(
        resourceGroupName: string,
        serviceName: string,
        options?: PolicyDescriptionListByServiceOptionalParams
    ): Promise<PolicyDescriptionListByServiceResponse> {
        return this.client.sendOperationRequest(
            { resourceGroupName, serviceName, options },
            listByServiceOperationSpec
        );
    }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const listByServiceOperationSpec: coreClient.OperationSpec = {
    path:
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policyDescriptions",
    httpMethod: "GET",
    responses: {
        200: {
            bodyMapper: Mappers.PolicyDescriptionCollection
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    queryParameters: [Parameters.apiVersion, Parameters.scope1],
    urlParameters: [
        Parameters.$host,
        Parameters.resourceGroupName,
        Parameters.serviceName,
        Parameters.subscriptionId
    ],
    headerParameters: [Parameters.accept],
    serializer
};
