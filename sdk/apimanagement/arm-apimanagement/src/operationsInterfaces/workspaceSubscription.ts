/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  SubscriptionContract,
  WorkspaceSubscriptionListOptionalParams,
  WorkspaceSubscriptionGetEntityTagOptionalParams,
  WorkspaceSubscriptionGetEntityTagResponse,
  WorkspaceSubscriptionGetOptionalParams,
  WorkspaceSubscriptionGetResponse,
  SubscriptionCreateParameters,
  WorkspaceSubscriptionCreateOrUpdateOptionalParams,
  WorkspaceSubscriptionCreateOrUpdateResponse,
  SubscriptionUpdateParameters,
  WorkspaceSubscriptionUpdateOptionalParams,
  WorkspaceSubscriptionUpdateResponse,
  WorkspaceSubscriptionDeleteOptionalParams,
  WorkspaceSubscriptionRegeneratePrimaryKeyOptionalParams,
  WorkspaceSubscriptionRegenerateSecondaryKeyOptionalParams,
  WorkspaceSubscriptionListSecretsOptionalParams,
  WorkspaceSubscriptionListSecretsResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a WorkspaceSubscription. */
export interface WorkspaceSubscription {
  /**
   * Lists all subscriptions of the workspace in an API Management service instance.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    options?: WorkspaceSubscriptionListOptionalParams,
  ): PagedAsyncIterableIterator<SubscriptionContract>;
  /**
   * Gets the entity state (Etag) version of the apimanagement subscription specified by its identifier.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param sid Subscription entity Identifier. The entity represents the association between a user and
   *            a product in API Management.
   * @param options The options parameters.
   */
  getEntityTag(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    sid: string,
    options?: WorkspaceSubscriptionGetEntityTagOptionalParams,
  ): Promise<WorkspaceSubscriptionGetEntityTagResponse>;
  /**
   * Gets the specified Subscription entity.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param sid Subscription entity Identifier. The entity represents the association between a user and
   *            a product in API Management.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    sid: string,
    options?: WorkspaceSubscriptionGetOptionalParams,
  ): Promise<WorkspaceSubscriptionGetResponse>;
  /**
   * Creates or updates the subscription of specified user to the specified product.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param sid Subscription entity Identifier. The entity represents the association between a user and
   *            a product in API Management.
   * @param parameters Create parameters.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    sid: string,
    parameters: SubscriptionCreateParameters,
    options?: WorkspaceSubscriptionCreateOrUpdateOptionalParams,
  ): Promise<WorkspaceSubscriptionCreateOrUpdateResponse>;
  /**
   * Updates the details of a subscription specified by its identifier.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param sid Subscription entity Identifier. The entity represents the association between a user and
   *            a product in API Management.
   * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
   *                response of the GET request or it should be * for unconditional update.
   * @param parameters Update parameters.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    sid: string,
    ifMatch: string,
    parameters: SubscriptionUpdateParameters,
    options?: WorkspaceSubscriptionUpdateOptionalParams,
  ): Promise<WorkspaceSubscriptionUpdateResponse>;
  /**
   * Deletes the specified subscription.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param sid Subscription entity Identifier. The entity represents the association between a user and
   *            a product in API Management.
   * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
   *                response of the GET request or it should be * for unconditional update.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    sid: string,
    ifMatch: string,
    options?: WorkspaceSubscriptionDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Regenerates primary key of existing subscription of the workspace in an API Management service
   * instance.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param sid Subscription entity Identifier. The entity represents the association between a user and
   *            a product in API Management.
   * @param options The options parameters.
   */
  regeneratePrimaryKey(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    sid: string,
    options?: WorkspaceSubscriptionRegeneratePrimaryKeyOptionalParams,
  ): Promise<void>;
  /**
   * Regenerates secondary key of existing subscription of the workspace in an API Management service
   * instance.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param sid Subscription entity Identifier. The entity represents the association between a user and
   *            a product in API Management.
   * @param options The options parameters.
   */
  regenerateSecondaryKey(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    sid: string,
    options?: WorkspaceSubscriptionRegenerateSecondaryKeyOptionalParams,
  ): Promise<void>;
  /**
   * Gets the specified Subscription keys.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param sid Subscription entity Identifier. The entity represents the association between a user and
   *            a product in API Management.
   * @param options The options parameters.
   */
  listSecrets(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    sid: string,
    options?: WorkspaceSubscriptionListSecretsOptionalParams,
  ): Promise<WorkspaceSubscriptionListSecretsResponse>;
}
