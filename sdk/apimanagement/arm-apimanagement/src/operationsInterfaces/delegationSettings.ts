/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
    DelegationSettingsCreateOrUpdateOptionalParams,
    DelegationSettingsCreateOrUpdateResponse,
    DelegationSettingsGetEntityTagOptionalParams,
    DelegationSettingsGetEntityTagResponse,
    DelegationSettingsGetOptionalParams,
    DelegationSettingsGetResponse,
    DelegationSettingsListSecretsOptionalParams,
    DelegationSettingsListSecretsResponse,
    DelegationSettingsUpdateOptionalParams,
    PortalDelegationSettings
} from "../models/index.js";

/** Interface representing a DelegationSettings. */
export interface DelegationSettings {
    /**
     * Gets the entity state (Etag) version of the DelegationSettings.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of the API Management service.
     * @param options The options parameters.
     */
    getEntityTag(
        resourceGroupName: string,
        serviceName: string,
        options?: DelegationSettingsGetEntityTagOptionalParams
    ): Promise<DelegationSettingsGetEntityTagResponse>;
    /**
     * Get Delegation Settings for the Portal.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of the API Management service.
     * @param options The options parameters.
     */
    get(
        resourceGroupName: string,
        serviceName: string,
        options?: DelegationSettingsGetOptionalParams
    ): Promise<DelegationSettingsGetResponse>;
    /**
     * Update Delegation settings.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of the API Management service.
     * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
     *                response of the GET request or it should be * for unconditional update.
     * @param parameters Update Delegation settings.
     * @param options The options parameters.
     */
    update(
        resourceGroupName: string,
        serviceName: string,
        ifMatch: string,
        parameters: PortalDelegationSettings,
        options?: DelegationSettingsUpdateOptionalParams
    ): Promise<void>;
    /**
     * Create or Update Delegation settings.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of the API Management service.
     * @param parameters Create or update parameters.
     * @param options The options parameters.
     */
    createOrUpdate(
        resourceGroupName: string,
        serviceName: string,
        parameters: PortalDelegationSettings,
        options?: DelegationSettingsCreateOrUpdateOptionalParams
    ): Promise<DelegationSettingsCreateOrUpdateResponse>;
    /**
     * Gets the secret validation key of the DelegationSettings.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of the API Management service.
     * @param options The options parameters.
     */
    listSecrets(
        resourceGroupName: string,
        serviceName: string,
        options?: DelegationSettingsListSecretsOptionalParams
    ): Promise<DelegationSettingsListSecretsResponse>;
}
