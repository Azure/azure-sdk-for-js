/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  NotificationContract,
  WorkspaceNotificationListByServiceOptionalParams,
  NotificationName,
  WorkspaceNotificationGetOptionalParams,
  WorkspaceNotificationGetResponse,
  WorkspaceNotificationCreateOrUpdateOptionalParams,
  WorkspaceNotificationCreateOrUpdateResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a WorkspaceNotification. */
export interface WorkspaceNotification {
  /**
   * Lists a collection of properties defined within a service instance.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param options The options parameters.
   */
  listByService(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    options?: WorkspaceNotificationListByServiceOptionalParams,
  ): PagedAsyncIterableIterator<NotificationContract>;
  /**
   * Gets the details of the Notification specified by its identifier.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param notificationName Notification Name Identifier.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    notificationName: NotificationName,
    options?: WorkspaceNotificationGetOptionalParams,
  ): Promise<WorkspaceNotificationGetResponse>;
  /**
   * Create or Update API Management publisher notification for the workspace.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param notificationName Notification Name Identifier.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    notificationName: NotificationName,
    options?: WorkspaceNotificationCreateOrUpdateOptionalParams,
  ): Promise<WorkspaceNotificationCreateOrUpdateResponse>;
}
