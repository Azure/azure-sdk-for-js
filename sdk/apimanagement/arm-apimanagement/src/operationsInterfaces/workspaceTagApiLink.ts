/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  TagApiLinkContract,
  WorkspaceTagApiLinkListByProductOptionalParams,
  WorkspaceTagApiLinkGetOptionalParams,
  WorkspaceTagApiLinkGetResponse,
  WorkspaceTagApiLinkCreateOrUpdateOptionalParams,
  WorkspaceTagApiLinkCreateOrUpdateResponse,
  WorkspaceTagApiLinkDeleteOptionalParams,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a WorkspaceTagApiLink. */
export interface WorkspaceTagApiLink {
  /**
   * Lists a collection of the API links associated with a tag.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param tagId Tag identifier. Must be unique in the current API Management service instance.
   * @param options The options parameters.
   */
  listByProduct(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    tagId: string,
    options?: WorkspaceTagApiLinkListByProductOptionalParams,
  ): PagedAsyncIterableIterator<TagApiLinkContract>;
  /**
   * Gets the API link for the tag.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param tagId Tag identifier. Must be unique in the current API Management service instance.
   * @param apiLinkId Tag-API link identifier. Must be unique in the current API Management service
   *                  instance.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    tagId: string,
    apiLinkId: string,
    options?: WorkspaceTagApiLinkGetOptionalParams,
  ): Promise<WorkspaceTagApiLinkGetResponse>;
  /**
   * Adds an API to the specified tag via link.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param tagId Tag identifier. Must be unique in the current API Management service instance.
   * @param apiLinkId Tag-API link identifier. Must be unique in the current API Management service
   *                  instance.
   * @param parameters Create or update parameters.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    tagId: string,
    apiLinkId: string,
    parameters: TagApiLinkContract,
    options?: WorkspaceTagApiLinkCreateOrUpdateOptionalParams,
  ): Promise<WorkspaceTagApiLinkCreateOrUpdateResponse>;
  /**
   * Deletes the specified API from the specified tag.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param tagId Tag identifier. Must be unique in the current API Management service instance.
   * @param apiLinkId Tag-API link identifier. Must be unique in the current API Management service
   *                  instance.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    tagId: string,
    apiLinkId: string,
    options?: WorkspaceTagApiLinkDeleteOptionalParams,
  ): Promise<void>;
}
