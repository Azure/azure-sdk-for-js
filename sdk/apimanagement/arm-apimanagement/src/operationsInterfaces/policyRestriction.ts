/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  PolicyRestrictionContract,
  PolicyRestrictionListByServiceOptionalParams,
  PolicyRestrictionGetEntityTagOptionalParams,
  PolicyRestrictionGetEntityTagResponse,
  PolicyRestrictionGetOptionalParams,
  PolicyRestrictionGetResponse,
  PolicyRestrictionCreateOrUpdateOptionalParams,
  PolicyRestrictionCreateOrUpdateResponse,
  PolicyRestrictionUpdateContract,
  PolicyRestrictionUpdateOptionalParams,
  PolicyRestrictionUpdateResponse,
  PolicyRestrictionDeleteOptionalParams,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a PolicyRestriction. */
export interface PolicyRestriction {
  /**
   * Gets all policy restrictions of API Management services.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param options The options parameters.
   */
  listByService(
    resourceGroupName: string,
    serviceName: string,
    options?: PolicyRestrictionListByServiceOptionalParams,
  ): PagedAsyncIterableIterator<PolicyRestrictionContract>;
  /**
   * Gets the entity state (Etag) version of the policy restriction in the Api Management service.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param policyRestrictionId Policy restrictions after an entity level
   * @param options The options parameters.
   */
  getEntityTag(
    resourceGroupName: string,
    serviceName: string,
    policyRestrictionId: string,
    options?: PolicyRestrictionGetEntityTagOptionalParams,
  ): Promise<PolicyRestrictionGetEntityTagResponse>;
  /**
   * Get the policy restriction of the Api Management service.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param policyRestrictionId Policy restrictions after an entity level
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serviceName: string,
    policyRestrictionId: string,
    options?: PolicyRestrictionGetOptionalParams,
  ): Promise<PolicyRestrictionGetResponse>;
  /**
   * Creates or updates the policy restriction configuration of the Api Management service.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param policyRestrictionId Policy restrictions after an entity level
   * @param parameters The policy restriction to apply.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    serviceName: string,
    policyRestrictionId: string,
    parameters: PolicyRestrictionContract,
    options?: PolicyRestrictionCreateOrUpdateOptionalParams,
  ): Promise<PolicyRestrictionCreateOrUpdateResponse>;
  /**
   * Updates the policy restriction configuration of the Api Management service.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param policyRestrictionId Policy restrictions after an entity level
   * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
   *                response of the GET request or it should be * for unconditional update.
   * @param parameters The policy restriction to apply.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    serviceName: string,
    policyRestrictionId: string,
    ifMatch: string,
    parameters: PolicyRestrictionUpdateContract,
    options?: PolicyRestrictionUpdateOptionalParams,
  ): Promise<PolicyRestrictionUpdateResponse>;
  /**
   * Deletes the policy restriction configuration of the Api Management Service.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param policyRestrictionId Policy restrictions after an entity level
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    serviceName: string,
    policyRestrictionId: string,
    options?: PolicyRestrictionDeleteOptionalParams,
  ): Promise<void>;
}
