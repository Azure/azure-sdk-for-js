/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  ApiOperationPolicyListByOperationOptionalParams,
  ApiOperationPolicyListByOperationResponse,
  PolicyIdName,
  ApiOperationPolicyGetEntityTagOptionalParams,
  ApiOperationPolicyGetEntityTagResponse,
  ApiOperationPolicyGetOptionalParams,
  ApiOperationPolicyGetResponse,
  PolicyContract,
  ApiOperationPolicyCreateOrUpdateOptionalParams,
  ApiOperationPolicyCreateOrUpdateResponse,
  ApiOperationPolicyDeleteOptionalParams
} from "../models";

/** Interface representing a ApiOperationPolicy. */
export interface ApiOperationPolicy {
  /**
   * Get the list of policy configuration at the API Operation level.
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param apiId API revision identifier. Must be unique in the current API Management service instance.
   *              Non-current revision has ;rev=n as a suffix where n is the revision number.
   * @param operationId Operation identifier within an API. Must be unique in the current API Management
   *                    service instance.
   * @param options The options parameters.
   */
  listByOperation(
    resourceGroupName: string,
    serviceName: string,
    apiId: string,
    operationId: string,
    options?: ApiOperationPolicyListByOperationOptionalParams
  ): Promise<ApiOperationPolicyListByOperationResponse>;
  /**
   * Gets the entity state (Etag) version of the API operation policy specified by its identifier.
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param apiId API revision identifier. Must be unique in the current API Management service instance.
   *              Non-current revision has ;rev=n as a suffix where n is the revision number.
   * @param operationId Operation identifier within an API. Must be unique in the current API Management
   *                    service instance.
   * @param policyId The identifier of the Policy.
   * @param options The options parameters.
   */
  getEntityTag(
    resourceGroupName: string,
    serviceName: string,
    apiId: string,
    operationId: string,
    policyId: PolicyIdName,
    options?: ApiOperationPolicyGetEntityTagOptionalParams
  ): Promise<ApiOperationPolicyGetEntityTagResponse>;
  /**
   * Get the policy configuration at the API Operation level.
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param apiId API revision identifier. Must be unique in the current API Management service instance.
   *              Non-current revision has ;rev=n as a suffix where n is the revision number.
   * @param operationId Operation identifier within an API. Must be unique in the current API Management
   *                    service instance.
   * @param policyId The identifier of the Policy.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serviceName: string,
    apiId: string,
    operationId: string,
    policyId: PolicyIdName,
    options?: ApiOperationPolicyGetOptionalParams
  ): Promise<ApiOperationPolicyGetResponse>;
  /**
   * Creates or updates policy configuration for the API Operation level.
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param apiId API revision identifier. Must be unique in the current API Management service instance.
   *              Non-current revision has ;rev=n as a suffix where n is the revision number.
   * @param operationId Operation identifier within an API. Must be unique in the current API Management
   *                    service instance.
   * @param policyId The identifier of the Policy.
   * @param parameters The policy contents to apply.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    serviceName: string,
    apiId: string,
    operationId: string,
    policyId: PolicyIdName,
    parameters: PolicyContract,
    options?: ApiOperationPolicyCreateOrUpdateOptionalParams
  ): Promise<ApiOperationPolicyCreateOrUpdateResponse>;
  /**
   * Deletes the policy configuration at the Api Operation.
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param apiId API revision identifier. Must be unique in the current API Management service instance.
   *              Non-current revision has ;rev=n as a suffix where n is the revision number.
   * @param operationId Operation identifier within an API. Must be unique in the current API Management
   *                    service instance.
   * @param policyId The identifier of the Policy.
   * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
   *                response of the GET request or it should be * for unconditional update.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    serviceName: string,
    apiId: string,
    operationId: string,
    policyId: PolicyIdName,
    ifMatch: string,
    options?: ApiOperationPolicyDeleteOptionalParams
  ): Promise<void>;
}
