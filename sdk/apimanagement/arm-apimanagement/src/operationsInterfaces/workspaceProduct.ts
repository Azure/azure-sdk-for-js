/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ProductContract,
  WorkspaceProductListByServiceOptionalParams,
  WorkspaceProductGetEntityTagOptionalParams,
  WorkspaceProductGetEntityTagResponse,
  WorkspaceProductGetOptionalParams,
  WorkspaceProductGetResponse,
  WorkspaceProductCreateOrUpdateOptionalParams,
  WorkspaceProductCreateOrUpdateResponse,
  ProductUpdateParameters,
  WorkspaceProductUpdateOptionalParams,
  WorkspaceProductUpdateResponse,
  WorkspaceProductDeleteOptionalParams,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a WorkspaceProduct. */
export interface WorkspaceProduct {
  /**
   * Lists a collection of products in the specified workspace in a service instance.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param options The options parameters.
   */
  listByService(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    options?: WorkspaceProductListByServiceOptionalParams,
  ): PagedAsyncIterableIterator<ProductContract>;
  /**
   * Gets the entity state (Etag) version of the product specified by its identifier.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param productId Product identifier. Must be unique in the current API Management service instance.
   * @param options The options parameters.
   */
  getEntityTag(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    productId: string,
    options?: WorkspaceProductGetEntityTagOptionalParams,
  ): Promise<WorkspaceProductGetEntityTagResponse>;
  /**
   * Gets the details of the product specified by its identifier.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param productId Product identifier. Must be unique in the current API Management service instance.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    productId: string,
    options?: WorkspaceProductGetOptionalParams,
  ): Promise<WorkspaceProductGetResponse>;
  /**
   * Creates or Updates a product.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param productId Product identifier. Must be unique in the current API Management service instance.
   * @param parameters Create or update parameters.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    productId: string,
    parameters: ProductContract,
    options?: WorkspaceProductCreateOrUpdateOptionalParams,
  ): Promise<WorkspaceProductCreateOrUpdateResponse>;
  /**
   * Update existing product details.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param productId Product identifier. Must be unique in the current API Management service instance.
   * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
   *                response of the GET request or it should be * for unconditional update.
   * @param parameters Update parameters.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    productId: string,
    ifMatch: string,
    parameters: ProductUpdateParameters,
    options?: WorkspaceProductUpdateOptionalParams,
  ): Promise<WorkspaceProductUpdateResponse>;
  /**
   * Delete product.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param productId Product identifier. Must be unique in the current API Management service instance.
   * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
   *                response of the GET request or it should be * for unconditional update.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    productId: string,
    ifMatch: string,
    options?: WorkspaceProductDeleteOptionalParams,
  ): Promise<void>;
}
