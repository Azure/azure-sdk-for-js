/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ApiVersionSetContract,
  ApiVersionSetListByServiceOptionalParams,
  ApiVersionSetGetEntityTagOptionalParams,
  ApiVersionSetGetEntityTagResponse,
  ApiVersionSetGetOptionalParams,
  ApiVersionSetGetResponse,
  ApiVersionSetCreateOrUpdateOptionalParams,
  ApiVersionSetCreateOrUpdateResponse,
  ApiVersionSetUpdateParameters,
  ApiVersionSetUpdateOptionalParams,
  ApiVersionSetUpdateResponse,
  ApiVersionSetDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ApiVersionSet. */
export interface ApiVersionSet {
  /**
   * Lists a collection of API Version Sets in the specified service instance.
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param options The options parameters.
   */
  listByService(
    resourceGroupName: string,
    serviceName: string,
    options?: ApiVersionSetListByServiceOptionalParams
  ): PagedAsyncIterableIterator<ApiVersionSetContract>;
  /**
   * Gets the entity state (Etag) version of the Api Version Set specified by its identifier.
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param versionSetId Api Version Set identifier. Must be unique in the current API Management service
   *                     instance.
   * @param options The options parameters.
   */
  getEntityTag(
    resourceGroupName: string,
    serviceName: string,
    versionSetId: string,
    options?: ApiVersionSetGetEntityTagOptionalParams
  ): Promise<ApiVersionSetGetEntityTagResponse>;
  /**
   * Gets the details of the Api Version Set specified by its identifier.
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param versionSetId Api Version Set identifier. Must be unique in the current API Management service
   *                     instance.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serviceName: string,
    versionSetId: string,
    options?: ApiVersionSetGetOptionalParams
  ): Promise<ApiVersionSetGetResponse>;
  /**
   * Creates or Updates a Api Version Set.
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param versionSetId Api Version Set identifier. Must be unique in the current API Management service
   *                     instance.
   * @param parameters Create or update parameters.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    serviceName: string,
    versionSetId: string,
    parameters: ApiVersionSetContract,
    options?: ApiVersionSetCreateOrUpdateOptionalParams
  ): Promise<ApiVersionSetCreateOrUpdateResponse>;
  /**
   * Updates the details of the Api VersionSet specified by its identifier.
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param versionSetId Api Version Set identifier. Must be unique in the current API Management service
   *                     instance.
   * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
   *                response of the GET request or it should be * for unconditional update.
   * @param parameters Update parameters.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    serviceName: string,
    versionSetId: string,
    ifMatch: string,
    parameters: ApiVersionSetUpdateParameters,
    options?: ApiVersionSetUpdateOptionalParams
  ): Promise<ApiVersionSetUpdateResponse>;
  /**
   * Deletes specific Api Version Set.
   * @param resourceGroupName The name of the resource group.
   * @param serviceName The name of the API Management service.
   * @param versionSetId Api Version Set identifier. Must be unique in the current API Management service
   *                     instance.
   * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
   *                response of the GET request or it should be * for unconditional update.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    serviceName: string,
    versionSetId: string,
    ifMatch: string,
    options?: ApiVersionSetDeleteOptionalParams
  ): Promise<void>;
}
