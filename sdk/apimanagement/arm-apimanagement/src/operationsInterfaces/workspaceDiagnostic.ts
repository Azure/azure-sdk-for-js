/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  DiagnosticContract,
  WorkspaceDiagnosticListByWorkspaceOptionalParams,
  WorkspaceDiagnosticGetEntityTagOptionalParams,
  WorkspaceDiagnosticGetEntityTagResponse,
  WorkspaceDiagnosticGetOptionalParams,
  WorkspaceDiagnosticGetResponse,
  WorkspaceDiagnosticCreateOrUpdateOptionalParams,
  WorkspaceDiagnosticCreateOrUpdateResponse,
  DiagnosticUpdateContract,
  WorkspaceDiagnosticUpdateOptionalParams,
  WorkspaceDiagnosticUpdateResponse,
  WorkspaceDiagnosticDeleteOptionalParams,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a WorkspaceDiagnostic. */
export interface WorkspaceDiagnostic {
  /**
   * Lists all diagnostics in the specified workspace.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param options The options parameters.
   */
  listByWorkspace(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    options?: WorkspaceDiagnosticListByWorkspaceOptionalParams,
  ): PagedAsyncIterableIterator<DiagnosticContract>;
  /**
   * Gets the entity state (Etag) version of the Diagnostic specified by its identifier.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param diagnosticId Diagnostic identifier. Must be unique in the current API Management service
   *                     instance.
   * @param options The options parameters.
   */
  getEntityTag(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    diagnosticId: string,
    options?: WorkspaceDiagnosticGetEntityTagOptionalParams,
  ): Promise<WorkspaceDiagnosticGetEntityTagResponse>;
  /**
   * Gets the details of the Diagnostic specified by its identifier.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param diagnosticId Diagnostic identifier. Must be unique in the current API Management service
   *                     instance.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    diagnosticId: string,
    options?: WorkspaceDiagnosticGetOptionalParams,
  ): Promise<WorkspaceDiagnosticGetResponse>;
  /**
   * Creates a new Diagnostic or updates an existing one.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param diagnosticId Diagnostic identifier. Must be unique in the current API Management service
   *                     instance.
   * @param parameters Create parameters.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    diagnosticId: string,
    parameters: DiagnosticContract,
    options?: WorkspaceDiagnosticCreateOrUpdateOptionalParams,
  ): Promise<WorkspaceDiagnosticCreateOrUpdateResponse>;
  /**
   * Updates the details of the Diagnostic specified by its identifier.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param diagnosticId Diagnostic identifier. Must be unique in the current API Management service
   *                     instance.
   * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
   *                response of the GET request or it should be * for unconditional update.
   * @param parameters Diagnostic Update parameters.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    diagnosticId: string,
    ifMatch: string,
    parameters: DiagnosticUpdateContract,
    options?: WorkspaceDiagnosticUpdateOptionalParams,
  ): Promise<WorkspaceDiagnosticUpdateResponse>;
  /**
   * Deletes the specified Diagnostic.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param diagnosticId Diagnostic identifier. Must be unique in the current API Management service
   *                     instance.
   * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
   *                response of the GET request or it should be * for unconditional update.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    diagnosticId: string,
    ifMatch: string,
    options?: WorkspaceDiagnosticDeleteOptionalParams,
  ): Promise<void>;
}
