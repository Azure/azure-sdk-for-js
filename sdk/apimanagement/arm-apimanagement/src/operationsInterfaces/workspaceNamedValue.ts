/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  NamedValueContract,
  WorkspaceNamedValueListByServiceOptionalParams,
  WorkspaceNamedValueGetEntityTagOptionalParams,
  WorkspaceNamedValueGetEntityTagResponse,
  WorkspaceNamedValueGetOptionalParams,
  WorkspaceNamedValueGetResponse,
  NamedValueCreateContract,
  WorkspaceNamedValueCreateOrUpdateOptionalParams,
  WorkspaceNamedValueCreateOrUpdateResponse,
  NamedValueUpdateParameters,
  WorkspaceNamedValueUpdateOptionalParams,
  WorkspaceNamedValueUpdateResponse,
  WorkspaceNamedValueDeleteOptionalParams,
  WorkspaceNamedValueListValueOptionalParams,
  WorkspaceNamedValueListValueResponse,
  WorkspaceNamedValueRefreshSecretOptionalParams,
  WorkspaceNamedValueRefreshSecretResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a WorkspaceNamedValue. */
export interface WorkspaceNamedValue {
  /**
   * Lists a collection of named values defined within a workspace in a service instance.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param options The options parameters.
   */
  listByService(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    options?: WorkspaceNamedValueListByServiceOptionalParams,
  ): PagedAsyncIterableIterator<NamedValueContract>;
  /**
   * Gets the entity state (Etag) version of the named value specified by its identifier.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param namedValueId Identifier of the NamedValue.
   * @param options The options parameters.
   */
  getEntityTag(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    namedValueId: string,
    options?: WorkspaceNamedValueGetEntityTagOptionalParams,
  ): Promise<WorkspaceNamedValueGetEntityTagResponse>;
  /**
   * Gets the details of the named value specified by its identifier.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param namedValueId Identifier of the NamedValue.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    namedValueId: string,
    options?: WorkspaceNamedValueGetOptionalParams,
  ): Promise<WorkspaceNamedValueGetResponse>;
  /**
   * Creates or updates named value.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param namedValueId Identifier of the NamedValue.
   * @param parameters Create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    namedValueId: string,
    parameters: NamedValueCreateContract,
    options?: WorkspaceNamedValueCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<WorkspaceNamedValueCreateOrUpdateResponse>,
      WorkspaceNamedValueCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates named value.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param namedValueId Identifier of the NamedValue.
   * @param parameters Create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    namedValueId: string,
    parameters: NamedValueCreateContract,
    options?: WorkspaceNamedValueCreateOrUpdateOptionalParams,
  ): Promise<WorkspaceNamedValueCreateOrUpdateResponse>;
  /**
   * Updates the specific named value.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param namedValueId Identifier of the NamedValue.
   * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
   *                response of the GET request or it should be * for unconditional update.
   * @param parameters Update parameters.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    namedValueId: string,
    ifMatch: string,
    parameters: NamedValueUpdateParameters,
    options?: WorkspaceNamedValueUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<WorkspaceNamedValueUpdateResponse>,
      WorkspaceNamedValueUpdateResponse
    >
  >;
  /**
   * Updates the specific named value.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param namedValueId Identifier of the NamedValue.
   * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
   *                response of the GET request or it should be * for unconditional update.
   * @param parameters Update parameters.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    namedValueId: string,
    ifMatch: string,
    parameters: NamedValueUpdateParameters,
    options?: WorkspaceNamedValueUpdateOptionalParams,
  ): Promise<WorkspaceNamedValueUpdateResponse>;
  /**
   * Deletes specific named value from the workspace in an API Management service instance.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param namedValueId Identifier of the NamedValue.
   * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
   *                response of the GET request or it should be * for unconditional update.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    namedValueId: string,
    ifMatch: string,
    options?: WorkspaceNamedValueDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Gets the secret of the named value specified by its identifier.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param namedValueId Identifier of the NamedValue.
   * @param options The options parameters.
   */
  listValue(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    namedValueId: string,
    options?: WorkspaceNamedValueListValueOptionalParams,
  ): Promise<WorkspaceNamedValueListValueResponse>;
  /**
   * Refresh the secret of the named value specified by its identifier.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param namedValueId Identifier of the NamedValue.
   * @param options The options parameters.
   */
  beginRefreshSecret(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    namedValueId: string,
    options?: WorkspaceNamedValueRefreshSecretOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<WorkspaceNamedValueRefreshSecretResponse>,
      WorkspaceNamedValueRefreshSecretResponse
    >
  >;
  /**
   * Refresh the secret of the named value specified by its identifier.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of the API Management service.
   * @param workspaceId Workspace identifier. Must be unique in the current API Management service
   *                    instance.
   * @param namedValueId Identifier of the NamedValue.
   * @param options The options parameters.
   */
  beginRefreshSecretAndWait(
    resourceGroupName: string,
    serviceName: string,
    workspaceId: string,
    namedValueId: string,
    options?: WorkspaceNamedValueRefreshSecretOptionalParams,
  ): Promise<WorkspaceNamedValueRefreshSecretResponse>;
}
