/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const ErrorFieldContract: msRest.CompositeMapper = {
  serializedName: "ErrorFieldContract",
  type: {
    name: "Composite",
    className: "ErrorFieldContract",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponseBody: msRest.CompositeMapper = {
  serializedName: "ErrorResponseBody",
  type: {
    name: "Composite",
    className: "ErrorResponseBody",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorFieldContract"
            }
          }
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      code: {
        serializedName: "error.code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "error.message",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "error.details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorFieldContract"
            }
          }
        }
      }
    }
  }
};

export const RegionContract: msRest.CompositeMapper = {
  serializedName: "RegionContract",
  type: {
    name: "Composite",
    className: "RegionContract",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      isMasterRegion: {
        serializedName: "isMasterRegion",
        type: {
          name: "Boolean"
        }
      },
      isDeleted: {
        serializedName: "isDeleted",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiExportResultValue: msRest.CompositeMapper = {
  serializedName: "ApiExportResult_value",
  type: {
    name: "Composite",
    className: "ApiExportResultValue",
    modelProperties: {
      link: {
        serializedName: "link",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiExportResult: msRest.CompositeMapper = {
  serializedName: "ApiExportResult",
  type: {
    name: "Composite",
    className: "ApiExportResult",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      exportResultFormat: {
        serializedName: "format",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Composite",
          className: "ApiExportResultValue"
        }
      }
    }
  }
};

export const ProductEntityBaseParameters: msRest.CompositeMapper = {
  serializedName: "ProductEntityBaseParameters",
  type: {
    name: "Composite",
    className: "ProductEntityBaseParameters",
    modelProperties: {
      description: {
        serializedName: "description",
        constraints: {
          MaxLength: 1000,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      terms: {
        serializedName: "terms",
        type: {
          name: "String"
        }
      },
      subscriptionRequired: {
        serializedName: "subscriptionRequired",
        type: {
          name: "Boolean"
        }
      },
      approvalRequired: {
        serializedName: "approvalRequired",
        type: {
          name: "Boolean"
        }
      },
      subscriptionsLimit: {
        serializedName: "subscriptionsLimit",
        type: {
          name: "Number"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "Enum",
          allowedValues: [
            "notPublished",
            "published"
          ]
        }
      }
    }
  }
};

export const ProductTagResourceContractProperties: msRest.CompositeMapper = {
  serializedName: "ProductTagResourceContractProperties",
  type: {
    name: "Composite",
    className: "ProductTagResourceContractProperties",
    modelProperties: {
      ...ProductEntityBaseParameters.type.modelProperties,
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        constraints: {
          MaxLength: 300,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationTagResourceContractProperties: msRest.CompositeMapper = {
  serializedName: "OperationTagResourceContractProperties",
  type: {
    name: "Composite",
    className: "OperationTagResourceContractProperties",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      apiName: {
        readOnly: true,
        serializedName: "apiName",
        type: {
          name: "String"
        }
      },
      apiRevision: {
        readOnly: true,
        serializedName: "apiRevision",
        type: {
          name: "String"
        }
      },
      apiVersion: {
        readOnly: true,
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      method: {
        readOnly: true,
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      urlTemplate: {
        readOnly: true,
        serializedName: "urlTemplate",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubscriptionKeyParameterNamesContract: msRest.CompositeMapper = {
  serializedName: "SubscriptionKeyParameterNamesContract",
  type: {
    name: "Composite",
    className: "SubscriptionKeyParameterNamesContract",
    modelProperties: {
      header: {
        serializedName: "header",
        type: {
          name: "String"
        }
      },
      query: {
        serializedName: "query",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OpenIdAuthenticationSettingsContract: msRest.CompositeMapper = {
  serializedName: "OpenIdAuthenticationSettingsContract",
  type: {
    name: "Composite",
    className: "OpenIdAuthenticationSettingsContract",
    modelProperties: {
      openidProviderId: {
        serializedName: "openidProviderId",
        type: {
          name: "String"
        }
      },
      bearerTokenSendingMethods: {
        serializedName: "bearerTokenSendingMethods",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const OAuth2AuthenticationSettingsContract: msRest.CompositeMapper = {
  serializedName: "OAuth2AuthenticationSettingsContract",
  type: {
    name: "Composite",
    className: "OAuth2AuthenticationSettingsContract",
    modelProperties: {
      authorizationServerId: {
        serializedName: "authorizationServerId",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AuthenticationSettingsContract: msRest.CompositeMapper = {
  serializedName: "AuthenticationSettingsContract",
  type: {
    name: "Composite",
    className: "AuthenticationSettingsContract",
    modelProperties: {
      oAuth2: {
        serializedName: "oAuth2",
        type: {
          name: "Composite",
          className: "OAuth2AuthenticationSettingsContract"
        }
      },
      openid: {
        serializedName: "openid",
        type: {
          name: "Composite",
          className: "OpenIdAuthenticationSettingsContract"
        }
      }
    }
  }
};

export const ApiVersionSetContractDetails: msRest.CompositeMapper = {
  serializedName: "ApiVersionSetContractDetails",
  type: {
    name: "Composite",
    className: "ApiVersionSetContractDetails",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      versioningScheme: {
        serializedName: "versioningScheme",
        type: {
          name: "String"
        }
      },
      versionQueryName: {
        serializedName: "versionQueryName",
        type: {
          name: "String"
        }
      },
      versionHeaderName: {
        serializedName: "versionHeaderName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiCreateOrUpdatePropertiesWsdlSelector: msRest.CompositeMapper = {
  serializedName: "ApiCreateOrUpdateProperties_wsdlSelector",
  type: {
    name: "Composite",
    className: "ApiCreateOrUpdatePropertiesWsdlSelector",
    modelProperties: {
      wsdlServiceName: {
        serializedName: "wsdlServiceName",
        type: {
          name: "String"
        }
      },
      wsdlEndpointName: {
        serializedName: "wsdlEndpointName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiEntityBaseContract: msRest.CompositeMapper = {
  serializedName: "ApiEntityBaseContract",
  type: {
    name: "Composite",
    className: "ApiEntityBaseContract",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      authenticationSettings: {
        serializedName: "authenticationSettings",
        type: {
          name: "Composite",
          className: "AuthenticationSettingsContract"
        }
      },
      subscriptionKeyParameterNames: {
        serializedName: "subscriptionKeyParameterNames",
        type: {
          name: "Composite",
          className: "SubscriptionKeyParameterNamesContract"
        }
      },
      apiType: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      apiRevision: {
        serializedName: "apiRevision",
        constraints: {
          MaxLength: 100,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      apiVersion: {
        serializedName: "apiVersion",
        constraints: {
          MaxLength: 100
        },
        type: {
          name: "String"
        }
      },
      isCurrent: {
        serializedName: "isCurrent",
        type: {
          name: "Boolean"
        }
      },
      isOnline: {
        readOnly: true,
        serializedName: "isOnline",
        type: {
          name: "Boolean"
        }
      },
      apiRevisionDescription: {
        serializedName: "apiRevisionDescription",
        constraints: {
          MaxLength: 256
        },
        type: {
          name: "String"
        }
      },
      apiVersionDescription: {
        serializedName: "apiVersionDescription",
        constraints: {
          MaxLength: 256
        },
        type: {
          name: "String"
        }
      },
      apiVersionSetId: {
        serializedName: "apiVersionSetId",
        type: {
          name: "String"
        }
      },
      subscriptionRequired: {
        serializedName: "subscriptionRequired",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ApiContractProperties: msRest.CompositeMapper = {
  serializedName: "ApiContractProperties",
  type: {
    name: "Composite",
    className: "ApiContractProperties",
    modelProperties: {
      ...ApiEntityBaseContract.type.modelProperties,
      sourceApiId: {
        serializedName: "sourceApiId",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        constraints: {
          MaxLength: 300,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      serviceUrl: {
        serializedName: "serviceUrl",
        constraints: {
          MaxLength: 2000,
          MinLength: 0
        },
        type: {
          name: "String"
        }
      },
      path: {
        required: true,
        serializedName: "path",
        constraints: {
          MaxLength: 400,
          MinLength: 0
        },
        type: {
          name: "String"
        }
      },
      protocols: {
        serializedName: "protocols",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: [
                "http",
                "https"
              ]
            }
          }
        }
      },
      apiVersionSet: {
        serializedName: "apiVersionSet",
        type: {
          name: "Composite",
          className: "ApiVersionSetContractDetails"
        }
      }
    }
  }
};

export const ApiTagResourceContractProperties: msRest.CompositeMapper = {
  serializedName: "ApiTagResourceContractProperties",
  type: {
    name: "Composite",
    className: "ApiTagResourceContractProperties",
    modelProperties: {
      ...ApiEntityBaseContract.type.modelProperties,
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        constraints: {
          MaxLength: 300,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      serviceUrl: {
        serializedName: "serviceUrl",
        constraints: {
          MaxLength: 2000,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      path: {
        serializedName: "path",
        constraints: {
          MaxLength: 400,
          MinLength: 0
        },
        type: {
          name: "String"
        }
      },
      protocols: {
        serializedName: "protocols",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: [
                "http",
                "https"
              ]
            }
          }
        }
      }
    }
  }
};

export const TagTagResourceContractProperties: msRest.CompositeMapper = {
  serializedName: "TagTagResourceContractProperties",
  type: {
    name: "Composite",
    className: "TagTagResourceContractProperties",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        constraints: {
          MaxLength: 160,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TagResourceContract: msRest.CompositeMapper = {
  serializedName: "TagResourceContract",
  type: {
    name: "Composite",
    className: "TagResourceContract",
    modelProperties: {
      tag: {
        required: true,
        serializedName: "tag",
        type: {
          name: "Composite",
          className: "TagTagResourceContractProperties"
        }
      },
      api: {
        serializedName: "api",
        type: {
          name: "Composite",
          className: "ApiTagResourceContractProperties"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "Composite",
          className: "OperationTagResourceContractProperties"
        }
      },
      product: {
        serializedName: "product",
        type: {
          name: "Composite",
          className: "ProductTagResourceContractProperties"
        }
      }
    }
  }
};

export const TagContract: msRest.CompositeMapper = {
  serializedName: "TagContract",
  type: {
    name: "Composite",
    className: "TagContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      displayName: {
        required: true,
        serializedName: "properties.displayName",
        constraints: {
          MaxLength: 160,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TagDescriptionContract: msRest.CompositeMapper = {
  serializedName: "TagDescriptionContract",
  type: {
    name: "Composite",
    className: "TagDescriptionContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      externalDocsUrl: {
        serializedName: "properties.externalDocsUrl",
        constraints: {
          MaxLength: 2000
        },
        type: {
          name: "String"
        }
      },
      externalDocsDescription: {
        serializedName: "properties.externalDocsDescription",
        type: {
          name: "String"
        }
      },
      tagId: {
        serializedName: "properties.tagId",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        constraints: {
          MaxLength: 160,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TagDescriptionCreateParameters: msRest.CompositeMapper = {
  serializedName: "TagDescriptionCreateParameters",
  type: {
    name: "Composite",
    className: "TagDescriptionCreateParameters",
    modelProperties: {
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      externalDocsUrl: {
        serializedName: "properties.externalDocsUrl",
        constraints: {
          MaxLength: 2000
        },
        type: {
          name: "String"
        }
      },
      externalDocsDescription: {
        serializedName: "properties.externalDocsDescription",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IssueAttachmentContract: msRest.CompositeMapper = {
  serializedName: "IssueAttachmentContract",
  type: {
    name: "Composite",
    className: "IssueAttachmentContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      title: {
        required: true,
        serializedName: "properties.title",
        type: {
          name: "String"
        }
      },
      contentFormat: {
        required: true,
        serializedName: "properties.contentFormat",
        type: {
          name: "String"
        }
      },
      content: {
        required: true,
        serializedName: "properties.content",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IssueCommentContract: msRest.CompositeMapper = {
  serializedName: "IssueCommentContract",
  type: {
    name: "Composite",
    className: "IssueCommentContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      text: {
        required: true,
        serializedName: "properties.text",
        type: {
          name: "String"
        }
      },
      createdDate: {
        serializedName: "properties.createdDate",
        type: {
          name: "DateTime"
        }
      },
      userId: {
        required: true,
        serializedName: "properties.userId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IssueContractBaseProperties: msRest.CompositeMapper = {
  serializedName: "IssueContractBaseProperties",
  type: {
    name: "Composite",
    className: "IssueContractBaseProperties",
    modelProperties: {
      createdDate: {
        serializedName: "createdDate",
        type: {
          name: "DateTime"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      apiId: {
        serializedName: "apiId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IssueUpdateContract: msRest.CompositeMapper = {
  serializedName: "IssueUpdateContract",
  type: {
    name: "Composite",
    className: "IssueUpdateContract",
    modelProperties: {
      createdDate: {
        serializedName: "properties.createdDate",
        type: {
          name: "DateTime"
        }
      },
      state: {
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      apiId: {
        serializedName: "properties.apiId",
        type: {
          name: "String"
        }
      },
      title: {
        serializedName: "properties.title",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "properties.userId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IssueContract: msRest.CompositeMapper = {
  serializedName: "IssueContract",
  type: {
    name: "Composite",
    className: "IssueContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      createdDate: {
        serializedName: "properties.createdDate",
        type: {
          name: "DateTime"
        }
      },
      state: {
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      apiId: {
        serializedName: "properties.apiId",
        type: {
          name: "String"
        }
      },
      title: {
        required: true,
        serializedName: "properties.title",
        type: {
          name: "String"
        }
      },
      description: {
        required: true,
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      userId: {
        required: true,
        serializedName: "properties.userId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BodyDiagnosticSettings: msRest.CompositeMapper = {
  serializedName: "BodyDiagnosticSettings",
  type: {
    name: "Composite",
    className: "BodyDiagnosticSettings",
    modelProperties: {
      bytes: {
        serializedName: "bytes",
        constraints: {
          InclusiveMaximum: 8192
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const HttpMessageDiagnostic: msRest.CompositeMapper = {
  serializedName: "HttpMessageDiagnostic",
  type: {
    name: "Composite",
    className: "HttpMessageDiagnostic",
    modelProperties: {
      headers: {
        serializedName: "headers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      body: {
        serializedName: "body",
        type: {
          name: "Composite",
          className: "BodyDiagnosticSettings"
        }
      }
    }
  }
};

export const PipelineDiagnosticSettings: msRest.CompositeMapper = {
  serializedName: "PipelineDiagnosticSettings",
  type: {
    name: "Composite",
    className: "PipelineDiagnosticSettings",
    modelProperties: {
      request: {
        serializedName: "request",
        type: {
          name: "Composite",
          className: "HttpMessageDiagnostic"
        }
      },
      response: {
        serializedName: "response",
        type: {
          name: "Composite",
          className: "HttpMessageDiagnostic"
        }
      }
    }
  }
};

export const SamplingSettings: msRest.CompositeMapper = {
  serializedName: "SamplingSettings",
  type: {
    name: "Composite",
    className: "SamplingSettings",
    modelProperties: {
      samplingType: {
        serializedName: "samplingType",
        type: {
          name: "String"
        }
      },
      percentage: {
        serializedName: "percentage",
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DiagnosticContract: msRest.CompositeMapper = {
  serializedName: "DiagnosticContract",
  type: {
    name: "Composite",
    className: "DiagnosticContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      alwaysLog: {
        serializedName: "properties.alwaysLog",
        type: {
          name: "String"
        }
      },
      loggerId: {
        required: true,
        serializedName: "properties.loggerId",
        type: {
          name: "String"
        }
      },
      sampling: {
        serializedName: "properties.sampling",
        type: {
          name: "Composite",
          className: "SamplingSettings"
        }
      },
      frontend: {
        serializedName: "properties.frontend",
        type: {
          name: "Composite",
          className: "PipelineDiagnosticSettings"
        }
      },
      backend: {
        serializedName: "properties.backend",
        type: {
          name: "Composite",
          className: "PipelineDiagnosticSettings"
        }
      },
      logClientIp: {
        serializedName: "properties.logClientIp",
        type: {
          name: "Boolean"
        }
      },
      httpCorrelationProtocol: {
        serializedName: "properties.httpCorrelationProtocol",
        type: {
          name: "String"
        }
      },
      verbosity: {
        serializedName: "properties.verbosity",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SchemaContract: msRest.CompositeMapper = {
  serializedName: "SchemaContract",
  type: {
    name: "Composite",
    className: "SchemaContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      contentType: {
        required: true,
        serializedName: "properties.contentType",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "properties.document.value",
        type: {
          name: "String"
        }
      },
      definitions: {
        serializedName: "properties.document.definitions",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const PolicyContract: msRest.CompositeMapper = {
  serializedName: "PolicyContract",
  type: {
    name: "Composite",
    className: "PolicyContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      value: {
        required: true,
        serializedName: "properties.value",
        type: {
          name: "String"
        }
      },
      format: {
        serializedName: "properties.format",
        defaultValue: 'xml',
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PolicyCollection: msRest.CompositeMapper = {
  serializedName: "PolicyCollection",
  type: {
    name: "Composite",
    className: "PolicyCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PolicyContract"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProductContract: msRest.CompositeMapper = {
  serializedName: "ProductContract",
  type: {
    name: "Composite",
    className: "ProductContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        constraints: {
          MaxLength: 1000,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      terms: {
        serializedName: "properties.terms",
        type: {
          name: "String"
        }
      },
      subscriptionRequired: {
        serializedName: "properties.subscriptionRequired",
        type: {
          name: "Boolean"
        }
      },
      approvalRequired: {
        serializedName: "properties.approvalRequired",
        type: {
          name: "Boolean"
        }
      },
      subscriptionsLimit: {
        serializedName: "properties.subscriptionsLimit",
        type: {
          name: "Number"
        }
      },
      state: {
        serializedName: "properties.state",
        type: {
          name: "Enum",
          allowedValues: [
            "notPublished",
            "published"
          ]
        }
      },
      displayName: {
        required: true,
        serializedName: "properties.displayName",
        constraints: {
          MaxLength: 300,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ParameterContract: msRest.CompositeMapper = {
  serializedName: "ParameterContract",
  type: {
    name: "Composite",
    className: "ParameterContract",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      defaultValue: {
        serializedName: "defaultValue",
        type: {
          name: "String"
        }
      },
      required: {
        serializedName: "required",
        type: {
          name: "Boolean"
        }
      },
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const RepresentationContract: msRest.CompositeMapper = {
  serializedName: "RepresentationContract",
  type: {
    name: "Composite",
    className: "RepresentationContract",
    modelProperties: {
      contentType: {
        required: true,
        serializedName: "contentType",
        type: {
          name: "String"
        }
      },
      sample: {
        serializedName: "sample",
        type: {
          name: "String"
        }
      },
      schemaId: {
        serializedName: "schemaId",
        type: {
          name: "String"
        }
      },
      typeName: {
        serializedName: "typeName",
        type: {
          name: "String"
        }
      },
      formParameters: {
        serializedName: "formParameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ParameterContract"
            }
          }
        }
      }
    }
  }
};

export const ResponseContract: msRest.CompositeMapper = {
  serializedName: "ResponseContract",
  type: {
    name: "Composite",
    className: "ResponseContract",
    modelProperties: {
      statusCode: {
        required: true,
        serializedName: "statusCode",
        type: {
          name: "Number"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      representations: {
        serializedName: "representations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RepresentationContract"
            }
          }
        }
      },
      headers: {
        serializedName: "headers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ParameterContract"
            }
          }
        }
      }
    }
  }
};

export const RequestContract: msRest.CompositeMapper = {
  serializedName: "RequestContract",
  type: {
    name: "Composite",
    className: "RequestContract",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      queryParameters: {
        serializedName: "queryParameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ParameterContract"
            }
          }
        }
      },
      headers: {
        serializedName: "headers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ParameterContract"
            }
          }
        }
      },
      representations: {
        serializedName: "representations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RepresentationContract"
            }
          }
        }
      }
    }
  }
};

export const OperationEntityBaseContract: msRest.CompositeMapper = {
  serializedName: "OperationEntityBaseContract",
  type: {
    name: "Composite",
    className: "OperationEntityBaseContract",
    modelProperties: {
      templateParameters: {
        serializedName: "templateParameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ParameterContract"
            }
          }
        }
      },
      description: {
        serializedName: "description",
        constraints: {
          MaxLength: 1000
        },
        type: {
          name: "String"
        }
      },
      request: {
        serializedName: "request",
        type: {
          name: "Composite",
          className: "RequestContract"
        }
      },
      responses: {
        serializedName: "responses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResponseContract"
            }
          }
        }
      },
      policies: {
        serializedName: "policies",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationUpdateContract: msRest.CompositeMapper = {
  serializedName: "OperationUpdateContract",
  type: {
    name: "Composite",
    className: "OperationUpdateContract",
    modelProperties: {
      templateParameters: {
        serializedName: "properties.templateParameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ParameterContract"
            }
          }
        }
      },
      description: {
        serializedName: "properties.description",
        constraints: {
          MaxLength: 1000
        },
        type: {
          name: "String"
        }
      },
      request: {
        serializedName: "properties.request",
        type: {
          name: "Composite",
          className: "RequestContract"
        }
      },
      responses: {
        serializedName: "properties.responses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResponseContract"
            }
          }
        }
      },
      policies: {
        serializedName: "properties.policies",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        constraints: {
          MaxLength: 300,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "properties.method",
        type: {
          name: "String"
        }
      },
      urlTemplate: {
        serializedName: "properties.urlTemplate",
        constraints: {
          MaxLength: 1000,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationContract: msRest.CompositeMapper = {
  serializedName: "OperationContract",
  type: {
    name: "Composite",
    className: "OperationContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      templateParameters: {
        serializedName: "properties.templateParameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ParameterContract"
            }
          }
        }
      },
      description: {
        serializedName: "properties.description",
        constraints: {
          MaxLength: 1000
        },
        type: {
          name: "String"
        }
      },
      request: {
        serializedName: "properties.request",
        type: {
          name: "Composite",
          className: "RequestContract"
        }
      },
      responses: {
        serializedName: "properties.responses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResponseContract"
            }
          }
        }
      },
      policies: {
        serializedName: "properties.policies",
        type: {
          name: "String"
        }
      },
      displayName: {
        required: true,
        serializedName: "properties.displayName",
        constraints: {
          MaxLength: 300,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      method: {
        required: true,
        serializedName: "properties.method",
        type: {
          name: "String"
        }
      },
      urlTemplate: {
        required: true,
        serializedName: "properties.urlTemplate",
        constraints: {
          MaxLength: 1000,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiReleaseContract: msRest.CompositeMapper = {
  serializedName: "ApiReleaseContract",
  type: {
    name: "Composite",
    className: "ApiReleaseContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      apiId: {
        serializedName: "properties.apiId",
        type: {
          name: "String"
        }
      },
      createdDateTime: {
        readOnly: true,
        serializedName: "properties.createdDateTime",
        type: {
          name: "DateTime"
        }
      },
      updatedDateTime: {
        readOnly: true,
        serializedName: "properties.updatedDateTime",
        type: {
          name: "DateTime"
        }
      },
      notes: {
        serializedName: "properties.notes",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiRevisionContract: msRest.CompositeMapper = {
  serializedName: "ApiRevisionContract",
  type: {
    name: "Composite",
    className: "ApiRevisionContract",
    modelProperties: {
      apiId: {
        readOnly: true,
        serializedName: "apiId",
        type: {
          name: "String"
        }
      },
      apiRevision: {
        readOnly: true,
        serializedName: "apiRevision",
        constraints: {
          MaxLength: 100,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      createdDateTime: {
        readOnly: true,
        serializedName: "createdDateTime",
        type: {
          name: "DateTime"
        }
      },
      updatedDateTime: {
        readOnly: true,
        serializedName: "updatedDateTime",
        type: {
          name: "DateTime"
        }
      },
      description: {
        readOnly: true,
        serializedName: "description",
        constraints: {
          MaxLength: 256
        },
        type: {
          name: "String"
        }
      },
      privateUrl: {
        readOnly: true,
        serializedName: "privateUrl",
        type: {
          name: "String"
        }
      },
      isOnline: {
        readOnly: true,
        serializedName: "isOnline",
        type: {
          name: "Boolean"
        }
      },
      isCurrent: {
        readOnly: true,
        serializedName: "isCurrent",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ApiUpdateContract: msRest.CompositeMapper = {
  serializedName: "ApiUpdateContract",
  type: {
    name: "Composite",
    className: "ApiUpdateContract",
    modelProperties: {
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      authenticationSettings: {
        serializedName: "properties.authenticationSettings",
        type: {
          name: "Composite",
          className: "AuthenticationSettingsContract"
        }
      },
      subscriptionKeyParameterNames: {
        serializedName: "properties.subscriptionKeyParameterNames",
        type: {
          name: "Composite",
          className: "SubscriptionKeyParameterNamesContract"
        }
      },
      apiType: {
        serializedName: "properties.type",
        type: {
          name: "String"
        }
      },
      apiRevision: {
        serializedName: "properties.apiRevision",
        constraints: {
          MaxLength: 100,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      apiVersion: {
        serializedName: "properties.apiVersion",
        constraints: {
          MaxLength: 100
        },
        type: {
          name: "String"
        }
      },
      isCurrent: {
        serializedName: "properties.isCurrent",
        type: {
          name: "Boolean"
        }
      },
      isOnline: {
        readOnly: true,
        serializedName: "properties.isOnline",
        type: {
          name: "Boolean"
        }
      },
      apiRevisionDescription: {
        serializedName: "properties.apiRevisionDescription",
        constraints: {
          MaxLength: 256
        },
        type: {
          name: "String"
        }
      },
      apiVersionDescription: {
        serializedName: "properties.apiVersionDescription",
        constraints: {
          MaxLength: 256
        },
        type: {
          name: "String"
        }
      },
      apiVersionSetId: {
        serializedName: "properties.apiVersionSetId",
        type: {
          name: "String"
        }
      },
      subscriptionRequired: {
        serializedName: "properties.subscriptionRequired",
        type: {
          name: "Boolean"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        constraints: {
          MaxLength: 300,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      serviceUrl: {
        serializedName: "properties.serviceUrl",
        constraints: {
          MaxLength: 2000,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      path: {
        serializedName: "properties.path",
        constraints: {
          MaxLength: 400,
          MinLength: 0
        },
        type: {
          name: "String"
        }
      },
      protocols: {
        serializedName: "properties.protocols",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: [
                "http",
                "https"
              ]
            }
          }
        }
      }
    }
  }
};

export const ApiContract: msRest.CompositeMapper = {
  serializedName: "ApiContract",
  type: {
    name: "Composite",
    className: "ApiContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      authenticationSettings: {
        serializedName: "properties.authenticationSettings",
        type: {
          name: "Composite",
          className: "AuthenticationSettingsContract"
        }
      },
      subscriptionKeyParameterNames: {
        serializedName: "properties.subscriptionKeyParameterNames",
        type: {
          name: "Composite",
          className: "SubscriptionKeyParameterNamesContract"
        }
      },
      apiType: {
        serializedName: "properties.type",
        type: {
          name: "String"
        }
      },
      apiRevision: {
        serializedName: "properties.apiRevision",
        constraints: {
          MaxLength: 100,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      apiVersion: {
        serializedName: "properties.apiVersion",
        constraints: {
          MaxLength: 100
        },
        type: {
          name: "String"
        }
      },
      isCurrent: {
        serializedName: "properties.isCurrent",
        type: {
          name: "Boolean"
        }
      },
      isOnline: {
        readOnly: true,
        serializedName: "properties.isOnline",
        type: {
          name: "Boolean"
        }
      },
      apiRevisionDescription: {
        serializedName: "properties.apiRevisionDescription",
        constraints: {
          MaxLength: 256
        },
        type: {
          name: "String"
        }
      },
      apiVersionDescription: {
        serializedName: "properties.apiVersionDescription",
        constraints: {
          MaxLength: 256
        },
        type: {
          name: "String"
        }
      },
      apiVersionSetId: {
        serializedName: "properties.apiVersionSetId",
        type: {
          name: "String"
        }
      },
      subscriptionRequired: {
        serializedName: "properties.subscriptionRequired",
        type: {
          name: "Boolean"
        }
      },
      sourceApiId: {
        serializedName: "properties.sourceApiId",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        constraints: {
          MaxLength: 300,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      serviceUrl: {
        serializedName: "properties.serviceUrl",
        constraints: {
          MaxLength: 2000,
          MinLength: 0
        },
        type: {
          name: "String"
        }
      },
      path: {
        required: true,
        serializedName: "properties.path",
        constraints: {
          MaxLength: 400,
          MinLength: 0
        },
        type: {
          name: "String"
        }
      },
      protocols: {
        serializedName: "properties.protocols",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: [
                "http",
                "https"
              ]
            }
          }
        }
      },
      apiVersionSet: {
        serializedName: "properties.apiVersionSet",
        type: {
          name: "Composite",
          className: "ApiVersionSetContractDetails"
        }
      }
    }
  }
};

export const ApiCreateOrUpdateParameter: msRest.CompositeMapper = {
  serializedName: "ApiCreateOrUpdateParameter",
  type: {
    name: "Composite",
    className: "ApiCreateOrUpdateParameter",
    modelProperties: {
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      authenticationSettings: {
        serializedName: "properties.authenticationSettings",
        type: {
          name: "Composite",
          className: "AuthenticationSettingsContract"
        }
      },
      subscriptionKeyParameterNames: {
        serializedName: "properties.subscriptionKeyParameterNames",
        type: {
          name: "Composite",
          className: "SubscriptionKeyParameterNamesContract"
        }
      },
      apiType: {
        serializedName: "properties.type",
        type: {
          name: "String"
        }
      },
      apiRevision: {
        serializedName: "properties.apiRevision",
        constraints: {
          MaxLength: 100,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      apiVersion: {
        serializedName: "properties.apiVersion",
        constraints: {
          MaxLength: 100
        },
        type: {
          name: "String"
        }
      },
      isCurrent: {
        serializedName: "properties.isCurrent",
        type: {
          name: "Boolean"
        }
      },
      isOnline: {
        readOnly: true,
        serializedName: "properties.isOnline",
        type: {
          name: "Boolean"
        }
      },
      apiRevisionDescription: {
        serializedName: "properties.apiRevisionDescription",
        constraints: {
          MaxLength: 256
        },
        type: {
          name: "String"
        }
      },
      apiVersionDescription: {
        serializedName: "properties.apiVersionDescription",
        constraints: {
          MaxLength: 256
        },
        type: {
          name: "String"
        }
      },
      apiVersionSetId: {
        serializedName: "properties.apiVersionSetId",
        type: {
          name: "String"
        }
      },
      subscriptionRequired: {
        serializedName: "properties.subscriptionRequired",
        type: {
          name: "Boolean"
        }
      },
      sourceApiId: {
        serializedName: "properties.sourceApiId",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        constraints: {
          MaxLength: 300,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      serviceUrl: {
        serializedName: "properties.serviceUrl",
        constraints: {
          MaxLength: 2000,
          MinLength: 0
        },
        type: {
          name: "String"
        }
      },
      path: {
        required: true,
        serializedName: "properties.path",
        constraints: {
          MaxLength: 400,
          MinLength: 0
        },
        type: {
          name: "String"
        }
      },
      protocols: {
        serializedName: "properties.protocols",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: [
                "http",
                "https"
              ]
            }
          }
        }
      },
      apiVersionSet: {
        serializedName: "properties.apiVersionSet",
        type: {
          name: "Composite",
          className: "ApiVersionSetContractDetails"
        }
      },
      value: {
        serializedName: "properties.value",
        type: {
          name: "String"
        }
      },
      format: {
        serializedName: "properties.format",
        type: {
          name: "String"
        }
      },
      wsdlSelector: {
        serializedName: "properties.wsdlSelector",
        type: {
          name: "Composite",
          className: "ApiCreateOrUpdatePropertiesWsdlSelector"
        }
      },
      soapApiType: {
        serializedName: "properties.apiType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiVersionSetEntityBase: msRest.CompositeMapper = {
  serializedName: "ApiVersionSetEntityBase",
  type: {
    name: "Composite",
    className: "ApiVersionSetEntityBase",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      versionQueryName: {
        serializedName: "versionQueryName",
        constraints: {
          MaxLength: 100,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      versionHeaderName: {
        serializedName: "versionHeaderName",
        constraints: {
          MaxLength: 100,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiVersionSetUpdateParameters: msRest.CompositeMapper = {
  serializedName: "ApiVersionSetUpdateParameters",
  type: {
    name: "Composite",
    className: "ApiVersionSetUpdateParameters",
    modelProperties: {
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      versionQueryName: {
        serializedName: "properties.versionQueryName",
        constraints: {
          MaxLength: 100,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      versionHeaderName: {
        serializedName: "properties.versionHeaderName",
        constraints: {
          MaxLength: 100,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        constraints: {
          MaxLength: 100,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      versioningScheme: {
        serializedName: "properties.versioningScheme",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiVersionSetContract: msRest.CompositeMapper = {
  serializedName: "ApiVersionSetContract",
  type: {
    name: "Composite",
    className: "ApiVersionSetContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      versionQueryName: {
        serializedName: "properties.versionQueryName",
        constraints: {
          MaxLength: 100,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      versionHeaderName: {
        serializedName: "properties.versionHeaderName",
        constraints: {
          MaxLength: 100,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      displayName: {
        required: true,
        serializedName: "properties.displayName",
        constraints: {
          MaxLength: 100,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      versioningScheme: {
        required: true,
        serializedName: "properties.versioningScheme",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClientSecretContract: msRest.CompositeMapper = {
  serializedName: "ClientSecretContract",
  type: {
    name: "Composite",
    className: "ClientSecretContract",
    modelProperties: {
      clientSecret: {
        serializedName: "clientSecret",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TokenBodyParameterContract: msRest.CompositeMapper = {
  serializedName: "TokenBodyParameterContract",
  type: {
    name: "Composite",
    className: "TokenBodyParameterContract",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AuthorizationServerContractBaseProperties: msRest.CompositeMapper = {
  serializedName: "AuthorizationServerContractBaseProperties",
  type: {
    name: "Composite",
    className: "AuthorizationServerContractBaseProperties",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      authorizationMethods: {
        serializedName: "authorizationMethods",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: [
                "HEAD",
                "OPTIONS",
                "TRACE",
                "GET",
                "POST",
                "PUT",
                "PATCH",
                "DELETE"
              ]
            }
          }
        }
      },
      clientAuthenticationMethod: {
        serializedName: "clientAuthenticationMethod",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      tokenBodyParameters: {
        serializedName: "tokenBodyParameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TokenBodyParameterContract"
            }
          }
        }
      },
      tokenEndpoint: {
        serializedName: "tokenEndpoint",
        type: {
          name: "String"
        }
      },
      supportState: {
        serializedName: "supportState",
        type: {
          name: "Boolean"
        }
      },
      defaultScope: {
        serializedName: "defaultScope",
        type: {
          name: "String"
        }
      },
      bearerTokenSendingMethods: {
        serializedName: "bearerTokenSendingMethods",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      resourceOwnerUsername: {
        serializedName: "resourceOwnerUsername",
        type: {
          name: "String"
        }
      },
      resourceOwnerPassword: {
        serializedName: "resourceOwnerPassword",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AuthorizationServerUpdateContract: msRest.CompositeMapper = {
  serializedName: "AuthorizationServerUpdateContract",
  type: {
    name: "Composite",
    className: "AuthorizationServerUpdateContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      authorizationMethods: {
        serializedName: "properties.authorizationMethods",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: [
                "HEAD",
                "OPTIONS",
                "TRACE",
                "GET",
                "POST",
                "PUT",
                "PATCH",
                "DELETE"
              ]
            }
          }
        }
      },
      clientAuthenticationMethod: {
        serializedName: "properties.clientAuthenticationMethod",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      tokenBodyParameters: {
        serializedName: "properties.tokenBodyParameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TokenBodyParameterContract"
            }
          }
        }
      },
      tokenEndpoint: {
        serializedName: "properties.tokenEndpoint",
        type: {
          name: "String"
        }
      },
      supportState: {
        serializedName: "properties.supportState",
        type: {
          name: "Boolean"
        }
      },
      defaultScope: {
        serializedName: "properties.defaultScope",
        type: {
          name: "String"
        }
      },
      bearerTokenSendingMethods: {
        serializedName: "properties.bearerTokenSendingMethods",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      resourceOwnerUsername: {
        serializedName: "properties.resourceOwnerUsername",
        type: {
          name: "String"
        }
      },
      resourceOwnerPassword: {
        serializedName: "properties.resourceOwnerPassword",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        constraints: {
          MaxLength: 50,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      clientRegistrationEndpoint: {
        serializedName: "properties.clientRegistrationEndpoint",
        type: {
          name: "String"
        }
      },
      authorizationEndpoint: {
        serializedName: "properties.authorizationEndpoint",
        type: {
          name: "String"
        }
      },
      grantTypes: {
        serializedName: "properties.grantTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      clientId: {
        serializedName: "properties.clientId",
        type: {
          name: "String"
        }
      },
      clientSecret: {
        serializedName: "properties.clientSecret",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AuthorizationServerContract: msRest.CompositeMapper = {
  serializedName: "AuthorizationServerContract",
  type: {
    name: "Composite",
    className: "AuthorizationServerContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      authorizationMethods: {
        serializedName: "properties.authorizationMethods",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: [
                "HEAD",
                "OPTIONS",
                "TRACE",
                "GET",
                "POST",
                "PUT",
                "PATCH",
                "DELETE"
              ]
            }
          }
        }
      },
      clientAuthenticationMethod: {
        serializedName: "properties.clientAuthenticationMethod",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      tokenBodyParameters: {
        serializedName: "properties.tokenBodyParameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TokenBodyParameterContract"
            }
          }
        }
      },
      tokenEndpoint: {
        serializedName: "properties.tokenEndpoint",
        type: {
          name: "String"
        }
      },
      supportState: {
        serializedName: "properties.supportState",
        type: {
          name: "Boolean"
        }
      },
      defaultScope: {
        serializedName: "properties.defaultScope",
        type: {
          name: "String"
        }
      },
      bearerTokenSendingMethods: {
        serializedName: "properties.bearerTokenSendingMethods",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      resourceOwnerUsername: {
        serializedName: "properties.resourceOwnerUsername",
        type: {
          name: "String"
        }
      },
      resourceOwnerPassword: {
        serializedName: "properties.resourceOwnerPassword",
        type: {
          name: "String"
        }
      },
      displayName: {
        required: true,
        serializedName: "properties.displayName",
        constraints: {
          MaxLength: 50,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      clientRegistrationEndpoint: {
        required: true,
        serializedName: "properties.clientRegistrationEndpoint",
        type: {
          name: "String"
        }
      },
      authorizationEndpoint: {
        required: true,
        serializedName: "properties.authorizationEndpoint",
        type: {
          name: "String"
        }
      },
      grantTypes: {
        required: true,
        serializedName: "properties.grantTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      clientId: {
        required: true,
        serializedName: "properties.clientId",
        type: {
          name: "String"
        }
      },
      clientSecret: {
        serializedName: "properties.clientSecret",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BackendReconnectContract: msRest.CompositeMapper = {
  serializedName: "BackendReconnectContract",
  type: {
    name: "Composite",
    className: "BackendReconnectContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      after: {
        serializedName: "properties.after",
        type: {
          name: "TimeSpan"
        }
      }
    }
  }
};

export const BackendTlsProperties: msRest.CompositeMapper = {
  serializedName: "BackendTlsProperties",
  type: {
    name: "Composite",
    className: "BackendTlsProperties",
    modelProperties: {
      validateCertificateChain: {
        serializedName: "validateCertificateChain",
        defaultValue: true,
        type: {
          name: "Boolean"
        }
      },
      validateCertificateName: {
        serializedName: "validateCertificateName",
        defaultValue: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const BackendProxyContract: msRest.CompositeMapper = {
  serializedName: "BackendProxyContract",
  type: {
    name: "Composite",
    className: "BackendProxyContract",
    modelProperties: {
      url: {
        required: true,
        serializedName: "url",
        constraints: {
          MaxLength: 2000,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BackendAuthorizationHeaderCredentials: msRest.CompositeMapper = {
  serializedName: "BackendAuthorizationHeaderCredentials",
  type: {
    name: "Composite",
    className: "BackendAuthorizationHeaderCredentials",
    modelProperties: {
      scheme: {
        required: true,
        serializedName: "scheme",
        constraints: {
          MaxLength: 100,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      parameter: {
        required: true,
        serializedName: "parameter",
        constraints: {
          MaxLength: 300,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BackendCredentialsContract: msRest.CompositeMapper = {
  serializedName: "BackendCredentialsContract",
  type: {
    name: "Composite",
    className: "BackendCredentialsContract",
    modelProperties: {
      certificate: {
        serializedName: "certificate",
        constraints: {
          MaxItems: 32
        },
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      query: {
        serializedName: "query",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      },
      header: {
        serializedName: "header",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "Composite",
          className: "BackendAuthorizationHeaderCredentials"
        }
      }
    }
  }
};

export const X509CertificateName: msRest.CompositeMapper = {
  serializedName: "X509CertificateName",
  type: {
    name: "Composite",
    className: "X509CertificateName",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      issuerCertificateThumbprint: {
        serializedName: "issuerCertificateThumbprint",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BackendServiceFabricClusterProperties: msRest.CompositeMapper = {
  serializedName: "BackendServiceFabricClusterProperties",
  type: {
    name: "Composite",
    className: "BackendServiceFabricClusterProperties",
    modelProperties: {
      clientCertificatethumbprint: {
        required: true,
        serializedName: "clientCertificatethumbprint",
        type: {
          name: "String"
        }
      },
      maxPartitionResolutionRetries: {
        serializedName: "maxPartitionResolutionRetries",
        type: {
          name: "Number"
        }
      },
      managementEndpoints: {
        required: true,
        serializedName: "managementEndpoints",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      serverCertificateThumbprints: {
        serializedName: "serverCertificateThumbprints",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      serverX509Names: {
        serializedName: "serverX509Names",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "X509CertificateName"
            }
          }
        }
      }
    }
  }
};

export const BackendProperties: msRest.CompositeMapper = {
  serializedName: "BackendProperties",
  type: {
    name: "Composite",
    className: "BackendProperties",
    modelProperties: {
      serviceFabricCluster: {
        serializedName: "serviceFabricCluster",
        type: {
          name: "Composite",
          className: "BackendServiceFabricClusterProperties"
        }
      }
    }
  }
};

export const BackendBaseParameters: msRest.CompositeMapper = {
  serializedName: "BackendBaseParameters",
  type: {
    name: "Composite",
    className: "BackendBaseParameters",
    modelProperties: {
      title: {
        serializedName: "title",
        constraints: {
          MaxLength: 300,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        constraints: {
          MaxLength: 2000,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      resourceId: {
        serializedName: "resourceId",
        constraints: {
          MaxLength: 2000,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "BackendProperties"
        }
      },
      credentials: {
        serializedName: "credentials",
        type: {
          name: "Composite",
          className: "BackendCredentialsContract"
        }
      },
      proxy: {
        serializedName: "proxy",
        type: {
          name: "Composite",
          className: "BackendProxyContract"
        }
      },
      tls: {
        serializedName: "tls",
        type: {
          name: "Composite",
          className: "BackendTlsProperties"
        }
      }
    }
  }
};

export const BackendUpdateParameters: msRest.CompositeMapper = {
  serializedName: "BackendUpdateParameters",
  type: {
    name: "Composite",
    className: "BackendUpdateParameters",
    modelProperties: {
      title: {
        serializedName: "properties.title",
        constraints: {
          MaxLength: 300,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        constraints: {
          MaxLength: 2000,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      resourceId: {
        serializedName: "properties.resourceId",
        constraints: {
          MaxLength: 2000,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties.properties",
        type: {
          name: "Composite",
          className: "BackendProperties"
        }
      },
      credentials: {
        serializedName: "properties.credentials",
        type: {
          name: "Composite",
          className: "BackendCredentialsContract"
        }
      },
      proxy: {
        serializedName: "properties.proxy",
        type: {
          name: "Composite",
          className: "BackendProxyContract"
        }
      },
      tls: {
        serializedName: "properties.tls",
        type: {
          name: "Composite",
          className: "BackendTlsProperties"
        }
      },
      url: {
        serializedName: "properties.url",
        constraints: {
          MaxLength: 2000,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      protocol: {
        serializedName: "properties.protocol",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BackendContract: msRest.CompositeMapper = {
  serializedName: "BackendContract",
  type: {
    name: "Composite",
    className: "BackendContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      title: {
        serializedName: "properties.title",
        constraints: {
          MaxLength: 300,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        constraints: {
          MaxLength: 2000,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      resourceId: {
        serializedName: "properties.resourceId",
        constraints: {
          MaxLength: 2000,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties.properties",
        type: {
          name: "Composite",
          className: "BackendProperties"
        }
      },
      credentials: {
        serializedName: "properties.credentials",
        type: {
          name: "Composite",
          className: "BackendCredentialsContract"
        }
      },
      proxy: {
        serializedName: "properties.proxy",
        type: {
          name: "Composite",
          className: "BackendProxyContract"
        }
      },
      tls: {
        serializedName: "properties.tls",
        type: {
          name: "Composite",
          className: "BackendTlsProperties"
        }
      },
      url: {
        required: true,
        serializedName: "properties.url",
        constraints: {
          MaxLength: 2000,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      protocol: {
        required: true,
        serializedName: "properties.protocol",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CacheUpdateParameters: msRest.CompositeMapper = {
  serializedName: "CacheUpdateParameters",
  type: {
    name: "Composite",
    className: "CacheUpdateParameters",
    modelProperties: {
      description: {
        serializedName: "properties.description",
        constraints: {
          MaxLength: 2000
        },
        type: {
          name: "String"
        }
      },
      connectionString: {
        serializedName: "properties.connectionString",
        constraints: {
          MaxLength: 300
        },
        type: {
          name: "String"
        }
      },
      resourceId: {
        serializedName: "properties.resourceId",
        constraints: {
          MaxLength: 2000
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CacheContract: msRest.CompositeMapper = {
  serializedName: "CacheContract",
  type: {
    name: "Composite",
    className: "CacheContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        constraints: {
          MaxLength: 2000
        },
        type: {
          name: "String"
        }
      },
      connectionString: {
        required: true,
        serializedName: "properties.connectionString",
        constraints: {
          MaxLength: 300
        },
        type: {
          name: "String"
        }
      },
      resourceId: {
        serializedName: "properties.resourceId",
        constraints: {
          MaxLength: 2000
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CertificateContract: msRest.CompositeMapper = {
  serializedName: "CertificateContract",
  type: {
    name: "Composite",
    className: "CertificateContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      subject: {
        required: true,
        serializedName: "properties.subject",
        type: {
          name: "String"
        }
      },
      thumbprint: {
        required: true,
        serializedName: "properties.thumbprint",
        type: {
          name: "String"
        }
      },
      expirationDate: {
        required: true,
        serializedName: "properties.expirationDate",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const CertificateCreateOrUpdateParameters: msRest.CompositeMapper = {
  serializedName: "CertificateCreateOrUpdateParameters",
  type: {
    name: "Composite",
    className: "CertificateCreateOrUpdateParameters",
    modelProperties: {
      data: {
        required: true,
        serializedName: "properties.data",
        type: {
          name: "String"
        }
      },
      password: {
        required: true,
        serializedName: "properties.password",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceSku: msRest.CompositeMapper = {
  serializedName: "ResourceSku",
  type: {
    name: "Composite",
    className: "ResourceSku",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceSkuCapacity: msRest.CompositeMapper = {
  serializedName: "ResourceSkuCapacity",
  type: {
    name: "Composite",
    className: "ResourceSkuCapacity",
    modelProperties: {
      minimum: {
        readOnly: true,
        serializedName: "minimum",
        type: {
          name: "Number"
        }
      },
      maximum: {
        readOnly: true,
        serializedName: "maximum",
        type: {
          name: "Number"
        }
      },
      default: {
        readOnly: true,
        serializedName: "default",
        type: {
          name: "Number"
        }
      },
      scaleType: {
        readOnly: true,
        serializedName: "scaleType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceSkuResult: msRest.CompositeMapper = {
  serializedName: "ResourceSkuResult",
  type: {
    name: "Composite",
    className: "ResourceSkuResult",
    modelProperties: {
      resourceType: {
        readOnly: true,
        serializedName: "resourceType",
        type: {
          name: "String"
        }
      },
      sku: {
        readOnly: true,
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "ResourceSku"
        }
      },
      capacity: {
        readOnly: true,
        serializedName: "capacity",
        type: {
          name: "Composite",
          className: "ResourceSkuCapacity"
        }
      }
    }
  }
};

export const CertificateInformation: msRest.CompositeMapper = {
  serializedName: "CertificateInformation",
  type: {
    name: "Composite",
    className: "CertificateInformation",
    modelProperties: {
      expiry: {
        required: true,
        serializedName: "expiry",
        type: {
          name: "DateTime"
        }
      },
      thumbprint: {
        required: true,
        serializedName: "thumbprint",
        type: {
          name: "String"
        }
      },
      subject: {
        required: true,
        serializedName: "subject",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CertificateConfiguration: msRest.CompositeMapper = {
  serializedName: "CertificateConfiguration",
  type: {
    name: "Composite",
    className: "CertificateConfiguration",
    modelProperties: {
      encodedCertificate: {
        serializedName: "encodedCertificate",
        type: {
          name: "String"
        }
      },
      certificatePassword: {
        serializedName: "certificatePassword",
        type: {
          name: "String"
        }
      },
      storeName: {
        required: true,
        serializedName: "storeName",
        type: {
          name: "String"
        }
      },
      certificate: {
        serializedName: "certificate",
        type: {
          name: "Composite",
          className: "CertificateInformation"
        }
      }
    }
  }
};

export const HostnameConfiguration: msRest.CompositeMapper = {
  serializedName: "HostnameConfiguration",
  type: {
    name: "Composite",
    className: "HostnameConfiguration",
    modelProperties: {
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      hostName: {
        required: true,
        serializedName: "hostName",
        type: {
          name: "String"
        }
      },
      keyVaultId: {
        serializedName: "keyVaultId",
        type: {
          name: "String"
        }
      },
      encodedCertificate: {
        serializedName: "encodedCertificate",
        type: {
          name: "String"
        }
      },
      certificatePassword: {
        serializedName: "certificatePassword",
        type: {
          name: "String"
        }
      },
      defaultSslBinding: {
        serializedName: "defaultSslBinding",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      negotiateClientCertificate: {
        serializedName: "negotiateClientCertificate",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      certificate: {
        serializedName: "certificate",
        type: {
          name: "Composite",
          className: "CertificateInformation"
        }
      }
    }
  }
};

export const VirtualNetworkConfiguration: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkConfiguration",
  type: {
    name: "Composite",
    className: "VirtualNetworkConfiguration",
    modelProperties: {
      vnetid: {
        readOnly: true,
        serializedName: "vnetid",
        type: {
          name: "String"
        }
      },
      subnetname: {
        readOnly: true,
        serializedName: "subnetname",
        type: {
          name: "String"
        }
      },
      subnetResourceId: {
        serializedName: "subnetResourceId",
        constraints: {
          Pattern: /^\/subscriptions\/[^\/]*\/resourceGroups\/[^\/]*\/providers\/Microsoft.(ClassicNetwork|Network)\/virtualNetworks\/[^\/]*\/subnets\/[^\/]*$/
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiManagementServiceSkuProperties: msRest.CompositeMapper = {
  serializedName: "ApiManagementServiceSkuProperties",
  type: {
    name: "Composite",
    className: "ApiManagementServiceSkuProperties",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      capacity: {
        required: true,
        serializedName: "capacity",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AdditionalLocation: msRest.CompositeMapper = {
  serializedName: "AdditionalLocation",
  type: {
    name: "Composite",
    className: "AdditionalLocation",
    modelProperties: {
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      sku: {
        required: true,
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "ApiManagementServiceSkuProperties"
        }
      },
      publicIPAddresses: {
        readOnly: true,
        serializedName: "publicIPAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      privateIPAddresses: {
        readOnly: true,
        serializedName: "privateIPAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      virtualNetworkConfiguration: {
        serializedName: "virtualNetworkConfiguration",
        type: {
          name: "Composite",
          className: "VirtualNetworkConfiguration"
        }
      },
      gatewayRegionalUrl: {
        readOnly: true,
        serializedName: "gatewayRegionalUrl",
        type: {
          name: "String"
        }
      },
      disableGateway: {
        serializedName: "disableGateway",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ApiManagementServiceBackupRestoreParameters: msRest.CompositeMapper = {
  serializedName: "ApiManagementServiceBackupRestoreParameters",
  type: {
    name: "Composite",
    className: "ApiManagementServiceBackupRestoreParameters",
    modelProperties: {
      storageAccount: {
        required: true,
        serializedName: "storageAccount",
        type: {
          name: "String"
        }
      },
      accessKey: {
        required: true,
        serializedName: "accessKey",
        type: {
          name: "String"
        }
      },
      containerName: {
        required: true,
        serializedName: "containerName",
        type: {
          name: "String"
        }
      },
      backupName: {
        required: true,
        serializedName: "backupName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiVersionConstraint: msRest.CompositeMapper = {
  serializedName: "ApiVersionConstraint",
  type: {
    name: "Composite",
    className: "ApiVersionConstraint",
    modelProperties: {
      minApiVersion: {
        serializedName: "minApiVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiManagementServiceBaseProperties: msRest.CompositeMapper = {
  serializedName: "ApiManagementServiceBaseProperties",
  type: {
    name: "Composite",
    className: "ApiManagementServiceBaseProperties",
    modelProperties: {
      notificationSenderEmail: {
        serializedName: "notificationSenderEmail",
        constraints: {
          MaxLength: 100
        },
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      targetProvisioningState: {
        readOnly: true,
        serializedName: "targetProvisioningState",
        type: {
          name: "String"
        }
      },
      createdAtUtc: {
        readOnly: true,
        serializedName: "createdAtUtc",
        type: {
          name: "DateTime"
        }
      },
      gatewayUrl: {
        readOnly: true,
        serializedName: "gatewayUrl",
        type: {
          name: "String"
        }
      },
      gatewayRegionalUrl: {
        readOnly: true,
        serializedName: "gatewayRegionalUrl",
        type: {
          name: "String"
        }
      },
      portalUrl: {
        readOnly: true,
        serializedName: "portalUrl",
        type: {
          name: "String"
        }
      },
      managementApiUrl: {
        readOnly: true,
        serializedName: "managementApiUrl",
        type: {
          name: "String"
        }
      },
      scmUrl: {
        readOnly: true,
        serializedName: "scmUrl",
        type: {
          name: "String"
        }
      },
      developerPortalUrl: {
        readOnly: true,
        serializedName: "developerPortalUrl",
        type: {
          name: "String"
        }
      },
      hostnameConfigurations: {
        serializedName: "hostnameConfigurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HostnameConfiguration"
            }
          }
        }
      },
      publicIPAddresses: {
        readOnly: true,
        serializedName: "publicIPAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      privateIPAddresses: {
        readOnly: true,
        serializedName: "privateIPAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      virtualNetworkConfiguration: {
        serializedName: "virtualNetworkConfiguration",
        type: {
          name: "Composite",
          className: "VirtualNetworkConfiguration"
        }
      },
      additionalLocations: {
        serializedName: "additionalLocations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AdditionalLocation"
            }
          }
        }
      },
      customProperties: {
        serializedName: "customProperties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      certificates: {
        serializedName: "certificates",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CertificateConfiguration"
            }
          }
        }
      },
      enableClientCertificate: {
        serializedName: "enableClientCertificate",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      disableGateway: {
        serializedName: "disableGateway",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      virtualNetworkType: {
        serializedName: "virtualNetworkType",
        defaultValue: 'None',
        type: {
          name: "String"
        }
      },
      apiVersionConstraint: {
        serializedName: "apiVersionConstraint",
        type: {
          name: "Composite",
          className: "ApiVersionConstraint"
        }
      }
    }
  }
};

export const UserIdentityProperties: msRest.CompositeMapper = {
  serializedName: "UserIdentityProperties",
  type: {
    name: "Composite",
    className: "UserIdentityProperties",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      clientId: {
        serializedName: "clientId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiManagementServiceIdentity: msRest.CompositeMapper = {
  serializedName: "ApiManagementServiceIdentity",
  type: {
    name: "Composite",
    className: "ApiManagementServiceIdentity",
    modelProperties: {
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "tenantId",
        type: {
          name: "Uuid"
        }
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "UserIdentityProperties"
            }
          }
        }
      }
    }
  }
};

export const ApimResource: msRest.CompositeMapper = {
  serializedName: "ApimResource",
  type: {
    name: "Composite",
    className: "ApimResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ApiManagementServiceResource: msRest.CompositeMapper = {
  serializedName: "ApiManagementServiceResource",
  type: {
    name: "Composite",
    className: "ApiManagementServiceResource",
    modelProperties: {
      ...ApimResource.type.modelProperties,
      notificationSenderEmail: {
        serializedName: "properties.notificationSenderEmail",
        constraints: {
          MaxLength: 100
        },
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      targetProvisioningState: {
        readOnly: true,
        serializedName: "properties.targetProvisioningState",
        type: {
          name: "String"
        }
      },
      createdAtUtc: {
        readOnly: true,
        serializedName: "properties.createdAtUtc",
        type: {
          name: "DateTime"
        }
      },
      gatewayUrl: {
        readOnly: true,
        serializedName: "properties.gatewayUrl",
        type: {
          name: "String"
        }
      },
      gatewayRegionalUrl: {
        readOnly: true,
        serializedName: "properties.gatewayRegionalUrl",
        type: {
          name: "String"
        }
      },
      portalUrl: {
        readOnly: true,
        serializedName: "properties.portalUrl",
        type: {
          name: "String"
        }
      },
      managementApiUrl: {
        readOnly: true,
        serializedName: "properties.managementApiUrl",
        type: {
          name: "String"
        }
      },
      scmUrl: {
        readOnly: true,
        serializedName: "properties.scmUrl",
        type: {
          name: "String"
        }
      },
      developerPortalUrl: {
        readOnly: true,
        serializedName: "properties.developerPortalUrl",
        type: {
          name: "String"
        }
      },
      hostnameConfigurations: {
        serializedName: "properties.hostnameConfigurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HostnameConfiguration"
            }
          }
        }
      },
      publicIPAddresses: {
        readOnly: true,
        serializedName: "properties.publicIPAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      privateIPAddresses: {
        readOnly: true,
        serializedName: "properties.privateIPAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      virtualNetworkConfiguration: {
        serializedName: "properties.virtualNetworkConfiguration",
        type: {
          name: "Composite",
          className: "VirtualNetworkConfiguration"
        }
      },
      additionalLocations: {
        serializedName: "properties.additionalLocations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AdditionalLocation"
            }
          }
        }
      },
      customProperties: {
        serializedName: "properties.customProperties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      certificates: {
        serializedName: "properties.certificates",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CertificateConfiguration"
            }
          }
        }
      },
      enableClientCertificate: {
        serializedName: "properties.enableClientCertificate",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      disableGateway: {
        serializedName: "properties.disableGateway",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      virtualNetworkType: {
        serializedName: "properties.virtualNetworkType",
        defaultValue: 'None',
        type: {
          name: "String"
        }
      },
      apiVersionConstraint: {
        serializedName: "properties.apiVersionConstraint",
        type: {
          name: "Composite",
          className: "ApiVersionConstraint"
        }
      },
      publisherEmail: {
        required: true,
        serializedName: "properties.publisherEmail",
        constraints: {
          MaxLength: 100
        },
        type: {
          name: "String"
        }
      },
      publisherName: {
        required: true,
        serializedName: "properties.publisherName",
        constraints: {
          MaxLength: 100
        },
        type: {
          name: "String"
        }
      },
      sku: {
        required: true,
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "ApiManagementServiceSkuProperties"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ApiManagementServiceIdentity"
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiManagementServiceUpdateParameters: msRest.CompositeMapper = {
  serializedName: "ApiManagementServiceUpdateParameters",
  type: {
    name: "Composite",
    className: "ApiManagementServiceUpdateParameters",
    modelProperties: {
      ...ApimResource.type.modelProperties,
      notificationSenderEmail: {
        serializedName: "properties.notificationSenderEmail",
        constraints: {
          MaxLength: 100
        },
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      targetProvisioningState: {
        readOnly: true,
        serializedName: "properties.targetProvisioningState",
        type: {
          name: "String"
        }
      },
      createdAtUtc: {
        readOnly: true,
        serializedName: "properties.createdAtUtc",
        type: {
          name: "DateTime"
        }
      },
      gatewayUrl: {
        readOnly: true,
        serializedName: "properties.gatewayUrl",
        type: {
          name: "String"
        }
      },
      gatewayRegionalUrl: {
        readOnly: true,
        serializedName: "properties.gatewayRegionalUrl",
        type: {
          name: "String"
        }
      },
      portalUrl: {
        readOnly: true,
        serializedName: "properties.portalUrl",
        type: {
          name: "String"
        }
      },
      managementApiUrl: {
        readOnly: true,
        serializedName: "properties.managementApiUrl",
        type: {
          name: "String"
        }
      },
      scmUrl: {
        readOnly: true,
        serializedName: "properties.scmUrl",
        type: {
          name: "String"
        }
      },
      developerPortalUrl: {
        readOnly: true,
        serializedName: "properties.developerPortalUrl",
        type: {
          name: "String"
        }
      },
      hostnameConfigurations: {
        serializedName: "properties.hostnameConfigurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HostnameConfiguration"
            }
          }
        }
      },
      publicIPAddresses: {
        readOnly: true,
        serializedName: "properties.publicIPAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      privateIPAddresses: {
        readOnly: true,
        serializedName: "properties.privateIPAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      virtualNetworkConfiguration: {
        serializedName: "properties.virtualNetworkConfiguration",
        type: {
          name: "Composite",
          className: "VirtualNetworkConfiguration"
        }
      },
      additionalLocations: {
        serializedName: "properties.additionalLocations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AdditionalLocation"
            }
          }
        }
      },
      customProperties: {
        serializedName: "properties.customProperties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      certificates: {
        serializedName: "properties.certificates",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CertificateConfiguration"
            }
          }
        }
      },
      enableClientCertificate: {
        serializedName: "properties.enableClientCertificate",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      disableGateway: {
        serializedName: "properties.disableGateway",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      virtualNetworkType: {
        serializedName: "properties.virtualNetworkType",
        defaultValue: 'None',
        type: {
          name: "String"
        }
      },
      apiVersionConstraint: {
        serializedName: "properties.apiVersionConstraint",
        type: {
          name: "Composite",
          className: "ApiVersionConstraint"
        }
      },
      publisherEmail: {
        serializedName: "properties.publisherEmail",
        constraints: {
          MaxLength: 100
        },
        type: {
          name: "String"
        }
      },
      publisherName: {
        serializedName: "properties.publisherName",
        constraints: {
          MaxLength: 100
        },
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "ApiManagementServiceSkuProperties"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ApiManagementServiceIdentity"
        }
      },
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiManagementServiceGetSsoTokenResult: msRest.CompositeMapper = {
  serializedName: "ApiManagementServiceGetSsoTokenResult",
  type: {
    name: "Composite",
    className: "ApiManagementServiceGetSsoTokenResult",
    modelProperties: {
      redirectUri: {
        serializedName: "redirectUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiManagementServiceCheckNameAvailabilityParameters: msRest.CompositeMapper = {
  serializedName: "ApiManagementServiceCheckNameAvailabilityParameters",
  type: {
    name: "Composite",
    className: "ApiManagementServiceCheckNameAvailabilityParameters",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiManagementServiceNameAvailabilityResult: msRest.CompositeMapper = {
  serializedName: "ApiManagementServiceNameAvailabilityResult",
  type: {
    name: "Composite",
    className: "ApiManagementServiceNameAvailabilityResult",
    modelProperties: {
      nameAvailable: {
        readOnly: true,
        serializedName: "nameAvailable",
        type: {
          name: "Boolean"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "Enum",
          allowedValues: [
            "Valid",
            "Invalid",
            "AlreadyExists"
          ]
        }
      }
    }
  }
};

export const ApiManagementServiceApplyNetworkConfigurationParameters: msRest.CompositeMapper = {
  serializedName: "ApiManagementServiceApplyNetworkConfigurationParameters",
  type: {
    name: "Composite",
    className: "ApiManagementServiceApplyNetworkConfigurationParameters",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "Operation_display",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const EmailTemplateParametersContractProperties: msRest.CompositeMapper = {
  serializedName: "EmailTemplateParametersContractProperties",
  type: {
    name: "Composite",
    className: "EmailTemplateParametersContractProperties",
    modelProperties: {
      name: {
        serializedName: "name",
        constraints: {
          MaxLength: 256,
          MinLength: 1,
          Pattern: /^[A-Za-z0-9-._]+$/
        },
        type: {
          name: "String"
        }
      },
      title: {
        serializedName: "title",
        constraints: {
          MaxLength: 4096,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        constraints: {
          MaxLength: 256,
          MinLength: 1,
          Pattern: /^[A-Za-z0-9-._]+$/
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EmailTemplateUpdateParameters: msRest.CompositeMapper = {
  serializedName: "EmailTemplateUpdateParameters",
  type: {
    name: "Composite",
    className: "EmailTemplateUpdateParameters",
    modelProperties: {
      subject: {
        serializedName: "properties.subject",
        constraints: {
          MaxLength: 1000,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      title: {
        serializedName: "properties.title",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      body: {
        serializedName: "properties.body",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      parameters: {
        serializedName: "properties.parameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EmailTemplateParametersContractProperties"
            }
          }
        }
      }
    }
  }
};

export const EmailTemplateContract: msRest.CompositeMapper = {
  serializedName: "EmailTemplateContract",
  type: {
    name: "Composite",
    className: "EmailTemplateContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      subject: {
        required: true,
        serializedName: "properties.subject",
        constraints: {
          MaxLength: 1000,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      body: {
        required: true,
        serializedName: "properties.body",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      title: {
        serializedName: "properties.title",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      isDefault: {
        readOnly: true,
        serializedName: "properties.isDefault",
        type: {
          name: "Boolean"
        }
      },
      parameters: {
        serializedName: "properties.parameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EmailTemplateParametersContractProperties"
            }
          }
        }
      }
    }
  }
};

export const AssociationContract: msRest.CompositeMapper = {
  serializedName: "AssociationContract",
  type: {
    name: "Composite",
    className: "AssociationContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "Enum",
          allowedValues: [
            "created"
          ]
        }
      }
    }
  }
};

export const GatewayHostnameConfigurationContract: msRest.CompositeMapper = {
  serializedName: "GatewayHostnameConfigurationContract",
  type: {
    name: "Composite",
    className: "GatewayHostnameConfigurationContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      hostname: {
        serializedName: "properties.hostname",
        type: {
          name: "String"
        }
      },
      certificateId: {
        serializedName: "properties.certificateId",
        type: {
          name: "String"
        }
      },
      negotiateClientCertificate: {
        serializedName: "properties.negotiateClientCertificate",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const GatewayTokenContract: msRest.CompositeMapper = {
  serializedName: "GatewayTokenContract",
  type: {
    name: "Composite",
    className: "GatewayTokenContract",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GatewayTokenRequestContract: msRest.CompositeMapper = {
  serializedName: "GatewayTokenRequestContract",
  type: {
    name: "Composite",
    className: "GatewayTokenRequestContract",
    modelProperties: {
      keyType: {
        required: true,
        serializedName: "keyType",
        defaultValue: 'primary',
        type: {
          name: "Enum",
          allowedValues: [
            "primary",
            "secondary"
          ]
        }
      },
      expiry: {
        required: true,
        serializedName: "expiry",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const GatewayKeyRegenerationRequestContract: msRest.CompositeMapper = {
  serializedName: "GatewayKeyRegenerationRequestContract",
  type: {
    name: "Composite",
    className: "GatewayKeyRegenerationRequestContract",
    modelProperties: {
      keyType: {
        required: true,
        serializedName: "keyType",
        type: {
          name: "Enum",
          allowedValues: [
            "primary",
            "secondary"
          ]
        }
      }
    }
  }
};

export const GatewayKeysContract: msRest.CompositeMapper = {
  serializedName: "GatewayKeysContract",
  type: {
    name: "Composite",
    className: "GatewayKeysContract",
    modelProperties: {
      primary: {
        serializedName: "primary",
        type: {
          name: "String"
        }
      },
      secondary: {
        serializedName: "secondary",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceLocationDataContract: msRest.CompositeMapper = {
  serializedName: "ResourceLocationDataContract",
  type: {
    name: "Composite",
    className: "ResourceLocationDataContract",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        constraints: {
          MaxLength: 256
        },
        type: {
          name: "String"
        }
      },
      city: {
        serializedName: "city",
        constraints: {
          MaxLength: 256
        },
        type: {
          name: "String"
        }
      },
      district: {
        serializedName: "district",
        constraints: {
          MaxLength: 256
        },
        type: {
          name: "String"
        }
      },
      countryOrRegion: {
        serializedName: "countryOrRegion",
        constraints: {
          MaxLength: 256
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GatewayContract: msRest.CompositeMapper = {
  serializedName: "GatewayContract",
  type: {
    name: "Composite",
    className: "GatewayContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      locationData: {
        serializedName: "properties.locationData",
        type: {
          name: "Composite",
          className: "ResourceLocationDataContract"
        }
      },
      description: {
        serializedName: "properties.description",
        constraints: {
          MaxLength: 1000
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserIdentityContract: msRest.CompositeMapper = {
  serializedName: "UserIdentityContract",
  type: {
    name: "Composite",
    className: "UserIdentityContract",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserEntityBaseParameters: msRest.CompositeMapper = {
  serializedName: "UserEntityBaseParameters",
  type: {
    name: "Composite",
    className: "UserEntityBaseParameters",
    modelProperties: {
      state: {
        serializedName: "state",
        defaultValue: 'active',
        type: {
          name: "String"
        }
      },
      note: {
        serializedName: "note",
        type: {
          name: "String"
        }
      },
      identities: {
        serializedName: "identities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UserIdentityContract"
            }
          }
        }
      }
    }
  }
};

export const GroupContractProperties: msRest.CompositeMapper = {
  serializedName: "GroupContractProperties",
  type: {
    name: "Composite",
    className: "GroupContractProperties",
    modelProperties: {
      displayName: {
        required: true,
        serializedName: "displayName",
        constraints: {
          MaxLength: 300,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        constraints: {
          MaxLength: 1000
        },
        type: {
          name: "String"
        }
      },
      builtIn: {
        readOnly: true,
        serializedName: "builtIn",
        type: {
          name: "Boolean"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "Enum",
          allowedValues: [
            "custom",
            "system",
            "external"
          ]
        }
      },
      externalId: {
        serializedName: "externalId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserContract: msRest.CompositeMapper = {
  serializedName: "UserContract",
  type: {
    name: "Composite",
    className: "UserContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      state: {
        serializedName: "properties.state",
        defaultValue: 'active',
        type: {
          name: "String"
        }
      },
      note: {
        serializedName: "properties.note",
        type: {
          name: "String"
        }
      },
      identities: {
        serializedName: "properties.identities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UserIdentityContract"
            }
          }
        }
      },
      firstName: {
        serializedName: "properties.firstName",
        type: {
          name: "String"
        }
      },
      lastName: {
        serializedName: "properties.lastName",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "properties.email",
        type: {
          name: "String"
        }
      },
      registrationDate: {
        serializedName: "properties.registrationDate",
        type: {
          name: "DateTime"
        }
      },
      groups: {
        readOnly: true,
        serializedName: "properties.groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GroupContractProperties"
            }
          }
        }
      }
    }
  }
};

export const GroupUpdateParameters: msRest.CompositeMapper = {
  serializedName: "GroupUpdateParameters",
  type: {
    name: "Composite",
    className: "GroupUpdateParameters",
    modelProperties: {
      displayName: {
        serializedName: "properties.displayName",
        constraints: {
          MaxLength: 300,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "properties.type",
        type: {
          name: "Enum",
          allowedValues: [
            "custom",
            "system",
            "external"
          ]
        }
      },
      externalId: {
        serializedName: "properties.externalId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GroupContract: msRest.CompositeMapper = {
  serializedName: "GroupContract",
  type: {
    name: "Composite",
    className: "GroupContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      displayName: {
        required: true,
        serializedName: "properties.displayName",
        constraints: {
          MaxLength: 300,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        constraints: {
          MaxLength: 1000
        },
        type: {
          name: "String"
        }
      },
      builtIn: {
        readOnly: true,
        serializedName: "properties.builtIn",
        type: {
          name: "Boolean"
        }
      },
      groupContractType: {
        serializedName: "properties.type",
        type: {
          name: "Enum",
          allowedValues: [
            "custom",
            "system",
            "external"
          ]
        }
      },
      externalId: {
        serializedName: "properties.externalId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GroupCreateParameters: msRest.CompositeMapper = {
  serializedName: "GroupCreateParameters",
  type: {
    name: "Composite",
    className: "GroupCreateParameters",
    modelProperties: {
      displayName: {
        required: true,
        serializedName: "properties.displayName",
        constraints: {
          MaxLength: 300,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "properties.type",
        type: {
          name: "Enum",
          allowedValues: [
            "custom",
            "system",
            "external"
          ]
        }
      },
      externalId: {
        serializedName: "properties.externalId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IdentityProviderBaseParameters: msRest.CompositeMapper = {
  serializedName: "IdentityProviderBaseParameters",
  type: {
    name: "Composite",
    className: "IdentityProviderBaseParameters",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      signinTenant: {
        serializedName: "signinTenant",
        type: {
          name: "String"
        }
      },
      allowedTenants: {
        serializedName: "allowedTenants",
        constraints: {
          MaxItems: 32
        },
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      authority: {
        serializedName: "authority",
        type: {
          name: "String"
        }
      },
      signupPolicyName: {
        serializedName: "signupPolicyName",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      signinPolicyName: {
        serializedName: "signinPolicyName",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      profileEditingPolicyName: {
        serializedName: "profileEditingPolicyName",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      passwordResetPolicyName: {
        serializedName: "passwordResetPolicyName",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IdentityProviderUpdateParameters: msRest.CompositeMapper = {
  serializedName: "IdentityProviderUpdateParameters",
  type: {
    name: "Composite",
    className: "IdentityProviderUpdateParameters",
    modelProperties: {
      type: {
        serializedName: "properties.type",
        type: {
          name: "String"
        }
      },
      signinTenant: {
        serializedName: "properties.signinTenant",
        type: {
          name: "String"
        }
      },
      allowedTenants: {
        serializedName: "properties.allowedTenants",
        constraints: {
          MaxItems: 32
        },
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      authority: {
        serializedName: "properties.authority",
        type: {
          name: "String"
        }
      },
      signupPolicyName: {
        serializedName: "properties.signupPolicyName",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      signinPolicyName: {
        serializedName: "properties.signinPolicyName",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      profileEditingPolicyName: {
        serializedName: "properties.profileEditingPolicyName",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      passwordResetPolicyName: {
        serializedName: "properties.passwordResetPolicyName",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      clientId: {
        serializedName: "properties.clientId",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      clientSecret: {
        serializedName: "properties.clientSecret",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IdentityProviderContract: msRest.CompositeMapper = {
  serializedName: "IdentityProviderContract",
  type: {
    name: "Composite",
    className: "IdentityProviderContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      identityProviderContractType: {
        serializedName: "properties.type",
        type: {
          name: "String"
        }
      },
      signinTenant: {
        serializedName: "properties.signinTenant",
        type: {
          name: "String"
        }
      },
      allowedTenants: {
        serializedName: "properties.allowedTenants",
        constraints: {
          MaxItems: 32
        },
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      authority: {
        serializedName: "properties.authority",
        type: {
          name: "String"
        }
      },
      signupPolicyName: {
        serializedName: "properties.signupPolicyName",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      signinPolicyName: {
        serializedName: "properties.signinPolicyName",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      profileEditingPolicyName: {
        serializedName: "properties.profileEditingPolicyName",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      passwordResetPolicyName: {
        serializedName: "properties.passwordResetPolicyName",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      clientId: {
        required: true,
        serializedName: "properties.clientId",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      clientSecret: {
        serializedName: "properties.clientSecret",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IdentityProviderCreateContract: msRest.CompositeMapper = {
  serializedName: "IdentityProviderCreateContract",
  type: {
    name: "Composite",
    className: "IdentityProviderCreateContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      identityProviderCreateContractType: {
        serializedName: "properties.type",
        type: {
          name: "String"
        }
      },
      signinTenant: {
        serializedName: "properties.signinTenant",
        type: {
          name: "String"
        }
      },
      allowedTenants: {
        serializedName: "properties.allowedTenants",
        constraints: {
          MaxItems: 32
        },
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      authority: {
        serializedName: "properties.authority",
        type: {
          name: "String"
        }
      },
      signupPolicyName: {
        serializedName: "properties.signupPolicyName",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      signinPolicyName: {
        serializedName: "properties.signinPolicyName",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      profileEditingPolicyName: {
        serializedName: "properties.profileEditingPolicyName",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      passwordResetPolicyName: {
        serializedName: "properties.passwordResetPolicyName",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      clientId: {
        required: true,
        serializedName: "properties.clientId",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      clientSecret: {
        required: true,
        serializedName: "properties.clientSecret",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LoggerUpdateContract: msRest.CompositeMapper = {
  serializedName: "LoggerUpdateContract",
  type: {
    name: "Composite",
    className: "LoggerUpdateContract",
    modelProperties: {
      loggerType: {
        serializedName: "properties.loggerType",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      credentials: {
        serializedName: "properties.credentials",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      isBuffered: {
        serializedName: "properties.isBuffered",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const LoggerContract: msRest.CompositeMapper = {
  serializedName: "LoggerContract",
  type: {
    name: "Composite",
    className: "LoggerContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      loggerType: {
        required: true,
        serializedName: "properties.loggerType",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        constraints: {
          MaxLength: 256
        },
        type: {
          name: "String"
        }
      },
      credentials: {
        required: true,
        serializedName: "properties.credentials",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      isBuffered: {
        serializedName: "properties.isBuffered",
        type: {
          name: "Boolean"
        }
      },
      resourceId: {
        serializedName: "properties.resourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PropertyValueContract: msRest.CompositeMapper = {
  serializedName: "PropertyValueContract",
  type: {
    name: "Composite",
    className: "PropertyValueContract",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NamedValueEntityBaseParameters: msRest.CompositeMapper = {
  serializedName: "NamedValueEntityBaseParameters",
  type: {
    name: "Composite",
    className: "NamedValueEntityBaseParameters",
    modelProperties: {
      tags: {
        serializedName: "tags",
        constraints: {
          MaxItems: 32
        },
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      secret: {
        serializedName: "secret",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const NamedValueContract: msRest.CompositeMapper = {
  serializedName: "NamedValueContract",
  type: {
    name: "Composite",
    className: "NamedValueContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "properties.tags",
        constraints: {
          MaxItems: 32
        },
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      secret: {
        serializedName: "properties.secret",
        type: {
          name: "Boolean"
        }
      },
      displayName: {
        required: true,
        serializedName: "properties.displayName",
        constraints: {
          MaxLength: 256,
          MinLength: 1,
          Pattern: /^[A-Za-z0-9-._]+$/
        },
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "properties.value",
        constraints: {
          MaxLength: 4096,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NamedValueUpdateParameters: msRest.CompositeMapper = {
  serializedName: "NamedValueUpdateParameters",
  type: {
    name: "Composite",
    className: "NamedValueUpdateParameters",
    modelProperties: {
      tags: {
        serializedName: "properties.tags",
        constraints: {
          MaxItems: 32
        },
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      secret: {
        serializedName: "properties.secret",
        type: {
          name: "Boolean"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        constraints: {
          MaxLength: 256,
          MinLength: 1,
          Pattern: /^[A-Za-z0-9-._]+$/
        },
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "properties.value",
        constraints: {
          MaxLength: 4096,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NamedValueCreateContract: msRest.CompositeMapper = {
  serializedName: "NamedValueCreateContract",
  type: {
    name: "Composite",
    className: "NamedValueCreateContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "properties.tags",
        constraints: {
          MaxItems: 32
        },
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      secret: {
        serializedName: "properties.secret",
        type: {
          name: "Boolean"
        }
      },
      displayName: {
        required: true,
        serializedName: "properties.displayName",
        constraints: {
          MaxLength: 256,
          MinLength: 1,
          Pattern: /^[A-Za-z0-9-._]+$/
        },
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "properties.value",
        constraints: {
          MaxLength: 4096,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConnectivityStatusContract: msRest.CompositeMapper = {
  serializedName: "ConnectivityStatusContract",
  type: {
    name: "Composite",
    className: "ConnectivityStatusContract",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "String"
        }
      },
      lastUpdated: {
        required: true,
        serializedName: "lastUpdated",
        type: {
          name: "DateTime"
        }
      },
      lastStatusChange: {
        required: true,
        serializedName: "lastStatusChange",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const NetworkStatusContract: msRest.CompositeMapper = {
  serializedName: "NetworkStatusContract",
  type: {
    name: "Composite",
    className: "NetworkStatusContract",
    modelProperties: {
      dnsServers: {
        required: true,
        serializedName: "dnsServers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      connectivityStatus: {
        required: true,
        serializedName: "connectivityStatus",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ConnectivityStatusContract"
            }
          }
        }
      }
    }
  }
};

export const NetworkStatusContractByLocation: msRest.CompositeMapper = {
  serializedName: "NetworkStatusContractByLocation",
  type: {
    name: "Composite",
    className: "NetworkStatusContractByLocation",
    modelProperties: {
      location: {
        serializedName: "location",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      networkStatus: {
        serializedName: "networkStatus",
        type: {
          name: "Composite",
          className: "NetworkStatusContract"
        }
      }
    }
  }
};

export const RecipientEmailContract: msRest.CompositeMapper = {
  serializedName: "RecipientEmailContract",
  type: {
    name: "Composite",
    className: "RecipientEmailContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      email: {
        serializedName: "properties.email",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RecipientEmailCollection: msRest.CompositeMapper = {
  serializedName: "RecipientEmailCollection",
  type: {
    name: "Composite",
    className: "RecipientEmailCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RecipientEmailContract"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RecipientUserContract: msRest.CompositeMapper = {
  serializedName: "RecipientUserContract",
  type: {
    name: "Composite",
    className: "RecipientUserContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      userId: {
        serializedName: "properties.userId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RecipientUserCollection: msRest.CompositeMapper = {
  serializedName: "RecipientUserCollection",
  type: {
    name: "Composite",
    className: "RecipientUserCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RecipientUserContract"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RecipientsContractProperties: msRest.CompositeMapper = {
  serializedName: "RecipientsContractProperties",
  type: {
    name: "Composite",
    className: "RecipientsContractProperties",
    modelProperties: {
      emails: {
        serializedName: "emails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      users: {
        serializedName: "users",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const NotificationContract: msRest.CompositeMapper = {
  serializedName: "NotificationContract",
  type: {
    name: "Composite",
    className: "NotificationContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      title: {
        required: true,
        serializedName: "properties.title",
        constraints: {
          MaxLength: 1000,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      recipients: {
        serializedName: "properties.recipients",
        type: {
          name: "Composite",
          className: "RecipientsContractProperties"
        }
      }
    }
  }
};

export const OpenidConnectProviderUpdateContract: msRest.CompositeMapper = {
  serializedName: "OpenidConnectProviderUpdateContract",
  type: {
    name: "Composite",
    className: "OpenidConnectProviderUpdateContract",
    modelProperties: {
      displayName: {
        serializedName: "properties.displayName",
        constraints: {
          MaxLength: 50
        },
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      metadataEndpoint: {
        serializedName: "properties.metadataEndpoint",
        type: {
          name: "String"
        }
      },
      clientId: {
        serializedName: "properties.clientId",
        type: {
          name: "String"
        }
      },
      clientSecret: {
        serializedName: "properties.clientSecret",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OpenidConnectProviderContract: msRest.CompositeMapper = {
  serializedName: "OpenidConnectProviderContract",
  type: {
    name: "Composite",
    className: "OpenidConnectProviderContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      displayName: {
        required: true,
        serializedName: "properties.displayName",
        constraints: {
          MaxLength: 50
        },
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      metadataEndpoint: {
        required: true,
        serializedName: "properties.metadataEndpoint",
        type: {
          name: "String"
        }
      },
      clientId: {
        required: true,
        serializedName: "properties.clientId",
        type: {
          name: "String"
        }
      },
      clientSecret: {
        serializedName: "properties.clientSecret",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PolicyDescriptionContract: msRest.CompositeMapper = {
  serializedName: "PolicyDescriptionContract",
  type: {
    name: "Composite",
    className: "PolicyDescriptionContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      description: {
        readOnly: true,
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      scope: {
        readOnly: true,
        serializedName: "properties.scope",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PolicyDescriptionCollection: msRest.CompositeMapper = {
  serializedName: "PolicyDescriptionCollection",
  type: {
    name: "Composite",
    className: "PolicyDescriptionCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PolicyDescriptionContract"
            }
          }
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PortalSettingValidationKeyContract: msRest.CompositeMapper = {
  serializedName: "PortalSettingValidationKeyContract",
  type: {
    name: "Composite",
    className: "PortalSettingValidationKeyContract",
    modelProperties: {
      validationKey: {
        serializedName: "validationKey",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegistrationDelegationSettingsProperties: msRest.CompositeMapper = {
  serializedName: "RegistrationDelegationSettingsProperties",
  type: {
    name: "Composite",
    className: "RegistrationDelegationSettingsProperties",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const SubscriptionsDelegationSettingsProperties: msRest.CompositeMapper = {
  serializedName: "SubscriptionsDelegationSettingsProperties",
  type: {
    name: "Composite",
    className: "SubscriptionsDelegationSettingsProperties",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PortalDelegationSettings: msRest.CompositeMapper = {
  serializedName: "PortalDelegationSettings",
  type: {
    name: "Composite",
    className: "PortalDelegationSettings",
    modelProperties: {
      ...Resource.type.modelProperties,
      url: {
        serializedName: "properties.url",
        type: {
          name: "String"
        }
      },
      validationKey: {
        serializedName: "properties.validationKey",
        type: {
          name: "String"
        }
      },
      subscriptions: {
        serializedName: "properties.subscriptions",
        type: {
          name: "Composite",
          className: "SubscriptionsDelegationSettingsProperties"
        }
      },
      userRegistration: {
        serializedName: "properties.userRegistration",
        type: {
          name: "Composite",
          className: "RegistrationDelegationSettingsProperties"
        }
      }
    }
  }
};

export const TermsOfServiceProperties: msRest.CompositeMapper = {
  serializedName: "TermsOfServiceProperties",
  type: {
    name: "Composite",
    className: "TermsOfServiceProperties",
    modelProperties: {
      text: {
        serializedName: "text",
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      consentRequired: {
        serializedName: "consentRequired",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PortalSignupSettings: msRest.CompositeMapper = {
  serializedName: "PortalSignupSettings",
  type: {
    name: "Composite",
    className: "PortalSignupSettings",
    modelProperties: {
      ...Resource.type.modelProperties,
      enabled: {
        serializedName: "properties.enabled",
        type: {
          name: "Boolean"
        }
      },
      termsOfService: {
        serializedName: "properties.termsOfService",
        type: {
          name: "Composite",
          className: "TermsOfServiceProperties"
        }
      }
    }
  }
};

export const PortalSigninSettings: msRest.CompositeMapper = {
  serializedName: "PortalSigninSettings",
  type: {
    name: "Composite",
    className: "PortalSigninSettings",
    modelProperties: {
      ...Resource.type.modelProperties,
      enabled: {
        serializedName: "properties.enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const SubscriptionContract: msRest.CompositeMapper = {
  serializedName: "SubscriptionContract",
  type: {
    name: "Composite",
    className: "SubscriptionContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      ownerId: {
        serializedName: "properties.ownerId",
        type: {
          name: "String"
        }
      },
      scope: {
        required: true,
        serializedName: "properties.scope",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        constraints: {
          MaxLength: 100,
          MinLength: 0
        },
        type: {
          name: "String"
        }
      },
      state: {
        required: true,
        serializedName: "properties.state",
        type: {
          name: "Enum",
          allowedValues: [
            "suspended",
            "active",
            "expired",
            "submitted",
            "rejected",
            "cancelled"
          ]
        }
      },
      createdDate: {
        readOnly: true,
        serializedName: "properties.createdDate",
        type: {
          name: "DateTime"
        }
      },
      startDate: {
        serializedName: "properties.startDate",
        type: {
          name: "DateTime"
        }
      },
      expirationDate: {
        serializedName: "properties.expirationDate",
        type: {
          name: "DateTime"
        }
      },
      endDate: {
        serializedName: "properties.endDate",
        type: {
          name: "DateTime"
        }
      },
      notificationDate: {
        serializedName: "properties.notificationDate",
        type: {
          name: "DateTime"
        }
      },
      primaryKey: {
        serializedName: "properties.primaryKey",
        constraints: {
          MaxLength: 256,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      secondaryKey: {
        serializedName: "properties.secondaryKey",
        constraints: {
          MaxLength: 256,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      stateComment: {
        serializedName: "properties.stateComment",
        type: {
          name: "String"
        }
      },
      allowTracing: {
        serializedName: "properties.allowTracing",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ProductUpdateParameters: msRest.CompositeMapper = {
  serializedName: "ProductUpdateParameters",
  type: {
    name: "Composite",
    className: "ProductUpdateParameters",
    modelProperties: {
      description: {
        serializedName: "properties.description",
        constraints: {
          MaxLength: 1000,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      terms: {
        serializedName: "properties.terms",
        type: {
          name: "String"
        }
      },
      subscriptionRequired: {
        serializedName: "properties.subscriptionRequired",
        type: {
          name: "Boolean"
        }
      },
      approvalRequired: {
        serializedName: "properties.approvalRequired",
        type: {
          name: "Boolean"
        }
      },
      subscriptionsLimit: {
        serializedName: "properties.subscriptionsLimit",
        type: {
          name: "Number"
        }
      },
      state: {
        serializedName: "properties.state",
        type: {
          name: "Enum",
          allowedValues: [
            "notPublished",
            "published"
          ]
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        constraints: {
          MaxLength: 300,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QuotaCounterValueContractProperties: msRest.CompositeMapper = {
  serializedName: "QuotaCounterValueContractProperties",
  type: {
    name: "Composite",
    className: "QuotaCounterValueContractProperties",
    modelProperties: {
      callsCount: {
        serializedName: "callsCount",
        type: {
          name: "Number"
        }
      },
      kbTransferred: {
        serializedName: "kbTransferred",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const QuotaCounterContract: msRest.CompositeMapper = {
  serializedName: "QuotaCounterContract",
  type: {
    name: "Composite",
    className: "QuotaCounterContract",
    modelProperties: {
      counterKey: {
        required: true,
        serializedName: "counterKey",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      periodKey: {
        required: true,
        serializedName: "periodKey",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      periodStartTime: {
        required: true,
        serializedName: "periodStartTime",
        type: {
          name: "DateTime"
        }
      },
      periodEndTime: {
        required: true,
        serializedName: "periodEndTime",
        type: {
          name: "DateTime"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Composite",
          className: "QuotaCounterValueContractProperties"
        }
      }
    }
  }
};

export const QuotaCounterCollection: msRest.CompositeMapper = {
  serializedName: "QuotaCounterCollection",
  type: {
    name: "Composite",
    className: "QuotaCounterCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "QuotaCounterContract"
            }
          }
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RequestReportRecordContract: msRest.CompositeMapper = {
  serializedName: "RequestReportRecordContract",
  type: {
    name: "Composite",
    className: "RequestReportRecordContract",
    modelProperties: {
      apiId: {
        serializedName: "apiId",
        type: {
          name: "String"
        }
      },
      operationId: {
        serializedName: "operationId",
        type: {
          name: "String"
        }
      },
      productId: {
        readOnly: true,
        serializedName: "productId",
        type: {
          name: "String"
        }
      },
      userId: {
        readOnly: true,
        serializedName: "userId",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      ipAddress: {
        serializedName: "ipAddress",
        type: {
          name: "String"
        }
      },
      backendResponseCode: {
        serializedName: "backendResponseCode",
        type: {
          name: "String"
        }
      },
      responseCode: {
        serializedName: "responseCode",
        type: {
          name: "Number"
        }
      },
      responseSize: {
        serializedName: "responseSize",
        type: {
          name: "Number"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      cache: {
        serializedName: "cache",
        type: {
          name: "String"
        }
      },
      apiTime: {
        serializedName: "apiTime",
        type: {
          name: "Number"
        }
      },
      serviceTime: {
        serializedName: "serviceTime",
        type: {
          name: "Number"
        }
      },
      apiRegion: {
        serializedName: "apiRegion",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      requestSize: {
        serializedName: "requestSize",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ReportRecordContract: msRest.CompositeMapper = {
  serializedName: "ReportRecordContract",
  type: {
    name: "Composite",
    className: "ReportRecordContract",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      interval: {
        serializedName: "interval",
        type: {
          name: "String"
        }
      },
      country: {
        serializedName: "country",
        type: {
          name: "String"
        }
      },
      region: {
        serializedName: "region",
        type: {
          name: "String"
        }
      },
      zip: {
        serializedName: "zip",
        type: {
          name: "String"
        }
      },
      userId: {
        readOnly: true,
        serializedName: "userId",
        type: {
          name: "String"
        }
      },
      productId: {
        readOnly: true,
        serializedName: "productId",
        type: {
          name: "String"
        }
      },
      apiId: {
        serializedName: "apiId",
        type: {
          name: "String"
        }
      },
      operationId: {
        serializedName: "operationId",
        type: {
          name: "String"
        }
      },
      apiRegion: {
        serializedName: "apiRegion",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      callCountSuccess: {
        serializedName: "callCountSuccess",
        type: {
          name: "Number"
        }
      },
      callCountBlocked: {
        serializedName: "callCountBlocked",
        type: {
          name: "Number"
        }
      },
      callCountFailed: {
        serializedName: "callCountFailed",
        type: {
          name: "Number"
        }
      },
      callCountOther: {
        serializedName: "callCountOther",
        type: {
          name: "Number"
        }
      },
      callCountTotal: {
        serializedName: "callCountTotal",
        type: {
          name: "Number"
        }
      },
      bandwidth: {
        serializedName: "bandwidth",
        type: {
          name: "Number"
        }
      },
      cacheHitCount: {
        serializedName: "cacheHitCount",
        type: {
          name: "Number"
        }
      },
      cacheMissCount: {
        serializedName: "cacheMissCount",
        type: {
          name: "Number"
        }
      },
      apiTimeAvg: {
        serializedName: "apiTimeAvg",
        type: {
          name: "Number"
        }
      },
      apiTimeMin: {
        serializedName: "apiTimeMin",
        type: {
          name: "Number"
        }
      },
      apiTimeMax: {
        serializedName: "apiTimeMax",
        type: {
          name: "Number"
        }
      },
      serviceTimeAvg: {
        serializedName: "serviceTimeAvg",
        type: {
          name: "Number"
        }
      },
      serviceTimeMin: {
        serializedName: "serviceTimeMin",
        type: {
          name: "Number"
        }
      },
      serviceTimeMax: {
        serializedName: "serviceTimeMax",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const SubscriptionKeysContract: msRest.CompositeMapper = {
  serializedName: "SubscriptionKeysContract",
  type: {
    name: "Composite",
    className: "SubscriptionKeysContract",
    modelProperties: {
      primaryKey: {
        serializedName: "primaryKey",
        constraints: {
          MaxLength: 256,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      secondaryKey: {
        serializedName: "secondaryKey",
        constraints: {
          MaxLength: 256,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubscriptionUpdateParameters: msRest.CompositeMapper = {
  serializedName: "SubscriptionUpdateParameters",
  type: {
    name: "Composite",
    className: "SubscriptionUpdateParameters",
    modelProperties: {
      ownerId: {
        serializedName: "properties.ownerId",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "properties.scope",
        type: {
          name: "String"
        }
      },
      expirationDate: {
        serializedName: "properties.expirationDate",
        type: {
          name: "DateTime"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      primaryKey: {
        serializedName: "properties.primaryKey",
        constraints: {
          MaxLength: 256,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      secondaryKey: {
        serializedName: "properties.secondaryKey",
        constraints: {
          MaxLength: 256,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "properties.state",
        type: {
          name: "Enum",
          allowedValues: [
            "suspended",
            "active",
            "expired",
            "submitted",
            "rejected",
            "cancelled"
          ]
        }
      },
      stateComment: {
        serializedName: "properties.stateComment",
        type: {
          name: "String"
        }
      },
      allowTracing: {
        serializedName: "properties.allowTracing",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const SubscriptionCreateParameters: msRest.CompositeMapper = {
  serializedName: "SubscriptionCreateParameters",
  type: {
    name: "Composite",
    className: "SubscriptionCreateParameters",
    modelProperties: {
      ownerId: {
        serializedName: "properties.ownerId",
        type: {
          name: "String"
        }
      },
      scope: {
        required: true,
        serializedName: "properties.scope",
        type: {
          name: "String"
        }
      },
      displayName: {
        required: true,
        serializedName: "properties.displayName",
        constraints: {
          MaxLength: 100,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      primaryKey: {
        serializedName: "properties.primaryKey",
        constraints: {
          MaxLength: 256,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      secondaryKey: {
        serializedName: "properties.secondaryKey",
        constraints: {
          MaxLength: 256,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "properties.state",
        type: {
          name: "Enum",
          allowedValues: [
            "suspended",
            "active",
            "expired",
            "submitted",
            "rejected",
            "cancelled"
          ]
        }
      },
      allowTracing: {
        serializedName: "properties.allowTracing",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const TagCreateUpdateParameters: msRest.CompositeMapper = {
  serializedName: "TagCreateUpdateParameters",
  type: {
    name: "Composite",
    className: "TagCreateUpdateParameters",
    modelProperties: {
      displayName: {
        required: true,
        serializedName: "properties.displayName",
        constraints: {
          MaxLength: 160,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TenantConfigurationSyncStateContract: msRest.CompositeMapper = {
  serializedName: "TenantConfigurationSyncStateContract",
  type: {
    name: "Composite",
    className: "TenantConfigurationSyncStateContract",
    modelProperties: {
      branch: {
        serializedName: "branch",
        type: {
          name: "String"
        }
      },
      commitId: {
        serializedName: "commitId",
        type: {
          name: "String"
        }
      },
      isExport: {
        serializedName: "isExport",
        type: {
          name: "Boolean"
        }
      },
      isSynced: {
        serializedName: "isSynced",
        type: {
          name: "Boolean"
        }
      },
      isGitEnabled: {
        serializedName: "isGitEnabled",
        type: {
          name: "Boolean"
        }
      },
      syncDate: {
        serializedName: "syncDate",
        type: {
          name: "DateTime"
        }
      },
      configurationChangeDate: {
        serializedName: "configurationChangeDate",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const OperationResultLogItemContract: msRest.CompositeMapper = {
  serializedName: "OperationResultLogItemContract",
  type: {
    name: "Composite",
    className: "OperationResultLogItemContract",
    modelProperties: {
      objectType: {
        serializedName: "objectType",
        type: {
          name: "String"
        }
      },
      action: {
        serializedName: "action",
        type: {
          name: "String"
        }
      },
      objectKey: {
        serializedName: "objectKey",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationResultContract: msRest.CompositeMapper = {
  serializedName: "OperationResultContract",
  type: {
    name: "Composite",
    className: "OperationResultContract",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Enum",
          allowedValues: [
            "Started",
            "InProgress",
            "Succeeded",
            "Failed"
          ]
        }
      },
      started: {
        serializedName: "started",
        type: {
          name: "DateTime"
        }
      },
      updated: {
        serializedName: "updated",
        type: {
          name: "DateTime"
        }
      },
      resultInfo: {
        serializedName: "resultInfo",
        type: {
          name: "String"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorResponseBody"
        }
      },
      actionLog: {
        readOnly: true,
        serializedName: "actionLog",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationResultLogItemContract"
            }
          }
        }
      }
    }
  }
};

export const DeployConfigurationParameters: msRest.CompositeMapper = {
  serializedName: "DeployConfigurationParameters",
  type: {
    name: "Composite",
    className: "DeployConfigurationParameters",
    modelProperties: {
      branch: {
        required: true,
        serializedName: "properties.branch",
        type: {
          name: "String"
        }
      },
      force: {
        serializedName: "properties.force",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const SaveConfigurationParameter: msRest.CompositeMapper = {
  serializedName: "SaveConfigurationParameter",
  type: {
    name: "Composite",
    className: "SaveConfigurationParameter",
    modelProperties: {
      branch: {
        required: true,
        serializedName: "properties.branch",
        type: {
          name: "String"
        }
      },
      force: {
        serializedName: "properties.force",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AccessInformationContract: msRest.CompositeMapper = {
  serializedName: "AccessInformationContract",
  type: {
    name: "Composite",
    className: "AccessInformationContract",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      primaryKey: {
        serializedName: "primaryKey",
        type: {
          name: "String"
        }
      },
      secondaryKey: {
        serializedName: "secondaryKey",
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AccessInformationUpdateParameters: msRest.CompositeMapper = {
  serializedName: "AccessInformationUpdateParameters",
  type: {
    name: "Composite",
    className: "AccessInformationUpdateParameters",
    modelProperties: {
      enabled: {
        serializedName: "properties.enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const UserTokenResult: msRest.CompositeMapper = {
  serializedName: "UserTokenResult",
  type: {
    name: "Composite",
    className: "UserTokenResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserTokenParameters: msRest.CompositeMapper = {
  serializedName: "UserTokenParameters",
  type: {
    name: "Composite",
    className: "UserTokenParameters",
    modelProperties: {
      keyType: {
        required: true,
        serializedName: "properties.keyType",
        defaultValue: 'primary',
        type: {
          name: "Enum",
          allowedValues: [
            "primary",
            "secondary"
          ]
        }
      },
      expiry: {
        required: true,
        serializedName: "properties.expiry",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const GenerateSsoUrlResult: msRest.CompositeMapper = {
  serializedName: "GenerateSsoUrlResult",
  type: {
    name: "Composite",
    className: "GenerateSsoUrlResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserUpdateParameters: msRest.CompositeMapper = {
  serializedName: "UserUpdateParameters",
  type: {
    name: "Composite",
    className: "UserUpdateParameters",
    modelProperties: {
      state: {
        serializedName: "properties.state",
        defaultValue: 'active',
        type: {
          name: "String"
        }
      },
      note: {
        serializedName: "properties.note",
        type: {
          name: "String"
        }
      },
      identities: {
        serializedName: "properties.identities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UserIdentityContract"
            }
          }
        }
      },
      email: {
        serializedName: "properties.email",
        constraints: {
          MaxLength: 254,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "properties.password",
        type: {
          name: "String"
        }
      },
      firstName: {
        serializedName: "properties.firstName",
        constraints: {
          MaxLength: 100,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      lastName: {
        serializedName: "properties.lastName",
        constraints: {
          MaxLength: 100,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserCreateParameters: msRest.CompositeMapper = {
  serializedName: "UserCreateParameters",
  type: {
    name: "Composite",
    className: "UserCreateParameters",
    modelProperties: {
      state: {
        serializedName: "properties.state",
        defaultValue: 'active',
        type: {
          name: "String"
        }
      },
      note: {
        serializedName: "properties.note",
        type: {
          name: "String"
        }
      },
      identities: {
        serializedName: "properties.identities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UserIdentityContract"
            }
          }
        }
      },
      email: {
        required: true,
        serializedName: "properties.email",
        constraints: {
          MaxLength: 254,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      firstName: {
        required: true,
        serializedName: "properties.firstName",
        constraints: {
          MaxLength: 100,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      lastName: {
        required: true,
        serializedName: "properties.lastName",
        constraints: {
          MaxLength: 100,
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "properties.password",
        type: {
          name: "String"
        }
      },
      appType: {
        serializedName: "properties.appType",
        type: {
          name: "String"
        }
      },
      confirmation: {
        serializedName: "properties.confirmation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiRevisionInfoContract: msRest.CompositeMapper = {
  serializedName: "ApiRevisionInfoContract",
  type: {
    name: "Composite",
    className: "ApiRevisionInfoContract",
    modelProperties: {
      sourceApiId: {
        serializedName: "sourceApiId",
        type: {
          name: "String"
        }
      },
      apiVersionName: {
        serializedName: "apiVersionName",
        constraints: {
          MaxLength: 100
        },
        type: {
          name: "String"
        }
      },
      apiRevisionDescription: {
        serializedName: "apiRevisionDescription",
        constraints: {
          MaxLength: 256
        },
        type: {
          name: "String"
        }
      },
      apiVersionSet: {
        serializedName: "apiVersionSet",
        type: {
          name: "Composite",
          className: "ApiVersionSetContractDetails"
        }
      }
    }
  }
};

export const QuotaCounterValueContract: msRest.CompositeMapper = {
  serializedName: "QuotaCounterValueContract",
  type: {
    name: "Composite",
    className: "QuotaCounterValueContract",
    modelProperties: {
      callsCount: {
        serializedName: "value.callsCount",
        type: {
          name: "Number"
        }
      },
      kbTransferred: {
        serializedName: "value.kbTransferred",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ApiGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "api-getentitytag-headers",
  type: {
    name: "Composite",
    className: "ApiGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiGetHeaders: msRest.CompositeMapper = {
  serializedName: "api-get-headers",
  type: {
    name: "Composite",
    className: "ApiGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "api-createorupdate-headers",
  type: {
    name: "Composite",
    className: "ApiCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiReleaseGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "apirelease-getentitytag-headers",
  type: {
    name: "Composite",
    className: "ApiReleaseGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiReleaseGetHeaders: msRest.CompositeMapper = {
  serializedName: "apirelease-get-headers",
  type: {
    name: "Composite",
    className: "ApiReleaseGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiReleaseCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "apirelease-createorupdate-headers",
  type: {
    name: "Composite",
    className: "ApiReleaseCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiOperationGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "apioperation-getentitytag-headers",
  type: {
    name: "Composite",
    className: "ApiOperationGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiOperationGetHeaders: msRest.CompositeMapper = {
  serializedName: "apioperation-get-headers",
  type: {
    name: "Composite",
    className: "ApiOperationGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiOperationCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "apioperation-createorupdate-headers",
  type: {
    name: "Composite",
    className: "ApiOperationCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiOperationPolicyGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "apioperationpolicy-getentitytag-headers",
  type: {
    name: "Composite",
    className: "ApiOperationPolicyGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiOperationPolicyGetHeaders: msRest.CompositeMapper = {
  serializedName: "apioperationpolicy-get-headers",
  type: {
    name: "Composite",
    className: "ApiOperationPolicyGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiOperationPolicyCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "apioperationpolicy-createorupdate-headers",
  type: {
    name: "Composite",
    className: "ApiOperationPolicyCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TagGetEntityStateByOperationHeaders: msRest.CompositeMapper = {
  serializedName: "tag-getentitystatebyoperation-headers",
  type: {
    name: "Composite",
    className: "TagGetEntityStateByOperationHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TagGetByOperationHeaders: msRest.CompositeMapper = {
  serializedName: "tag-getbyoperation-headers",
  type: {
    name: "Composite",
    className: "TagGetByOperationHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiPolicyGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "apipolicy-getentitytag-headers",
  type: {
    name: "Composite",
    className: "ApiPolicyGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiPolicyGetHeaders: msRest.CompositeMapper = {
  serializedName: "apipolicy-get-headers",
  type: {
    name: "Composite",
    className: "ApiPolicyGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiPolicyCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "apipolicy-createorupdate-headers",
  type: {
    name: "Composite",
    className: "ApiPolicyCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiSchemaGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "apischema-getentitytag-headers",
  type: {
    name: "Composite",
    className: "ApiSchemaGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiSchemaGetHeaders: msRest.CompositeMapper = {
  serializedName: "apischema-get-headers",
  type: {
    name: "Composite",
    className: "ApiSchemaGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiSchemaCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "apischema-createorupdate-headers",
  type: {
    name: "Composite",
    className: "ApiSchemaCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiDiagnosticGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "apidiagnostic-getentitytag-headers",
  type: {
    name: "Composite",
    className: "ApiDiagnosticGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiDiagnosticGetHeaders: msRest.CompositeMapper = {
  serializedName: "apidiagnostic-get-headers",
  type: {
    name: "Composite",
    className: "ApiDiagnosticGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiDiagnosticCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "apidiagnostic-createorupdate-headers",
  type: {
    name: "Composite",
    className: "ApiDiagnosticCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiIssueGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "apiissue-getentitytag-headers",
  type: {
    name: "Composite",
    className: "ApiIssueGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiIssueGetHeaders: msRest.CompositeMapper = {
  serializedName: "apiissue-get-headers",
  type: {
    name: "Composite",
    className: "ApiIssueGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiIssueCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "apiissue-createorupdate-headers",
  type: {
    name: "Composite",
    className: "ApiIssueCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiIssueCommentGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "apiissuecomment-getentitytag-headers",
  type: {
    name: "Composite",
    className: "ApiIssueCommentGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiIssueCommentGetHeaders: msRest.CompositeMapper = {
  serializedName: "apiissuecomment-get-headers",
  type: {
    name: "Composite",
    className: "ApiIssueCommentGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiIssueCommentCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "apiissuecomment-createorupdate-headers",
  type: {
    name: "Composite",
    className: "ApiIssueCommentCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiIssueAttachmentGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "apiissueattachment-getentitytag-headers",
  type: {
    name: "Composite",
    className: "ApiIssueAttachmentGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiIssueAttachmentGetHeaders: msRest.CompositeMapper = {
  serializedName: "apiissueattachment-get-headers",
  type: {
    name: "Composite",
    className: "ApiIssueAttachmentGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiIssueAttachmentCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "apiissueattachment-createorupdate-headers",
  type: {
    name: "Composite",
    className: "ApiIssueAttachmentCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiTagDescriptionGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "apitagdescription-getentitytag-headers",
  type: {
    name: "Composite",
    className: "ApiTagDescriptionGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiTagDescriptionGetHeaders: msRest.CompositeMapper = {
  serializedName: "apitagdescription-get-headers",
  type: {
    name: "Composite",
    className: "ApiTagDescriptionGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiTagDescriptionCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "apitagdescription-createorupdate-headers",
  type: {
    name: "Composite",
    className: "ApiTagDescriptionCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TagGetEntityStateByApiHeaders: msRest.CompositeMapper = {
  serializedName: "tag-getentitystatebyapi-headers",
  type: {
    name: "Composite",
    className: "TagGetEntityStateByApiHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TagGetByApiHeaders: msRest.CompositeMapper = {
  serializedName: "tag-getbyapi-headers",
  type: {
    name: "Composite",
    className: "TagGetByApiHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TagAssignToApiHeaders: msRest.CompositeMapper = {
  serializedName: "tag-assigntoapi-headers",
  type: {
    name: "Composite",
    className: "TagAssignToApiHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiVersionSetGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "apiversionset-getentitytag-headers",
  type: {
    name: "Composite",
    className: "ApiVersionSetGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiVersionSetGetHeaders: msRest.CompositeMapper = {
  serializedName: "apiversionset-get-headers",
  type: {
    name: "Composite",
    className: "ApiVersionSetGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiVersionSetCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "apiversionset-createorupdate-headers",
  type: {
    name: "Composite",
    className: "ApiVersionSetCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AuthorizationServerGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "authorizationserver-getentitytag-headers",
  type: {
    name: "Composite",
    className: "AuthorizationServerGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AuthorizationServerGetHeaders: msRest.CompositeMapper = {
  serializedName: "authorizationserver-get-headers",
  type: {
    name: "Composite",
    className: "AuthorizationServerGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AuthorizationServerCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "authorizationserver-createorupdate-headers",
  type: {
    name: "Composite",
    className: "AuthorizationServerCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BackendGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "backend-getentitytag-headers",
  type: {
    name: "Composite",
    className: "BackendGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BackendGetHeaders: msRest.CompositeMapper = {
  serializedName: "backend-get-headers",
  type: {
    name: "Composite",
    className: "BackendGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BackendCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "backend-createorupdate-headers",
  type: {
    name: "Composite",
    className: "BackendCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CacheGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "cache-getentitytag-headers",
  type: {
    name: "Composite",
    className: "CacheGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CacheGetHeaders: msRest.CompositeMapper = {
  serializedName: "cache-get-headers",
  type: {
    name: "Composite",
    className: "CacheGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CacheCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "cache-createorupdate-headers",
  type: {
    name: "Composite",
    className: "CacheCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CertificateGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "certificate-getentitytag-headers",
  type: {
    name: "Composite",
    className: "CertificateGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CertificateGetHeaders: msRest.CompositeMapper = {
  serializedName: "certificate-get-headers",
  type: {
    name: "Composite",
    className: "CertificateGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CertificateCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "certificate-createorupdate-headers",
  type: {
    name: "Composite",
    className: "CertificateCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiagnosticGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "diagnostic-getentitytag-headers",
  type: {
    name: "Composite",
    className: "DiagnosticGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiagnosticGetHeaders: msRest.CompositeMapper = {
  serializedName: "diagnostic-get-headers",
  type: {
    name: "Composite",
    className: "DiagnosticGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiagnosticCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "diagnostic-createorupdate-headers",
  type: {
    name: "Composite",
    className: "DiagnosticCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EmailTemplateGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "emailtemplate-getentitytag-headers",
  type: {
    name: "Composite",
    className: "EmailTemplateGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EmailTemplateGetHeaders: msRest.CompositeMapper = {
  serializedName: "emailtemplate-get-headers",
  type: {
    name: "Composite",
    className: "EmailTemplateGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GatewayGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "gateway-getentitytag-headers",
  type: {
    name: "Composite",
    className: "GatewayGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GatewayGetHeaders: msRest.CompositeMapper = {
  serializedName: "gateway-get-headers",
  type: {
    name: "Composite",
    className: "GatewayGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GatewayCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "gateway-createorupdate-headers",
  type: {
    name: "Composite",
    className: "GatewayCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GatewayListKeysHeaders: msRest.CompositeMapper = {
  serializedName: "gateway-listkeys-headers",
  type: {
    name: "Composite",
    className: "GatewayListKeysHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GatewayHostnameConfigurationGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "gatewayhostnameconfiguration-getentitytag-headers",
  type: {
    name: "Composite",
    className: "GatewayHostnameConfigurationGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GatewayHostnameConfigurationGetHeaders: msRest.CompositeMapper = {
  serializedName: "gatewayhostnameconfiguration-get-headers",
  type: {
    name: "Composite",
    className: "GatewayHostnameConfigurationGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GatewayHostnameConfigurationCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "gatewayhostnameconfiguration-createorupdate-headers",
  type: {
    name: "Composite",
    className: "GatewayHostnameConfigurationCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GatewayApiGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "gatewayapi-getentitytag-headers",
  type: {
    name: "Composite",
    className: "GatewayApiGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GroupGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "group-getentitytag-headers",
  type: {
    name: "Composite",
    className: "GroupGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GroupGetHeaders: msRest.CompositeMapper = {
  serializedName: "group-get-headers",
  type: {
    name: "Composite",
    className: "GroupGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GroupCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "group-createorupdate-headers",
  type: {
    name: "Composite",
    className: "GroupCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IdentityProviderGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "identityprovider-getentitytag-headers",
  type: {
    name: "Composite",
    className: "IdentityProviderGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IdentityProviderGetHeaders: msRest.CompositeMapper = {
  serializedName: "identityprovider-get-headers",
  type: {
    name: "Composite",
    className: "IdentityProviderGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IdentityProviderCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "identityprovider-createorupdate-headers",
  type: {
    name: "Composite",
    className: "IdentityProviderCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IssueGetHeaders: msRest.CompositeMapper = {
  serializedName: "issue-get-headers",
  type: {
    name: "Composite",
    className: "IssueGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LoggerGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "logger-getentitytag-headers",
  type: {
    name: "Composite",
    className: "LoggerGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LoggerGetHeaders: msRest.CompositeMapper = {
  serializedName: "logger-get-headers",
  type: {
    name: "Composite",
    className: "LoggerGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LoggerCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "logger-createorupdate-headers",
  type: {
    name: "Composite",
    className: "LoggerCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NamedValueGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "namedvalue-getentitytag-headers",
  type: {
    name: "Composite",
    className: "NamedValueGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NamedValueGetHeaders: msRest.CompositeMapper = {
  serializedName: "namedvalue-get-headers",
  type: {
    name: "Composite",
    className: "NamedValueGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NamedValueCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "namedvalue-createorupdate-headers",
  type: {
    name: "Composite",
    className: "NamedValueCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NamedValueUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "namedvalue-update-headers",
  type: {
    name: "Composite",
    className: "NamedValueUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OpenIdConnectProviderGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "openidconnectprovider-getentitytag-headers",
  type: {
    name: "Composite",
    className: "OpenIdConnectProviderGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OpenIdConnectProviderGetHeaders: msRest.CompositeMapper = {
  serializedName: "openidconnectprovider-get-headers",
  type: {
    name: "Composite",
    className: "OpenIdConnectProviderGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OpenIdConnectProviderCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "openidconnectprovider-createorupdate-headers",
  type: {
    name: "Composite",
    className: "OpenIdConnectProviderCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PolicyGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "policy-getentitytag-headers",
  type: {
    name: "Composite",
    className: "PolicyGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PolicyGetHeaders: msRest.CompositeMapper = {
  serializedName: "policy-get-headers",
  type: {
    name: "Composite",
    className: "PolicyGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PolicyCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "policy-createorupdate-headers",
  type: {
    name: "Composite",
    className: "PolicyCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SignInSettingsGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "signinsettings-getentitytag-headers",
  type: {
    name: "Composite",
    className: "SignInSettingsGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SignInSettingsGetHeaders: msRest.CompositeMapper = {
  serializedName: "signinsettings-get-headers",
  type: {
    name: "Composite",
    className: "SignInSettingsGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SignUpSettingsGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "signupsettings-getentitytag-headers",
  type: {
    name: "Composite",
    className: "SignUpSettingsGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SignUpSettingsGetHeaders: msRest.CompositeMapper = {
  serializedName: "signupsettings-get-headers",
  type: {
    name: "Composite",
    className: "SignUpSettingsGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DelegationSettingsGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "delegationsettings-getentitytag-headers",
  type: {
    name: "Composite",
    className: "DelegationSettingsGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DelegationSettingsGetHeaders: msRest.CompositeMapper = {
  serializedName: "delegationsettings-get-headers",
  type: {
    name: "Composite",
    className: "DelegationSettingsGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProductGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "product-getentitytag-headers",
  type: {
    name: "Composite",
    className: "ProductGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProductGetHeaders: msRest.CompositeMapper = {
  serializedName: "product-get-headers",
  type: {
    name: "Composite",
    className: "ProductGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProductCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "product-createorupdate-headers",
  type: {
    name: "Composite",
    className: "ProductCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProductPolicyGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "productpolicy-getentitytag-headers",
  type: {
    name: "Composite",
    className: "ProductPolicyGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProductPolicyGetHeaders: msRest.CompositeMapper = {
  serializedName: "productpolicy-get-headers",
  type: {
    name: "Composite",
    className: "ProductPolicyGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProductPolicyCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "productpolicy-createorupdate-headers",
  type: {
    name: "Composite",
    className: "ProductPolicyCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TagGetEntityStateByProductHeaders: msRest.CompositeMapper = {
  serializedName: "tag-getentitystatebyproduct-headers",
  type: {
    name: "Composite",
    className: "TagGetEntityStateByProductHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TagGetByProductHeaders: msRest.CompositeMapper = {
  serializedName: "tag-getbyproduct-headers",
  type: {
    name: "Composite",
    className: "TagGetByProductHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubscriptionGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "subscription-getentitytag-headers",
  type: {
    name: "Composite",
    className: "SubscriptionGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubscriptionGetHeaders: msRest.CompositeMapper = {
  serializedName: "subscription-get-headers",
  type: {
    name: "Composite",
    className: "SubscriptionGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubscriptionCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "subscription-createorupdate-headers",
  type: {
    name: "Composite",
    className: "SubscriptionCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TagGetEntityStateHeaders: msRest.CompositeMapper = {
  serializedName: "tag-getentitystate-headers",
  type: {
    name: "Composite",
    className: "TagGetEntityStateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TagGetHeaders: msRest.CompositeMapper = {
  serializedName: "tag-get-headers",
  type: {
    name: "Composite",
    className: "TagGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TagCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "tag-createorupdate-headers",
  type: {
    name: "Composite",
    className: "TagCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TenantAccessGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "tenantaccess-getentitytag-headers",
  type: {
    name: "Composite",
    className: "TenantAccessGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TenantAccessGetHeaders: msRest.CompositeMapper = {
  serializedName: "tenantaccess-get-headers",
  type: {
    name: "Composite",
    className: "TenantAccessGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TenantAccessListSecretsHeaders: msRest.CompositeMapper = {
  serializedName: "tenantaccess-listsecrets-headers",
  type: {
    name: "Composite",
    className: "TenantAccessListSecretsHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TenantAccessGitGetHeaders: msRest.CompositeMapper = {
  serializedName: "tenantaccessgit-get-headers",
  type: {
    name: "Composite",
    className: "TenantAccessGitGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TenantAccessGitListSecretsHeaders: msRest.CompositeMapper = {
  serializedName: "tenantaccessgit-listsecrets-headers",
  type: {
    name: "Composite",
    className: "TenantAccessGitListSecretsHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserGetEntityTagHeaders: msRest.CompositeMapper = {
  serializedName: "user-getentitytag-headers",
  type: {
    name: "Composite",
    className: "UserGetEntityTagHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserGetHeaders: msRest.CompositeMapper = {
  serializedName: "user-get-headers",
  type: {
    name: "Composite",
    className: "UserGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "user-createorupdate-headers",
  type: {
    name: "Composite",
    className: "UserCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiCollection: msRest.CompositeMapper = {
  serializedName: "ApiCollection",
  type: {
    name: "Composite",
    className: "ApiCollection",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApiContract"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TagResourceCollection: msRest.CompositeMapper = {
  serializedName: "TagResourceCollection",
  type: {
    name: "Composite",
    className: "TagResourceCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TagResourceContract"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiRevisionCollection: msRest.CompositeMapper = {
  serializedName: "ApiRevisionCollection",
  type: {
    name: "Composite",
    className: "ApiRevisionCollection",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApiRevisionContract"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiReleaseCollection: msRest.CompositeMapper = {
  serializedName: "ApiReleaseCollection",
  type: {
    name: "Composite",
    className: "ApiReleaseCollection",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApiReleaseContract"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationCollection: msRest.CompositeMapper = {
  serializedName: "OperationCollection",
  type: {
    name: "Composite",
    className: "OperationCollection",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationContract"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TagCollection: msRest.CompositeMapper = {
  serializedName: "TagCollection",
  type: {
    name: "Composite",
    className: "TagCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TagContract"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProductCollection: msRest.CompositeMapper = {
  serializedName: "ProductCollection",
  type: {
    name: "Composite",
    className: "ProductCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ProductContract"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SchemaCollection: msRest.CompositeMapper = {
  serializedName: "SchemaCollection",
  type: {
    name: "Composite",
    className: "SchemaCollection",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SchemaContract"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiagnosticCollection: msRest.CompositeMapper = {
  serializedName: "DiagnosticCollection",
  type: {
    name: "Composite",
    className: "DiagnosticCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DiagnosticContract"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IssueCollection: msRest.CompositeMapper = {
  serializedName: "IssueCollection",
  type: {
    name: "Composite",
    className: "IssueCollection",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IssueContract"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IssueCommentCollection: msRest.CompositeMapper = {
  serializedName: "IssueCommentCollection",
  type: {
    name: "Composite",
    className: "IssueCommentCollection",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IssueCommentContract"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IssueAttachmentCollection: msRest.CompositeMapper = {
  serializedName: "IssueAttachmentCollection",
  type: {
    name: "Composite",
    className: "IssueAttachmentCollection",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IssueAttachmentContract"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TagDescriptionCollection: msRest.CompositeMapper = {
  serializedName: "TagDescriptionCollection",
  type: {
    name: "Composite",
    className: "TagDescriptionCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TagDescriptionContract"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiVersionSetCollection: msRest.CompositeMapper = {
  serializedName: "ApiVersionSetCollection",
  type: {
    name: "Composite",
    className: "ApiVersionSetCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApiVersionSetContract"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AuthorizationServerCollection: msRest.CompositeMapper = {
  serializedName: "AuthorizationServerCollection",
  type: {
    name: "Composite",
    className: "AuthorizationServerCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AuthorizationServerContract"
            }
          }
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BackendCollection: msRest.CompositeMapper = {
  serializedName: "BackendCollection",
  type: {
    name: "Composite",
    className: "BackendCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BackendContract"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CacheCollection: msRest.CompositeMapper = {
  serializedName: "CacheCollection",
  type: {
    name: "Composite",
    className: "CacheCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CacheContract"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CertificateCollection: msRest.CompositeMapper = {
  serializedName: "CertificateCollection",
  type: {
    name: "Composite",
    className: "CertificateCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CertificateContract"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceSkuResults: msRest.CompositeMapper = {
  serializedName: "ResourceSkuResults",
  type: {
    name: "Composite",
    className: "ResourceSkuResults",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResourceSkuResult"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiManagementServiceListResult: msRest.CompositeMapper = {
  serializedName: "ApiManagementServiceListResult",
  type: {
    name: "Composite",
    className: "ApiManagementServiceListResult",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApiManagementServiceResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EmailTemplateCollection: msRest.CompositeMapper = {
  serializedName: "EmailTemplateCollection",
  type: {
    name: "Composite",
    className: "EmailTemplateCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EmailTemplateContract"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GatewayCollection: msRest.CompositeMapper = {
  serializedName: "GatewayCollection",
  type: {
    name: "Composite",
    className: "GatewayCollection",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GatewayContract"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GatewayHostnameConfigurationCollection: msRest.CompositeMapper = {
  serializedName: "GatewayHostnameConfigurationCollection",
  type: {
    name: "Composite",
    className: "GatewayHostnameConfigurationCollection",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GatewayHostnameConfigurationContract"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GroupCollection: msRest.CompositeMapper = {
  serializedName: "GroupCollection",
  type: {
    name: "Composite",
    className: "GroupCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GroupContract"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserCollection: msRest.CompositeMapper = {
  serializedName: "UserCollection",
  type: {
    name: "Composite",
    className: "UserCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UserContract"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IdentityProviderList: msRest.CompositeMapper = {
  serializedName: "IdentityProviderList",
  type: {
    name: "Composite",
    className: "IdentityProviderList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IdentityProviderContract"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LoggerCollection: msRest.CompositeMapper = {
  serializedName: "LoggerCollection",
  type: {
    name: "Composite",
    className: "LoggerCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LoggerContract"
            }
          }
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NamedValueCollection: msRest.CompositeMapper = {
  serializedName: "NamedValueCollection",
  type: {
    name: "Composite",
    className: "NamedValueCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NamedValueContract"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotificationCollection: msRest.CompositeMapper = {
  serializedName: "NotificationCollection",
  type: {
    name: "Composite",
    className: "NotificationCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NotificationContract"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OpenIdConnectProviderCollection: msRest.CompositeMapper = {
  serializedName: "OpenIdConnectProviderCollection",
  type: {
    name: "Composite",
    className: "OpenIdConnectProviderCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OpenidConnectProviderContract"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubscriptionCollection: msRest.CompositeMapper = {
  serializedName: "SubscriptionCollection",
  type: {
    name: "Composite",
    className: "SubscriptionCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubscriptionContract"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegionListResult: msRest.CompositeMapper = {
  serializedName: "RegionListResult",
  type: {
    name: "Composite",
    className: "RegionListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RegionContract"
            }
          }
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReportCollection: msRest.CompositeMapper = {
  serializedName: "ReportCollection",
  type: {
    name: "Composite",
    className: "ReportCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReportRecordContract"
            }
          }
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RequestReportCollection: msRest.CompositeMapper = {
  serializedName: "RequestReportCollection",
  type: {
    name: "Composite",
    className: "RequestReportCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RequestReportRecordContract"
            }
          }
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const UserIdentityCollection: msRest.CompositeMapper = {
  serializedName: "UserIdentityCollection",
  type: {
    name: "Composite",
    className: "UserIdentityCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UserIdentityContract"
            }
          }
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
