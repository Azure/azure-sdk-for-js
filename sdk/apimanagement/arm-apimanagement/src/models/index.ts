/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Error Field contract.
 */
export interface ErrorFieldContract {
  /**
   * Property level error code.
   */
  code?: string;
  /**
   * Human-readable representation of property-level error.
   */
  message?: string;
  /**
   * Property name.
   */
  target?: string;
}

/**
 * Error Body contract.
 */
export interface ErrorResponseBody {
  /**
   * Service-defined error code. This code serves as a sub-status for the HTTP error code specified
   * in the response.
   */
  code?: string;
  /**
   * Human-readable representation of the error.
   */
  message?: string;
  /**
   * The list of invalid fields send in request, in case of validation error.
   */
  details?: ErrorFieldContract[];
}

/**
 * Error Response.
 */
export interface ErrorResponse {
  /**
   * Service-defined error code. This code serves as a sub-status for the HTTP error code specified
   * in the response.
   */
  code?: string;
  /**
   * Human-readable representation of the error.
   */
  message?: string;
  /**
   * The list of invalid fields send in request, in case of validation error.
   */
  details?: ErrorFieldContract[];
}

/**
 * Region profile.
 */
export interface RegionContract {
  /**
   * Region name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * whether Region is the master region.
   */
  isMasterRegion?: boolean;
  /**
   * whether Region is deleted.
   */
  isDeleted?: boolean;
}

/**
 * The Resource definition.
 */
export interface Resource extends BaseResource {
  /**
   * Resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type for API Management resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * The object defining the schema of the exported Api Detail
 */
export interface ApiExportResultValue {
  /**
   * Link to the Storage Blob containing the result of the export operation. The Blob Uri is only
   * valid for 5 minutes.
   */
  link?: string;
}

/**
 * API Export result.
 */
export interface ApiExportResult {
  /**
   * ResourceId of the API which was exported.
   */
  id?: string;
  /**
   * Format in which the Api Details are exported to the Storage Blob with Sas Key valid for 5
   * minutes. Possible values include: 'Swagger', 'Wsdl', 'Wadl', 'OpenApi'
   */
  exportResultFormat?: ExportResultFormat;
  /**
   * The object defining the schema of the exported Api Detail
   */
  value?: ApiExportResultValue;
}

/**
 * Product Entity Base Parameters
 */
export interface ProductEntityBaseParameters {
  /**
   * Product description. May include HTML formatting tags.
   */
  description?: string;
  /**
   * Product terms of use. Developers trying to subscribe to the product will be presented and
   * required to accept these terms before they can complete the subscription process.
   */
  terms?: string;
  /**
   * Whether a product subscription is required for accessing APIs included in this product. If
   * true, the product is referred to as "protected" and a valid subscription key is required for a
   * request to an API included in the product to succeed. If false, the product is referred to as
   * "open" and requests to an API included in the product can be made without a subscription key.
   * If property is omitted when creating a new product it's value is assumed to be true.
   */
  subscriptionRequired?: boolean;
  /**
   * whether subscription approval is required. If false, new subscriptions will be approved
   * automatically enabling developers to call the product’s APIs immediately after subscribing. If
   * true, administrators must manually approve the subscription before the developer can any of
   * the product’s APIs. Can be present only if subscriptionRequired property is present and has a
   * value of false.
   */
  approvalRequired?: boolean;
  /**
   * Whether the number of subscriptions a user can have to this product at the same time. Set to
   * null or omit to allow unlimited per user subscriptions. Can be present only if
   * subscriptionRequired property is present and has a value of false.
   */
  subscriptionsLimit?: number;
  /**
   * whether product is published or not. Published products are discoverable by users of developer
   * portal. Non published products are visible only to administrators. Default state of Product is
   * notPublished. Possible values include: 'notPublished', 'published'
   */
  state?: ProductState;
}

/**
 * Product profile.
 */
export interface ProductTagResourceContractProperties extends ProductEntityBaseParameters {
  /**
   * Identifier of the product in the form of /products/{productId}
   */
  id?: string;
  /**
   * Product name.
   */
  name: string;
}

/**
 * Operation Entity contract Properties.
 */
export interface OperationTagResourceContractProperties {
  /**
   * Identifier of the operation in form /operations/{operationId}.
   */
  id?: string;
  /**
   * Operation name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Api Name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly apiName?: string;
  /**
   * Api Revision.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly apiRevision?: string;
  /**
   * Api Version.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly apiVersion?: string;
  /**
   * Operation Description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by
   * only them.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly method?: string;
  /**
   * Relative URL template identifying the target resource for this operation. May include
   * parameters. Example: /customers/{cid}/orders/{oid}/?date={date}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly urlTemplate?: string;
}

/**
 * Subscription key parameter names details.
 */
export interface SubscriptionKeyParameterNamesContract {
  /**
   * Subscription key header name.
   */
  header?: string;
  /**
   * Subscription key query string parameter name.
   */
  query?: string;
}

/**
 * API OAuth2 Authentication settings details.
 */
export interface OpenIdAuthenticationSettingsContract {
  /**
   * OAuth authorization server identifier.
   */
  openidProviderId?: string;
  /**
   * How to send token to the server.
   */
  bearerTokenSendingMethods?: BearerTokenSendingMethods[];
}

/**
 * API OAuth2 Authentication settings details.
 */
export interface OAuth2AuthenticationSettingsContract {
  /**
   * OAuth authorization server identifier.
   */
  authorizationServerId?: string;
  /**
   * operations scope.
   */
  scope?: string;
}

/**
 * API Authentication Settings.
 */
export interface AuthenticationSettingsContract {
  /**
   * OAuth2 Authentication settings
   */
  oAuth2?: OAuth2AuthenticationSettingsContract;
  /**
   * OpenID Connect Authentication Settings
   */
  openid?: OpenIdAuthenticationSettingsContract;
}

/**
 * An API Version Set contains the common configuration for a set of API Versions relating
 */
export interface ApiVersionSetContractDetails {
  /**
   * Identifier for existing API Version Set. Omit this value to create a new Version Set.
   */
  id?: string;
  /**
   * The display Name of the API Version Set.
   */
  name?: string;
  /**
   * Description of API Version Set.
   */
  description?: string;
  /**
   * An value that determines where the API Version identifer will be located in a HTTP request.
   * Possible values include: 'Segment', 'Query', 'Header'
   */
  versioningScheme?: VersioningScheme1;
  /**
   * Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
   */
  versionQueryName?: string;
  /**
   * Name of HTTP header parameter that indicates the API Version if versioningScheme is set to
   * `header`.
   */
  versionHeaderName?: string;
}

/**
 * Criteria to limit import of WSDL to a subset of the document.
 */
export interface ApiCreateOrUpdatePropertiesWsdlSelector {
  /**
   * Name of service to import from WSDL
   */
  wsdlServiceName?: string;
  /**
   * Name of endpoint(port) to import from WSDL
   */
  wsdlEndpointName?: string;
}

/**
 * API base contract details.
 */
export interface ApiEntityBaseContract {
  /**
   * Description of the API. May include HTML formatting tags.
   */
  description?: string;
  /**
   * Collection of authentication settings included into this API.
   */
  authenticationSettings?: AuthenticationSettingsContract;
  /**
   * Protocols over which API is made available.
   */
  subscriptionKeyParameterNames?: SubscriptionKeyParameterNamesContract;
  /**
   * Type of API. Possible values include: 'http', 'soap'
   */
  apiType?: ApiType;
  /**
   * Describes the Revision of the Api. If no value is provided, default revision 1 is created
   */
  apiRevision?: string;
  /**
   * Indicates the Version identifier of the API if the API is versioned
   */
  apiVersion?: string;
  /**
   * Indicates if API revision is current api revision.
   */
  isCurrent?: boolean;
  /**
   * Indicates if API revision is accessible via the gateway.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isOnline?: boolean;
  /**
   * Description of the Api Revision.
   */
  apiRevisionDescription?: string;
  /**
   * Description of the Api Version.
   */
  apiVersionDescription?: string;
  /**
   * A resource identifier for the related ApiVersionSet.
   */
  apiVersionSetId?: string;
  /**
   * Specifies whether an API or Product subscription is required for accessing the API.
   */
  subscriptionRequired?: boolean;
}

/**
 * Api Entity Properties
 */
export interface ApiContractProperties extends ApiEntityBaseContract {
  /**
   * API identifier of the source API.
   */
  sourceApiId?: string;
  /**
   * API name. Must be 1 to 300 characters long.
   */
  displayName?: string;
  /**
   * Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters
   * long.
   */
  serviceUrl?: string;
  /**
   * Relative URL uniquely identifying this API and all of its resource paths within the API
   * Management service instance. It is appended to the API endpoint base URL specified during the
   * service instance creation to form a public URL for this API.
   */
  path: string;
  /**
   * Describes on which protocols the operations in this API can be invoked.
   */
  protocols?: Protocol[];
  /**
   * Version set details
   */
  apiVersionSet?: ApiVersionSetContractDetails;
}

/**
 * API contract properties for the Tag Resources.
 */
export interface ApiTagResourceContractProperties extends ApiEntityBaseContract {
  /**
   * API identifier in the form /apis/{apiId}.
   */
  id?: string;
  /**
   * API name.
   */
  name?: string;
  /**
   * Absolute URL of the backend service implementing this API.
   */
  serviceUrl?: string;
  /**
   * Relative URL uniquely identifying this API and all of its resource paths within the API
   * Management service instance. It is appended to the API endpoint base URL specified during the
   * service instance creation to form a public URL for this API.
   */
  path?: string;
  /**
   * Describes on which protocols the operations in this API can be invoked.
   */
  protocols?: Protocol[];
}

/**
 * Contract defining the Tag property in the Tag Resource Contract
 */
export interface TagTagResourceContractProperties {
  /**
   * Tag identifier
   */
  id?: string;
  /**
   * Tag Name
   */
  name?: string;
}

/**
 * TagResource contract properties.
 */
export interface TagResourceContract {
  /**
   * Tag associated with the resource.
   */
  tag: TagTagResourceContractProperties;
  /**
   * Api associated with the tag.
   */
  api?: ApiTagResourceContractProperties;
  /**
   * Operation associated with the tag.
   */
  operation?: OperationTagResourceContractProperties;
  /**
   * Product associated with the tag.
   */
  product?: ProductTagResourceContractProperties;
}

/**
 * Tag Contract details.
 */
export interface TagContract extends Resource {
  /**
   * Tag name.
   */
  displayName: string;
}

/**
 * Contract details.
 */
export interface TagDescriptionContract extends Resource {
  /**
   * Description of the Tag.
   */
  description?: string;
  /**
   * Absolute URL of external resources describing the tag.
   */
  externalDocsUrl?: string;
  /**
   * Description of the external resources describing the tag.
   */
  externalDocsDescription?: string;
  /**
   * Identifier of the tag in the form of /tags/{tagId}
   */
  tagId?: string;
  /**
   * Tag name.
   */
  displayName?: string;
}

/**
 * Parameters supplied to the Create TagDescription operation.
 */
export interface TagDescriptionCreateParameters {
  /**
   * Description of the Tag.
   */
  description?: string;
  /**
   * Absolute URL of external resources describing the tag.
   */
  externalDocsUrl?: string;
  /**
   * Description of the external resources describing the tag.
   */
  externalDocsDescription?: string;
}

/**
 * Issue Attachment Contract details.
 */
export interface IssueAttachmentContract extends Resource {
  /**
   * Filename by which the binary data will be saved.
   */
  title: string;
  /**
   * Either 'link' if content is provided via an HTTP link or the MIME type of the Base64-encoded
   * binary data provided in the 'content' property.
   */
  contentFormat: string;
  /**
   * An HTTP link or Base64-encoded binary data.
   */
  content: string;
}

/**
 * Issue Comment Contract details.
 */
export interface IssueCommentContract extends Resource {
  /**
   * Comment text.
   */
  text: string;
  /**
   * Date and time when the comment was created.
   */
  createdDate?: Date;
  /**
   * A resource identifier for the user who left the comment.
   */
  userId: string;
}

/**
 * Issue contract Base Properties.
 */
export interface IssueContractBaseProperties {
  /**
   * Date and time when the issue was created.
   */
  createdDate?: Date;
  /**
   * Status of the issue. Possible values include: 'proposed', 'open', 'removed', 'resolved',
   * 'closed'
   */
  state?: State;
  /**
   * A resource identifier for the API the issue was created for.
   */
  apiId?: string;
}

/**
 * Issue update Parameters.
 */
export interface IssueUpdateContract {
  /**
   * Date and time when the issue was created.
   */
  createdDate?: Date;
  /**
   * Status of the issue. Possible values include: 'proposed', 'open', 'removed', 'resolved',
   * 'closed'
   */
  state?: State;
  /**
   * A resource identifier for the API the issue was created for.
   */
  apiId?: string;
  /**
   * The issue title.
   */
  title?: string;
  /**
   * Text describing the issue.
   */
  description?: string;
  /**
   * A resource identifier for the user created the issue.
   */
  userId?: string;
}

/**
 * Issue Contract details.
 */
export interface IssueContract extends Resource {
  /**
   * Date and time when the issue was created.
   */
  createdDate?: Date;
  /**
   * Status of the issue. Possible values include: 'proposed', 'open', 'removed', 'resolved',
   * 'closed'
   */
  state?: State;
  /**
   * A resource identifier for the API the issue was created for.
   */
  apiId?: string;
  /**
   * The issue title.
   */
  title: string;
  /**
   * Text describing the issue.
   */
  description: string;
  /**
   * A resource identifier for the user created the issue.
   */
  userId: string;
}

/**
 * Body logging settings.
 */
export interface BodyDiagnosticSettings {
  /**
   * Number of request body bytes to log.
   */
  bytes?: number;
}

/**
 * Http message diagnostic settings.
 */
export interface HttpMessageDiagnostic {
  /**
   * Array of HTTP Headers to log.
   */
  headers?: string[];
  /**
   * Body logging settings.
   */
  body?: BodyDiagnosticSettings;
}

/**
 * Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.
 */
export interface PipelineDiagnosticSettings {
  /**
   * Diagnostic settings for request.
   */
  request?: HttpMessageDiagnostic;
  /**
   * Diagnostic settings for response.
   */
  response?: HttpMessageDiagnostic;
}

/**
 * Sampling settings for Diagnostic.
 */
export interface SamplingSettings {
  /**
   * Sampling type. Possible values include: 'fixed'
   */
  samplingType?: SamplingType;
  /**
   * Rate of sampling for fixed-rate sampling.
   */
  percentage?: number;
}

/**
 * Diagnostic details.
 */
export interface DiagnosticContract extends Resource {
  /**
   * Specifies for what type of messages sampling settings should not apply. Possible values
   * include: 'allErrors'
   */
  alwaysLog?: AlwaysLog;
  /**
   * Resource Id of a target logger.
   */
  loggerId: string;
  /**
   * Sampling settings for Diagnostic.
   */
  sampling?: SamplingSettings;
  /**
   * Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.
   */
  frontend?: PipelineDiagnosticSettings;
  /**
   * Diagnostic settings for incoming/outgoing HTTP messages to the Backend
   */
  backend?: PipelineDiagnosticSettings;
  /**
   * Log the ClientIP. Default is false.
   */
  logClientIp?: boolean;
  /**
   * Sets correlation protocol to use for Application Insights diagnostics. Possible values
   * include: 'None', 'Legacy', 'W3C'
   */
  httpCorrelationProtocol?: HttpCorrelationProtocol;
  /**
   * The verbosity level applied to traces emitted by trace policies. Possible values include:
   * 'verbose', 'information', 'error'
   */
  verbosity?: Verbosity;
}

/**
 * Schema Contract details.
 */
export interface SchemaContract extends Resource {
  /**
   * Must be a valid a media type used in a Content-Type header as defined in the RFC 2616. Media
   * type of the schema document (e.g. application/json, application/xml). </br> - `Swagger` Schema
   * use `application/vnd.ms-azure-apim.swagger.definitions+json` </br> - `WSDL` Schema use
   * `application/vnd.ms-azure-apim.xsd+xml` </br> - `OpenApi` Schema use
   * `application/vnd.oai.openapi.components+json` </br> - `WADL Schema` use
   * `application/vnd.ms-azure-apim.wadl.grammars+xml`.
   */
  contentType: string;
  /**
   * Json escaped string defining the document representing the Schema. Used for schemas other than
   * Swagger/OpenAPI.
   */
  value?: string;
  /**
   * Types definitions. Used for Swagger/OpenAPI schemas only, null otherwise.
   */
  definitions?: any;
}

/**
 * Policy Contract details.
 */
export interface PolicyContract extends Resource {
  /**
   * Contents of the Policy as defined by the format.
   */
  value: string;
  /**
   * Format of the policyContent. Possible values include: 'xml', 'xml-link', 'rawxml',
   * 'rawxml-link'. Default value: 'xml'.
   */
  format?: PolicyContentFormat;
}

/**
 * The response of the list policy operation.
 */
export interface PolicyCollection {
  /**
   * Policy Contract value.
   */
  value?: PolicyContract[];
  /**
   * Next page link if any.
   */
  nextLink?: string;
}

/**
 * Product details.
 */
export interface ProductContract extends Resource {
  /**
   * Product description. May include HTML formatting tags.
   */
  description?: string;
  /**
   * Product terms of use. Developers trying to subscribe to the product will be presented and
   * required to accept these terms before they can complete the subscription process.
   */
  terms?: string;
  /**
   * Whether a product subscription is required for accessing APIs included in this product. If
   * true, the product is referred to as "protected" and a valid subscription key is required for a
   * request to an API included in the product to succeed. If false, the product is referred to as
   * "open" and requests to an API included in the product can be made without a subscription key.
   * If property is omitted when creating a new product it's value is assumed to be true.
   */
  subscriptionRequired?: boolean;
  /**
   * whether subscription approval is required. If false, new subscriptions will be approved
   * automatically enabling developers to call the product’s APIs immediately after subscribing. If
   * true, administrators must manually approve the subscription before the developer can any of
   * the product’s APIs. Can be present only if subscriptionRequired property is present and has a
   * value of false.
   */
  approvalRequired?: boolean;
  /**
   * Whether the number of subscriptions a user can have to this product at the same time. Set to
   * null or omit to allow unlimited per user subscriptions. Can be present only if
   * subscriptionRequired property is present and has a value of false.
   */
  subscriptionsLimit?: number;
  /**
   * whether product is published or not. Published products are discoverable by users of developer
   * portal. Non published products are visible only to administrators. Default state of Product is
   * notPublished. Possible values include: 'notPublished', 'published'
   */
  state?: ProductState;
  /**
   * Product name.
   */
  displayName: string;
}

/**
 * Operation parameters details.
 */
export interface ParameterContract {
  /**
   * Parameter name.
   */
  name: string;
  /**
   * Parameter description.
   */
  description?: string;
  /**
   * Parameter type.
   */
  type: string;
  /**
   * Default parameter value.
   */
  defaultValue?: string;
  /**
   * Specifies whether parameter is required or not.
   */
  required?: boolean;
  /**
   * Parameter values.
   */
  values?: string[];
}

/**
 * Operation request/response representation details.
 */
export interface RepresentationContract {
  /**
   * Specifies a registered or custom content type for this representation, e.g. application/xml.
   */
  contentType: string;
  /**
   * An example of the representation.
   */
  sample?: string;
  /**
   * Schema identifier. Applicable only if 'contentType' value is neither
   * 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
   */
  schemaId?: string;
  /**
   * Type name defined by the schema. Applicable only if 'contentType' value is neither
   * 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
   */
  typeName?: string;
  /**
   * Collection of form parameters. Required if 'contentType' value is either
   * 'application/x-www-form-urlencoded' or 'multipart/form-data'..
   */
  formParameters?: ParameterContract[];
}

/**
 * Operation response details.
 */
export interface ResponseContract {
  /**
   * Operation response HTTP status code.
   */
  statusCode: number;
  /**
   * Operation response description.
   */
  description?: string;
  /**
   * Collection of operation response representations.
   */
  representations?: RepresentationContract[];
  /**
   * Collection of operation response headers.
   */
  headers?: ParameterContract[];
}

/**
 * Operation request details.
 */
export interface RequestContract {
  /**
   * Operation request description.
   */
  description?: string;
  /**
   * Collection of operation request query parameters.
   */
  queryParameters?: ParameterContract[];
  /**
   * Collection of operation request headers.
   */
  headers?: ParameterContract[];
  /**
   * Collection of operation request representations.
   */
  representations?: RepresentationContract[];
}

/**
 * Api Operation Entity Base Contract details.
 */
export interface OperationEntityBaseContract {
  /**
   * Collection of URL template parameters.
   */
  templateParameters?: ParameterContract[];
  /**
   * Description of the operation. May include HTML formatting tags.
   */
  description?: string;
  /**
   * An entity containing request details.
   */
  request?: RequestContract;
  /**
   * Array of Operation responses.
   */
  responses?: ResponseContract[];
  /**
   * Operation Policies
   */
  policies?: string;
}

/**
 * Api Operation Update Contract details.
 */
export interface OperationUpdateContract {
  /**
   * Collection of URL template parameters.
   */
  templateParameters?: ParameterContract[];
  /**
   * Description of the operation. May include HTML formatting tags.
   */
  description?: string;
  /**
   * An entity containing request details.
   */
  request?: RequestContract;
  /**
   * Array of Operation responses.
   */
  responses?: ResponseContract[];
  /**
   * Operation Policies
   */
  policies?: string;
  /**
   * Operation Name.
   */
  displayName?: string;
  /**
   * A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by
   * only them.
   */
  method?: string;
  /**
   * Relative URL template identifying the target resource for this operation. May include
   * parameters. Example: /customers/{cid}/orders/{oid}/?date={date}
   */
  urlTemplate?: string;
}

/**
 * Api Operation details.
 */
export interface OperationContract extends Resource {
  /**
   * Collection of URL template parameters.
   */
  templateParameters?: ParameterContract[];
  /**
   * Description of the operation. May include HTML formatting tags.
   */
  description?: string;
  /**
   * An entity containing request details.
   */
  request?: RequestContract;
  /**
   * Array of Operation responses.
   */
  responses?: ResponseContract[];
  /**
   * Operation Policies
   */
  policies?: string;
  /**
   * Operation Name.
   */
  displayName: string;
  /**
   * A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by
   * only them.
   */
  method: string;
  /**
   * Relative URL template identifying the target resource for this operation. May include
   * parameters. Example: /customers/{cid}/orders/{oid}/?date={date}
   */
  urlTemplate: string;
}

/**
 * ApiRelease details.
 */
export interface ApiReleaseContract extends Resource {
  /**
   * Identifier of the API the release belongs to.
   */
  apiId?: string;
  /**
   * The time the API was released. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ
   * as specified by the ISO 8601 standard.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdDateTime?: Date;
  /**
   * The time the API release was updated.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly updatedDateTime?: Date;
  /**
   * Release Notes
   */
  notes?: string;
}

/**
 * Summary of revision metadata.
 */
export interface ApiRevisionContract {
  /**
   * Identifier of the API Revision.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly apiId?: string;
  /**
   * Revision number of API.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly apiRevision?: string;
  /**
   * The time the API Revision was created. The date conforms to the following format:
   * yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdDateTime?: Date;
  /**
   * The time the API Revision were updated. The date conforms to the following format:
   * yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly updatedDateTime?: Date;
  /**
   * Description of the API Revision.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Gateway URL for accessing the non-current API Revision.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly privateUrl?: string;
  /**
   * Indicates if API revision is the current api revision.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isOnline?: boolean;
  /**
   * Indicates if API revision is accessible via the gateway.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isCurrent?: boolean;
}

/**
 * API update contract details.
 */
export interface ApiUpdateContract {
  /**
   * Description of the API. May include HTML formatting tags.
   */
  description?: string;
  /**
   * Collection of authentication settings included into this API.
   */
  authenticationSettings?: AuthenticationSettingsContract;
  /**
   * Protocols over which API is made available.
   */
  subscriptionKeyParameterNames?: SubscriptionKeyParameterNamesContract;
  /**
   * Type of API. Possible values include: 'http', 'soap'
   */
  apiType?: ApiType;
  /**
   * Describes the Revision of the Api. If no value is provided, default revision 1 is created
   */
  apiRevision?: string;
  /**
   * Indicates the Version identifier of the API if the API is versioned
   */
  apiVersion?: string;
  /**
   * Indicates if API revision is current api revision.
   */
  isCurrent?: boolean;
  /**
   * Indicates if API revision is accessible via the gateway.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isOnline?: boolean;
  /**
   * Description of the Api Revision.
   */
  apiRevisionDescription?: string;
  /**
   * Description of the Api Version.
   */
  apiVersionDescription?: string;
  /**
   * A resource identifier for the related ApiVersionSet.
   */
  apiVersionSetId?: string;
  /**
   * Specifies whether an API or Product subscription is required for accessing the API.
   */
  subscriptionRequired?: boolean;
  /**
   * API name.
   */
  displayName?: string;
  /**
   * Absolute URL of the backend service implementing this API.
   */
  serviceUrl?: string;
  /**
   * Relative URL uniquely identifying this API and all of its resource paths within the API
   * Management service instance. It is appended to the API endpoint base URL specified during the
   * service instance creation to form a public URL for this API.
   */
  path?: string;
  /**
   * Describes on which protocols the operations in this API can be invoked.
   */
  protocols?: Protocol[];
}

/**
 * Api details.
 */
export interface ApiContract extends Resource {
  /**
   * Description of the API. May include HTML formatting tags.
   */
  description?: string;
  /**
   * Collection of authentication settings included into this API.
   */
  authenticationSettings?: AuthenticationSettingsContract;
  /**
   * Protocols over which API is made available.
   */
  subscriptionKeyParameterNames?: SubscriptionKeyParameterNamesContract;
  /**
   * Type of API. Possible values include: 'http', 'soap'
   */
  apiType?: ApiType;
  /**
   * Describes the Revision of the Api. If no value is provided, default revision 1 is created
   */
  apiRevision?: string;
  /**
   * Indicates the Version identifier of the API if the API is versioned
   */
  apiVersion?: string;
  /**
   * Indicates if API revision is current api revision.
   */
  isCurrent?: boolean;
  /**
   * Indicates if API revision is accessible via the gateway.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isOnline?: boolean;
  /**
   * Description of the Api Revision.
   */
  apiRevisionDescription?: string;
  /**
   * Description of the Api Version.
   */
  apiVersionDescription?: string;
  /**
   * A resource identifier for the related ApiVersionSet.
   */
  apiVersionSetId?: string;
  /**
   * Specifies whether an API or Product subscription is required for accessing the API.
   */
  subscriptionRequired?: boolean;
  /**
   * API identifier of the source API.
   */
  sourceApiId?: string;
  /**
   * API name. Must be 1 to 300 characters long.
   */
  displayName?: string;
  /**
   * Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters
   * long.
   */
  serviceUrl?: string;
  /**
   * Relative URL uniquely identifying this API and all of its resource paths within the API
   * Management service instance. It is appended to the API endpoint base URL specified during the
   * service instance creation to form a public URL for this API.
   */
  path: string;
  /**
   * Describes on which protocols the operations in this API can be invoked.
   */
  protocols?: Protocol[];
  /**
   * Version set details
   */
  apiVersionSet?: ApiVersionSetContractDetails;
}

/**
 * API Create or Update Parameters.
 */
export interface ApiCreateOrUpdateParameter {
  /**
   * Description of the API. May include HTML formatting tags.
   */
  description?: string;
  /**
   * Collection of authentication settings included into this API.
   */
  authenticationSettings?: AuthenticationSettingsContract;
  /**
   * Protocols over which API is made available.
   */
  subscriptionKeyParameterNames?: SubscriptionKeyParameterNamesContract;
  /**
   * Type of API. Possible values include: 'http', 'soap'
   */
  apiType?: ApiType;
  /**
   * Describes the Revision of the Api. If no value is provided, default revision 1 is created
   */
  apiRevision?: string;
  /**
   * Indicates the Version identifier of the API if the API is versioned
   */
  apiVersion?: string;
  /**
   * Indicates if API revision is current api revision.
   */
  isCurrent?: boolean;
  /**
   * Indicates if API revision is accessible via the gateway.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isOnline?: boolean;
  /**
   * Description of the Api Revision.
   */
  apiRevisionDescription?: string;
  /**
   * Description of the Api Version.
   */
  apiVersionDescription?: string;
  /**
   * A resource identifier for the related ApiVersionSet.
   */
  apiVersionSetId?: string;
  /**
   * Specifies whether an API or Product subscription is required for accessing the API.
   */
  subscriptionRequired?: boolean;
  /**
   * API identifier of the source API.
   */
  sourceApiId?: string;
  /**
   * API name. Must be 1 to 300 characters long.
   */
  displayName?: string;
  /**
   * Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters
   * long.
   */
  serviceUrl?: string;
  /**
   * Relative URL uniquely identifying this API and all of its resource paths within the API
   * Management service instance. It is appended to the API endpoint base URL specified during the
   * service instance creation to form a public URL for this API.
   */
  path: string;
  /**
   * Describes on which protocols the operations in this API can be invoked.
   */
  protocols?: Protocol[];
  /**
   * Version set details
   */
  apiVersionSet?: ApiVersionSetContractDetails;
  /**
   * Content value when Importing an API.
   */
  value?: string;
  /**
   * Format of the Content in which the API is getting imported. Possible values include:
   * 'wadl-xml', 'wadl-link-json', 'swagger-json', 'swagger-link-json', 'wsdl', 'wsdl-link',
   * 'openapi', 'openapi+json', 'openapi-link', 'openapi+json-link'
   */
  format?: ContentFormat;
  /**
   * Criteria to limit import of WSDL to a subset of the document.
   */
  wsdlSelector?: ApiCreateOrUpdatePropertiesWsdlSelector;
  /**
   * Type of Api to create.
   * * `http` creates a SOAP to REST API
   * * `soap` creates a SOAP pass-through API. Possible values include: 'SoapToRest',
   * 'SoapPassThrough'
   */
  soapApiType?: SoapApiType;
}

/**
 * Api Version set base parameters
 */
export interface ApiVersionSetEntityBase {
  /**
   * Description of API Version Set.
   */
  description?: string;
  /**
   * Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
   */
  versionQueryName?: string;
  /**
   * Name of HTTP header parameter that indicates the API Version if versioningScheme is set to
   * `header`.
   */
  versionHeaderName?: string;
}

/**
 * Parameters to update or create an Api Version Set Contract.
 */
export interface ApiVersionSetUpdateParameters {
  /**
   * Description of API Version Set.
   */
  description?: string;
  /**
   * Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
   */
  versionQueryName?: string;
  /**
   * Name of HTTP header parameter that indicates the API Version if versioningScheme is set to
   * `header`.
   */
  versionHeaderName?: string;
  /**
   * Name of API Version Set
   */
  displayName?: string;
  /**
   * An value that determines where the API Version identifer will be located in a HTTP request.
   * Possible values include: 'Segment', 'Query', 'Header'
   */
  versioningScheme?: VersioningScheme;
}

/**
 * Api Version Set Contract details.
 */
export interface ApiVersionSetContract extends Resource {
  /**
   * Description of API Version Set.
   */
  description?: string;
  /**
   * Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
   */
  versionQueryName?: string;
  /**
   * Name of HTTP header parameter that indicates the API Version if versioningScheme is set to
   * `header`.
   */
  versionHeaderName?: string;
  /**
   * Name of API Version Set
   */
  displayName: string;
  /**
   * An value that determines where the API Version identifer will be located in a HTTP request.
   * Possible values include: 'Segment', 'Query', 'Header'
   */
  versioningScheme: VersioningScheme;
}

/**
 * Client or app secret used in IdentityProviders, Aad, OpenID or OAuth.
 */
export interface ClientSecretContract {
  /**
   * Client or app secret used in IdentityProviders, Aad, OpenID or OAuth.
   */
  clientSecret?: string;
}

/**
 * OAuth acquire token request body parameter (www-url-form-encoded).
 */
export interface TokenBodyParameterContract {
  /**
   * body parameter name.
   */
  name: string;
  /**
   * body parameter value.
   */
  value: string;
}

/**
 * External OAuth authorization server Update settings contract.
 */
export interface AuthorizationServerContractBaseProperties {
  /**
   * Description of the authorization server. Can contain HTML formatting tags.
   */
  description?: string;
  /**
   * HTTP verbs supported by the authorization endpoint. GET must be always present. POST is
   * optional.
   */
  authorizationMethods?: AuthorizationMethod[];
  /**
   * Method of authentication supported by the token endpoint of this authorization server.
   * Possible values are Basic and/or Body. When Body is specified, client credentials and other
   * parameters are passed within the request body in the application/x-www-form-urlencoded format.
   */
  clientAuthenticationMethod?: ClientAuthenticationMethod[];
  /**
   * Additional parameters required by the token endpoint of this authorization server represented
   * as an array of JSON objects with name and value string properties, i.e. {"name" : "name
   * value", "value": "a value"}.
   */
  tokenBodyParameters?: TokenBodyParameterContract[];
  /**
   * OAuth token endpoint. Contains absolute URI to entity being referenced.
   */
  tokenEndpoint?: string;
  /**
   * If true, authorization server will include state parameter from the authorization request to
   * its response. Client may use state parameter to raise protocol security.
   */
  supportState?: boolean;
  /**
   * Access token scope that is going to be requested by default. Can be overridden at the API
   * level. Should be provided in the form of a string containing space-delimited values.
   */
  defaultScope?: string;
  /**
   * Specifies the mechanism by which access token is passed to the API.
   */
  bearerTokenSendingMethods?: BearerTokenSendingMethod[];
  /**
   * Can be optionally specified when resource owner password grant type is supported by this
   * authorization server. Default resource owner username.
   */
  resourceOwnerUsername?: string;
  /**
   * Can be optionally specified when resource owner password grant type is supported by this
   * authorization server. Default resource owner password.
   */
  resourceOwnerPassword?: string;
}

/**
 * External OAuth authorization server settings.
 */
export interface AuthorizationServerUpdateContract extends Resource {
  /**
   * Description of the authorization server. Can contain HTML formatting tags.
   */
  description?: string;
  /**
   * HTTP verbs supported by the authorization endpoint. GET must be always present. POST is
   * optional.
   */
  authorizationMethods?: AuthorizationMethod[];
  /**
   * Method of authentication supported by the token endpoint of this authorization server.
   * Possible values are Basic and/or Body. When Body is specified, client credentials and other
   * parameters are passed within the request body in the application/x-www-form-urlencoded format.
   */
  clientAuthenticationMethod?: ClientAuthenticationMethod[];
  /**
   * Additional parameters required by the token endpoint of this authorization server represented
   * as an array of JSON objects with name and value string properties, i.e. {"name" : "name
   * value", "value": "a value"}.
   */
  tokenBodyParameters?: TokenBodyParameterContract[];
  /**
   * OAuth token endpoint. Contains absolute URI to entity being referenced.
   */
  tokenEndpoint?: string;
  /**
   * If true, authorization server will include state parameter from the authorization request to
   * its response. Client may use state parameter to raise protocol security.
   */
  supportState?: boolean;
  /**
   * Access token scope that is going to be requested by default. Can be overridden at the API
   * level. Should be provided in the form of a string containing space-delimited values.
   */
  defaultScope?: string;
  /**
   * Specifies the mechanism by which access token is passed to the API.
   */
  bearerTokenSendingMethods?: BearerTokenSendingMethod[];
  /**
   * Can be optionally specified when resource owner password grant type is supported by this
   * authorization server. Default resource owner username.
   */
  resourceOwnerUsername?: string;
  /**
   * Can be optionally specified when resource owner password grant type is supported by this
   * authorization server. Default resource owner password.
   */
  resourceOwnerPassword?: string;
  /**
   * User-friendly authorization server name.
   */
  displayName?: string;
  /**
   * Optional reference to a page where client or app registration for this authorization server is
   * performed. Contains absolute URL to entity being referenced.
   */
  clientRegistrationEndpoint?: string;
  /**
   * OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2.
   */
  authorizationEndpoint?: string;
  /**
   * Form of an authorization grant, which the client uses to request the access token.
   */
  grantTypes?: GrantType[];
  /**
   * Client or app id registered with this authorization server.
   */
  clientId?: string;
  /**
   * Client or app secret registered with this authorization server. This property will not be
   * filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
   */
  clientSecret?: string;
}

/**
 * External OAuth authorization server settings.
 */
export interface AuthorizationServerContract extends Resource {
  /**
   * Description of the authorization server. Can contain HTML formatting tags.
   */
  description?: string;
  /**
   * HTTP verbs supported by the authorization endpoint. GET must be always present. POST is
   * optional.
   */
  authorizationMethods?: AuthorizationMethod[];
  /**
   * Method of authentication supported by the token endpoint of this authorization server.
   * Possible values are Basic and/or Body. When Body is specified, client credentials and other
   * parameters are passed within the request body in the application/x-www-form-urlencoded format.
   */
  clientAuthenticationMethod?: ClientAuthenticationMethod[];
  /**
   * Additional parameters required by the token endpoint of this authorization server represented
   * as an array of JSON objects with name and value string properties, i.e. {"name" : "name
   * value", "value": "a value"}.
   */
  tokenBodyParameters?: TokenBodyParameterContract[];
  /**
   * OAuth token endpoint. Contains absolute URI to entity being referenced.
   */
  tokenEndpoint?: string;
  /**
   * If true, authorization server will include state parameter from the authorization request to
   * its response. Client may use state parameter to raise protocol security.
   */
  supportState?: boolean;
  /**
   * Access token scope that is going to be requested by default. Can be overridden at the API
   * level. Should be provided in the form of a string containing space-delimited values.
   */
  defaultScope?: string;
  /**
   * Specifies the mechanism by which access token is passed to the API.
   */
  bearerTokenSendingMethods?: BearerTokenSendingMethod[];
  /**
   * Can be optionally specified when resource owner password grant type is supported by this
   * authorization server. Default resource owner username.
   */
  resourceOwnerUsername?: string;
  /**
   * Can be optionally specified when resource owner password grant type is supported by this
   * authorization server. Default resource owner password.
   */
  resourceOwnerPassword?: string;
  /**
   * User-friendly authorization server name.
   */
  displayName: string;
  /**
   * Optional reference to a page where client or app registration for this authorization server is
   * performed. Contains absolute URL to entity being referenced.
   */
  clientRegistrationEndpoint: string;
  /**
   * OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2.
   */
  authorizationEndpoint: string;
  /**
   * Form of an authorization grant, which the client uses to request the access token.
   */
  grantTypes: GrantType[];
  /**
   * Client or app id registered with this authorization server.
   */
  clientId: string;
  /**
   * Client or app secret registered with this authorization server. This property will not be
   * filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
   */
  clientSecret?: string;
}

/**
 * Reconnect request parameters.
 */
export interface BackendReconnectContract extends Resource {
  /**
   * Duration in ISO8601 format after which reconnect will be initiated. Minimum duration of the
   * Reconnect is PT2M.
   */
  after?: string;
}

/**
 * Properties controlling TLS Certificate Validation.
 */
export interface BackendTlsProperties {
  /**
   * Flag indicating whether SSL certificate chain validation should be done when using self-signed
   * certificates for this backend host. Default value: true.
   */
  validateCertificateChain?: boolean;
  /**
   * Flag indicating whether SSL certificate name validation should be done when using self-signed
   * certificates for this backend host. Default value: true.
   */
  validateCertificateName?: boolean;
}

/**
 * Details of the Backend WebProxy Server to use in the Request to Backend.
 */
export interface BackendProxyContract {
  /**
   * WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance,
   * including all fragments and query strings.
   */
  url: string;
  /**
   * Username to connect to the WebProxy server
   */
  username?: string;
  /**
   * Password to connect to the WebProxy Server
   */
  password?: string;
}

/**
 * Authorization header information.
 */
export interface BackendAuthorizationHeaderCredentials {
  /**
   * Authentication Scheme name.
   */
  scheme: string;
  /**
   * Authentication Parameter value.
   */
  parameter: string;
}

/**
 * Details of the Credentials used to connect to Backend.
 */
export interface BackendCredentialsContract {
  /**
   * List of Client Certificate Thumbprint.
   */
  certificate?: string[];
  /**
   * Query Parameter description.
   */
  query?: { [propertyName: string]: string[] };
  /**
   * Header Parameter description.
   */
  header?: { [propertyName: string]: string[] };
  /**
   * Authorization header authentication
   */
  authorization?: BackendAuthorizationHeaderCredentials;
}

/**
 * Properties of server X509Names.
 */
export interface X509CertificateName {
  /**
   * Common Name of the Certificate.
   */
  name?: string;
  /**
   * Thumbprint for the Issuer of the Certificate.
   */
  issuerCertificateThumbprint?: string;
}

/**
 * Properties of the Service Fabric Type Backend.
 */
export interface BackendServiceFabricClusterProperties {
  /**
   * The client certificate thumbprint for the management endpoint.
   */
  clientCertificatethumbprint: string;
  /**
   * Maximum number of retries while attempting resolve the partition.
   */
  maxPartitionResolutionRetries?: number;
  /**
   * The cluster management endpoint.
   */
  managementEndpoints: string[];
  /**
   * Thumbprints of certificates cluster management service uses for tls communication
   */
  serverCertificateThumbprints?: string[];
  /**
   * Server X509 Certificate Names Collection
   */
  serverX509Names?: X509CertificateName[];
}

/**
 * Properties specific to the Backend Type.
 */
export interface BackendProperties {
  /**
   * Backend Service Fabric Cluster Properties
   */
  serviceFabricCluster?: BackendServiceFabricClusterProperties;
}

/**
 * Backend entity base Parameter set.
 */
export interface BackendBaseParameters {
  /**
   * Backend Title.
   */
  title?: string;
  /**
   * Backend Description.
   */
  description?: string;
  /**
   * Management Uri of the Resource in External System. This url can be the Arm Resource Id of
   * Logic Apps, Function Apps or Api Apps.
   */
  resourceId?: string;
  /**
   * Backend Properties contract
   */
  properties?: BackendProperties;
  /**
   * Backend Credentials Contract Properties
   */
  credentials?: BackendCredentialsContract;
  /**
   * Backend Proxy Contract Properties
   */
  proxy?: BackendProxyContract;
  /**
   * Backend TLS Properties
   */
  tls?: BackendTlsProperties;
}

/**
 * Backend update parameters.
 */
export interface BackendUpdateParameters {
  /**
   * Backend Title.
   */
  title?: string;
  /**
   * Backend Description.
   */
  description?: string;
  /**
   * Management Uri of the Resource in External System. This url can be the Arm Resource Id of
   * Logic Apps, Function Apps or Api Apps.
   */
  resourceId?: string;
  /**
   * Backend Properties contract
   */
  properties?: BackendProperties;
  /**
   * Backend Credentials Contract Properties
   */
  credentials?: BackendCredentialsContract;
  /**
   * Backend Proxy Contract Properties
   */
  proxy?: BackendProxyContract;
  /**
   * Backend TLS Properties
   */
  tls?: BackendTlsProperties;
  /**
   * Runtime Url of the Backend.
   */
  url?: string;
  /**
   * Backend communication protocol. Possible values include: 'http', 'soap'
   */
  protocol?: BackendProtocol;
}

/**
 * Backend details.
 */
export interface BackendContract extends Resource {
  /**
   * Backend Title.
   */
  title?: string;
  /**
   * Backend Description.
   */
  description?: string;
  /**
   * Management Uri of the Resource in External System. This url can be the Arm Resource Id of
   * Logic Apps, Function Apps or Api Apps.
   */
  resourceId?: string;
  /**
   * Backend Properties contract
   */
  properties?: BackendProperties;
  /**
   * Backend Credentials Contract Properties
   */
  credentials?: BackendCredentialsContract;
  /**
   * Backend Proxy Contract Properties
   */
  proxy?: BackendProxyContract;
  /**
   * Backend TLS Properties
   */
  tls?: BackendTlsProperties;
  /**
   * Runtime Url of the Backend.
   */
  url: string;
  /**
   * Backend communication protocol. Possible values include: 'http', 'soap'
   */
  protocol: BackendProtocol;
}

/**
 * Cache update details.
 */
export interface CacheUpdateParameters {
  /**
   * Cache description
   */
  description?: string;
  /**
   * Runtime connection string to cache
   */
  connectionString?: string;
  /**
   * Original uri of entity in external system cache points to
   */
  resourceId?: string;
}

/**
 * Cache details.
 */
export interface CacheContract extends Resource {
  /**
   * Cache description
   */
  description?: string;
  /**
   * Runtime connection string to cache
   */
  connectionString: string;
  /**
   * Original uri of entity in external system cache points to
   */
  resourceId?: string;
}

/**
 * Certificate details.
 */
export interface CertificateContract extends Resource {
  /**
   * Subject attribute of the certificate.
   */
  subject: string;
  /**
   * Thumbprint of the certificate.
   */
  thumbprint: string;
  /**
   * Expiration date of the certificate. The date conforms to the following format:
   * `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   */
  expirationDate: Date;
}

/**
 * Certificate create or update details.
 */
export interface CertificateCreateOrUpdateParameters {
  /**
   * Base 64 encoded certificate using the application/x-pkcs12 representation.
   */
  data: string;
  /**
   * Password for the Certificate
   */
  password: string;
}

/**
 * Describes an available API Management SKU.
 */
export interface ResourceSku {
  /**
   * Name of the Sku. Possible values include: 'Developer', 'Standard', 'Premium', 'Basic',
   * 'Consumption'
   */
  name?: SkuType;
}

/**
 * Describes scaling information of a SKU.
 */
export interface ResourceSkuCapacity {
  /**
   * The minimum capacity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly minimum?: number;
  /**
   * The maximum capacity that can be set.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maximum?: number;
  /**
   * The default capacity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly default?: number;
  /**
   * The scale type applicable to the sku. Possible values include: 'automatic', 'manual', 'none'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly scaleType?: ResourceSkuCapacityScaleType;
}

/**
 * Describes an available API Management service SKU.
 */
export interface ResourceSkuResult {
  /**
   * The type of resource the SKU applies to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceType?: string;
  /**
   * Specifies API Management SKU.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sku?: ResourceSku;
  /**
   * Specifies the number of API Management units.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly capacity?: ResourceSkuCapacity;
}

/**
 * SSL certificate information.
 */
export interface CertificateInformation {
  /**
   * Expiration date of the certificate. The date conforms to the following format:
   * `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   */
  expiry: Date;
  /**
   * Thumbprint of the certificate.
   */
  thumbprint: string;
  /**
   * Subject of the certificate.
   */
  subject: string;
}

/**
 * Certificate configuration which consist of non-trusted intermediates and root certificates.
 */
export interface CertificateConfiguration {
  /**
   * Base64 Encoded certificate.
   */
  encodedCertificate?: string;
  /**
   * Certificate Password.
   */
  certificatePassword?: string;
  /**
   * The System.Security.Cryptography.x509certificates.StoreName certificate store location. Only
   * Root and CertificateAuthority are valid locations. Possible values include:
   * 'CertificateAuthority', 'Root'
   */
  storeName: StoreName;
  /**
   * Certificate information.
   */
  certificate?: CertificateInformation;
}

/**
 * Custom hostname configuration.
 */
export interface HostnameConfiguration {
  /**
   * Hostname type. Possible values include: 'Proxy', 'Portal', 'Management', 'Scm',
   * 'DeveloperPortal'
   */
  type: HostnameType;
  /**
   * Hostname to configure on the Api Management service.
   */
  hostName: string;
  /**
   * Url to the KeyVault Secret containing the Ssl Certificate. If absolute Url containing version
   * is provided, auto-update of ssl certificate will not work. This requires Api Management
   * service to be configured with MSI. The secret should be of type *application/x-pkcs12*
   */
  keyVaultId?: string;
  /**
   * Base64 Encoded certificate.
   */
  encodedCertificate?: string;
  /**
   * Certificate Password.
   */
  certificatePassword?: string;
  /**
   * Specify true to setup the certificate associated with this Hostname as the Default SSL
   * Certificate. If a client does not send the SNI header, then this will be the certificate that
   * will be challenged. The property is useful if a service has multiple custom hostname enabled
   * and it needs to decide on the default ssl certificate. The setting only applied to Proxy
   * Hostname Type. Default value: false.
   */
  defaultSslBinding?: boolean;
  /**
   * Specify true to always negotiate client certificate on the hostname. Default Value is false.
   * Default value: false.
   */
  negotiateClientCertificate?: boolean;
  /**
   * Certificate information.
   */
  certificate?: CertificateInformation;
}

/**
 * Configuration of a virtual network to which API Management service is deployed.
 */
export interface VirtualNetworkConfiguration {
  /**
   * The virtual network ID. This is typically a GUID. Expect a null GUID by default.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly vnetid?: string;
  /**
   * The name of the subnet.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subnetname?: string;
  /**
   * The full resource ID of a subnet in a virtual network to deploy the API Management service in.
   */
  subnetResourceId?: string;
}

/**
 * API Management service resource SKU properties.
 */
export interface ApiManagementServiceSkuProperties {
  /**
   * Name of the Sku. Possible values include: 'Developer', 'Standard', 'Premium', 'Basic',
   * 'Consumption'
   */
  name: SkuType;
  /**
   * Capacity of the SKU (number of deployed units of the SKU). For Consumption SKU capacity must
   * be specified as 0.
   */
  capacity: number;
}

/**
 * Description of an additional API Management resource location.
 */
export interface AdditionalLocation {
  /**
   * The location name of the additional region among Azure Data center regions.
   */
  location: string;
  /**
   * SKU properties of the API Management service.
   */
  sku: ApiManagementServiceSkuProperties;
  /**
   * Public Static Load Balanced IP addresses of the API Management service in the additional
   * location. Available only for Basic, Standard and Premium SKU.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly publicIPAddresses?: string[];
  /**
   * Private Static Load Balanced IP addresses of the API Management service which is deployed in
   * an Internal Virtual Network in a particular additional location. Available only for Basic,
   * Standard and Premium SKU.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly privateIPAddresses?: string[];
  /**
   * Virtual network configuration for the location.
   */
  virtualNetworkConfiguration?: VirtualNetworkConfiguration;
  /**
   * Gateway URL of the API Management service in the Region.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly gatewayRegionalUrl?: string;
  /**
   * Property only valid for an Api Management service deployed in multiple locations. This can be
   * used to disable the gateway in this additional location. Default value: false.
   */
  disableGateway?: boolean;
}

/**
 * Parameters supplied to the Backup/Restore of an API Management service operation.
 */
export interface ApiManagementServiceBackupRestoreParameters {
  /**
   * Azure Cloud Storage account (used to place/retrieve the backup) name.
   */
  storageAccount: string;
  /**
   * Azure Cloud Storage account (used to place/retrieve the backup) access key.
   */
  accessKey: string;
  /**
   * Azure Cloud Storage blob container name used to place/retrieve the backup.
   */
  containerName: string;
  /**
   * The name of the backup file to create.
   */
  backupName: string;
}

/**
 * Control Plane Apis version constraint for the API Management service.
 */
export interface ApiVersionConstraint {
  /**
   * Limit control plane API calls to API Management service with version equal to or newer than
   * this value.
   */
  minApiVersion?: string;
}

/**
 * Base Properties of an API Management service resource description.
 */
export interface ApiManagementServiceBaseProperties {
  /**
   * Email address from which the notification will be sent.
   */
  notificationSenderEmail?: string;
  /**
   * The current provisioning state of the API Management service which can be one of the
   * following:
   * Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * The provisioning state of the API Management service, which is targeted by the long running
   * operation started on the service.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly targetProvisioningState?: string;
  /**
   * Creation UTC date of the API Management service.The date conforms to the following format:
   * `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdAtUtc?: Date;
  /**
   * Gateway URL of the API Management service.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly gatewayUrl?: string;
  /**
   * Gateway URL of the API Management service in the Default Region.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly gatewayRegionalUrl?: string;
  /**
   * Publisher portal endpoint Url of the API Management service.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly portalUrl?: string;
  /**
   * Management API endpoint URL of the API Management service.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly managementApiUrl?: string;
  /**
   * SCM endpoint URL of the API Management service.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly scmUrl?: string;
  /**
   * DEveloper Portal endpoint URL of the API Management service.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly developerPortalUrl?: string;
  /**
   * Custom hostname configuration of the API Management service.
   */
  hostnameConfigurations?: HostnameConfiguration[];
  /**
   * Public Static Load Balanced IP addresses of the API Management service in Primary region.
   * Available only for Basic, Standard and Premium SKU.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly publicIPAddresses?: string[];
  /**
   * Private Static Load Balanced IP addresses of the API Management service in Primary region
   * which is deployed in an Internal Virtual Network. Available only for Basic, Standard and
   * Premium SKU.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly privateIPAddresses?: string[];
  /**
   * Virtual network configuration of the API Management service.
   */
  virtualNetworkConfiguration?: VirtualNetworkConfiguration;
  /**
   * Additional datacenter locations of the API Management service.
   */
  additionalLocations?: AdditionalLocation[];
  /**
   * Custom properties of the API Management service.</br>Setting
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` will disable the
   * cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1 and 1.2).</br>Setting
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` can be used to disable
   * just TLS 1.1.</br>Setting
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` can be used to disable
   * TLS 1.0 on an API Management service.</br>Setting
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11` can be used to
   * disable just TLS 1.1 for communications with backends.</br>Setting
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10` can be used to
   * disable TLS 1.0 for communications with backends.</br>Setting
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2` can be used to enable
   * HTTP2 protocol on an API Management service.</br>Not specifying any of these properties on
   * PATCH operation will reset omitted properties' values to their defaults. For all the settings
   * except Http2 the default value is `True` if the service was created on or before April 1st
   * 2018 and `False` otherwise. Http2 setting's default value is `False`.</br></br>You can disable
   * any of next ciphers by using settings
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.[cipher_name]`:
   * TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,
   * TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,
   * TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256,
   * TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA.
   * For example,
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA256`:`false`.
   * The default value is `true` for them.  Note: next ciphers can't be disabled since they are
   * required by Azure CloudService internal components:
   * TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384
   */
  customProperties?: { [propertyName: string]: string };
  /**
   * List of Certificates that need to be installed in the API Management service. Max supported
   * certificates that can be installed is 10.
   */
  certificates?: CertificateConfiguration[];
  /**
   * Property only meant to be used for Consumption SKU Service. This enforces a client certificate
   * to be presented on each request to the gateway. This also enables the ability to authenticate
   * the certificate in the policy on the gateway. Default value: false.
   */
  enableClientCertificate?: boolean;
  /**
   * Property only valid for an Api Management service deployed in multiple locations. This can be
   * used to disable the gateway in master region. Default value: false.
   */
  disableGateway?: boolean;
  /**
   * The type of VPN in which API Management service needs to be configured in. None (Default
   * Value) means the API Management service is not part of any Virtual Network, External means the
   * API Management deployment is set up inside a Virtual Network having an Internet Facing
   * Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network
   * having an Intranet Facing Endpoint only. Possible values include: 'None', 'External',
   * 'Internal'. Default value: 'None'.
   */
  virtualNetworkType?: VirtualNetworkType;
  /**
   * Control Plane Apis version constraint for the API Management service.
   */
  apiVersionConstraint?: ApiVersionConstraint;
}

/**
 * An interface representing UserIdentityProperties.
 */
export interface UserIdentityProperties {
  /**
   * The principal id of user assigned identity.
   */
  principalId?: string;
  /**
   * The client id of user assigned identity.
   */
  clientId?: string;
}

/**
 * Identity properties of the Api Management service resource.
 */
export interface ApiManagementServiceIdentity {
  /**
   * The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes
   * both an implicitly created identity and a set of user assigned identities. The type 'None'
   * will remove any identities from the service. Possible values include: 'SystemAssigned',
   * 'UserAssigned', 'SystemAssigned, UserAssigned', 'None'
   */
  type: ApimIdentityType;
  /**
   * The principal id of the identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The client tenant id of the identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
  /**
   * The list of user identities associated with the resource. The user identity
   * dictionary key references will be ARM resource ids in the form:
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
   * providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
   */
  userAssignedIdentities?: { [propertyName: string]: UserIdentityProperties };
}

/**
 * The Resource definition.
 */
export interface ApimResource extends BaseResource {
  /**
   * Resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type for API Management resource is set to Microsoft.ApiManagement.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * A single API Management service resource in List or Get response.
 */
export interface ApiManagementServiceResource extends ApimResource {
  /**
   * Email address from which the notification will be sent.
   */
  notificationSenderEmail?: string;
  /**
   * The current provisioning state of the API Management service which can be one of the
   * following:
   * Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * The provisioning state of the API Management service, which is targeted by the long running
   * operation started on the service.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly targetProvisioningState?: string;
  /**
   * Creation UTC date of the API Management service.The date conforms to the following format:
   * `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdAtUtc?: Date;
  /**
   * Gateway URL of the API Management service.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly gatewayUrl?: string;
  /**
   * Gateway URL of the API Management service in the Default Region.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly gatewayRegionalUrl?: string;
  /**
   * Publisher portal endpoint Url of the API Management service.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly portalUrl?: string;
  /**
   * Management API endpoint URL of the API Management service.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly managementApiUrl?: string;
  /**
   * SCM endpoint URL of the API Management service.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly scmUrl?: string;
  /**
   * DEveloper Portal endpoint URL of the API Management service.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly developerPortalUrl?: string;
  /**
   * Custom hostname configuration of the API Management service.
   */
  hostnameConfigurations?: HostnameConfiguration[];
  /**
   * Public Static Load Balanced IP addresses of the API Management service in Primary region.
   * Available only for Basic, Standard and Premium SKU.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly publicIPAddresses?: string[];
  /**
   * Private Static Load Balanced IP addresses of the API Management service in Primary region
   * which is deployed in an Internal Virtual Network. Available only for Basic, Standard and
   * Premium SKU.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly privateIPAddresses?: string[];
  /**
   * Virtual network configuration of the API Management service.
   */
  virtualNetworkConfiguration?: VirtualNetworkConfiguration;
  /**
   * Additional datacenter locations of the API Management service.
   */
  additionalLocations?: AdditionalLocation[];
  /**
   * Custom properties of the API Management service.</br>Setting
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` will disable the
   * cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1 and 1.2).</br>Setting
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` can be used to disable
   * just TLS 1.1.</br>Setting
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` can be used to disable
   * TLS 1.0 on an API Management service.</br>Setting
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11` can be used to
   * disable just TLS 1.1 for communications with backends.</br>Setting
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10` can be used to
   * disable TLS 1.0 for communications with backends.</br>Setting
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2` can be used to enable
   * HTTP2 protocol on an API Management service.</br>Not specifying any of these properties on
   * PATCH operation will reset omitted properties' values to their defaults. For all the settings
   * except Http2 the default value is `True` if the service was created on or before April 1st
   * 2018 and `False` otherwise. Http2 setting's default value is `False`.</br></br>You can disable
   * any of next ciphers by using settings
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.[cipher_name]`:
   * TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,
   * TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,
   * TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256,
   * TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA.
   * For example,
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA256`:`false`.
   * The default value is `true` for them.  Note: next ciphers can't be disabled since they are
   * required by Azure CloudService internal components:
   * TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384
   */
  customProperties?: { [propertyName: string]: string };
  /**
   * List of Certificates that need to be installed in the API Management service. Max supported
   * certificates that can be installed is 10.
   */
  certificates?: CertificateConfiguration[];
  /**
   * Property only meant to be used for Consumption SKU Service. This enforces a client certificate
   * to be presented on each request to the gateway. This also enables the ability to authenticate
   * the certificate in the policy on the gateway. Default value: false.
   */
  enableClientCertificate?: boolean;
  /**
   * Property only valid for an Api Management service deployed in multiple locations. This can be
   * used to disable the gateway in master region. Default value: false.
   */
  disableGateway?: boolean;
  /**
   * The type of VPN in which API Management service needs to be configured in. None (Default
   * Value) means the API Management service is not part of any Virtual Network, External means the
   * API Management deployment is set up inside a Virtual Network having an Internet Facing
   * Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network
   * having an Intranet Facing Endpoint only. Possible values include: 'None', 'External',
   * 'Internal'. Default value: 'None'.
   */
  virtualNetworkType?: VirtualNetworkType;
  /**
   * Control Plane Apis version constraint for the API Management service.
   */
  apiVersionConstraint?: ApiVersionConstraint;
  /**
   * Publisher email.
   */
  publisherEmail: string;
  /**
   * Publisher name.
   */
  publisherName: string;
  /**
   * SKU properties of the API Management service.
   */
  sku: ApiManagementServiceSkuProperties;
  /**
   * Managed service identity of the Api Management service.
   */
  identity?: ApiManagementServiceIdentity;
  /**
   * Resource location.
   */
  location: string;
  /**
   * ETag of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly etag?: string;
}

/**
 * Parameter supplied to Update Api Management Service.
 */
export interface ApiManagementServiceUpdateParameters extends ApimResource {
  /**
   * Email address from which the notification will be sent.
   */
  notificationSenderEmail?: string;
  /**
   * The current provisioning state of the API Management service which can be one of the
   * following:
   * Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * The provisioning state of the API Management service, which is targeted by the long running
   * operation started on the service.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly targetProvisioningState?: string;
  /**
   * Creation UTC date of the API Management service.The date conforms to the following format:
   * `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdAtUtc?: Date;
  /**
   * Gateway URL of the API Management service.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly gatewayUrl?: string;
  /**
   * Gateway URL of the API Management service in the Default Region.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly gatewayRegionalUrl?: string;
  /**
   * Publisher portal endpoint Url of the API Management service.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly portalUrl?: string;
  /**
   * Management API endpoint URL of the API Management service.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly managementApiUrl?: string;
  /**
   * SCM endpoint URL of the API Management service.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly scmUrl?: string;
  /**
   * DEveloper Portal endpoint URL of the API Management service.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly developerPortalUrl?: string;
  /**
   * Custom hostname configuration of the API Management service.
   */
  hostnameConfigurations?: HostnameConfiguration[];
  /**
   * Public Static Load Balanced IP addresses of the API Management service in Primary region.
   * Available only for Basic, Standard and Premium SKU.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly publicIPAddresses?: string[];
  /**
   * Private Static Load Balanced IP addresses of the API Management service in Primary region
   * which is deployed in an Internal Virtual Network. Available only for Basic, Standard and
   * Premium SKU.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly privateIPAddresses?: string[];
  /**
   * Virtual network configuration of the API Management service.
   */
  virtualNetworkConfiguration?: VirtualNetworkConfiguration;
  /**
   * Additional datacenter locations of the API Management service.
   */
  additionalLocations?: AdditionalLocation[];
  /**
   * Custom properties of the API Management service.</br>Setting
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` will disable the
   * cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1 and 1.2).</br>Setting
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` can be used to disable
   * just TLS 1.1.</br>Setting
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` can be used to disable
   * TLS 1.0 on an API Management service.</br>Setting
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11` can be used to
   * disable just TLS 1.1 for communications with backends.</br>Setting
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10` can be used to
   * disable TLS 1.0 for communications with backends.</br>Setting
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2` can be used to enable
   * HTTP2 protocol on an API Management service.</br>Not specifying any of these properties on
   * PATCH operation will reset omitted properties' values to their defaults. For all the settings
   * except Http2 the default value is `True` if the service was created on or before April 1st
   * 2018 and `False` otherwise. Http2 setting's default value is `False`.</br></br>You can disable
   * any of next ciphers by using settings
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.[cipher_name]`:
   * TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,
   * TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,
   * TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256,
   * TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA.
   * For example,
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA256`:`false`.
   * The default value is `true` for them.  Note: next ciphers can't be disabled since they are
   * required by Azure CloudService internal components:
   * TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384
   */
  customProperties?: { [propertyName: string]: string };
  /**
   * List of Certificates that need to be installed in the API Management service. Max supported
   * certificates that can be installed is 10.
   */
  certificates?: CertificateConfiguration[];
  /**
   * Property only meant to be used for Consumption SKU Service. This enforces a client certificate
   * to be presented on each request to the gateway. This also enables the ability to authenticate
   * the certificate in the policy on the gateway. Default value: false.
   */
  enableClientCertificate?: boolean;
  /**
   * Property only valid for an Api Management service deployed in multiple locations. This can be
   * used to disable the gateway in master region. Default value: false.
   */
  disableGateway?: boolean;
  /**
   * The type of VPN in which API Management service needs to be configured in. None (Default
   * Value) means the API Management service is not part of any Virtual Network, External means the
   * API Management deployment is set up inside a Virtual Network having an Internet Facing
   * Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network
   * having an Intranet Facing Endpoint only. Possible values include: 'None', 'External',
   * 'Internal'. Default value: 'None'.
   */
  virtualNetworkType?: VirtualNetworkType;
  /**
   * Control Plane Apis version constraint for the API Management service.
   */
  apiVersionConstraint?: ApiVersionConstraint;
  /**
   * Publisher email.
   */
  publisherEmail?: string;
  /**
   * Publisher name.
   */
  publisherName?: string;
  /**
   * SKU properties of the API Management service.
   */
  sku?: ApiManagementServiceSkuProperties;
  /**
   * Managed service identity of the Api Management service.
   */
  identity?: ApiManagementServiceIdentity;
  /**
   * ETag of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly etag?: string;
}

/**
 * The response of the GetSsoToken operation.
 */
export interface ApiManagementServiceGetSsoTokenResult {
  /**
   * Redirect URL to the Publisher Portal containing the SSO token.
   */
  redirectUri?: string;
}

/**
 * Parameters supplied to the CheckNameAvailability operation.
 */
export interface ApiManagementServiceCheckNameAvailabilityParameters {
  /**
   * The name to check for availability.
   */
  name: string;
}

/**
 * Response of the CheckNameAvailability operation.
 */
export interface ApiManagementServiceNameAvailabilityResult {
  /**
   * True if the name is available and can be used to create a new API Management service;
   * otherwise false.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nameAvailable?: boolean;
  /**
   * If reason == invalid, provide the user with the reason why the given name is invalid, and
   * provide the resource naming requirements so that the user can select a valid name. If reason
   * == AlreadyExists, explain that <resourceName> is already in use, and direct them to select a
   * different name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * Invalid indicates the name provided does not match the resource provider’s naming requirements
   * (incorrect length, unsupported characters, etc.)  AlreadyExists indicates that the name is
   * already in use and is therefore unavailable. Possible values include: 'Valid', 'Invalid',
   * 'AlreadyExists'
   */
  reason?: NameAvailabilityReason;
}

/**
 * Parameter supplied to the Apply Network configuration operation.
 */
export interface ApiManagementServiceApplyNetworkConfigurationParameters {
  /**
   * Location of the Api Management service to update for a multi-region service. For a service
   * deployed in a single region, this parameter is not required.
   */
  location?: string;
}

/**
 * The object that describes the operation.
 */
export interface OperationDisplay {
  /**
   * Friendly name of the resource provider
   */
  provider?: string;
  /**
   * Operation type: read, write, delete, listKeys/action, etc.
   */
  operation?: string;
  /**
   * Resource type on which the operation is performed.
   */
  resource?: string;
  /**
   * Friendly name of the operation
   */
  description?: string;
}

/**
 * REST API operation
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * The object that describes the operation.
   */
  display?: OperationDisplay;
  /**
   * The operation origin.
   */
  origin?: string;
  /**
   * The operation properties.
   */
  properties?: any;
}

/**
 * Email Template Parameter contract.
 */
export interface EmailTemplateParametersContractProperties {
  /**
   * Template parameter name.
   */
  name?: string;
  /**
   * Template parameter title.
   */
  title?: string;
  /**
   * Template parameter description.
   */
  description?: string;
}

/**
 * Email Template update Parameters.
 */
export interface EmailTemplateUpdateParameters {
  /**
   * Subject of the Template.
   */
  subject?: string;
  /**
   * Title of the Template.
   */
  title?: string;
  /**
   * Description of the Email Template.
   */
  description?: string;
  /**
   * Email Template Body. This should be a valid XDocument
   */
  body?: string;
  /**
   * Email Template Parameter values.
   */
  parameters?: EmailTemplateParametersContractProperties[];
}

/**
 * Email Template details.
 */
export interface EmailTemplateContract extends Resource {
  /**
   * Subject of the Template.
   */
  subject: string;
  /**
   * Email Template Body. This should be a valid XDocument
   */
  body: string;
  /**
   * Title of the Template.
   */
  title?: string;
  /**
   * Description of the Email Template.
   */
  description?: string;
  /**
   * Whether the template is the default template provided by Api Management or has been edited.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isDefault?: boolean;
  /**
   * Email Template Parameter values.
   */
  parameters?: EmailTemplateParametersContractProperties[];
}

/**
 * Association entity details.
 */
export interface AssociationContract extends Resource {
  /**
   * Provisioning state. Possible values include: 'created'
   */
  provisioningState?: ProvisioningState;
}

/**
 * Gateway hostname configuration details.
 */
export interface GatewayHostnameConfigurationContract extends Resource {
  /**
   * Hostname value. Supports valid domain name, partial or full wildcard
   */
  hostname?: string;
  /**
   * Identifier of Certificate entity that will be used for TLS connection establishment
   */
  certificateId?: string;
  /**
   * Determines whether gateway requests client certificate
   */
  negotiateClientCertificate?: boolean;
}

/**
 * Gateway access token.
 */
export interface GatewayTokenContract {
  /**
   * Shared Access Authentication token value for the Gateway.
   */
  value?: string;
}

/**
 * Gateway token request contract properties.
 */
export interface GatewayTokenRequestContract {
  /**
   * The Key to be used to generate gateway token. Possible values include: 'primary', 'secondary'.
   * Default value: 'primary'.
   */
  keyType: KeyType;
  /**
   * The Expiry time of the Token. Maximum token expiry time is set to 30 days. The date conforms
   * to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   */
  expiry: Date;
}

/**
 * Gateway key regeneration request contract properties.
 */
export interface GatewayKeyRegenerationRequestContract {
  /**
   * The Key being regenerated. Possible values include: 'primary', 'secondary'
   */
  keyType: KeyType;
}

/**
 * Gateway authentication keys.
 */
export interface GatewayKeysContract {
  /**
   * Primary gateway key.
   */
  primary?: string;
  /**
   * Secondary gateway key.
   */
  secondary?: string;
}

/**
 * Resource location data properties.
 */
export interface ResourceLocationDataContract {
  /**
   * A canonical name for the geographic or physical location.
   */
  name: string;
  /**
   * The city or locality where the resource is located.
   */
  city?: string;
  /**
   * The district, state, or province where the resource is located.
   */
  district?: string;
  /**
   * The country or region where the resource is located.
   */
  countryOrRegion?: string;
}

/**
 * Gateway details.
 */
export interface GatewayContract extends Resource {
  /**
   * Gateway location.
   */
  locationData?: ResourceLocationDataContract;
  /**
   * Gateway description
   */
  description?: string;
}

/**
 * User identity details.
 */
export interface UserIdentityContract {
  /**
   * Identity provider name.
   */
  provider?: string;
  /**
   * Identifier value within provider.
   */
  id?: string;
}

/**
 * User Entity Base Parameters set.
 */
export interface UserEntityBaseParameters {
  /**
   * Account state. Specifies whether the user is active or not. Blocked users are unable to sign
   * into the developer portal or call any APIs of subscribed products. Default state is Active.
   * Possible values include: 'active', 'blocked', 'pending', 'deleted'. Default value: 'active'.
   */
  state?: UserState;
  /**
   * Optional note about a user set by the administrator.
   */
  note?: string;
  /**
   * Collection of user identities.
   */
  identities?: UserIdentityContract[];
}

/**
 * Group contract Properties.
 */
export interface GroupContractProperties {
  /**
   * Group name.
   */
  displayName: string;
  /**
   * Group description. Can contain HTML formatting tags.
   */
  description?: string;
  /**
   * true if the group is one of the three system groups (Administrators, Developers, or Guests);
   * otherwise false.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly builtIn?: boolean;
  /**
   * Group type. Possible values include: 'custom', 'system', 'external'
   */
  type?: GroupType;
  /**
   * For external groups, this property contains the id of the group from the external identity
   * provider, e.g. for Azure Active Directory `aad://<tenant>.onmicrosoft.com/groups/<group object
   * id>`; otherwise the value is null.
   */
  externalId?: string;
}

/**
 * User details.
 */
export interface UserContract extends Resource {
  /**
   * Account state. Specifies whether the user is active or not. Blocked users are unable to sign
   * into the developer portal or call any APIs of subscribed products. Default state is Active.
   * Possible values include: 'active', 'blocked', 'pending', 'deleted'. Default value: 'active'.
   */
  state?: UserState;
  /**
   * Optional note about a user set by the administrator.
   */
  note?: string;
  /**
   * Collection of user identities.
   */
  identities?: UserIdentityContract[];
  /**
   * First name.
   */
  firstName?: string;
  /**
   * Last name.
   */
  lastName?: string;
  /**
   * Email address.
   */
  email?: string;
  /**
   * Date of user registration. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ`
   * as specified by the ISO 8601 standard.
   */
  registrationDate?: Date;
  /**
   * Collection of groups user is part of.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly groups?: GroupContractProperties[];
}

/**
 * Parameters supplied to the Update Group operation.
 */
export interface GroupUpdateParameters {
  /**
   * Group name.
   */
  displayName?: string;
  /**
   * Group description.
   */
  description?: string;
  /**
   * Group type. Possible values include: 'custom', 'system', 'external'
   */
  type?: GroupType;
  /**
   * Identifier of the external groups, this property contains the id of the group from the
   * external identity provider, e.g. for Azure Active Directory
   * `aad://<tenant>.onmicrosoft.com/groups/<group object id>`; otherwise the value is null.
   */
  externalId?: string;
}

/**
 * Contract details.
 */
export interface GroupContract extends Resource {
  /**
   * Group name.
   */
  displayName: string;
  /**
   * Group description. Can contain HTML formatting tags.
   */
  description?: string;
  /**
   * true if the group is one of the three system groups (Administrators, Developers, or Guests);
   * otherwise false.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly builtIn?: boolean;
  /**
   * Group type. Possible values include: 'custom', 'system', 'external'
   */
  groupContractType?: GroupType;
  /**
   * For external groups, this property contains the id of the group from the external identity
   * provider, e.g. for Azure Active Directory `aad://<tenant>.onmicrosoft.com/groups/<group object
   * id>`; otherwise the value is null.
   */
  externalId?: string;
}

/**
 * Parameters supplied to the Create Group operation.
 */
export interface GroupCreateParameters {
  /**
   * Group name.
   */
  displayName: string;
  /**
   * Group description.
   */
  description?: string;
  /**
   * Group type. Possible values include: 'custom', 'system', 'external'
   */
  type?: GroupType;
  /**
   * Identifier of the external groups, this property contains the id of the group from the
   * external identity provider, e.g. for Azure Active Directory
   * `aad://<tenant>.onmicrosoft.com/groups/<group object id>`; otherwise the value is null.
   */
  externalId?: string;
}

/**
 * Identity Provider Base Parameter Properties.
 */
export interface IdentityProviderBaseParameters {
  /**
   * Identity Provider Type identifier. Possible values include: 'facebook', 'google', 'microsoft',
   * 'twitter', 'aad', 'aadB2C'
   */
  type?: IdentityProviderType;
  /**
   * The TenantId to use instead of Common when logging into Active Directory
   */
  signinTenant?: string;
  /**
   * List of Allowed Tenants when configuring Azure Active Directory login.
   */
  allowedTenants?: string[];
  /**
   * OpenID Connect discovery endpoint hostname for AAD or AAD B2C.
   */
  authority?: string;
  /**
   * Signup Policy Name. Only applies to AAD B2C Identity Provider.
   */
  signupPolicyName?: string;
  /**
   * Signin Policy Name. Only applies to AAD B2C Identity Provider.
   */
  signinPolicyName?: string;
  /**
   * Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.
   */
  profileEditingPolicyName?: string;
  /**
   * Password Reset Policy Name. Only applies to AAD B2C Identity Provider.
   */
  passwordResetPolicyName?: string;
}

/**
 * Parameters supplied to update Identity Provider
 */
export interface IdentityProviderUpdateParameters {
  /**
   * Identity Provider Type identifier. Possible values include: 'facebook', 'google', 'microsoft',
   * 'twitter', 'aad', 'aadB2C'
   */
  type?: IdentityProviderType;
  /**
   * The TenantId to use instead of Common when logging into Active Directory
   */
  signinTenant?: string;
  /**
   * List of Allowed Tenants when configuring Azure Active Directory login.
   */
  allowedTenants?: string[];
  /**
   * OpenID Connect discovery endpoint hostname for AAD or AAD B2C.
   */
  authority?: string;
  /**
   * Signup Policy Name. Only applies to AAD B2C Identity Provider.
   */
  signupPolicyName?: string;
  /**
   * Signin Policy Name. Only applies to AAD B2C Identity Provider.
   */
  signinPolicyName?: string;
  /**
   * Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.
   */
  profileEditingPolicyName?: string;
  /**
   * Password Reset Policy Name. Only applies to AAD B2C Identity Provider.
   */
  passwordResetPolicyName?: string;
  /**
   * Client Id of the Application in the external Identity Provider. It is App ID for Facebook
   * login, Client ID for Google login, App ID for Microsoft.
   */
  clientId?: string;
  /**
   * Client secret of the Application in external Identity Provider, used to authenticate login
   * request. For example, it is App Secret for Facebook login, API Key for Google login, Public
   * Key for Microsoft.
   */
  clientSecret?: string;
}

/**
 * Identity Provider details.
 */
export interface IdentityProviderContract extends Resource {
  /**
   * Identity Provider Type identifier. Possible values include: 'facebook', 'google', 'microsoft',
   * 'twitter', 'aad', 'aadB2C'
   */
  identityProviderContractType?: IdentityProviderType;
  /**
   * The TenantId to use instead of Common when logging into Active Directory
   */
  signinTenant?: string;
  /**
   * List of Allowed Tenants when configuring Azure Active Directory login.
   */
  allowedTenants?: string[];
  /**
   * OpenID Connect discovery endpoint hostname for AAD or AAD B2C.
   */
  authority?: string;
  /**
   * Signup Policy Name. Only applies to AAD B2C Identity Provider.
   */
  signupPolicyName?: string;
  /**
   * Signin Policy Name. Only applies to AAD B2C Identity Provider.
   */
  signinPolicyName?: string;
  /**
   * Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.
   */
  profileEditingPolicyName?: string;
  /**
   * Password Reset Policy Name. Only applies to AAD B2C Identity Provider.
   */
  passwordResetPolicyName?: string;
  /**
   * Client Id of the Application in the external Identity Provider. It is App ID for Facebook
   * login, Client ID for Google login, App ID for Microsoft.
   */
  clientId: string;
  /**
   * Client secret of the Application in external Identity Provider, used to authenticate login
   * request. For example, it is App Secret for Facebook login, API Key for Google login, Public
   * Key for Microsoft. This property will not be filled on 'GET' operations! Use '/listSecrets'
   * POST request to get the value.
   */
  clientSecret?: string;
}

/**
 * Identity Provider details.
 */
export interface IdentityProviderCreateContract extends Resource {
  /**
   * Identity Provider Type identifier. Possible values include: 'facebook', 'google', 'microsoft',
   * 'twitter', 'aad', 'aadB2C'
   */
  identityProviderCreateContractType?: IdentityProviderType;
  /**
   * The TenantId to use instead of Common when logging into Active Directory
   */
  signinTenant?: string;
  /**
   * List of Allowed Tenants when configuring Azure Active Directory login.
   */
  allowedTenants?: string[];
  /**
   * OpenID Connect discovery endpoint hostname for AAD or AAD B2C.
   */
  authority?: string;
  /**
   * Signup Policy Name. Only applies to AAD B2C Identity Provider.
   */
  signupPolicyName?: string;
  /**
   * Signin Policy Name. Only applies to AAD B2C Identity Provider.
   */
  signinPolicyName?: string;
  /**
   * Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.
   */
  profileEditingPolicyName?: string;
  /**
   * Password Reset Policy Name. Only applies to AAD B2C Identity Provider.
   */
  passwordResetPolicyName?: string;
  /**
   * Client Id of the Application in the external Identity Provider. It is App ID for Facebook
   * login, Client ID for Google login, App ID for Microsoft.
   */
  clientId: string;
  /**
   * Client secret of the Application in external Identity Provider, used to authenticate login
   * request. For example, it is App Secret for Facebook login, API Key for Google login, Public
   * Key for Microsoft. This property will not be filled on 'GET' operations! Use '/listSecrets'
   * POST request to get the value.
   */
  clientSecret: string;
}

/**
 * Logger update contract.
 */
export interface LoggerUpdateContract {
  /**
   * Logger type. Possible values include: 'azureEventHub', 'applicationInsights'
   */
  loggerType?: LoggerType;
  /**
   * Logger description.
   */
  description?: string;
  /**
   * Logger credentials.
   */
  credentials?: { [propertyName: string]: string };
  /**
   * Whether records are buffered in the logger before publishing. Default is assumed to be true.
   */
  isBuffered?: boolean;
}

/**
 * Logger details.
 */
export interface LoggerContract extends Resource {
  /**
   * Logger type. Possible values include: 'azureEventHub', 'applicationInsights'
   */
  loggerType: LoggerType;
  /**
   * Logger description.
   */
  description?: string;
  /**
   * The name and SendRule connection string of the event hub for azureEventHub logger.
   * Instrumentation key for applicationInsights logger.
   */
  credentials: { [propertyName: string]: string };
  /**
   * Whether records are buffered in the logger before publishing. Default is assumed to be true.
   */
  isBuffered?: boolean;
  /**
   * Azure Resource Id of a log target (either Azure Event Hub resource or Azure Application
   * Insights resource).
   */
  resourceId?: string;
}

/**
 * Client or app secret used in IdentityProviders, Aad, OpenID or OAuth.
 */
export interface PropertyValueContract {
  /**
   * This is secret value of the NamedValue entity.
   */
  value?: string;
}

/**
 * NamedValue Entity Base Parameters set.
 */
export interface NamedValueEntityBaseParameters {
  /**
   * Optional tags that when provided can be used to filter the NamedValue list.
   */
  tags?: string[];
  /**
   * Determines whether the value is a secret and should be encrypted or not. Default value is
   * false.
   */
  secret?: boolean;
}

/**
 * NamedValue details.
 */
export interface NamedValueContract extends Resource {
  /**
   * Optional tags that when provided can be used to filter the NamedValue list.
   */
  tags?: string[];
  /**
   * Determines whether the value is a secret and should be encrypted or not. Default value is
   * false.
   */
  secret?: boolean;
  /**
   * Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore
   * characters.
   */
  displayName: string;
  /**
   * Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only
   * of whitespace. This property will not be filled on 'GET' operations! Use '/listSecrets' POST
   * request to get the value.
   */
  value?: string;
}

/**
 * NamedValue update Parameters.
 */
export interface NamedValueUpdateParameters {
  /**
   * Optional tags that when provided can be used to filter the NamedValue list.
   */
  tags?: string[];
  /**
   * Determines whether the value is a secret and should be encrypted or not. Default value is
   * false.
   */
  secret?: boolean;
  /**
   * Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore
   * characters.
   */
  displayName?: string;
  /**
   * Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only
   * of whitespace.
   */
  value?: string;
}

/**
 * NamedValue details.
 */
export interface NamedValueCreateContract extends Resource {
  /**
   * Optional tags that when provided can be used to filter the NamedValue list.
   */
  tags?: string[];
  /**
   * Determines whether the value is a secret and should be encrypted or not. Default value is
   * false.
   */
  secret?: boolean;
  /**
   * Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore
   * characters.
   */
  displayName: string;
  /**
   * Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only
   * of whitespace. This property will not be filled on 'GET' operations! Use '/listSecrets' POST
   * request to get the value.
   */
  value: string;
}

/**
 * Details about connectivity to a resource.
 */
export interface ConnectivityStatusContract {
  /**
   * The hostname of the resource which the service depends on. This can be the database, storage
   * or any other azure resource on which the service depends upon.
   */
  name: string;
  /**
   * Resource Connectivity Status Type identifier. Possible values include: 'initializing',
   * 'success', 'failure'
   */
  status: ConnectivityStatusType;
  /**
   * Error details of the connectivity to the resource.
   */
  error?: string;
  /**
   * The date when the resource connectivity status was last updated. This status should be updated
   * every 15 minutes. If this status has not been updated, then it means that the service has lost
   * network connectivity to the resource, from inside the Virtual Network.The date conforms to the
   * following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   */
  lastUpdated: Date;
  /**
   * The date when the resource connectivity status last Changed from success to failure or
   * vice-versa. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by
   * the ISO 8601 standard.
   */
  lastStatusChange: Date;
}

/**
 * Network Status details.
 */
export interface NetworkStatusContract {
  /**
   * Gets the list of DNS servers IPV4 addresses.
   */
  dnsServers: string[];
  /**
   * Gets the list of Connectivity Status to the Resources on which the service depends upon.
   */
  connectivityStatus: ConnectivityStatusContract[];
}

/**
 * Network Status in the Location
 */
export interface NetworkStatusContractByLocation {
  /**
   * Location of service
   */
  location?: string;
  /**
   * Network status in Location
   */
  networkStatus?: NetworkStatusContract;
}

/**
 * Recipient Email details.
 */
export interface RecipientEmailContract extends Resource {
  /**
   * User Email subscribed to notification.
   */
  email?: string;
}

/**
 * Paged Recipient User list representation.
 */
export interface RecipientEmailCollection {
  /**
   * Page values.
   */
  value?: RecipientEmailContract[];
  /**
   * Next page link if any.
   */
  nextLink?: string;
}

/**
 * Recipient User details.
 */
export interface RecipientUserContract extends Resource {
  /**
   * API Management UserId subscribed to notification.
   */
  userId?: string;
}

/**
 * Paged Recipient User list representation.
 */
export interface RecipientUserCollection {
  /**
   * Page values.
   */
  value?: RecipientUserContract[];
  /**
   * Next page link if any.
   */
  nextLink?: string;
}

/**
 * Notification Parameter contract.
 */
export interface RecipientsContractProperties {
  /**
   * List of Emails subscribed for the notification.
   */
  emails?: string[];
  /**
   * List of Users subscribed for the notification.
   */
  users?: string[];
}

/**
 * Notification details.
 */
export interface NotificationContract extends Resource {
  /**
   * Title of the Notification.
   */
  title: string;
  /**
   * Description of the Notification.
   */
  description?: string;
  /**
   * Recipient Parameter values.
   */
  recipients?: RecipientsContractProperties;
}

/**
 * Parameters supplied to the Update OpenID Connect Provider operation.
 */
export interface OpenidConnectProviderUpdateContract {
  /**
   * User-friendly OpenID Connect Provider name.
   */
  displayName?: string;
  /**
   * User-friendly description of OpenID Connect Provider.
   */
  description?: string;
  /**
   * Metadata endpoint URI.
   */
  metadataEndpoint?: string;
  /**
   * Client ID of developer console which is the client application.
   */
  clientId?: string;
  /**
   * Client Secret of developer console which is the client application.
   */
  clientSecret?: string;
}

/**
 * OpenId Connect Provider details.
 */
export interface OpenidConnectProviderContract extends Resource {
  /**
   * User-friendly OpenID Connect Provider name.
   */
  displayName: string;
  /**
   * User-friendly description of OpenID Connect Provider.
   */
  description?: string;
  /**
   * Metadata endpoint URI.
   */
  metadataEndpoint: string;
  /**
   * Client ID of developer console which is the client application.
   */
  clientId: string;
  /**
   * Client Secret of developer console which is the client application.
   */
  clientSecret?: string;
}

/**
 * Policy description details.
 */
export interface PolicyDescriptionContract extends Resource {
  /**
   * Policy description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Binary OR value of the Snippet scope.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly scope?: number;
}

/**
 * Descriptions of APIM policies.
 */
export interface PolicyDescriptionCollection {
  /**
   * Descriptions of APIM policies.
   */
  value?: PolicyDescriptionContract[];
  /**
   * Total record count number.
   */
  count?: number;
}

/**
 * Client or app secret used in IdentityProviders, Aad, OpenID or OAuth.
 */
export interface PortalSettingValidationKeyContract {
  /**
   * This is secret value of the validation key in portal settings.
   */
  validationKey?: string;
}

/**
 * User registration delegation settings properties.
 */
export interface RegistrationDelegationSettingsProperties {
  /**
   * Enable or disable delegation for user registration.
   */
  enabled?: boolean;
}

/**
 * Subscriptions delegation settings properties.
 */
export interface SubscriptionsDelegationSettingsProperties {
  /**
   * Enable or disable delegation for subscriptions.
   */
  enabled?: boolean;
}

/**
 * Delegation settings for a developer portal.
 */
export interface PortalDelegationSettings extends Resource {
  /**
   * A delegation Url.
   */
  url?: string;
  /**
   * A base64-encoded validation key to validate, that a request is coming from Azure API
   * Management.
   */
  validationKey?: string;
  /**
   * Subscriptions delegation settings.
   */
  subscriptions?: SubscriptionsDelegationSettingsProperties;
  /**
   * User registration delegation settings.
   */
  userRegistration?: RegistrationDelegationSettingsProperties;
}

/**
 * Terms of service contract properties.
 */
export interface TermsOfServiceProperties {
  /**
   * A terms of service text.
   */
  text?: string;
  /**
   * Display terms of service during a sign-up process.
   */
  enabled?: boolean;
  /**
   * Ask user for consent to the terms of service.
   */
  consentRequired?: boolean;
}

/**
 * Sign-Up settings for a developer portal.
 */
export interface PortalSignupSettings extends Resource {
  /**
   * Allow users to sign up on a developer portal.
   */
  enabled?: boolean;
  /**
   * Terms of service contract properties.
   */
  termsOfService?: TermsOfServiceProperties;
}

/**
 * Sign-In settings for the Developer Portal.
 */
export interface PortalSigninSettings extends Resource {
  /**
   * Redirect Anonymous users to the Sign-In page.
   */
  enabled?: boolean;
}

/**
 * Subscription details.
 */
export interface SubscriptionContract extends Resource {
  /**
   * The user resource identifier of the subscription owner. The value is a valid relative URL in
   * the format of /users/{userId} where {userId} is a user identifier.
   */
  ownerId?: string;
  /**
   * Scope like /products/{productId} or /apis or /apis/{apiId}.
   */
  scope: string;
  /**
   * The name of the subscription, or null if the subscription has no name.
   */
  displayName?: string;
  /**
   * Subscription state. Possible states are * active – the subscription is active, * suspended –
   * the subscription is blocked, and the subscriber cannot call any APIs of the product, *
   * submitted – the subscription request has been made by the developer, but has not yet been
   * approved or rejected, * rejected – the subscription request has been denied by an
   * administrator, * cancelled – the subscription has been cancelled by the developer or
   * administrator, * expired – the subscription reached its expiration date and was deactivated.
   * Possible values include: 'suspended', 'active', 'expired', 'submitted', 'rejected',
   * 'cancelled'
   */
  state: SubscriptionState;
  /**
   * Subscription creation date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ`
   * as specified by the ISO 8601 standard.
   *
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdDate?: Date;
  /**
   * Subscription activation date. The setting is for audit purposes only and the subscription is
   * not automatically activated. The subscription lifecycle can be managed by using the `state`
   * property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by
   * the ISO 8601 standard.
   */
  startDate?: Date;
  /**
   * Subscription expiration date. The setting is for audit purposes only and the subscription is
   * not automatically expired. The subscription lifecycle can be managed by using the `state`
   * property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by
   * the ISO 8601 standard.
   */
  expirationDate?: Date;
  /**
   * Date when subscription was cancelled or expired. The setting is for audit purposes only and
   * the subscription is not automatically cancelled. The subscription lifecycle can be managed by
   * using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ`
   * as specified by the ISO 8601 standard.
   */
  endDate?: Date;
  /**
   * Upcoming subscription expiration notification date. The date conforms to the following format:
   * `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   */
  notificationDate?: Date;
  /**
   * Subscription primary key. This property will not be filled on 'GET' operations! Use
   * '/listSecrets' POST request to get the value.
   */
  primaryKey?: string;
  /**
   * Subscription secondary key. This property will not be filled on 'GET' operations! Use
   * '/listSecrets' POST request to get the value.
   */
  secondaryKey?: string;
  /**
   * Optional subscription comment added by an administrator.
   */
  stateComment?: string;
  /**
   * Determines whether tracing is enabled
   */
  allowTracing?: boolean;
}

/**
 * Product Update parameters.
 */
export interface ProductUpdateParameters {
  /**
   * Product description. May include HTML formatting tags.
   */
  description?: string;
  /**
   * Product terms of use. Developers trying to subscribe to the product will be presented and
   * required to accept these terms before they can complete the subscription process.
   */
  terms?: string;
  /**
   * Whether a product subscription is required for accessing APIs included in this product. If
   * true, the product is referred to as "protected" and a valid subscription key is required for a
   * request to an API included in the product to succeed. If false, the product is referred to as
   * "open" and requests to an API included in the product can be made without a subscription key.
   * If property is omitted when creating a new product it's value is assumed to be true.
   */
  subscriptionRequired?: boolean;
  /**
   * whether subscription approval is required. If false, new subscriptions will be approved
   * automatically enabling developers to call the product’s APIs immediately after subscribing. If
   * true, administrators must manually approve the subscription before the developer can any of
   * the product’s APIs. Can be present only if subscriptionRequired property is present and has a
   * value of false.
   */
  approvalRequired?: boolean;
  /**
   * Whether the number of subscriptions a user can have to this product at the same time. Set to
   * null or omit to allow unlimited per user subscriptions. Can be present only if
   * subscriptionRequired property is present and has a value of false.
   */
  subscriptionsLimit?: number;
  /**
   * whether product is published or not. Published products are discoverable by users of developer
   * portal. Non published products are visible only to administrators. Default state of Product is
   * notPublished. Possible values include: 'notPublished', 'published'
   */
  state?: ProductState;
  /**
   * Product name.
   */
  displayName?: string;
}

/**
 * Quota counter value details.
 */
export interface QuotaCounterValueContractProperties {
  /**
   * Number of times Counter was called.
   */
  callsCount?: number;
  /**
   * Data Transferred in KiloBytes.
   */
  kbTransferred?: number;
}

/**
 * Quota counter details.
 */
export interface QuotaCounterContract {
  /**
   * The Key value of the Counter. Must not be empty.
   */
  counterKey: string;
  /**
   * Identifier of the Period for which the counter was collected. Must not be empty.
   */
  periodKey: string;
  /**
   * The date of the start of Counter Period. The date conforms to the following format:
   * `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   */
  periodStartTime: Date;
  /**
   * The date of the end of Counter Period. The date conforms to the following format:
   * `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   */
  periodEndTime: Date;
  /**
   * Quota Value Properties
   */
  value?: QuotaCounterValueContractProperties;
}

/**
 * Paged Quota Counter list representation.
 */
export interface QuotaCounterCollection {
  /**
   * Quota counter values.
   */
  value?: QuotaCounterContract[];
  /**
   * Total record count number across all pages.
   */
  count?: number;
  /**
   * Next page link if any.
   */
  nextLink?: string;
}

/**
 * Request Report data.
 */
export interface RequestReportRecordContract {
  /**
   * API identifier path. /apis/{apiId}
   */
  apiId?: string;
  /**
   * Operation identifier path. /apis/{apiId}/operations/{operationId}
   */
  operationId?: string;
  /**
   * Product identifier path. /products/{productId}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly productId?: string;
  /**
   * User identifier path. /users/{userId}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly userId?: string;
  /**
   * The HTTP method associated with this request..
   */
  method?: string;
  /**
   * The full URL associated with this request.
   */
  url?: string;
  /**
   * The client IP address associated with this request.
   */
  ipAddress?: string;
  /**
   * The HTTP status code received by the gateway as a result of forwarding this request to the
   * backend.
   */
  backendResponseCode?: string;
  /**
   * The HTTP status code returned by the gateway.
   */
  responseCode?: number;
  /**
   * The size of the response returned by the gateway.
   */
  responseSize?: number;
  /**
   * The date and time when this request was received by the gateway in ISO 8601 format.
   */
  timestamp?: Date;
  /**
   * Specifies if response cache was involved in generating the response. If the value is none, the
   * cache was not used. If the value is hit, cached response was returned. If the value is miss,
   * the cache was used but lookup resulted in a miss and request was fulfilled by the backend.
   */
  cache?: string;
  /**
   * The total time it took to process this request.
   */
  apiTime?: number;
  /**
   * he time it took to forward this request to the backend and get the response back.
   */
  serviceTime?: number;
  /**
   * Azure region where the gateway that processed this request is located.
   */
  apiRegion?: string;
  /**
   * Subscription identifier path. /subscriptions/{subscriptionId}
   */
  subscriptionId?: string;
  /**
   * Request Identifier.
   */
  requestId?: string;
  /**
   * The size of this request..
   */
  requestSize?: number;
}

/**
 * Report data.
 */
export interface ReportRecordContract {
  /**
   * Name depending on report endpoint specifies product, API, operation or developer name.
   */
  name?: string;
  /**
   * Start of aggregation period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ`
   * as specified by the ISO 8601 standard.
   */
  timestamp?: Date;
  /**
   * Length of aggregation period.  Interval must be multiple of 15 minutes and may not be zero.
   * The value should be in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).
   */
  interval?: string;
  /**
   * Country to which this record data is related.
   */
  country?: string;
  /**
   * Country region to which this record data is related.
   */
  region?: string;
  /**
   * Zip code to which this record data is related.
   */
  zip?: string;
  /**
   * User identifier path. /users/{userId}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly userId?: string;
  /**
   * Product identifier path. /products/{productId}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly productId?: string;
  /**
   * API identifier path. /apis/{apiId}
   */
  apiId?: string;
  /**
   * Operation identifier path. /apis/{apiId}/operations/{operationId}
   */
  operationId?: string;
  /**
   * API region identifier.
   */
  apiRegion?: string;
  /**
   * Subscription identifier path. /subscriptions/{subscriptionId}
   */
  subscriptionId?: string;
  /**
   * Number of successful calls. This includes calls returning HttpStatusCode <= 301 and
   * HttpStatusCode.NotModified and HttpStatusCode.TemporaryRedirect
   */
  callCountSuccess?: number;
  /**
   * Number of calls blocked due to invalid credentials. This includes calls returning
   * HttpStatusCode.Unauthorized and HttpStatusCode.Forbidden and HttpStatusCode.TooManyRequests
   */
  callCountBlocked?: number;
  /**
   * Number of calls failed due to proxy or backend errors. This includes calls returning
   * HttpStatusCode.BadRequest(400) and any Code between HttpStatusCode.InternalServerError (500)
   * and 600
   */
  callCountFailed?: number;
  /**
   * Number of other calls.
   */
  callCountOther?: number;
  /**
   * Total number of calls.
   */
  callCountTotal?: number;
  /**
   * Bandwidth consumed.
   */
  bandwidth?: number;
  /**
   * Number of times when content was served from cache policy.
   */
  cacheHitCount?: number;
  /**
   * Number of times content was fetched from backend.
   */
  cacheMissCount?: number;
  /**
   * Average time it took to process request.
   */
  apiTimeAvg?: number;
  /**
   * Minimum time it took to process request.
   */
  apiTimeMin?: number;
  /**
   * Maximum time it took to process request.
   */
  apiTimeMax?: number;
  /**
   * Average time it took to process request on backend.
   */
  serviceTimeAvg?: number;
  /**
   * Minimum time it took to process request on backend.
   */
  serviceTimeMin?: number;
  /**
   * Maximum time it took to process request on backend.
   */
  serviceTimeMax?: number;
}

/**
 * Subscription keys.
 */
export interface SubscriptionKeysContract {
  /**
   * Subscription primary key.
   */
  primaryKey?: string;
  /**
   * Subscription secondary key.
   */
  secondaryKey?: string;
}

/**
 * Subscription update details.
 */
export interface SubscriptionUpdateParameters {
  /**
   * User identifier path: /users/{userId}
   */
  ownerId?: string;
  /**
   * Scope like /products/{productId} or /apis or /apis/{apiId}
   */
  scope?: string;
  /**
   * Subscription expiration date. The setting is for audit purposes only and the subscription is
   * not automatically expired. The subscription lifecycle can be managed by using the `state`
   * property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by
   * the ISO 8601 standard.
   */
  expirationDate?: Date;
  /**
   * Subscription name.
   */
  displayName?: string;
  /**
   * Primary subscription key.
   */
  primaryKey?: string;
  /**
   * Secondary subscription key.
   */
  secondaryKey?: string;
  /**
   * Subscription state. Possible states are * active – the subscription is active, * suspended –
   * the subscription is blocked, and the subscriber cannot call any APIs of the product, *
   * submitted – the subscription request has been made by the developer, but has not yet been
   * approved or rejected, * rejected – the subscription request has been denied by an
   * administrator, * cancelled – the subscription has been cancelled by the developer or
   * administrator, * expired – the subscription reached its expiration date and was deactivated.
   * Possible values include: 'suspended', 'active', 'expired', 'submitted', 'rejected',
   * 'cancelled'
   */
  state?: SubscriptionState;
  /**
   * Comments describing subscription state change by the administrator.
   */
  stateComment?: string;
  /**
   * Determines whether tracing can be enabled
   */
  allowTracing?: boolean;
}

/**
 * Subscription create details.
 */
export interface SubscriptionCreateParameters {
  /**
   * User (user id path) for whom subscription is being created in form /users/{userId}
   */
  ownerId?: string;
  /**
   * Scope like /products/{productId} or /apis or /apis/{apiId}.
   */
  scope: string;
  /**
   * Subscription name.
   */
  displayName: string;
  /**
   * Primary subscription key. If not specified during request key will be generated automatically.
   */
  primaryKey?: string;
  /**
   * Secondary subscription key. If not specified during request key will be generated
   * automatically.
   */
  secondaryKey?: string;
  /**
   * Initial subscription state. If no value is specified, subscription is created with Submitted
   * state. Possible states are * active – the subscription is active, * suspended – the
   * subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted –
   * the subscription request has been made by the developer, but has not yet been approved or
   * rejected, * rejected – the subscription request has been denied by an administrator, *
   * cancelled – the subscription has been cancelled by the developer or administrator, * expired –
   * the subscription reached its expiration date and was deactivated. Possible values include:
   * 'suspended', 'active', 'expired', 'submitted', 'rejected', 'cancelled'
   */
  state?: SubscriptionState;
  /**
   * Determines whether tracing can be enabled
   */
  allowTracing?: boolean;
}

/**
 * Parameters supplied to Create/Update Tag operations.
 */
export interface TagCreateUpdateParameters {
  /**
   * Tag name.
   */
  displayName: string;
}

/**
 * Tenant Configuration Synchronization State.
 */
export interface TenantConfigurationSyncStateContract {
  /**
   * The name of Git branch.
   */
  branch?: string;
  /**
   * The latest commit Id.
   */
  commitId?: string;
  /**
   * value indicating if last sync was save (true) or deploy (false) operation.
   */
  isExport?: boolean;
  /**
   * value indicating if last synchronization was later than the configuration change.
   */
  isSynced?: boolean;
  /**
   * value indicating whether Git configuration access is enabled.
   */
  isGitEnabled?: boolean;
  /**
   * The date of the latest synchronization. The date conforms to the following format:
   * `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   */
  syncDate?: Date;
  /**
   * The date of the latest configuration change. The date conforms to the following format:
   * `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   */
  configurationChangeDate?: Date;
}

/**
 * Log of the entity being created, updated or deleted.
 */
export interface OperationResultLogItemContract {
  /**
   * The type of entity contract.
   */
  objectType?: string;
  /**
   * Action like create/update/delete.
   */
  action?: string;
  /**
   * Identifier of the entity being created/updated/deleted.
   */
  objectKey?: string;
}

/**
 * Operation Result.
 */
export interface OperationResultContract {
  /**
   * Operation result identifier.
   */
  id?: string;
  /**
   * Status of an async operation. Possible values include: 'Started', 'InProgress', 'Succeeded',
   * 'Failed'
   */
  status?: AsyncOperationStatus;
  /**
   * Start time of an async operation. The date conforms to the following format:
   * `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   */
  started?: Date;
  /**
   * Last update time of an async operation. The date conforms to the following format:
   * `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   */
  updated?: Date;
  /**
   * Optional result info.
   */
  resultInfo?: string;
  /**
   * Error Body Contract
   */
  error?: ErrorResponseBody;
  /**
   * This property if only provided as part of the TenantConfiguration_Validate operation. It
   * contains the log the entities which will be updated/created/deleted as part of the
   * TenantConfiguration_Deploy operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly actionLog?: OperationResultLogItemContract[];
}

/**
 * Deploy Tenant Configuration Contract.
 */
export interface DeployConfigurationParameters {
  /**
   * The name of the Git branch from which the configuration is to be deployed to the configuration
   * database.
   */
  branch: string;
  /**
   * The value enforcing deleting subscriptions to products that are deleted in this update.
   */
  force?: boolean;
}

/**
 * Save Tenant Configuration Contract details.
 */
export interface SaveConfigurationParameter {
  /**
   * The name of the Git branch in which to commit the current configuration snapshot.
   */
  branch: string;
  /**
   * The value if true, the current configuration database is committed to the Git repository, even
   * if the Git repository has newer changes that would be overwritten.
   */
  force?: boolean;
}

/**
 * Tenant access information contract of the API Management service.
 */
export interface AccessInformationContract {
  /**
   * Identifier.
   */
  id?: string;
  /**
   * Primary access key. This property will not be filled on 'GET' operations! Use '/listSecrets'
   * POST request to get the value.
   */
  primaryKey?: string;
  /**
   * Secondary access key. This property will not be filled on 'GET' operations! Use '/listSecrets'
   * POST request to get the value.
   */
  secondaryKey?: string;
  /**
   * Determines whether direct access is enabled.
   */
  enabled?: boolean;
}

/**
 * Tenant access information update parameters.
 */
export interface AccessInformationUpdateParameters {
  /**
   * Determines whether direct access is enabled.
   */
  enabled?: boolean;
}

/**
 * Get User Token response details.
 */
export interface UserTokenResult {
  /**
   * Shared Access Authorization token for the User.
   */
  value?: string;
}

/**
 * Get User Token parameters.
 */
export interface UserTokenParameters {
  /**
   * The Key to be used to generate token for user. Possible values include: 'primary',
   * 'secondary'. Default value: 'primary'.
   */
  keyType: KeyType;
  /**
   * The Expiry time of the Token. Maximum token expiry time is set to 30 days. The date conforms
   * to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   */
  expiry: Date;
}

/**
 * Generate SSO Url operations response details.
 */
export interface GenerateSsoUrlResult {
  /**
   * Redirect Url containing the SSO URL value.
   */
  value?: string;
}

/**
 * User update parameters.
 */
export interface UserUpdateParameters {
  /**
   * Account state. Specifies whether the user is active or not. Blocked users are unable to sign
   * into the developer portal or call any APIs of subscribed products. Default state is Active.
   * Possible values include: 'active', 'blocked', 'pending', 'deleted'. Default value: 'active'.
   */
  state?: UserState;
  /**
   * Optional note about a user set by the administrator.
   */
  note?: string;
  /**
   * Collection of user identities.
   */
  identities?: UserIdentityContract[];
  /**
   * Email address. Must not be empty and must be unique within the service instance.
   */
  email?: string;
  /**
   * User Password.
   */
  password?: string;
  /**
   * First name.
   */
  firstName?: string;
  /**
   * Last name.
   */
  lastName?: string;
}

/**
 * User create details.
 */
export interface UserCreateParameters {
  /**
   * Account state. Specifies whether the user is active or not. Blocked users are unable to sign
   * into the developer portal or call any APIs of subscribed products. Default state is Active.
   * Possible values include: 'active', 'blocked', 'pending', 'deleted'. Default value: 'active'.
   */
  state?: UserState;
  /**
   * Optional note about a user set by the administrator.
   */
  note?: string;
  /**
   * Collection of user identities.
   */
  identities?: UserIdentityContract[];
  /**
   * Email address. Must not be empty and must be unique within the service instance.
   */
  email: string;
  /**
   * First name.
   */
  firstName: string;
  /**
   * Last name.
   */
  lastName: string;
  /**
   * User Password. If no value is provided, a default password is generated.
   */
  password?: string;
  /**
   * Determines the type of application which send the create user request. Default is old
   * publisher portal. Possible values include: 'developerPortal'
   */
  appType?: AppType;
  /**
   * Determines the type of confirmation e-mail that will be sent to the newly created user.
   * Possible values include: 'signup', 'invite'
   */
  confirmation?: Confirmation;
}

/**
 * Object used to create an API Revision or Version based on an existing API Revision
 */
export interface ApiRevisionInfoContract {
  /**
   * Resource identifier of API to be used to create the revision from.
   */
  sourceApiId?: string;
  /**
   * Version identifier for the new API Version.
   */
  apiVersionName?: string;
  /**
   * Description of new API Revision.
   */
  apiRevisionDescription?: string;
  /**
   * Version set details
   */
  apiVersionSet?: ApiVersionSetContractDetails;
}

/**
 * Quota counter value details.
 */
export interface QuotaCounterValueContract {
  /**
   * Number of times Counter was called.
   */
  callsCount?: number;
  /**
   * Data Transferred in KiloBytes.
   */
  kbTransferred?: number;
}

/**
 * Optional Parameters.
 */
export interface ApiListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| displayName | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| description |
   * filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>|
   * serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
   * </br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
   * </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
  /**
   * Include tags in the response.
   */
  tags?: string;
  /**
   * Include full ApiVersionSet resource in response
   */
  expandApiVersionSet?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ApiCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface ApiDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Delete all revisions of the Api.
   */
  deleteRevisions?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ApiListByTagsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * | Field       | Supported operators    | Supported functions               |
   * |-------------|------------------------|-----------------------------------|
   *
   * |name | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith|
   * |displayName | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith|
   * |apiRevision | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith|
   * |path | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith|
   * |description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith|
   * |serviceUrl | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith|
   * |isCurrent | eq |    |
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
  /**
   * Include not tagged APIs.
   */
  includeNotTaggedApis?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ApiBeginCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface ApiRevisionListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| apiRevision | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface ApiReleaseListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| notes | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface ApiReleaseCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface ApiOperationListByApiOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| displayName | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| method | filter
   * | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| description |
   * filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>|
   * urlTemplate | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
   * </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
  /**
   * Include tags in the response.
   */
  tags?: string;
}

/**
 * Optional Parameters.
 */
export interface ApiOperationCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface ApiOperationPolicyGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Policy Export Format. Possible values include: 'xml', 'rawxml'. Default value: 'xml'.
   */
  format?: PolicyExportFormat;
}

/**
 * Optional Parameters.
 */
export interface ApiOperationPolicyCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface TagListByOperationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| name | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface TagListByApiOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| name | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface TagListByProductOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| name | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface TagListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| displayName | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
  /**
   * Scope like 'apis', 'products' or 'apis/{apiId}
   */
  scope?: string;
}

/**
 * Optional Parameters.
 */
export interface TagCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface ApiProductListByApisOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface ApiPolicyGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Policy Export Format. Possible values include: 'xml', 'rawxml'. Default value: 'xml'.
   */
  format?: PolicyExportFormat;
}

/**
 * Optional Parameters.
 */
export interface ApiPolicyCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface ApiSchemaListByApiOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| contentType | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface ApiSchemaCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface ApiSchemaDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If true removes all references to the schema before deleting it.
   */
  force?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ApiSchemaBeginCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface ApiDiagnosticListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface ApiDiagnosticCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface ApiIssueListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| userId | filter | ge,
   * le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| state | filter | eq
   * |     | </br>
   */
  filter?: string;
  /**
   * Expand the comment attachments.
   */
  expandCommentsAttachments?: boolean;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface ApiIssueGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Expand the comment attachments.
   */
  expandCommentsAttachments?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ApiIssueCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface ApiIssueCommentListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| userId | filter | ge,
   * le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface ApiIssueCommentCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface ApiIssueAttachmentListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| userId | filter | ge,
   * le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface ApiIssueAttachmentCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface ApiTagDescriptionListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| name | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface ApiTagDescriptionCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface OperationListByTagsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| displayName | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| apiName | filter
   * | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| description |
   * filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| method
   * | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>|
   * urlTemplate | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
   * </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
  /**
   * Include not tagged Operations.
   */
  includeNotTaggedOperations?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ApiVersionSetListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface ApiVersionSetCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface AuthorizationServerListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| displayName | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface AuthorizationServerCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface BackendListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| title | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| url | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface BackendCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface BackendReconnectOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Reconnect request parameters.
   */
  parameters?: BackendReconnectContract;
}

/**
 * Optional Parameters.
 */
export interface CacheListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface CacheCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface CertificateListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| subject | filter | ge,
   * le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| thumbprint | filter
   * | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| expirationDate
   * | filter | ge, le, eq, ne, gt, lt |     | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface CertificateCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface ApiManagementServiceApplyNetworkConfigurationUpdatesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Parameters supplied to the Apply Network Configuration operation. If the parameters are empty,
   * all the regions in which the Api Management service is deployed will be updated sequentially
   * without incurring downtime in the region.
   */
  parameters?: ApiManagementServiceApplyNetworkConfigurationParameters;
}

/**
 * Optional Parameters.
 */
export interface ApiManagementServiceBeginApplyNetworkConfigurationUpdatesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Parameters supplied to the Apply Network Configuration operation. If the parameters are empty,
   * all the regions in which the Api Management service is deployed will be updated sequentially
   * without incurring downtime in the region.
   */
  parameters?: ApiManagementServiceApplyNetworkConfigurationParameters;
}

/**
 * Optional Parameters.
 */
export interface DiagnosticListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface DiagnosticCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface EmailTemplateListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface EmailTemplateCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface GatewayListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface GatewayCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface GatewayHostnameConfigurationListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface GatewayApiListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface GatewayApiCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  parameters?: AssociationContract;
}

/**
 * Optional Parameters.
 */
export interface GroupListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| displayName | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| description |
   * filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>|
   * aadObjectId | filter | eq |     | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface GroupCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface GroupUserListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| firstName | filter | ge,
   * le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| lastName | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| email | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| registrationDate
   * | filter | ge, le, eq, ne, gt, lt |     | </br>| note | filter | ge, le, eq, ne, gt, lt |
   * substringof, contains, startswith, endswith | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface IdentityProviderCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface IssueListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| apiId | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| title | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| description | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| authorName |
   * filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| state |
   * filter | eq |     | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface LoggerListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| description | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| loggerType |
   * filter | eq |     | </br>| resourceId | filter | ge, le, eq, ne, gt, lt | substringof,
   * contains, startswith, endswith | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface LoggerCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface LoggerDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Force deletion even if diagnostic is attached.
   */
  force?: boolean;
}

/**
 * Optional Parameters.
 */
export interface NamedValueListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| tags | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith, any, all | </br>| displayName |
   * filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface NamedValueCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface NamedValueBeginCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface NotificationListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface NotificationCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface OpenIdConnectProviderListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| displayName | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface OpenIdConnectProviderCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface PolicyGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Policy Export Format. Possible values include: 'xml', 'rawxml'. Default value: 'xml'.
   */
  format?: PolicyExportFormat;
}

/**
 * Optional Parameters.
 */
export interface PolicyCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface PolicyDescriptionListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Policy scope. Possible values include: 'Tenant', 'Product', 'Api', 'Operation', 'All'
   */
  scope?: PolicyScopeContract;
}

/**
 * Optional Parameters.
 */
export interface SignInSettingsCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface SignUpSettingsCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface DelegationSettingsCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface ProductListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| displayName | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| description |
   * filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| terms |
   * filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| state |
   * filter | eq |     | </br>| groups | expand |     |     | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
  /**
   * When set to true, the response contains an array of groups that have visibility to the
   * product. The default is false.
   */
  expandGroups?: boolean;
  /**
   * Products which are part of a specific tag.
   */
  tags?: string;
}

/**
 * Optional Parameters.
 */
export interface ProductCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface ProductDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Delete existing subscriptions associated with the product or not.
   */
  deleteSubscriptions?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ProductListByTagsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| displayName | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| description |
   * filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| terms |
   * filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| state |
   * filter | eq | substringof, contains, startswith, endswith | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
  /**
   * Include not tagged Products.
   */
  includeNotTaggedProducts?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ProductApiListByProductOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| displayName | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| description |
   * filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>|
   * serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
   * </br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
   * </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface ProductGroupListByProductOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le,
   * eq, ne, gt, lt |     | </br>| displayName | filter | eq, ne |     | </br>| description |
   * filter | eq, ne |     | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface ProductSubscriptionsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| displayName | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| stateComment |
   * filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| ownerId
   * | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| scope
   * | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>|
   * userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
   * </br>| productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith,
   * endswith | </br>| state | filter | eq |     | </br>| user | expand |     |     | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface ProductPolicyGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Policy Export Format. Possible values include: 'xml', 'rawxml'. Default value: 'xml'.
   */
  format?: PolicyExportFormat;
}

/**
 * Optional Parameters.
 */
export interface ProductPolicyCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface ReportsListByApiOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
  /**
   * OData order by query option.
   */
  orderby?: string;
}

/**
 * Optional Parameters.
 */
export interface ReportsListByUserOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
  /**
   * OData order by query option.
   */
  orderby?: string;
}

/**
 * Optional Parameters.
 */
export interface ReportsListByOperationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
  /**
   * OData order by query option.
   */
  orderby?: string;
}

/**
 * Optional Parameters.
 */
export interface ReportsListByProductOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
  /**
   * OData order by query option.
   */
  orderby?: string;
}

/**
 * Optional Parameters.
 */
export interface ReportsListByGeoOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface ReportsListBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
  /**
   * OData order by query option.
   */
  orderby?: string;
}

/**
 * Optional Parameters.
 */
export interface ReportsListByTimeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
  /**
   * OData order by query option.
   */
  orderby?: string;
}

/**
 * Optional Parameters.
 */
export interface ReportsListByRequestOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface SubscriptionListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| displayName | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| stateComment |
   * filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| ownerId
   * | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| scope
   * | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>|
   * userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
   * </br>| productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith,
   * endswith | </br>| state | filter | eq |     | </br>| user | expand |     |     | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface SubscriptionCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Notify change in Subscription State.
   * - If false, do not send any email notification for change of state of subscription
   * - If true, send email notification of change of state of subscription
   */
  notify?: boolean;
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface SubscriptionUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Notify change in Subscription State.
   * - If false, do not send any email notification for change of state of subscription
   * - If true, send email notification of change of state of subscription
   */
  notify?: boolean;
}

/**
 * Optional Parameters.
 */
export interface TagResourceListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| aid | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| name | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| displayName | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| apiName | filter
   * | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| apiRevision |
   * filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| path |
   * filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>|
   * description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
   * </br>| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith,
   * endswith | </br>| method | filter | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith | </br>| urlTemplate | filter | ge, le, eq, ne, gt, lt | substringof,
   * contains, startswith, endswith | </br>| terms | filter | ge, le, eq, ne, gt, lt | substringof,
   * contains, startswith, endswith | </br>| state | filter | eq |     | </br>| isCurrent | filter
   * | eq |     | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface UserListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| firstName | filter | ge,
   * le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| lastName | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| email | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| state | filter |
   * eq |     | </br>| registrationDate | filter | ge, le, eq, ne, gt, lt |     | </br>| note |
   * filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| groups
   * | expand |     |     | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
  /**
   * Detailed Group in response.
   */
  expandGroups?: boolean;
}

/**
 * Optional Parameters.
 */
export interface UserCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the Entity. Not required when creating an entity, but required when updating an
   * entity.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface UserDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether to delete user's subscription or not.
   */
  deleteSubscriptions?: boolean;
  /**
   * Send an Account Closed Email notification to the User.
   */
  notify?: boolean;
}

/**
 * Optional Parameters.
 */
export interface UserGroupListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| displayName | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| description |
   * filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface UserSubscriptionListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * |   Field     |     Usage     |     Supported operators     |     Supported functions
   * |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le,
   * eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| displayName | filter |
   * ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| stateComment |
   * filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| ownerId
   * | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| scope
   * | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>|
   * userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
   * </br>| productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith,
   * endswith | </br>
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Number of records to skip.
   */
  skip?: number;
}

/**
 * An interface representing ApiManagementClientOptions.
 */
export interface ApiManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface ApiGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface ApiGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface ApiCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface ApiReleaseGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface ApiReleaseGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface ApiReleaseCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface ApiOperationGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface ApiOperationGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface ApiOperationCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface ApiOperationPolicyGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface ApiOperationPolicyGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface ApiOperationPolicyCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityStateByOperation operation.
 */
export interface TagGetEntityStateByOperationHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetByOperation operation.
 */
export interface TagGetByOperationHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface ApiPolicyGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface ApiPolicyGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface ApiPolicyCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface ApiSchemaGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface ApiSchemaGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface ApiSchemaCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface ApiDiagnosticGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface ApiDiagnosticGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface ApiDiagnosticCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface ApiIssueGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface ApiIssueGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface ApiIssueCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface ApiIssueCommentGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface ApiIssueCommentGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface ApiIssueCommentCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface ApiIssueAttachmentGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface ApiIssueAttachmentGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface ApiIssueAttachmentCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface ApiTagDescriptionGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface ApiTagDescriptionGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface ApiTagDescriptionCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityStateByApi operation.
 */
export interface TagGetEntityStateByApiHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetByApi operation.
 */
export interface TagGetByApiHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for AssignToApi operation.
 */
export interface TagAssignToApiHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface ApiVersionSetGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface ApiVersionSetGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface ApiVersionSetCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface AuthorizationServerGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface AuthorizationServerGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface AuthorizationServerCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface BackendGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface BackendGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface BackendCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface CacheGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface CacheGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface CacheCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface CertificateGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface CertificateGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface CertificateCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface DiagnosticGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface DiagnosticGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface DiagnosticCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface EmailTemplateGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface EmailTemplateGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface GatewayGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface GatewayGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface GatewayCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for ListKeys operation.
 */
export interface GatewayListKeysHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface GatewayHostnameConfigurationGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface GatewayHostnameConfigurationGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface GatewayHostnameConfigurationCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface GatewayApiGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface GroupGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface GroupGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface GroupCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface IdentityProviderGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface IdentityProviderGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface IdentityProviderCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface IssueGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface LoggerGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface LoggerGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface LoggerCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface NamedValueGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface NamedValueGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface NamedValueCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Update operation.
 */
export interface NamedValueUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface OpenIdConnectProviderGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface OpenIdConnectProviderGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface OpenIdConnectProviderCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface PolicyGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface PolicyGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface PolicyCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface SignInSettingsGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface SignInSettingsGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface SignUpSettingsGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface SignUpSettingsGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface DelegationSettingsGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface DelegationSettingsGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface ProductGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface ProductGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface ProductCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface ProductPolicyGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface ProductPolicyGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface ProductPolicyCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityStateByProduct operation.
 */
export interface TagGetEntityStateByProductHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetByProduct operation.
 */
export interface TagGetByProductHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface SubscriptionGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface SubscriptionGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface SubscriptionCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityState operation.
 */
export interface TagGetEntityStateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface TagGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface TagCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface TenantAccessGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface TenantAccessGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for ListSecrets operation.
 */
export interface TenantAccessListSecretsHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface TenantAccessGitGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for ListSecrets operation.
 */
export interface TenantAccessGitListSecretsHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for GetEntityTag operation.
 */
export interface UserGetEntityTagHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for Get operation.
 */
export interface UserGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface UserCreateOrUpdateHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * @interface
 * Paged Api list representation.
 * @extends Array<ApiContract>
 */
export interface ApiCollection extends Array<ApiContract> {
  /**
   * Next page link if any.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Paged Tag list representation.
 * @extends Array<TagResourceContract>
 */
export interface TagResourceCollection extends Array<TagResourceContract> {
  /**
   * Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Paged Api Revision list representation.
 * @extends Array<ApiRevisionContract>
 */
export interface ApiRevisionCollection extends Array<ApiRevisionContract> {
  /**
   * Next page link if any.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Paged ApiRelease list representation.
 * @extends Array<ApiReleaseContract>
 */
export interface ApiReleaseCollection extends Array<ApiReleaseContract> {
  /**
   * Next page link if any.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Paged Operation list representation.
 * @extends Array<OperationContract>
 */
export interface OperationCollection extends Array<OperationContract> {
  /**
   * Next page link if any.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Paged Tag list representation.
 * @extends Array<TagContract>
 */
export interface TagCollection extends Array<TagContract> {
  /**
   * Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Paged Products list representation.
 * @extends Array<ProductContract>
 */
export interface ProductCollection extends Array<ProductContract> {
  /**
   * Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * The response of the list schema operation.
 * @extends Array<SchemaContract>
 */
export interface SchemaCollection extends Array<SchemaContract> {
  /**
   * Next page link if any.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Paged Diagnostic list representation.
 * @extends Array<DiagnosticContract>
 */
export interface DiagnosticCollection extends Array<DiagnosticContract> {
  /**
   * Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Paged Issue list representation.
 * @extends Array<IssueContract>
 */
export interface IssueCollection extends Array<IssueContract> {
  /**
   * Next page link if any.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Paged Issue Comment list representation.
 * @extends Array<IssueCommentContract>
 */
export interface IssueCommentCollection extends Array<IssueCommentContract> {
  /**
   * Next page link if any.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Paged Issue Attachment list representation.
 * @extends Array<IssueAttachmentContract>
 */
export interface IssueAttachmentCollection extends Array<IssueAttachmentContract> {
  /**
   * Next page link if any.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Paged TagDescription list representation.
 * @extends Array<TagDescriptionContract>
 */
export interface TagDescriptionCollection extends Array<TagDescriptionContract> {
  /**
   * Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Paged Api Version Set list representation.
 * @extends Array<ApiVersionSetContract>
 */
export interface ApiVersionSetCollection extends Array<ApiVersionSetContract> {
  /**
   * Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Paged OAuth2 Authorization Servers list representation.
 * @extends Array<AuthorizationServerContract>
 */
export interface AuthorizationServerCollection extends Array<AuthorizationServerContract> {
  /**
   * Total record count number across all pages.
   */
  count?: number;
  /**
   * Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Paged Backend list representation.
 * @extends Array<BackendContract>
 */
export interface BackendCollection extends Array<BackendContract> {
  /**
   * Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Paged Caches list representation.
 * @extends Array<CacheContract>
 */
export interface CacheCollection extends Array<CacheContract> {
  /**
   * Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Paged Certificates list representation.
 * @extends Array<CertificateContract>
 */
export interface CertificateCollection extends Array<CertificateContract> {
  /**
   * Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Result of the request to list REST API operations. It contains a list of operations and a URL
 * nextLink to get the next set of results.
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * URL to get the next set of operation list results if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * The API Management service SKUs operation response.
 * @extends Array<ResourceSkuResult>
 */
export interface ResourceSkuResults extends Array<ResourceSkuResult> {
  /**
   * The uri to fetch the next page of API Management service Skus.
   */
  nextLink?: string;
}

/**
 * @interface
 * The response of the List API Management services operation.
 * @extends Array<ApiManagementServiceResource>
 */
export interface ApiManagementServiceListResult extends Array<ApiManagementServiceResource> {
  /**
   * Link to the next set of results. Not empty if Value contains incomplete list of API Management
   * services.
   */
  nextLink?: string;
}

/**
 * @interface
 * Paged email template list representation.
 * @extends Array<EmailTemplateContract>
 */
export interface EmailTemplateCollection extends Array<EmailTemplateContract> {
  /**
   * Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Paged Gateway list representation.
 * @extends Array<GatewayContract>
 */
export interface GatewayCollection extends Array<GatewayContract> {
  /**
   * Next page link if any.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Paged Gateway hostname configuration list representation.
 * @extends Array<GatewayHostnameConfigurationContract>
 */
export interface GatewayHostnameConfigurationCollection extends Array<GatewayHostnameConfigurationContract> {
  /**
   * Next page link if any.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Paged Group list representation.
 * @extends Array<GroupContract>
 */
export interface GroupCollection extends Array<GroupContract> {
  /**
   * Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Paged Users list representation.
 * @extends Array<UserContract>
 */
export interface UserCollection extends Array<UserContract> {
  /**
   * Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * List of all the Identity Providers configured on the service instance.
 * @extends Array<IdentityProviderContract>
 */
export interface IdentityProviderList extends Array<IdentityProviderContract> {
  /**
   * Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Paged Logger list representation.
 * @extends Array<LoggerContract>
 */
export interface LoggerCollection extends Array<LoggerContract> {
  /**
   * Total record count number across all pages.
   */
  count?: number;
  /**
   * Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Paged NamedValue list representation.
 * @extends Array<NamedValueContract>
 */
export interface NamedValueCollection extends Array<NamedValueContract> {
  /**
   * Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Paged Notification list representation.
 * @extends Array<NotificationContract>
 */
export interface NotificationCollection extends Array<NotificationContract> {
  /**
   * Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Paged OpenIdProviders list representation.
 * @extends Array<OpenidConnectProviderContract>
 */
export interface OpenIdConnectProviderCollection extends Array<OpenidConnectProviderContract> {
  /**
   * Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Paged Subscriptions list representation.
 * @extends Array<SubscriptionContract>
 */
export interface SubscriptionCollection extends Array<SubscriptionContract> {
  /**
   * Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Lists Regions operation response details.
 * @extends Array<RegionContract>
 */
export interface RegionListResult extends Array<RegionContract> {
  /**
   * Total record count number across all pages.
   */
  count?: number;
  /**
   * Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Paged Report records list representation.
 * @extends Array<ReportRecordContract>
 */
export interface ReportCollection extends Array<ReportRecordContract> {
  /**
   * Total record count number across all pages.
   */
  count?: number;
  /**
   * Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Paged Report records list representation.
 * @extends Array<RequestReportRecordContract>
 */
export interface RequestReportCollection extends Array<RequestReportRecordContract> {
  /**
   * Total record count number across all pages.
   */
  count?: number;
}

/**
 * @interface
 * List of Users Identity list representation.
 * @extends Array<UserIdentityContract>
 */
export interface UserIdentityCollection extends Array<UserIdentityContract> {
  /**
   * Total record count number across all pages.
   */
  count?: number;
  /**
   * Next page link if any.
   */
  nextLink?: string;
}

/**
 * Defines values for ExportResultFormat.
 * Possible values include: 'Swagger', 'Wsdl', 'Wadl', 'OpenApi'
 * @readonly
 * @enum {string}
 */
export type ExportResultFormat = 'swagger-link-json' | 'wsdl-link+xml' | 'wadl-link-json' | 'openapi-link';

/**
 * Defines values for ProductState.
 * Possible values include: 'notPublished', 'published'
 * @readonly
 * @enum {string}
 */
export type ProductState = 'notPublished' | 'published';

/**
 * Defines values for BearerTokenSendingMethods.
 * Possible values include: 'authorizationHeader', 'query'
 * @readonly
 * @enum {string}
 */
export type BearerTokenSendingMethods = 'authorizationHeader' | 'query';

/**
 * Defines values for Protocol.
 * Possible values include: 'http', 'https'
 * @readonly
 * @enum {string}
 */
export type Protocol = 'http' | 'https';

/**
 * Defines values for ContentFormat.
 * Possible values include: 'wadl-xml', 'wadl-link-json', 'swagger-json', 'swagger-link-json',
 * 'wsdl', 'wsdl-link', 'openapi', 'openapi+json', 'openapi-link', 'openapi+json-link'
 * @readonly
 * @enum {string}
 */
export type ContentFormat = 'wadl-xml' | 'wadl-link-json' | 'swagger-json' | 'swagger-link-json' | 'wsdl' | 'wsdl-link' | 'openapi' | 'openapi+json' | 'openapi-link' | 'openapi+json-link';

/**
 * Defines values for SoapApiType.
 * Possible values include: 'SoapToRest', 'SoapPassThrough'
 * @readonly
 * @enum {string}
 */
export type SoapApiType = 'http' | 'soap';

/**
 * Defines values for ApiType.
 * Possible values include: 'http', 'soap'
 * @readonly
 * @enum {string}
 */
export type ApiType = 'http' | 'soap';

/**
 * Defines values for State.
 * Possible values include: 'proposed', 'open', 'removed', 'resolved', 'closed'
 * @readonly
 * @enum {string}
 */
export type State = 'proposed' | 'open' | 'removed' | 'resolved' | 'closed';

/**
 * Defines values for SamplingType.
 * Possible values include: 'fixed'
 * @readonly
 * @enum {string}
 */
export type SamplingType = 'fixed';

/**
 * Defines values for AlwaysLog.
 * Possible values include: 'allErrors'
 * @readonly
 * @enum {string}
 */
export type AlwaysLog = 'allErrors';

/**
 * Defines values for HttpCorrelationProtocol.
 * Possible values include: 'None', 'Legacy', 'W3C'
 * @readonly
 * @enum {string}
 */
export type HttpCorrelationProtocol = 'None' | 'Legacy' | 'W3C';

/**
 * Defines values for Verbosity.
 * Possible values include: 'verbose', 'information', 'error'
 * @readonly
 * @enum {string}
 */
export type Verbosity = 'verbose' | 'information' | 'error';

/**
 * Defines values for PolicyContentFormat.
 * Possible values include: 'xml', 'xml-link', 'rawxml', 'rawxml-link'
 * @readonly
 * @enum {string}
 */
export type PolicyContentFormat = 'xml' | 'xml-link' | 'rawxml' | 'rawxml-link';

/**
 * Defines values for VersioningScheme.
 * Possible values include: 'Segment', 'Query', 'Header'
 * @readonly
 * @enum {string}
 */
export type VersioningScheme = 'Segment' | 'Query' | 'Header';

/**
 * Defines values for GrantType.
 * Possible values include: 'authorizationCode', 'implicit', 'resourceOwnerPassword',
 * 'clientCredentials'
 * @readonly
 * @enum {string}
 */
export type GrantType = 'authorizationCode' | 'implicit' | 'resourceOwnerPassword' | 'clientCredentials';

/**
 * Defines values for AuthorizationMethod.
 * Possible values include: 'HEAD', 'OPTIONS', 'TRACE', 'GET', 'POST', 'PUT', 'PATCH', 'DELETE'
 * @readonly
 * @enum {string}
 */
export type AuthorizationMethod = 'HEAD' | 'OPTIONS' | 'TRACE' | 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE';

/**
 * Defines values for ClientAuthenticationMethod.
 * Possible values include: 'Basic', 'Body'
 * @readonly
 * @enum {string}
 */
export type ClientAuthenticationMethod = 'Basic' | 'Body';

/**
 * Defines values for BearerTokenSendingMethod.
 * Possible values include: 'authorizationHeader', 'query'
 * @readonly
 * @enum {string}
 */
export type BearerTokenSendingMethod = 'authorizationHeader' | 'query';

/**
 * Defines values for BackendProtocol.
 * Possible values include: 'http', 'soap'
 * @readonly
 * @enum {string}
 */
export type BackendProtocol = 'http' | 'soap';

/**
 * Defines values for SkuType.
 * Possible values include: 'Developer', 'Standard', 'Premium', 'Basic', 'Consumption'
 * @readonly
 * @enum {string}
 */
export type SkuType = 'Developer' | 'Standard' | 'Premium' | 'Basic' | 'Consumption';

/**
 * Defines values for ResourceSkuCapacityScaleType.
 * Possible values include: 'automatic', 'manual', 'none'
 * @readonly
 * @enum {string}
 */
export type ResourceSkuCapacityScaleType = 'automatic' | 'manual' | 'none';

/**
 * Defines values for HostnameType.
 * Possible values include: 'Proxy', 'Portal', 'Management', 'Scm', 'DeveloperPortal'
 * @readonly
 * @enum {string}
 */
export type HostnameType = 'Proxy' | 'Portal' | 'Management' | 'Scm' | 'DeveloperPortal';

/**
 * Defines values for VirtualNetworkType.
 * Possible values include: 'None', 'External', 'Internal'
 * @readonly
 * @enum {string}
 */
export type VirtualNetworkType = 'None' | 'External' | 'Internal';

/**
 * Defines values for ApimIdentityType.
 * Possible values include: 'SystemAssigned', 'UserAssigned', 'SystemAssigned, UserAssigned',
 * 'None'
 * @readonly
 * @enum {string}
 */
export type ApimIdentityType = 'SystemAssigned' | 'UserAssigned' | 'SystemAssigned, UserAssigned' | 'None';

/**
 * Defines values for NameAvailabilityReason.
 * Possible values include: 'Valid', 'Invalid', 'AlreadyExists'
 * @readonly
 * @enum {string}
 */
export type NameAvailabilityReason = 'Valid' | 'Invalid' | 'AlreadyExists';

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'created'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState = 'created';

/**
 * Defines values for KeyType.
 * Possible values include: 'primary', 'secondary'
 * @readonly
 * @enum {string}
 */
export type KeyType = 'primary' | 'secondary';

/**
 * Defines values for AppType.
 * Possible values include: 'developerPortal'
 * @readonly
 * @enum {string}
 */
export type AppType = 'developerPortal';

/**
 * Defines values for Confirmation.
 * Possible values include: 'signup', 'invite'
 * @readonly
 * @enum {string}
 */
export type Confirmation = 'signup' | 'invite';

/**
 * Defines values for UserState.
 * Possible values include: 'active', 'blocked', 'pending', 'deleted'
 * @readonly
 * @enum {string}
 */
export type UserState = 'active' | 'blocked' | 'pending' | 'deleted';

/**
 * Defines values for GroupType.
 * Possible values include: 'custom', 'system', 'external'
 * @readonly
 * @enum {string}
 */
export type GroupType = 'custom' | 'system' | 'external';

/**
 * Defines values for IdentityProviderType.
 * Possible values include: 'facebook', 'google', 'microsoft', 'twitter', 'aad', 'aadB2C'
 * @readonly
 * @enum {string}
 */
export type IdentityProviderType = 'facebook' | 'google' | 'microsoft' | 'twitter' | 'aad' | 'aadB2C';

/**
 * Defines values for LoggerType.
 * Possible values include: 'azureEventHub', 'applicationInsights'
 * @readonly
 * @enum {string}
 */
export type LoggerType = 'azureEventHub' | 'applicationInsights';

/**
 * Defines values for ConnectivityStatusType.
 * Possible values include: 'initializing', 'success', 'failure'
 * @readonly
 * @enum {string}
 */
export type ConnectivityStatusType = 'initializing' | 'success' | 'failure';

/**
 * Defines values for SubscriptionState.
 * Possible values include: 'suspended', 'active', 'expired', 'submitted', 'rejected', 'cancelled'
 * @readonly
 * @enum {string}
 */
export type SubscriptionState = 'suspended' | 'active' | 'expired' | 'submitted' | 'rejected' | 'cancelled';

/**
 * Defines values for AsyncOperationStatus.
 * Possible values include: 'Started', 'InProgress', 'Succeeded', 'Failed'
 * @readonly
 * @enum {string}
 */
export type AsyncOperationStatus = 'Started' | 'InProgress' | 'Succeeded' | 'Failed';

/**
 * Defines values for NotificationName.
 * Possible values include: 'RequestPublisherNotificationMessage',
 * 'PurchasePublisherNotificationMessage', 'NewApplicationNotificationMessage', 'BCC',
 * 'NewIssuePublisherNotificationMessage', 'AccountClosedPublisher',
 * 'QuotaLimitApproachingPublisherNotificationMessage'
 * @readonly
 * @enum {string}
 */
export type NotificationName = 'RequestPublisherNotificationMessage' | 'PurchasePublisherNotificationMessage' | 'NewApplicationNotificationMessage' | 'BCC' | 'NewIssuePublisherNotificationMessage' | 'AccountClosedPublisher' | 'QuotaLimitApproachingPublisherNotificationMessage';

/**
 * Defines values for PolicyExportFormat.
 * Possible values include: 'xml', 'rawxml'
 * @readonly
 * @enum {string}
 */
export type PolicyExportFormat = 'xml' | 'rawxml';

/**
 * Defines values for TemplateName.
 * Possible values include: 'applicationApprovedNotificationMessage', 'accountClosedDeveloper',
 * 'quotaLimitApproachingDeveloperNotificationMessage', 'newDeveloperNotificationMessage',
 * 'emailChangeIdentityDefault', 'inviteUserNotificationMessage', 'newCommentNotificationMessage',
 * 'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',
 * 'purchaseDeveloperNotificationMessage', 'passwordResetIdentityDefault',
 * 'passwordResetByAdminNotificationMessage', 'rejectDeveloperNotificationMessage',
 * 'requestDeveloperNotificationMessage'
 * @readonly
 * @enum {string}
 */
export type TemplateName = 'applicationApprovedNotificationMessage' | 'accountClosedDeveloper' | 'quotaLimitApproachingDeveloperNotificationMessage' | 'newDeveloperNotificationMessage' | 'emailChangeIdentityDefault' | 'inviteUserNotificationMessage' | 'newCommentNotificationMessage' | 'confirmSignUpIdentityDefault' | 'newIssueNotificationMessage' | 'purchaseDeveloperNotificationMessage' | 'passwordResetIdentityDefault' | 'passwordResetByAdminNotificationMessage' | 'rejectDeveloperNotificationMessage' | 'requestDeveloperNotificationMessage';

/**
 * Defines values for PolicyScopeContract.
 * Possible values include: 'Tenant', 'Product', 'Api', 'Operation', 'All'
 * @readonly
 * @enum {string}
 */
export type PolicyScopeContract = 'Tenant' | 'Product' | 'Api' | 'Operation' | 'All';

/**
 * Defines values for ExportFormat.
 * Possible values include: 'Swagger', 'Wsdl', 'Wadl', 'Openapi', 'OpenapiJson'
 * @readonly
 * @enum {string}
 */
export type ExportFormat = 'swagger-link' | 'wsdl-link' | 'wadl-link' | 'openapi-link' | 'openapi+json-link';

/**
 * Defines values for VersioningScheme1.
 * Possible values include: 'Segment', 'Query', 'Header'
 * @readonly
 * @enum {string}
 */
export type VersioningScheme1 = 'Segment' | 'Query' | 'Header';

/**
 * Defines values for StoreName.
 * Possible values include: 'CertificateAuthority', 'Root'
 * @readonly
 * @enum {string}
 */
export type StoreName = 'CertificateAuthority' | 'Root';

/**
 * Contains response data for the listByService operation.
 */
export type ApiListByServiceResponse = ApiCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type ApiGetEntityTagResponse = ApiGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApiGetResponse = ApiContract & ApiGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ApiCreateOrUpdateResponse = ApiContract & ApiCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiContract;
    };
};

/**
 * Contains response data for the listByTags operation.
 */
export type ApiListByTagsResponse = TagResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagResourceCollection;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type ApiListByServiceNextResponse = ApiCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiCollection;
    };
};

/**
 * Contains response data for the listByTagsNext operation.
 */
export type ApiListByTagsNextResponse = TagResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagResourceCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type ApiRevisionListByServiceResponse = ApiRevisionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiRevisionCollection;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type ApiRevisionListByServiceNextResponse = ApiRevisionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiRevisionCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type ApiReleaseListByServiceResponse = ApiReleaseCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiReleaseCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type ApiReleaseGetEntityTagResponse = ApiReleaseGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiReleaseGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApiReleaseGetResponse = ApiReleaseContract & ApiReleaseGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiReleaseGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiReleaseContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ApiReleaseCreateOrUpdateResponse = ApiReleaseContract & ApiReleaseCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiReleaseCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiReleaseContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type ApiReleaseListByServiceNextResponse = ApiReleaseCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiReleaseCollection;
    };
};

/**
 * Contains response data for the listByApi operation.
 */
export type ApiOperationListByApiResponse = OperationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type ApiOperationGetEntityTagResponse = ApiOperationGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiOperationGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApiOperationGetResponse = OperationContract & ApiOperationGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiOperationGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ApiOperationCreateOrUpdateResponse = OperationContract & ApiOperationCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiOperationCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationContract;
    };
};

/**
 * Contains response data for the listByApiNext operation.
 */
export type ApiOperationListByApiNextResponse = OperationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationCollection;
    };
};

/**
 * Contains response data for the listByOperation operation.
 */
export type ApiOperationPolicyListByOperationResponse = PolicyCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type ApiOperationPolicyGetEntityTagResponse = ApiOperationPolicyGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiOperationPolicyGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApiOperationPolicyGetResponse = PolicyContract & ApiOperationPolicyGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiOperationPolicyGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ApiOperationPolicyCreateOrUpdateResponse = PolicyContract & ApiOperationPolicyCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiOperationPolicyCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyContract;
    };
};

/**
 * Contains response data for the listByOperation operation.
 */
export type TagListByOperationResponse = TagCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagCollection;
    };
};

/**
 * Contains response data for the getEntityStateByOperation operation.
 */
export type TagGetEntityStateByOperationResponse = TagGetEntityStateByOperationHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TagGetEntityStateByOperationHeaders;
    };
};

/**
 * Contains response data for the getByOperation operation.
 */
export type TagGetByOperationResponse = TagContract & TagGetByOperationHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TagGetByOperationHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagContract;
    };
};

/**
 * Contains response data for the assignToOperation operation.
 */
export type TagAssignToOperationResponse = TagContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagContract;
    };
};

/**
 * Contains response data for the listByApi operation.
 */
export type TagListByApiResponse = TagCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagCollection;
    };
};

/**
 * Contains response data for the getEntityStateByApi operation.
 */
export type TagGetEntityStateByApiResponse = TagGetEntityStateByApiHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TagGetEntityStateByApiHeaders;
    };
};

/**
 * Contains response data for the getByApi operation.
 */
export type TagGetByApiResponse = TagContract & TagGetByApiHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TagGetByApiHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagContract;
    };
};

/**
 * Contains response data for the assignToApi operation.
 */
export type TagAssignToApiResponse = TagContract & TagAssignToApiHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TagAssignToApiHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagContract;
    };
};

/**
 * Contains response data for the listByProduct operation.
 */
export type TagListByProductResponse = TagCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagCollection;
    };
};

/**
 * Contains response data for the getEntityStateByProduct operation.
 */
export type TagGetEntityStateByProductResponse = TagGetEntityStateByProductHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TagGetEntityStateByProductHeaders;
    };
};

/**
 * Contains response data for the getByProduct operation.
 */
export type TagGetByProductResponse = TagContract & TagGetByProductHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TagGetByProductHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagContract;
    };
};

/**
 * Contains response data for the assignToProduct operation.
 */
export type TagAssignToProductResponse = TagContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagContract;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type TagListByServiceResponse = TagCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagCollection;
    };
};

/**
 * Contains response data for the getEntityState operation.
 */
export type TagGetEntityStateResponse = TagGetEntityStateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TagGetEntityStateHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type TagGetResponse = TagContract & TagGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TagGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type TagCreateOrUpdateResponse = TagContract & TagCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TagCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagContract;
    };
};

/**
 * Contains response data for the listByOperationNext operation.
 */
export type TagListByOperationNextResponse = TagCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagCollection;
    };
};

/**
 * Contains response data for the listByApiNext operation.
 */
export type TagListByApiNextResponse = TagCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagCollection;
    };
};

/**
 * Contains response data for the listByProductNext operation.
 */
export type TagListByProductNextResponse = TagCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagCollection;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type TagListByServiceNextResponse = TagCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagCollection;
    };
};

/**
 * Contains response data for the listByApis operation.
 */
export type ApiProductListByApisResponse = ProductCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProductCollection;
    };
};

/**
 * Contains response data for the listByApisNext operation.
 */
export type ApiProductListByApisNextResponse = ProductCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProductCollection;
    };
};

/**
 * Contains response data for the listByApi operation.
 */
export type ApiPolicyListByApiResponse = PolicyCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type ApiPolicyGetEntityTagResponse = ApiPolicyGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiPolicyGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApiPolicyGetResponse = PolicyContract & ApiPolicyGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiPolicyGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ApiPolicyCreateOrUpdateResponse = PolicyContract & ApiPolicyCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiPolicyCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyContract;
    };
};

/**
 * Contains response data for the listByApi operation.
 */
export type ApiSchemaListByApiResponse = SchemaCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SchemaCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type ApiSchemaGetEntityTagResponse = ApiSchemaGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiSchemaGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApiSchemaGetResponse = SchemaContract & ApiSchemaGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiSchemaGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SchemaContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ApiSchemaCreateOrUpdateResponse = SchemaContract & ApiSchemaCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiSchemaCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SchemaContract;
    };
};

/**
 * Contains response data for the listByApiNext operation.
 */
export type ApiSchemaListByApiNextResponse = SchemaCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SchemaCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type ApiDiagnosticListByServiceResponse = DiagnosticCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type ApiDiagnosticGetEntityTagResponse = ApiDiagnosticGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiDiagnosticGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApiDiagnosticGetResponse = DiagnosticContract & ApiDiagnosticGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiDiagnosticGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ApiDiagnosticCreateOrUpdateResponse = DiagnosticContract & ApiDiagnosticCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiDiagnosticCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type ApiDiagnosticListByServiceNextResponse = DiagnosticCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type ApiIssueListByServiceResponse = IssueCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IssueCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type ApiIssueGetEntityTagResponse = ApiIssueGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiIssueGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApiIssueGetResponse = IssueContract & ApiIssueGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiIssueGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IssueContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ApiIssueCreateOrUpdateResponse = IssueContract & ApiIssueCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiIssueCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IssueContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type ApiIssueListByServiceNextResponse = IssueCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IssueCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type ApiIssueCommentListByServiceResponse = IssueCommentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IssueCommentCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type ApiIssueCommentGetEntityTagResponse = ApiIssueCommentGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiIssueCommentGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApiIssueCommentGetResponse = IssueCommentContract & ApiIssueCommentGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiIssueCommentGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IssueCommentContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ApiIssueCommentCreateOrUpdateResponse = IssueCommentContract & ApiIssueCommentCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiIssueCommentCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IssueCommentContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type ApiIssueCommentListByServiceNextResponse = IssueCommentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IssueCommentCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type ApiIssueAttachmentListByServiceResponse = IssueAttachmentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IssueAttachmentCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type ApiIssueAttachmentGetEntityTagResponse = ApiIssueAttachmentGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiIssueAttachmentGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApiIssueAttachmentGetResponse = IssueAttachmentContract & ApiIssueAttachmentGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiIssueAttachmentGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IssueAttachmentContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ApiIssueAttachmentCreateOrUpdateResponse = IssueAttachmentContract & ApiIssueAttachmentCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiIssueAttachmentCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IssueAttachmentContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type ApiIssueAttachmentListByServiceNextResponse = IssueAttachmentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IssueAttachmentCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type ApiTagDescriptionListByServiceResponse = TagDescriptionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagDescriptionCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type ApiTagDescriptionGetEntityTagResponse = ApiTagDescriptionGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiTagDescriptionGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApiTagDescriptionGetResponse = TagDescriptionContract & ApiTagDescriptionGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiTagDescriptionGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagDescriptionContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ApiTagDescriptionCreateOrUpdateResponse = TagDescriptionContract & ApiTagDescriptionCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiTagDescriptionCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagDescriptionContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type ApiTagDescriptionListByServiceNextResponse = TagDescriptionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagDescriptionCollection;
    };
};

/**
 * Contains response data for the listByTags operation.
 */
export type OperationListByTagsResponse = TagResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagResourceCollection;
    };
};

/**
 * Contains response data for the listByTagsNext operation.
 */
export type OperationListByTagsNextResponse = TagResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagResourceCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type ApiVersionSetListByServiceResponse = ApiVersionSetCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiVersionSetCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type ApiVersionSetGetEntityTagResponse = ApiVersionSetGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiVersionSetGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApiVersionSetGetResponse = ApiVersionSetContract & ApiVersionSetGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiVersionSetGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiVersionSetContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ApiVersionSetCreateOrUpdateResponse = ApiVersionSetContract & ApiVersionSetCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiVersionSetCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiVersionSetContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type ApiVersionSetListByServiceNextResponse = ApiVersionSetCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiVersionSetCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type AuthorizationServerListByServiceResponse = AuthorizationServerCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AuthorizationServerCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type AuthorizationServerGetEntityTagResponse = AuthorizationServerGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: AuthorizationServerGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AuthorizationServerGetResponse = AuthorizationServerContract & AuthorizationServerGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: AuthorizationServerGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AuthorizationServerContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type AuthorizationServerCreateOrUpdateResponse = AuthorizationServerContract & AuthorizationServerCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: AuthorizationServerCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AuthorizationServerContract;
    };
};

/**
 * Contains response data for the listSecrets operation.
 */
export type AuthorizationServerListSecretsResponse = ClientSecretContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClientSecretContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type AuthorizationServerListByServiceNextResponse = AuthorizationServerCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AuthorizationServerCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type BackendListByServiceResponse = BackendCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackendCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type BackendGetEntityTagResponse = BackendGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: BackendGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BackendGetResponse = BackendContract & BackendGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: BackendGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackendContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type BackendCreateOrUpdateResponse = BackendContract & BackendCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: BackendCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackendContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type BackendListByServiceNextResponse = BackendCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackendCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type CacheListByServiceResponse = CacheCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CacheCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type CacheGetEntityTagResponse = CacheGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CacheGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type CacheGetResponse = CacheContract & CacheGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CacheGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CacheContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type CacheCreateOrUpdateResponse = CacheContract & CacheCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CacheCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CacheContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type CacheListByServiceNextResponse = CacheCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CacheCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type CertificateListByServiceResponse = CertificateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type CertificateGetEntityTagResponse = CertificateGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CertificateGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type CertificateGetResponse = CertificateContract & CertificateGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CertificateGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type CertificateCreateOrUpdateResponse = CertificateContract & CertificateCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CertificateCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type CertificateListByServiceNextResponse = CertificateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ApiManagementOperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ApiManagementOperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listAvailableServiceSkus operation.
 */
export type ApiManagementServiceSkusListAvailableServiceSkusResponse = ResourceSkuResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceSkuResults;
    };
};

/**
 * Contains response data for the listAvailableServiceSkusNext operation.
 */
export type ApiManagementServiceSkusListAvailableServiceSkusNextResponse = ResourceSkuResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceSkuResults;
    };
};

/**
 * Contains response data for the restore operation.
 */
export type ApiManagementServiceRestoreResponse = ApiManagementServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceResource;
    };
};

/**
 * Contains response data for the backup operation.
 */
export type ApiManagementServiceBackupResponse = ApiManagementServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceResource;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ApiManagementServiceCreateOrUpdateResponse = ApiManagementServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ApiManagementServiceUpdateResponse = ApiManagementServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApiManagementServiceGetResponse = ApiManagementServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceResource;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type ApiManagementServiceDeleteMethodResponse = ApiManagementServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceResource;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ApiManagementServiceListByResourceGroupResponse = ApiManagementServiceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ApiManagementServiceListResponse = ApiManagementServiceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceListResult;
    };
};

/**
 * Contains response data for the getSsoToken operation.
 */
export type ApiManagementServiceGetSsoTokenResponse = ApiManagementServiceGetSsoTokenResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceGetSsoTokenResult;
    };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type ApiManagementServiceCheckNameAvailabilityResponse = ApiManagementServiceNameAvailabilityResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceNameAvailabilityResult;
    };
};

/**
 * Contains response data for the applyNetworkConfigurationUpdates operation.
 */
export type ApiManagementServiceApplyNetworkConfigurationUpdatesResponse = ApiManagementServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceResource;
    };
};

/**
 * Contains response data for the beginRestore operation.
 */
export type ApiManagementServiceBeginRestoreResponse = ApiManagementServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceResource;
    };
};

/**
 * Contains response data for the beginBackup operation.
 */
export type ApiManagementServiceBeginBackupResponse = ApiManagementServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceResource;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ApiManagementServiceBeginCreateOrUpdateResponse = ApiManagementServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceResource;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ApiManagementServiceBeginUpdateResponse = ApiManagementServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceResource;
    };
};

/**
 * Contains response data for the beginDeleteMethod operation.
 */
export type ApiManagementServiceBeginDeleteMethodResponse = ApiManagementServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceResource;
    };
};

/**
 * Contains response data for the beginApplyNetworkConfigurationUpdates operation.
 */
export type ApiManagementServiceBeginApplyNetworkConfigurationUpdatesResponse = ApiManagementServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceResource;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type ApiManagementServiceListByResourceGroupNextResponse = ApiManagementServiceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ApiManagementServiceListNextResponse = ApiManagementServiceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceListResult;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type DiagnosticListByServiceResponse = DiagnosticCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type DiagnosticGetEntityTagResponse = DiagnosticGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DiagnosticGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DiagnosticGetResponse = DiagnosticContract & DiagnosticGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DiagnosticGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DiagnosticCreateOrUpdateResponse = DiagnosticContract & DiagnosticCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DiagnosticCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type DiagnosticListByServiceNextResponse = DiagnosticCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type EmailTemplateListByServiceResponse = EmailTemplateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EmailTemplateCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type EmailTemplateGetEntityTagResponse = EmailTemplateGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: EmailTemplateGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type EmailTemplateGetResponse = EmailTemplateContract & EmailTemplateGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: EmailTemplateGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EmailTemplateContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type EmailTemplateCreateOrUpdateResponse = EmailTemplateContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EmailTemplateContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type EmailTemplateListByServiceNextResponse = EmailTemplateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EmailTemplateCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type GatewayListByServiceResponse = GatewayCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GatewayCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type GatewayGetEntityTagResponse = GatewayGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GatewayGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type GatewayGetResponse = GatewayContract & GatewayGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GatewayGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GatewayContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type GatewayCreateOrUpdateResponse = GatewayContract & GatewayCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GatewayCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GatewayContract;
    };
};

/**
 * Contains response data for the listKeys operation.
 */
export type GatewayListKeysResponse = GatewayKeysContract & GatewayListKeysHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GatewayListKeysHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GatewayKeysContract;
    };
};

/**
 * Contains response data for the generateToken operation.
 */
export type GatewayGenerateTokenResponse = GatewayTokenContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GatewayTokenContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type GatewayListByServiceNextResponse = GatewayCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GatewayCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type GatewayHostnameConfigurationListByServiceResponse = GatewayHostnameConfigurationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GatewayHostnameConfigurationCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type GatewayHostnameConfigurationGetEntityTagResponse = GatewayHostnameConfigurationGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GatewayHostnameConfigurationGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type GatewayHostnameConfigurationGetResponse = GatewayHostnameConfigurationContract & GatewayHostnameConfigurationGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GatewayHostnameConfigurationGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GatewayHostnameConfigurationContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type GatewayHostnameConfigurationCreateOrUpdateResponse = GatewayHostnameConfigurationContract & GatewayHostnameConfigurationCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GatewayHostnameConfigurationCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GatewayHostnameConfigurationContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type GatewayHostnameConfigurationListByServiceNextResponse = GatewayHostnameConfigurationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GatewayHostnameConfigurationCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type GatewayApiListByServiceResponse = ApiCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type GatewayApiGetEntityTagResponse = GatewayApiGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GatewayApiGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type GatewayApiCreateOrUpdateResponse = ApiContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type GatewayApiListByServiceNextResponse = ApiCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type GroupListByServiceResponse = GroupCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GroupCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type GroupGetEntityTagResponse = GroupGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GroupGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type GroupGetResponse = GroupContract & GroupGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GroupGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GroupContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type GroupCreateOrUpdateResponse = GroupContract & GroupCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GroupCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GroupContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type GroupListByServiceNextResponse = GroupCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GroupCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type GroupUserListResponse = UserCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserCollection;
    };
};

/**
 * Contains response data for the checkEntityExists operation.
 */
export type GroupUserCheckEntityExistsResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean;
    };
};

/**
 * Contains response data for the create operation.
 */
export type GroupUserCreateResponse = UserContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserContract;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type GroupUserListNextResponse = UserCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type IdentityProviderListByServiceResponse = IdentityProviderList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IdentityProviderList;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type IdentityProviderGetEntityTagResponse = IdentityProviderGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: IdentityProviderGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type IdentityProviderGetResponse = IdentityProviderContract & IdentityProviderGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: IdentityProviderGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IdentityProviderContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type IdentityProviderCreateOrUpdateResponse = IdentityProviderContract & IdentityProviderCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: IdentityProviderCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IdentityProviderContract;
    };
};

/**
 * Contains response data for the listSecrets operation.
 */
export type IdentityProviderListSecretsResponse = ClientSecretContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClientSecretContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type IdentityProviderListByServiceNextResponse = IdentityProviderList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IdentityProviderList;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type IssueListByServiceResponse = IssueCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IssueCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type IssueGetResponse = IssueContract & IssueGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: IssueGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IssueContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type IssueListByServiceNextResponse = IssueCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IssueCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type LoggerListByServiceResponse = LoggerCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LoggerCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type LoggerGetEntityTagResponse = LoggerGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LoggerGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type LoggerGetResponse = LoggerContract & LoggerGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LoggerGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LoggerContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type LoggerCreateOrUpdateResponse = LoggerContract & LoggerCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LoggerCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LoggerContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type LoggerListByServiceNextResponse = LoggerCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LoggerCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type NamedValueListByServiceResponse = NamedValueCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NamedValueCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type NamedValueGetEntityTagResponse = NamedValueGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: NamedValueGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type NamedValueGetResponse = NamedValueContract & NamedValueGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: NamedValueGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NamedValueContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type NamedValueCreateOrUpdateResponse = NamedValueContract & NamedValueCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: NamedValueCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NamedValueContract;
    };
};

/**
 * Contains response data for the update operation.
 */
export type NamedValueUpdateResponse = NamedValueContract & NamedValueUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: NamedValueUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NamedValueContract;
    };
};

/**
 * Contains response data for the listValue operation.
 */
export type NamedValueListValueResponse = PropertyValueContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PropertyValueContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type NamedValueListByServiceNextResponse = NamedValueCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NamedValueCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type NetworkStatusListByServiceResponse = Array<NetworkStatusContractByLocation> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkStatusContractByLocation[];
    };
};

/**
 * Contains response data for the listByLocation operation.
 */
export type NetworkStatusListByLocationResponse = NetworkStatusContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkStatusContract;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type NotificationListByServiceResponse = NotificationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NotificationCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type NotificationGetResponse = NotificationContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NotificationContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type NotificationCreateOrUpdateResponse = NotificationContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NotificationContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type NotificationListByServiceNextResponse = NotificationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NotificationCollection;
    };
};

/**
 * Contains response data for the listByNotification operation.
 */
export type NotificationRecipientUserListByNotificationResponse = RecipientUserCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecipientUserCollection;
    };
};

/**
 * Contains response data for the checkEntityExists operation.
 */
export type NotificationRecipientUserCheckEntityExistsResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type NotificationRecipientUserCreateOrUpdateResponse = RecipientUserContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecipientUserContract;
    };
};

/**
 * Contains response data for the listByNotification operation.
 */
export type NotificationRecipientEmailListByNotificationResponse = RecipientEmailCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecipientEmailCollection;
    };
};

/**
 * Contains response data for the checkEntityExists operation.
 */
export type NotificationRecipientEmailCheckEntityExistsResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type NotificationRecipientEmailCreateOrUpdateResponse = RecipientEmailContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecipientEmailContract;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type OpenIdConnectProviderListByServiceResponse = OpenIdConnectProviderCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OpenIdConnectProviderCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type OpenIdConnectProviderGetEntityTagResponse = OpenIdConnectProviderGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: OpenIdConnectProviderGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type OpenIdConnectProviderGetResponse = OpenidConnectProviderContract & OpenIdConnectProviderGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: OpenIdConnectProviderGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OpenidConnectProviderContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type OpenIdConnectProviderCreateOrUpdateResponse = OpenidConnectProviderContract & OpenIdConnectProviderCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: OpenIdConnectProviderCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OpenidConnectProviderContract;
    };
};

/**
 * Contains response data for the listSecrets operation.
 */
export type OpenIdConnectProviderListSecretsResponse = ClientSecretContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClientSecretContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type OpenIdConnectProviderListByServiceNextResponse = OpenIdConnectProviderCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OpenIdConnectProviderCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type PolicyListByServiceResponse = PolicyCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type PolicyGetEntityTagResponse = PolicyGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: PolicyGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PolicyGetResponse = PolicyContract & PolicyGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: PolicyGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type PolicyCreateOrUpdateResponse = PolicyContract & PolicyCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: PolicyCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyContract;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type PolicyDescriptionListByServiceResponse = PolicyDescriptionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyDescriptionCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type SignInSettingsGetEntityTagResponse = SignInSettingsGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SignInSettingsGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SignInSettingsGetResponse = PortalSigninSettings & SignInSettingsGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SignInSettingsGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PortalSigninSettings;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SignInSettingsCreateOrUpdateResponse = PortalSigninSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PortalSigninSettings;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type SignUpSettingsGetEntityTagResponse = SignUpSettingsGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SignUpSettingsGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SignUpSettingsGetResponse = PortalSignupSettings & SignUpSettingsGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SignUpSettingsGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PortalSignupSettings;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SignUpSettingsCreateOrUpdateResponse = PortalSignupSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PortalSignupSettings;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type DelegationSettingsGetEntityTagResponse = DelegationSettingsGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DelegationSettingsGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DelegationSettingsGetResponse = PortalDelegationSettings & DelegationSettingsGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DelegationSettingsGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PortalDelegationSettings;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DelegationSettingsCreateOrUpdateResponse = PortalDelegationSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PortalDelegationSettings;
    };
};

/**
 * Contains response data for the listSecrets operation.
 */
export type DelegationSettingsListSecretsResponse = PortalSettingValidationKeyContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PortalSettingValidationKeyContract;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type ProductListByServiceResponse = ProductCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProductCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type ProductGetEntityTagResponse = ProductGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ProductGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ProductGetResponse = ProductContract & ProductGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ProductGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProductContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ProductCreateOrUpdateResponse = ProductContract & ProductCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ProductCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProductContract;
    };
};

/**
 * Contains response data for the listByTags operation.
 */
export type ProductListByTagsResponse = TagResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagResourceCollection;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type ProductListByServiceNextResponse = ProductCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProductCollection;
    };
};

/**
 * Contains response data for the listByTagsNext operation.
 */
export type ProductListByTagsNextResponse = TagResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagResourceCollection;
    };
};

/**
 * Contains response data for the listByProduct operation.
 */
export type ProductApiListByProductResponse = ApiCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiCollection;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ProductApiCreateOrUpdateResponse = ApiContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiContract;
    };
};

/**
 * Contains response data for the listByProductNext operation.
 */
export type ProductApiListByProductNextResponse = ApiCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiCollection;
    };
};

/**
 * Contains response data for the listByProduct operation.
 */
export type ProductGroupListByProductResponse = GroupCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GroupCollection;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ProductGroupCreateOrUpdateResponse = GroupContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GroupContract;
    };
};

/**
 * Contains response data for the listByProductNext operation.
 */
export type ProductGroupListByProductNextResponse = GroupCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GroupCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ProductSubscriptionsListResponse = SubscriptionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionCollection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ProductSubscriptionsListNextResponse = SubscriptionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionCollection;
    };
};

/**
 * Contains response data for the listByProduct operation.
 */
export type ProductPolicyListByProductResponse = PolicyCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type ProductPolicyGetEntityTagResponse = ProductPolicyGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ProductPolicyGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ProductPolicyGetResponse = PolicyContract & ProductPolicyGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ProductPolicyGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ProductPolicyCreateOrUpdateResponse = PolicyContract & ProductPolicyCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ProductPolicyCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyContract;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type QuotaByCounterKeysListByServiceResponse = QuotaCounterCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: QuotaCounterCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type QuotaByPeriodKeysGetResponse = QuotaCounterContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: QuotaCounterContract;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type RegionListByServiceResponse = RegionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RegionListResult;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type RegionListByServiceNextResponse = RegionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RegionListResult;
    };
};

/**
 * Contains response data for the listByApi operation.
 */
export type ReportsListByApiResponse = ReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReportCollection;
    };
};

/**
 * Contains response data for the listByUser operation.
 */
export type ReportsListByUserResponse = ReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReportCollection;
    };
};

/**
 * Contains response data for the listByOperation operation.
 */
export type ReportsListByOperationResponse = ReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReportCollection;
    };
};

/**
 * Contains response data for the listByProduct operation.
 */
export type ReportsListByProductResponse = ReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReportCollection;
    };
};

/**
 * Contains response data for the listByGeo operation.
 */
export type ReportsListByGeoResponse = ReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReportCollection;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type ReportsListBySubscriptionResponse = ReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReportCollection;
    };
};

/**
 * Contains response data for the listByTime operation.
 */
export type ReportsListByTimeResponse = ReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReportCollection;
    };
};

/**
 * Contains response data for the listByRequest operation.
 */
export type ReportsListByRequestResponse = RequestReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RequestReportCollection;
    };
};

/**
 * Contains response data for the listByApiNext operation.
 */
export type ReportsListByApiNextResponse = ReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReportCollection;
    };
};

/**
 * Contains response data for the listByUserNext operation.
 */
export type ReportsListByUserNextResponse = ReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReportCollection;
    };
};

/**
 * Contains response data for the listByOperationNext operation.
 */
export type ReportsListByOperationNextResponse = ReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReportCollection;
    };
};

/**
 * Contains response data for the listByProductNext operation.
 */
export type ReportsListByProductNextResponse = ReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReportCollection;
    };
};

/**
 * Contains response data for the listByGeoNext operation.
 */
export type ReportsListByGeoNextResponse = ReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReportCollection;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type ReportsListBySubscriptionNextResponse = ReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReportCollection;
    };
};

/**
 * Contains response data for the listByTimeNext operation.
 */
export type ReportsListByTimeNextResponse = ReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReportCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type SubscriptionListResponse = SubscriptionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type SubscriptionGetEntityTagResponse = SubscriptionGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SubscriptionGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SubscriptionGetResponse = SubscriptionContract & SubscriptionGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SubscriptionGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SubscriptionCreateOrUpdateResponse = SubscriptionContract & SubscriptionCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SubscriptionCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionContract;
    };
};

/**
 * Contains response data for the listSecrets operation.
 */
export type SubscriptionListSecretsResponse = SubscriptionKeysContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionKeysContract;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type SubscriptionListNextResponse = SubscriptionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type TagResourceListByServiceResponse = TagResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagResourceCollection;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type TagResourceListByServiceNextResponse = TagResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagResourceCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type TenantAccessGetEntityTagResponse = TenantAccessGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TenantAccessGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type TenantAccessGetResponse = AccessInformationContract & TenantAccessGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TenantAccessGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessInformationContract;
    };
};

/**
 * Contains response data for the listSecrets operation.
 */
export type TenantAccessListSecretsResponse = AccessInformationContract & TenantAccessListSecretsHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TenantAccessListSecretsHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessInformationContract;
    };
};

/**
 * Contains response data for the get operation.
 */
export type TenantAccessGitGetResponse = AccessInformationContract & TenantAccessGitGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TenantAccessGitGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessInformationContract;
    };
};

/**
 * Contains response data for the listSecrets operation.
 */
export type TenantAccessGitListSecretsResponse = AccessInformationContract & TenantAccessGitListSecretsHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TenantAccessGitListSecretsHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessInformationContract;
    };
};

/**
 * Contains response data for the deploy operation.
 */
export type TenantConfigurationDeployResponse = OperationResultContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationResultContract;
    };
};

/**
 * Contains response data for the save operation.
 */
export type TenantConfigurationSaveResponse = OperationResultContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationResultContract;
    };
};

/**
 * Contains response data for the validate operation.
 */
export type TenantConfigurationValidateResponse = OperationResultContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationResultContract;
    };
};

/**
 * Contains response data for the getSyncState operation.
 */
export type TenantConfigurationGetSyncStateResponse = TenantConfigurationSyncStateContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TenantConfigurationSyncStateContract;
    };
};

/**
 * Contains response data for the beginDeploy operation.
 */
export type TenantConfigurationBeginDeployResponse = OperationResultContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationResultContract;
    };
};

/**
 * Contains response data for the beginSave operation.
 */
export type TenantConfigurationBeginSaveResponse = OperationResultContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationResultContract;
    };
};

/**
 * Contains response data for the beginValidate operation.
 */
export type TenantConfigurationBeginValidateResponse = OperationResultContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationResultContract;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type UserListByServiceResponse = UserCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type UserGetEntityTagResponse = UserGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: UserGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type UserGetResponse = UserContract & UserGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: UserGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type UserCreateOrUpdateResponse = UserContract & UserCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: UserCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserContract;
    };
};

/**
 * Contains response data for the generateSsoUrl operation.
 */
export type UserGenerateSsoUrlResponse = GenerateSsoUrlResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GenerateSsoUrlResult;
    };
};

/**
 * Contains response data for the getSharedAccessToken operation.
 */
export type UserGetSharedAccessTokenResponse = UserTokenResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserTokenResult;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type UserListByServiceNextResponse = UserCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type UserGroupListResponse = GroupCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GroupCollection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type UserGroupListNextResponse = GroupCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GroupCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type UserSubscriptionListResponse = SubscriptionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionCollection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type UserSubscriptionListNextResponse = SubscriptionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type UserIdentitiesListResponse = UserIdentityCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserIdentityCollection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type UserIdentitiesListNextResponse = UserIdentityCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserIdentityCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApiExportGetResponse = ApiExportResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiExportResult;
    };
};
