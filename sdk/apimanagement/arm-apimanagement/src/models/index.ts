/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** Paged API list representation. */
export interface ApiCollection {
  /**
   * Page values.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: ApiContract[];
  /** Total record count number across all pages. */
  count?: number;
  /**
   * Next page link if any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** An API Version Set contains the common configuration for a set of API Versions relating */
export interface ApiVersionSetContractDetails {
  /** Identifier for existing API Version Set. Omit this value to create a new Version Set. */
  id?: string;
  /** The display Name of the API Version Set. */
  name?: string;
  /** Description of API Version Set. */
  description?: string;
  /** An value that determines where the API Version identifier will be located in a HTTP request. */
  versioningScheme?: ApiVersionSetContractDetailsVersioningScheme;
  /** Name of query parameter that indicates the API Version if versioningScheme is set to `query`. */
  versionQueryName?: string;
  /** Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`. */
  versionHeaderName?: string;
}

/** API base contract details. */
export interface ApiEntityBaseContract {
  /** Description of the API. May include HTML formatting tags. */
  description?: string;
  /** Collection of authentication settings included into this API. */
  authenticationSettings?: AuthenticationSettingsContract;
  /** Protocols over which API is made available. */
  subscriptionKeyParameterNames?: SubscriptionKeyParameterNamesContract;
  /** Type of API. */
  apiType?: ApiType;
  /** Describes the revision of the API. If no value is provided, default revision 1 is created */
  apiRevision?: string;
  /** Indicates the version identifier of the API if the API is versioned */
  apiVersion?: string;
  /** Indicates if API revision is current api revision. */
  isCurrent?: boolean;
  /**
   * Indicates if API revision is accessible via the gateway.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isOnline?: boolean;
  /** Description of the API Revision. */
  apiRevisionDescription?: string;
  /** Description of the API Version. */
  apiVersionDescription?: string;
  /** A resource identifier for the related ApiVersionSet. */
  apiVersionSetId?: string;
  /** Specifies whether an API or Product subscription is required for accessing the API. */
  subscriptionRequired?: boolean;
  /**  A URL to the Terms of Service for the API. MUST be in the format of a URL. */
  termsOfServiceUrl?: string;
  /** Contact information for the API. */
  contact?: ApiContactInformation;
  /** License information for the API. */
  license?: ApiLicenseInformation;
}

/** API Authentication Settings. */
export interface AuthenticationSettingsContract {
  /** OAuth2 Authentication settings */
  oAuth2?: OAuth2AuthenticationSettingsContract;
  /** OpenID Connect Authentication Settings */
  openid?: OpenIdAuthenticationSettingsContract;
}

/** API OAuth2 Authentication settings details. */
export interface OAuth2AuthenticationSettingsContract {
  /** OAuth authorization server identifier. */
  authorizationServerId?: string;
  /** operations scope. */
  scope?: string;
}

/** API OAuth2 Authentication settings details. */
export interface OpenIdAuthenticationSettingsContract {
  /** OAuth authorization server identifier. */
  openidProviderId?: string;
  /** How to send token to the server. */
  bearerTokenSendingMethods?: BearerTokenSendingMethods[];
}

/** Subscription key parameter names details. */
export interface SubscriptionKeyParameterNamesContract {
  /** Subscription key header name. */
  header?: string;
  /** Subscription key query string parameter name. */
  query?: string;
}

/** API contact information */
export interface ApiContactInformation {
  /** The identifying name of the contact person/organization */
  name?: string;
  /** The URL pointing to the contact information. MUST be in the format of a URL */
  url?: string;
  /** The email address of the contact person/organization. MUST be in the format of an email address */
  email?: string;
}

/** API license information */
export interface ApiLicenseInformation {
  /** The license name used for the API */
  name?: string;
  /** A URL to the license used for the API. MUST be in the format of a URL */
  url?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** Error Response. */
export interface ErrorResponse {
  /** Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response. */
  code?: string;
  /** Human-readable representation of the error. */
  message?: string;
  /** The list of invalid fields send in request, in case of validation error. */
  details?: ErrorFieldContract[];
}

/** Error Body contract. */
export interface ErrorResponseBody {
  /** Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response. */
  code?: string;
  /** Human-readable representation of the error. */
  message?: string;
  /** The list of invalid fields send in request, in case of validation error. */
  details?: ErrorFieldContract[];
}

/** Error Field contract. */
export interface ErrorFieldContract {
  /** Property level error code. */
  code?: string;
  /** Human-readable representation of property-level error. */
  message?: string;
  /** Property name. */
  target?: string;
}

/** API Create or Update Parameters. */
export interface ApiCreateOrUpdateParameter {
  /** Description of the API. May include HTML formatting tags. */
  description?: string;
  /** Collection of authentication settings included into this API. */
  authenticationSettings?: AuthenticationSettingsContract;
  /** Protocols over which API is made available. */
  subscriptionKeyParameterNames?: SubscriptionKeyParameterNamesContract;
  /** Type of API. */
  apiType?: ApiType;
  /** Describes the revision of the API. If no value is provided, default revision 1 is created */
  apiRevision?: string;
  /** Indicates the version identifier of the API if the API is versioned */
  apiVersion?: string;
  /** Indicates if API revision is current api revision. */
  isCurrent?: boolean;
  /**
   * Indicates if API revision is accessible via the gateway.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isOnline?: boolean;
  /** Description of the API Revision. */
  apiRevisionDescription?: string;
  /** Description of the API Version. */
  apiVersionDescription?: string;
  /** A resource identifier for the related ApiVersionSet. */
  apiVersionSetId?: string;
  /** Specifies whether an API or Product subscription is required for accessing the API. */
  subscriptionRequired?: boolean;
  /**  A URL to the Terms of Service for the API. MUST be in the format of a URL. */
  termsOfServiceUrl?: string;
  /** Contact information for the API. */
  contact?: ApiContactInformation;
  /** License information for the API. */
  license?: ApiLicenseInformation;
  /** API identifier of the source API. */
  sourceApiId?: string;
  /** API name. Must be 1 to 300 characters long. */
  displayName?: string;
  /** Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long. */
  serviceUrl?: string;
  /** Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API. */
  path?: string;
  /** Describes on which protocols the operations in this API can be invoked. */
  protocols?: Protocol[];
  /** Version set details */
  apiVersionSet?: ApiVersionSetContractDetails;
  /** Content value when Importing an API. */
  value?: string;
  /** Format of the Content in which the API is getting imported. */
  format?: ContentFormat;
  /** Criteria to limit import of WSDL to a subset of the document. */
  wsdlSelector?: ApiCreateOrUpdatePropertiesWsdlSelector;
  /**
   * Type of API to create.
   *  * `http` creates a REST API
   *  * `soap` creates a SOAP pass-through API
   *  * `websocket` creates websocket API
   *  * `graphql` creates GraphQL API.
   */
  soapApiType?: SoapApiType;
}

/** Criteria to limit import of WSDL to a subset of the document. */
export interface ApiCreateOrUpdatePropertiesWsdlSelector {
  /** Name of service to import from WSDL */
  wsdlServiceName?: string;
  /** Name of endpoint(port) to import from WSDL */
  wsdlEndpointName?: string;
}

/** API update contract details. */
export interface ApiUpdateContract {
  /** Description of the API. May include HTML formatting tags. */
  description?: string;
  /** Collection of authentication settings included into this API. */
  authenticationSettings?: AuthenticationSettingsContract;
  /** Protocols over which API is made available. */
  subscriptionKeyParameterNames?: SubscriptionKeyParameterNamesContract;
  /** Type of API. */
  apiType?: ApiType;
  /** Describes the revision of the API. If no value is provided, default revision 1 is created */
  apiRevision?: string;
  /** Indicates the version identifier of the API if the API is versioned */
  apiVersion?: string;
  /** Indicates if API revision is current api revision. */
  isCurrent?: boolean;
  /**
   * Indicates if API revision is accessible via the gateway.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isOnline?: boolean;
  /** Description of the API Revision. */
  apiRevisionDescription?: string;
  /** Description of the API Version. */
  apiVersionDescription?: string;
  /** A resource identifier for the related ApiVersionSet. */
  apiVersionSetId?: string;
  /** Specifies whether an API or Product subscription is required for accessing the API. */
  subscriptionRequired?: boolean;
  /**  A URL to the Terms of Service for the API. MUST be in the format of a URL. */
  termsOfServiceUrl?: string;
  /** Contact information for the API. */
  contact?: ApiContactInformation;
  /** License information for the API. */
  license?: ApiLicenseInformation;
  /** API name. */
  displayName?: string;
  /** Absolute URL of the backend service implementing this API. */
  serviceUrl?: string;
  /** Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API. */
  path?: string;
  /** Describes on which protocols the operations in this API can be invoked. */
  protocols?: Protocol[];
}

/** Paged API Revision list representation. */
export interface ApiRevisionCollection {
  /**
   * Page values.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: ApiRevisionContract[];
  /** Total record count number across all pages. */
  count?: number;
  /**
   * Next page link if any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Summary of revision metadata. */
export interface ApiRevisionContract {
  /**
   * Identifier of the API Revision.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly apiId?: string;
  /**
   * Revision number of API.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly apiRevision?: string;
  /**
   * The time the API Revision was created. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdDateTime?: Date;
  /**
   * The time the API Revision were updated. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly updatedDateTime?: Date;
  /**
   * Description of the API Revision.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
  /**
   * Gateway URL for accessing the non-current API Revision.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateUrl?: string;
  /**
   * Indicates if API revision is the current api revision.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isOnline?: boolean;
  /**
   * Indicates if API revision is accessible via the gateway.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isCurrent?: boolean;
}

/** Paged ApiRelease list representation. */
export interface ApiReleaseCollection {
  /**
   * Page values.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: ApiReleaseContract[];
  /** Total record count number across all pages. */
  count?: number;
  /**
   * Next page link if any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Paged Operation list representation. */
export interface OperationCollection {
  /**
   * Page values.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: OperationContract[];
  /** Total record count number across all pages. */
  count?: number;
  /**
   * Next page link if any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** API Operation Entity Base Contract details. */
export interface OperationEntityBaseContract {
  /** Collection of URL template parameters. */
  templateParameters?: ParameterContract[];
  /** Description of the operation. May include HTML formatting tags. */
  description?: string;
  /** An entity containing request details. */
  request?: RequestContract;
  /** Array of Operation responses. */
  responses?: ResponseContract[];
  /** Operation Policies */
  policies?: string;
}

/** Operation parameters details. */
export interface ParameterContract {
  /** Parameter name. */
  name: string;
  /** Parameter description. */
  description?: string;
  /** Parameter type. */
  type: string;
  /** Default parameter value. */
  defaultValue?: string;
  /** Specifies whether parameter is required or not. */
  required?: boolean;
  /** Parameter values. */
  values?: string[];
  /** Schema identifier. */
  schemaId?: string;
  /** Type name defined by the schema. */
  typeName?: string;
  /** Exampled defined for the parameter. */
  examples?: { [propertyName: string]: ParameterExampleContract };
}

/** Parameter example. */
export interface ParameterExampleContract {
  /** Short description for the example */
  summary?: string;
  /** Long description for the example */
  description?: string;
  /** Example value. May be a primitive value, or an object. */
  value?: any;
  /** A URL that points to the literal example */
  externalValue?: string;
}

/** Operation request details. */
export interface RequestContract {
  /** Operation request description. */
  description?: string;
  /** Collection of operation request query parameters. */
  queryParameters?: ParameterContract[];
  /** Collection of operation request headers. */
  headers?: ParameterContract[];
  /** Collection of operation request representations. */
  representations?: RepresentationContract[];
}

/** Operation request/response representation details. */
export interface RepresentationContract {
  /** Specifies a registered or custom content type for this representation, e.g. application/xml. */
  contentType: string;
  /** Schema identifier. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'. */
  schemaId?: string;
  /** Type name defined by the schema. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'. */
  typeName?: string;
  /** Collection of form parameters. Required if 'contentType' value is either 'application/x-www-form-urlencoded' or 'multipart/form-data'.. */
  formParameters?: ParameterContract[];
  /** Exampled defined for the representation. */
  examples?: { [propertyName: string]: ParameterExampleContract };
}

/** Operation response details. */
export interface ResponseContract {
  /** Operation response HTTP status code. */
  statusCode: number;
  /** Operation response description. */
  description?: string;
  /** Collection of operation response representations. */
  representations?: RepresentationContract[];
  /** Collection of operation response headers. */
  headers?: ParameterContract[];
}

/** API Operation Update Contract details. */
export interface OperationUpdateContract {
  /** Collection of URL template parameters. */
  templateParameters?: ParameterContract[];
  /** Description of the operation. May include HTML formatting tags. */
  description?: string;
  /** An entity containing request details. */
  request?: RequestContract;
  /** Array of Operation responses. */
  responses?: ResponseContract[];
  /** Operation Policies */
  policies?: string;
  /** Operation Name. */
  displayName?: string;
  /** A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them. */
  method?: string;
  /** Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date} */
  urlTemplate?: string;
}

/** The response of the list policy operation. */
export interface PolicyCollection {
  /** Policy Contract value. */
  value?: PolicyContract[];
  /** Total record count number. */
  count?: number;
  /** Next page link if any. */
  nextLink?: string;
}

/** Paged Tag list representation. */
export interface TagCollection {
  /** Page values. */
  value?: TagContract[];
  /** Total record count number across all pages. */
  count?: number;
  /** Next page link if any. */
  nextLink?: string;
}

/** Paged Products list representation. */
export interface ProductCollection {
  /** Page values. */
  value?: ProductContract[];
  /** Total record count number across all pages. */
  count?: number;
  /** Next page link if any. */
  nextLink?: string;
}

/** Product Entity Base Parameters */
export interface ProductEntityBaseParameters {
  /** Product description. May include HTML formatting tags. */
  description?: string;
  /** Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms before they can complete the subscription process. */
  terms?: string;
  /** Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred to as "protected" and a valid subscription key is required for a request to an API included in the product to succeed. If false, the product is referred to as "open" and requests to an API included in the product can be made without a subscription key. If property is omitted when creating a new product it's value is assumed to be true. */
  subscriptionRequired?: boolean;
  /** whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers to call the product’s APIs immediately after subscribing. If true, administrators must manually approve the subscription before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and has a value of false. */
  approvalRequired?: boolean;
  /** Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false. */
  subscriptionsLimit?: number;
  /** whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators. Default state of Product is notPublished. */
  state?: ProductState;
}

/** The response of the list schema operation. */
export interface SchemaCollection {
  /**
   * API Schema Contract value.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: SchemaContract[];
  /** Total record count number. */
  count?: number;
  /**
   * Next page link if any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Paged Diagnostic list representation. */
export interface DiagnosticCollection {
  /** Page values. */
  value?: DiagnosticContract[];
  /** Total record count number across all pages. */
  count?: number;
  /** Next page link if any. */
  nextLink?: string;
}

/** Sampling settings for Diagnostic. */
export interface SamplingSettings {
  /** Sampling type. */
  samplingType?: SamplingType;
  /** Rate of sampling for fixed-rate sampling. */
  percentage?: number;
}

/** Diagnostic settings for incoming/outgoing HTTP messages to the Gateway. */
export interface PipelineDiagnosticSettings {
  /** Diagnostic settings for request. */
  request?: HttpMessageDiagnostic;
  /** Diagnostic settings for response. */
  response?: HttpMessageDiagnostic;
}

/** Http message diagnostic settings. */
export interface HttpMessageDiagnostic {
  /** Array of HTTP Headers to log. */
  headers?: string[];
  /** Body logging settings. */
  body?: BodyDiagnosticSettings;
  /** Data masking settings. */
  dataMasking?: DataMasking;
}

/** Body logging settings. */
export interface BodyDiagnosticSettings {
  /** Number of request body bytes to log. */
  bytes?: number;
}

export interface DataMasking {
  /** Masking settings for Url query parameters */
  queryParams?: DataMaskingEntity[];
  /** Masking settings for headers */
  headers?: DataMaskingEntity[];
}

export interface DataMaskingEntity {
  /** The name of an entity to mask (e.g. a name of a header or a query parameter). */
  value?: string;
  /** Data masking mode. */
  mode?: DataMaskingMode;
}

/** Paged Issue list representation. */
export interface IssueCollection {
  /**
   * Issue values.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: IssueContract[];
  /** Total record count number across all pages. */
  count?: number;
  /**
   * Next page link if any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Issue contract Base Properties. */
export interface IssueContractBaseProperties {
  /** Date and time when the issue was created. */
  createdDate?: Date;
  /** Status of the issue. */
  state?: State;
  /** A resource identifier for the API the issue was created for. */
  apiId?: string;
}

/** Issue update Parameters. */
export interface IssueUpdateContract {
  /** Date and time when the issue was created. */
  createdDate?: Date;
  /** Status of the issue. */
  state?: State;
  /** A resource identifier for the API the issue was created for. */
  apiId?: string;
  /** The issue title. */
  title?: string;
  /** Text describing the issue. */
  description?: string;
  /** A resource identifier for the user created the issue. */
  userId?: string;
}

/** Paged Issue Comment list representation. */
export interface IssueCommentCollection {
  /**
   * Issue Comment values.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: IssueCommentContract[];
  /** Total record count number across all pages. */
  count?: number;
  /**
   * Next page link if any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Paged Issue Attachment list representation. */
export interface IssueAttachmentCollection {
  /**
   * Issue Attachment values.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: IssueAttachmentContract[];
  /** Total record count number across all pages. */
  count?: number;
  /**
   * Next page link if any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Paged TagDescription list representation. */
export interface TagDescriptionCollection {
  /** Page values. */
  value?: TagDescriptionContract[];
  /** Total record count number across all pages. */
  count?: number;
  /** Next page link if any. */
  nextLink?: string;
}

/** Parameters supplied to the Create TagDescription operation. */
export interface TagDescriptionBaseProperties {
  /** Description of the Tag. */
  description?: string;
  /** Absolute URL of external resources describing the tag. */
  externalDocsUrl?: string;
  /** Description of the external resources describing the tag. */
  externalDocsDescription?: string;
}

/** Parameters supplied to the Create TagDescription operation. */
export interface TagDescriptionCreateParameters {
  /** Description of the Tag. */
  description?: string;
  /** Absolute URL of external resources describing the tag. */
  externalDocsUrl?: string;
  /** Description of the external resources describing the tag. */
  externalDocsDescription?: string;
}

/** Paged Tag list representation. */
export interface TagResourceCollection {
  /** Page values. */
  value?: TagResourceContract[];
  /** Total record count number across all pages. */
  count?: number;
  /** Next page link if any. */
  nextLink?: string;
}

/** TagResource contract properties. */
export interface TagResourceContract {
  /** Tag associated with the resource. */
  tag: TagResourceContractProperties;
  /** API associated with the tag. */
  api?: ApiTagResourceContractProperties;
  /** Operation associated with the tag. */
  operation?: OperationTagResourceContractProperties;
  /** Product associated with the tag. */
  product?: ProductTagResourceContractProperties;
}

/** Contract defining the Tag property in the Tag Resource Contract */
export interface TagResourceContractProperties {
  /** Tag identifier */
  id?: string;
  /** Tag Name */
  name?: string;
}

/** Operation Entity contract Properties. */
export interface OperationTagResourceContractProperties {
  /** Identifier of the operation in form /operations/{operationId}. */
  id?: string;
  /**
   * Operation name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * API Name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly apiName?: string;
  /**
   * API Revision.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly apiRevision?: string;
  /**
   * API Version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly apiVersion?: string;
  /**
   * Operation Description.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
  /**
   * A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly method?: string;
  /**
   * Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly urlTemplate?: string;
}

/** API Export result. */
export interface ApiExportResult {
  /** ResourceId of the API which was exported. */
  id?: string;
  /** Format in which the API Details are exported to the Storage Blob with Sas Key valid for 5 minutes. */
  exportResultFormat?: ExportResultFormat;
  /** The object defining the schema of the exported API Detail */
  value?: ApiExportResultValue;
}

/** The object defining the schema of the exported API Detail */
export interface ApiExportResultValue {
  /** Link to the Storage Blob containing the result of the export operation. The Blob Uri is only valid for 5 minutes. */
  link?: string;
}

/** Paged API Version Set list representation. */
export interface ApiVersionSetCollection {
  /** Page values. */
  value?: ApiVersionSetContract[];
  /** Total record count number across all pages. */
  count?: number;
  /** Next page link if any. */
  nextLink?: string;
}

/** API Version set base parameters */
export interface ApiVersionSetEntityBase {
  /** Description of API Version Set. */
  description?: string;
  /** Name of query parameter that indicates the API Version if versioningScheme is set to `query`. */
  versionQueryName?: string;
  /** Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`. */
  versionHeaderName?: string;
}

/** Parameters to update or create an API Version Set Contract. */
export interface ApiVersionSetUpdateParameters {
  /** Description of API Version Set. */
  description?: string;
  /** Name of query parameter that indicates the API Version if versioningScheme is set to `query`. */
  versionQueryName?: string;
  /** Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`. */
  versionHeaderName?: string;
  /** Name of API Version Set */
  displayName?: string;
  /** An value that determines where the API Version identifier will be located in a HTTP request. */
  versioningScheme?: VersioningScheme;
}

/** Paged OAuth2 Authorization Servers list representation. */
export interface AuthorizationServerCollection {
  /** Page values. */
  value?: AuthorizationServerContract[];
  /** Total record count number across all pages. */
  count?: number;
  /** Next page link if any. */
  nextLink?: string;
}

/** External OAuth authorization server Update settings contract. */
export interface AuthorizationServerContractBaseProperties {
  /** Description of the authorization server. Can contain HTML formatting tags. */
  description?: string;
  /** HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional. */
  authorizationMethods?: AuthorizationMethod[];
  /** Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or Body. When Body is specified, client credentials and other parameters are passed within the request body in the application/x-www-form-urlencoded format. */
  clientAuthenticationMethod?: ClientAuthenticationMethod[];
  /** Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects with name and value string properties, i.e. {"name" : "name value", "value": "a value"}. */
  tokenBodyParameters?: TokenBodyParameterContract[];
  /** OAuth token endpoint. Contains absolute URI to entity being referenced. */
  tokenEndpoint?: string;
  /** If true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security. */
  supportState?: boolean;
  /** Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values. */
  defaultScope?: string;
  /** Specifies the mechanism by which access token is passed to the API. */
  bearerTokenSendingMethods?: BearerTokenSendingMethod[];
  /** Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username. */
  resourceOwnerUsername?: string;
  /** Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password. */
  resourceOwnerPassword?: string;
}

/** OAuth acquire token request body parameter (www-url-form-encoded). */
export interface TokenBodyParameterContract {
  /** body parameter name. */
  name: string;
  /** body parameter value. */
  value: string;
}

/** OAuth Server Secrets Contract. */
export interface AuthorizationServerSecretsContract {
  /** oAuth Authorization Server Secrets. */
  clientSecret?: string;
  /** Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username. */
  resourceOwnerUsername?: string;
  /** Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password. */
  resourceOwnerPassword?: string;
}

/** Paged Backend list representation. */
export interface BackendCollection {
  /** Backend values. */
  value?: BackendContract[];
  /** Total record count number across all pages. */
  count?: number;
  /** Next page link if any. */
  nextLink?: string;
}

/** Backend entity base Parameter set. */
export interface BackendBaseParameters {
  /** Backend Title. */
  title?: string;
  /** Backend Description. */
  description?: string;
  /** Management Uri of the Resource in External System. This url can be the Arm Resource Id of Logic Apps, Function Apps or API Apps. */
  resourceId?: string;
  /** Backend Properties contract */
  properties?: BackendProperties;
  /** Backend Credentials Contract Properties */
  credentials?: BackendCredentialsContract;
  /** Backend Proxy Contract Properties */
  proxy?: BackendProxyContract;
  /** Backend TLS Properties */
  tls?: BackendTlsProperties;
}

/** Properties specific to the Backend Type. */
export interface BackendProperties {
  /** Backend Service Fabric Cluster Properties */
  serviceFabricCluster?: BackendServiceFabricClusterProperties;
}

/** Properties of the Service Fabric Type Backend. */
export interface BackendServiceFabricClusterProperties {
  /** The client certificate id for the management endpoint. */
  clientCertificateId?: string;
  /** The client certificate thumbprint for the management endpoint. Will be ignored if certificatesIds are provided */
  clientCertificatethumbprint?: string;
  /** Maximum number of retries while attempting resolve the partition. */
  maxPartitionResolutionRetries?: number;
  /** The cluster management endpoint. */
  managementEndpoints: string[];
  /** Thumbprints of certificates cluster management service uses for tls communication */
  serverCertificateThumbprints?: string[];
  /** Server X509 Certificate Names Collection */
  serverX509Names?: X509CertificateName[];
}

/** Properties of server X509Names. */
export interface X509CertificateName {
  /** Common Name of the Certificate. */
  name?: string;
  /** Thumbprint for the Issuer of the Certificate. */
  issuerCertificateThumbprint?: string;
}

/** Details of the Credentials used to connect to Backend. */
export interface BackendCredentialsContract {
  /** List of Client Certificate Ids. */
  certificateIds?: string[];
  /** List of Client Certificate Thumbprints. Will be ignored if certificatesIds are provided. */
  certificate?: string[];
  /** Query Parameter description. */
  query?: { [propertyName: string]: string[] };
  /** Header Parameter description. */
  header?: { [propertyName: string]: string[] };
  /** Authorization header authentication */
  authorization?: BackendAuthorizationHeaderCredentials;
}

/** Authorization header information. */
export interface BackendAuthorizationHeaderCredentials {
  /** Authentication Scheme name. */
  scheme: string;
  /** Authentication Parameter value. */
  parameter: string;
}

/** Details of the Backend WebProxy Server to use in the Request to Backend. */
export interface BackendProxyContract {
  /** WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments and query strings. */
  url: string;
  /** Username to connect to the WebProxy server */
  username?: string;
  /** Password to connect to the WebProxy Server */
  password?: string;
}

/** Properties controlling TLS Certificate Validation. */
export interface BackendTlsProperties {
  /** Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for this backend host. */
  validateCertificateChain?: boolean;
  /** Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for this backend host. */
  validateCertificateName?: boolean;
}

/** Backend update parameters. */
export interface BackendUpdateParameters {
  /** Backend Title. */
  title?: string;
  /** Backend Description. */
  description?: string;
  /** Management Uri of the Resource in External System. This url can be the Arm Resource Id of Logic Apps, Function Apps or API Apps. */
  resourceId?: string;
  /** Backend Properties contract */
  properties?: BackendProperties;
  /** Backend Credentials Contract Properties */
  credentials?: BackendCredentialsContract;
  /** Backend Proxy Contract Properties */
  proxy?: BackendProxyContract;
  /** Backend TLS Properties */
  tls?: BackendTlsProperties;
  /** Runtime Url of the Backend. */
  url?: string;
  /** Backend communication protocol. */
  protocol?: BackendProtocol;
}

/** Paged Caches list representation. */
export interface CacheCollection {
  /** Page values. */
  value?: CacheContract[];
  /** Total record count number across all pages. */
  count?: number;
  /** Next page link if any. */
  nextLink?: string;
}

/** Cache update details. */
export interface CacheUpdateParameters {
  /** Cache description */
  description?: string;
  /** Runtime connection string to cache */
  connectionString?: string;
  /** Location identifier to use cache from (should be either 'default' or valid Azure region identifier) */
  useFromLocation?: string;
  /** Original uri of entity in external system cache points to */
  resourceId?: string;
}

/** Paged Certificates list representation. */
export interface CertificateCollection {
  /** Page values. */
  value?: CertificateContract[];
  /** Total record count number across all pages. */
  count?: number;
  /** Next page link if any. */
  nextLink?: string;
}

/** Issue contract Update Properties. */
export interface KeyVaultLastAccessStatusContractProperties {
  /** Last status code for sync and refresh of secret from key vault. */
  code?: string;
  /** Details of the error else empty. */
  message?: string;
  /**
   * Last time secret was accessed. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   *
   */
  timeStampUtc?: Date;
}

/** Create keyVault contract details. */
export interface KeyVaultContractCreateProperties {
  /** Key vault secret identifier for fetching secret. Providing a versioned secret will prevent auto-refresh. This requires API Management service to be configured with aka.ms/apimmsi */
  secretIdentifier?: string;
  /** SystemAssignedIdentity or UserAssignedIdentity Client Id which will be used to access key vault secret. */
  identityClientId?: string;
}

/** Certificate create or update details. */
export interface CertificateCreateOrUpdateParameters {
  /** Base 64 encoded certificate using the application/x-pkcs12 representation. */
  data?: string;
  /** Password for the Certificate */
  password?: string;
  /** KeyVault location details of the certificate. */
  keyVault?: KeyVaultContractCreateProperties;
}

/** A request to perform the connectivity check operation on a API Management service. */
export interface ConnectivityCheckRequest {
  /** Definitions about the connectivity check origin. */
  source: ConnectivityCheckRequestSource;
  /** The connectivity check operation destination. */
  destination: ConnectivityCheckRequestDestination;
  /** The IP version to be used. Only IPv4 is supported for now. */
  preferredIPVersion?: PreferredIPVersion;
  /** The request's protocol. Specific protocol configuration can be available based on this selection. The specified destination address must be coherent with this value. */
  protocol?: ConnectivityCheckProtocol;
  /** Protocol-specific configuration. */
  protocolConfiguration?: ConnectivityCheckRequestProtocolConfiguration;
}

/** Definitions about the connectivity check origin. */
export interface ConnectivityCheckRequestSource {
  /** The API Management service region from where to start the connectivity check operation. */
  region: string;
  /** The particular VMSS instance from which to fire the request. */
  instance?: number;
}

/** The connectivity check operation destination. */
export interface ConnectivityCheckRequestDestination {
  /** Destination address. Can either be an IP address or a FQDN. */
  address: string;
  /** Destination port. */
  port: number;
}

/** Protocol-specific configuration. */
export interface ConnectivityCheckRequestProtocolConfiguration {
  /** Configuration for HTTP or HTTPS requests. */
  httpConfiguration?: ConnectivityCheckRequestProtocolConfigurationHttpConfiguration;
}

/** Configuration for HTTP or HTTPS requests. */
export interface ConnectivityCheckRequestProtocolConfigurationHttpConfiguration {
  /** The HTTP method to be used. */
  method?: Method;
  /** List of HTTP status codes considered valid for the request response. */
  validStatusCodes?: number[];
  /** List of headers to be included in the request. */
  headers?: HttpHeader[];
}

/** HTTP header and it's value. */
export interface HttpHeader {
  /** Header name. */
  name: string;
  /** Header value. */
  value: string;
}

/** Information on the connectivity status. */
export interface ConnectivityCheckResponse {
  /**
   * List of hops between the source and the destination.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hops?: ConnectivityHop[];
  /**
   * The connection status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly connectionStatus?: ConnectionStatus;
  /**
   * Average latency in milliseconds.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly avgLatencyInMs?: number;
  /**
   * Minimum latency in milliseconds.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly minLatencyInMs?: number;
  /**
   * Maximum latency in milliseconds.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maxLatencyInMs?: number;
  /**
   * Total number of probes sent.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly probesSent?: number;
  /**
   * Number of failed probes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly probesFailed?: number;
}

/** Information about a hop between the source and the destination. */
export interface ConnectivityHop {
  /**
   * The type of the hop.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The ID of the hop.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The IP address of the hop.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly address?: string;
  /**
   * The ID of the resource corresponding to this hop.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceId?: string;
  /**
   * List of next hop identifiers.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextHopIds?: string[];
  /**
   * List of issues.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly issues?: ConnectivityIssue[];
}

/** Information about an issue encountered in the process of checking for connectivity. */
export interface ConnectivityIssue {
  /**
   * The origin of the issue.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * The severity of the issue.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly severity?: Severity;
  /**
   * The type of issue.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: IssueType;
  /**
   * Provides additional context on the issue.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly context?: { [propertyName: string]: string }[];
}

/** Paged list of content types. */
export interface ContentTypeCollection {
  /**
   * Collection of content types.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: ContentTypeContract[];
  /**
   * Next page link, if any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Paged list of content items. */
export interface ContentItemCollection {
  /**
   * Collection of content items.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: ContentItemContract[];
  /**
   * Next page link, if any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Paged deleted API Management Services List Representation. */
export interface DeletedServicesCollection {
  /**
   * Page values.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: DeletedServiceContract[];
  /**
   * Next page link if any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Result of the request to list REST API operations. It contains a list of operations and a URL nextLink to get the next set of results. */
export interface OperationListResult {
  /** List of operations supported by the resource provider. */
  value?: Operation[];
  /** URL to get the next set of operation list results if there are any. */
  nextLink?: string;
}

/** REST API operation */
export interface Operation {
  /** Operation name: {provider}/{resource}/{operation} */
  name?: string;
  /** The object that describes the operation. */
  display?: OperationDisplay;
  /** The operation origin. */
  origin?: string;
  /** The operation properties. */
  properties?: Record<string, unknown>;
}

/** The object that describes the operation. */
export interface OperationDisplay {
  /** Friendly name of the resource provider */
  provider?: string;
  /** Operation type: read, write, delete, listKeys/action, etc. */
  operation?: string;
  /** Resource type on which the operation is performed. */
  resource?: string;
  /** Friendly name of the operation */
  description?: string;
}

/** The API Management service SKUs operation response. */
export interface ResourceSkuResults {
  /** The list of skus available for the service. */
  value: ResourceSkuResult[];
  /** The uri to fetch the next page of API Management service Skus. */
  nextLink?: string;
}

/** Describes an available API Management service SKU. */
export interface ResourceSkuResult {
  /**
   * The type of resource the SKU applies to.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceType?: string;
  /**
   * Specifies API Management SKU.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sku?: ResourceSku;
  /**
   * Specifies the number of API Management units.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly capacity?: ResourceSkuCapacity;
}

/** Describes an available API Management SKU. */
export interface ResourceSku {
  /** Name of the Sku. */
  name?: SkuType;
}

/** Describes scaling information of a SKU. */
export interface ResourceSkuCapacity {
  /**
   * The minimum capacity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly minimum?: number;
  /**
   * The maximum capacity that can be set.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maximum?: number;
  /**
   * The default capacity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly default?: number;
  /**
   * The scale type applicable to the sku.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly scaleType?: ResourceSkuCapacityScaleType;
}

/** Parameters supplied to the Backup/Restore of an API Management service operation. */
export interface ApiManagementServiceBackupRestoreParameters {
  /** The name of the Azure storage account (used to place/retrieve the backup). */
  storageAccount: string;
  /** The name of the blob container (used to place/retrieve the backup). */
  containerName: string;
  /** The name of the backup file to create/retrieve. */
  backupName: string;
  /** The type of access to be used for the storage account. */
  accessType?: AccessType;
  /** Storage account access key. Required only if `accessType` is set to `AccessKey`. */
  accessKey?: string;
  /** The Client ID of user assigned managed identity. Required only if `accessType` is set to `UserAssignedManagedIdentity`. */
  clientId?: string;
}

/** Base Properties of an API Management service resource description. */
export interface ApiManagementServiceBaseProperties {
  /** Email address from which the notification will be sent. */
  notificationSenderEmail?: string;
  /**
   * The current provisioning state of the API Management service which can be one of the following: Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /**
   * The provisioning state of the API Management service, which is targeted by the long running operation started on the service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetProvisioningState?: string;
  /**
   * Creation UTC date of the API Management service.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdAtUtc?: Date;
  /**
   * Gateway URL of the API Management service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly gatewayUrl?: string;
  /**
   * Gateway URL of the API Management service in the Default Region.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly gatewayRegionalUrl?: string;
  /**
   * Publisher portal endpoint Url of the API Management service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly portalUrl?: string;
  /**
   * Management API endpoint URL of the API Management service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly managementApiUrl?: string;
  /**
   * SCM endpoint URL of the API Management service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly scmUrl?: string;
  /**
   * DEveloper Portal endpoint URL of the API Management service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly developerPortalUrl?: string;
  /** Custom hostname configuration of the API Management service. */
  hostnameConfigurations?: HostnameConfiguration[];
  /**
   * Public Static Load Balanced IP addresses of the API Management service in Primary region. Available only for Basic, Standard, Premium and Isolated SKU.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly publicIPAddresses?: string[];
  /**
   * Private Static Load Balanced IP addresses of the API Management service in Primary region which is deployed in an Internal Virtual Network. Available only for Basic, Standard, Premium and Isolated SKU.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateIPAddresses?: string[];
  /** Public Standard SKU IP V4 based IP address to be associated with Virtual Network deployed service in the region. Supported only for Developer and Premium SKU being deployed in Virtual Network. */
  publicIpAddressId?: string;
  /** Whether or not public endpoint access is allowed for this API Management service.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'. If 'Disabled', private endpoints are the exclusive access method. Default value is 'Enabled' */
  publicNetworkAccess?: PublicNetworkAccess;
  /** Virtual network configuration of the API Management service. */
  virtualNetworkConfiguration?: VirtualNetworkConfiguration;
  /** Additional datacenter locations of the API Management service. */
  additionalLocations?: AdditionalLocation[];
  /** Custom properties of the API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` will disable the cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1 and 1.2).</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` can be used to disable just TLS 1.1.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` can be used to disable TLS 1.0 on an API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11` can be used to disable just TLS 1.1 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10` can be used to disable TLS 1.0 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2` can be used to enable HTTP2 protocol on an API Management service.</br>Not specifying any of these properties on PATCH operation will reset omitted properties' values to their defaults. For all the settings except Http2 the default value is `True` if the service was created on or before April 1st 2018 and `False` otherwise. Http2 setting's default value is `False`.</br></br>You can disable any of next ciphers by using settings `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.[cipher_name]`: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA. For example, `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA256`:`false`. The default value is `true` for them.  Note: next ciphers can't be disabled since they are required by Azure CloudService internal components: TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384 */
  customProperties?: { [propertyName: string]: string };
  /** List of Certificates that need to be installed in the API Management service. Max supported certificates that can be installed is 10. */
  certificates?: CertificateConfiguration[];
  /** Property only meant to be used for Consumption SKU Service. This enforces a client certificate to be presented on each request to the gateway. This also enables the ability to authenticate the certificate in the policy on the gateway. */
  enableClientCertificate?: boolean;
  /** Property only valid for an Api Management service deployed in multiple locations. This can be used to disable the gateway in master region. */
  disableGateway?: boolean;
  /** The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network having an Intranet Facing Endpoint only. */
  virtualNetworkType?: VirtualNetworkType;
  /** Control Plane Apis version constraint for the API Management service. */
  apiVersionConstraint?: ApiVersionConstraint;
  /** Undelete Api Management Service if it was previously soft-deleted. If this flag is specified and set to True all other properties will be ignored. */
  restore?: boolean;
  /** List of Private Endpoint Connections of this service. */
  privateEndpointConnections?: RemotePrivateEndpointConnectionWrapper[];
  /**
   * Compute Platform Version running the service in this location.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly platformVersion?: PlatformVersion;
}

/** Custom hostname configuration. */
export interface HostnameConfiguration {
  /** Hostname type. */
  type: HostnameType;
  /** Hostname to configure on the Api Management service. */
  hostName: string;
  /** Url to the KeyVault Secret containing the Ssl Certificate. If absolute Url containing version is provided, auto-update of ssl certificate will not work. This requires Api Management service to be configured with aka.ms/apimmsi. The secret should be of type *application/x-pkcs12* */
  keyVaultId?: string;
  /** System or User Assigned Managed identity clientId as generated by Azure AD, which has GET access to the keyVault containing the SSL certificate. */
  identityClientId?: string;
  /** Base64 Encoded certificate. */
  encodedCertificate?: string;
  /** Certificate Password. */
  certificatePassword?: string;
  /** Specify true to setup the certificate associated with this Hostname as the Default SSL Certificate. If a client does not send the SNI header, then this will be the certificate that will be challenged. The property is useful if a service has multiple custom hostname enabled and it needs to decide on the default ssl certificate. The setting only applied to Proxy Hostname Type. */
  defaultSslBinding?: boolean;
  /** Specify true to always negotiate client certificate on the hostname. Default Value is false. */
  negotiateClientCertificate?: boolean;
  /** Certificate information. */
  certificate?: CertificateInformation;
  /** Certificate Source. */
  certificateSource?: CertificateSource;
  /** Certificate Status. */
  certificateStatus?: CertificateStatus;
}

/** SSL certificate information. */
export interface CertificateInformation {
  /** Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard. */
  expiry: Date;
  /** Thumbprint of the certificate. */
  thumbprint: string;
  /** Subject of the certificate. */
  subject: string;
}

/** Configuration of a virtual network to which API Management service is deployed. */
export interface VirtualNetworkConfiguration {
  /**
   * The virtual network ID. This is typically a GUID. Expect a null GUID by default.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vnetid?: string;
  /**
   * The name of the subnet.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subnetname?: string;
  /** The full resource ID of a subnet in a virtual network to deploy the API Management service in. */
  subnetResourceId?: string;
}

/** Description of an additional API Management resource location. */
export interface AdditionalLocation {
  /** The location name of the additional region among Azure Data center regions. */
  location: string;
  /** SKU properties of the API Management service. */
  sku: ApiManagementServiceSkuProperties;
  /** A list of availability zones denoting where the resource needs to come from. */
  zones?: string[];
  /**
   * Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard, Premium and Isolated SKU.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly publicIPAddresses?: string[];
  /**
   * Private Static Load Balanced IP addresses of the API Management service which is deployed in an Internal Virtual Network in a particular additional location. Available only for Basic, Standard, Premium and Isolated SKU.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateIPAddresses?: string[];
  /** Public Standard SKU IP V4 based IP address to be associated with Virtual Network deployed service in the location. Supported only for Premium SKU being deployed in Virtual Network. */
  publicIpAddressId?: string;
  /** Virtual network configuration for the location. */
  virtualNetworkConfiguration?: VirtualNetworkConfiguration;
  /**
   * Gateway URL of the API Management service in the Region.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly gatewayRegionalUrl?: string;
  /** Property only valid for an Api Management service deployed in multiple locations. This can be used to disable the gateway in this additional location. */
  disableGateway?: boolean;
  /**
   * Compute Platform Version running the service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly platformVersion?: PlatformVersion;
}

/** API Management service resource SKU properties. */
export interface ApiManagementServiceSkuProperties {
  /** Name of the Sku. */
  name: SkuType;
  /** Capacity of the SKU (number of deployed units of the SKU). For Consumption SKU capacity must be specified as 0. */
  capacity: number;
}

/** Certificate configuration which consist of non-trusted intermediates and root certificates. */
export interface CertificateConfiguration {
  /** Base64 Encoded certificate. */
  encodedCertificate?: string;
  /** Certificate Password. */
  certificatePassword?: string;
  /** The System.Security.Cryptography.x509certificates.StoreName certificate store location. Only Root and CertificateAuthority are valid locations. */
  storeName: CertificateConfigurationStoreName;
  /** Certificate information. */
  certificate?: CertificateInformation;
}

/** Control Plane Apis version constraint for the API Management service. */
export interface ApiVersionConstraint {
  /** Limit control plane API calls to API Management service with version equal to or newer than this value. */
  minApiVersion?: string;
}

/** Remote Private Endpoint Connection resource. */
export interface RemotePrivateEndpointConnectionWrapper {
  /** Private Endpoint connection resource id */
  id?: string;
  /** Private Endpoint Connection Name */
  name?: string;
  /** Private Endpoint Connection Resource Type */
  type?: string;
  /** The resource of private end point. */
  privateEndpoint?: ArmIdWrapper;
  /** A collection of information about the state of the connection between service consumer and provider. */
  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;
  /**
   * The provisioning state of the private endpoint connection resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /**
   * All the Group ids.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly groupIds?: string[];
}

/** A wrapper for an ARM resource id */
export interface ArmIdWrapper {
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly id?: string;
}

/** A collection of information about the state of the connection between service consumer and provider. */
export interface PrivateLinkServiceConnectionState {
  /** Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service. */
  status?: PrivateEndpointServiceConnectionStatus;
  /** The reason for approval/rejection of the connection. */
  description?: string;
  /** A message indicating if changes on the service provider require any updates on the consumer. */
  actionsRequired?: string;
}

/** Identity properties of the Api Management service resource. */
export interface ApiManagementServiceIdentity {
  /** The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service. */
  type: ApimIdentityType;
  /**
   * The principal id of the identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The client tenant id of the identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /**
   * The list of user identities associated with the resource. The user identity
   * dictionary key references will be ARM resource ids in the form:
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
   *     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
   */
  userAssignedIdentities?: { [propertyName: string]: UserIdentityProperties };
}

export interface UserIdentityProperties {
  /** The principal id of user assigned identity. */
  principalId?: string;
  /** The client id of user assigned identity. */
  clientId?: string;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** The Resource definition. */
export interface ApimResource {
  /**
   * Resource ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Resource name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Resource type for API Management resource is set to Microsoft.ApiManagement.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** The response of the List API Management services operation. */
export interface ApiManagementServiceListResult {
  /** Result of the List API Management services operation. */
  value: ApiManagementServiceResource[];
  /** Link to the next set of results. Not empty if Value contains incomplete list of API Management services. */
  nextLink?: string;
}

/** The response of the GetSsoToken operation. */
export interface ApiManagementServiceGetSsoTokenResult {
  /** Redirect URL to the Publisher Portal containing the SSO token. */
  redirectUri?: string;
}

/** Parameters supplied to the CheckNameAvailability operation. */
export interface ApiManagementServiceCheckNameAvailabilityParameters {
  /** The name to check for availability. */
  name: string;
}

/** Response of the CheckNameAvailability operation. */
export interface ApiManagementServiceNameAvailabilityResult {
  /**
   * True if the name is available and can be used to create a new API Management service; otherwise false.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nameAvailable?: boolean;
  /**
   * If reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource naming requirements so that the user can select a valid name. If reason == AlreadyExists, explain that <resourceName> is already in use, and direct them to select a different name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /** Invalid indicates the name provided does not match the resource provider’s naming requirements (incorrect length, unsupported characters, etc.)  AlreadyExists indicates that the name is already in use and is therefore unavailable. */
  reason?: NameAvailabilityReason;
}

/** Response of the GetDomainOwnershipIdentifier operation. */
export interface ApiManagementServiceGetDomainOwnershipIdentifierResult {
  /**
   * The domain ownership identifier value.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly domainOwnershipIdentifier?: string;
}

/** Parameter supplied to the Apply Network configuration operation. */
export interface ApiManagementServiceApplyNetworkConfigurationParameters {
  /** Location of the Api Management service to update for a multi-region service. For a service deployed in a single region, this parameter is not required. */
  location?: string;
}

/** Paged email template list representation. */
export interface EmailTemplateCollection {
  /** Page values. */
  value?: EmailTemplateContract[];
  /** Total record count number across all pages. */
  count?: number;
  /** Next page link if any. */
  nextLink?: string;
}

/** Email Template Parameter contract. */
export interface EmailTemplateParametersContractProperties {
  /** Template parameter name. */
  name?: string;
  /** Template parameter title. */
  title?: string;
  /** Template parameter description. */
  description?: string;
}

/** Email Template update Parameters. */
export interface EmailTemplateUpdateParameters {
  /** Subject of the Template. */
  subject?: string;
  /** Title of the Template. */
  title?: string;
  /** Description of the Email Template. */
  description?: string;
  /** Email Template Body. This should be a valid XDocument */
  body?: string;
  /** Email Template Parameter values. */
  parameters?: EmailTemplateParametersContractProperties[];
}

/** Paged Gateway list representation. */
export interface GatewayCollection {
  /**
   * Page values.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: GatewayContract[];
  /** Total record count number across all pages. */
  count?: number;
  /**
   * Next page link if any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Resource location data properties. */
export interface ResourceLocationDataContract {
  /** A canonical name for the geographic or physical location. */
  name: string;
  /** The city or locality where the resource is located. */
  city?: string;
  /** The district, state, or province where the resource is located. */
  district?: string;
  /** The country or region where the resource is located. */
  countryOrRegion?: string;
}

/** Gateway authentication keys. */
export interface GatewayKeysContract {
  /** Primary gateway key. */
  primary?: string;
  /** Secondary gateway key. */
  secondary?: string;
}

/** Gateway key regeneration request contract properties. */
export interface GatewayKeyRegenerationRequestContract {
  /** The Key being regenerated. */
  keyType: KeyType;
}

/** Gateway token request contract properties. */
export interface GatewayTokenRequestContract {
  /** The Key to be used to generate gateway token. */
  keyType: KeyType;
  /**
   * The Expiry time of the Token. Maximum token expiry time is set to 30 days. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   *
   */
  expiry: Date;
}

/** Gateway access token. */
export interface GatewayTokenContract {
  /** Shared Access Authentication token value for the Gateway. */
  value?: string;
}

/** Paged Gateway hostname configuration list representation. */
export interface GatewayHostnameConfigurationCollection {
  /**
   * Page values.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: GatewayHostnameConfigurationContract[];
  /**
   * Next page link if any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Paged Gateway certificate authority list representation. */
export interface GatewayCertificateAuthorityCollection {
  /**
   * Page values.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: GatewayCertificateAuthorityContract[];
  /**
   * Next page link if any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Paged Group list representation. */
export interface GroupCollection {
  /** Page values. */
  value?: GroupContract[];
  /** Total record count number across all pages. */
  count?: number;
  /** Next page link if any. */
  nextLink?: string;
}

/** Group contract Properties. */
export interface GroupContractProperties {
  /** Group name. */
  displayName: string;
  /** Group description. Can contain HTML formatting tags. */
  description?: string;
  /**
   * true if the group is one of the three system groups (Administrators, Developers, or Guests); otherwise false.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly builtIn?: boolean;
  /** Group type. */
  type?: GroupType;
  /** For external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory `aad://<tenant>.onmicrosoft.com/groups/<group object id>`; otherwise the value is null. */
  externalId?: string;
}

/** Parameters supplied to the Create Group operation. */
export interface GroupCreateParameters {
  /** Group name. */
  displayName?: string;
  /** Group description. */
  description?: string;
  /** Group type. */
  type?: GroupType;
  /** Identifier of the external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory `aad://<tenant>.onmicrosoft.com/groups/<group object id>`; otherwise the value is null. */
  externalId?: string;
}

/** Parameters supplied to the Update Group operation. */
export interface GroupUpdateParameters {
  /** Group name. */
  displayName?: string;
  /** Group description. */
  description?: string;
  /** Group type. */
  type?: GroupType;
  /** Identifier of the external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory `aad://<tenant>.onmicrosoft.com/groups/<group object id>`; otherwise the value is null. */
  externalId?: string;
}

/** Paged Users list representation. */
export interface UserCollection {
  /** Page values. */
  value?: UserContract[];
  /** Total record count number across all pages. */
  count?: number;
  /** Next page link if any. */
  nextLink?: string;
}

/** User Entity Base Parameters set. */
export interface UserEntityBaseParameters {
  /** Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active. */
  state?: UserState;
  /** Optional note about a user set by the administrator. */
  note?: string;
  /** Collection of user identities. */
  identities?: UserIdentityContract[];
}

/** User identity details. */
export interface UserIdentityContract {
  /** Identity provider name. */
  provider?: string;
  /** Identifier value within provider. */
  id?: string;
}

/** List of all the Identity Providers configured on the service instance. */
export interface IdentityProviderList {
  /** Identity Provider configuration values. */
  value?: IdentityProviderContract[];
  /** Total record count number across all pages. */
  count?: number;
  /** Next page link if any. */
  nextLink?: string;
}

/** Identity Provider Base Parameter Properties. */
export interface IdentityProviderBaseParameters {
  /** Identity Provider Type identifier. */
  type?: IdentityProviderType;
  /** The TenantId to use instead of Common when logging into Active Directory */
  signinTenant?: string;
  /** List of Allowed Tenants when configuring Azure Active Directory login. */
  allowedTenants?: string[];
  /** OpenID Connect discovery endpoint hostname for AAD or AAD B2C. */
  authority?: string;
  /** Signup Policy Name. Only applies to AAD B2C Identity Provider. */
  signupPolicyName?: string;
  /** Signin Policy Name. Only applies to AAD B2C Identity Provider. */
  signinPolicyName?: string;
  /** Profile Editing Policy Name. Only applies to AAD B2C Identity Provider. */
  profileEditingPolicyName?: string;
  /** Password Reset Policy Name. Only applies to AAD B2C Identity Provider. */
  passwordResetPolicyName?: string;
}

/** Parameters supplied to update Identity Provider */
export interface IdentityProviderUpdateParameters {
  /** Identity Provider Type identifier. */
  type?: IdentityProviderType;
  /** The TenantId to use instead of Common when logging into Active Directory */
  signinTenant?: string;
  /** List of Allowed Tenants when configuring Azure Active Directory login. */
  allowedTenants?: string[];
  /** OpenID Connect discovery endpoint hostname for AAD or AAD B2C. */
  authority?: string;
  /** Signup Policy Name. Only applies to AAD B2C Identity Provider. */
  signupPolicyName?: string;
  /** Signin Policy Name. Only applies to AAD B2C Identity Provider. */
  signinPolicyName?: string;
  /** Profile Editing Policy Name. Only applies to AAD B2C Identity Provider. */
  profileEditingPolicyName?: string;
  /** Password Reset Policy Name. Only applies to AAD B2C Identity Provider. */
  passwordResetPolicyName?: string;
  /** Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft. */
  clientId?: string;
  /** Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. */
  clientSecret?: string;
}

/** Client or app secret used in IdentityProviders, Aad, OpenID or OAuth. */
export interface ClientSecretContract {
  /** Client or app secret used in IdentityProviders, Aad, OpenID or OAuth. */
  clientSecret?: string;
}

/** Paged Logger list representation. */
export interface LoggerCollection {
  /** Logger values. */
  value?: LoggerContract[];
  /** Total record count number across all pages. */
  count?: number;
  /** Next page link if any. */
  nextLink?: string;
}

/** Logger update contract. */
export interface LoggerUpdateContract {
  /** Logger type. */
  loggerType?: LoggerType;
  /** Logger description. */
  description?: string;
  /** Logger credentials. */
  credentials?: { [propertyName: string]: string };
  /** Whether records are buffered in the logger before publishing. Default is assumed to be true. */
  isBuffered?: boolean;
}

/** Paged NamedValue list representation. */
export interface NamedValueCollection {
  /** Page values. */
  value?: NamedValueContract[];
  /** Total record count number across all pages. */
  count?: number;
  /** Next page link if any. */
  nextLink?: string;
}

/** NamedValue Entity Base Parameters set. */
export interface NamedValueEntityBaseParameters {
  /** Optional tags that when provided can be used to filter the NamedValue list. */
  tags?: string[];
  /** Determines whether the value is a secret and should be encrypted or not. Default value is false. */
  secret?: boolean;
}

/** NamedValue update Parameters. */
export interface NamedValueUpdateParameters {
  /** Optional tags that when provided can be used to filter the NamedValue list. */
  tags?: string[];
  /** Determines whether the value is a secret and should be encrypted or not. Default value is false. */
  secret?: boolean;
  /** Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters. */
  displayName?: string;
  /** Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace. */
  value?: string;
  /** KeyVault location details of the namedValue. */
  keyVault?: KeyVaultContractCreateProperties;
}

/** Client or app secret used in IdentityProviders, Aad, OpenID or OAuth. */
export interface NamedValueSecretContract {
  /** This is secret value of the NamedValue entity. */
  value?: string;
}

/** Network Status in the Location */
export interface NetworkStatusContractByLocation {
  /** Location of service */
  location?: string;
  /** Network status in Location */
  networkStatus?: NetworkStatusContract;
}

/** Network Status details. */
export interface NetworkStatusContract {
  /** Gets the list of DNS servers IPV4 addresses. */
  dnsServers: string[];
  /** Gets the list of Connectivity Status to the Resources on which the service depends upon. */
  connectivityStatus: ConnectivityStatusContract[];
}

/** Details about connectivity to a resource. */
export interface ConnectivityStatusContract {
  /** The hostname of the resource which the service depends on. This can be the database, storage or any other azure resource on which the service depends upon. */
  name: string;
  /** Resource Connectivity Status Type identifier. */
  status: ConnectivityStatusType;
  /** Error details of the connectivity to the resource. */
  error?: string;
  /**
   * The date when the resource connectivity status was last updated. This status should be updated every 15 minutes. If this status has not been updated, then it means that the service has lost network connectivity to the resource, from inside the Virtual Network.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   *
   */
  lastUpdated: Date;
  /**
   * The date when the resource connectivity status last Changed from success to failure or vice-versa. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   *
   */
  lastStatusChange: Date;
  /** Resource Type. */
  resourceType: string;
  /** Whether this is optional. */
  isOptional: boolean;
}

/** Paged Notification list representation. */
export interface NotificationCollection {
  /** Page values. */
  value?: NotificationContract[];
  /** Total record count number across all pages. */
  count?: number;
  /** Next page link if any. */
  nextLink?: string;
}

/** Notification Parameter contract. */
export interface RecipientsContractProperties {
  /** List of Emails subscribed for the notification. */
  emails?: string[];
  /** List of Users subscribed for the notification. */
  users?: string[];
}

/** Paged Recipient User list representation. */
export interface RecipientUserCollection {
  /** Page values. */
  value?: RecipientUserContract[];
  /** Total record count number across all pages. */
  count?: number;
  /** Next page link if any. */
  nextLink?: string;
}

/** Paged Recipient User list representation. */
export interface RecipientEmailCollection {
  /** Page values. */
  value?: RecipientEmailContract[];
  /** Total record count number across all pages. */
  count?: number;
  /** Next page link if any. */
  nextLink?: string;
}

/** Paged OpenIdProviders list representation. */
export interface OpenIdConnectProviderCollection {
  /** Page values. */
  value?: OpenidConnectProviderContract[];
  /** Total record count number across all pages. */
  count?: number;
  /** Next page link if any. */
  nextLink?: string;
}

/** Parameters supplied to the Update OpenID Connect Provider operation. */
export interface OpenidConnectProviderUpdateContract {
  /** User-friendly OpenID Connect Provider name. */
  displayName?: string;
  /** User-friendly description of OpenID Connect Provider. */
  description?: string;
  /** Metadata endpoint URI. */
  metadataEndpoint?: string;
  /** Client ID of developer console which is the client application. */
  clientId?: string;
  /** Client Secret of developer console which is the client application. */
  clientSecret?: string;
}

/** Collection of Outbound Environment Endpoints */
export interface OutboundEnvironmentEndpointList {
  /** Collection of resources. */
  value: OutboundEnvironmentEndpoint[];
  /**
   * Link to next page of resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Endpoints accessed for a common purpose that the Api Management Service requires outbound network access to. */
export interface OutboundEnvironmentEndpoint {
  /** The type of service accessed by the Api Management Service, e.g., Azure Storage, Azure SQL Database, and Azure Active Directory. */
  category?: string;
  /** The endpoints that the Api Management Service reaches the service at. */
  endpoints?: EndpointDependency[];
}

/** A domain name that a service is reached at. */
export interface EndpointDependency {
  /** The domain name of the dependency. */
  domainName?: string;
  /** The Ports used when connecting to DomainName. */
  endpointDetails?: EndpointDetail[];
}

/** Current TCP connectivity information from the Api Management Service to a single endpoint. */
export interface EndpointDetail {
  /** The port an endpoint is connected to. */
  port?: number;
  /** The region of the dependency. */
  region?: string;
}

/** Descriptions of APIM policies. */
export interface PolicyDescriptionCollection {
  /** Descriptions of APIM policies. */
  value?: PolicyDescriptionContract[];
  /** Total record count number. */
  count?: number;
}

/** Paged list of portal revisions. */
export interface PortalRevisionCollection {
  /**
   * Collection of portal revisions.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: PortalRevisionContract[];
  /**
   * Next page link, if any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Descriptions of APIM policies. */
export interface PortalSettingsCollection {
  /** Descriptions of APIM policies. */
  value?: PortalSettingsContract[];
  /** Total record count number. */
  count?: number;
}

/** Subscriptions delegation settings properties. */
export interface SubscriptionsDelegationSettingsProperties {
  /** Enable or disable delegation for subscriptions. */
  enabled?: boolean;
}

/** User registration delegation settings properties. */
export interface RegistrationDelegationSettingsProperties {
  /** Enable or disable delegation for user registration. */
  enabled?: boolean;
}

/** Terms of service contract properties. */
export interface TermsOfServiceProperties {
  /** A terms of service text. */
  text?: string;
  /** Display terms of service during a sign-up process. */
  enabled?: boolean;
  /** Ask user for consent to the terms of service. */
  consentRequired?: boolean;
}

/** Client or app secret used in IdentityProviders, Aad, OpenID or OAuth. */
export interface PortalSettingValidationKeyContract {
  /** This is secret value of the validation key in portal settings. */
  validationKey?: string;
}

/** List of private endpoint connection associated with the specified storage account */
export interface PrivateEndpointConnectionListResult {
  /** Array of private endpoint connections */
  value?: PrivateEndpointConnection[];
}

/** The Private Endpoint resource. */
export interface PrivateEndpoint {
  /**
   * The ARM identifier for Private Endpoint
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
}

/** A request to approve or reject a private endpoint connection */
export interface PrivateEndpointConnectionRequest {
  /** Private Endpoint Connection Resource Id. */
  id?: string;
  /** The connection state of the private endpoint connection. */
  properties?: PrivateEndpointConnectionRequestProperties;
}

/** The connection state of the private endpoint connection. */
export interface PrivateEndpointConnectionRequestProperties {
  /** A collection of information about the state of the connection between service consumer and provider. */
  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;
}

/** A list of private link resources */
export interface PrivateLinkResourceListResult {
  /** Array of private link resources */
  value?: PrivateLinkResource[];
}

/** Product Update parameters. */
export interface ProductUpdateParameters {
  /** Product description. May include HTML formatting tags. */
  description?: string;
  /** Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms before they can complete the subscription process. */
  terms?: string;
  /** Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred to as "protected" and a valid subscription key is required for a request to an API included in the product to succeed. If false, the product is referred to as "open" and requests to an API included in the product can be made without a subscription key. If property is omitted when creating a new product it's value is assumed to be true. */
  subscriptionRequired?: boolean;
  /** whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers to call the product’s APIs immediately after subscribing. If true, administrators must manually approve the subscription before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and has a value of false. */
  approvalRequired?: boolean;
  /** Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false. */
  subscriptionsLimit?: number;
  /** whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators. Default state of Product is notPublished. */
  state?: ProductState;
  /** Product name. */
  displayName?: string;
}

/** Paged Subscriptions list representation. */
export interface SubscriptionCollection {
  /** Page values. */
  value?: SubscriptionContract[];
  /** Total record count number across all pages. */
  count?: number;
  /** Next page link if any. */
  nextLink?: string;
}

/** Paged Quota Counter list representation. */
export interface QuotaCounterCollection {
  /** Quota counter values. */
  value?: QuotaCounterContract[];
  /** Total record count number across all pages. */
  count?: number;
  /** Next page link if any. */
  nextLink?: string;
}

/** Quota counter details. */
export interface QuotaCounterContract {
  /** The Key value of the Counter. Must not be empty. */
  counterKey: string;
  /** Identifier of the Period for which the counter was collected. Must not be empty. */
  periodKey: string;
  /**
   * The date of the start of Counter Period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   *
   */
  periodStartTime: Date;
  /**
   * The date of the end of Counter Period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   *
   */
  periodEndTime: Date;
  /** Quota Value Properties */
  value?: QuotaCounterValueContractProperties;
}

/** Quota counter value details. */
export interface QuotaCounterValueContractProperties {
  /** Number of times Counter was called. */
  callsCount?: number;
  /** Data Transferred in KiloBytes. */
  kbTransferred?: number;
}

/** Quota counter value details. */
export interface QuotaCounterValueUpdateContract {
  /** Number of times Counter was called. */
  callsCount?: number;
  /** Data Transferred in KiloBytes. */
  kbTransferred?: number;
}

/** Lists Regions operation response details. */
export interface RegionListResult {
  /** Lists of Regions. */
  value?: RegionContract[];
  /** Total record count number across all pages. */
  count?: number;
  /** Next page link if any. */
  nextLink?: string;
}

/** Region profile. */
export interface RegionContract {
  /**
   * Region name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /** whether Region is the master region. */
  isMasterRegion?: boolean;
  /** whether Region is deleted. */
  isDeleted?: boolean;
}

/** Paged Report records list representation. */
export interface ReportCollection {
  /** Page values. */
  value?: ReportRecordContract[];
  /** Total record count number across all pages. */
  count?: number;
  /** Next page link if any. */
  nextLink?: string;
}

/** Report data. */
export interface ReportRecordContract {
  /** Name depending on report endpoint specifies product, API, operation or developer name. */
  name?: string;
  /**
   * Start of aggregation period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   *
   */
  timestamp?: Date;
  /** Length of aggregation period.  Interval must be multiple of 15 minutes and may not be zero. The value should be in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations). */
  interval?: string;
  /** Country to which this record data is related. */
  country?: string;
  /** Country region to which this record data is related. */
  region?: string;
  /** Zip code to which this record data is related. */
  zip?: string;
  /**
   * User identifier path. /users/{userId}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly userId?: string;
  /**
   * Product identifier path. /products/{productId}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productId?: string;
  /** API identifier path. /apis/{apiId} */
  apiId?: string;
  /** Operation identifier path. /apis/{apiId}/operations/{operationId} */
  operationId?: string;
  /** API region identifier. */
  apiRegion?: string;
  /** Subscription identifier path. /subscriptions/{subscriptionId} */
  subscriptionId?: string;
  /** Number of successful calls. This includes calls returning HttpStatusCode <= 301 and HttpStatusCode.NotModified and HttpStatusCode.TemporaryRedirect */
  callCountSuccess?: number;
  /** Number of calls blocked due to invalid credentials. This includes calls returning HttpStatusCode.Unauthorized and HttpStatusCode.Forbidden and HttpStatusCode.TooManyRequests */
  callCountBlocked?: number;
  /** Number of calls failed due to proxy or backend errors. This includes calls returning HttpStatusCode.BadRequest(400) and any Code between HttpStatusCode.InternalServerError (500) and 600 */
  callCountFailed?: number;
  /** Number of other calls. */
  callCountOther?: number;
  /** Total number of calls. */
  callCountTotal?: number;
  /** Bandwidth consumed. */
  bandwidth?: number;
  /** Number of times when content was served from cache policy. */
  cacheHitCount?: number;
  /** Number of times content was fetched from backend. */
  cacheMissCount?: number;
  /** Average time it took to process request. */
  apiTimeAvg?: number;
  /** Minimum time it took to process request. */
  apiTimeMin?: number;
  /** Maximum time it took to process request. */
  apiTimeMax?: number;
  /** Average time it took to process request on backend. */
  serviceTimeAvg?: number;
  /** Minimum time it took to process request on backend. */
  serviceTimeMin?: number;
  /** Maximum time it took to process request on backend. */
  serviceTimeMax?: number;
}

/** Paged Report records list representation. */
export interface RequestReportCollection {
  /** Page values. */
  value?: RequestReportRecordContract[];
  /** Total record count number across all pages. */
  count?: number;
}

/** Request Report data. */
export interface RequestReportRecordContract {
  /** API identifier path. /apis/{apiId} */
  apiId?: string;
  /** Operation identifier path. /apis/{apiId}/operations/{operationId} */
  operationId?: string;
  /**
   * Product identifier path. /products/{productId}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productId?: string;
  /**
   * User identifier path. /users/{userId}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly userId?: string;
  /** The HTTP method associated with this request.. */
  method?: string;
  /** The full URL associated with this request. */
  url?: string;
  /** The client IP address associated with this request. */
  ipAddress?: string;
  /** The HTTP status code received by the gateway as a result of forwarding this request to the backend. */
  backendResponseCode?: string;
  /** The HTTP status code returned by the gateway. */
  responseCode?: number;
  /** The size of the response returned by the gateway. */
  responseSize?: number;
  /** The date and time when this request was received by the gateway in ISO 8601 format. */
  timestamp?: Date;
  /** Specifies if response cache was involved in generating the response. If the value is none, the cache was not used. If the value is hit, cached response was returned. If the value is miss, the cache was used but lookup resulted in a miss and request was fulfilled by the backend. */
  cache?: string;
  /** The total time it took to process this request. */
  apiTime?: number;
  /** he time it took to forward this request to the backend and get the response back. */
  serviceTime?: number;
  /** Azure region where the gateway that processed this request is located. */
  apiRegion?: string;
  /** Subscription identifier path. /subscriptions/{subscriptionId} */
  subscriptionId?: string;
  /** Request Identifier. */
  requestId?: string;
  /** The size of this request.. */
  requestSize?: number;
}

/** Paged AccessInformation list representation. */
export interface TenantSettingsCollection {
  /**
   * Page values.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: TenantSettingsContract[];
  /**
   * Next page link if any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** The List Resource Skus operation response. */
export interface ApiManagementSkusResult {
  /** The list of skus available for the subscription. */
  value: ApiManagementSku[];
  /**
   * The URI to fetch the next page of Resource Skus. Call ListNext() with this URI to fetch the next page of Resource Skus
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Describes an available ApiManagement SKU. */
export interface ApiManagementSku {
  /**
   * The type of resource the SKU applies to.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceType?: string;
  /**
   * The name of SKU.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic**
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tier?: string;
  /**
   * The Size of the SKU.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly size?: string;
  /**
   * The Family of this particular SKU.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly family?: string;
  /**
   * The Kind of resources that are supported in this SKU.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly kind?: string;
  /**
   * Specifies the number of virtual machines in the scale set.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly capacity?: ApiManagementSkuCapacity;
  /**
   * The set of locations that the SKU is available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly locations?: string[];
  /**
   * A list of locations and availability zones in those locations where the SKU is available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly locationInfo?: ApiManagementSkuLocationInfo[];
  /**
   * The api versions that support this SKU.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly apiVersions?: string[];
  /**
   * Metadata for retrieving price info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly costs?: ApiManagementSkuCosts[];
  /**
   * A name value pair to describe the capability.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly capabilities?: ApiManagementSkuCapabilities[];
  /**
   * The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly restrictions?: ApiManagementSkuRestrictions[];
}

/** Describes scaling information of a SKU. */
export interface ApiManagementSkuCapacity {
  /**
   * The minimum capacity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly minimum?: number;
  /**
   * The maximum capacity that can be set.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maximum?: number;
  /**
   * The default capacity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly default?: number;
  /**
   * The scale type applicable to the sku.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly scaleType?: ApiManagementSkuCapacityScaleType;
}

export interface ApiManagementSkuLocationInfo {
  /**
   * Location of the SKU
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly location?: string;
  /**
   * List of availability zones where the SKU is supported.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly zones?: string[];
  /**
   * Details of capabilities available to a SKU in specific zones.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly zoneDetails?: ApiManagementSkuZoneDetails[];
}

/** Describes The zonal capabilities of a SKU. */
export interface ApiManagementSkuZoneDetails {
  /**
   * The set of zones that the SKU is available in with the specified capabilities.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string[];
  /**
   * A list of capabilities that are available for the SKU in the specified list of zones.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly capabilities?: ApiManagementSkuCapabilities[];
}

/** Describes The SKU capabilities object. */
export interface ApiManagementSkuCapabilities {
  /**
   * An invariant to describe the feature.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * An invariant if the feature is measured by quantity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: string;
}

/** Describes metadata for retrieving price info. */
export interface ApiManagementSkuCosts {
  /**
   * Used for querying price from commerce.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly meterID?: string;
  /**
   * The multiplier is needed to extend the base metered cost.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly quantity?: number;
  /**
   * An invariant to show the extended unit.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly extendedUnit?: string;
}

/** Describes scaling information of a SKU. */
export interface ApiManagementSkuRestrictions {
  /**
   * The type of restrictions.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: ApiManagementSkuRestrictionsType;
  /**
   * The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly values?: string[];
  /**
   * The information about the restriction where the SKU cannot be used.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly restrictionInfo?: ApiManagementSkuRestrictionInfo;
  /**
   * The reason for restriction.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reasonCode?: ApiManagementSkuRestrictionsReasonCode;
}

export interface ApiManagementSkuRestrictionInfo {
  /**
   * Locations where the SKU is restricted
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly locations?: string[];
  /**
   * List of availability zones where the SKU is restricted.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly zones?: string[];
}

/** Subscription create details. */
export interface SubscriptionCreateParameters {
  /** User (user id path) for whom subscription is being created in form /users/{userId} */
  ownerId?: string;
  /** Scope like /products/{productId} or /apis or /apis/{apiId}. */
  scope?: string;
  /** Subscription name. */
  displayName?: string;
  /** Primary subscription key. If not specified during request key will be generated automatically. */
  primaryKey?: string;
  /** Secondary subscription key. If not specified during request key will be generated automatically. */
  secondaryKey?: string;
  /** Initial subscription state. If no value is specified, subscription is created with Submitted state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated. */
  state?: SubscriptionState;
  /** Determines whether tracing can be enabled */
  allowTracing?: boolean;
}

/** Subscription update details. */
export interface SubscriptionUpdateParameters {
  /** User identifier path: /users/{userId} */
  ownerId?: string;
  /** Scope like /products/{productId} or /apis or /apis/{apiId} */
  scope?: string;
  /** Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard. */
  expirationDate?: Date;
  /** Subscription name. */
  displayName?: string;
  /** Primary subscription key. */
  primaryKey?: string;
  /** Secondary subscription key. */
  secondaryKey?: string;
  /** Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated. */
  state?: SubscriptionState;
  /** Comments describing subscription state change by the administrator when the state is changed to the 'rejected'. */
  stateComment?: string;
  /** Determines whether tracing can be enabled */
  allowTracing?: boolean;
}

/** Subscription keys. */
export interface SubscriptionKeysContract {
  /** Subscription primary key. */
  primaryKey?: string;
  /** Subscription secondary key. */
  secondaryKey?: string;
}

/** Parameters supplied to Create/Update Tag operations. */
export interface TagCreateUpdateParameters {
  /** Tag name. */
  displayName?: string;
}

/** Paged AccessInformation list representation. */
export interface AccessInformationCollection {
  /**
   * Page values.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: AccessInformationContract[];
  /** Total record count number across all pages. */
  count?: number;
  /**
   * Next page link if any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Tenant access information update parameters. */
export interface AccessInformationCreateParameters {
  /** Principal (User) Identifier. */
  principalId?: string;
  /** Primary access key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value. */
  primaryKey?: string;
  /** Secondary access key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value. */
  secondaryKey?: string;
  /** Determines whether direct access is enabled. */
  enabled?: boolean;
}

/** Tenant access information update parameters. */
export interface AccessInformationUpdateParameters {
  /** Determines whether direct access is enabled. */
  enabled?: boolean;
}

/** Tenant access information contract of the API Management service. */
export interface AccessInformationSecretsContract {
  /** Access Information type ('access' or 'gitAccess') */
  id?: string;
  /** Principal (User) Identifier. */
  principalId?: string;
  /** Primary access key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value. */
  primaryKey?: string;
  /** Secondary access key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value. */
  secondaryKey?: string;
  /** Determines whether direct access is enabled. */
  enabled?: boolean;
}

/** Deploy Tenant Configuration Contract. */
export interface DeployConfigurationParameters {
  /** The name of the Git branch from which the configuration is to be deployed to the configuration database. */
  branch?: string;
  /** The value enforcing deleting subscriptions to products that are deleted in this update. */
  force?: boolean;
}

/** Log of the entity being created, updated or deleted. */
export interface OperationResultLogItemContract {
  /** The type of entity contract. */
  objectType?: string;
  /** Action like create/update/delete. */
  action?: string;
  /** Identifier of the entity being created/updated/deleted. */
  objectKey?: string;
}

/** Save Tenant Configuration Contract details. */
export interface SaveConfigurationParameter {
  /** The name of the Git branch in which to commit the current configuration snapshot. */
  branch?: string;
  /** The value if true, the current configuration database is committed to the Git repository, even if the Git repository has newer changes that would be overwritten. */
  force?: boolean;
}

/** User create details. */
export interface UserCreateParameters {
  /** Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active. */
  state?: UserState;
  /** Optional note about a user set by the administrator. */
  note?: string;
  /** Collection of user identities. */
  identities?: UserIdentityContract[];
  /** Email address. Must not be empty and must be unique within the service instance. */
  email?: string;
  /** First name. */
  firstName?: string;
  /** Last name. */
  lastName?: string;
  /** User Password. If no value is provided, a default password is generated. */
  password?: string;
  /** Determines the type of application which send the create user request. Default is legacy portal. */
  appType?: AppType;
  /** Determines the type of confirmation e-mail that will be sent to the newly created user. */
  confirmation?: Confirmation;
}

/** User update parameters. */
export interface UserUpdateParameters {
  /** Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active. */
  state?: UserState;
  /** Optional note about a user set by the administrator. */
  note?: string;
  /** Collection of user identities. */
  identities?: UserIdentityContract[];
  /** Email address. Must not be empty and must be unique within the service instance. */
  email?: string;
  /** User Password. */
  password?: string;
  /** First name. */
  firstName?: string;
  /** Last name. */
  lastName?: string;
}

/** Generate SSO Url operations response details. */
export interface GenerateSsoUrlResult {
  /** Redirect Url containing the SSO URL value. */
  value?: string;
}

/** List of Users Identity list representation. */
export interface UserIdentityCollection {
  /** User Identity values. */
  value?: UserIdentityContract[];
  /** Total record count number across all pages. */
  count?: number;
  /** Next page link if any. */
  nextLink?: string;
}

/** Get User Token parameters. */
export interface UserTokenParameters {
  /** The Key to be used to generate token for user. */
  keyType?: KeyType;
  /**
   * The Expiry time of the Token. Maximum token expiry time is set to 30 days. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   *
   */
  expiry?: Date;
}

/** Get User Token response details. */
export interface UserTokenResult {
  /** Shared Access Authorization token for the User. */
  value?: string;
}

/** Object used to create an API Revision or Version based on an existing API Revision */
export interface ApiRevisionInfoContract {
  /** Resource identifier of API to be used to create the revision from. */
  sourceApiId?: string;
  /** Version identifier for the new API Version. */
  apiVersionName?: string;
  /** Description of new API Revision. */
  apiRevisionDescription?: string;
  /** Version set details */
  apiVersionSet?: ApiVersionSetContractDetails;
}

/** Quota counter value details. */
export interface QuotaCounterValueContract {
  /** Number of times Counter was called. */
  callsCount?: number;
  /** Data Transferred in KiloBytes. */
  kbTransferred?: number;
}

/** API Entity Properties */
export interface ApiContractProperties extends ApiEntityBaseContract {
  /** API identifier of the source API. */
  sourceApiId?: string;
  /** API name. Must be 1 to 300 characters long. */
  displayName?: string;
  /** Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long. */
  serviceUrl?: string;
  /** Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API. */
  path: string;
  /** Describes on which protocols the operations in this API can be invoked. */
  protocols?: Protocol[];
  /** Version set details */
  apiVersionSet?: ApiVersionSetContractDetails;
}

/** API update contract properties. */
export interface ApiContractUpdateProperties extends ApiEntityBaseContract {
  /** API name. */
  displayName?: string;
  /** Absolute URL of the backend service implementing this API. */
  serviceUrl?: string;
  /** Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API. */
  path?: string;
  /** Describes on which protocols the operations in this API can be invoked. */
  protocols?: Protocol[];
}

/** API contract properties for the Tag Resources. */
export interface ApiTagResourceContractProperties
  extends ApiEntityBaseContract {
  /** API identifier in the form /apis/{apiId}. */
  id?: string;
  /** API name. */
  name?: string;
  /** Absolute URL of the backend service implementing this API. */
  serviceUrl?: string;
  /** Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API. */
  path?: string;
  /** Describes on which protocols the operations in this API can be invoked. */
  protocols?: Protocol[];
}

/** API details. */
export interface ApiContract extends Resource {
  /** Description of the API. May include HTML formatting tags. */
  description?: string;
  /** Collection of authentication settings included into this API. */
  authenticationSettings?: AuthenticationSettingsContract;
  /** Protocols over which API is made available. */
  subscriptionKeyParameterNames?: SubscriptionKeyParameterNamesContract;
  /** Type of API. */
  apiType?: ApiType;
  /** Describes the revision of the API. If no value is provided, default revision 1 is created */
  apiRevision?: string;
  /** Indicates the version identifier of the API if the API is versioned */
  apiVersion?: string;
  /** Indicates if API revision is current api revision. */
  isCurrent?: boolean;
  /**
   * Indicates if API revision is accessible via the gateway.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isOnline?: boolean;
  /** Description of the API Revision. */
  apiRevisionDescription?: string;
  /** Description of the API Version. */
  apiVersionDescription?: string;
  /** A resource identifier for the related ApiVersionSet. */
  apiVersionSetId?: string;
  /** Specifies whether an API or Product subscription is required for accessing the API. */
  subscriptionRequired?: boolean;
  /**  A URL to the Terms of Service for the API. MUST be in the format of a URL. */
  termsOfServiceUrl?: string;
  /** Contact information for the API. */
  contact?: ApiContactInformation;
  /** License information for the API. */
  license?: ApiLicenseInformation;
  /** API identifier of the source API. */
  sourceApiId?: string;
  /** API name. Must be 1 to 300 characters long. */
  displayName?: string;
  /** Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long. */
  serviceUrl?: string;
  /** Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API. */
  path?: string;
  /** Describes on which protocols the operations in this API can be invoked. */
  protocols?: Protocol[];
  /** Version set details */
  apiVersionSet?: ApiVersionSetContractDetails;
}

/** ApiRelease details. */
export interface ApiReleaseContract extends Resource {
  /** Identifier of the API the release belongs to. */
  apiId?: string;
  /**
   * The time the API was released. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdDateTime?: Date;
  /**
   * The time the API release was updated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly updatedDateTime?: Date;
  /** Release Notes */
  notes?: string;
}

/** API Operation details. */
export interface OperationContract extends Resource {
  /** Collection of URL template parameters. */
  templateParameters?: ParameterContract[];
  /** Description of the operation. May include HTML formatting tags. */
  description?: string;
  /** An entity containing request details. */
  request?: RequestContract;
  /** Array of Operation responses. */
  responses?: ResponseContract[];
  /** Operation Policies */
  policies?: string;
  /** Operation Name. */
  displayName?: string;
  /** A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them. */
  method?: string;
  /** Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date} */
  urlTemplate?: string;
}

/** Policy Contract details. */
export interface PolicyContract extends Resource {
  /** Contents of the Policy as defined by the format. */
  value?: string;
  /** Format of the policyContent. */
  format?: PolicyContentFormat;
}

/** Tag Contract details. */
export interface TagContract extends Resource {
  /** Tag name. */
  displayName?: string;
}

/** Product details. */
export interface ProductContract extends Resource {
  /** Product description. May include HTML formatting tags. */
  description?: string;
  /** Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms before they can complete the subscription process. */
  terms?: string;
  /** Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred to as "protected" and a valid subscription key is required for a request to an API included in the product to succeed. If false, the product is referred to as "open" and requests to an API included in the product can be made without a subscription key. If property is omitted when creating a new product it's value is assumed to be true. */
  subscriptionRequired?: boolean;
  /** whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers to call the product’s APIs immediately after subscribing. If true, administrators must manually approve the subscription before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and has a value of false. */
  approvalRequired?: boolean;
  /** Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false. */
  subscriptionsLimit?: number;
  /** whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators. Default state of Product is notPublished. */
  state?: ProductState;
  /** Product name. */
  displayName?: string;
}

/** Schema Contract details. */
export interface SchemaContract extends Resource {
  /** Must be a valid a media type used in a Content-Type header as defined in the RFC 2616. Media type of the schema document (e.g. application/json, application/xml). </br> - `Swagger` Schema use `application/vnd.ms-azure-apim.swagger.definitions+json` </br> - `WSDL` Schema use `application/vnd.ms-azure-apim.xsd+xml` </br> - `OpenApi` Schema use `application/vnd.oai.openapi.components+json` </br> - `WADL Schema` use `application/vnd.ms-azure-apim.wadl.grammars+xml`. */
  contentType?: string;
  /** Json escaped string defining the document representing the Schema. Used for schemas other than Swagger/OpenAPI. */
  value?: string;
  /** Types definitions. Used for OpenAPI v2 (Swagger) schemas only, null otherwise. */
  definitions?: Record<string, unknown>;
  /** Types definitions. Used for OpenAPI v3 schemas only, null otherwise. */
  components?: Record<string, unknown>;
}

/** Diagnostic details. */
export interface DiagnosticContract extends Resource {
  /** Specifies for what type of messages sampling settings should not apply. */
  alwaysLog?: AlwaysLog;
  /** Resource Id of a target logger. */
  loggerId?: string;
  /** Sampling settings for Diagnostic. */
  sampling?: SamplingSettings;
  /** Diagnostic settings for incoming/outgoing HTTP messages to the Gateway. */
  frontend?: PipelineDiagnosticSettings;
  /** Diagnostic settings for incoming/outgoing HTTP messages to the Backend */
  backend?: PipelineDiagnosticSettings;
  /** Log the ClientIP. Default is false. */
  logClientIp?: boolean;
  /** Sets correlation protocol to use for Application Insights diagnostics. */
  httpCorrelationProtocol?: HttpCorrelationProtocol;
  /** The verbosity level applied to traces emitted by trace policies. */
  verbosity?: Verbosity;
  /** The format of the Operation Name for Application Insights telemetries. Default is Name. */
  operationNameFormat?: OperationNameFormat;
}

/** Issue Contract details. */
export interface IssueContract extends Resource {
  /** Date and time when the issue was created. */
  createdDate?: Date;
  /** Status of the issue. */
  state?: State;
  /** A resource identifier for the API the issue was created for. */
  apiId?: string;
  /** The issue title. */
  title?: string;
  /** Text describing the issue. */
  description?: string;
  /** A resource identifier for the user created the issue. */
  userId?: string;
}

/** Issue Comment Contract details. */
export interface IssueCommentContract extends Resource {
  /** Comment text. */
  text?: string;
  /** Date and time when the comment was created. */
  createdDate?: Date;
  /** A resource identifier for the user who left the comment. */
  userId?: string;
}

/** Issue Attachment Contract details. */
export interface IssueAttachmentContract extends Resource {
  /** Filename by which the binary data will be saved. */
  title?: string;
  /** Either 'link' if content is provided via an HTTP link or the MIME type of the Base64-encoded binary data provided in the 'content' property. */
  contentFormat?: string;
  /** An HTTP link or Base64-encoded binary data. */
  content?: string;
}

/** Contract details. */
export interface TagDescriptionContract extends Resource {
  /** Description of the Tag. */
  description?: string;
  /** Absolute URL of external resources describing the tag. */
  externalDocsUrl?: string;
  /** Description of the external resources describing the tag. */
  externalDocsDescription?: string;
  /** Identifier of the tag in the form of /tags/{tagId} */
  tagId?: string;
  /** Tag name. */
  displayName?: string;
}

/** API Version Set Contract details. */
export interface ApiVersionSetContract extends Resource {
  /** Description of API Version Set. */
  description?: string;
  /** Name of query parameter that indicates the API Version if versioningScheme is set to `query`. */
  versionQueryName?: string;
  /** Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`. */
  versionHeaderName?: string;
  /** Name of API Version Set */
  displayName?: string;
  /** An value that determines where the API Version identifier will be located in a HTTP request. */
  versioningScheme?: VersioningScheme;
}

/** External OAuth authorization server settings. */
export interface AuthorizationServerContract extends Resource {
  /** Description of the authorization server. Can contain HTML formatting tags. */
  description?: string;
  /** HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional. */
  authorizationMethods?: AuthorizationMethod[];
  /** Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or Body. When Body is specified, client credentials and other parameters are passed within the request body in the application/x-www-form-urlencoded format. */
  clientAuthenticationMethod?: ClientAuthenticationMethod[];
  /** Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects with name and value string properties, i.e. {"name" : "name value", "value": "a value"}. */
  tokenBodyParameters?: TokenBodyParameterContract[];
  /** OAuth token endpoint. Contains absolute URI to entity being referenced. */
  tokenEndpoint?: string;
  /** If true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security. */
  supportState?: boolean;
  /** Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values. */
  defaultScope?: string;
  /** Specifies the mechanism by which access token is passed to the API. */
  bearerTokenSendingMethods?: BearerTokenSendingMethod[];
  /** Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username. */
  resourceOwnerUsername?: string;
  /** Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password. */
  resourceOwnerPassword?: string;
  /** User-friendly authorization server name. */
  displayName?: string;
  /** Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced. */
  clientRegistrationEndpoint?: string;
  /** OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2. */
  authorizationEndpoint?: string;
  /** Form of an authorization grant, which the client uses to request the access token. */
  grantTypes?: GrantType[];
  /** Client or app id registered with this authorization server. */
  clientId?: string;
  /** Client or app secret registered with this authorization server. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value. */
  clientSecret?: string;
}

/** External OAuth authorization server settings. */
export interface AuthorizationServerUpdateContract extends Resource {
  /** Description of the authorization server. Can contain HTML formatting tags. */
  description?: string;
  /** HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional. */
  authorizationMethods?: AuthorizationMethod[];
  /** Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or Body. When Body is specified, client credentials and other parameters are passed within the request body in the application/x-www-form-urlencoded format. */
  clientAuthenticationMethod?: ClientAuthenticationMethod[];
  /** Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects with name and value string properties, i.e. {"name" : "name value", "value": "a value"}. */
  tokenBodyParameters?: TokenBodyParameterContract[];
  /** OAuth token endpoint. Contains absolute URI to entity being referenced. */
  tokenEndpoint?: string;
  /** If true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security. */
  supportState?: boolean;
  /** Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values. */
  defaultScope?: string;
  /** Specifies the mechanism by which access token is passed to the API. */
  bearerTokenSendingMethods?: BearerTokenSendingMethod[];
  /** Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username. */
  resourceOwnerUsername?: string;
  /** Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password. */
  resourceOwnerPassword?: string;
  /** User-friendly authorization server name. */
  displayName?: string;
  /** Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced. */
  clientRegistrationEndpoint?: string;
  /** OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2. */
  authorizationEndpoint?: string;
  /** Form of an authorization grant, which the client uses to request the access token. */
  grantTypes?: GrantType[];
  /** Client or app id registered with this authorization server. */
  clientId?: string;
  /** Client or app secret registered with this authorization server. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value. */
  clientSecret?: string;
}

/** Backend details. */
export interface BackendContract extends Resource {
  /** Backend Title. */
  title?: string;
  /** Backend Description. */
  description?: string;
  /** Management Uri of the Resource in External System. This url can be the Arm Resource Id of Logic Apps, Function Apps or API Apps. */
  resourceId?: string;
  /** Backend Properties contract */
  properties?: BackendProperties;
  /** Backend Credentials Contract Properties */
  credentials?: BackendCredentialsContract;
  /** Backend Proxy Contract Properties */
  proxy?: BackendProxyContract;
  /** Backend TLS Properties */
  tls?: BackendTlsProperties;
  /** Runtime Url of the Backend. */
  url?: string;
  /** Backend communication protocol. */
  protocol?: BackendProtocol;
}

/** Reconnect request parameters. */
export interface BackendReconnectContract extends Resource {
  /** Duration in ISO8601 format after which reconnect will be initiated. Minimum duration of the Reconnect is PT2M. */
  after?: string;
}

/** Cache details. */
export interface CacheContract extends Resource {
  /** Cache description */
  description?: string;
  /** Runtime connection string to cache */
  connectionString?: string;
  /** Location identifier to use cache from (should be either 'default' or valid Azure region identifier) */
  useFromLocation?: string;
  /** Original uri of entity in external system cache points to */
  resourceId?: string;
}

/** Certificate details. */
export interface CertificateContract extends Resource {
  /** Subject attribute of the certificate. */
  subject?: string;
  /** Thumbprint of the certificate. */
  thumbprint?: string;
  /**
   * Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   *
   */
  expirationDate?: Date;
  /** KeyVault location details of the certificate. */
  keyVault?: KeyVaultContractProperties;
}

/** Content type contract details. */
export interface ContentTypeContract extends Resource {
  /** Content type identifier */
  idPropertiesId?: string;
  /** Content type name. Must be 1 to 250 characters long. */
  namePropertiesName?: string;
  /** Content type description. */
  description?: string;
  /** Content type schema. */
  schema?: Record<string, unknown>;
  /** Content type version. */
  version?: string;
}

/** Content type contract details. */
export interface ContentItemContract extends Resource {
  /** Properties of the content item. */
  properties?: { [propertyName: string]: any };
}

/** Deleted API Management Service information. */
export interface DeletedServiceContract extends Resource {
  /**
   * API Management Service Master Location.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly location?: string;
  /** Fully-qualified API Management Service Resource ID */
  serviceId?: string;
  /** UTC Date and Time when the service will be automatically purged. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard. */
  scheduledPurgeDate?: Date;
  /** UTC Timestamp when the service was soft-deleted. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard. */
  deletionDate?: Date;
}

/** Email Template details. */
export interface EmailTemplateContract extends Resource {
  /** Subject of the Template. */
  subject?: string;
  /** Email Template Body. This should be a valid XDocument */
  body?: string;
  /** Title of the Template. */
  title?: string;
  /** Description of the Email Template. */
  description?: string;
  /**
   * Whether the template is the default template provided by API Management or has been edited.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDefault?: boolean;
  /** Email Template Parameter values. */
  parameters?: EmailTemplateParametersContractProperties[];
}

/** Gateway details. */
export interface GatewayContract extends Resource {
  /** Gateway location. */
  locationData?: ResourceLocationDataContract;
  /** Gateway description */
  description?: string;
}

/** Gateway hostname configuration details. */
export interface GatewayHostnameConfigurationContract extends Resource {
  /** Hostname value. Supports valid domain name, partial or full wildcard */
  hostname?: string;
  /** Identifier of Certificate entity that will be used for TLS connection establishment */
  certificateId?: string;
  /** Determines whether gateway requests client certificate */
  negotiateClientCertificate?: boolean;
  /** Specifies if TLS 1.0 is supported */
  tls10Enabled?: boolean;
  /** Specifies if TLS 1.1 is supported */
  tls11Enabled?: boolean;
  /** Specifies if HTTP/2.0 is supported */
  http2Enabled?: boolean;
}

/** Association entity details. */
export interface AssociationContract extends Resource {
  /** Provisioning state. */
  provisioningState?: "created";
}

/** Gateway certificate authority details. */
export interface GatewayCertificateAuthorityContract extends Resource {
  /** Determines whether certificate authority is trusted. */
  isTrusted?: boolean;
}

/** Contract details. */
export interface GroupContract extends Resource {
  /** Group name. */
  displayName?: string;
  /** Group description. Can contain HTML formatting tags. */
  description?: string;
  /**
   * true if the group is one of the three system groups (Administrators, Developers, or Guests); otherwise false.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly builtIn?: boolean;
  /** Group type. */
  typePropertiesType?: GroupType;
  /** For external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory `aad://<tenant>.onmicrosoft.com/groups/<group object id>`; otherwise the value is null. */
  externalId?: string;
}

/** User details. */
export interface UserContract extends Resource {
  /** Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active. */
  state?: UserState;
  /** Optional note about a user set by the administrator. */
  note?: string;
  /** Collection of user identities. */
  identities?: UserIdentityContract[];
  /** First name. */
  firstName?: string;
  /** Last name. */
  lastName?: string;
  /** Email address. */
  email?: string;
  /**
   * Date of user registration. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   *
   */
  registrationDate?: Date;
  /**
   * Collection of groups user is part of.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly groups?: GroupContractProperties[];
}

/** Identity Provider details. */
export interface IdentityProviderContract extends Resource {
  /** Identity Provider Type identifier. */
  typePropertiesType?: IdentityProviderType;
  /** The TenantId to use instead of Common when logging into Active Directory */
  signinTenant?: string;
  /** List of Allowed Tenants when configuring Azure Active Directory login. */
  allowedTenants?: string[];
  /** OpenID Connect discovery endpoint hostname for AAD or AAD B2C. */
  authority?: string;
  /** Signup Policy Name. Only applies to AAD B2C Identity Provider. */
  signupPolicyName?: string;
  /** Signin Policy Name. Only applies to AAD B2C Identity Provider. */
  signinPolicyName?: string;
  /** Profile Editing Policy Name. Only applies to AAD B2C Identity Provider. */
  profileEditingPolicyName?: string;
  /** Password Reset Policy Name. Only applies to AAD B2C Identity Provider. */
  passwordResetPolicyName?: string;
  /** Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft. */
  clientId?: string;
  /** Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value. */
  clientSecret?: string;
}

/** Identity Provider details. */
export interface IdentityProviderCreateContract extends Resource {
  /** Identity Provider Type identifier. */
  typePropertiesType?: IdentityProviderType;
  /** The TenantId to use instead of Common when logging into Active Directory */
  signinTenant?: string;
  /** List of Allowed Tenants when configuring Azure Active Directory login. */
  allowedTenants?: string[];
  /** OpenID Connect discovery endpoint hostname for AAD or AAD B2C. */
  authority?: string;
  /** Signup Policy Name. Only applies to AAD B2C Identity Provider. */
  signupPolicyName?: string;
  /** Signin Policy Name. Only applies to AAD B2C Identity Provider. */
  signinPolicyName?: string;
  /** Profile Editing Policy Name. Only applies to AAD B2C Identity Provider. */
  profileEditingPolicyName?: string;
  /** Password Reset Policy Name. Only applies to AAD B2C Identity Provider. */
  passwordResetPolicyName?: string;
  /** Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft. */
  clientId?: string;
  /** Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value. */
  clientSecret?: string;
}

/** Logger details. */
export interface LoggerContract extends Resource {
  /** Logger type. */
  loggerType?: LoggerType;
  /** Logger description. */
  description?: string;
  /**
   * The name and SendRule connection string of the event hub for azureEventHub logger.
   * Instrumentation key for applicationInsights logger.
   */
  credentials?: { [propertyName: string]: string };
  /** Whether records are buffered in the logger before publishing. Default is assumed to be true. */
  isBuffered?: boolean;
  /** Azure Resource Id of a log target (either Azure Event Hub resource or Azure Application Insights resource). */
  resourceId?: string;
}

/** NamedValue details. */
export interface NamedValueContract extends Resource {
  /** Optional tags that when provided can be used to filter the NamedValue list. */
  tags?: string[];
  /** Determines whether the value is a secret and should be encrypted or not. Default value is false. */
  secret?: boolean;
  /** Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters. */
  displayName?: string;
  /** Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value. */
  value?: string;
  /** KeyVault location details of the namedValue. */
  keyVault?: KeyVaultContractProperties;
}

/** NamedValue details. */
export interface NamedValueCreateContract extends Resource {
  /** Optional tags that when provided can be used to filter the NamedValue list. */
  tags?: string[];
  /** Determines whether the value is a secret and should be encrypted or not. Default value is false. */
  secret?: boolean;
  /** Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters. */
  displayName?: string;
  /** Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value. */
  value?: string;
  /** KeyVault location details of the namedValue. */
  keyVault?: KeyVaultContractCreateProperties;
}

/** Notification details. */
export interface NotificationContract extends Resource {
  /** Title of the Notification. */
  title?: string;
  /** Description of the Notification. */
  description?: string;
  /** Recipient Parameter values. */
  recipients?: RecipientsContractProperties;
}

/** Recipient User details. */
export interface RecipientUserContract extends Resource {
  /** API Management UserId subscribed to notification. */
  userId?: string;
}

/** Recipient Email details. */
export interface RecipientEmailContract extends Resource {
  /** User Email subscribed to notification. */
  email?: string;
}

/** OpenId Connect Provider details. */
export interface OpenidConnectProviderContract extends Resource {
  /** User-friendly OpenID Connect Provider name. */
  displayName?: string;
  /** User-friendly description of OpenID Connect Provider. */
  description?: string;
  /** Metadata endpoint URI. */
  metadataEndpoint?: string;
  /** Client ID of developer console which is the client application. */
  clientId?: string;
  /** Client Secret of developer console which is the client application. */
  clientSecret?: string;
}

/** Policy description details. */
export interface PolicyDescriptionContract extends Resource {
  /**
   * Policy description.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
  /**
   * Binary OR value of the Snippet scope.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly scope?: number;
}

/** Portal Revision's contract details. */
export interface PortalRevisionContract extends Resource {
  /** Portal revision description. */
  description?: string;
  /**
   * Portal revision publishing status details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly statusDetails?: string;
  /**
   * Status of the portal's revision.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: PortalRevisionStatus;
  /** Indicates if the portal's revision is public. */
  isCurrent?: boolean;
  /**
   * Portal's revision creation date and time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdDateTime?: Date;
  /**
   * Last updated date and time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly updatedDateTime?: Date;
}

/** Portal Settings for the Developer Portal. */
export interface PortalSettingsContract extends Resource {
  /** A delegation Url. */
  url?: string;
  /** A base64-encoded validation key to validate, that a request is coming from Azure API Management. */
  validationKey?: string;
  /** Subscriptions delegation settings. */
  subscriptions?: SubscriptionsDelegationSettingsProperties;
  /** User registration delegation settings. */
  userRegistration?: RegistrationDelegationSettingsProperties;
  /** Redirect Anonymous users to the Sign-In page. */
  enabled?: boolean;
  /** Terms of service contract properties. */
  termsOfService?: TermsOfServiceProperties;
}

/** Sign-In settings for the Developer Portal. */
export interface PortalSigninSettings extends Resource {
  /** Redirect Anonymous users to the Sign-In page. */
  enabled?: boolean;
}

/** Sign-Up settings for a developer portal. */
export interface PortalSignupSettings extends Resource {
  /** Allow users to sign up on a developer portal. */
  enabled?: boolean;
  /** Terms of service contract properties. */
  termsOfService?: TermsOfServiceProperties;
}

/** Delegation settings for a developer portal. */
export interface PortalDelegationSettings extends Resource {
  /** A delegation Url. */
  url?: string;
  /** A base64-encoded validation key to validate, that a request is coming from Azure API Management. */
  validationKey?: string;
  /** Subscriptions delegation settings. */
  subscriptions?: SubscriptionsDelegationSettingsProperties;
  /** User registration delegation settings. */
  userRegistration?: RegistrationDelegationSettingsProperties;
}

/** The Private Endpoint Connection resource. */
export interface PrivateEndpointConnection extends Resource {
  /** The resource of private end point. */
  privateEndpoint?: PrivateEndpoint;
  /** A collection of information about the state of the connection between service consumer and provider. */
  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;
  /**
   * The provisioning state of the private endpoint connection resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: PrivateEndpointConnectionProvisioningState;
}

/** A private link resource */
export interface PrivateLinkResource extends Resource {
  /**
   * The private link resource group id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly groupId?: string;
  /**
   * The private link resource required member names.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly requiredMembers?: string[];
  /** The private link resource Private link DNS zone name. */
  requiredZoneNames?: string[];
}

/** Subscription details. */
export interface SubscriptionContract extends Resource {
  /** The user resource identifier of the subscription owner. The value is a valid relative URL in the format of /users/{userId} where {userId} is a user identifier. */
  ownerId?: string;
  /** Scope like /products/{productId} or /apis or /apis/{apiId}. */
  scope?: string;
  /** The name of the subscription, or null if the subscription has no name. */
  displayName?: string;
  /** Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated. */
  state?: SubscriptionState;
  /**
   * Subscription creation date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   *
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdDate?: Date;
  /**
   * Subscription activation date. The setting is for audit purposes only and the subscription is not automatically activated. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   *
   */
  startDate?: Date;
  /**
   * Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   *
   */
  expirationDate?: Date;
  /**
   * Date when subscription was cancelled or expired. The setting is for audit purposes only and the subscription is not automatically cancelled. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   *
   */
  endDate?: Date;
  /**
   * Upcoming subscription expiration notification date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   *
   */
  notificationDate?: Date;
  /** Subscription primary key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value. */
  primaryKey?: string;
  /** Subscription secondary key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value. */
  secondaryKey?: string;
  /** Optional subscription comment added by an administrator when the state is changed to the 'rejected'. */
  stateComment?: string;
  /** Determines whether tracing is enabled */
  allowTracing?: boolean;
}

/** Tenant Settings. */
export interface TenantSettingsContract extends Resource {
  /** Tenant settings */
  settings?: { [propertyName: string]: string };
}

/** Tenant Settings. */
export interface AccessInformationContract extends Resource {
  /** Access Information type ('access' or 'gitAccess') */
  idPropertiesId?: string;
  /** Principal (User) Identifier. */
  principalId?: string;
  /** Determines whether direct access is enabled. */
  enabled?: boolean;
}

/** Long Running Git Operation Results. */
export interface OperationResultContract extends Resource {
  /** Operation result identifier. */
  idPropertiesId?: string;
  /** Status of an async operation. */
  status?: AsyncOperationStatus;
  /**
   * Start time of an async operation. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   *
   */
  started?: Date;
  /**
   * Last update time of an async operation. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   *
   */
  updated?: Date;
  /** Optional result info. */
  resultInfo?: string;
  /** Error Body Contract */
  error?: ErrorResponseBody;
  /**
   * This property if only provided as part of the TenantConfiguration_Validate operation. It contains the log the entities which will be updated/created/deleted as part of the TenantConfiguration_Deploy operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionLog?: OperationResultLogItemContract[];
}

/** Result of Tenant Configuration Sync State. */
export interface TenantConfigurationSyncStateContract extends Resource {
  /** The name of Git branch. */
  branch?: string;
  /** The latest commit Id. */
  commitId?: string;
  /** value indicating if last sync was save (true) or deploy (false) operation. */
  isExport?: boolean;
  /** value indicating if last synchronization was later than the configuration change. */
  isSynced?: boolean;
  /** value indicating whether Git configuration access is enabled. */
  isGitEnabled?: boolean;
  /**
   * The date of the latest synchronization. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   *
   */
  syncDate?: Date;
  /**
   * The date of the latest configuration change. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   *
   */
  configurationChangeDate?: Date;
  /** Most recent tenant configuration operation identifier */
  lastOperationId?: string;
}

/** Operation Contract Properties */
export interface OperationContractProperties
  extends OperationEntityBaseContract {
  /** Operation Name. */
  displayName: string;
  /** A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them. */
  method: string;
  /** Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date} */
  urlTemplate: string;
}

/** Operation Update Contract Properties. */
export interface OperationUpdateContractProperties
  extends OperationEntityBaseContract {
  /** Operation Name. */
  displayName?: string;
  /** A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them. */
  method?: string;
  /** Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date} */
  urlTemplate?: string;
}

/** Product profile. */
export interface ProductContractProperties extends ProductEntityBaseParameters {
  /** Product name. */
  displayName: string;
}

/** Product profile. */
export interface ProductTagResourceContractProperties
  extends ProductEntityBaseParameters {
  /** Identifier of the product in the form of /products/{productId} */
  id?: string;
  /** Product name. */
  name: string;
}

/** Parameters supplied to the Update Product operation. */
export interface ProductUpdateProperties extends ProductEntityBaseParameters {
  /** Product name. */
  displayName?: string;
}

/** Issue contract Properties. */
export interface IssueContractProperties extends IssueContractBaseProperties {
  /** The issue title. */
  title: string;
  /** Text describing the issue. */
  description: string;
  /** A resource identifier for the user created the issue. */
  userId: string;
}

/** Issue contract Update Properties. */
export interface IssueUpdateContractProperties
  extends IssueContractBaseProperties {
  /** The issue title. */
  title?: string;
  /** Text describing the issue. */
  description?: string;
  /** A resource identifier for the user created the issue. */
  userId?: string;
}

/** TagDescription contract Properties. */
export interface TagDescriptionContractProperties
  extends TagDescriptionBaseProperties {
  /** Identifier of the tag in the form of /tags/{tagId} */
  tagId?: string;
  /** Tag name. */
  displayName?: string;
}

/** Properties of an API Version Set. */
export interface ApiVersionSetContractProperties
  extends ApiVersionSetEntityBase {
  /** Name of API Version Set */
  displayName: string;
  /** An value that determines where the API Version identifier will be located in a HTTP request. */
  versioningScheme: VersioningScheme;
}

/** Properties used to create or update an API Version Set. */
export interface ApiVersionSetUpdateParametersProperties
  extends ApiVersionSetEntityBase {
  /** Name of API Version Set */
  displayName?: string;
  /** An value that determines where the API Version identifier will be located in a HTTP request. */
  versioningScheme?: VersioningScheme;
}

/** External OAuth authorization server settings Properties. */
export interface AuthorizationServerContractProperties
  extends AuthorizationServerContractBaseProperties {
  /** User-friendly authorization server name. */
  displayName: string;
  /** Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced. */
  clientRegistrationEndpoint: string;
  /** OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2. */
  authorizationEndpoint: string;
  /** Form of an authorization grant, which the client uses to request the access token. */
  grantTypes: GrantType[];
  /** Client or app id registered with this authorization server. */
  clientId: string;
  /** Client or app secret registered with this authorization server. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value. */
  clientSecret?: string;
}

/** External OAuth authorization server Update settings contract. */
export interface AuthorizationServerUpdateContractProperties
  extends AuthorizationServerContractBaseProperties {
  /** User-friendly authorization server name. */
  displayName?: string;
  /** Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced. */
  clientRegistrationEndpoint?: string;
  /** OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2. */
  authorizationEndpoint?: string;
  /** Form of an authorization grant, which the client uses to request the access token. */
  grantTypes?: GrantType[];
  /** Client or app id registered with this authorization server. */
  clientId?: string;
  /** Client or app secret registered with this authorization server. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value. */
  clientSecret?: string;
}

/** Parameters supplied to the Create Backend operation. */
export interface BackendContractProperties extends BackendBaseParameters {
  /** Runtime Url of the Backend. */
  url: string;
  /** Backend communication protocol. */
  protocol: BackendProtocol;
}

/** Parameters supplied to the Update Backend operation. */
export interface BackendUpdateParameterProperties
  extends BackendBaseParameters {
  /** Runtime Url of the Backend. */
  url?: string;
  /** Backend communication protocol. */
  protocol?: BackendProtocol;
}

/** KeyVault contract details. */
export interface KeyVaultContractProperties
  extends KeyVaultContractCreateProperties {
  /** Last time sync and refresh status of secret from key vault. */
  lastStatus?: KeyVaultLastAccessStatusContractProperties;
}

/** Properties of an API Management service resource description. */
export interface ApiManagementServiceProperties
  extends ApiManagementServiceBaseProperties {
  /** Publisher email. */
  publisherEmail: string;
  /** Publisher name. */
  publisherName: string;
}

/** Properties of an API Management service resource description. */
export interface ApiManagementServiceUpdateProperties
  extends ApiManagementServiceBaseProperties {
  /** Publisher email. */
  publisherEmail?: string;
  /** Publisher name. */
  publisherName?: string;
}

/** A single API Management service resource in List or Get response. */
export interface ApiManagementServiceResource extends ApimResource {
  /** SKU properties of the API Management service. */
  sku: ApiManagementServiceSkuProperties;
  /** Managed service identity of the Api Management service. */
  identity?: ApiManagementServiceIdentity;
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** Resource location. */
  location: string;
  /**
   * ETag of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly etag?: string;
  /** A list of availability zones denoting where the resource needs to come from. */
  zones?: string[];
  /** Email address from which the notification will be sent. */
  notificationSenderEmail?: string;
  /**
   * The current provisioning state of the API Management service which can be one of the following: Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /**
   * The provisioning state of the API Management service, which is targeted by the long running operation started on the service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetProvisioningState?: string;
  /**
   * Creation UTC date of the API Management service.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdAtUtc?: Date;
  /**
   * Gateway URL of the API Management service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly gatewayUrl?: string;
  /**
   * Gateway URL of the API Management service in the Default Region.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly gatewayRegionalUrl?: string;
  /**
   * Publisher portal endpoint Url of the API Management service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly portalUrl?: string;
  /**
   * Management API endpoint URL of the API Management service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly managementApiUrl?: string;
  /**
   * SCM endpoint URL of the API Management service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly scmUrl?: string;
  /**
   * DEveloper Portal endpoint URL of the API Management service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly developerPortalUrl?: string;
  /** Custom hostname configuration of the API Management service. */
  hostnameConfigurations?: HostnameConfiguration[];
  /**
   * Public Static Load Balanced IP addresses of the API Management service in Primary region. Available only for Basic, Standard, Premium and Isolated SKU.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly publicIPAddresses?: string[];
  /**
   * Private Static Load Balanced IP addresses of the API Management service in Primary region which is deployed in an Internal Virtual Network. Available only for Basic, Standard, Premium and Isolated SKU.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateIPAddresses?: string[];
  /** Public Standard SKU IP V4 based IP address to be associated with Virtual Network deployed service in the region. Supported only for Developer and Premium SKU being deployed in Virtual Network. */
  publicIpAddressId?: string;
  /** Whether or not public endpoint access is allowed for this API Management service.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'. If 'Disabled', private endpoints are the exclusive access method. Default value is 'Enabled' */
  publicNetworkAccess?: PublicNetworkAccess;
  /** Virtual network configuration of the API Management service. */
  virtualNetworkConfiguration?: VirtualNetworkConfiguration;
  /** Additional datacenter locations of the API Management service. */
  additionalLocations?: AdditionalLocation[];
  /** Custom properties of the API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` will disable the cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1 and 1.2).</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` can be used to disable just TLS 1.1.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` can be used to disable TLS 1.0 on an API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11` can be used to disable just TLS 1.1 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10` can be used to disable TLS 1.0 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2` can be used to enable HTTP2 protocol on an API Management service.</br>Not specifying any of these properties on PATCH operation will reset omitted properties' values to their defaults. For all the settings except Http2 the default value is `True` if the service was created on or before April 1st 2018 and `False` otherwise. Http2 setting's default value is `False`.</br></br>You can disable any of next ciphers by using settings `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.[cipher_name]`: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA. For example, `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA256`:`false`. The default value is `true` for them.  Note: next ciphers can't be disabled since they are required by Azure CloudService internal components: TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384 */
  customProperties?: { [propertyName: string]: string };
  /** List of Certificates that need to be installed in the API Management service. Max supported certificates that can be installed is 10. */
  certificates?: CertificateConfiguration[];
  /** Property only meant to be used for Consumption SKU Service. This enforces a client certificate to be presented on each request to the gateway. This also enables the ability to authenticate the certificate in the policy on the gateway. */
  enableClientCertificate?: boolean;
  /** Property only valid for an Api Management service deployed in multiple locations. This can be used to disable the gateway in master region. */
  disableGateway?: boolean;
  /** The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network having an Intranet Facing Endpoint only. */
  virtualNetworkType?: VirtualNetworkType;
  /** Control Plane Apis version constraint for the API Management service. */
  apiVersionConstraint?: ApiVersionConstraint;
  /** Undelete Api Management Service if it was previously soft-deleted. If this flag is specified and set to True all other properties will be ignored. */
  restore?: boolean;
  /** List of Private Endpoint Connections of this service. */
  privateEndpointConnections?: RemotePrivateEndpointConnectionWrapper[];
  /**
   * Compute Platform Version running the service in this location.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly platformVersion?: PlatformVersion;
  /** Publisher email. */
  publisherEmail: string;
  /** Publisher name. */
  publisherName: string;
}

/** Parameter supplied to Update Api Management Service. */
export interface ApiManagementServiceUpdateParameters extends ApimResource {
  /** SKU properties of the API Management service. */
  sku?: ApiManagementServiceSkuProperties;
  /** Managed service identity of the Api Management service. */
  identity?: ApiManagementServiceIdentity;
  /**
   * ETag of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly etag?: string;
  /** A list of availability zones denoting where the resource needs to come from. */
  zones?: string[];
  /** Email address from which the notification will be sent. */
  notificationSenderEmail?: string;
  /**
   * The current provisioning state of the API Management service which can be one of the following: Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /**
   * The provisioning state of the API Management service, which is targeted by the long running operation started on the service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetProvisioningState?: string;
  /**
   * Creation UTC date of the API Management service.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdAtUtc?: Date;
  /**
   * Gateway URL of the API Management service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly gatewayUrl?: string;
  /**
   * Gateway URL of the API Management service in the Default Region.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly gatewayRegionalUrl?: string;
  /**
   * Publisher portal endpoint Url of the API Management service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly portalUrl?: string;
  /**
   * Management API endpoint URL of the API Management service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly managementApiUrl?: string;
  /**
   * SCM endpoint URL of the API Management service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly scmUrl?: string;
  /**
   * DEveloper Portal endpoint URL of the API Management service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly developerPortalUrl?: string;
  /** Custom hostname configuration of the API Management service. */
  hostnameConfigurations?: HostnameConfiguration[];
  /**
   * Public Static Load Balanced IP addresses of the API Management service in Primary region. Available only for Basic, Standard, Premium and Isolated SKU.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly publicIPAddresses?: string[];
  /**
   * Private Static Load Balanced IP addresses of the API Management service in Primary region which is deployed in an Internal Virtual Network. Available only for Basic, Standard, Premium and Isolated SKU.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateIPAddresses?: string[];
  /** Public Standard SKU IP V4 based IP address to be associated with Virtual Network deployed service in the region. Supported only for Developer and Premium SKU being deployed in Virtual Network. */
  publicIpAddressId?: string;
  /** Whether or not public endpoint access is allowed for this API Management service.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'. If 'Disabled', private endpoints are the exclusive access method. Default value is 'Enabled' */
  publicNetworkAccess?: PublicNetworkAccess;
  /** Virtual network configuration of the API Management service. */
  virtualNetworkConfiguration?: VirtualNetworkConfiguration;
  /** Additional datacenter locations of the API Management service. */
  additionalLocations?: AdditionalLocation[];
  /** Custom properties of the API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` will disable the cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1 and 1.2).</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` can be used to disable just TLS 1.1.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` can be used to disable TLS 1.0 on an API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11` can be used to disable just TLS 1.1 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10` can be used to disable TLS 1.0 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2` can be used to enable HTTP2 protocol on an API Management service.</br>Not specifying any of these properties on PATCH operation will reset omitted properties' values to their defaults. For all the settings except Http2 the default value is `True` if the service was created on or before April 1st 2018 and `False` otherwise. Http2 setting's default value is `False`.</br></br>You can disable any of next ciphers by using settings `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.[cipher_name]`: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA. For example, `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA256`:`false`. The default value is `true` for them.  Note: next ciphers can't be disabled since they are required by Azure CloudService internal components: TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384 */
  customProperties?: { [propertyName: string]: string };
  /** List of Certificates that need to be installed in the API Management service. Max supported certificates that can be installed is 10. */
  certificates?: CertificateConfiguration[];
  /** Property only meant to be used for Consumption SKU Service. This enforces a client certificate to be presented on each request to the gateway. This also enables the ability to authenticate the certificate in the policy on the gateway. */
  enableClientCertificate?: boolean;
  /** Property only valid for an Api Management service deployed in multiple locations. This can be used to disable the gateway in master region. */
  disableGateway?: boolean;
  /** The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network having an Intranet Facing Endpoint only. */
  virtualNetworkType?: VirtualNetworkType;
  /** Control Plane Apis version constraint for the API Management service. */
  apiVersionConstraint?: ApiVersionConstraint;
  /** Undelete Api Management Service if it was previously soft-deleted. If this flag is specified and set to True all other properties will be ignored. */
  restore?: boolean;
  /** List of Private Endpoint Connections of this service. */
  privateEndpointConnections?: RemotePrivateEndpointConnectionWrapper[];
  /**
   * Compute Platform Version running the service in this location.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly platformVersion?: PlatformVersion;
  /** Publisher email. */
  publisherEmail?: string;
  /** Publisher name. */
  publisherName?: string;
}

/** User profile. */
export interface UserContractProperties extends UserEntityBaseParameters {
  /** First name. */
  firstName?: string;
  /** Last name. */
  lastName?: string;
  /** Email address. */
  email?: string;
  /**
   * Date of user registration. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   *
   */
  registrationDate?: Date;
  /**
   * Collection of groups user is part of.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly groups?: GroupContractProperties[];
}

/** Parameters supplied to the Create User operation. */
export interface UserCreateParameterProperties
  extends UserEntityBaseParameters {
  /** Email address. Must not be empty and must be unique within the service instance. */
  email: string;
  /** First name. */
  firstName: string;
  /** Last name. */
  lastName: string;
  /** User Password. If no value is provided, a default password is generated. */
  password?: string;
  /** Determines the type of application which send the create user request. Default is legacy portal. */
  appType?: AppType;
  /** Determines the type of confirmation e-mail that will be sent to the newly created user. */
  confirmation?: Confirmation;
}

/** Parameters supplied to the Update User operation. */
export interface UserUpdateParametersProperties
  extends UserEntityBaseParameters {
  /** Email address. Must not be empty and must be unique within the service instance. */
  email?: string;
  /** User Password. */
  password?: string;
  /** First name. */
  firstName?: string;
  /** Last name. */
  lastName?: string;
}

/** The external Identity Providers like Facebook, Google, Microsoft, Twitter or Azure Active Directory which can be used to enable access to the API Management service developer portal for all users. */
export interface IdentityProviderContractProperties
  extends IdentityProviderBaseParameters {
  /** Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft. */
  clientId: string;
  /** Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value. */
  clientSecret?: string;
}

/** The external Identity Providers like Facebook, Google, Microsoft, Twitter or Azure Active Directory which can be used to enable access to the API Management service developer portal for all users. */
export interface IdentityProviderCreateContractProperties
  extends IdentityProviderBaseParameters {
  /** Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft. */
  clientId: string;
  /** Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value. */
  clientSecret: string;
}

/** Parameters supplied to the Update Identity Provider operation. */
export interface IdentityProviderUpdateProperties
  extends IdentityProviderBaseParameters {
  /** Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft. */
  clientId?: string;
  /** Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. */
  clientSecret?: string;
}

/** NamedValue Contract properties. */
export interface NamedValueContractProperties
  extends NamedValueEntityBaseParameters {
  /** Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters. */
  displayName: string;
  /** Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value. */
  value?: string;
  /** KeyVault location details of the namedValue. */
  keyVault?: KeyVaultContractProperties;
}

/** NamedValue Contract properties. */
export interface NamedValueCreateContractProperties
  extends NamedValueEntityBaseParameters {
  /** Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters. */
  displayName: string;
  /** Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value. */
  value?: string;
  /** KeyVault location details of the namedValue. */
  keyVault?: KeyVaultContractCreateProperties;
}

/** NamedValue Contract properties. */
export interface NamedValueUpdateParameterProperties
  extends NamedValueEntityBaseParameters {
  /** Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters. */
  displayName?: string;
  /** Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace. */
  value?: string;
  /** KeyVault location details of the namedValue. */
  keyVault?: KeyVaultContractCreateProperties;
}

/** API Create or Update Properties. */
export interface ApiCreateOrUpdateProperties extends ApiContractProperties {
  /** Content value when Importing an API. */
  value?: string;
  /** Format of the Content in which the API is getting imported. */
  format?: ContentFormat;
  /** Criteria to limit import of WSDL to a subset of the document. */
  wsdlSelector?: ApiCreateOrUpdatePropertiesWsdlSelector;
  /**
   * Type of API to create.
   *  * `http` creates a REST API
   *  * `soap` creates a SOAP pass-through API
   *  * `websocket` creates websocket API
   *  * `graphql` creates GraphQL API.
   */
  soapApiType?: SoapApiType;
}

/** Defines headers for Api_getEntityTag operation. */
export interface ApiGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Api_get operation. */
export interface ApiGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Api_createOrUpdate operation. */
export interface ApiCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Api_update operation. */
export interface ApiUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiRelease_getEntityTag operation. */
export interface ApiReleaseGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiRelease_get operation. */
export interface ApiReleaseGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiRelease_createOrUpdate operation. */
export interface ApiReleaseCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiRelease_update operation. */
export interface ApiReleaseUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiOperation_getEntityTag operation. */
export interface ApiOperationGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiOperation_get operation. */
export interface ApiOperationGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiOperation_createOrUpdate operation. */
export interface ApiOperationCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiOperation_update operation. */
export interface ApiOperationUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiOperationPolicy_getEntityTag operation. */
export interface ApiOperationPolicyGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiOperationPolicy_get operation. */
export interface ApiOperationPolicyGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiOperationPolicy_createOrUpdate operation. */
export interface ApiOperationPolicyCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Tag_getEntityStateByOperation operation. */
export interface TagGetEntityStateByOperationHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Tag_getByOperation operation. */
export interface TagGetByOperationHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Tag_getEntityStateByApi operation. */
export interface TagGetEntityStateByApiHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Tag_getByApi operation. */
export interface TagGetByApiHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Tag_assignToApi operation. */
export interface TagAssignToApiHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Tag_getEntityStateByProduct operation. */
export interface TagGetEntityStateByProductHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Tag_getByProduct operation. */
export interface TagGetByProductHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Tag_getEntityState operation. */
export interface TagGetEntityStateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Tag_get operation. */
export interface TagGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Tag_createOrUpdate operation. */
export interface TagCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Tag_update operation. */
export interface TagUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiPolicy_getEntityTag operation. */
export interface ApiPolicyGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiPolicy_get operation. */
export interface ApiPolicyGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiPolicy_createOrUpdate operation. */
export interface ApiPolicyCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiSchema_getEntityTag operation. */
export interface ApiSchemaGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiSchema_get operation. */
export interface ApiSchemaGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiSchema_createOrUpdate operation. */
export interface ApiSchemaCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiDiagnostic_getEntityTag operation. */
export interface ApiDiagnosticGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiDiagnostic_get operation. */
export interface ApiDiagnosticGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiDiagnostic_createOrUpdate operation. */
export interface ApiDiagnosticCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiDiagnostic_update operation. */
export interface ApiDiagnosticUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiIssue_getEntityTag operation. */
export interface ApiIssueGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiIssue_get operation. */
export interface ApiIssueGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiIssue_createOrUpdate operation. */
export interface ApiIssueCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiIssue_update operation. */
export interface ApiIssueUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiIssueComment_getEntityTag operation. */
export interface ApiIssueCommentGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiIssueComment_get operation. */
export interface ApiIssueCommentGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiIssueComment_createOrUpdate operation. */
export interface ApiIssueCommentCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiIssueAttachment_getEntityTag operation. */
export interface ApiIssueAttachmentGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiIssueAttachment_get operation. */
export interface ApiIssueAttachmentGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiIssueAttachment_createOrUpdate operation. */
export interface ApiIssueAttachmentCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiTagDescription_getEntityTag operation. */
export interface ApiTagDescriptionGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiTagDescription_get operation. */
export interface ApiTagDescriptionGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiTagDescription_createOrUpdate operation. */
export interface ApiTagDescriptionCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiVersionSet_getEntityTag operation. */
export interface ApiVersionSetGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiVersionSet_get operation. */
export interface ApiVersionSetGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiVersionSet_createOrUpdate operation. */
export interface ApiVersionSetCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ApiVersionSet_update operation. */
export interface ApiVersionSetUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for AuthorizationServer_getEntityTag operation. */
export interface AuthorizationServerGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for AuthorizationServer_get operation. */
export interface AuthorizationServerGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for AuthorizationServer_createOrUpdate operation. */
export interface AuthorizationServerCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for AuthorizationServer_update operation. */
export interface AuthorizationServerUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for AuthorizationServer_listSecrets operation. */
export interface AuthorizationServerListSecretsHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Backend_getEntityTag operation. */
export interface BackendGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Backend_get operation. */
export interface BackendGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Backend_createOrUpdate operation. */
export interface BackendCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Backend_update operation. */
export interface BackendUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Cache_getEntityTag operation. */
export interface CacheGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Cache_get operation. */
export interface CacheGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Cache_createOrUpdate operation. */
export interface CacheCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Cache_update operation. */
export interface CacheUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Certificate_getEntityTag operation. */
export interface CertificateGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Certificate_get operation. */
export interface CertificateGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Certificate_createOrUpdate operation. */
export interface CertificateCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Certificate_refreshSecret operation. */
export interface CertificateRefreshSecretHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ContentType_get operation. */
export interface ContentTypeGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ContentType_createOrUpdate operation. */
export interface ContentTypeCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ContentItem_getEntityTag operation. */
export interface ContentItemGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ContentItem_get operation. */
export interface ContentItemGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ContentItem_createOrUpdate operation. */
export interface ContentItemCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Diagnostic_getEntityTag operation. */
export interface DiagnosticGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Diagnostic_get operation. */
export interface DiagnosticGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Diagnostic_createOrUpdate operation. */
export interface DiagnosticCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Diagnostic_update operation. */
export interface DiagnosticUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for EmailTemplate_getEntityTag operation. */
export interface EmailTemplateGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for EmailTemplate_get operation. */
export interface EmailTemplateGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for EmailTemplate_update operation. */
export interface EmailTemplateUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Gateway_getEntityTag operation. */
export interface GatewayGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Gateway_get operation. */
export interface GatewayGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Gateway_createOrUpdate operation. */
export interface GatewayCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Gateway_update operation. */
export interface GatewayUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Gateway_listKeys operation. */
export interface GatewayListKeysHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for GatewayHostnameConfiguration_getEntityTag operation. */
export interface GatewayHostnameConfigurationGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for GatewayHostnameConfiguration_get operation. */
export interface GatewayHostnameConfigurationGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for GatewayHostnameConfiguration_createOrUpdate operation. */
export interface GatewayHostnameConfigurationCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for GatewayApi_getEntityTag operation. */
export interface GatewayApiGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for GatewayCertificateAuthority_getEntityTag operation. */
export interface GatewayCertificateAuthorityGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for GatewayCertificateAuthority_get operation. */
export interface GatewayCertificateAuthorityGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for GatewayCertificateAuthority_createOrUpdate operation. */
export interface GatewayCertificateAuthorityCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Group_getEntityTag operation. */
export interface GroupGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Group_get operation. */
export interface GroupGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Group_createOrUpdate operation. */
export interface GroupCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Group_update operation. */
export interface GroupUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for IdentityProvider_getEntityTag operation. */
export interface IdentityProviderGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for IdentityProvider_get operation. */
export interface IdentityProviderGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for IdentityProvider_createOrUpdate operation. */
export interface IdentityProviderCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for IdentityProvider_update operation. */
export interface IdentityProviderUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for IdentityProvider_listSecrets operation. */
export interface IdentityProviderListSecretsHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Issue_get operation. */
export interface IssueGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Logger_getEntityTag operation. */
export interface LoggerGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Logger_get operation. */
export interface LoggerGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Logger_createOrUpdate operation. */
export interface LoggerCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Logger_update operation. */
export interface LoggerUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for NamedValue_getEntityTag operation. */
export interface NamedValueGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for NamedValue_get operation. */
export interface NamedValueGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for NamedValue_createOrUpdate operation. */
export interface NamedValueCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for NamedValue_update operation. */
export interface NamedValueUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for NamedValue_listValue operation. */
export interface NamedValueListValueHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for NamedValue_refreshSecret operation. */
export interface NamedValueRefreshSecretHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for OpenIdConnectProvider_getEntityTag operation. */
export interface OpenIdConnectProviderGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for OpenIdConnectProvider_get operation. */
export interface OpenIdConnectProviderGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for OpenIdConnectProvider_createOrUpdate operation. */
export interface OpenIdConnectProviderCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for OpenIdConnectProvider_update operation. */
export interface OpenIdConnectProviderUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for OpenIdConnectProvider_listSecrets operation. */
export interface OpenIdConnectProviderListSecretsHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Policy_getEntityTag operation. */
export interface PolicyGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Policy_get operation. */
export interface PolicyGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Policy_createOrUpdate operation. */
export interface PolicyCreateOrUpdateHeaders {
  /** Current entity state version */
  eTag?: string;
}

/** Defines headers for PortalRevision_getEntityTag operation. */
export interface PortalRevisionGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for PortalRevision_get operation. */
export interface PortalRevisionGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for PortalRevision_createOrUpdate operation. */
export interface PortalRevisionCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for PortalRevision_update operation. */
export interface PortalRevisionUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for SignInSettings_getEntityTag operation. */
export interface SignInSettingsGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for SignInSettings_get operation. */
export interface SignInSettingsGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for SignUpSettings_getEntityTag operation. */
export interface SignUpSettingsGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for SignUpSettings_get operation. */
export interface SignUpSettingsGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for DelegationSettings_getEntityTag operation. */
export interface DelegationSettingsGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for DelegationSettings_get operation. */
export interface DelegationSettingsGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Product_getEntityTag operation. */
export interface ProductGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Product_get operation. */
export interface ProductGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Product_createOrUpdate operation. */
export interface ProductCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Product_update operation. */
export interface ProductUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ProductPolicy_getEntityTag operation. */
export interface ProductPolicyGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ProductPolicy_get operation. */
export interface ProductPolicyGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for ProductPolicy_createOrUpdate operation. */
export interface ProductPolicyCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for TenantSettings_get operation. */
export interface TenantSettingsGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Subscription_getEntityTag operation. */
export interface SubscriptionGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Subscription_get operation. */
export interface SubscriptionGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Subscription_createOrUpdate operation. */
export interface SubscriptionCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Subscription_update operation. */
export interface SubscriptionUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for Subscription_listSecrets operation. */
export interface SubscriptionListSecretsHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for TenantAccess_getEntityTag operation. */
export interface TenantAccessGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for TenantAccess_get operation. */
export interface TenantAccessGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for TenantAccess_create operation. */
export interface TenantAccessCreateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for TenantAccess_update operation. */
export interface TenantAccessUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for TenantAccess_listSecrets operation. */
export interface TenantAccessListSecretsHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for User_getEntityTag operation. */
export interface UserGetEntityTagHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for User_get operation. */
export interface UserGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for User_createOrUpdate operation. */
export interface UserCreateOrUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for User_update operation. */
export interface UserUpdateHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Defines headers for UserSubscription_get operation. */
export interface UserSubscriptionGetHeaders {
  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */
  eTag?: string;
}

/** Known values of {@link Protocol} that the service accepts. */
export enum KnownProtocol {
  /** Http */
  Http = "http",
  /** Https */
  Https = "https",
  /** Ws */
  Ws = "ws",
  /** Wss */
  Wss = "wss"
}

/**
 * Defines values for Protocol. \
 * {@link KnownProtocol} can be used interchangeably with Protocol,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **http** \
 * **https** \
 * **ws** \
 * **wss**
 */
export type Protocol = string;

/** Known values of {@link ApiVersionSetContractDetailsVersioningScheme} that the service accepts. */
export enum KnownApiVersionSetContractDetailsVersioningScheme {
  /** Segment */
  Segment = "Segment",
  /** Query */
  Query = "Query",
  /** Header */
  Header = "Header"
}

/**
 * Defines values for ApiVersionSetContractDetailsVersioningScheme. \
 * {@link KnownApiVersionSetContractDetailsVersioningScheme} can be used interchangeably with ApiVersionSetContractDetailsVersioningScheme,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Segment** \
 * **Query** \
 * **Header**
 */
export type ApiVersionSetContractDetailsVersioningScheme = string;

/** Known values of {@link BearerTokenSendingMethods} that the service accepts. */
export enum KnownBearerTokenSendingMethods {
  /** Access token will be transmitted in the Authorization header using Bearer schema */
  AuthorizationHeader = "authorizationHeader",
  /** Access token will be transmitted as query parameters. */
  Query = "query"
}

/**
 * Defines values for BearerTokenSendingMethods. \
 * {@link KnownBearerTokenSendingMethods} can be used interchangeably with BearerTokenSendingMethods,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **authorizationHeader**: Access token will be transmitted in the Authorization header using Bearer schema \
 * **query**: Access token will be transmitted as query parameters.
 */
export type BearerTokenSendingMethods = string;

/** Known values of {@link ApiType} that the service accepts. */
export enum KnownApiType {
  /** Http */
  Http = "http",
  /** Soap */
  Soap = "soap",
  /** Websocket */
  Websocket = "websocket",
  /** Graphql */
  Graphql = "graphql"
}

/**
 * Defines values for ApiType. \
 * {@link KnownApiType} can be used interchangeably with ApiType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **http** \
 * **soap** \
 * **websocket** \
 * **graphql**
 */
export type ApiType = string;

/** Known values of {@link ContentFormat} that the service accepts. */
export enum KnownContentFormat {
  /** The contents are inline and Content type is a WADL document. */
  WadlXml = "wadl-xml",
  /** The WADL document is hosted on a publicly accessible internet address. */
  WadlLinkJson = "wadl-link-json",
  /** The contents are inline and Content Type is a OpenAPI 2.0 JSON Document. */
  SwaggerJson = "swagger-json",
  /** The OpenAPI 2.0 JSON document is hosted on a publicly accessible internet address. */
  SwaggerLinkJson = "swagger-link-json",
  /** The contents are inline and the document is a WSDL/Soap document. */
  Wsdl = "wsdl",
  /** The WSDL document is hosted on a publicly accessible internet address. */
  WsdlLink = "wsdl-link",
  /** The contents are inline and Content Type is a OpenAPI 3.0 YAML Document. */
  Openapi = "openapi",
  /** The contents are inline and Content Type is a OpenAPI 3.0 JSON Document. */
  OpenapiJson = "openapi+json",
  /** The OpenAPI 3.0 YAML document is hosted on a publicly accessible internet address. */
  OpenapiLink = "openapi-link",
  /** The OpenAPI 3.0 JSON document is hosted on a publicly accessible internet address. */
  OpenapiJsonLink = "openapi+json-link",
  /** The GraphQL API endpoint hosted on a publicly accessible internet address. */
  GraphqlLink = "graphql-link"
}

/**
 * Defines values for ContentFormat. \
 * {@link KnownContentFormat} can be used interchangeably with ContentFormat,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **wadl-xml**: The contents are inline and Content type is a WADL document. \
 * **wadl-link-json**: The WADL document is hosted on a publicly accessible internet address. \
 * **swagger-json**: The contents are inline and Content Type is a OpenAPI 2.0 JSON Document. \
 * **swagger-link-json**: The OpenAPI 2.0 JSON document is hosted on a publicly accessible internet address. \
 * **wsdl**: The contents are inline and the document is a WSDL\/Soap document. \
 * **wsdl-link**: The WSDL document is hosted on a publicly accessible internet address. \
 * **openapi**: The contents are inline and Content Type is a OpenAPI 3.0 YAML Document. \
 * **openapi+json**: The contents are inline and Content Type is a OpenAPI 3.0 JSON Document. \
 * **openapi-link**: The OpenAPI 3.0 YAML document is hosted on a publicly accessible internet address. \
 * **openapi+json-link**: The OpenAPI 3.0 JSON document is hosted on a publicly accessible internet address. \
 * **graphql-link**: The GraphQL API endpoint hosted on a publicly accessible internet address.
 */
export type ContentFormat = string;

/** Known values of {@link SoapApiType} that the service accepts. */
export enum KnownSoapApiType {
  /** Imports a SOAP API having a RESTful front end. */
  SoapToRest = "http",
  /** Imports the SOAP API having a SOAP front end. */
  SoapPassThrough = "soap",
  /** Imports the API having a Websocket front end. */
  WebSocket = "websocket",
  /** Imports the API having a GraphQL front end. */
  GraphQL = "graphql"
}

/**
 * Defines values for SoapApiType. \
 * {@link KnownSoapApiType} can be used interchangeably with SoapApiType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **http**: Imports a SOAP API having a RESTful front end. \
 * **soap**: Imports the SOAP API having a SOAP front end. \
 * **websocket**: Imports the API having a Websocket front end. \
 * **graphql**: Imports the API having a GraphQL front end.
 */
export type SoapApiType = string;

/** Known values of {@link PolicyContentFormat} that the service accepts. */
export enum KnownPolicyContentFormat {
  /** The contents are inline and Content type is an XML document. */
  Xml = "xml",
  /** The policy XML document is hosted on a http endpoint accessible from the API Management service. */
  XmlLink = "xml-link",
  /** The contents are inline and Content type is a non XML encoded policy document. */
  Rawxml = "rawxml",
  /** The policy document is not Xml encoded and is hosted on a http endpoint accessible from the API Management service. */
  RawxmlLink = "rawxml-link"
}

/**
 * Defines values for PolicyContentFormat. \
 * {@link KnownPolicyContentFormat} can be used interchangeably with PolicyContentFormat,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **xml**: The contents are inline and Content type is an XML document. \
 * **xml-link**: The policy XML document is hosted on a http endpoint accessible from the API Management service. \
 * **rawxml**: The contents are inline and Content type is a non XML encoded policy document. \
 * **rawxml-link**: The policy document is not Xml encoded and is hosted on a http endpoint accessible from the API Management service.
 */
export type PolicyContentFormat = string;

/** Known values of {@link PolicyIdName} that the service accepts. */
export enum KnownPolicyIdName {
  /** Policy */
  Policy = "policy"
}

/**
 * Defines values for PolicyIdName. \
 * {@link KnownPolicyIdName} can be used interchangeably with PolicyIdName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **policy**
 */
export type PolicyIdName = string;

/** Known values of {@link PolicyExportFormat} that the service accepts. */
export enum KnownPolicyExportFormat {
  /** The contents are inline and Content type is an XML document. */
  Xml = "xml",
  /** The contents are inline and Content type is a non XML encoded policy document. */
  Rawxml = "rawxml"
}

/**
 * Defines values for PolicyExportFormat. \
 * {@link KnownPolicyExportFormat} can be used interchangeably with PolicyExportFormat,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **xml**: The contents are inline and Content type is an XML document. \
 * **rawxml**: The contents are inline and Content type is a non XML encoded policy document.
 */
export type PolicyExportFormat = string;

/** Known values of {@link AlwaysLog} that the service accepts. */
export enum KnownAlwaysLog {
  /** Always log all erroneous request regardless of sampling settings. */
  AllErrors = "allErrors"
}

/**
 * Defines values for AlwaysLog. \
 * {@link KnownAlwaysLog} can be used interchangeably with AlwaysLog,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **allErrors**: Always log all erroneous request regardless of sampling settings.
 */
export type AlwaysLog = string;

/** Known values of {@link SamplingType} that the service accepts. */
export enum KnownSamplingType {
  /** Fixed-rate sampling. */
  Fixed = "fixed"
}

/**
 * Defines values for SamplingType. \
 * {@link KnownSamplingType} can be used interchangeably with SamplingType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **fixed**: Fixed-rate sampling.
 */
export type SamplingType = string;

/** Known values of {@link DataMaskingMode} that the service accepts. */
export enum KnownDataMaskingMode {
  /** Mask the value of an entity. */
  Mask = "Mask",
  /** Hide the presence of an entity. */
  Hide = "Hide"
}

/**
 * Defines values for DataMaskingMode. \
 * {@link KnownDataMaskingMode} can be used interchangeably with DataMaskingMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Mask**: Mask the value of an entity. \
 * **Hide**: Hide the presence of an entity.
 */
export type DataMaskingMode = string;

/** Known values of {@link HttpCorrelationProtocol} that the service accepts. */
export enum KnownHttpCorrelationProtocol {
  /** Do not read and inject correlation headers. */
  None = "None",
  /** Inject Request-Id and Request-Context headers with request correlation data. See https://github.com/dotnet/corefx/blob/master/src/System.Diagnostics.DiagnosticSource/src/HttpCorrelationProtocol.md. */
  Legacy = "Legacy",
  /** Inject Trace Context headers. See https://w3c.github.io/trace-context. */
  W3C = "W3C"
}

/**
 * Defines values for HttpCorrelationProtocol. \
 * {@link KnownHttpCorrelationProtocol} can be used interchangeably with HttpCorrelationProtocol,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None**: Do not read and inject correlation headers. \
 * **Legacy**: Inject Request-Id and Request-Context headers with request correlation data. See https:\/\/github.com\/dotnet\/corefx\/blob\/master\/src\/System.Diagnostics.DiagnosticSource\/src\/HttpCorrelationProtocol.md. \
 * **W3C**: Inject Trace Context headers. See https:\/\/w3c.github.io\/trace-context.
 */
export type HttpCorrelationProtocol = string;

/** Known values of {@link Verbosity} that the service accepts. */
export enum KnownVerbosity {
  /** All the traces emitted by trace policies will be sent to the logger attached to this diagnostic instance. */
  Verbose = "verbose",
  /** Traces with 'severity' set to 'information' and 'error' will be sent to the logger attached to this diagnostic instance. */
  Information = "information",
  /** Only traces with 'severity' set to 'error' will be sent to the logger attached to this diagnostic instance. */
  Error = "error"
}

/**
 * Defines values for Verbosity. \
 * {@link KnownVerbosity} can be used interchangeably with Verbosity,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **verbose**: All the traces emitted by trace policies will be sent to the logger attached to this diagnostic instance. \
 * **information**: Traces with 'severity' set to 'information' and 'error' will be sent to the logger attached to this diagnostic instance. \
 * **error**: Only traces with 'severity' set to 'error' will be sent to the logger attached to this diagnostic instance.
 */
export type Verbosity = string;

/** Known values of {@link OperationNameFormat} that the service accepts. */
export enum KnownOperationNameFormat {
  /** API_NAME;rev=API_REVISION - OPERATION_NAME */
  Name = "Name",
  /** HTTP_VERB URL */
  Url = "Url"
}

/**
 * Defines values for OperationNameFormat. \
 * {@link KnownOperationNameFormat} can be used interchangeably with OperationNameFormat,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Name**: API_NAME;rev=API_REVISION - OPERATION_NAME \
 * **Url**: HTTP_VERB URL
 */
export type OperationNameFormat = string;

/** Known values of {@link State} that the service accepts. */
export enum KnownState {
  /** The issue is proposed. */
  Proposed = "proposed",
  /** The issue is opened. */
  Open = "open",
  /** The issue was removed. */
  Removed = "removed",
  /** The issue is now resolved. */
  Resolved = "resolved",
  /** The issue was closed. */
  Closed = "closed"
}

/**
 * Defines values for State. \
 * {@link KnownState} can be used interchangeably with State,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **proposed**: The issue is proposed. \
 * **open**: The issue is opened. \
 * **removed**: The issue was removed. \
 * **resolved**: The issue is now resolved. \
 * **closed**: The issue was closed.
 */
export type State = string;

/** Known values of {@link ExportFormat} that the service accepts. */
export enum KnownExportFormat {
  /** Export the Api Definition in OpenAPI 2.0 Specification as JSON document to the Storage Blob. */
  Swagger = "swagger-link",
  /** Export the Api Definition in WSDL Schema to Storage Blob. This is only supported for APIs of Type `soap` */
  Wsdl = "wsdl-link",
  /** Export the Api Definition in WADL Schema to Storage Blob. */
  Wadl = "wadl-link",
  /** Export the Api Definition in OpenAPI 3.0 Specification as YAML document to Storage Blob. */
  Openapi = "openapi-link",
  /** Export the Api Definition in OpenAPI 3.0 Specification as JSON document to Storage Blob. */
  OpenapiJson = "openapi+json-link"
}

/**
 * Defines values for ExportFormat. \
 * {@link KnownExportFormat} can be used interchangeably with ExportFormat,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **swagger-link**: Export the Api Definition in OpenAPI 2.0 Specification as JSON document to the Storage Blob. \
 * **wsdl-link**: Export the Api Definition in WSDL Schema to Storage Blob. This is only supported for APIs of Type `soap` \
 * **wadl-link**: Export the Api Definition in WADL Schema to Storage Blob. \
 * **openapi-link**: Export the Api Definition in OpenAPI 3.0 Specification as YAML document to Storage Blob. \
 * **openapi+json-link**: Export the Api Definition in OpenAPI 3.0 Specification as JSON document to Storage Blob.
 */
export type ExportFormat = string;

/** Known values of {@link ExportApi} that the service accepts. */
export enum KnownExportApi {
  /** True */
  True = "true"
}

/**
 * Defines values for ExportApi. \
 * {@link KnownExportApi} can be used interchangeably with ExportApi,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **true**
 */
export type ExportApi = string;

/** Known values of {@link ExportResultFormat} that the service accepts. */
export enum KnownExportResultFormat {
  /** The API Definition is exported in OpenAPI Specification 2.0 format to the Storage Blob. */
  Swagger = "swagger-link-json",
  /** The API Definition is exported in WSDL Schema to Storage Blob. This is only supported for APIs of Type `soap` */
  Wsdl = "wsdl-link+xml",
  /** Export the API Definition in WADL Schema to Storage Blob. */
  Wadl = "wadl-link-json",
  /** Export the API Definition in OpenAPI Specification 3.0 to Storage Blob. */
  OpenApi = "openapi-link"
}

/**
 * Defines values for ExportResultFormat. \
 * {@link KnownExportResultFormat} can be used interchangeably with ExportResultFormat,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **swagger-link-json**: The API Definition is exported in OpenAPI Specification 2.0 format to the Storage Blob. \
 * **wsdl-link+xml**: The API Definition is exported in WSDL Schema to Storage Blob. This is only supported for APIs of Type `soap` \
 * **wadl-link-json**: Export the API Definition in WADL Schema to Storage Blob. \
 * **openapi-link**: Export the API Definition in OpenAPI Specification 3.0 to Storage Blob.
 */
export type ExportResultFormat = string;

/** Known values of {@link VersioningScheme} that the service accepts. */
export enum KnownVersioningScheme {
  /** The API Version is passed in a path segment. */
  Segment = "Segment",
  /** The API Version is passed in a query parameter. */
  Query = "Query",
  /** The API Version is passed in a HTTP header. */
  Header = "Header"
}

/**
 * Defines values for VersioningScheme. \
 * {@link KnownVersioningScheme} can be used interchangeably with VersioningScheme,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Segment**: The API Version is passed in a path segment. \
 * **Query**: The API Version is passed in a query parameter. \
 * **Header**: The API Version is passed in a HTTP header.
 */
export type VersioningScheme = string;

/** Known values of {@link GrantType} that the service accepts. */
export enum KnownGrantType {
  /** Authorization Code Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.1. */
  AuthorizationCode = "authorizationCode",
  /** Implicit Code Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.2. */
  Implicit = "implicit",
  /** Resource Owner Password Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.3. */
  ResourceOwnerPassword = "resourceOwnerPassword",
  /** Client Credentials Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.4. */
  ClientCredentials = "clientCredentials"
}

/**
 * Defines values for GrantType. \
 * {@link KnownGrantType} can be used interchangeably with GrantType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **authorizationCode**: Authorization Code Grant flow as described https:\/\/tools.ietf.org\/html\/rfc6749#section-4.1. \
 * **implicit**: Implicit Code Grant flow as described https:\/\/tools.ietf.org\/html\/rfc6749#section-4.2. \
 * **resourceOwnerPassword**: Resource Owner Password Grant flow as described https:\/\/tools.ietf.org\/html\/rfc6749#section-4.3. \
 * **clientCredentials**: Client Credentials Grant flow as described https:\/\/tools.ietf.org\/html\/rfc6749#section-4.4.
 */
export type GrantType = string;

/** Known values of {@link ClientAuthenticationMethod} that the service accepts. */
export enum KnownClientAuthenticationMethod {
  /** Basic Client Authentication method. */
  Basic = "Basic",
  /** Body based Authentication method. */
  Body = "Body"
}

/**
 * Defines values for ClientAuthenticationMethod. \
 * {@link KnownClientAuthenticationMethod} can be used interchangeably with ClientAuthenticationMethod,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Basic**: Basic Client Authentication method. \
 * **Body**: Body based Authentication method.
 */
export type ClientAuthenticationMethod = string;

/** Known values of {@link BearerTokenSendingMethod} that the service accepts. */
export enum KnownBearerTokenSendingMethod {
  /** AuthorizationHeader */
  AuthorizationHeader = "authorizationHeader",
  /** Query */
  Query = "query"
}

/**
 * Defines values for BearerTokenSendingMethod. \
 * {@link KnownBearerTokenSendingMethod} can be used interchangeably with BearerTokenSendingMethod,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **authorizationHeader** \
 * **query**
 */
export type BearerTokenSendingMethod = string;

/** Known values of {@link BackendProtocol} that the service accepts. */
export enum KnownBackendProtocol {
  /** The Backend is a RESTful service. */
  Http = "http",
  /** The Backend is a SOAP service. */
  Soap = "soap"
}

/**
 * Defines values for BackendProtocol. \
 * {@link KnownBackendProtocol} can be used interchangeably with BackendProtocol,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **http**: The Backend is a RESTful service. \
 * **soap**: The Backend is a SOAP service.
 */
export type BackendProtocol = string;

/** Known values of {@link PreferredIPVersion} that the service accepts. */
export enum KnownPreferredIPVersion {
  /** IPv4 */
  IPv4 = "IPv4"
}

/**
 * Defines values for PreferredIPVersion. \
 * {@link KnownPreferredIPVersion} can be used interchangeably with PreferredIPVersion,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **IPv4**
 */
export type PreferredIPVersion = string;

/** Known values of {@link ConnectivityCheckProtocol} that the service accepts. */
export enum KnownConnectivityCheckProtocol {
  /** TCP */
  TCP = "TCP",
  /** Http */
  Http = "HTTP",
  /** Https */
  Https = "HTTPS"
}

/**
 * Defines values for ConnectivityCheckProtocol. \
 * {@link KnownConnectivityCheckProtocol} can be used interchangeably with ConnectivityCheckProtocol,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **TCP** \
 * **HTTP** \
 * **HTTPS**
 */
export type ConnectivityCheckProtocol = string;

/** Known values of {@link Method} that the service accepts. */
export enum KnownMethod {
  /** GET */
  GET = "GET",
  /** Post */
  Post = "POST"
}

/**
 * Defines values for Method. \
 * {@link KnownMethod} can be used interchangeably with Method,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **GET** \
 * **POST**
 */
export type Method = string;

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** Local */
  Local = "Local",
  /** Inbound */
  Inbound = "Inbound",
  /** Outbound */
  Outbound = "Outbound"
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Local** \
 * **Inbound** \
 * **Outbound**
 */
export type Origin = string;

/** Known values of {@link Severity} that the service accepts. */
export enum KnownSeverity {
  /** Error */
  Error = "Error",
  /** Warning */
  Warning = "Warning"
}

/**
 * Defines values for Severity. \
 * {@link KnownSeverity} can be used interchangeably with Severity,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Error** \
 * **Warning**
 */
export type Severity = string;

/** Known values of {@link IssueType} that the service accepts. */
export enum KnownIssueType {
  /** Unknown */
  Unknown = "Unknown",
  /** AgentStopped */
  AgentStopped = "AgentStopped",
  /** GuestFirewall */
  GuestFirewall = "GuestFirewall",
  /** DnsResolution */
  DnsResolution = "DnsResolution",
  /** SocketBind */
  SocketBind = "SocketBind",
  /** NetworkSecurityRule */
  NetworkSecurityRule = "NetworkSecurityRule",
  /** UserDefinedRoute */
  UserDefinedRoute = "UserDefinedRoute",
  /** PortThrottled */
  PortThrottled = "PortThrottled",
  /** Platform */
  Platform = "Platform"
}

/**
 * Defines values for IssueType. \
 * {@link KnownIssueType} can be used interchangeably with IssueType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **AgentStopped** \
 * **GuestFirewall** \
 * **DnsResolution** \
 * **SocketBind** \
 * **NetworkSecurityRule** \
 * **UserDefinedRoute** \
 * **PortThrottled** \
 * **Platform**
 */
export type IssueType = string;

/** Known values of {@link ConnectionStatus} that the service accepts. */
export enum KnownConnectionStatus {
  /** Unknown */
  Unknown = "Unknown",
  /** Connected */
  Connected = "Connected",
  /** Disconnected */
  Disconnected = "Disconnected",
  /** Degraded */
  Degraded = "Degraded"
}

/**
 * Defines values for ConnectionStatus. \
 * {@link KnownConnectionStatus} can be used interchangeably with ConnectionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Connected** \
 * **Disconnected** \
 * **Degraded**
 */
export type ConnectionStatus = string;

/** Known values of {@link SkuType} that the service accepts. */
export enum KnownSkuType {
  /** Developer SKU of Api Management. */
  Developer = "Developer",
  /** Standard SKU of Api Management. */
  Standard = "Standard",
  /** Premium SKU of Api Management. */
  Premium = "Premium",
  /** Basic SKU of Api Management. */
  Basic = "Basic",
  /** Consumption SKU of Api Management. */
  Consumption = "Consumption",
  /** Isolated SKU of Api Management. */
  Isolated = "Isolated"
}

/**
 * Defines values for SkuType. \
 * {@link KnownSkuType} can be used interchangeably with SkuType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Developer**: Developer SKU of Api Management. \
 * **Standard**: Standard SKU of Api Management. \
 * **Premium**: Premium SKU of Api Management. \
 * **Basic**: Basic SKU of Api Management. \
 * **Consumption**: Consumption SKU of Api Management. \
 * **Isolated**: Isolated SKU of Api Management.
 */
export type SkuType = string;

/** Known values of {@link ResourceSkuCapacityScaleType} that the service accepts. */
export enum KnownResourceSkuCapacityScaleType {
  /** Supported scale type automatic. */
  Automatic = "automatic",
  /** Supported scale type manual. */
  Manual = "manual",
  /** Scaling not supported. */
  None = "none"
}

/**
 * Defines values for ResourceSkuCapacityScaleType. \
 * {@link KnownResourceSkuCapacityScaleType} can be used interchangeably with ResourceSkuCapacityScaleType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **automatic**: Supported scale type automatic. \
 * **manual**: Supported scale type manual. \
 * **none**: Scaling not supported.
 */
export type ResourceSkuCapacityScaleType = string;

/** Known values of {@link AccessType} that the service accepts. */
export enum KnownAccessType {
  /** Use access key. */
  AccessKey = "AccessKey",
  /** Use system assigned managed identity. */
  SystemAssignedManagedIdentity = "SystemAssignedManagedIdentity",
  /** Use user assigned managed identity. */
  UserAssignedManagedIdentity = "UserAssignedManagedIdentity"
}

/**
 * Defines values for AccessType. \
 * {@link KnownAccessType} can be used interchangeably with AccessType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AccessKey**: Use access key. \
 * **SystemAssignedManagedIdentity**: Use system assigned managed identity. \
 * **UserAssignedManagedIdentity**: Use user assigned managed identity.
 */
export type AccessType = string;

/** Known values of {@link HostnameType} that the service accepts. */
export enum KnownHostnameType {
  /** Proxy */
  Proxy = "Proxy",
  /** Portal */
  Portal = "Portal",
  /** Management */
  Management = "Management",
  /** Scm */
  Scm = "Scm",
  /** DeveloperPortal */
  DeveloperPortal = "DeveloperPortal"
}

/**
 * Defines values for HostnameType. \
 * {@link KnownHostnameType} can be used interchangeably with HostnameType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Proxy** \
 * **Portal** \
 * **Management** \
 * **Scm** \
 * **DeveloperPortal**
 */
export type HostnameType = string;

/** Known values of {@link CertificateSource} that the service accepts. */
export enum KnownCertificateSource {
  /** Managed */
  Managed = "Managed",
  /** KeyVault */
  KeyVault = "KeyVault",
  /** Custom */
  Custom = "Custom",
  /** BuiltIn */
  BuiltIn = "BuiltIn"
}

/**
 * Defines values for CertificateSource. \
 * {@link KnownCertificateSource} can be used interchangeably with CertificateSource,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Managed** \
 * **KeyVault** \
 * **Custom** \
 * **BuiltIn**
 */
export type CertificateSource = string;

/** Known values of {@link CertificateStatus} that the service accepts. */
export enum KnownCertificateStatus {
  /** Completed */
  Completed = "Completed",
  /** Failed */
  Failed = "Failed",
  /** InProgress */
  InProgress = "InProgress"
}

/**
 * Defines values for CertificateStatus. \
 * {@link KnownCertificateStatus} can be used interchangeably with CertificateStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Completed** \
 * **Failed** \
 * **InProgress**
 */
export type CertificateStatus = string;

/** Known values of {@link PublicNetworkAccess} that the service accepts. */
export enum KnownPublicNetworkAccess {
  /** Enabled */
  Enabled = "Enabled",
  /** Disabled */
  Disabled = "Disabled"
}

/**
 * Defines values for PublicNetworkAccess. \
 * {@link KnownPublicNetworkAccess} can be used interchangeably with PublicNetworkAccess,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export type PublicNetworkAccess = string;

/** Known values of {@link PlatformVersion} that the service accepts. */
export enum KnownPlatformVersion {
  /** Platform version cannot be determined, as compute platform is not deployed. */
  Undetermined = "undetermined",
  /** Platform running the service on Single Tenant V1 platform. */
  Stv1 = "stv1",
  /** Platform running the service on Single Tenant V2 platform. */
  Stv2 = "stv2",
  /** Platform running the service on Multi Tenant V1 platform. */
  Mtv1 = "mtv1"
}

/**
 * Defines values for PlatformVersion. \
 * {@link KnownPlatformVersion} can be used interchangeably with PlatformVersion,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **undetermined**: Platform version cannot be determined, as compute platform is not deployed. \
 * **stv1**: Platform running the service on Single Tenant V1 platform. \
 * **stv2**: Platform running the service on Single Tenant V2 platform. \
 * **mtv1**: Platform running the service on Multi Tenant V1 platform.
 */
export type PlatformVersion = string;

/** Known values of {@link CertificateConfigurationStoreName} that the service accepts. */
export enum KnownCertificateConfigurationStoreName {
  /** CertificateAuthority */
  CertificateAuthority = "CertificateAuthority",
  /** Root */
  Root = "Root"
}

/**
 * Defines values for CertificateConfigurationStoreName. \
 * {@link KnownCertificateConfigurationStoreName} can be used interchangeably with CertificateConfigurationStoreName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **CertificateAuthority** \
 * **Root**
 */
export type CertificateConfigurationStoreName = string;

/** Known values of {@link VirtualNetworkType} that the service accepts. */
export enum KnownVirtualNetworkType {
  /** The service is not part of any Virtual Network. */
  None = "None",
  /** The service is part of Virtual Network and it is accessible from Internet. */
  External = "External",
  /** The service is part of Virtual Network and it is only accessible from within the virtual network. */
  Internal = "Internal"
}

/**
 * Defines values for VirtualNetworkType. \
 * {@link KnownVirtualNetworkType} can be used interchangeably with VirtualNetworkType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None**: The service is not part of any Virtual Network. \
 * **External**: The service is part of Virtual Network and it is accessible from Internet. \
 * **Internal**: The service is part of Virtual Network and it is only accessible from within the virtual network.
 */
export type VirtualNetworkType = string;

/** Known values of {@link PrivateEndpointServiceConnectionStatus} that the service accepts. */
export enum KnownPrivateEndpointServiceConnectionStatus {
  /** Pending */
  Pending = "Pending",
  /** Approved */
  Approved = "Approved",
  /** Rejected */
  Rejected = "Rejected"
}

/**
 * Defines values for PrivateEndpointServiceConnectionStatus. \
 * {@link KnownPrivateEndpointServiceConnectionStatus} can be used interchangeably with PrivateEndpointServiceConnectionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Approved** \
 * **Rejected**
 */
export type PrivateEndpointServiceConnectionStatus = string;

/** Known values of {@link ApimIdentityType} that the service accepts. */
export enum KnownApimIdentityType {
  /** SystemAssigned */
  SystemAssigned = "SystemAssigned",
  /** UserAssigned */
  UserAssigned = "UserAssigned",
  /** SystemAssignedUserAssigned */
  SystemAssignedUserAssigned = "SystemAssigned, UserAssigned",
  /** None */
  None = "None"
}

/**
 * Defines values for ApimIdentityType. \
 * {@link KnownApimIdentityType} can be used interchangeably with ApimIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SystemAssigned** \
 * **UserAssigned** \
 * **SystemAssigned, UserAssigned** \
 * **None**
 */
export type ApimIdentityType = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link TemplateName} that the service accepts. */
export enum KnownTemplateName {
  /** ApplicationApprovedNotificationMessage */
  ApplicationApprovedNotificationMessage = "applicationApprovedNotificationMessage",
  /** AccountClosedDeveloper */
  AccountClosedDeveloper = "accountClosedDeveloper",
  /** QuotaLimitApproachingDeveloperNotificationMessage */
  QuotaLimitApproachingDeveloperNotificationMessage = "quotaLimitApproachingDeveloperNotificationMessage",
  /** NewDeveloperNotificationMessage */
  NewDeveloperNotificationMessage = "newDeveloperNotificationMessage",
  /** EmailChangeIdentityDefault */
  EmailChangeIdentityDefault = "emailChangeIdentityDefault",
  /** InviteUserNotificationMessage */
  InviteUserNotificationMessage = "inviteUserNotificationMessage",
  /** NewCommentNotificationMessage */
  NewCommentNotificationMessage = "newCommentNotificationMessage",
  /** ConfirmSignUpIdentityDefault */
  ConfirmSignUpIdentityDefault = "confirmSignUpIdentityDefault",
  /** NewIssueNotificationMessage */
  NewIssueNotificationMessage = "newIssueNotificationMessage",
  /** PurchaseDeveloperNotificationMessage */
  PurchaseDeveloperNotificationMessage = "purchaseDeveloperNotificationMessage",
  /** PasswordResetIdentityDefault */
  PasswordResetIdentityDefault = "passwordResetIdentityDefault",
  /** PasswordResetByAdminNotificationMessage */
  PasswordResetByAdminNotificationMessage = "passwordResetByAdminNotificationMessage",
  /** RejectDeveloperNotificationMessage */
  RejectDeveloperNotificationMessage = "rejectDeveloperNotificationMessage",
  /** RequestDeveloperNotificationMessage */
  RequestDeveloperNotificationMessage = "requestDeveloperNotificationMessage"
}

/**
 * Defines values for TemplateName. \
 * {@link KnownTemplateName} can be used interchangeably with TemplateName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **applicationApprovedNotificationMessage** \
 * **accountClosedDeveloper** \
 * **quotaLimitApproachingDeveloperNotificationMessage** \
 * **newDeveloperNotificationMessage** \
 * **emailChangeIdentityDefault** \
 * **inviteUserNotificationMessage** \
 * **newCommentNotificationMessage** \
 * **confirmSignUpIdentityDefault** \
 * **newIssueNotificationMessage** \
 * **purchaseDeveloperNotificationMessage** \
 * **passwordResetIdentityDefault** \
 * **passwordResetByAdminNotificationMessage** \
 * **rejectDeveloperNotificationMessage** \
 * **requestDeveloperNotificationMessage**
 */
export type TemplateName = string;

/** Known values of {@link UserState} that the service accepts. */
export enum KnownUserState {
  /** User state is active. */
  Active = "active",
  /** User is blocked. Blocked users cannot authenticate at developer portal or call API. */
  Blocked = "blocked",
  /** User account is pending. Requires identity confirmation before it can be made active. */
  Pending = "pending",
  /** User account is closed. All identities and related entities are removed. */
  Deleted = "deleted"
}

/**
 * Defines values for UserState. \
 * {@link KnownUserState} can be used interchangeably with UserState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **active**: User state is active. \
 * **blocked**: User is blocked. Blocked users cannot authenticate at developer portal or call API. \
 * **pending**: User account is pending. Requires identity confirmation before it can be made active. \
 * **deleted**: User account is closed. All identities and related entities are removed.
 */
export type UserState = string;

/** Known values of {@link IdentityProviderType} that the service accepts. */
export enum KnownIdentityProviderType {
  /** Facebook as Identity provider. */
  Facebook = "facebook",
  /** Google as Identity provider. */
  Google = "google",
  /** Microsoft Live as Identity provider. */
  Microsoft = "microsoft",
  /** Twitter as Identity provider. */
  Twitter = "twitter",
  /** Azure Active Directory as Identity provider. */
  Aad = "aad",
  /** Azure Active Directory B2C as Identity provider. */
  AadB2C = "aadB2C"
}

/**
 * Defines values for IdentityProviderType. \
 * {@link KnownIdentityProviderType} can be used interchangeably with IdentityProviderType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **facebook**: Facebook as Identity provider. \
 * **google**: Google as Identity provider. \
 * **microsoft**: Microsoft Live as Identity provider. \
 * **twitter**: Twitter as Identity provider. \
 * **aad**: Azure Active Directory as Identity provider. \
 * **aadB2C**: Azure Active Directory B2C as Identity provider.
 */
export type IdentityProviderType = string;

/** Known values of {@link LoggerType} that the service accepts. */
export enum KnownLoggerType {
  /** Azure Event Hub as log destination. */
  AzureEventHub = "azureEventHub",
  /** Azure Application Insights as log destination. */
  ApplicationInsights = "applicationInsights",
  /** Azure Monitor */
  AzureMonitor = "azureMonitor"
}

/**
 * Defines values for LoggerType. \
 * {@link KnownLoggerType} can be used interchangeably with LoggerType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **azureEventHub**: Azure Event Hub as log destination. \
 * **applicationInsights**: Azure Application Insights as log destination. \
 * **azureMonitor**: Azure Monitor
 */
export type LoggerType = string;

/** Known values of {@link ConnectivityStatusType} that the service accepts. */
export enum KnownConnectivityStatusType {
  /** Initializing */
  Initializing = "initializing",
  /** Success */
  Success = "success",
  /** Failure */
  Failure = "failure"
}

/**
 * Defines values for ConnectivityStatusType. \
 * {@link KnownConnectivityStatusType} can be used interchangeably with ConnectivityStatusType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **initializing** \
 * **success** \
 * **failure**
 */
export type ConnectivityStatusType = string;

/** Known values of {@link NotificationName} that the service accepts. */
export enum KnownNotificationName {
  /** The following email recipients and users will receive email notifications about subscription requests for API products requiring approval. */
  RequestPublisherNotificationMessage = "RequestPublisherNotificationMessage",
  /** The following email recipients and users will receive email notifications about new API product subscriptions. */
  PurchasePublisherNotificationMessage = "PurchasePublisherNotificationMessage",
  /** The following email recipients and users will receive email notifications when new applications are submitted to the application gallery. */
  NewApplicationNotificationMessage = "NewApplicationNotificationMessage",
  /** The following recipients will receive blind carbon copies of all emails sent to developers. */
  BCC = "BCC",
  /** The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal. */
  NewIssuePublisherNotificationMessage = "NewIssuePublisherNotificationMessage",
  /** The following email recipients and users will receive email notifications when developer closes his account. */
  AccountClosedPublisher = "AccountClosedPublisher",
  /** The following email recipients and users will receive email notifications when subscription usage gets close to usage quota. */
  QuotaLimitApproachingPublisherNotificationMessage = "QuotaLimitApproachingPublisherNotificationMessage"
}

/**
 * Defines values for NotificationName. \
 * {@link KnownNotificationName} can be used interchangeably with NotificationName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **RequestPublisherNotificationMessage**: The following email recipients and users will receive email notifications about subscription requests for API products requiring approval. \
 * **PurchasePublisherNotificationMessage**: The following email recipients and users will receive email notifications about new API product subscriptions. \
 * **NewApplicationNotificationMessage**: The following email recipients and users will receive email notifications when new applications are submitted to the application gallery. \
 * **BCC**: The following recipients will receive blind carbon copies of all emails sent to developers. \
 * **NewIssuePublisherNotificationMessage**: The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal. \
 * **AccountClosedPublisher**: The following email recipients and users will receive email notifications when developer closes his account. \
 * **QuotaLimitApproachingPublisherNotificationMessage**: The following email recipients and users will receive email notifications when subscription usage gets close to usage quota.
 */
export type NotificationName = string;

/** Known values of {@link PortalRevisionStatus} that the service accepts. */
export enum KnownPortalRevisionStatus {
  /** Portal's revision has been queued. */
  Pending = "pending",
  /** Portal's revision is being published. */
  Publishing = "publishing",
  /** Portal's revision publishing completed. */
  Completed = "completed",
  /** Portal's revision publishing failed. */
  Failed = "failed"
}

/**
 * Defines values for PortalRevisionStatus. \
 * {@link KnownPortalRevisionStatus} can be used interchangeably with PortalRevisionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **pending**: Portal's revision has been queued. \
 * **publishing**: Portal's revision is being published. \
 * **completed**: Portal's revision publishing completed. \
 * **failed**: Portal's revision publishing failed.
 */
export type PortalRevisionStatus = string;

/** Known values of {@link PrivateEndpointConnectionProvisioningState} that the service accepts. */
export enum KnownPrivateEndpointConnectionProvisioningState {
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Creating */
  Creating = "Creating",
  /** Deleting */
  Deleting = "Deleting",
  /** Failed */
  Failed = "Failed"
}

/**
 * Defines values for PrivateEndpointConnectionProvisioningState. \
 * {@link KnownPrivateEndpointConnectionProvisioningState} can be used interchangeably with PrivateEndpointConnectionProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Creating** \
 * **Deleting** \
 * **Failed**
 */
export type PrivateEndpointConnectionProvisioningState = string;

/** Known values of {@link SettingsTypeName} that the service accepts. */
export enum KnownSettingsTypeName {
  /** Public */
  Public = "public"
}

/**
 * Defines values for SettingsTypeName. \
 * {@link KnownSettingsTypeName} can be used interchangeably with SettingsTypeName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **public**
 */
export type SettingsTypeName = string;

/** Known values of {@link AppType} that the service accepts. */
export enum KnownAppType {
  /** User create request was sent by legacy developer portal. */
  Portal = "portal",
  /** User create request was sent by new developer portal. */
  DeveloperPortal = "developerPortal"
}

/**
 * Defines values for AppType. \
 * {@link KnownAppType} can be used interchangeably with AppType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **portal**: User create request was sent by legacy developer portal. \
 * **developerPortal**: User create request was sent by new developer portal.
 */
export type AppType = string;

/** Known values of {@link AccessIdName} that the service accepts. */
export enum KnownAccessIdName {
  /** Access */
  Access = "access",
  /** GitAccess */
  GitAccess = "gitAccess"
}

/**
 * Defines values for AccessIdName. \
 * {@link KnownAccessIdName} can be used interchangeably with AccessIdName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **access** \
 * **gitAccess**
 */
export type AccessIdName = string;

/** Known values of {@link ConfigurationIdName} that the service accepts. */
export enum KnownConfigurationIdName {
  /** Configuration */
  Configuration = "configuration"
}

/**
 * Defines values for ConfigurationIdName. \
 * {@link KnownConfigurationIdName} can be used interchangeably with ConfigurationIdName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **configuration**
 */
export type ConfigurationIdName = string;

/** Known values of {@link Confirmation} that the service accepts. */
export enum KnownConfirmation {
  /** Send an e-mail to the user confirming they have successfully signed up. */
  Signup = "signup",
  /** Send an e-mail inviting the user to sign-up and complete registration. */
  Invite = "invite"
}

/**
 * Defines values for Confirmation. \
 * {@link KnownConfirmation} can be used interchangeably with Confirmation,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **signup**: Send an e-mail to the user confirming they have successfully signed up. \
 * **invite**: Send an e-mail inviting the user to sign-up and complete registration.
 */
export type Confirmation = string;
/** Defines values for ProductState. */
export type ProductState = "notPublished" | "published";
/** Defines values for AuthorizationMethod. */
export type AuthorizationMethod =
  | "HEAD"
  | "OPTIONS"
  | "TRACE"
  | "GET"
  | "POST"
  | "PUT"
  | "PATCH"
  | "DELETE";
/** Defines values for NameAvailabilityReason. */
export type NameAvailabilityReason = "Valid" | "Invalid" | "AlreadyExists";
/** Defines values for KeyType. */
export type KeyType = "primary" | "secondary";
/** Defines values for GroupType. */
export type GroupType = "custom" | "system" | "external";
/** Defines values for PolicyScopeContract. */
export type PolicyScopeContract =
  | "Tenant"
  | "Product"
  | "Api"
  | "Operation"
  | "All";
/** Defines values for SubscriptionState. */
export type SubscriptionState =
  | "suspended"
  | "active"
  | "expired"
  | "submitted"
  | "rejected"
  | "cancelled";
/** Defines values for ApiManagementSkuCapacityScaleType. */
export type ApiManagementSkuCapacityScaleType = "Automatic" | "Manual" | "None";
/** Defines values for ApiManagementSkuRestrictionsType. */
export type ApiManagementSkuRestrictionsType = "Location" | "Zone";
/** Defines values for ApiManagementSkuRestrictionsReasonCode. */
export type ApiManagementSkuRestrictionsReasonCode =
  | "QuotaId"
  | "NotAvailableForSubscription";
/** Defines values for AsyncOperationStatus. */
export type AsyncOperationStatus =
  | "Started"
  | "InProgress"
  | "Succeeded"
  | "Failed";

/** Optional parameters. */
export interface ApiListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| isCurrent | filter | eq, ne |  |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** Include tags in the response. */
  tags?: string;
  /** Include full ApiVersionSet resource in response */
  expandApiVersionSet?: boolean;
}

/** Contains response data for the listByService operation. */
export type ApiListByServiceResponse = ApiCollection;

/** Optional parameters. */
export interface ApiGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type ApiGetEntityTagResponse = ApiGetEntityTagHeaders;

/** Optional parameters. */
export interface ApiGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ApiGetResponse = ApiGetHeaders & ApiContract;

/** Optional parameters. */
export interface ApiCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ApiCreateOrUpdateResponse = ApiCreateOrUpdateHeaders & ApiContract;

/** Optional parameters. */
export interface ApiUpdateOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type ApiUpdateResponse = ApiUpdateHeaders & ApiContract;

/** Optional parameters. */
export interface ApiDeleteOptionalParams extends coreClient.OperationOptions {
  /** Delete all revisions of the Api. */
  deleteRevisions?: boolean;
}

/** Optional parameters. */
export interface ApiListByTagsOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| apiRevision | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| isCurrent | filter | eq |     |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** Include not tagged APIs. */
  includeNotTaggedApis?: boolean;
}

/** Contains response data for the listByTags operation. */
export type ApiListByTagsResponse = TagResourceCollection;

/** Optional parameters. */
export interface ApiListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| isCurrent | filter | eq, ne |  |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** Include tags in the response. */
  tags?: string;
  /** Include full ApiVersionSet resource in response */
  expandApiVersionSet?: boolean;
}

/** Contains response data for the listByServiceNext operation. */
export type ApiListByServiceNextResponse = ApiCollection;

/** Optional parameters. */
export interface ApiListByTagsNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| apiRevision | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| isCurrent | filter | eq |     |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** Include not tagged APIs. */
  includeNotTaggedApis?: boolean;
}

/** Contains response data for the listByTagsNext operation. */
export type ApiListByTagsNextResponse = TagResourceCollection;

/** Optional parameters. */
export interface ApiRevisionListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| apiRevision | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByService operation. */
export type ApiRevisionListByServiceResponse = ApiRevisionCollection;

/** Optional parameters. */
export interface ApiRevisionListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| apiRevision | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByServiceNext operation. */
export type ApiRevisionListByServiceNextResponse = ApiRevisionCollection;

/** Optional parameters. */
export interface ApiReleaseListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| notes | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByService operation. */
export type ApiReleaseListByServiceResponse = ApiReleaseCollection;

/** Optional parameters. */
export interface ApiReleaseGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type ApiReleaseGetEntityTagResponse = ApiReleaseGetEntityTagHeaders;

/** Optional parameters. */
export interface ApiReleaseGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ApiReleaseGetResponse = ApiReleaseGetHeaders & ApiReleaseContract;

/** Optional parameters. */
export interface ApiReleaseCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ApiReleaseCreateOrUpdateResponse = ApiReleaseCreateOrUpdateHeaders &
  ApiReleaseContract;

/** Optional parameters. */
export interface ApiReleaseUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type ApiReleaseUpdateResponse = ApiReleaseUpdateHeaders &
  ApiReleaseContract;

/** Optional parameters. */
export interface ApiReleaseDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ApiReleaseListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| notes | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByServiceNext operation. */
export type ApiReleaseListByServiceNextResponse = ApiReleaseCollection;

/** Optional parameters. */
export interface ApiOperationListByApiOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| method | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| urlTemplate | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** Include tags in the response. */
  tags?: string;
}

/** Contains response data for the listByApi operation. */
export type ApiOperationListByApiResponse = OperationCollection;

/** Optional parameters. */
export interface ApiOperationGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type ApiOperationGetEntityTagResponse = ApiOperationGetEntityTagHeaders;

/** Optional parameters. */
export interface ApiOperationGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ApiOperationGetResponse = ApiOperationGetHeaders &
  OperationContract;

/** Optional parameters. */
export interface ApiOperationCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ApiOperationCreateOrUpdateResponse = ApiOperationCreateOrUpdateHeaders &
  OperationContract;

/** Optional parameters. */
export interface ApiOperationUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type ApiOperationUpdateResponse = ApiOperationUpdateHeaders &
  OperationContract;

/** Optional parameters. */
export interface ApiOperationDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ApiOperationListByApiNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| method | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| urlTemplate | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** Include tags in the response. */
  tags?: string;
}

/** Contains response data for the listByApiNext operation. */
export type ApiOperationListByApiNextResponse = OperationCollection;

/** Optional parameters. */
export interface ApiOperationPolicyListByOperationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByOperation operation. */
export type ApiOperationPolicyListByOperationResponse = PolicyCollection;

/** Optional parameters. */
export interface ApiOperationPolicyGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type ApiOperationPolicyGetEntityTagResponse = ApiOperationPolicyGetEntityTagHeaders;

/** Optional parameters. */
export interface ApiOperationPolicyGetOptionalParams
  extends coreClient.OperationOptions {
  /** Policy Export Format. */
  format?: PolicyExportFormat;
}

/** Contains response data for the get operation. */
export type ApiOperationPolicyGetResponse = ApiOperationPolicyGetHeaders &
  PolicyContract;

/** Optional parameters. */
export interface ApiOperationPolicyCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ApiOperationPolicyCreateOrUpdateResponse = ApiOperationPolicyCreateOrUpdateHeaders &
  PolicyContract;

/** Optional parameters. */
export interface ApiOperationPolicyDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface TagListByOperationOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByOperation operation. */
export type TagListByOperationResponse = TagCollection;

/** Optional parameters. */
export interface TagGetEntityStateByOperationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityStateByOperation operation. */
export type TagGetEntityStateByOperationResponse = TagGetEntityStateByOperationHeaders;

/** Optional parameters. */
export interface TagGetByOperationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByOperation operation. */
export type TagGetByOperationResponse = TagGetByOperationHeaders & TagContract;

/** Optional parameters. */
export interface TagAssignToOperationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the assignToOperation operation. */
export type TagAssignToOperationResponse = TagContract;

/** Optional parameters. */
export interface TagDetachFromOperationOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface TagListByApiOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByApi operation. */
export type TagListByApiResponse = TagCollection;

/** Optional parameters. */
export interface TagGetEntityStateByApiOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityStateByApi operation. */
export type TagGetEntityStateByApiResponse = TagGetEntityStateByApiHeaders;

/** Optional parameters. */
export interface TagGetByApiOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByApi operation. */
export type TagGetByApiResponse = TagGetByApiHeaders & TagContract;

/** Optional parameters. */
export interface TagAssignToApiOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the assignToApi operation. */
export type TagAssignToApiResponse = TagAssignToApiHeaders & TagContract;

/** Optional parameters. */
export interface TagDetachFromApiOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface TagListByProductOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByProduct operation. */
export type TagListByProductResponse = TagCollection;

/** Optional parameters. */
export interface TagGetEntityStateByProductOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityStateByProduct operation. */
export type TagGetEntityStateByProductResponse = TagGetEntityStateByProductHeaders;

/** Optional parameters. */
export interface TagGetByProductOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByProduct operation. */
export type TagGetByProductResponse = TagGetByProductHeaders & TagContract;

/** Optional parameters. */
export interface TagAssignToProductOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the assignToProduct operation. */
export type TagAssignToProductResponse = TagContract;

/** Optional parameters. */
export interface TagDetachFromProductOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface TagListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** Scope like 'apis', 'products' or 'apis/{apiId} */
  scope?: string;
}

/** Contains response data for the listByService operation. */
export type TagListByServiceResponse = TagCollection;

/** Optional parameters. */
export interface TagGetEntityStateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityState operation. */
export type TagGetEntityStateResponse = TagGetEntityStateHeaders;

/** Optional parameters. */
export interface TagGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type TagGetResponse = TagGetHeaders & TagContract;

/** Optional parameters. */
export interface TagCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type TagCreateOrUpdateResponse = TagCreateOrUpdateHeaders & TagContract;

/** Optional parameters. */
export interface TagUpdateOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type TagUpdateResponse = TagUpdateHeaders & TagContract;

/** Optional parameters. */
export interface TagDeleteOptionalParams extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface TagListByOperationNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByOperationNext operation. */
export type TagListByOperationNextResponse = TagCollection;

/** Optional parameters. */
export interface TagListByApiNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByApiNext operation. */
export type TagListByApiNextResponse = TagCollection;

/** Optional parameters. */
export interface TagListByProductNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByProductNext operation. */
export type TagListByProductNextResponse = TagCollection;

/** Optional parameters. */
export interface TagListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** Scope like 'apis', 'products' or 'apis/{apiId} */
  scope?: string;
}

/** Contains response data for the listByServiceNext operation. */
export type TagListByServiceNextResponse = TagCollection;

/** Optional parameters. */
export interface ApiProductListByApisOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByApis operation. */
export type ApiProductListByApisResponse = ProductCollection;

/** Optional parameters. */
export interface ApiProductListByApisNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByApisNext operation. */
export type ApiProductListByApisNextResponse = ProductCollection;

/** Optional parameters. */
export interface ApiPolicyListByApiOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByApi operation. */
export type ApiPolicyListByApiResponse = PolicyCollection;

/** Optional parameters. */
export interface ApiPolicyGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type ApiPolicyGetEntityTagResponse = ApiPolicyGetEntityTagHeaders;

/** Optional parameters. */
export interface ApiPolicyGetOptionalParams
  extends coreClient.OperationOptions {
  /** Policy Export Format. */
  format?: PolicyExportFormat;
}

/** Contains response data for the get operation. */
export type ApiPolicyGetResponse = ApiPolicyGetHeaders & PolicyContract;

/** Optional parameters. */
export interface ApiPolicyCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ApiPolicyCreateOrUpdateResponse = ApiPolicyCreateOrUpdateHeaders &
  PolicyContract;

/** Optional parameters. */
export interface ApiPolicyDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ApiSchemaListByApiOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| contentType | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByApi operation. */
export type ApiSchemaListByApiResponse = SchemaCollection;

/** Optional parameters. */
export interface ApiSchemaGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type ApiSchemaGetEntityTagResponse = ApiSchemaGetEntityTagHeaders;

/** Optional parameters. */
export interface ApiSchemaGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ApiSchemaGetResponse = ApiSchemaGetHeaders & SchemaContract;

/** Optional parameters. */
export interface ApiSchemaCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ApiSchemaCreateOrUpdateResponse = ApiSchemaCreateOrUpdateHeaders &
  SchemaContract;

/** Optional parameters. */
export interface ApiSchemaDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** If true removes all references to the schema before deleting it. */
  force?: boolean;
}

/** Optional parameters. */
export interface ApiSchemaListByApiNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| contentType | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByApiNext operation. */
export type ApiSchemaListByApiNextResponse = SchemaCollection;

/** Optional parameters. */
export interface ApiDiagnosticListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByService operation. */
export type ApiDiagnosticListByServiceResponse = DiagnosticCollection;

/** Optional parameters. */
export interface ApiDiagnosticGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type ApiDiagnosticGetEntityTagResponse = ApiDiagnosticGetEntityTagHeaders;

/** Optional parameters. */
export interface ApiDiagnosticGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ApiDiagnosticGetResponse = ApiDiagnosticGetHeaders &
  DiagnosticContract;

/** Optional parameters. */
export interface ApiDiagnosticCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ApiDiagnosticCreateOrUpdateResponse = ApiDiagnosticCreateOrUpdateHeaders &
  DiagnosticContract;

/** Optional parameters. */
export interface ApiDiagnosticUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type ApiDiagnosticUpdateResponse = ApiDiagnosticUpdateHeaders &
  DiagnosticContract;

/** Optional parameters. */
export interface ApiDiagnosticDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ApiDiagnosticListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByServiceNext operation. */
export type ApiDiagnosticListByServiceNextResponse = DiagnosticCollection;

/** Optional parameters. */
export interface ApiIssueListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** Expand the comment attachments. */
  expandCommentsAttachments?: boolean;
}

/** Contains response data for the listByService operation. */
export type ApiIssueListByServiceResponse = IssueCollection;

/** Optional parameters. */
export interface ApiIssueGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type ApiIssueGetEntityTagResponse = ApiIssueGetEntityTagHeaders;

/** Optional parameters. */
export interface ApiIssueGetOptionalParams extends coreClient.OperationOptions {
  /** Expand the comment attachments. */
  expandCommentsAttachments?: boolean;
}

/** Contains response data for the get operation. */
export type ApiIssueGetResponse = ApiIssueGetHeaders & IssueContract;

/** Optional parameters. */
export interface ApiIssueCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ApiIssueCreateOrUpdateResponse = ApiIssueCreateOrUpdateHeaders &
  IssueContract;

/** Optional parameters. */
export interface ApiIssueUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type ApiIssueUpdateResponse = ApiIssueUpdateHeaders & IssueContract;

/** Optional parameters. */
export interface ApiIssueDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ApiIssueListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** Expand the comment attachments. */
  expandCommentsAttachments?: boolean;
}

/** Contains response data for the listByServiceNext operation. */
export type ApiIssueListByServiceNextResponse = IssueCollection;

/** Optional parameters. */
export interface ApiIssueCommentListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByService operation. */
export type ApiIssueCommentListByServiceResponse = IssueCommentCollection;

/** Optional parameters. */
export interface ApiIssueCommentGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type ApiIssueCommentGetEntityTagResponse = ApiIssueCommentGetEntityTagHeaders;

/** Optional parameters. */
export interface ApiIssueCommentGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ApiIssueCommentGetResponse = ApiIssueCommentGetHeaders &
  IssueCommentContract;

/** Optional parameters. */
export interface ApiIssueCommentCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ApiIssueCommentCreateOrUpdateResponse = ApiIssueCommentCreateOrUpdateHeaders &
  IssueCommentContract;

/** Optional parameters. */
export interface ApiIssueCommentDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ApiIssueCommentListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByServiceNext operation. */
export type ApiIssueCommentListByServiceNextResponse = IssueCommentCollection;

/** Optional parameters. */
export interface ApiIssueAttachmentListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByService operation. */
export type ApiIssueAttachmentListByServiceResponse = IssueAttachmentCollection;

/** Optional parameters. */
export interface ApiIssueAttachmentGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type ApiIssueAttachmentGetEntityTagResponse = ApiIssueAttachmentGetEntityTagHeaders;

/** Optional parameters. */
export interface ApiIssueAttachmentGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ApiIssueAttachmentGetResponse = ApiIssueAttachmentGetHeaders &
  IssueAttachmentContract;

/** Optional parameters. */
export interface ApiIssueAttachmentCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ApiIssueAttachmentCreateOrUpdateResponse = ApiIssueAttachmentCreateOrUpdateHeaders &
  IssueAttachmentContract;

/** Optional parameters. */
export interface ApiIssueAttachmentDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ApiIssueAttachmentListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByServiceNext operation. */
export type ApiIssueAttachmentListByServiceNextResponse = IssueAttachmentCollection;

/** Optional parameters. */
export interface ApiTagDescriptionListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByService operation. */
export type ApiTagDescriptionListByServiceResponse = TagDescriptionCollection;

/** Optional parameters. */
export interface ApiTagDescriptionGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type ApiTagDescriptionGetEntityTagResponse = ApiTagDescriptionGetEntityTagHeaders;

/** Optional parameters. */
export interface ApiTagDescriptionGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ApiTagDescriptionGetResponse = ApiTagDescriptionGetHeaders &
  TagDescriptionContract;

/** Optional parameters. */
export interface ApiTagDescriptionCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ApiTagDescriptionCreateOrUpdateResponse = ApiTagDescriptionCreateOrUpdateHeaders &
  TagDescriptionContract;

/** Optional parameters. */
export interface ApiTagDescriptionDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ApiTagDescriptionListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByServiceNext operation. */
export type ApiTagDescriptionListByServiceNextResponse = TagDescriptionCollection;

/** Optional parameters. */
export interface OperationListByTagsOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| apiName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| method | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| urlTemplate | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** Include not tagged Operations. */
  includeNotTaggedOperations?: boolean;
}

/** Contains response data for the listByTags operation. */
export type OperationListByTagsResponse = TagResourceCollection;

/** Optional parameters. */
export interface OperationListByTagsNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| apiName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| method | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| urlTemplate | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** Include not tagged Operations. */
  includeNotTaggedOperations?: boolean;
}

/** Contains response data for the listByTagsNext operation. */
export type OperationListByTagsNextResponse = TagResourceCollection;

/** Optional parameters. */
export interface ApiExportGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ApiExportGetResponse = ApiExportResult;

/** Optional parameters. */
export interface ApiVersionSetListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByService operation. */
export type ApiVersionSetListByServiceResponse = ApiVersionSetCollection;

/** Optional parameters. */
export interface ApiVersionSetGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type ApiVersionSetGetEntityTagResponse = ApiVersionSetGetEntityTagHeaders;

/** Optional parameters. */
export interface ApiVersionSetGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ApiVersionSetGetResponse = ApiVersionSetGetHeaders &
  ApiVersionSetContract;

/** Optional parameters. */
export interface ApiVersionSetCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ApiVersionSetCreateOrUpdateResponse = ApiVersionSetCreateOrUpdateHeaders &
  ApiVersionSetContract;

/** Optional parameters. */
export interface ApiVersionSetUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type ApiVersionSetUpdateResponse = ApiVersionSetUpdateHeaders &
  ApiVersionSetContract;

/** Optional parameters. */
export interface ApiVersionSetDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ApiVersionSetListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByServiceNext operation. */
export type ApiVersionSetListByServiceNextResponse = ApiVersionSetCollection;

/** Optional parameters. */
export interface AuthorizationServerListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByService operation. */
export type AuthorizationServerListByServiceResponse = AuthorizationServerCollection;

/** Optional parameters. */
export interface AuthorizationServerGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type AuthorizationServerGetEntityTagResponse = AuthorizationServerGetEntityTagHeaders;

/** Optional parameters. */
export interface AuthorizationServerGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AuthorizationServerGetResponse = AuthorizationServerGetHeaders &
  AuthorizationServerContract;

/** Optional parameters. */
export interface AuthorizationServerCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type AuthorizationServerCreateOrUpdateResponse = AuthorizationServerCreateOrUpdateHeaders &
  AuthorizationServerContract;

/** Optional parameters. */
export interface AuthorizationServerUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type AuthorizationServerUpdateResponse = AuthorizationServerUpdateHeaders &
  AuthorizationServerContract;

/** Optional parameters. */
export interface AuthorizationServerDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface AuthorizationServerListSecretsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listSecrets operation. */
export type AuthorizationServerListSecretsResponse = AuthorizationServerListSecretsHeaders &
  AuthorizationServerSecretsContract;

/** Optional parameters. */
export interface AuthorizationServerListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByServiceNext operation. */
export type AuthorizationServerListByServiceNextResponse = AuthorizationServerCollection;

/** Optional parameters. */
export interface BackendListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| title | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| url | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByService operation. */
export type BackendListByServiceResponse = BackendCollection;

/** Optional parameters. */
export interface BackendGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type BackendGetEntityTagResponse = BackendGetEntityTagHeaders;

/** Optional parameters. */
export interface BackendGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type BackendGetResponse = BackendGetHeaders & BackendContract;

/** Optional parameters. */
export interface BackendCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type BackendCreateOrUpdateResponse = BackendCreateOrUpdateHeaders &
  BackendContract;

/** Optional parameters. */
export interface BackendUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type BackendUpdateResponse = BackendUpdateHeaders & BackendContract;

/** Optional parameters. */
export interface BackendDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface BackendReconnectOptionalParams
  extends coreClient.OperationOptions {
  /** Reconnect request parameters. */
  parameters?: BackendReconnectContract;
}

/** Optional parameters. */
export interface BackendListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| title | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| url | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByServiceNext operation. */
export type BackendListByServiceNextResponse = BackendCollection;

/** Optional parameters. */
export interface CacheListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByService operation. */
export type CacheListByServiceResponse = CacheCollection;

/** Optional parameters. */
export interface CacheGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type CacheGetEntityTagResponse = CacheGetEntityTagHeaders;

/** Optional parameters. */
export interface CacheGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type CacheGetResponse = CacheGetHeaders & CacheContract;

/** Optional parameters. */
export interface CacheCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type CacheCreateOrUpdateResponse = CacheCreateOrUpdateHeaders &
  CacheContract;

/** Optional parameters. */
export interface CacheUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type CacheUpdateResponse = CacheUpdateHeaders & CacheContract;

/** Optional parameters. */
export interface CacheDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface CacheListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByServiceNext operation. */
export type CacheListByServiceNextResponse = CacheCollection;

/** Optional parameters. */
export interface CertificateListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| subject | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| thumbprint | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| expirationDate | filter | ge, le, eq, ne, gt, lt |     |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** When set to true, the response contains only certificates entities which failed refresh. */
  isKeyVaultRefreshFailed?: boolean;
}

/** Contains response data for the listByService operation. */
export type CertificateListByServiceResponse = CertificateCollection;

/** Optional parameters. */
export interface CertificateGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type CertificateGetEntityTagResponse = CertificateGetEntityTagHeaders;

/** Optional parameters. */
export interface CertificateGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type CertificateGetResponse = CertificateGetHeaders &
  CertificateContract;

/** Optional parameters. */
export interface CertificateCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type CertificateCreateOrUpdateResponse = CertificateCreateOrUpdateHeaders &
  CertificateContract;

/** Optional parameters. */
export interface CertificateDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface CertificateRefreshSecretOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the refreshSecret operation. */
export type CertificateRefreshSecretResponse = CertificateRefreshSecretHeaders &
  CertificateContract;

/** Optional parameters. */
export interface CertificateListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| subject | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| thumbprint | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| expirationDate | filter | ge, le, eq, ne, gt, lt |     |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** When set to true, the response contains only certificates entities which failed refresh. */
  isKeyVaultRefreshFailed?: boolean;
}

/** Contains response data for the listByServiceNext operation. */
export type CertificateListByServiceNextResponse = CertificateCollection;

/** Optional parameters. */
export interface PerformConnectivityCheckAsyncOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the performConnectivityCheckAsync operation. */
export type PerformConnectivityCheckAsyncResponse = ConnectivityCheckResponse;

/** Optional parameters. */
export interface ContentTypeListByServiceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByService operation. */
export type ContentTypeListByServiceResponse = ContentTypeCollection;

/** Optional parameters. */
export interface ContentTypeGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ContentTypeGetResponse = ContentTypeGetHeaders &
  ContentTypeContract;

/** Optional parameters. */
export interface ContentTypeCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ContentTypeCreateOrUpdateResponse = ContentTypeCreateOrUpdateHeaders &
  ContentTypeContract;

/** Optional parameters. */
export interface ContentTypeDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ContentTypeListByServiceNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByServiceNext operation. */
export type ContentTypeListByServiceNextResponse = ContentTypeCollection;

/** Optional parameters. */
export interface ContentItemListByServiceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByService operation. */
export type ContentItemListByServiceResponse = ContentItemCollection;

/** Optional parameters. */
export interface ContentItemGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type ContentItemGetEntityTagResponse = ContentItemGetEntityTagHeaders;

/** Optional parameters. */
export interface ContentItemGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ContentItemGetResponse = ContentItemGetHeaders &
  ContentItemContract;

/** Optional parameters. */
export interface ContentItemCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ContentItemCreateOrUpdateResponse = ContentItemCreateOrUpdateHeaders &
  ContentItemContract;

/** Optional parameters. */
export interface ContentItemDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ContentItemListByServiceNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByServiceNext operation. */
export type ContentItemListByServiceNextResponse = ContentItemCollection;

/** Optional parameters. */
export interface DeletedServicesListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type DeletedServicesListBySubscriptionResponse = DeletedServicesCollection;

/** Optional parameters. */
export interface DeletedServicesGetByNameOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByName operation. */
export type DeletedServicesGetByNameResponse = DeletedServiceContract;

/** Optional parameters. */
export interface DeletedServicesPurgeOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface DeletedServicesListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type DeletedServicesListBySubscriptionNextResponse = DeletedServicesCollection;

/** Optional parameters. */
export interface ApiManagementOperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ApiManagementOperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface ApiManagementOperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ApiManagementOperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface ApiManagementServiceSkusListAvailableServiceSkusOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listAvailableServiceSkus operation. */
export type ApiManagementServiceSkusListAvailableServiceSkusResponse = ResourceSkuResults;

/** Optional parameters. */
export interface ApiManagementServiceSkusListAvailableServiceSkusNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listAvailableServiceSkusNext operation. */
export type ApiManagementServiceSkusListAvailableServiceSkusNextResponse = ResourceSkuResults;

/** Optional parameters. */
export interface ApiManagementServiceRestoreOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the restore operation. */
export type ApiManagementServiceRestoreResponse = ApiManagementServiceResource;

/** Optional parameters. */
export interface ApiManagementServiceBackupOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the backup operation. */
export type ApiManagementServiceBackupResponse = ApiManagementServiceResource;

/** Optional parameters. */
export interface ApiManagementServiceCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ApiManagementServiceCreateOrUpdateResponse = ApiManagementServiceResource;

/** Optional parameters. */
export interface ApiManagementServiceUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type ApiManagementServiceUpdateResponse = ApiManagementServiceResource;

/** Optional parameters. */
export interface ApiManagementServiceGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ApiManagementServiceGetResponse = ApiManagementServiceResource;

/** Optional parameters. */
export interface ApiManagementServiceDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ApiManagementServiceListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type ApiManagementServiceListByResourceGroupResponse = ApiManagementServiceListResult;

/** Optional parameters. */
export interface ApiManagementServiceListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ApiManagementServiceListResponse = ApiManagementServiceListResult;

/** Optional parameters. */
export interface ApiManagementServiceGetSsoTokenOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getSsoToken operation. */
export type ApiManagementServiceGetSsoTokenResponse = ApiManagementServiceGetSsoTokenResult;

/** Optional parameters. */
export interface ApiManagementServiceCheckNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkNameAvailability operation. */
export type ApiManagementServiceCheckNameAvailabilityResponse = ApiManagementServiceNameAvailabilityResult;

/** Optional parameters. */
export interface ApiManagementServiceGetDomainOwnershipIdentifierOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getDomainOwnershipIdentifier operation. */
export type ApiManagementServiceGetDomainOwnershipIdentifierResponse = ApiManagementServiceGetDomainOwnershipIdentifierResult;

/** Optional parameters. */
export interface ApiManagementServiceApplyNetworkConfigurationUpdatesOptionalParams
  extends coreClient.OperationOptions {
  /** Parameters supplied to the Apply Network Configuration operation. If the parameters are empty, all the regions in which the Api Management service is deployed will be updated sequentially without incurring downtime in the region. */
  parameters?: ApiManagementServiceApplyNetworkConfigurationParameters;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the applyNetworkConfigurationUpdates operation. */
export type ApiManagementServiceApplyNetworkConfigurationUpdatesResponse = ApiManagementServiceResource;

/** Optional parameters. */
export interface ApiManagementServiceListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type ApiManagementServiceListByResourceGroupNextResponse = ApiManagementServiceListResult;

/** Optional parameters. */
export interface ApiManagementServiceListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ApiManagementServiceListNextResponse = ApiManagementServiceListResult;

/** Optional parameters. */
export interface DiagnosticListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByService operation. */
export type DiagnosticListByServiceResponse = DiagnosticCollection;

/** Optional parameters. */
export interface DiagnosticGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type DiagnosticGetEntityTagResponse = DiagnosticGetEntityTagHeaders;

/** Optional parameters. */
export interface DiagnosticGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DiagnosticGetResponse = DiagnosticGetHeaders & DiagnosticContract;

/** Optional parameters. */
export interface DiagnosticCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type DiagnosticCreateOrUpdateResponse = DiagnosticCreateOrUpdateHeaders &
  DiagnosticContract;

/** Optional parameters. */
export interface DiagnosticUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type DiagnosticUpdateResponse = DiagnosticUpdateHeaders &
  DiagnosticContract;

/** Optional parameters. */
export interface DiagnosticDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface DiagnosticListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByServiceNext operation. */
export type DiagnosticListByServiceNextResponse = DiagnosticCollection;

/** Optional parameters. */
export interface EmailTemplateListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByService operation. */
export type EmailTemplateListByServiceResponse = EmailTemplateCollection;

/** Optional parameters. */
export interface EmailTemplateGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type EmailTemplateGetEntityTagResponse = EmailTemplateGetEntityTagHeaders;

/** Optional parameters. */
export interface EmailTemplateGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type EmailTemplateGetResponse = EmailTemplateGetHeaders &
  EmailTemplateContract;

/** Optional parameters. */
export interface EmailTemplateCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type EmailTemplateCreateOrUpdateResponse = EmailTemplateContract;

/** Optional parameters. */
export interface EmailTemplateUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type EmailTemplateUpdateResponse = EmailTemplateUpdateHeaders &
  EmailTemplateContract;

/** Optional parameters. */
export interface EmailTemplateDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface EmailTemplateListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByServiceNext operation. */
export type EmailTemplateListByServiceNextResponse = EmailTemplateCollection;

/** Optional parameters. */
export interface GatewayListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| region | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByService operation. */
export type GatewayListByServiceResponse = GatewayCollection;

/** Optional parameters. */
export interface GatewayGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type GatewayGetEntityTagResponse = GatewayGetEntityTagHeaders;

/** Optional parameters. */
export interface GatewayGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type GatewayGetResponse = GatewayGetHeaders & GatewayContract;

/** Optional parameters. */
export interface GatewayCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type GatewayCreateOrUpdateResponse = GatewayCreateOrUpdateHeaders &
  GatewayContract;

/** Optional parameters. */
export interface GatewayUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type GatewayUpdateResponse = GatewayUpdateHeaders & GatewayContract;

/** Optional parameters. */
export interface GatewayDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface GatewayListKeysOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listKeys operation. */
export type GatewayListKeysResponse = GatewayListKeysHeaders &
  GatewayKeysContract;

/** Optional parameters. */
export interface GatewayRegenerateKeyOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface GatewayGenerateTokenOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the generateToken operation. */
export type GatewayGenerateTokenResponse = GatewayTokenContract;

/** Optional parameters. */
export interface GatewayListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| region | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByServiceNext operation. */
export type GatewayListByServiceNextResponse = GatewayCollection;

/** Optional parameters. */
export interface GatewayHostnameConfigurationListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| hostname | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByService operation. */
export type GatewayHostnameConfigurationListByServiceResponse = GatewayHostnameConfigurationCollection;

/** Optional parameters. */
export interface GatewayHostnameConfigurationGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type GatewayHostnameConfigurationGetEntityTagResponse = GatewayHostnameConfigurationGetEntityTagHeaders;

/** Optional parameters. */
export interface GatewayHostnameConfigurationGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type GatewayHostnameConfigurationGetResponse = GatewayHostnameConfigurationGetHeaders &
  GatewayHostnameConfigurationContract;

/** Optional parameters. */
export interface GatewayHostnameConfigurationCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type GatewayHostnameConfigurationCreateOrUpdateResponse = GatewayHostnameConfigurationCreateOrUpdateHeaders &
  GatewayHostnameConfigurationContract;

/** Optional parameters. */
export interface GatewayHostnameConfigurationDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface GatewayHostnameConfigurationListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| hostname | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByServiceNext operation. */
export type GatewayHostnameConfigurationListByServiceNextResponse = GatewayHostnameConfigurationCollection;

/** Optional parameters. */
export interface GatewayApiListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByService operation. */
export type GatewayApiListByServiceResponse = ApiCollection;

/** Optional parameters. */
export interface GatewayApiGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type GatewayApiGetEntityTagResponse = GatewayApiGetEntityTagHeaders;

/** Optional parameters. */
export interface GatewayApiCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Association entity details. */
  parameters?: AssociationContract;
}

/** Contains response data for the createOrUpdate operation. */
export type GatewayApiCreateOrUpdateResponse = ApiContract;

/** Optional parameters. */
export interface GatewayApiDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface GatewayApiListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByServiceNext operation. */
export type GatewayApiListByServiceNextResponse = ApiCollection;

/** Optional parameters. */
export interface GatewayCertificateAuthorityListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | eq, ne |  |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByService operation. */
export type GatewayCertificateAuthorityListByServiceResponse = GatewayCertificateAuthorityCollection;

/** Optional parameters. */
export interface GatewayCertificateAuthorityGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type GatewayCertificateAuthorityGetEntityTagResponse = GatewayCertificateAuthorityGetEntityTagHeaders;

/** Optional parameters. */
export interface GatewayCertificateAuthorityGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type GatewayCertificateAuthorityGetResponse = GatewayCertificateAuthorityGetHeaders &
  GatewayCertificateAuthorityContract;

/** Optional parameters. */
export interface GatewayCertificateAuthorityCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type GatewayCertificateAuthorityCreateOrUpdateResponse = GatewayCertificateAuthorityCreateOrUpdateHeaders &
  GatewayCertificateAuthorityContract;

/** Optional parameters. */
export interface GatewayCertificateAuthorityDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface GatewayCertificateAuthorityListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | eq, ne |  |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByServiceNext operation. */
export type GatewayCertificateAuthorityListByServiceNextResponse = GatewayCertificateAuthorityCollection;

/** Optional parameters. */
export interface GroupListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| externalId | filter | eq |     |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByService operation. */
export type GroupListByServiceResponse = GroupCollection;

/** Optional parameters. */
export interface GroupGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type GroupGetEntityTagResponse = GroupGetEntityTagHeaders;

/** Optional parameters. */
export interface GroupGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type GroupGetResponse = GroupGetHeaders & GroupContract;

/** Optional parameters. */
export interface GroupCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type GroupCreateOrUpdateResponse = GroupCreateOrUpdateHeaders &
  GroupContract;

/** Optional parameters. */
export interface GroupUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type GroupUpdateResponse = GroupUpdateHeaders & GroupContract;

/** Optional parameters. */
export interface GroupDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface GroupListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| externalId | filter | eq |     |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByServiceNext operation. */
export type GroupListByServiceNextResponse = GroupCollection;

/** Optional parameters. */
export interface GroupUserListOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| firstName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| lastName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| email | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| registrationDate | filter | ge, le, eq, ne, gt, lt |     |</br>| note | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the list operation. */
export type GroupUserListResponse = UserCollection;

/** Optional parameters. */
export interface GroupUserCheckEntityExistsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkEntityExists operation. */
export type GroupUserCheckEntityExistsResponse = {
  body: boolean;
};

/** Optional parameters. */
export interface GroupUserCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type GroupUserCreateResponse = UserContract;

/** Optional parameters. */
export interface GroupUserDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface GroupUserListNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| firstName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| lastName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| email | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| registrationDate | filter | ge, le, eq, ne, gt, lt |     |</br>| note | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listNext operation. */
export type GroupUserListNextResponse = UserCollection;

/** Optional parameters. */
export interface IdentityProviderListByServiceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByService operation. */
export type IdentityProviderListByServiceResponse = IdentityProviderList;

/** Optional parameters. */
export interface IdentityProviderGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type IdentityProviderGetEntityTagResponse = IdentityProviderGetEntityTagHeaders;

/** Optional parameters. */
export interface IdentityProviderGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type IdentityProviderGetResponse = IdentityProviderGetHeaders &
  IdentityProviderContract;

/** Optional parameters. */
export interface IdentityProviderCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type IdentityProviderCreateOrUpdateResponse = IdentityProviderCreateOrUpdateHeaders &
  IdentityProviderContract;

/** Optional parameters. */
export interface IdentityProviderUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type IdentityProviderUpdateResponse = IdentityProviderUpdateHeaders &
  IdentityProviderContract;

/** Optional parameters. */
export interface IdentityProviderDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface IdentityProviderListSecretsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listSecrets operation. */
export type IdentityProviderListSecretsResponse = IdentityProviderListSecretsHeaders &
  ClientSecretContract;

/** Optional parameters. */
export interface IdentityProviderListByServiceNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByServiceNext operation. */
export type IdentityProviderListByServiceNextResponse = IdentityProviderList;

/** Optional parameters. */
export interface IssueListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| apiId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| title | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| authorName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByService operation. */
export type IssueListByServiceResponse = IssueCollection;

/** Optional parameters. */
export interface IssueGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type IssueGetResponse = IssueGetHeaders & IssueContract;

/** Optional parameters. */
export interface IssueListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| apiId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| title | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| authorName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByServiceNext operation. */
export type IssueListByServiceNextResponse = IssueCollection;

/** Optional parameters. */
export interface LoggerListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| loggerType | filter | eq |     |</br>| resourceId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByService operation. */
export type LoggerListByServiceResponse = LoggerCollection;

/** Optional parameters. */
export interface LoggerGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type LoggerGetEntityTagResponse = LoggerGetEntityTagHeaders;

/** Optional parameters. */
export interface LoggerGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type LoggerGetResponse = LoggerGetHeaders & LoggerContract;

/** Optional parameters. */
export interface LoggerCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type LoggerCreateOrUpdateResponse = LoggerCreateOrUpdateHeaders &
  LoggerContract;

/** Optional parameters. */
export interface LoggerUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type LoggerUpdateResponse = LoggerUpdateHeaders & LoggerContract;

/** Optional parameters. */
export interface LoggerDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface LoggerListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| loggerType | filter | eq |     |</br>| resourceId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByServiceNext operation. */
export type LoggerListByServiceNextResponse = LoggerCollection;

/** Optional parameters. */
export interface NamedValueListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| tags | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith, any, all |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** When set to true, the response contains only named value entities which failed refresh. */
  isKeyVaultRefreshFailed?: boolean;
}

/** Contains response data for the listByService operation. */
export type NamedValueListByServiceResponse = NamedValueCollection;

/** Optional parameters. */
export interface NamedValueGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type NamedValueGetEntityTagResponse = NamedValueGetEntityTagHeaders;

/** Optional parameters. */
export interface NamedValueGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type NamedValueGetResponse = NamedValueGetHeaders & NamedValueContract;

/** Optional parameters. */
export interface NamedValueCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type NamedValueCreateOrUpdateResponse = NamedValueCreateOrUpdateHeaders &
  NamedValueContract;

/** Optional parameters. */
export interface NamedValueUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type NamedValueUpdateResponse = NamedValueUpdateHeaders &
  NamedValueContract;

/** Optional parameters. */
export interface NamedValueDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface NamedValueListValueOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listValue operation. */
export type NamedValueListValueResponse = NamedValueListValueHeaders &
  NamedValueSecretContract;

/** Optional parameters. */
export interface NamedValueRefreshSecretOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the refreshSecret operation. */
export type NamedValueRefreshSecretResponse = NamedValueRefreshSecretHeaders &
  NamedValueContract;

/** Optional parameters. */
export interface NamedValueListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| tags | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith, any, all |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** When set to true, the response contains only named value entities which failed refresh. */
  isKeyVaultRefreshFailed?: boolean;
}

/** Contains response data for the listByServiceNext operation. */
export type NamedValueListByServiceNextResponse = NamedValueCollection;

/** Optional parameters. */
export interface NetworkStatusListByServiceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByService operation. */
export type NetworkStatusListByServiceResponse = NetworkStatusContractByLocation[];

/** Optional parameters. */
export interface NetworkStatusListByLocationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocation operation. */
export type NetworkStatusListByLocationResponse = NetworkStatusContract;

/** Optional parameters. */
export interface NotificationListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByService operation. */
export type NotificationListByServiceResponse = NotificationCollection;

/** Optional parameters. */
export interface NotificationGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type NotificationGetResponse = NotificationContract;

/** Optional parameters. */
export interface NotificationCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type NotificationCreateOrUpdateResponse = NotificationContract;

/** Optional parameters. */
export interface NotificationListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByServiceNext operation. */
export type NotificationListByServiceNextResponse = NotificationCollection;

/** Optional parameters. */
export interface NotificationRecipientUserListByNotificationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByNotification operation. */
export type NotificationRecipientUserListByNotificationResponse = RecipientUserCollection;

/** Optional parameters. */
export interface NotificationRecipientUserCheckEntityExistsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkEntityExists operation. */
export type NotificationRecipientUserCheckEntityExistsResponse = {
  body: boolean;
};

/** Optional parameters. */
export interface NotificationRecipientUserCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type NotificationRecipientUserCreateOrUpdateResponse = RecipientUserContract;

/** Optional parameters. */
export interface NotificationRecipientUserDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface NotificationRecipientEmailListByNotificationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByNotification operation. */
export type NotificationRecipientEmailListByNotificationResponse = RecipientEmailCollection;

/** Optional parameters. */
export interface NotificationRecipientEmailCheckEntityExistsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkEntityExists operation. */
export type NotificationRecipientEmailCheckEntityExistsResponse = {
  body: boolean;
};

/** Optional parameters. */
export interface NotificationRecipientEmailCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type NotificationRecipientEmailCreateOrUpdateResponse = RecipientEmailContract;

/** Optional parameters. */
export interface NotificationRecipientEmailDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface OpenIdConnectProviderListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByService operation. */
export type OpenIdConnectProviderListByServiceResponse = OpenIdConnectProviderCollection;

/** Optional parameters. */
export interface OpenIdConnectProviderGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type OpenIdConnectProviderGetEntityTagResponse = OpenIdConnectProviderGetEntityTagHeaders;

/** Optional parameters. */
export interface OpenIdConnectProviderGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type OpenIdConnectProviderGetResponse = OpenIdConnectProviderGetHeaders &
  OpenidConnectProviderContract;

/** Optional parameters. */
export interface OpenIdConnectProviderCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type OpenIdConnectProviderCreateOrUpdateResponse = OpenIdConnectProviderCreateOrUpdateHeaders &
  OpenidConnectProviderContract;

/** Optional parameters. */
export interface OpenIdConnectProviderUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type OpenIdConnectProviderUpdateResponse = OpenIdConnectProviderUpdateHeaders &
  OpenidConnectProviderContract;

/** Optional parameters. */
export interface OpenIdConnectProviderDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface OpenIdConnectProviderListSecretsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listSecrets operation. */
export type OpenIdConnectProviderListSecretsResponse = OpenIdConnectProviderListSecretsHeaders &
  ClientSecretContract;

/** Optional parameters. */
export interface OpenIdConnectProviderListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByServiceNext operation. */
export type OpenIdConnectProviderListByServiceNextResponse = OpenIdConnectProviderCollection;

/** Optional parameters. */
export interface OutboundNetworkDependenciesEndpointsListByServiceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByService operation. */
export type OutboundNetworkDependenciesEndpointsListByServiceResponse = OutboundEnvironmentEndpointList;

/** Optional parameters. */
export interface PolicyListByServiceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByService operation. */
export type PolicyListByServiceResponse = PolicyCollection;

/** Optional parameters. */
export interface PolicyGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type PolicyGetEntityTagResponse = PolicyGetEntityTagHeaders;

/** Optional parameters. */
export interface PolicyGetOptionalParams extends coreClient.OperationOptions {
  /** Policy Export Format. */
  format?: PolicyExportFormat;
}

/** Contains response data for the get operation. */
export type PolicyGetResponse = PolicyGetHeaders & PolicyContract;

/** Optional parameters. */
export interface PolicyCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type PolicyCreateOrUpdateResponse = PolicyCreateOrUpdateHeaders &
  PolicyContract;

/** Optional parameters. */
export interface PolicyDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface PolicyDescriptionListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** Policy scope. */
  scope?: PolicyScopeContract;
}

/** Contains response data for the listByService operation. */
export type PolicyDescriptionListByServiceResponse = PolicyDescriptionCollection;

/** Optional parameters. */
export interface PortalRevisionListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /**
   * | Field       | Supported operators    | Supported functions               |
   * |-------------|------------------------|-----------------------------------|
   *
   * |name | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith|
   * |description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith|
   * |isCurrent | eq, ne |    |
   *
   */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByService operation. */
export type PortalRevisionListByServiceResponse = PortalRevisionCollection;

/** Optional parameters. */
export interface PortalRevisionGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type PortalRevisionGetEntityTagResponse = PortalRevisionGetEntityTagHeaders;

/** Optional parameters. */
export interface PortalRevisionGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PortalRevisionGetResponse = PortalRevisionGetHeaders &
  PortalRevisionContract;

/** Optional parameters. */
export interface PortalRevisionCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type PortalRevisionCreateOrUpdateResponse = PortalRevisionCreateOrUpdateHeaders &
  PortalRevisionContract;

/** Optional parameters. */
export interface PortalRevisionUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type PortalRevisionUpdateResponse = PortalRevisionUpdateHeaders &
  PortalRevisionContract;

/** Optional parameters. */
export interface PortalRevisionListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /**
   * | Field       | Supported operators    | Supported functions               |
   * |-------------|------------------------|-----------------------------------|
   *
   * |name | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith|
   * |description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith|
   * |isCurrent | eq, ne |    |
   *
   */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByServiceNext operation. */
export type PortalRevisionListByServiceNextResponse = PortalRevisionCollection;

/** Optional parameters. */
export interface PortalSettingsListByServiceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByService operation. */
export type PortalSettingsListByServiceResponse = PortalSettingsCollection;

/** Optional parameters. */
export interface SignInSettingsGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type SignInSettingsGetEntityTagResponse = SignInSettingsGetEntityTagHeaders;

/** Optional parameters. */
export interface SignInSettingsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SignInSettingsGetResponse = SignInSettingsGetHeaders &
  PortalSigninSettings;

/** Optional parameters. */
export interface SignInSettingsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface SignInSettingsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type SignInSettingsCreateOrUpdateResponse = PortalSigninSettings;

/** Optional parameters. */
export interface SignUpSettingsGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type SignUpSettingsGetEntityTagResponse = SignUpSettingsGetEntityTagHeaders;

/** Optional parameters. */
export interface SignUpSettingsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SignUpSettingsGetResponse = SignUpSettingsGetHeaders &
  PortalSignupSettings;

/** Optional parameters. */
export interface SignUpSettingsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface SignUpSettingsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type SignUpSettingsCreateOrUpdateResponse = PortalSignupSettings;

/** Optional parameters. */
export interface DelegationSettingsGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type DelegationSettingsGetEntityTagResponse = DelegationSettingsGetEntityTagHeaders;

/** Optional parameters. */
export interface DelegationSettingsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DelegationSettingsGetResponse = DelegationSettingsGetHeaders &
  PortalDelegationSettings;

/** Optional parameters. */
export interface DelegationSettingsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface DelegationSettingsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type DelegationSettingsCreateOrUpdateResponse = PortalDelegationSettings;

/** Optional parameters. */
export interface DelegationSettingsListSecretsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listSecrets operation. */
export type DelegationSettingsListSecretsResponse = PortalSettingValidationKeyContract;

/** Optional parameters. */
export interface PrivateEndpointConnectionListByServiceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByService operation. */
export type PrivateEndpointConnectionListByServiceResponse = PrivateEndpointConnectionListResult;

/** Optional parameters. */
export interface PrivateEndpointConnectionGetByNameOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByName operation. */
export type PrivateEndpointConnectionGetByNameResponse = PrivateEndpointConnection;

/** Optional parameters. */
export interface PrivateEndpointConnectionCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type PrivateEndpointConnectionCreateOrUpdateResponse = PrivateEndpointConnection;

/** Optional parameters. */
export interface PrivateEndpointConnectionDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface PrivateEndpointConnectionListPrivateLinkResourcesOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listPrivateLinkResources operation. */
export type PrivateEndpointConnectionListPrivateLinkResourcesResponse = PrivateLinkResourceListResult;

/** Optional parameters. */
export interface PrivateEndpointConnectionGetPrivateLinkResourceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getPrivateLinkResource operation. */
export type PrivateEndpointConnectionGetPrivateLinkResourceResponse = PrivateLinkResource;

/** Optional parameters. */
export interface ProductListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| terms | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| groups | expand |     |     |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** Products which are part of a specific tag. */
  tags?: string;
  /** When set to true, the response contains an array of groups that have visibility to the product. The default is false. */
  expandGroups?: boolean;
}

/** Contains response data for the listByService operation. */
export type ProductListByServiceResponse = ProductCollection;

/** Optional parameters. */
export interface ProductGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type ProductGetEntityTagResponse = ProductGetEntityTagHeaders;

/** Optional parameters. */
export interface ProductGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ProductGetResponse = ProductGetHeaders & ProductContract;

/** Optional parameters. */
export interface ProductCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ProductCreateOrUpdateResponse = ProductCreateOrUpdateHeaders &
  ProductContract;

/** Optional parameters. */
export interface ProductUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type ProductUpdateResponse = ProductUpdateHeaders & ProductContract;

/** Optional parameters. */
export interface ProductDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delete existing subscriptions associated with the product or not. */
  deleteSubscriptions?: boolean;
}

/** Optional parameters. */
export interface ProductListByTagsOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| terms | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** Include not tagged Products. */
  includeNotTaggedProducts?: boolean;
}

/** Contains response data for the listByTags operation. */
export type ProductListByTagsResponse = TagResourceCollection;

/** Optional parameters. */
export interface ProductListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| terms | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| groups | expand |     |     |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** Products which are part of a specific tag. */
  tags?: string;
  /** When set to true, the response contains an array of groups that have visibility to the product. The default is false. */
  expandGroups?: boolean;
}

/** Contains response data for the listByServiceNext operation. */
export type ProductListByServiceNextResponse = ProductCollection;

/** Optional parameters. */
export interface ProductListByTagsNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| terms | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** Include not tagged Products. */
  includeNotTaggedProducts?: boolean;
}

/** Contains response data for the listByTagsNext operation. */
export type ProductListByTagsNextResponse = TagResourceCollection;

/** Optional parameters. */
export interface ProductApiListByProductOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByProduct operation. */
export type ProductApiListByProductResponse = ApiCollection;

/** Optional parameters. */
export interface ProductApiCheckEntityExistsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkEntityExists operation. */
export type ProductApiCheckEntityExistsResponse = {
  body: boolean;
};

/** Optional parameters. */
export interface ProductApiCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type ProductApiCreateOrUpdateResponse = ApiContract;

/** Optional parameters. */
export interface ProductApiDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ProductApiListByProductNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByProductNext operation. */
export type ProductApiListByProductNextResponse = ApiCollection;

/** Optional parameters. */
export interface ProductGroupListByProductOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt |     |</br>| displayName | filter | eq, ne |     |</br>| description | filter | eq, ne |     |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByProduct operation. */
export type ProductGroupListByProductResponse = GroupCollection;

/** Optional parameters. */
export interface ProductGroupCheckEntityExistsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkEntityExists operation. */
export type ProductGroupCheckEntityExistsResponse = {
  body: boolean;
};

/** Optional parameters. */
export interface ProductGroupCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type ProductGroupCreateOrUpdateResponse = GroupContract;

/** Optional parameters. */
export interface ProductGroupDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ProductGroupListByProductNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt |     |</br>| displayName | filter | eq, ne |     |</br>| description | filter | eq, ne |     |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByProductNext operation. */
export type ProductGroupListByProductNextResponse = GroupCollection;

/** Optional parameters. */
export interface ProductSubscriptionsListOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| stateComment | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| ownerId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| scope | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| user | expand |     |     |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the list operation. */
export type ProductSubscriptionsListResponse = SubscriptionCollection;

/** Optional parameters. */
export interface ProductSubscriptionsListNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| stateComment | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| ownerId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| scope | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| user | expand |     |     |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listNext operation. */
export type ProductSubscriptionsListNextResponse = SubscriptionCollection;

/** Optional parameters. */
export interface ProductPolicyListByProductOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByProduct operation. */
export type ProductPolicyListByProductResponse = PolicyCollection;

/** Optional parameters. */
export interface ProductPolicyGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type ProductPolicyGetEntityTagResponse = ProductPolicyGetEntityTagHeaders;

/** Optional parameters. */
export interface ProductPolicyGetOptionalParams
  extends coreClient.OperationOptions {
  /** Policy Export Format. */
  format?: PolicyExportFormat;
}

/** Contains response data for the get operation. */
export type ProductPolicyGetResponse = ProductPolicyGetHeaders & PolicyContract;

/** Optional parameters. */
export interface ProductPolicyCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ProductPolicyCreateOrUpdateResponse = ProductPolicyCreateOrUpdateHeaders &
  PolicyContract;

/** Optional parameters. */
export interface ProductPolicyDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface QuotaByCounterKeysListByServiceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByService operation. */
export type QuotaByCounterKeysListByServiceResponse = QuotaCounterCollection;

/** Optional parameters. */
export interface QuotaByCounterKeysUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type QuotaByCounterKeysUpdateResponse = QuotaCounterCollection;

/** Optional parameters. */
export interface QuotaByPeriodKeysGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type QuotaByPeriodKeysGetResponse = QuotaCounterContract;

/** Optional parameters. */
export interface QuotaByPeriodKeysUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type QuotaByPeriodKeysUpdateResponse = QuotaCounterContract;

/** Optional parameters. */
export interface RegionListByServiceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByService operation. */
export type RegionListByServiceResponse = RegionListResult;

/** Optional parameters. */
export interface RegionListByServiceNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByServiceNext operation. */
export type RegionListByServiceNextResponse = RegionListResult;

/** Optional parameters. */
export interface ReportsListByApiOptionalParams
  extends coreClient.OperationOptions {
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** OData order by query option. */
  orderby?: string;
}

/** Contains response data for the listByApi operation. */
export type ReportsListByApiResponse = ReportCollection;

/** Optional parameters. */
export interface ReportsListByUserOptionalParams
  extends coreClient.OperationOptions {
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** OData order by query option. */
  orderby?: string;
}

/** Contains response data for the listByUser operation. */
export type ReportsListByUserResponse = ReportCollection;

/** Optional parameters. */
export interface ReportsListByOperationOptionalParams
  extends coreClient.OperationOptions {
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** OData order by query option. */
  orderby?: string;
}

/** Contains response data for the listByOperation operation. */
export type ReportsListByOperationResponse = ReportCollection;

/** Optional parameters. */
export interface ReportsListByProductOptionalParams
  extends coreClient.OperationOptions {
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** OData order by query option. */
  orderby?: string;
}

/** Contains response data for the listByProduct operation. */
export type ReportsListByProductResponse = ReportCollection;

/** Optional parameters. */
export interface ReportsListByGeoOptionalParams
  extends coreClient.OperationOptions {
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByGeo operation. */
export type ReportsListByGeoResponse = ReportCollection;

/** Optional parameters. */
export interface ReportsListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** OData order by query option. */
  orderby?: string;
}

/** Contains response data for the listBySubscription operation. */
export type ReportsListBySubscriptionResponse = ReportCollection;

/** Optional parameters. */
export interface ReportsListByTimeOptionalParams
  extends coreClient.OperationOptions {
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** OData order by query option. */
  orderby?: string;
}

/** Contains response data for the listByTime operation. */
export type ReportsListByTimeResponse = ReportCollection;

/** Optional parameters. */
export interface ReportsListByRequestOptionalParams
  extends coreClient.OperationOptions {
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByRequest operation. */
export type ReportsListByRequestResponse = RequestReportCollection;

/** Optional parameters. */
export interface ReportsListByApiNextOptionalParams
  extends coreClient.OperationOptions {
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** OData order by query option. */
  orderby?: string;
}

/** Contains response data for the listByApiNext operation. */
export type ReportsListByApiNextResponse = ReportCollection;

/** Optional parameters. */
export interface ReportsListByUserNextOptionalParams
  extends coreClient.OperationOptions {
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** OData order by query option. */
  orderby?: string;
}

/** Contains response data for the listByUserNext operation. */
export type ReportsListByUserNextResponse = ReportCollection;

/** Optional parameters. */
export interface ReportsListByOperationNextOptionalParams
  extends coreClient.OperationOptions {
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** OData order by query option. */
  orderby?: string;
}

/** Contains response data for the listByOperationNext operation. */
export type ReportsListByOperationNextResponse = ReportCollection;

/** Optional parameters. */
export interface ReportsListByProductNextOptionalParams
  extends coreClient.OperationOptions {
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** OData order by query option. */
  orderby?: string;
}

/** Contains response data for the listByProductNext operation. */
export type ReportsListByProductNextResponse = ReportCollection;

/** Optional parameters. */
export interface ReportsListByGeoNextOptionalParams
  extends coreClient.OperationOptions {
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByGeoNext operation. */
export type ReportsListByGeoNextResponse = ReportCollection;

/** Optional parameters. */
export interface ReportsListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** OData order by query option. */
  orderby?: string;
}

/** Contains response data for the listBySubscriptionNext operation. */
export type ReportsListBySubscriptionNextResponse = ReportCollection;

/** Optional parameters. */
export interface ReportsListByTimeNextOptionalParams
  extends coreClient.OperationOptions {
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** OData order by query option. */
  orderby?: string;
}

/** Contains response data for the listByTimeNext operation. */
export type ReportsListByTimeNextResponse = ReportCollection;

/** Optional parameters. */
export interface TenantSettingsListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** Not used */
  filter?: string;
}

/** Contains response data for the listByService operation. */
export type TenantSettingsListByServiceResponse = TenantSettingsCollection;

/** Optional parameters. */
export interface TenantSettingsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type TenantSettingsGetResponse = TenantSettingsGetHeaders &
  TenantSettingsContract;

/** Optional parameters. */
export interface TenantSettingsListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** Not used */
  filter?: string;
}

/** Contains response data for the listByServiceNext operation. */
export type TenantSettingsListByServiceNextResponse = TenantSettingsCollection;

/** Optional parameters. */
export interface ApiManagementSkusListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ApiManagementSkusListResponse = ApiManagementSkusResult;

/** Optional parameters. */
export interface ApiManagementSkusListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ApiManagementSkusListNextResponse = ApiManagementSkusResult;

/** Optional parameters. */
export interface SubscriptionListOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| stateComment | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| ownerId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| scope | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| user | expand |     |     |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the list operation. */
export type SubscriptionListResponse = SubscriptionCollection;

/** Optional parameters. */
export interface SubscriptionGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type SubscriptionGetEntityTagResponse = SubscriptionGetEntityTagHeaders;

/** Optional parameters. */
export interface SubscriptionGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SubscriptionGetResponse = SubscriptionGetHeaders &
  SubscriptionContract;

/** Optional parameters. */
export interface SubscriptionCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
  /**
   * Notify change in Subscription State.
   *  - If false, do not send any email notification for change of state of subscription
   *  - If true, send email notification of change of state of subscription
   */
  notify?: boolean;
  /** Determines the type of application which send the create user request. Default is legacy publisher portal. */
  appType?: AppType;
}

/** Contains response data for the createOrUpdate operation. */
export type SubscriptionCreateOrUpdateResponse = SubscriptionCreateOrUpdateHeaders &
  SubscriptionContract;

/** Optional parameters. */
export interface SubscriptionUpdateOptionalParams
  extends coreClient.OperationOptions {
  /**
   * Notify change in Subscription State.
   *  - If false, do not send any email notification for change of state of subscription
   *  - If true, send email notification of change of state of subscription
   */
  notify?: boolean;
  /** Determines the type of application which send the create user request. Default is legacy publisher portal. */
  appType?: AppType;
}

/** Contains response data for the update operation. */
export type SubscriptionUpdateResponse = SubscriptionUpdateHeaders &
  SubscriptionContract;

/** Optional parameters. */
export interface SubscriptionDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface SubscriptionRegeneratePrimaryKeyOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface SubscriptionRegenerateSecondaryKeyOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface SubscriptionListSecretsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listSecrets operation. */
export type SubscriptionListSecretsResponse = SubscriptionListSecretsHeaders &
  SubscriptionKeysContract;

/** Optional parameters. */
export interface SubscriptionListNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| stateComment | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| ownerId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| scope | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| user | expand |     |     |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listNext operation. */
export type SubscriptionListNextResponse = SubscriptionCollection;

/** Optional parameters. */
export interface TagResourceListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| aid | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| apiName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| apiRevision | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| method | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| urlTemplate | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| terms | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| isCurrent | filter | eq |     |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByService operation. */
export type TagResourceListByServiceResponse = TagResourceCollection;

/** Optional parameters. */
export interface TagResourceListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| aid | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| apiName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| apiRevision | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| method | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| urlTemplate | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| terms | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| isCurrent | filter | eq |     |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listByServiceNext operation. */
export type TagResourceListByServiceNextResponse = TagResourceCollection;

/** Optional parameters. */
export interface TenantAccessListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** Not used */
  filter?: string;
}

/** Contains response data for the listByService operation. */
export type TenantAccessListByServiceResponse = AccessInformationCollection;

/** Optional parameters. */
export interface TenantAccessGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type TenantAccessGetEntityTagResponse = TenantAccessGetEntityTagHeaders;

/** Optional parameters. */
export interface TenantAccessGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type TenantAccessGetResponse = TenantAccessGetHeaders &
  AccessInformationContract;

/** Optional parameters. */
export interface TenantAccessCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type TenantAccessCreateResponse = TenantAccessCreateHeaders &
  AccessInformationContract;

/** Optional parameters. */
export interface TenantAccessUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type TenantAccessUpdateResponse = TenantAccessUpdateHeaders &
  AccessInformationContract;

/** Optional parameters. */
export interface TenantAccessRegeneratePrimaryKeyOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface TenantAccessRegenerateSecondaryKeyOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface TenantAccessListSecretsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listSecrets operation. */
export type TenantAccessListSecretsResponse = TenantAccessListSecretsHeaders &
  AccessInformationSecretsContract;

/** Optional parameters. */
export interface TenantAccessListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** Not used */
  filter?: string;
}

/** Contains response data for the listByServiceNext operation. */
export type TenantAccessListByServiceNextResponse = AccessInformationCollection;

/** Optional parameters. */
export interface TenantAccessGitRegeneratePrimaryKeyOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface TenantAccessGitRegenerateSecondaryKeyOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface TenantConfigurationDeployOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the deploy operation. */
export type TenantConfigurationDeployResponse = OperationResultContract;

/** Optional parameters. */
export interface TenantConfigurationSaveOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the save operation. */
export type TenantConfigurationSaveResponse = OperationResultContract;

/** Optional parameters. */
export interface TenantConfigurationValidateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the validate operation. */
export type TenantConfigurationValidateResponse = OperationResultContract;

/** Optional parameters. */
export interface TenantConfigurationGetSyncStateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getSyncState operation. */
export type TenantConfigurationGetSyncStateResponse = TenantConfigurationSyncStateContract;

/** Optional parameters. */
export interface UserListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| firstName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| lastName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| email | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| registrationDate | filter | ge, le, eq, ne, gt, lt |     |</br>| note | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| groups | expand |     |     |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** Detailed Group in response. */
  expandGroups?: boolean;
}

/** Contains response data for the listByService operation. */
export type UserListByServiceResponse = UserCollection;

/** Optional parameters. */
export interface UserGetEntityTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEntityTag operation. */
export type UserGetEntityTagResponse = UserGetEntityTagHeaders;

/** Optional parameters. */
export interface UserGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type UserGetResponse = UserGetHeaders & UserContract;

/** Optional parameters. */
export interface UserCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ETag of the Entity. Not required when creating an entity, but required when updating an entity. */
  ifMatch?: string;
  /** Send an Email notification to the User. */
  notify?: boolean;
}

/** Contains response data for the createOrUpdate operation. */
export type UserCreateOrUpdateResponse = UserCreateOrUpdateHeaders &
  UserContract;

/** Optional parameters. */
export interface UserUpdateOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type UserUpdateResponse = UserUpdateHeaders & UserContract;

/** Optional parameters. */
export interface UserDeleteOptionalParams extends coreClient.OperationOptions {
  /** Whether to delete user's subscription or not. */
  deleteSubscriptions?: boolean;
  /** Send an Account Closed Email notification to the User. */
  notify?: boolean;
  /** Determines the type of application which send the create user request. Default is legacy publisher portal. */
  appType?: AppType;
}

/** Optional parameters. */
export interface UserGenerateSsoUrlOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the generateSsoUrl operation. */
export type UserGenerateSsoUrlResponse = GenerateSsoUrlResult;

/** Optional parameters. */
export interface UserGetSharedAccessTokenOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getSharedAccessToken operation. */
export type UserGetSharedAccessTokenResponse = UserTokenResult;

/** Optional parameters. */
export interface UserListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| firstName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| lastName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| email | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| registrationDate | filter | ge, le, eq, ne, gt, lt |     |</br>| note | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| groups | expand |     |     |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
  /** Detailed Group in response. */
  expandGroups?: boolean;
}

/** Contains response data for the listByServiceNext operation. */
export type UserListByServiceNextResponse = UserCollection;

/** Optional parameters. */
export interface UserGroupListOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|------------------------|-----------------------------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the list operation. */
export type UserGroupListResponse = GroupCollection;

/** Optional parameters. */
export interface UserGroupListNextOptionalParams
  extends coreClient.OperationOptions {
  /** |     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|------------------------|-----------------------------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listNext operation. */
export type UserGroupListNextResponse = GroupCollection;

/** Optional parameters. */
export interface UserSubscriptionListOptionalParams
  extends coreClient.OperationOptions {
  /** | Field     |     Usage     |     Supported operators    | Supported functions               |</br>|-------------|------------------------|-----------------------------------|</br>|name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|stateComment | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|ownerId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|scope | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the list operation. */
export type UserSubscriptionListResponse = SubscriptionCollection;

/** Optional parameters. */
export interface UserSubscriptionGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type UserSubscriptionGetResponse = UserSubscriptionGetHeaders &
  SubscriptionContract;

/** Optional parameters. */
export interface UserSubscriptionListNextOptionalParams
  extends coreClient.OperationOptions {
  /** | Field     |     Usage     |     Supported operators    | Supported functions               |</br>|-------------|------------------------|-----------------------------------|</br>|name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|stateComment | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|ownerId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|scope | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> */
  filter?: string;
  /** Number of records to return. */
  top?: number;
  /** Number of records to skip. */
  skip?: number;
}

/** Contains response data for the listNext operation. */
export type UserSubscriptionListNextResponse = SubscriptionCollection;

/** Optional parameters. */
export interface UserIdentitiesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type UserIdentitiesListResponse = UserIdentityCollection;

/** Optional parameters. */
export interface UserIdentitiesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type UserIdentitiesListNextResponse = UserIdentityCollection;

/** Optional parameters. */
export interface UserConfirmationPasswordSendOptionalParams
  extends coreClient.OperationOptions {
  /** Determines the type of application which send the create user request. Default is legacy publisher portal. */
  appType?: AppType;
}

/** Optional parameters. */
export interface ApiManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
