/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export type InventoryItemPropertiesUnion =
  | InventoryItemProperties
  | CloudInventoryItem
  | VirtualNetworkInventoryItem
  | VirtualMachineTemplateInventoryItem
  | VirtualMachineInventoryItem;

/** The VmmServers resource definition. */
export interface VMMServer {
  /**
   * Resource Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Resource Name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Resource Type
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** Gets or sets the location. */
  location: string;
  /** Resource tags */
  tags?: { [propertyName: string]: string };
  /**
   * The system data.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** The extended location. */
  extendedLocation: ExtendedLocation;
  /** Credentials to connect to VMMServer. */
  credentials?: VMMServerPropertiesCredentials;
  /** Fqdn is the hostname/ip of the vmmServer. */
  fqdn: string;
  /** Port is the port on which the vmmServer is listening. */
  port?: number;
  /**
   * Gets or sets the connection status to the vmmServer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly connectionStatus?: string;
  /**
   * Gets or sets any error message if connection to vmmServer is having any issue.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorMessage?: string;
  /**
   * Unique ID of vmmServer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly uuid?: string;
  /**
   * Version is the version of the vmmSever.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly version?: string;
  /**
   * Gets or sets the provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** Credentials to connect to VMMServer. */
export interface VMMServerPropertiesCredentials {
  /** Username to use to connect to VMMServer. */
  username?: string;
  /** Credentials to use to connect to VMMServer. */
  password?: string;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** The extended location. */
export interface ExtendedLocation {
  /** The extended location type. */
  type?: string;
  /** The extended location name. */
  name?: string;
}

/** Error response. */
export interface ErrorResponse {
  /** The error details. */
  error?: ErrorDefinition;
}

/** Error definition. */
export interface ErrorDefinition {
  /**
   * Service specific error code which serves as the substatus for the HTTP error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * Description of the error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * Internal error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDefinition[];
}

/** Object containing tags updates for patch operations. */
export interface ResourcePatch {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** List of VmmServers. */
export interface VMMServerListResult {
  /** List of VmmServers. */
  value?: VMMServer[];
  /** Url to follow for getting next page of resources. */
  nextLink?: string;
}

/** Results of the request to list operations. */
export interface ResourceProviderOperationList {
  /** List of Operations. */
  value?: ResourceProviderOperation[];
  /** Url to follow for getting next page of resources. */
  nextLink?: string;
}

/** Results of the request to list operations. */
export interface ResourceProviderOperation {
  /** Indicates whether the operation applies to data-plane. */
  isDataAction?: string;
  /** Operation name, in format of {provider}/{resource}/{operation}. */
  name?: string;
  /** Display metadata associated with the operation. */
  display?: ResourceProviderOperationDisplay;
}

/** Display metadata associated with the operation. */
export interface ResourceProviderOperationDisplay {
  /** The resource provider. */
  provider?: string;
  /** Resource on which the operation is performed. */
  resource?: string;
  /** Type of operation: read, write, delete, etc. */
  operation?: string;
  /** Description of this operation. */
  description?: string;
}

/** The Clouds resource definition. */
export interface Cloud {
  /**
   * Resource Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Resource Name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Resource Type
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** Gets or sets the location. */
  location: string;
  /** Resource tags */
  tags?: { [propertyName: string]: string };
  /**
   * The system data.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** The extended location. */
  extendedLocation: ExtendedLocation;
  /** Gets or sets the inventory Item ID for the resource. */
  inventoryItemId?: string;
  /** Unique ID of the cloud. */
  uuid?: string;
  /** ARM Id of the vmmServer resource in which this resource resides. */
  vmmServerId?: string;
  /**
   * Name of the cloud in VMMServer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cloudName?: string;
  /**
   * Capacity of the cloud.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cloudCapacity?: CloudCapacity;
  /**
   * List of QoS policies available for the cloud.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly storageQoSPolicies?: StorageQoSPolicy[];
  /**
   * Gets or sets the provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** Cloud Capacity model */
export interface CloudCapacity {
  /** CPUCount specifies the maximum number of CPUs that can be allocated in the cloud. */
  cpuCount?: number;
  /** MemoryMB specifies a memory usage limit in megabytes. */
  memoryMB?: number;
  /** VMCount gives the max number of VMs that can be deployed in the cloud. */
  vmCount?: number;
}

/** The StorageQoSPolicy definition. */
export interface StorageQoSPolicy {
  /** The name of the policy. */
  name?: string;
  /** The ID of the QoS policy. */
  id?: string;
  /** The maximum IO operations per second. */
  iopsMaximum?: number;
  /** The minimum IO operations per second. */
  iopsMinimum?: number;
  /** The Bandwidth Limit for internet traffic. */
  bandwidthLimit?: number;
  /** The underlying policy. */
  policyId?: string;
}

/** List of Clouds. */
export interface CloudListResult {
  /** List of Clouds. */
  value?: Cloud[];
  /** Url to follow for getting next page of resources. */
  nextLink?: string;
}

/** The VirtualNetworks resource definition. */
export interface VirtualNetwork {
  /**
   * Resource Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Resource Name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Resource Type
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** Gets or sets the location. */
  location: string;
  /** Resource tags */
  tags?: { [propertyName: string]: string };
  /**
   * The system data.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** The extended location. */
  extendedLocation: ExtendedLocation;
  /** Gets or sets the inventory Item ID for the resource. */
  inventoryItemId?: string;
  /** Unique ID of the virtual network. */
  uuid?: string;
  /** ARM Id of the vmmServer resource in which this resource resides. */
  vmmServerId?: string;
  /**
   * Name of the virtual network in vmmServer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkName?: string;
  /**
   * Gets or sets the provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** List of VirtualNetworks. */
export interface VirtualNetworkListResult {
  /** List of VirtualNetworks. */
  value?: VirtualNetwork[];
  /** Url to follow for getting next page of resources. */
  nextLink?: string;
}

/** The VirtualMachines resource definition. */
export interface VirtualMachine {
  /**
   * Resource Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Resource Name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Resource Type
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** Gets or sets the location. */
  location: string;
  /** Resource tags */
  tags?: { [propertyName: string]: string };
  /**
   * The system data.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** The extended location. */
  extendedLocation: ExtendedLocation;
  /** Gets or sets the inventory Item ID for the resource. */
  inventoryItemId?: string;
  /** ARM Id of the vmmServer resource in which this resource resides. */
  vmmServerId?: string;
  /** ARM Id of the cloud resource to use for deploying the vm. */
  cloudId?: string;
  /** ARM Id of the template resource to use for deploying the vm. */
  templateId?: string;
  /** Type of checkpoint supported for the vm. */
  checkpointType?: string;
  /** Checkpoints in the vm. */
  checkpoints?: Checkpoint[];
  /** Availability Sets in vm. */
  availabilitySets?: AvailabilitySetListItem[];
  /** OS properties. */
  osProfile?: OsProfile;
  /** Hardware properties. */
  hardwareProfile?: HardwareProfile;
  /** Network properties. */
  networkProfile?: NetworkProfile;
  /** Storage properties. */
  storageProfile?: StorageProfile;
  /** VMName is the name of VM on the SCVMM server. */
  vmName?: string;
  /** Unique ID of the virtual machine. */
  uuid?: string;
  /** Gets or sets the generation for the vm. */
  generation?: number;
  /**
   * Gets the power state of the virtual machine.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly powerState?: string;
  /**
   * Gets or sets the provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** Defines the resource properties. */
export interface Checkpoint {
  /** Gets ID of parent of the checkpoint. */
  parentCheckpointID?: string;
  /** Gets ID of the checkpoint. */
  checkpointID?: string;
  /** Gets name of the checkpoint. */
  name?: string;
  /** Gets description of the checkpoint. */
  description?: string;
}

/** Availability Set model */
export interface AvailabilitySetListItem {
  /** Gets the ARM Id of the microsoft.scvmm/availabilitySets resource. */
  id?: string;
  /** Gets or sets the name of the availability set. */
  name?: string;
}

/** Defines the resource properties. */
export interface OsProfile {
  /** Admin password of the virtual machine. */
  adminPassword?: string;
  /** Gets or sets computer name. */
  computerName?: string;
  /**
   * Gets or sets the type of the os.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osType?: OsType;
  /**
   * Gets or sets os name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osName?: string;
}

/** Defines the resource properties. */
export interface HardwareProfile {
  /** MemoryMB is the size of a virtual machine's memory, in MB. */
  memoryMB?: number;
  /** Gets or sets the number of vCPUs for the vm. */
  cpuCount?: number;
  /** Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs. */
  limitCpuForMigration?: LimitCpuForMigration;
  /** Gets or sets a value indicating whether to enable dynamic memory or not. */
  dynamicMemoryEnabled?: DynamicMemoryEnabled;
  /** Gets or sets the max dynamic memory for the vm. */
  dynamicMemoryMaxMB?: number;
  /** Gets or sets the min dynamic memory for the vm. */
  dynamicMemoryMinMB?: number;
  /** Gets highly available property. */
  isHighlyAvailable?: string;
}

/** Defines the resource properties. */
export interface NetworkProfile {
  /** Gets or sets the list of network interfaces associated with the virtual machine. */
  networkInterfaces?: NetworkInterfaces[];
}

/** Network Interface model */
export interface NetworkInterfaces {
  /** Gets or sets the name of the network interface. */
  name?: string;
  /**
   * Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * Gets or sets the nic ipv4 addresses.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ipv4Addresses?: string[];
  /**
   * Gets or sets the nic ipv6 addresses.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ipv6Addresses?: string[];
  /** Gets or sets the nic MAC address. */
  macAddress?: string;
  /** Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic. */
  virtualNetworkId?: string;
  /**
   * Gets or sets the name of the virtual network in vmmServer that the nic is connected to.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkName?: string;
  /** Gets or sets the ipv4 address type. */
  ipv4AddressType?: AllocationMethod;
  /** Gets or sets the ipv6 address type. */
  ipv6AddressType?: AllocationMethod;
  /** Gets or sets the mac address type. */
  macAddressType?: AllocationMethod;
  /** Gets or sets the nic id. */
  nicId?: string;
}

/** Defines the resource properties. */
export interface StorageProfile {
  /** Gets or sets the list of virtual disks associated with the virtual machine. */
  disks?: VirtualDisk[];
}

/** Virtual disk model */
export interface VirtualDisk {
  /** Gets or sets the name of the disk. */
  name?: string;
  /**
   * Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /** Gets or sets the disk id. */
  diskId?: string;
  /** Gets or sets the disk total size. */
  diskSizeGB?: number;
  /**
   * Gets or sets the max disk size.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maxDiskSizeGB?: number;
  /** Gets or sets the disk bus. */
  bus?: number;
  /** Gets or sets the disk lun. */
  lun?: number;
  /** Gets or sets the disk bus type. */
  busType?: string;
  /** Gets or sets the disk vhd type. */
  vhdType?: string;
  /**
   * Gets or sets the disk volume type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly volumeType?: string;
  /**
   * Gets the disk vhd format type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vhdFormatType?: string;
  /** Gets or sets the disk id in the template. */
  templateDiskId?: string;
  /** The QoS policy for the disk. */
  storageQoSPolicy?: StorageQoSPolicyDetails;
  /** Gets or sets a value indicating diff disk. */
  createDiffDisk?: CreateDiffDisk;
}

/** The StorageQoSPolicyDetails definition. */
export interface StorageQoSPolicyDetails {
  /** The name of the policy. */
  name?: string;
  /** The ID of the QoS policy. */
  id?: string;
}

/** Defines the virtualMachineUpdate. */
export interface VirtualMachineUpdate {
  /** Defines the resource properties. */
  properties?: VirtualMachineUpdateProperties;
  /** Gets or sets the Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** Defines the resource properties. */
export interface VirtualMachineUpdateProperties {
  /** Defines the resource properties. */
  hardwareProfile?: HardwareProfileUpdate;
  /** Defines the resource properties. */
  storageProfile?: StorageProfileUpdate;
  /** Defines the resource properties. */
  networkProfile?: NetworkProfileUpdate;
  /** Availability Sets in vm. */
  availabilitySets?: AvailabilitySetListItem[];
}

/** Defines the resource properties. */
export interface HardwareProfileUpdate {
  /** MemoryMB is the size of a virtual machine's memory, in MB. */
  memoryMB?: number;
  /** Gets or sets the number of vCPUs for the vm. */
  cpuCount?: number;
  /** Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs. */
  limitCpuForMigration?: LimitCpuForMigration;
  /** Gets or sets a value indicating whether to enable dynamic memory or not. */
  dynamicMemoryEnabled?: DynamicMemoryEnabled;
  /** Gets or sets the max dynamic memory for the vm. */
  dynamicMemoryMaxMB?: number;
  /** Gets or sets the min dynamic memory for the vm. */
  dynamicMemoryMinMB?: number;
}

/** Defines the resource properties. */
export interface StorageProfileUpdate {
  /** Gets or sets the list of virtual disks associated with the virtual machine. */
  disks?: VirtualDiskUpdate[];
}

/** Virtual disk model */
export interface VirtualDiskUpdate {
  /** Gets or sets the name of the disk. */
  name?: string;
  /** Gets or sets the disk id. */
  diskId?: string;
  /** Gets or sets the disk total size. */
  diskSizeGB?: number;
  /** Gets or sets the disk bus. */
  bus?: number;
  /** Gets or sets the disk lun. */
  lun?: number;
  /** Gets or sets the disk bus type. */
  busType?: string;
  /** Gets or sets the disk vhd type. */
  vhdType?: string;
  /** The QoS policy for the disk. */
  storageQoSPolicy?: StorageQoSPolicyDetails;
}

/** Defines the resource properties. */
export interface NetworkProfileUpdate {
  /** Gets or sets the list of network interfaces associated with the virtual machine. */
  networkInterfaces?: NetworkInterfacesUpdate[];
}

/** Network Interface model */
export interface NetworkInterfacesUpdate {
  /** Gets or sets the name of the network interface. */
  name?: string;
  /** Gets or sets the nic MAC address. */
  macAddress?: string;
  /** Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic. */
  virtualNetworkId?: string;
  /** Gets or sets the ipv4 address type. */
  ipv4AddressType?: AllocationMethod;
  /** Gets or sets the ipv6 address type. */
  ipv6AddressType?: AllocationMethod;
  /** Gets or sets the mac address type. */
  macAddressType?: AllocationMethod;
  /** Gets or sets the nic id. */
  nicId?: string;
}

/** Defines the stop action properties. */
export interface StopVirtualMachineOptions {
  /** Gets or sets a value indicating whether to request non-graceful VM shutdown. True value for this flag indicates non-graceful shutdown whereas false indicates otherwise. Defaults to false. */
  skipShutdown?: boolean;
}

/** Defines the create checkpoint action properties. */
export interface VirtualMachineCreateCheckpoint {
  /** Name of the checkpoint. */
  name?: string;
  /** Description of the checkpoint. */
  description?: string;
}

/** Defines the delete checkpoint action properties. */
export interface VirtualMachineDeleteCheckpoint {
  /** ID of the checkpoint to be deleted. */
  id?: string;
}

/** Defines the restore checkpoint action properties. */
export interface VirtualMachineRestoreCheckpoint {
  /** ID of the checkpoint to be restored to. */
  id?: string;
}

/** List of VirtualMachines. */
export interface VirtualMachineListResult {
  /** List of VirtualMachines. */
  value?: VirtualMachine[];
  /** Url to follow for getting next page of resources. */
  nextLink?: string;
}

/** The VirtualMachineTemplates resource definition. */
export interface VirtualMachineTemplate {
  /**
   * Resource Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Resource Name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Resource Type
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** Gets or sets the location. */
  location: string;
  /** Resource tags */
  tags?: { [propertyName: string]: string };
  /**
   * The system data.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** The extended location. */
  extendedLocation: ExtendedLocation;
  /** Gets or sets the inventory Item ID for the resource. */
  inventoryItemId?: string;
  /** Unique ID of the virtual machine template. */
  uuid?: string;
  /** ARM Id of the vmmServer resource in which this resource resides. */
  vmmServerId?: string;
  /**
   * Gets or sets the type of the os.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osType?: OsType;
  /**
   * Gets or sets os name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osName?: string;
  /**
   * Gets or sets computer name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly computerName?: string;
  /**
   * MemoryMB is the desired size of a virtual machine's memory, in MB.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly memoryMB?: number;
  /**
   * Gets or sets the desired number of vCPUs for the vm.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cpuCount?: number;
  /**
   * Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly limitCpuForMigration?: LimitCpuForMigration;
  /**
   * Gets or sets a value indicating whether to enable dynamic memory or not.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dynamicMemoryEnabled?: DynamicMemoryEnabled;
  /**
   * Gets or sets a value indicating whether the vm template is customizable or not.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isCustomizable?: IsCustomizable;
  /**
   * Gets or sets the max dynamic memory for the vm.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dynamicMemoryMaxMB?: number;
  /**
   * Gets or sets the min dynamic memory for the vm.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dynamicMemoryMinMB?: number;
  /**
   * Gets highly available property.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isHighlyAvailable?: string;
  /**
   * Gets or sets the generation for the vm.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly generation?: number;
  /**
   * Gets or sets the network interfaces of the template.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkInterfaces?: NetworkInterfaces[];
  /**
   * Gets or sets the disks of the template.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly disks?: VirtualDisk[];
  /**
   * Gets or sets the provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** List of VirtualMachineTemplates. */
export interface VirtualMachineTemplateListResult {
  /** List of VirtualMachineTemplates. */
  value?: VirtualMachineTemplate[];
  /** Url to follow for getting next page of resources. */
  nextLink?: string;
}

/** The AvailabilitySets resource definition. */
export interface AvailabilitySet {
  /**
   * Resource Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Resource Name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Resource Type
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** Gets or sets the location. */
  location?: string;
  /** Resource tags */
  tags?: { [propertyName: string]: string };
  /**
   * The system data.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** The extended location. */
  extendedLocation?: ExtendedLocation;
  /** Name of the availability set. */
  availabilitySetName?: string;
  /** ARM Id of the vmmServer resource in which this resource resides. */
  vmmServerId?: string;
  /**
   * Gets or sets the provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** List of AvailabilitySets. */
export interface AvailabilitySetListResult {
  /** List of AvailabilitySets. */
  value?: AvailabilitySet[];
  /** Url to follow for getting next page of resources. */
  nextLink?: string;
}

/** Defines the resource properties. */
export interface InventoryItemProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  inventoryType:
    | "Cloud"
    | "VirtualNetwork"
    | "VirtualMachineTemplate"
    | "VirtualMachine";
  /**
   * Gets the tracked resource id corresponding to the inventory resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly managedResourceId?: string;
  /**
   * Gets the UUID (which is assigned by VMM) for the inventory item.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly uuid?: string;
  /**
   * Gets the Managed Object name in VMM for the inventory item.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly inventoryItemName?: string;
  /**
   * Gets the provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** List of InventoryItems. */
export interface InventoryItemsList {
  /** Url to follow for getting next page of InventoryItems. */
  nextLink?: string;
  /** Array of InventoryItems */
  value: InventoryItem[];
}

/** Defines the resource properties. */
export interface InventoryItemDetails {
  /** Gets or sets the inventory Item ID for the resource. */
  inventoryItemId?: string;
  /** Gets or sets the Managed Object name in VMM for the resource. */
  inventoryItemName?: string;
}

/** The Cloud inventory item. */
export interface CloudInventoryItem extends InventoryItemProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  inventoryType: "Cloud";
}

/** The Virtual network inventory item. */
export interface VirtualNetworkInventoryItem extends InventoryItemProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  inventoryType: "VirtualNetwork";
}

/** The Virtual machine template inventory item. */
export interface VirtualMachineTemplateInventoryItem
  extends InventoryItemProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  inventoryType: "VirtualMachineTemplate";
  /**
   * Gets or sets the desired number of vCPUs for the vm.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cpuCount?: number;
  /**
   * MemoryMB is the desired size of a virtual machine's memory, in MB.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly memoryMB?: number;
  /**
   * Gets or sets the type of the os.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osType?: OsType;
  /**
   * Gets or sets os name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osName?: string;
}

/** The Virtual machine inventory item. */
export interface VirtualMachineInventoryItem extends InventoryItemProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  inventoryType: "VirtualMachine";
  /**
   * Gets or sets the type of the os.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osType?: OsType;
  /**
   * Gets or sets os name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osName?: string;
  /**
   * Gets the power state of the virtual machine.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly powerState?: string;
  /** Gets or sets the nic ip addresses. */
  ipAddresses?: string[];
  /** Cloud inventory resource details where the VM is present. */
  cloud?: InventoryItemDetails;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** Defines the inventory item. */
export interface InventoryItem extends ProxyResource {
  /**
   * The system data.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value. */
  kind?: string;
  /** They inventory type. */
  inventoryType: InventoryType;
  /**
   * Gets the tracked resource id corresponding to the inventory resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly managedResourceId?: string;
  /**
   * Gets the UUID (which is assigned by VMM) for the inventory item.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly uuid?: string;
  /**
   * Gets the Managed Object name in VMM for the inventory item.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly inventoryItemName?: string;
  /**
   * Gets the provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** Defines headers for AvailabilitySets_createOrUpdate operation. */
export interface AvailabilitySetsCreateOrUpdateHeaders {
  /** Tracking URL for long running operation. */
  azureAsyncOperation?: string;
}

/** Defines headers for AvailabilitySets_delete operation. */
export interface AvailabilitySetsDeleteHeaders {
  /** Tracking URL for long running operation. */
  azureAsyncOperation?: string;
}

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link OsType} that the service accepts. */
export enum KnownOsType {
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
  /** Other */
  Other = "Other"
}

/**
 * Defines values for OsType. \
 * {@link KnownOsType} can be used interchangeably with OsType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Windows** \
 * **Linux** \
 * **Other**
 */
export type OsType = string;

/** Known values of {@link LimitCpuForMigration} that the service accepts. */
export enum KnownLimitCpuForMigration {
  /** False */
  False = "false",
  /** True */
  True = "true"
}

/**
 * Defines values for LimitCpuForMigration. \
 * {@link KnownLimitCpuForMigration} can be used interchangeably with LimitCpuForMigration,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **false** \
 * **true**
 */
export type LimitCpuForMigration = string;

/** Known values of {@link DynamicMemoryEnabled} that the service accepts. */
export enum KnownDynamicMemoryEnabled {
  /** False */
  False = "false",
  /** True */
  True = "true"
}

/**
 * Defines values for DynamicMemoryEnabled. \
 * {@link KnownDynamicMemoryEnabled} can be used interchangeably with DynamicMemoryEnabled,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **false** \
 * **true**
 */
export type DynamicMemoryEnabled = string;

/** Known values of {@link AllocationMethod} that the service accepts. */
export enum KnownAllocationMethod {
  /** Dynamic */
  Dynamic = "Dynamic",
  /** Static */
  Static = "Static"
}

/**
 * Defines values for AllocationMethod. \
 * {@link KnownAllocationMethod} can be used interchangeably with AllocationMethod,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Dynamic** \
 * **Static**
 */
export type AllocationMethod = string;

/** Known values of {@link CreateDiffDisk} that the service accepts. */
export enum KnownCreateDiffDisk {
  /** False */
  False = "false",
  /** True */
  True = "true"
}

/**
 * Defines values for CreateDiffDisk. \
 * {@link KnownCreateDiffDisk} can be used interchangeably with CreateDiffDisk,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **false** \
 * **true**
 */
export type CreateDiffDisk = string;

/** Known values of {@link IsCustomizable} that the service accepts. */
export enum KnownIsCustomizable {
  /** False */
  False = "false",
  /** True */
  True = "true"
}

/**
 * Defines values for IsCustomizable. \
 * {@link KnownIsCustomizable} can be used interchangeably with IsCustomizable,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **false** \
 * **true**
 */
export type IsCustomizable = string;

/** Known values of {@link InventoryType} that the service accepts. */
export enum KnownInventoryType {
  /** Cloud */
  Cloud = "Cloud",
  /** VirtualNetwork */
  VirtualNetwork = "VirtualNetwork",
  /** VirtualMachineTemplate */
  VirtualMachineTemplate = "VirtualMachineTemplate",
  /** VirtualMachine */
  VirtualMachine = "VirtualMachine"
}

/**
 * Defines values for InventoryType. \
 * {@link KnownInventoryType} can be used interchangeably with InventoryType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Cloud** \
 * **VirtualNetwork** \
 * **VirtualMachineTemplate** \
 * **VirtualMachine**
 */
export type InventoryType = string;

/** Optional parameters. */
export interface VmmServersGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type VmmServersGetResponse = VMMServer;

/** Optional parameters. */
export interface VmmServersCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type VmmServersCreateOrUpdateResponse = VMMServer;

/** Optional parameters. */
export interface VmmServersDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Forces the resource to be deleted from azure. The corresponding CR would be attempted to be deleted too. */
  force?: boolean;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface VmmServersUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type VmmServersUpdateResponse = VMMServer;

/** Optional parameters. */
export interface VmmServersListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type VmmServersListByResourceGroupResponse = VMMServerListResult;

/** Optional parameters. */
export interface VmmServersListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type VmmServersListBySubscriptionResponse = VMMServerListResult;

/** Optional parameters. */
export interface VmmServersListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type VmmServersListByResourceGroupNextResponse = VMMServerListResult;

/** Optional parameters. */
export interface VmmServersListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type VmmServersListBySubscriptionNextResponse = VMMServerListResult;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = ResourceProviderOperationList;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = ResourceProviderOperationList;

/** Optional parameters. */
export interface CloudsGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type CloudsGetResponse = Cloud;

/** Optional parameters. */
export interface CloudsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type CloudsCreateOrUpdateResponse = Cloud;

/** Optional parameters. */
export interface CloudsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Forces the resource to be deleted from azure. The corresponding CR would be attempted to be deleted too. */
  force?: boolean;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface CloudsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type CloudsUpdateResponse = Cloud;

/** Optional parameters. */
export interface CloudsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type CloudsListByResourceGroupResponse = CloudListResult;

/** Optional parameters. */
export interface CloudsListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type CloudsListBySubscriptionResponse = CloudListResult;

/** Optional parameters. */
export interface CloudsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type CloudsListByResourceGroupNextResponse = CloudListResult;

/** Optional parameters. */
export interface CloudsListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type CloudsListBySubscriptionNextResponse = CloudListResult;

/** Optional parameters. */
export interface VirtualNetworksGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type VirtualNetworksGetResponse = VirtualNetwork;

/** Optional parameters. */
export interface VirtualNetworksCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type VirtualNetworksCreateOrUpdateResponse = VirtualNetwork;

/** Optional parameters. */
export interface VirtualNetworksDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Forces the resource to be deleted from azure. The corresponding CR would be attempted to be deleted too. */
  force?: boolean;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface VirtualNetworksUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type VirtualNetworksUpdateResponse = VirtualNetwork;

/** Optional parameters. */
export interface VirtualNetworksListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type VirtualNetworksListByResourceGroupResponse = VirtualNetworkListResult;

/** Optional parameters. */
export interface VirtualNetworksListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type VirtualNetworksListBySubscriptionResponse = VirtualNetworkListResult;

/** Optional parameters. */
export interface VirtualNetworksListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type VirtualNetworksListByResourceGroupNextResponse = VirtualNetworkListResult;

/** Optional parameters. */
export interface VirtualNetworksListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type VirtualNetworksListBySubscriptionNextResponse = VirtualNetworkListResult;

/** Optional parameters. */
export interface VirtualMachinesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type VirtualMachinesGetResponse = VirtualMachine;

/** Optional parameters. */
export interface VirtualMachinesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type VirtualMachinesCreateOrUpdateResponse = VirtualMachine;

/** Optional parameters. */
export interface VirtualMachinesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Forces the resource to be deleted from azure. The corresponding CR would be attempted to be deleted too. */
  force?: boolean;
  /** Whether to just disable the VM from azure and retain the VM in the VMM. */
  retain?: boolean;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface VirtualMachinesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type VirtualMachinesUpdateResponse = VirtualMachine;

/** Optional parameters. */
export interface VirtualMachinesStopOptionalParams
  extends coreClient.OperationOptions {
  /** Virtualmachine stop action payload. */
  body?: StopVirtualMachineOptions;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface VirtualMachinesStartOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface VirtualMachinesRestartOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface VirtualMachinesCreateCheckpointOptionalParams
  extends coreClient.OperationOptions {
  /** Virtualmachine create checkpoint action payload. */
  body?: VirtualMachineCreateCheckpoint;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface VirtualMachinesDeleteCheckpointOptionalParams
  extends coreClient.OperationOptions {
  /** Virtualmachine delete checkpoint action payload. */
  body?: VirtualMachineDeleteCheckpoint;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface VirtualMachinesRestoreCheckpointOptionalParams
  extends coreClient.OperationOptions {
  /** Virtualmachine restore checkpoint action payload. */
  body?: VirtualMachineRestoreCheckpoint;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface VirtualMachinesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type VirtualMachinesListByResourceGroupResponse = VirtualMachineListResult;

/** Optional parameters. */
export interface VirtualMachinesListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type VirtualMachinesListBySubscriptionResponse = VirtualMachineListResult;

/** Optional parameters. */
export interface VirtualMachinesListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type VirtualMachinesListByResourceGroupNextResponse = VirtualMachineListResult;

/** Optional parameters. */
export interface VirtualMachinesListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type VirtualMachinesListBySubscriptionNextResponse = VirtualMachineListResult;

/** Optional parameters. */
export interface VirtualMachineTemplatesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type VirtualMachineTemplatesGetResponse = VirtualMachineTemplate;

/** Optional parameters. */
export interface VirtualMachineTemplatesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type VirtualMachineTemplatesCreateOrUpdateResponse = VirtualMachineTemplate;

/** Optional parameters. */
export interface VirtualMachineTemplatesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Forces the resource to be deleted from azure. The corresponding CR would be attempted to be deleted too. */
  force?: boolean;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface VirtualMachineTemplatesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type VirtualMachineTemplatesUpdateResponse = VirtualMachineTemplate;

/** Optional parameters. */
export interface VirtualMachineTemplatesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type VirtualMachineTemplatesListByResourceGroupResponse = VirtualMachineTemplateListResult;

/** Optional parameters. */
export interface VirtualMachineTemplatesListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type VirtualMachineTemplatesListBySubscriptionResponse = VirtualMachineTemplateListResult;

/** Optional parameters. */
export interface VirtualMachineTemplatesListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type VirtualMachineTemplatesListByResourceGroupNextResponse = VirtualMachineTemplateListResult;

/** Optional parameters. */
export interface VirtualMachineTemplatesListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type VirtualMachineTemplatesListBySubscriptionNextResponse = VirtualMachineTemplateListResult;

/** Optional parameters. */
export interface AvailabilitySetsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AvailabilitySetsGetResponse = AvailabilitySet;

/** Optional parameters. */
export interface AvailabilitySetsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type AvailabilitySetsCreateOrUpdateResponse = AvailabilitySet;

/** Optional parameters. */
export interface AvailabilitySetsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Forces the resource to be deleted from azure. The corresponding CR would be attempted to be deleted too. */
  force?: boolean;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface AvailabilitySetsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type AvailabilitySetsUpdateResponse = AvailabilitySet;

/** Optional parameters. */
export interface AvailabilitySetsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type AvailabilitySetsListByResourceGroupResponse = AvailabilitySetListResult;

/** Optional parameters. */
export interface AvailabilitySetsListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type AvailabilitySetsListBySubscriptionResponse = AvailabilitySetListResult;

/** Optional parameters. */
export interface AvailabilitySetsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type AvailabilitySetsListByResourceGroupNextResponse = AvailabilitySetListResult;

/** Optional parameters. */
export interface AvailabilitySetsListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type AvailabilitySetsListBySubscriptionNextResponse = AvailabilitySetListResult;

/** Optional parameters. */
export interface InventoryItemsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Request payload. */
  body?: InventoryItem;
}

/** Contains response data for the create operation. */
export type InventoryItemsCreateResponse = InventoryItem;

/** Optional parameters. */
export interface InventoryItemsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type InventoryItemsGetResponse = InventoryItem;

/** Optional parameters. */
export interface InventoryItemsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface InventoryItemsListByVMMServerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByVMMServer operation. */
export type InventoryItemsListByVMMServerResponse = InventoryItemsList;

/** Optional parameters. */
export interface InventoryItemsListByVMMServerNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByVMMServerNext operation. */
export type InventoryItemsListByVMMServerNextResponse = InventoryItemsList;

/** Optional parameters. */
export interface ScvmmOptionalParams extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
