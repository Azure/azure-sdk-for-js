/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { VirtualMachineRestoreCheckpoint, ScVmm } from "@azure/arm-scvmm";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";

dotenv.config();

/**
 * This sample demonstrates how to Restores to a checkpoint in virtual machine instance.
 *
 * @summary Restores to a checkpoint in virtual machine instance.
 * x-ms-original-file: specification/scvmm/resource-manager/Microsoft.ScVmm/stable/2023-10-07/examples/VirtualMachineInstances_RestoreCheckpoint_MaximumSet_Gen.json
 */
async function virtualMachineInstancesRestoreCheckpointMaximumSet() {
  const resourceUri = "gtgclehcbsyave";
  const body: VirtualMachineRestoreCheckpoint = { id: "rweqduwzsn" };
  const credential = new DefaultAzureCredential();
  const client = new ScVmm(credential);
  const result =
    await client.virtualMachineInstances.beginRestoreCheckpointAndWait(
      resourceUri,
      body,
    );
  console.log(result);
}

/**
 * This sample demonstrates how to Restores to a checkpoint in virtual machine instance.
 *
 * @summary Restores to a checkpoint in virtual machine instance.
 * x-ms-original-file: specification/scvmm/resource-manager/Microsoft.ScVmm/stable/2023-10-07/examples/VirtualMachineInstances_RestoreCheckpoint_MinimumSet_Gen.json
 */
async function virtualMachineInstancesRestoreCheckpointMinimumSet() {
  const resourceUri = "gtgclehcbsyave";
  const body: VirtualMachineRestoreCheckpoint = {};
  const credential = new DefaultAzureCredential();
  const client = new ScVmm(credential);
  const result =
    await client.virtualMachineInstances.beginRestoreCheckpointAndWait(
      resourceUri,
      body,
    );
  console.log(result);
}

async function main() {
  virtualMachineInstancesRestoreCheckpointMaximumSet();
  virtualMachineInstancesRestoreCheckpointMinimumSet();
}

main().catch(console.error);
