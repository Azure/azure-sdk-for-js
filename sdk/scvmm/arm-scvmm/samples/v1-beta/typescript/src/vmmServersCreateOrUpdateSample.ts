/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { VMMServer, Scvmm } from "@azure/arm-scvmm";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";

dotenv.config();

/**
 * This sample demonstrates how to Onboards the SCVMM fabric as an Azure VmmServer resource.
 *
 * @summary Onboards the SCVMM fabric as an Azure VmmServer resource.
 * x-ms-original-file: specification/scvmm/resource-manager/Microsoft.ScVmm/preview/2020-06-05-preview/examples/CreateVMMServer.json
 */
async function createVmmServer() {
  const subscriptionId =
    process.env["SCVMM_SUBSCRIPTION_ID"] ||
    "fd3c3665-1729-4b7b-9a38-238e83b0f98b";
  const resourceGroupName = process.env["SCVMM_RESOURCE_GROUP"] || "testrg";
  const vmmServerName = "ContosoVMMServer";
  const body: VMMServer = {
    credentials: { password: "password", username: "testuser" },
    extendedLocation: {
      name:
        "/subscriptions/a5015e1c-867f-4533-8541-85cd470d0cfb/resourceGroups/demoRG/providers/Microsoft.Arc/customLocations/contoso",
      type: "customLocation"
    },
    fqdn: "VMM.contoso.com",
    location: "East US",
    port: 1234
  };
  const credential = new DefaultAzureCredential();
  const client = new Scvmm(credential, subscriptionId);
  const result = await client.vmmServers.beginCreateOrUpdateAndWait(
    resourceGroupName,
    vmmServerName,
    body
  );
  console.log(result);
}

async function main() {
  createVmmServer();
}

main().catch(console.error);
