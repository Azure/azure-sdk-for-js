/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter
} from "@azure/core-client";
import {
  PrivateEndpointConnection as PrivateEndpointConnectionMapper,
  PythonPackageCreateParameters as PythonPackageCreateParametersMapper,
  PythonPackageUpdateParameters as PythonPackageUpdateParametersMapper,
  AgentRegistrationRegenerateKeyParameter as AgentRegistrationRegenerateKeyParameterMapper,
  DscNodeUpdateParameters as DscNodeUpdateParametersMapper,
  DscNodeConfigurationCreateOrUpdateParameters as DscNodeConfigurationCreateOrUpdateParametersMapper,
  DscCompilationJobCreateParameters as DscCompilationJobCreateParametersMapper,
  SourceControlCreateOrUpdateParameters as SourceControlCreateOrUpdateParametersMapper,
  SourceControlUpdateParameters as SourceControlUpdateParametersMapper,
  SourceControlSyncJobCreateParameters as SourceControlSyncJobCreateParametersMapper,
  AutomationAccountUpdateParameters as AutomationAccountUpdateParametersMapper,
  AutomationAccountCreateOrUpdateParameters as AutomationAccountCreateOrUpdateParametersMapper,
  CertificateCreateOrUpdateParameters as CertificateCreateOrUpdateParametersMapper,
  CertificateUpdateParameters as CertificateUpdateParametersMapper,
  ConnectionCreateOrUpdateParameters as ConnectionCreateOrUpdateParametersMapper,
  ConnectionUpdateParameters as ConnectionUpdateParametersMapper,
  ConnectionTypeCreateOrUpdateParameters as ConnectionTypeCreateOrUpdateParametersMapper,
  CredentialCreateOrUpdateParameters as CredentialCreateOrUpdateParametersMapper,
  CredentialUpdateParameters as CredentialUpdateParametersMapper,
  JobScheduleCreateParameters as JobScheduleCreateParametersMapper,
  ModuleCreateOrUpdateParameters as ModuleCreateOrUpdateParametersMapper,
  ModuleUpdateParameters as ModuleUpdateParametersMapper,
  ScheduleCreateOrUpdateParameters as ScheduleCreateOrUpdateParametersMapper,
  ScheduleUpdateParameters as ScheduleUpdateParametersMapper,
  VariableCreateOrUpdateParameters as VariableCreateOrUpdateParametersMapper,
  VariableUpdateParameters as VariableUpdateParametersMapper,
  Watcher as WatcherMapper,
  WatcherUpdateParameters as WatcherUpdateParametersMapper,
  DscConfigurationCreateOrUpdateParameters as DscConfigurationCreateOrUpdateParametersMapper,
  DscConfigurationUpdateParameters as DscConfigurationUpdateParametersMapper,
  JobCreateParameters as JobCreateParametersMapper,
  GraphicalRunbookContent as GraphicalRunbookContentMapper,
  SoftwareUpdateConfiguration as SoftwareUpdateConfigurationMapper,
  RunbookCreateOrUpdateParameters as RunbookCreateOrUpdateParametersMapper,
  RunbookUpdateParameters as RunbookUpdateParametersMapper,
  TestJobCreateParameters as TestJobCreateParametersMapper,
  WebhookCreateOrUpdateParameters as WebhookCreateOrUpdateParametersMapper,
  WebhookUpdateParameters as WebhookUpdateParametersMapper,
  HybridRunbookWorkerCreateParameters as HybridRunbookWorkerCreateParametersMapper,
  HybridRunbookWorkerMoveParameters as HybridRunbookWorkerMoveParametersMapper,
  HybridRunbookWorkerGroupCreateOrUpdateParameters as HybridRunbookWorkerGroupCreateOrUpdateParametersMapper
} from "../models/mappers";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const resourceGroupName: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[-\\w\\._]+$"),
      MaxLength: 90,
      MinLength: 1
    },
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2020-01-13-preview",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const automationAccountName: OperationURLParameter = {
  parameterPath: "automationAccountName",
  mapper: {
    serializedName: "automationAccountName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const privateEndpointConnectionName: OperationURLParameter = {
  parameterPath: "privateEndpointConnectionName",
  mapper: {
    serializedName: "privateEndpointConnectionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const parameters: OperationParameter = {
  parameterPath: "parameters",
  mapper: PrivateEndpointConnectionMapper
};

export const packageName: OperationURLParameter = {
  parameterPath: "packageName",
  mapper: {
    serializedName: "packageName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters1: OperationParameter = {
  parameterPath: "parameters",
  mapper: PythonPackageCreateParametersMapper
};

export const parameters2: OperationParameter = {
  parameterPath: "parameters",
  mapper: PythonPackageUpdateParametersMapper
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const parameters3: OperationParameter = {
  parameterPath: "parameters",
  mapper: AgentRegistrationRegenerateKeyParameterMapper
};

export const nodeId: OperationURLParameter = {
  parameterPath: "nodeId",
  mapper: {
    serializedName: "nodeId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const dscNodeUpdateParameters: OperationParameter = {
  parameterPath: "dscNodeUpdateParameters",
  mapper: DscNodeUpdateParametersMapper
};

export const filter: OperationQueryParameter = {
  parameterPath: ["options", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const skip: OperationQueryParameter = {
  parameterPath: ["options", "skip"],
  mapper: {
    serializedName: "$skip",
    type: {
      name: "Number"
    }
  }
};

export const top: OperationQueryParameter = {
  parameterPath: ["options", "top"],
  mapper: {
    serializedName: "$top",
    type: {
      name: "Number"
    }
  }
};

export const inlinecount: OperationQueryParameter = {
  parameterPath: ["options", "inlinecount"],
  mapper: {
    serializedName: "$inlinecount",
    type: {
      name: "String"
    }
  }
};

export const reportId: OperationURLParameter = {
  parameterPath: "reportId",
  mapper: {
    serializedName: "reportId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const nodeConfigurationName: OperationURLParameter = {
  parameterPath: "nodeConfigurationName",
  mapper: {
    serializedName: "nodeConfigurationName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters4: OperationParameter = {
  parameterPath: "parameters",
  mapper: DscNodeConfigurationCreateOrUpdateParametersMapper
};

export const parameters5: OperationParameter = {
  parameterPath: "parameters",
  mapper: DscCompilationJobCreateParametersMapper
};

export const compilationJobName: OperationURLParameter = {
  parameterPath: "compilationJobName",
  mapper: {
    serializedName: "compilationJobName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const jobId: OperationURLParameter = {
  parameterPath: "jobId",
  mapper: {
    serializedName: "jobId",
    required: true,
    type: {
      name: "Uuid"
    }
  }
};

export const jobStreamId: OperationURLParameter = {
  parameterPath: "jobStreamId",
  mapper: {
    serializedName: "jobStreamId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const countType: OperationURLParameter = {
  parameterPath: "countType",
  mapper: {
    serializedName: "countType",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters6: OperationParameter = {
  parameterPath: "parameters",
  mapper: SourceControlCreateOrUpdateParametersMapper
};

export const sourceControlName: OperationURLParameter = {
  parameterPath: "sourceControlName",
  mapper: {
    serializedName: "sourceControlName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters7: OperationParameter = {
  parameterPath: "parameters",
  mapper: SourceControlUpdateParametersMapper
};

export const parameters8: OperationParameter = {
  parameterPath: "parameters",
  mapper: SourceControlSyncJobCreateParametersMapper
};

export const sourceControlSyncJobId: OperationURLParameter = {
  parameterPath: "sourceControlSyncJobId",
  mapper: {
    serializedName: "sourceControlSyncJobId",
    required: true,
    type: {
      name: "Uuid"
    }
  }
};

export const streamId: OperationURLParameter = {
  parameterPath: "streamId",
  mapper: {
    serializedName: "streamId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters9: OperationParameter = {
  parameterPath: "parameters",
  mapper: AutomationAccountUpdateParametersMapper
};

export const apiVersion1: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2021-06-22",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const parameters10: OperationParameter = {
  parameterPath: "parameters",
  mapper: AutomationAccountCreateOrUpdateParametersMapper
};

export const certificateName: OperationURLParameter = {
  parameterPath: "certificateName",
  mapper: {
    serializedName: "certificateName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters11: OperationParameter = {
  parameterPath: "parameters",
  mapper: CertificateCreateOrUpdateParametersMapper
};

export const parameters12: OperationParameter = {
  parameterPath: "parameters",
  mapper: CertificateUpdateParametersMapper
};

export const connectionName: OperationURLParameter = {
  parameterPath: "connectionName",
  mapper: {
    serializedName: "connectionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters13: OperationParameter = {
  parameterPath: "parameters",
  mapper: ConnectionCreateOrUpdateParametersMapper
};

export const parameters14: OperationParameter = {
  parameterPath: "parameters",
  mapper: ConnectionUpdateParametersMapper
};

export const connectionTypeName: OperationURLParameter = {
  parameterPath: "connectionTypeName",
  mapper: {
    serializedName: "connectionTypeName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters15: OperationParameter = {
  parameterPath: "parameters",
  mapper: ConnectionTypeCreateOrUpdateParametersMapper
};

export const credentialName: OperationURLParameter = {
  parameterPath: "credentialName",
  mapper: {
    serializedName: "credentialName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters16: OperationParameter = {
  parameterPath: "parameters",
  mapper: CredentialCreateOrUpdateParametersMapper
};

export const parameters17: OperationParameter = {
  parameterPath: "parameters",
  mapper: CredentialUpdateParametersMapper
};

export const jobScheduleId: OperationURLParameter = {
  parameterPath: "jobScheduleId",
  mapper: {
    serializedName: "jobScheduleId",
    required: true,
    type: {
      name: "Uuid"
    }
  }
};

export const parameters18: OperationParameter = {
  parameterPath: "parameters",
  mapper: JobScheduleCreateParametersMapper
};

export const moduleName: OperationURLParameter = {
  parameterPath: "moduleName",
  mapper: {
    serializedName: "moduleName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const activityName: OperationURLParameter = {
  parameterPath: "activityName",
  mapper: {
    serializedName: "activityName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters19: OperationParameter = {
  parameterPath: "parameters",
  mapper: ModuleCreateOrUpdateParametersMapper
};

export const parameters20: OperationParameter = {
  parameterPath: "parameters",
  mapper: ModuleUpdateParametersMapper
};

export const typeName: OperationURLParameter = {
  parameterPath: "typeName",
  mapper: {
    serializedName: "typeName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters21: OperationParameter = {
  parameterPath: "parameters",
  mapper: ScheduleCreateOrUpdateParametersMapper
};

export const scheduleName: OperationURLParameter = {
  parameterPath: "scheduleName",
  mapper: {
    serializedName: "scheduleName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters22: OperationParameter = {
  parameterPath: "parameters",
  mapper: ScheduleUpdateParametersMapper
};

export const parameters23: OperationParameter = {
  parameterPath: "parameters",
  mapper: VariableCreateOrUpdateParametersMapper
};

export const variableName: OperationURLParameter = {
  parameterPath: "variableName",
  mapper: {
    serializedName: "variableName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters24: OperationParameter = {
  parameterPath: "parameters",
  mapper: VariableUpdateParametersMapper
};

export const parameters25: OperationParameter = {
  parameterPath: "parameters",
  mapper: WatcherMapper
};

export const watcherName: OperationURLParameter = {
  parameterPath: "watcherName",
  mapper: {
    serializedName: "watcherName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters26: OperationParameter = {
  parameterPath: "parameters",
  mapper: WatcherUpdateParametersMapper
};

export const configurationName: OperationURLParameter = {
  parameterPath: "configurationName",
  mapper: {
    serializedName: "configurationName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const apiVersion2: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2019-06-01",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const contentType1: OperationParameter = {
  parameterPath: "contentType",
  mapper: {
    defaultValue: "text/plain; charset=utf-8",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const parameters27: OperationParameter = {
  parameterPath: "parameters",
  mapper: {
    serializedName: "parameters",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const accept1: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const contentType2: OperationParameter = {
  parameterPath: "contentType",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const parameters28: OperationParameter = {
  parameterPath: "parameters",
  mapper: DscConfigurationCreateOrUpdateParametersMapper
};

export const parameters29: OperationParameter = {
  parameterPath: ["options", "parameters"],
  mapper: {
    serializedName: "parameters",
    type: {
      name: "String"
    }
  }
};

export const parameters30: OperationParameter = {
  parameterPath: ["options", "parameters"],
  mapper: DscConfigurationUpdateParametersMapper
};

export const accept2: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "text/powershell",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const accept3: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "text/plain",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const jobName: OperationURLParameter = {
  parameterPath: "jobName",
  mapper: {
    serializedName: "jobName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const clientRequestId: OperationParameter = {
  parameterPath: ["options", "clientRequestId"],
  mapper: {
    serializedName: "clientRequestId",
    type: {
      name: "String"
    }
  }
};

export const parameters31: OperationParameter = {
  parameterPath: "parameters",
  mapper: JobCreateParametersMapper
};

export const parameters32: OperationParameter = {
  parameterPath: "parameters",
  mapper: GraphicalRunbookContentMapper
};

export const parameters33: OperationParameter = {
  parameterPath: "parameters",
  mapper: SoftwareUpdateConfigurationMapper
};

export const softwareUpdateConfigurationName: OperationURLParameter = {
  parameterPath: "softwareUpdateConfigurationName",
  mapper: {
    serializedName: "softwareUpdateConfigurationName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const softwareUpdateConfigurationRunId: OperationURLParameter = {
  parameterPath: "softwareUpdateConfigurationRunId",
  mapper: {
    serializedName: "softwareUpdateConfigurationRunId",
    required: true,
    type: {
      name: "Uuid"
    }
  }
};

export const skip1: OperationQueryParameter = {
  parameterPath: ["options", "skip"],
  mapper: {
    serializedName: "$skip",
    type: {
      name: "String"
    }
  }
};

export const top1: OperationQueryParameter = {
  parameterPath: ["options", "top"],
  mapper: {
    serializedName: "$top",
    type: {
      name: "String"
    }
  }
};

export const softwareUpdateConfigurationMachineRunId: OperationURLParameter = {
  parameterPath: "softwareUpdateConfigurationMachineRunId",
  mapper: {
    serializedName: "softwareUpdateConfigurationMachineRunId",
    required: true,
    type: {
      name: "Uuid"
    }
  }
};

export const runbookName: OperationURLParameter = {
  parameterPath: "runbookName",
  mapper: {
    serializedName: "runbookName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const apiVersion3: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2018-06-30",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const contentType3: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "text/powershell",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const runbookContent: OperationParameter = {
  parameterPath: "runbookContent",
  mapper: {
    serializedName: "runbookContent",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters34: OperationParameter = {
  parameterPath: "parameters",
  mapper: RunbookCreateOrUpdateParametersMapper
};

export const parameters35: OperationParameter = {
  parameterPath: "parameters",
  mapper: RunbookUpdateParametersMapper
};

export const parameters36: OperationParameter = {
  parameterPath: "parameters",
  mapper: TestJobCreateParametersMapper
};

export const apiVersion4: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2015-10-31",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const webhookName: OperationURLParameter = {
  parameterPath: "webhookName",
  mapper: {
    serializedName: "webhookName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters37: OperationParameter = {
  parameterPath: "parameters",
  mapper: WebhookCreateOrUpdateParametersMapper
};

export const parameters38: OperationParameter = {
  parameterPath: "parameters",
  mapper: WebhookUpdateParametersMapper
};

export const hybridRunbookWorkerGroupName: OperationURLParameter = {
  parameterPath: "hybridRunbookWorkerGroupName",
  mapper: {
    serializedName: "hybridRunbookWorkerGroupName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const hybridRunbookWorkerId: OperationURLParameter = {
  parameterPath: "hybridRunbookWorkerId",
  mapper: {
    serializedName: "hybridRunbookWorkerId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const hybridRunbookWorkerCreationParameters: OperationParameter = {
  parameterPath: "hybridRunbookWorkerCreationParameters",
  mapper: HybridRunbookWorkerCreateParametersMapper
};

export const hybridRunbookWorkerMoveParameters: OperationParameter = {
  parameterPath: "hybridRunbookWorkerMoveParameters",
  mapper: HybridRunbookWorkerMoveParametersMapper
};

export const apiVersion5: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2022-01-31",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const apiVersion6: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2022-02-22",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const hybridRunbookWorkerGroupCreationParameters: OperationParameter = {
  parameterPath: "hybridRunbookWorkerGroupCreationParameters",
  mapper: HybridRunbookWorkerGroupCreateOrUpdateParametersMapper
};

export const hybridRunbookWorkerGroupUpdationParameters: OperationParameter = {
  parameterPath: "hybridRunbookWorkerGroupUpdationParameters",
  mapper: HybridRunbookWorkerGroupCreateOrUpdateParametersMapper
};
