/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { DeletedAutomationAccounts } from "../operationsInterfaces/index.js";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers.js";
import * as Parameters from "../models/parameters.js";
import { AutomationClient } from "../automationClient.js";
import {
  DeletedAutomationAccountsListBySubscriptionOptionalParams,
  DeletedAutomationAccountsListBySubscriptionResponse
} from "../models/index.js";

/** Class containing DeletedAutomationAccounts operations. */
export class DeletedAutomationAccountsImpl
  implements DeletedAutomationAccounts {
  private readonly client: AutomationClient;

  /**
   * Initialize a new instance of the class DeletedAutomationAccounts class.
   * @param client Reference to the service client
   */
  constructor(client: AutomationClient) {
    this.client = client;
  }

  /**
   * Retrieve deleted automation account.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: DeletedAutomationAccountsListBySubscriptionOptionalParams
  ): Promise<DeletedAutomationAccountsListBySubscriptionResponse> {
    return this.client.sendOperationRequest(
      { options },
      listBySubscriptionOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const listBySubscriptionOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/providers/Microsoft.Automation/deletedAutomationAccounts",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.DeletedAutomationAccountListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion5],
  urlParameters: [Parameters.$host, Parameters.subscriptionId],
  headerParameters: [Parameters.accept],
  serializer
};
