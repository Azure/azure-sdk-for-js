/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  DscConfiguration,
  DscConfigurationListByAutomationAccountOptionalParams,
  DscConfigurationDeleteOptionalParams,
  DscConfigurationGetOptionalParams,
  DscConfigurationGetResponse,
  DscConfigurationCreateOrUpdate$textOptionalParams,
  DscConfigurationCreateOrUpdateParameters,
  DscConfigurationCreateOrUpdate$jsonOptionalParams,
  DscConfigurationCreateOrUpdateResponse,
  DscConfigurationUpdate$textOptionalParams,
  DscConfigurationUpdate$jsonOptionalParams,
  DscConfigurationUpdateResponse,
  DscConfigurationGetContentOptionalParams,
  DscConfigurationGetContentResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a DscConfigurationOperations. */
export interface DscConfigurationOperations {
  /**
   * Retrieve a list of configurations.
   * @param resourceGroupName Name of an Azure Resource group.
   * @param automationAccountName The name of the automation account.
   * @param options The options parameters.
   */
  listByAutomationAccount(
    resourceGroupName: string,
    automationAccountName: string,
    options?: DscConfigurationListByAutomationAccountOptionalParams
  ): PagedAsyncIterableIterator<DscConfiguration>;
  /**
   * Delete the dsc configuration identified by configuration name.
   * @param resourceGroupName Name of an Azure Resource group.
   * @param automationAccountName The name of the automation account.
   * @param configurationName The configuration name.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    automationAccountName: string,
    configurationName: string,
    options?: DscConfigurationDeleteOptionalParams
  ): Promise<void>;
  /**
   * Retrieve the configuration identified by configuration name.
   * @param resourceGroupName Name of an Azure Resource group.
   * @param automationAccountName The name of the automation account.
   * @param configurationName The configuration name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    automationAccountName: string,
    configurationName: string,
    options?: DscConfigurationGetOptionalParams
  ): Promise<DscConfigurationGetResponse>;
  /**
   * Create the configuration identified by configuration name.
   * @param args Includes all the parameters for this operation.
   */
  createOrUpdate(
    ...args:
      | [
          string,
          string,
          string,
          "text/plain; charset=utf-8",
          string,
          DscConfigurationCreateOrUpdate$textOptionalParams?
        ]
      | [
          string,
          string,
          string,
          "application/json",
          DscConfigurationCreateOrUpdateParameters,
          DscConfigurationCreateOrUpdate$jsonOptionalParams?
        ]
  ): Promise<DscConfigurationCreateOrUpdateResponse>;
  /**
   * Create the configuration identified by configuration name.
   * @param args Includes all the parameters for this operation.
   */
  update(
    ...args:
      | [
          string,
          string,
          string,
          "text/plain; charset=utf-8",
          DscConfigurationUpdate$textOptionalParams?
        ]
      | [
          string,
          string,
          string,
          "application/json",
          DscConfigurationUpdate$jsonOptionalParams?
        ]
  ): Promise<DscConfigurationUpdateResponse>;
  /**
   * Retrieve the configuration script identified by configuration name.
   * @param resourceGroupName Name of an Azure Resource group.
   * @param automationAccountName The name of the automation account.
   * @param configurationName The configuration name.
   * @param options The options parameters.
   */
  getContent(
    resourceGroupName: string,
    automationAccountName: string,
    configurationName: string,
    options?: DscConfigurationGetContentOptionalParams
  ): Promise<DscConfigurationGetContentResponse>;
}
