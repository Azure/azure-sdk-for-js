/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Watcher,
  WatcherListByAutomationAccountOptionalParams,
  WatcherCreateOrUpdateOptionalParams,
  WatcherCreateOrUpdateResponse,
  WatcherGetOptionalParams,
  WatcherGetResponse,
  WatcherUpdateParameters,
  WatcherUpdateOptionalParams,
  WatcherUpdateResponse,
  WatcherDeleteOptionalParams,
  WatcherStartOptionalParams,
  WatcherStopOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a WatcherOperations. */
export interface WatcherOperations {
  /**
   * Retrieve a list of watchers.
   * @param resourceGroupName Name of an Azure Resource group.
   * @param automationAccountName The name of the automation account.
   * @param options The options parameters.
   */
  listByAutomationAccount(
    resourceGroupName: string,
    automationAccountName: string,
    options?: WatcherListByAutomationAccountOptionalParams
  ): PagedAsyncIterableIterator<Watcher>;
  /**
   * Create the watcher identified by watcher name.
   * @param resourceGroupName Name of an Azure Resource group.
   * @param automationAccountName The name of the automation account.
   * @param watcherName The watcher name.
   * @param parameters The create or update parameters for watcher.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    automationAccountName: string,
    watcherName: string,
    parameters: Watcher,
    options?: WatcherCreateOrUpdateOptionalParams
  ): Promise<WatcherCreateOrUpdateResponse>;
  /**
   * Retrieve the watcher identified by watcher name.
   * @param resourceGroupName Name of an Azure Resource group.
   * @param automationAccountName The name of the automation account.
   * @param watcherName The watcher name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    automationAccountName: string,
    watcherName: string,
    options?: WatcherGetOptionalParams
  ): Promise<WatcherGetResponse>;
  /**
   * Update the watcher identified by watcher name.
   * @param resourceGroupName Name of an Azure Resource group.
   * @param automationAccountName The name of the automation account.
   * @param watcherName The watcher name.
   * @param parameters The update parameters for watcher.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    automationAccountName: string,
    watcherName: string,
    parameters: WatcherUpdateParameters,
    options?: WatcherUpdateOptionalParams
  ): Promise<WatcherUpdateResponse>;
  /**
   * Delete the watcher by name.
   * @param resourceGroupName Name of an Azure Resource group.
   * @param automationAccountName The name of the automation account.
   * @param watcherName The watcher name.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    automationAccountName: string,
    watcherName: string,
    options?: WatcherDeleteOptionalParams
  ): Promise<void>;
  /**
   * Resume the watcher identified by watcher name.
   * @param resourceGroupName Name of an Azure Resource group.
   * @param automationAccountName The name of the automation account.
   * @param watcherName The watcher name.
   * @param options The options parameters.
   */
  start(
    resourceGroupName: string,
    automationAccountName: string,
    watcherName: string,
    options?: WatcherStartOptionalParams
  ): Promise<void>;
  /**
   * Resume the watcher identified by watcher name.
   * @param resourceGroupName Name of an Azure Resource group.
   * @param automationAccountName The name of the automation account.
   * @param watcherName The watcher name.
   * @param options The options parameters.
   */
  stop(
    resourceGroupName: string,
    automationAccountName: string,
    watcherName: string,
    options?: WatcherStopOptionalParams
  ): Promise<void>;
}
