/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/sourceControlSyncJobOperationsMappers";
import * as Parameters from "../models/parameters";
import { AutomationClientContext } from "../automationClientContext";

/** Class representing a SourceControlSyncJobOperations. */
export class SourceControlSyncJobOperations {
  private readonly client: AutomationClientContext;

  /**
   * Create a SourceControlSyncJobOperations.
   * @param {AutomationClientContext} client Reference to the service client.
   */
  constructor(client: AutomationClientContext) {
    this.client = client;
  }

  /**
   * Creates the sync job for a source control.
   * @param resourceGroupName Name of an Azure Resource group.
   * @param automationAccountName The name of the automation account.
   * @param sourceControlName The source control name.
   * @param sourceControlSyncJobId The source control sync job id.
   * @param parameters The parameters supplied to the create source control sync job operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.SourceControlSyncJobCreateResponse>
   */
  create(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, parameters: Models.SourceControlSyncJobCreateParameters, options?: msRest.RequestOptionsBase): Promise<Models.SourceControlSyncJobCreateResponse>;
  /**
   * @param resourceGroupName Name of an Azure Resource group.
   * @param automationAccountName The name of the automation account.
   * @param sourceControlName The source control name.
   * @param sourceControlSyncJobId The source control sync job id.
   * @param parameters The parameters supplied to the create source control sync job operation.
   * @param callback The callback
   */
  create(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, parameters: Models.SourceControlSyncJobCreateParameters, callback: msRest.ServiceCallback<Models.SourceControlSyncJob>): void;
  /**
   * @param resourceGroupName Name of an Azure Resource group.
   * @param automationAccountName The name of the automation account.
   * @param sourceControlName The source control name.
   * @param sourceControlSyncJobId The source control sync job id.
   * @param parameters The parameters supplied to the create source control sync job operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  create(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, parameters: Models.SourceControlSyncJobCreateParameters, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SourceControlSyncJob>): void;
  create(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, parameters: Models.SourceControlSyncJobCreateParameters, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SourceControlSyncJob>, callback?: msRest.ServiceCallback<Models.SourceControlSyncJob>): Promise<Models.SourceControlSyncJobCreateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        automationAccountName,
        sourceControlName,
        sourceControlSyncJobId,
        parameters,
        options
      },
      createOperationSpec,
      callback) as Promise<Models.SourceControlSyncJobCreateResponse>;
  }

  /**
   * Retrieve the source control sync job identified by job id.
   * @param resourceGroupName Name of an Azure Resource group.
   * @param automationAccountName The name of the automation account.
   * @param sourceControlName The source control name.
   * @param sourceControlSyncJobId The source control sync job id.
   * @param [options] The optional parameters
   * @returns Promise<Models.SourceControlSyncJobGetResponse>
   */
  get(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, options?: msRest.RequestOptionsBase): Promise<Models.SourceControlSyncJobGetResponse>;
  /**
   * @param resourceGroupName Name of an Azure Resource group.
   * @param automationAccountName The name of the automation account.
   * @param sourceControlName The source control name.
   * @param sourceControlSyncJobId The source control sync job id.
   * @param callback The callback
   */
  get(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, callback: msRest.ServiceCallback<Models.SourceControlSyncJobById>): void;
  /**
   * @param resourceGroupName Name of an Azure Resource group.
   * @param automationAccountName The name of the automation account.
   * @param sourceControlName The source control name.
   * @param sourceControlSyncJobId The source control sync job id.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SourceControlSyncJobById>): void;
  get(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SourceControlSyncJobById>, callback?: msRest.ServiceCallback<Models.SourceControlSyncJobById>): Promise<Models.SourceControlSyncJobGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        automationAccountName,
        sourceControlName,
        sourceControlSyncJobId,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.SourceControlSyncJobGetResponse>;
  }

  /**
   * Retrieve a list of source control sync jobs.
   * @param resourceGroupName Name of an Azure Resource group.
   * @param automationAccountName The name of the automation account.
   * @param sourceControlName The source control name.
   * @param [options] The optional parameters
   * @returns Promise<Models.SourceControlSyncJobListByAutomationAccountResponse>
   */
  listByAutomationAccount(resourceGroupName: string, automationAccountName: string, sourceControlName: string, options?: Models.SourceControlSyncJobListByAutomationAccountOptionalParams): Promise<Models.SourceControlSyncJobListByAutomationAccountResponse>;
  /**
   * @param resourceGroupName Name of an Azure Resource group.
   * @param automationAccountName The name of the automation account.
   * @param sourceControlName The source control name.
   * @param callback The callback
   */
  listByAutomationAccount(resourceGroupName: string, automationAccountName: string, sourceControlName: string, callback: msRest.ServiceCallback<Models.SourceControlSyncJobListResult>): void;
  /**
   * @param resourceGroupName Name of an Azure Resource group.
   * @param automationAccountName The name of the automation account.
   * @param sourceControlName The source control name.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByAutomationAccount(resourceGroupName: string, automationAccountName: string, sourceControlName: string, options: Models.SourceControlSyncJobListByAutomationAccountOptionalParams, callback: msRest.ServiceCallback<Models.SourceControlSyncJobListResult>): void;
  listByAutomationAccount(resourceGroupName: string, automationAccountName: string, sourceControlName: string, options?: Models.SourceControlSyncJobListByAutomationAccountOptionalParams | msRest.ServiceCallback<Models.SourceControlSyncJobListResult>, callback?: msRest.ServiceCallback<Models.SourceControlSyncJobListResult>): Promise<Models.SourceControlSyncJobListByAutomationAccountResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        automationAccountName,
        sourceControlName,
        options
      },
      listByAutomationAccountOperationSpec,
      callback) as Promise<Models.SourceControlSyncJobListByAutomationAccountResponse>;
  }

  /**
   * Retrieve a list of source control sync jobs.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.SourceControlSyncJobListByAutomationAccountNextResponse>
   */
  listByAutomationAccountNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.SourceControlSyncJobListByAutomationAccountNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByAutomationAccountNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.SourceControlSyncJobListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByAutomationAccountNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SourceControlSyncJobListResult>): void;
  listByAutomationAccountNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SourceControlSyncJobListResult>, callback?: msRest.ServiceCallback<Models.SourceControlSyncJobListResult>): Promise<Models.SourceControlSyncJobListByAutomationAccountNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByAutomationAccountNextOperationSpec,
      callback) as Promise<Models.SourceControlSyncJobListByAutomationAccountNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const createOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}/sourceControlSyncJobs/{sourceControlSyncJobId}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.automationAccountName,
    Parameters.sourceControlName,
    Parameters.sourceControlSyncJobId,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.SourceControlSyncJobCreateParameters,
      required: true
    }
  },
  responses: {
    201: {
      bodyMapper: Mappers.SourceControlSyncJob
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}/sourceControlSyncJobs/{sourceControlSyncJobId}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.automationAccountName,
    Parameters.sourceControlName,
    Parameters.sourceControlSyncJobId,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SourceControlSyncJobById
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByAutomationAccountOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}/sourceControlSyncJobs",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.automationAccountName,
    Parameters.sourceControlName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.filter,
    Parameters.apiVersion1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SourceControlSyncJobListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByAutomationAccountNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SourceControlSyncJobListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
