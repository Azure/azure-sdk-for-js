/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/sourceControlSyncJobStreamsMappers";
import * as Parameters from "../models/parameters";
import { AutomationClientContext } from "../automationClientContext";

/** Class representing a SourceControlSyncJobStreams. */
export class SourceControlSyncJobStreams {
  private readonly client: AutomationClientContext;

  /**
   * Create a SourceControlSyncJobStreams.
   * @param {AutomationClientContext} client Reference to the service client.
   */
  constructor(client: AutomationClientContext) {
    this.client = client;
  }

  /**
   * Retrieve a list of sync job streams identified by sync job id.
   * @param resourceGroupName Name of an Azure Resource group.
   * @param automationAccountName The name of the automation account.
   * @param sourceControlName The source control name.
   * @param sourceControlSyncJobId The source control sync job id.
   * @param [options] The optional parameters
   * @returns Promise<Models.SourceControlSyncJobStreamsListBySyncJobResponse>
   */
  listBySyncJob(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, options?: Models.SourceControlSyncJobStreamsListBySyncJobOptionalParams): Promise<Models.SourceControlSyncJobStreamsListBySyncJobResponse>;
  /**
   * @param resourceGroupName Name of an Azure Resource group.
   * @param automationAccountName The name of the automation account.
   * @param sourceControlName The source control name.
   * @param sourceControlSyncJobId The source control sync job id.
   * @param callback The callback
   */
  listBySyncJob(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, callback: msRest.ServiceCallback<Models.SourceControlSyncJobStreamsListBySyncJob>): void;
  /**
   * @param resourceGroupName Name of an Azure Resource group.
   * @param automationAccountName The name of the automation account.
   * @param sourceControlName The source control name.
   * @param sourceControlSyncJobId The source control sync job id.
   * @param options The optional parameters
   * @param callback The callback
   */
  listBySyncJob(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, options: Models.SourceControlSyncJobStreamsListBySyncJobOptionalParams, callback: msRest.ServiceCallback<Models.SourceControlSyncJobStreamsListBySyncJob>): void;
  listBySyncJob(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, options?: Models.SourceControlSyncJobStreamsListBySyncJobOptionalParams | msRest.ServiceCallback<Models.SourceControlSyncJobStreamsListBySyncJob>, callback?: msRest.ServiceCallback<Models.SourceControlSyncJobStreamsListBySyncJob>): Promise<Models.SourceControlSyncJobStreamsListBySyncJobResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        automationAccountName,
        sourceControlName,
        sourceControlSyncJobId,
        options
      },
      listBySyncJobOperationSpec,
      callback) as Promise<Models.SourceControlSyncJobStreamsListBySyncJobResponse>;
  }

  /**
   * Retrieve a sync job stream identified by stream id.
   * @param resourceGroupName Name of an Azure Resource group.
   * @param automationAccountName The name of the automation account.
   * @param sourceControlName The source control name.
   * @param sourceControlSyncJobId The source control sync job id.
   * @param streamId The id of the sync job stream.
   * @param [options] The optional parameters
   * @returns Promise<Models.SourceControlSyncJobStreamsGetResponse>
   */
  get(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, streamId: string, options?: msRest.RequestOptionsBase): Promise<Models.SourceControlSyncJobStreamsGetResponse>;
  /**
   * @param resourceGroupName Name of an Azure Resource group.
   * @param automationAccountName The name of the automation account.
   * @param sourceControlName The source control name.
   * @param sourceControlSyncJobId The source control sync job id.
   * @param streamId The id of the sync job stream.
   * @param callback The callback
   */
  get(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, streamId: string, callback: msRest.ServiceCallback<Models.SourceControlSyncJobStreamById>): void;
  /**
   * @param resourceGroupName Name of an Azure Resource group.
   * @param automationAccountName The name of the automation account.
   * @param sourceControlName The source control name.
   * @param sourceControlSyncJobId The source control sync job id.
   * @param streamId The id of the sync job stream.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, streamId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SourceControlSyncJobStreamById>): void;
  get(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, streamId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SourceControlSyncJobStreamById>, callback?: msRest.ServiceCallback<Models.SourceControlSyncJobStreamById>): Promise<Models.SourceControlSyncJobStreamsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        automationAccountName,
        sourceControlName,
        sourceControlSyncJobId,
        streamId,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.SourceControlSyncJobStreamsGetResponse>;
  }

  /**
   * Retrieve a list of sync job streams identified by sync job id.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.SourceControlSyncJobStreamsListBySyncJobNextResponse>
   */
  listBySyncJobNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.SourceControlSyncJobStreamsListBySyncJobNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listBySyncJobNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.SourceControlSyncJobStreamsListBySyncJob>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listBySyncJobNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SourceControlSyncJobStreamsListBySyncJob>): void;
  listBySyncJobNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SourceControlSyncJobStreamsListBySyncJob>, callback?: msRest.ServiceCallback<Models.SourceControlSyncJobStreamsListBySyncJob>): Promise<Models.SourceControlSyncJobStreamsListBySyncJobNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listBySyncJobNextOperationSpec,
      callback) as Promise<Models.SourceControlSyncJobStreamsListBySyncJobNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listBySyncJobOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}/sourceControlSyncJobs/{sourceControlSyncJobId}/streams",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.automationAccountName,
    Parameters.sourceControlName,
    Parameters.sourceControlSyncJobId,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.filter,
    Parameters.apiVersion1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SourceControlSyncJobStreamsListBySyncJob
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}/sourceControlSyncJobs/{sourceControlSyncJobId}/streams/{streamId}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.automationAccountName,
    Parameters.sourceControlName,
    Parameters.sourceControlSyncJobId,
    Parameters.streamId,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SourceControlSyncJobStreamById
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listBySyncJobNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SourceControlSyncJobStreamsListBySyncJob
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
