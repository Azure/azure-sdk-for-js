/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  env,
  Recorder,
  RecorderStartOptions,
  delay,
  isPlaybackMode,
} from "@azure-tools/test-recorder";
import { createTestCredential } from "@azure-tools/test-credential";
import { assert } from "chai";
import { Context } from "mocha";
import { DynatraceObservability } from "../src/dynatraceObservability";
import { MonitorResource } from "../src/models";


const replaceableVariables: Record<string, string> = {
  AZURE_CLIENT_ID: "azure_client_id",
  AZURE_CLIENT_SECRET: "azure_client_secret",
  AZURE_TENANT_ID: "88888888-8888-8888-8888-888888888888",
  SUBSCRIPTION_ID: "azure_subscription_id"
};

const recorderOptions: RecorderStartOptions = {
  envSetupForPlayback: replaceableVariables
};

export const testPollingOptions = {
  updateIntervalInMs: isPlaybackMode() ? 0 : undefined,
};

describe("Dynatrace test", () => {
  let recorder: Recorder;
  let subscriptionId: string;
  let client: DynatraceObservability;
  let location: string;
  let resourceGroup: string;
  let monitorName: string;
  let resource: MonitorResource;

  beforeEach(async function (this: Context) {
    recorder = new Recorder(this.currentTest);
    await recorder.start(recorderOptions);
    subscriptionId = env.SUBSCRIPTION_ID || '';
    // This is an example of how the environment variables are used
    const credential = createTestCredential();
    client = new DynatraceObservability(credential, subscriptionId, recorder.configureClientOptions({}));
    location = "eastus";
    resourceGroup = "myjstest";
    monitorName = "myMonitormtest";
    resource = {
      dynatraceEnvironmentProperties: {
        "userId": "275d25ea-1c94-42d1-88b4-ff9f57abe260",
        "accountInfo": {
          "accountId": "f6def7be-a538-43d9-a473-6e77720474e9",
          "regionId": "eastus"
        },
        "environmentInfo": {
          "environmentId": "zux69087",
          "logsIngestionEndpoint": "https://zux69087.live.dynatrace.com/api/v2/logs/ingest",
          "landingURL": "https://zux69087.live.dynatrace.com/"
        },
        "singleSignOnProperties": {
          "singleSignOnState": "Initial",
          "enterpriseAppId": "",
          "singleSignOnUrl": "",
          "aadDomains": [
            "drawbridge.com",
            "expresslogic.com",
            "euevents.microsoft.com",
            "video2brain.com",
            "averesystems.com",
            "initiativegaming.com",
            "mail1.averesystems.com",
            "seaofthieves.com",
            "Intentional.com",
            "m12.vc",
            "email.bing.com",
            "playfab.com",
            "itsm.microsoft.com",
            "Windows.mail.microsoft.com",
            "smtphost.microsoft.com",
            "exmail.microsoft.com",
            "altvr.com",
            "altspacevr.com",
            "corp.microsoft.com",
            "cyclecomputing.com",
            "cloudyn.com",
            "nuget.org",
            "microsoftsmarthq.com.au",
            "lockbox.microsoft.com",
            "acompli.com",
            "domains.microsoft",
            "service.linkedin.com",
            "microsoft.com",
            "eventscommunication.microsoft.com",
            "deis.com",
            "Lynda.com",
            "Newsle.com",
            "linkedin.com",
            "myemailing.microsoft.com",
            "maluuba.com",
            "internal.linkedin.cn",
            "linkedin.biz",
            "microsoftcan.onmicrosoft.com",
            "educatorcommunity.microsoft.com",
            "simplygon.com",
            "MicrosoftAPC.onmicrosoft.com",
            "messages2.microsoft.com",
            "MicrosoftEur.onmicrosoft.com",
            "security.microsoft.com",
            "robovm.com",
            "solaircorporate.com",
            "wandlabs.com",
            "azureemail.microsoft.com",
            "genee.me",
            "microsoftstudios.com",
            "bigpark.com",
            "bing.com",
            "corp.webtv.net",
            "HaloWaypoint.com",
            "musiwave.com",
            "navic.tv",
            "ntdev.corp.microsoft.com",
            "redmond.corp.microsoft.com",
            "europe.corp.microsoft.com",
            "middleeast.corp.microsoft.com",
            "exchange.corp.microsoft.com",
            "southamerica.corp.microsoft.com",
            "fareast.corp.microsoft.com",
            "winse.corp.microsoft.com",
            "mslpa.corp.microsoft.com",
            "windows.microsoft.com",
            "africa.corp.microsoft.com",
            "ntdev.microsoft.com",
            "wingroup.windeploy.ntdev.microsoft.com",
            "southpacific.corp.microsoft.com",
            "segroup.winse.corp.microsoft.com",
            "northamerica.corp.microsoft.com",
            "service.microsoft.com",
            "exchange.microsoft.com",
            "xbox.com",
            "zune.net",
            "msg.microsoft.com",
            "titanium.microsoft.com",
            "microsoft.mail.onmicrosoft.com",
            "filtering.exchange.microsoft.com",
            "skype.net",
            "hybrid.microsoft.com",
            "fbt.microsoft.com",
            "ageofempiresonline.com",
            "yammer-inc.com",
            "service.fbt.microsoft.com",
            "service.exchange.microsoft.com",
            "mslicense.com",
            "office365.microsoft.com",
            "crm.microsoft.com",
            "mssales.microsoft.com",
            "mssupport.microsoft.com",
            "smc.microsoft.com",
            "sharepointjournaling.exchange.microsoft.com",
            "wingroup.microsoft.com",
            "managed.microsoft.com",
            "serivce.exchange.microsoft.com",
            "primary.exchange.microsoft.com",
            "filtering.service.exchange.microsoft.com",
            "pioneer.exchange.microsoft.com",
            "wmislabcon01.redmond.corp.microsoft.com",
            "winfarmmail.ntdev.corp.microsoft.com",
            "WOSTIX-TEST.NTDEV.corp.microsoft.com",
            "SPSDOG4-27.redmond.corp.microsoft.com",
            "SPSDOG4-34.redmond.corp.microsoft.com",
            "spsdog4-16.redmond.corp.microsoft.com",
            "cyrusb-z400.redmond.corp.microsoft.com",
            "MOSSDOG2982.redmond.corp.microsoft.com",
            "osgwebindex.redmond.corp.microsoft.com",
            "wostcktiis01.redmond.corp.microsoft.com",
            "osgemail.redmond.corp.microsoft.com",
            "extranettest.microsoft.com",
            "pssupport.microsoft.com",
            "extranet.microsoft.com",
            "munich.microsoft.com",
            "news.microsoft.com",
            "mpsd.microsoft.com",
            "gmo.microsoft.com",
            "ims.microsoft.com",
            "partners.extranet.microsoft.com",
            "parttest.extranettest.microsoft.com",
            "mscourseware.com",
            "placeware.com",
            "nokia.microsoft.com",
            "winse.microsoft.com",
            "surface.com",
            "rare.co.uk",
            "screentonic.com",
            "mds.microsoft.com",
            "mail.microsoft.com",
            "mailflowtest.mail.microsoft.com",
            "aspproject.nl",
            "metricshub.com",
            "ageofempires.com",
            "azure.com",
            "fast.no",
            "microsoft.co.nz",
            "live.co.hu",
            "groupme.com",
            "aquantive.com",
            "fastsearch.com",
            "microsoft.tm.hu",
            "microsoft.ccsctp.com",
            "healthvault.com",
            "perceptivepixel.com",
            "marketingpilot.com",
            "phonefactor.com",
            "lucernepublishing.com",
            "vexcel.co.at",
            "vexscan.com",
            "qik.com",
            "parlano.com",
            "musiwave.net",
            "skype.com",
            "slimbezig.nl",
            "Softricity.com",
            "xboxtest.com",
            "groove.net",
            "008.mgd.microsoft.com",
            "vexcel.at",
            "windowslive.co.hu",
            "xbox360.co.hu",
            "xbox.co.hu",
            "microsoft.eu",
            "datallegro.com",
            "projectspark.com",
            "Storesimple.com",
            "Phonefactor.net",
            "yadata.com",
            "microsoft.onmicrosoft.com",
            "zone.com",
            "view012.de",
            "greenbutton.com",
            "css.one.microsoft.com",
            "proclarity.com",
            "rareware.com",
            "capptain.com",
            "mgd.microsoft.com",
            "064d.mgd.microsoft.com",
            "inmage.net",
            "inmage.com",
            "bingnews.microsoft.com",
            "aorato.com",
            "api.yammer.com",
            "email.microsoft.com",
            "officelabs.microsoft.com",
            "Codenauts.com",
            "codenauts.de",
            "Hockeyapp.com",
            "qa2.parature.net",
            "componentart.com",
            "datazen.com",
            "nuvolarosa.eu",
            "bayiportali.mmdservice.com",
            "inside-r.org",
            "Getliveloop.com",
            "Sunrise.am",
            "incentgames.com",
            "doublelabs.com",
            "Fantasysalesteam.com",
            "clickdimensions.Microsoft.com",
            "volometrix.com",
            "bluestripe.com",
            "time.microsoft.com",
            "revolutionanalytics.com",
            "inside-r.com",
            "revolution-computing.com",
            "fieldone.com",
            "Pioneerinteractive.com",
            "msitsupp.microsoft.com",
            "metanautix.com",
            "dwh.io",
            "pressplay.dk",
            "adxstudio.com",
            "Havok.com",
            "Trinigy.net",
            "Projectanarchy.com",
            "Rocketbox.de",
            "cloudappsecurity.com",
            "email-2.microsoft.com",
            "Swiftkey.com",
            "Swiftkey.net",
            "Swiftmoji.com",
            "Touchtype-online.com",
            "msfts2.onmicrosoft.com",
            "msfts2.mail.onmicrosoft.com",
            "Xamarin.com",
            "secureislands.com",
            "gears.gg",
            "promoteiq.com",
            "sangamemail.microsoft.com",
            "preonboarding.microsoft.com",
            "microsoftprd.onmicrosoft.com",
            "bluetalon.com",
            "citusdata.com",
            "spotfront.com",
            "dcat.microsoft.com",
            "jclarity.com",
            "msftdomains.microsoft.com",
            "msra.microsoft.com",
            "sales.microsoft.com",
            "askhr.microsoft.com",
            "idwebmail.microsoft.com",
            "movere.io",
            "thefightisinus.org",
            "Unifiedlogic.com",
            "mover.io",
            "msads.microsoft.com",
            "winautomation.com",
            "softomotive.com",
            "wsus.ci-fx.microsoft.com",
            "gta.microsoft.com",
            "email2.microsoft.com",
            "cloudtest.microsoft.com",
            "cyberx-labs.com",
            "elk-vepc-mon.microsoft.com",
            "pgsurvey.microsoft.com",
            "tex.quantum.microsoft.com",
            "healthcheck.microsoft.com",
            "TransportInAzure.microsoft.com",
            "robin-language.org",
            "githubenterprise.microsoft.com",
            "azcis.microsoft.com",
            "microsoft.affirmednetworks.com",
            "msconnectmail.microsoft.com",
            "mojang.com",
            "affirmedNetworks.com",
            "dmarc.microsoft",
            "microsoft4-corp-us.tao-globalvoice.com",
            "microsoft4-corp-us2.tao-globalvoice.com",
            "stock.microsoft.com",
            "groups.metaswitch.com",
            "e-mail.microsoft.com",
            "bounce.e-mail.microsoft.com",
            "themarsdengroup.com",
            "globalmobility.microsoft.com",
            "showvine.com",
            "smash.gg",
            "clearui.com",
            "clearsoftware.com",
            "takelessons.com",
            "servicescout.com",
            "surveys.microsoft.com",
            "commuteconnection.linkedin.com",
            "sap.microsoft.com",
            "start.gg",
            "mail.support.microsoft.com",
            "trp.microsoft.com",
            "suplari.com",
            "erpsystem.microsoft.com",
            "p5cdn.com",
            "vdosupreme.com",
            "peer5.com",
            "azns.microsoft.com",
            "vc.linkedin.com",
            "cloudknox.io",
            "aka.ms"
          ],
          "provisioningState": "Accepted"
        }
      },
      "type": "dynatrace.observability/monitors",
      "identity": {
        "principalId": "cb52ef72-dbaf-4668-9674-5d397579a6e9",
        "tenantId": "88888888-8888-8888-8888-888888888888",
        "type": "SystemAssigned"
      },
      location: location,
      "monitoringStatus": "Enabled",
      "marketplaceSubscriptionStatus": "Active",
      "planData": {
        "usageType": "COMMITTED",
        "billingCycle": "Monthly",
        "planDetails": "azureportalintegration_privatepreview@TIDhjdtn7tfnxcy",
        "effectiveDate": new Date("2022-09-19T09:08:15.017Z")
      },
      tags: { environment: "Dev" },
      "userInfo": {
        "firstName": "Mary",
        "lastName": "Gao",
        "emailAddress": "marygao@microsoft.com",
        "phoneNumber": "\u002B86 (21) 61882414",
        "country": ""
      },
    }
  });

  afterEach(async function () {
    await recorder.stop();
  });

  it("monitor create test", async function () {
    const res = await client.monitors.beginCreateOrUpdateAndWait(
      resourceGroup,
      monitorName,
      resource,
      testPollingOptions);
    assert.equal(res.name, monitorName);
  });

  it("monitor get test", async function () {
    const res = await client.monitors.get(
      resourceGroup,
      monitorName,
    );
    assert.equal(res.name, monitorName);
  });

  it("monitor list test", async function () {
    const resArray = new Array();
    for await (let item of client.monitors.listByResourceGroup(resourceGroup)) {
      resArray.push(item);
    }
    assert.equal(resArray.length, 2);
  });

  it("monitor delete test", async function () {
    const resArray = new Array();
    const res = await client.monitors.beginDeleteAndWait(resourceGroup, monitorName)
    for await (let item of client.monitors.listByResourceGroup(resourceGroup)) {
      resArray.push(item);
    }
    assert.equal(resArray.length, 1);
  });
});
