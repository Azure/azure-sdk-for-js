/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as operations from "./operations";
import { MicrosoftLogzContext } from "./microsoftLogzContext";


class MicrosoftLogz extends MicrosoftLogzContext {
  // Operation groups
  monitors: operations.Monitors;
  operations: operations.Operations;
  tagRules: operations.TagRules;
  singleSignOn: operations.SingleSignOn;
  subAccount: operations.SubAccount;
  subAccountTagRules: operations.SubAccountTagRules;

  /**
   * Initializes a new instance of the MicrosoftLogz class.
   * @param credentials Credentials needed for the client to connect to Azure.
   * @param subscriptionId The ID of the target subscription.
   * @param [options] The parameter options
   */
  constructor(credentials: msRest.ServiceClientCredentials, subscriptionId: string, options?: Models.MicrosoftLogzOptions) {
    super(credentials, subscriptionId, options);
    this.monitors = new operations.Monitors(this);
    this.operations = new operations.Operations(this);
    this.tagRules = new operations.TagRules(this);
    this.singleSignOn = new operations.SingleSignOn(this);
    this.subAccount = new operations.SubAccount(this);
    this.subAccountTagRules = new operations.SubAccountTagRules(this);
  }
}

// Operation Specifications

export {
  MicrosoftLogz,
  MicrosoftLogzContext,
  Models as MicrosoftLogzModels,
  Mappers as MicrosoftLogzMappers
};
export * from "./operations";
