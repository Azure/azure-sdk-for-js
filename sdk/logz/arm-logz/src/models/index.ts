/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
export interface SystemData {
  /**
   * The identity that created the resource.
   */
  createdBy?: string;
  /**
   * The type of identity that created the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  createdByType?: CreatedByType;
  /**
   * The timestamp of resource creation (UTC).
   */
  createdAt?: Date;
  /**
   * The identity that last modified the resource.
   */
  lastModifiedBy?: string;
  /**
   * The type of identity that last modified the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  lastModifiedByType?: CreatedByType;
  /**
   * The timestamp of resource last modification (UTC)
   */
  lastModifiedAt?: Date;
}

/**
 * The properties of a resource currently being monitored by the Logz monitor resource.
 */
export interface MonitoredResource {
  /**
   * The ARM id of the resource.
   */
  id?: string;
  /**
   * Flag indicating if resource is sending metrics to Logz.
   */
  sendingMetrics?: boolean;
  /**
   * Reason for why the resource is sending metrics (or why it is not sending).
   */
  reasonForMetricsStatus?: string;
  /**
   * Flag indicating if resource is sending logs to Logz.
   */
  sendingLogs?: boolean;
  systemData?: SystemData;
  /**
   * Reason for why the resource is sending logs (or why it is not sending).
   */
  reasonForLogsStatus?: string;
}

/**
 * The object that represents the operation.
 */
export interface OperationDisplay {
  /**
   * Service provider, i.e., Microsoft.Logz.
   */
  provider?: string;
  /**
   * Type on which the operation is performed, e.g., 'monitors'.
   */
  resource?: string;
  /**
   * Operation type, e.g., read, write, delete, etc.
   */
  operation?: string;
  /**
   * Description of the operation, e.g., 'Write monitors'.
   */
  description?: string;
}

/**
 * A Microsoft.Logz REST API operation.
 */
export interface OperationResult {
  /**
   * Operation name, i.e., {provider}/{resource}/{operation}.
   */
  name?: string;
  /**
   * Indicates whether the operation is a data action
   */
  isDataAction?: boolean;
  display?: OperationDisplay;
  /**
   * Origin of the operation
   */
  origin?: string;
}

/**
 * An interface representing LogzOrganizationProperties.
 */
export interface LogzOrganizationProperties {
  /**
   * Name of the Logz organization.
   */
  companyName?: string;
  /**
   * Id of the Logz organization.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The Id of the Enterprise App used for Single sign on.
   */
  enterpriseAppId?: string;
}

/**
 * An interface representing UserInfo.
 */
export interface UserInfo {
  /**
   * First Name of the user
   */
  firstName?: string;
  /**
   * Last Name of the user
   */
  lastName?: string;
  /**
   * Email of the user used by Logz for contacting them if needed
   */
  emailAddress?: string;
  /**
   * Phone number of the user used by Logz for contacting them if needed
   */
  phoneNumber?: string;
}

/**
 * An interface representing PlanData.
 */
export interface PlanData {
  /**
   * different usage type like PAYG/COMMITTED. this could be enum
   */
  usageType?: string;
  /**
   * different billing cycles like MONTHLY/WEEKLY. this could be enum
   */
  billingCycle?: string;
  /**
   * plan id as published by Logz
   */
  planDetails?: string;
  /**
   * date when plan was applied
   */
  effectiveDate?: Date;
}

/**
 * Properties specific to the monitor resource.
 */
export interface MonitorProperties {
  /**
   * Possible values include: 'Accepted', 'Creating', 'Updating', 'Deleting', 'Succeeded',
   * 'Failed', 'Canceled', 'Deleted', 'NotSpecified'
   */
  provisioningState?: ProvisioningState;
  /**
   * Possible values include: 'Enabled', 'Disabled'
   */
  monitoringStatus?: MonitoringStatus;
  /**
   * Possible values include: 'Active', 'Suspended'
   */
  marketplaceSubscriptionStatus?: MarketplaceSubscriptionStatus;
  logzOrganizationProperties?: LogzOrganizationProperties;
  userInfo?: UserInfo;
  planData?: PlanData;
  /**
   * Possible values include: 'Unknown', 'MonitorLogs'
   */
  liftrResourceCategory?: LiftrResourceCategories;
  /**
   * The priority of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly liftrResourcePreference?: number;
}

/**
 * An interface representing IdentityProperties.
 */
export interface IdentityProperties {
  /**
   * The identity ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The tenant ID of resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
  /**
   * Possible values include: 'SystemAssigned', 'UserAssigned'
   */
  type?: ManagedIdentityTypes;
}

/**
 * An interface representing LogzMonitorResource.
 */
export interface LogzMonitorResource extends BaseResource {
  /**
   * ARM id of the monitor resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The system metadata relating to this resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
  /**
   * Name of the monitor resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the monitor resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  properties?: MonitorProperties;
  identity?: IdentityProperties;
  tags?: { [propertyName: string]: string };
  location: string;
}

/**
 * The set of properties that can be update in a PATCH request to a monitor resource.
 */
export interface MonitorUpdateProperties {
  /**
   * Possible values include: 'Enabled', 'Disabled'
   */
  monitoringStatus?: MonitoringStatus;
}

/**
 * The parameters for a PATCH request to a monitor resource.
 */
export interface LogzMonitorResourceUpdateParameters {
  properties?: MonitorUpdateProperties;
  /**
   * The new tags of the monitor resource.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * The definition of a filtering tag. Filtering tags are used for capturing resources and
 * include/exclude them from being monitored.
 */
export interface FilteringTag {
  /**
   * The name (also known as the key) of the tag.
   */
  name?: string;
  /**
   * The value of the tag.
   */
  value?: string;
  /**
   * Possible values include: 'Include', 'Exclude'
   */
  action?: TagAction;
}

/**
 * Set of rules for sending logs for the Monitor resource.
 */
export interface LogRules {
  /**
   * Flag specifying if AAD logs should be sent for the Monitor resource.
   */
  sendAadLogs?: boolean;
  /**
   * Flag specifying if subscription logs should be sent for the Monitor resource.
   */
  sendSubscriptionLogs?: boolean;
  /**
   * Flag specifying if activity logs from Azure resources should be sent for the Monitor resource.
   */
  sendActivityLogs?: boolean;
  /**
   * List of filtering tags to be used for capturing logs. This only takes effect if
   * SendActivityLogs flag is enabled. If empty, all resources will be captured. If only Exclude
   * action is specified, the rules will apply to the list of all available resources. If Include
   * actions are specified, the rules will only include resources with the associated tags.
   */
  filteringTags?: FilteringTag[];
}

/**
 * Definition of the properties for a TagRules resource.
 */
export interface MonitoringTagRulesProperties {
  logRules?: LogRules;
  systemData?: SystemData;
}

/**
 * Capture logs and metrics of Azure resources based on ARM tags.
 */
export interface MonitoringTagRules extends BaseResource {
  /**
   * Name of the rule set.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The id of the rule set.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The type of the rule set.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The system metadata relating to this resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
  properties?: MonitoringTagRulesProperties;
}

/**
 * An interface representing LogzSingleSignOnProperties.
 */
export interface LogzSingleSignOnProperties {
  /**
   * Possible values include: 'Initial', 'Enable', 'Disable', 'Existing'
   */
  singleSignOnState?: SingleSignOnStates;
  /**
   * The Id of the Enterprise App used for Single sign-on.
   */
  enterpriseAppId?: string;
  /**
   * The login URL specific to this Logz Organization.
   */
  singleSignOnUrl?: string;
  /**
   * Possible values include: 'Accepted', 'Creating', 'Updating', 'Deleting', 'Succeeded',
   * 'Failed', 'Canceled', 'Deleted', 'NotSpecified'
   */
  provisioningState?: ProvisioningState;
}

/**
 * An interface representing LogzSingleSignOnResource.
 */
export interface LogzSingleSignOnResource extends BaseResource {
  /**
   * ARM id of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the configuration.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  systemData?: SystemData;
  properties?: LogzSingleSignOnProperties;
}

/**
 * The resource management error additional info.
 */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly info?: any;
}

/**
 * The error detail.
 */
export interface ErrorDetail {
  /**
   * The error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The error target.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly target?: string;
  /**
   * The error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/**
 * Common error response for all Azure Resource Manager APIs to return error details for failed
 * operations. (This also follows the OData error response format.).
 * @summary Error response
 */
export interface ErrorResponse {
  /**
   * The error object.
   */
  error?: ErrorDetail;
}

/**
 * Optional Parameters.
 */
export interface MonitorsCreateOptionalParams extends msRest.RequestOptionsBase {
  body?: LogzMonitorResource;
}

/**
 * Optional Parameters.
 */
export interface MonitorsUpdateOptionalParams extends msRest.RequestOptionsBase {
  body?: LogzMonitorResourceUpdateParameters;
}

/**
 * Optional Parameters.
 */
export interface MonitorsBeginCreateOptionalParams extends msRest.RequestOptionsBase {
  body?: LogzMonitorResource;
}

/**
 * Optional Parameters.
 */
export interface TagRulesCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  properties?: MonitoringTagRulesProperties;
}

/**
 * Optional Parameters.
 */
export interface SingleSignOnCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  body?: LogzSingleSignOnResource;
}

/**
 * Optional Parameters.
 */
export interface SingleSignOnBeginCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  body?: LogzSingleSignOnResource;
}

/**
 * Optional Parameters.
 */
export interface SubAccountCreateOptionalParams extends msRest.RequestOptionsBase {
  body?: LogzMonitorResource;
}

/**
 * Optional Parameters.
 */
export interface SubAccountUpdateOptionalParams extends msRest.RequestOptionsBase {
  body?: LogzMonitorResourceUpdateParameters;
}

/**
 * Optional Parameters.
 */
export interface SubAccountBeginCreateOptionalParams extends msRest.RequestOptionsBase {
  body?: LogzMonitorResource;
}

/**
 * Optional Parameters.
 */
export interface SubAccountTagRulesCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  properties?: MonitoringTagRulesProperties;
}

/**
 * An interface representing MicrosoftLogzOptions.
 */
export interface MicrosoftLogzOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * Defines headers for Delete operation.
 */
export interface MonitorsDeleteHeaders {
  /**
   * URL to query for status of the operation.
   */
  location: string;
}

/**
 * Defines headers for Delete operation.
 */
export interface TagRulesDeleteHeaders {
  /**
   * URL to query for status of the operation.
   */
  location: string;
}

/**
 * Defines headers for Delete operation.
 */
export interface SubAccountDeleteHeaders {
  /**
   * URL to query for status of the operation.
   */
  location: string;
}

/**
 * Defines headers for Delete operation.
 */
export interface SubAccountTagRulesDeleteHeaders {
  /**
   * URL to query for status of the operation.
   */
  location: string;
}

/**
 * @interface
 * Response of a list operation.
 * @extends Array<MonitoredResource>
 */
export interface MonitoredResourceListResponse extends Array<MonitoredResource> {
  /**
   * Link to the next set of results, if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Response of a list operation.
 * @extends Array<LogzMonitorResource>
 */
export interface LogzMonitorResourceListResponse extends Array<LogzMonitorResource> {
  /**
   * Link to the next set of results, if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Result of GET request to list the Microsoft.Logz operations.
 * @extends Array<OperationResult>
 */
export interface OperationListResult extends Array<OperationResult> {
  /**
   * URL to get the next set of operation list results if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Response of a list operation.
 * @extends Array<MonitoringTagRules>
 */
export interface MonitoringTagRulesListResponse extends Array<MonitoringTagRules> {
  /**
   * Link to the next set of results, if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Response of a list operation.
 * @extends Array<LogzSingleSignOnResource>
 */
export interface LogzSingleSignOnResourceListResponse extends Array<LogzSingleSignOnResource> {
  /**
   * Link to the next set of results, if any.
   */
  nextLink?: string;
}

/**
 * Defines values for CreatedByType.
 * Possible values include: 'User', 'Application', 'ManagedIdentity', 'Key'
 * @readonly
 * @enum {string}
 */
export type CreatedByType = 'User' | 'Application' | 'ManagedIdentity' | 'Key';

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Accepted', 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Failed',
 * 'Canceled', 'Deleted', 'NotSpecified'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState = 'Accepted' | 'Creating' | 'Updating' | 'Deleting' | 'Succeeded' | 'Failed' | 'Canceled' | 'Deleted' | 'NotSpecified';

/**
 * Defines values for MonitoringStatus.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type MonitoringStatus = 'Enabled' | 'Disabled';

/**
 * Defines values for MarketplaceSubscriptionStatus.
 * Possible values include: 'Active', 'Suspended'
 * @readonly
 * @enum {string}
 */
export type MarketplaceSubscriptionStatus = 'Active' | 'Suspended';

/**
 * Defines values for LiftrResourceCategories.
 * Possible values include: 'Unknown', 'MonitorLogs'
 * @readonly
 * @enum {string}
 */
export type LiftrResourceCategories = 'Unknown' | 'MonitorLogs';

/**
 * Defines values for ManagedIdentityTypes.
 * Possible values include: 'SystemAssigned', 'UserAssigned'
 * @readonly
 * @enum {string}
 */
export type ManagedIdentityTypes = 'SystemAssigned' | 'UserAssigned';

/**
 * Defines values for TagAction.
 * Possible values include: 'Include', 'Exclude'
 * @readonly
 * @enum {string}
 */
export type TagAction = 'Include' | 'Exclude';

/**
 * Defines values for SingleSignOnStates.
 * Possible values include: 'Initial', 'Enable', 'Disable', 'Existing'
 * @readonly
 * @enum {string}
 */
export type SingleSignOnStates = 'Initial' | 'Enable' | 'Disable' | 'Existing';

/**
 * Contains response data for the listMonitoredResources operation.
 */
export type MonitorsListMonitoredResourcesResponse = MonitoredResourceListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MonitoredResourceListResponse;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type MonitorsListBySubscriptionResponse = LogzMonitorResourceListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogzMonitorResourceListResponse;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type MonitorsListByResourceGroupResponse = LogzMonitorResourceListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogzMonitorResourceListResponse;
    };
};

/**
 * Contains response data for the get operation.
 */
export type MonitorsGetResponse = LogzMonitorResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogzMonitorResource;
    };
};

/**
 * Contains response data for the create operation.
 */
export type MonitorsCreateResponse = LogzMonitorResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogzMonitorResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type MonitorsUpdateResponse = LogzMonitorResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogzMonitorResource;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type MonitorsDeleteResponse = MonitorsDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: MonitorsDeleteHeaders;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type MonitorsBeginCreateResponse = LogzMonitorResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogzMonitorResource;
    };
};

/**
 * Contains response data for the listMonitoredResourcesNext operation.
 */
export type MonitorsListMonitoredResourcesNextResponse = MonitoredResourceListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MonitoredResourceListResponse;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type MonitorsListBySubscriptionNextResponse = LogzMonitorResourceListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogzMonitorResourceListResponse;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type MonitorsListByResourceGroupNextResponse = LogzMonitorResourceListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogzMonitorResourceListResponse;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type TagRulesListResponse = MonitoringTagRulesListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MonitoringTagRulesListResponse;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type TagRulesCreateOrUpdateResponse = MonitoringTagRules & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MonitoringTagRules;
    };
};

/**
 * Contains response data for the get operation.
 */
export type TagRulesGetResponse = MonitoringTagRules & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MonitoringTagRules;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type TagRulesDeleteResponse = TagRulesDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TagRulesDeleteHeaders;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type TagRulesListNextResponse = MonitoringTagRulesListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MonitoringTagRulesListResponse;
    };
};

/**
 * Contains response data for the list operation.
 */
export type SingleSignOnListResponse = LogzSingleSignOnResourceListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogzSingleSignOnResourceListResponse;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SingleSignOnCreateOrUpdateResponse = LogzSingleSignOnResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogzSingleSignOnResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SingleSignOnGetResponse = LogzSingleSignOnResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogzSingleSignOnResource;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type SingleSignOnBeginCreateOrUpdateResponse = LogzSingleSignOnResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogzSingleSignOnResource;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type SingleSignOnListNextResponse = LogzSingleSignOnResourceListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogzSingleSignOnResourceListResponse;
    };
};

/**
 * Contains response data for the list operation.
 */
export type SubAccountListResponse = LogzMonitorResourceListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogzMonitorResourceListResponse;
    };
};

/**
 * Contains response data for the create operation.
 */
export type SubAccountCreateResponse = LogzMonitorResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogzMonitorResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SubAccountGetResponse = LogzMonitorResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogzMonitorResource;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type SubAccountDeleteResponse = SubAccountDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SubAccountDeleteHeaders;
    };
};

/**
 * Contains response data for the update operation.
 */
export type SubAccountUpdateResponse = LogzMonitorResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogzMonitorResource;
    };
};

/**
 * Contains response data for the listMonitoredResources operation.
 */
export type SubAccountListMonitoredResourcesResponse = MonitoredResourceListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MonitoredResourceListResponse;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type SubAccountBeginCreateResponse = LogzMonitorResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogzMonitorResource;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type SubAccountListNextResponse = LogzMonitorResourceListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogzMonitorResourceListResponse;
    };
};

/**
 * Contains response data for the listMonitoredResourcesNext operation.
 */
export type SubAccountListMonitoredResourcesNextResponse = MonitoredResourceListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MonitoredResourceListResponse;
    };
};

/**
 * Contains response data for the list operation.
 */
export type SubAccountTagRulesListResponse = MonitoringTagRulesListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MonitoringTagRulesListResponse;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SubAccountTagRulesCreateOrUpdateResponse = MonitoringTagRules & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MonitoringTagRules;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SubAccountTagRulesGetResponse = MonitoringTagRules & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MonitoringTagRules;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type SubAccountTagRulesDeleteResponse = SubAccountTagRulesDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SubAccountTagRulesDeleteHeaders;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type SubAccountTagRulesListNextResponse = MonitoringTagRulesListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MonitoringTagRulesListResponse;
    };
};
