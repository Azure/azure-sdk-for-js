/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  VMResources,
  MonitorListVmHostUpdateOptionalParams,
  MonitorListVMHostsOptionalParams,
  MonitorVMHostPayloadOptionalParams,
  MonitorVMHostPayloadResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Monitor. */
export interface Monitor {
  /**
   * Sending request to update the collection when Logz.io agent has been installed on a VM for a given
   * monitor.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param monitorName Monitor resource name
   * @param options The options parameters.
   */
  listVmHostUpdate(
    resourceGroupName: string,
    monitorName: string,
    options?: MonitorListVmHostUpdateOptionalParams
  ): PagedAsyncIterableIterator<VMResources>;
  /**
   * List the compute resources currently being monitored by the Logz main account resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param monitorName Monitor resource name
   * @param options The options parameters.
   */
  listVMHosts(
    resourceGroupName: string,
    monitorName: string,
    options?: MonitorListVMHostsOptionalParams
  ): PagedAsyncIterableIterator<VMResources>;
  /**
   * Returns the payload that needs to be passed in the request body for installing Logz.io agent on a
   * VM.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param monitorName Monitor resource name
   * @param options The options parameters.
   */
  vMHostPayload(
    resourceGroupName: string,
    monitorName: string,
    options?: MonitorVMHostPayloadOptionalParams
  ): Promise<MonitorVMHostPayloadResponse>;
}
