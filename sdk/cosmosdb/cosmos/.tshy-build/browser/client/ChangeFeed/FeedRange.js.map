{"version":3,"file":"FeedRange.js","sourceRoot":"","sources":["../../../../src/client/ChangeFeed/FeedRange.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,EAAE,aAAa,EAAE,MAAM,wBAAwB,CAAC;AAEvD;;GAEG;AACH,MAAM,OAAgB,SAAS;IAS7B;;OAEG;IACH,YAAsB,YAAoB,EAAE,YAAoB;QAC9D,2EAA2E;QAC3E,IAAI,GAAG,CAAC,MAAM,KAAK,SAAS,EAAE,CAAC;YAC7B,MAAM,IAAI,aAAa,CAAC,6CAA6C,CAAC,CAAC;QACzE,CAAC;QAED,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACnC,CAAC;CACF;AAED;;;GAGG;AACH,MAAM,OAAO,iBAAkB,SAAQ,SAAS;IAC9C,8DAA8D;IAC9D,YAAY,YAAoB,EAAE,YAAoB;QACpD,KAAK,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;IACpC,CAAC;CACF","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { ErrorResponse } from \"../../request/index.js\";\n\n/**\n * Specifies a feed range for the changefeed.\n */\nexport abstract class FeedRange {\n  /**\n   * Min value for the feed range.\n   */\n  readonly minInclusive: string;\n  /**\n   * Max value for the feed range.\n   */\n  readonly maxExclusive: string;\n  /**\n   * @internal\n   */\n  protected constructor(minInclusive: string, maxExclusive: string) {\n    // only way to explictly block users from creating FeedRange directly in JS\n    if (new.target === FeedRange) {\n      throw new ErrorResponse(\"Cannot instantiate abstract class FeedRange\");\n    }\n\n    this.minInclusive = minInclusive;\n    this.maxExclusive = maxExclusive;\n  }\n}\n\n/**\n * @hidden\n * Specifies a feed range for the changefeed.\n */\nexport class FeedRangeInternal extends FeedRange {\n  /* eslint-disable @typescript-eslint/no-useless-constructor */\n  constructor(minInclusive: string, maxExclusive: string) {\n    super(minInclusive, maxExclusive);\n  }\n}\n"]}