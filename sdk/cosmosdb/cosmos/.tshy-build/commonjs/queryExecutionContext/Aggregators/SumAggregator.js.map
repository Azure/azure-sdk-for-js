{"version":3,"file":"SumAggregator.js","sourceRoot":"","sources":["../../../../src/queryExecutionContext/Aggregators/SumAggregator.ts"],"names":[],"mappings":";;;AAIA,cAAc;AACd,MAAa,aAAa;IAExB;;OAEG;IACI,SAAS,CAAC,KAAa;QAC5B,IAAI,KAAK,KAAK,SAAS,EAAE,CAAC;YACxB,OAAO;QACT,CAAC;QACD,IAAI,IAAI,CAAC,GAAG,KAAK,SAAS,EAAE,CAAC;YAC3B,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;QACnB,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC;QACpB,CAAC;IACH,CAAC;IAED;;OAEG;IACI,SAAS;QACd,OAAO,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;CACF;AAtBD,sCAsBC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport type { Aggregator } from \"./Aggregator.js\";\n\n/** @hidden */\nexport class SumAggregator implements Aggregator {\n  public sum: number;\n  /**\n   * Add the provided item to aggregation result.\n   */\n  public aggregate(other: number): void {\n    if (other === undefined) {\n      return;\n    }\n    if (this.sum === undefined) {\n      this.sum = other;\n    } else {\n      this.sum += other;\n    }\n  }\n\n  /**\n   * Get the aggregation result.\n   */\n  public getResult(): number {\n    return this.sum;\n  }\n}\n"]}