{"version":3,"file":"ClientEncryptionKeyPropertiesCache.js","sourceRoot":"","sources":["../../../../src/encryption/Cache/ClientEncryptionKeyPropertiesCache.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;;AAIlC;;;;GAIG;AAEH,MAAa,kCAAkC;IAI7C;QACE,IAAI,CAAC,kCAAkC,GAAG,IAAI,GAAG,EAAyC,CAAC;IAC7F,CAAC;IAEM,GAAG,CAAC,GAAW;QACpB,OAAO,IAAI,CAAC,kCAAkC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC1D,CAAC;IACM,GAAG,CAAC,GAAW,EAAE,6BAA4D;QAClF,IAAI,CAAC,kCAAkC,CAAC,GAAG,CAAC,GAAG,EAAE,6BAA6B,CAAC,CAAC;IAClF,CAAC;CACF;AAdD,gFAcC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { ClientEncryptionKeyProperties } from \"../ClientEncryptionKey/index.js\";\n\n/**\n * The cache used to store the properties of the client encryption key\n * see {@link ClientEncryptionKeyProperties}\n * @hidden\n */\n\nexport class ClientEncryptionKeyPropertiesCache {\n  // key is database rid + '/'+ clientEncryptionKeyId\n  private clientEncryptionKeyPropertiesCache: Map<string, ClientEncryptionKeyProperties>;\n\n  public constructor() {\n    this.clientEncryptionKeyPropertiesCache = new Map<string, ClientEncryptionKeyProperties>();\n  }\n\n  public get(key: string): ClientEncryptionKeyProperties | undefined {\n    return this.clientEncryptionKeyPropertiesCache.get(key);\n  }\n  public set(key: string, clientEncryptionKeyProperties: ClientEncryptionKeyProperties): void {\n    this.clientEncryptionKeyPropertiesCache.set(key, clientEncryptionKeyProperties);\n  }\n}\n"]}