{"version":3,"file":"ContainerResponse.js","sourceRoot":"","sources":["../../../../src/client/Container/ContainerResponse.ts"],"names":[],"mappings":";;;AAIA,2EAAqE;AAKrE,+CAA+C;AAC/C,MAAa,iBAAkB,SAAQ,sCAAgD;IACrF,YACE,QAAwC,EACxC,OAAsB,EACtB,UAAkB,EAClB,SAAoB,EACpB,WAA8B;QAE9B,KAAK,CAAC,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;QAClD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;CAGF;AAbD,8CAaC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport type { CosmosDiagnostics } from \"../../CosmosDiagnostics.js\";\nimport type { CosmosHeaders } from \"../../queryExecutionContext/index.js\";\nimport { ResourceResponse } from \"../../request/ResourceResponse.js\";\nimport type { Resource } from \"../Resource.js\";\nimport type { ContainerDefinition } from \"./ContainerDefinition.js\";\nimport type { Container } from \"./index.js\";\n\n/** Response object for Container operations */\nexport class ContainerResponse extends ResourceResponse<ContainerDefinition & Resource> {\n  constructor(\n    resource: ContainerDefinition & Resource,\n    headers: CosmosHeaders,\n    statusCode: number,\n    container: Container,\n    diagnostics: CosmosDiagnostics,\n  ) {\n    super(resource, headers, statusCode, diagnostics);\n    this.container = container;\n  }\n  /** A reference to the {@link Container} that the returned {@link ContainerDefinition} corresponds to. */\n  public readonly container: Container;\n}\n"]}