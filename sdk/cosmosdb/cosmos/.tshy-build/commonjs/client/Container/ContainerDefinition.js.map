{"version":3,"file":"ContainerDefinition.js","sourceRoot":"","sources":["../../../../src/client/Container/ContainerDefinition.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport type { IndexingPolicy, PartitionKeyDefinition } from \"../../documents/index.js\";\nimport type { ConflictResolutionPolicy } from \"../Conflict/ConflictResolutionPolicy.js\";\nimport type { UniqueKeyPolicy } from \"./UniqueKeyPolicy.js\";\nimport type { GeospatialType } from \"../../documents/GeospatialType.js\";\nimport type { ChangeFeedPolicy } from \"../ChangeFeed/ChangeFeedPolicy.js\";\nimport type { ComputedProperty } from \"../../documents/ComputedProperty.js\";\nimport type { VectorEmbeddingPolicy } from \"../../documents/VectorEmbeddingPolicy.js\";\nimport type { FullTextPolicy } from \"../../documents/FullTextPolicy.js\";\nimport { ClientEncryptionPolicy } from \"../../encryption/index.js\";\n\nexport interface ContainerDefinition {\n  /** The id of the container. */\n  id?: string;\n  /** The partition key for the container. */\n  partitionKey?: PartitionKeyDefinition;\n  /** The indexing policy associated with the container. */\n  indexingPolicy?: IndexingPolicy;\n  /** The default time to live in seconds for items in a container. */\n  defaultTtl?: number;\n  /** The conflict resolution policy used to resolve conflicts in a container. */\n  conflictResolutionPolicy?: ConflictResolutionPolicy;\n  /** Policy for additional keys that must be unique per partition key */\n  uniqueKeyPolicy?: UniqueKeyPolicy;\n  /** Geospatial configuration for a collection. Type is set to Geography by default */\n  geospatialConfig?: {\n    type: GeospatialType;\n  };\n  /** Change feed policy related to the container */\n  changeFeedPolicy?: ChangeFeedPolicy;\n  /** The computed properties of the container */\n  computedProperties?: ComputedProperty[];\n  /** The vector embedding policy information for storing items in a container. */\n  vectorEmbeddingPolicy?: VectorEmbeddingPolicy;\n  /** The full text policy information for storing items in a container. */\n  fullTextPolicy?: FullTextPolicy;\n  /** Encryption policy for the container, contains path that needs to be encrypted */\n  clientEncryptionPolicy?: ClientEncryptionPolicy;\n}\n"]}