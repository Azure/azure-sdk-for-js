{"version":3,"file":"ChangeFeedPullModelIterator.js","sourceRoot":"","sources":["../../../../src/client/ChangeFeed/ChangeFeedPullModelIterator.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport type { Resource } from \"../Resource.js\";\nimport type { ChangeFeedIteratorResponse } from \"./ChangeFeedIteratorResponse.js\";\n/**\n * Use `Items.getChangeFeedIterator()` to return an iterator that can iterate over all the changes for a partition key, feed range or an entire container.\n */\nexport interface ChangeFeedPullModelIterator<T> {\n  /**\n   * Always returns true, changefeed is an infinite stream.\n   */\n  readonly hasMoreResults: boolean;\n  /**\n   * Returns next set of results for the change feed.\n   * @example\n   * ```ts snippet:ReadmeSampleChangeFeedPullModelIteratorPartitionKey\n   * import {\n   *   CosmosClient,\n   *   PartitionKeyDefinitionVersion,\n   *   PartitionKeyKind,\n   *   ChangeFeedStartFrom,\n   * } from \"@azure/cosmos\";\n   *\n   * const endpoint = \"https://your-account.documents.azure.com\";\n   * const key = \"<database account masterkey>\";\n   * const client = new CosmosClient({ endpoint, key });\n   *\n   * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n   *\n   * const containerDefinition = {\n   *   id: \"Test Database\",\n   *   partitionKey: {\n   *     paths: [\"/name\", \"/address/zip\"],\n   *     version: PartitionKeyDefinitionVersion.V2,\n   *     kind: PartitionKeyKind.MultiHash,\n   *   },\n   * };\n   * const { container } = await database.containers.createIfNotExists(containerDefinition);\n   *\n   * const partitionKey = \"some-partition-Key-value\";\n   * const options = {\n   *   changeFeedStartFrom: ChangeFeedStartFrom.Beginning(partitionKey),\n   * };\n   *\n   * const iterator = container.items.getChangeFeedIterator(options);\n   *\n   * while (iterator.hasMoreResults) {\n   *   const response = await iterator.readNext();\n   *   // process this response\n   * }\n   * ```\n   */\n  readNext(): Promise<ChangeFeedIteratorResponse<Array<T & Resource>>>;\n  /**\n   * Gets an async iterator which will yield change feed results.\n   * @example Get changefeed for an entire container from now\n   * ```ts snippet:ChangeFeedPullModelIteratorIterate\n   * import { CosmosClient, ChangeFeedStartFrom } from \"@azure/cosmos\";\n   *\n   * const endpoint = \"https://your-account.documents.azure.com\";\n   * const key = \"<database account masterkey>\";\n   * const client = new CosmosClient({ endpoint, key });\n   *\n   * const { database } = await client.databases.createIfNotExists({ id: \"Test Database\" });\n   *\n   * const { container } = await database.containers.createIfNotExists({ id: \"Test Container\" });\n   *\n   * const options = { changeFeedStartFrom: ChangeFeedStartFrom.Now() };\n   * for await (const results of container.items.getChangeFeedIterator(options).getAsyncIterator()) {\n   *   // Process result\n   *   for (const resource of results.result) {\n   *     console.log(resource);\n   *   }\n   * }\n   * ```\n   */\n  getAsyncIterator(): AsyncIterable<ChangeFeedIteratorResponse<Array<T & Resource>>>;\n}\n"]}