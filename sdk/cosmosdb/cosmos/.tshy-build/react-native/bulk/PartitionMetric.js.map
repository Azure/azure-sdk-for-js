{"version":3,"file":"PartitionMetric.js","sourceRoot":"","sources":["../../../src/bulk/PartitionMetric.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,SAAS,MAAM,WAAW,CAAC;AAElC;;GAEG;AACH,MAAM,OAAO,eAAe;IAM1B;QACE,IAAI,CAAC,uBAAuB,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC;IAED,GAAG,CAAC,WAAmB,EAAE,aAAqB,EAAE,cAAsB;QACpE,wFAAwF;QACxF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE;YACvB,IAAI,CAAC;gBACH,IAAI,CAAC,uBAAuB,IAAI,WAAW,CAAC;gBAC5C,IAAI,CAAC,aAAa,IAAI,aAAa,CAAC;gBACpC,IAAI,CAAC,iBAAiB,IAAI,cAAc,CAAC;YAC3C,CAAC;oBAAS,CAAC;gBACT,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACzB,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CACF","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport semaphore from \"semaphore\";\n\n/**\n * Captures the metrics for the requests made for bulk.\n */\nexport class PartitionMetric {\n  numberOfItemsOperatedOn: number;\n  timeTakenInMs: number;\n  numberOfThrottles: number;\n  private semaphore: semaphore.Semaphore;\n\n  constructor() {\n    this.numberOfItemsOperatedOn = 0;\n    this.timeTakenInMs = 0;\n    this.numberOfThrottles = 0;\n    this.semaphore = semaphore(1);\n  }\n\n  add(numberOfDoc: number, timeTakenInMs: number, numOfThrottles: number): void {\n    // these operations should be atomic as multiple dispatch could be updating these values\n    this.semaphore.take(() => {\n      try {\n        this.numberOfItemsOperatedOn += numberOfDoc;\n        this.timeTakenInMs += timeTakenInMs;\n        this.numberOfThrottles += numOfThrottles;\n      } finally {\n        this.semaphore.leave();\n      }\n    });\n  }\n}\n"]}