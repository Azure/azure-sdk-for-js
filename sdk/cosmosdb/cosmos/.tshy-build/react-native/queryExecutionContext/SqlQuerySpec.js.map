{"version":3,"file":"SqlQuerySpec.js","sourceRoot":"","sources":["../../../src/queryExecutionContext/SqlQuerySpec.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Represents a SQL query in the Azure Cosmos DB service.\n *\n * Queries with inputs should be parameterized to protect against SQL injection.\n *\n * @example Parameterized SQL Query\n * ```ts snippet:SqlQuerySpecParameterizedSqlQuery\n * import { SqlQuerySpec } from \"@azure/cosmos\";\n *\n * const query: SqlQuerySpec = {\n *   query: `SELECT * FROM Families f where f.lastName = @lastName`,\n *   parameters: [{ name: \"@lastName\", value: \"Wakefield\" }],\n * };\n * ```\n */\nexport interface SqlQuerySpec {\n  /** The text of the SQL query */\n  query: string;\n  /** The parameters you provide in the query */\n  parameters?: SqlParameter[];\n}\n\n/**\n * Represents a parameter in a Parameterized SQL query, specified in {@link SqlQuerySpec}\n */\nexport interface SqlParameter {\n  /** Name of the parameter. (i.e. `@lastName`) */\n  name: string;\n  /** Value of the parameter (this is safe to come from users, assuming they are authorized) */\n  value: JSONValue;\n}\n\nexport type JSONValue = boolean | number | string | null | JSONArray | JSONObject | Date;\nexport interface JSONObject {\n  [key: string]: JSONValue;\n}\nexport interface JSONArray extends ArrayLike<JSONValue> {}\n"]}