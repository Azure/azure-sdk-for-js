# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - sdk/cosmosdb/cosmos

pr:
  branches:
    include:
    - master
  paths:
    include:
    - sdk/cosmosdb/cosmos

variables:
  NodeVersion: '10.x'

jobs:
  - job: Emulator
    pool:
      vmImage: vs2017-win2016
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '$(NodeVersion)'
        displayName: 'Install Node.js $(NodeVersion)'

      - script: |
          node common/scripts/install-run-rush.js install
        displayName: 'Install dependencies'

      - script: |
          node common/scripts/install-run-rush.js build -t "@azure/cosmos" --verbose
        displayName: 'rush build -t "@azure/cosmos"'

      - script: |
          node common/scripts/install-run-rush.js build:test -t "@azure/cosmos" --verbose
        displayName: 'rush build:test -t "@azure/cosmos"'

      - task: azure-cosmosdb.emulator-public-preview.run-cosmosdbemulatorcontainer.CosmosDbEmulator@2
        displayName: "Run Azure Cosmos DB Emulator container"
        inputs:
          defaultPartitionCount: 25

      - script: |
          node common/scripts/install-run-rush.js integration-test -t "@azure/cosmos" --verbose
        failOnStderr: true
        displayName: 'rush integration-test -t "@azure/cosmos"'
        env:
          ACCOUNT_HOST: $(CosmosDbEmulator.Endpoint)
          MOCHA_TIMEOUT: 100000
          NODE_TLS_REJECT_UNAUTHORIZED: 0

      - task: PublishTestResults@2
        inputs:
          testResultsFiles: '**/test-results.xml'
          testRunTitle: 'Cosmos Emulator Node $(NodeVersion)'
        condition: succeededOrFailed()
        displayName: 'Publish test results'
