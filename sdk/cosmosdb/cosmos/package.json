{
  "name": "@azure/cosmos",
  "version": "4.2.1",
  "description": "Microsoft Azure Cosmos DB Service Node.js SDK for NOSQL API",
  "sdk-type": "client",
  "keywords": [
    "cosmosdb",
    "cosmos db",
    "documentdb",
    "document database",
    "azure",
    "nosql",
    "database",
    "cloud",
    "azure"
  ],
  "author": "Microsoft Corporation",
  "main": "./dist/commonjs/index.js",
  "module": "./dist/esm/index.js",
  "browser": "./dist/browser/index.js",
  "files": [
    "dist/",
    "README.md",
    "LICENSE"
  ],
  "homepage": "https://github.com/Azure/azure-sdk-for-js/tree/main/sdk/cosmosdb/cosmos/README.md",
  "sideEffects": false,
  "//metadata": {
    "constantPaths": [
      {
        "path": "src/common/constants.ts",
        "prefix": "SDKVersion"
      }
    ]
  },
  "types": "./dist/commonjs/index.d.ts",
  "engines": {
    "node": ">=18.0.0"
  },
  "scripts": {
    "build": "npm run clean && dev-tool run build-package && dev-tool run extract-api",
    "build:samples": "echo Obsolete.",
    "build:test": "echo",
    "bundle": "dev-tool run bundle",
    "bundle-types": "node bundle-types.js",
    "check-format": "dev-tool run vendored prettier --list-different --config ../../../.prettierrc.json --ignore-path ../../../.prettierignore \"src/**/*.ts\" \"samples-dev/**/*.ts\" \"test/**/*.ts\" \"*.{js,json}\"",
    "check:src:strict": "tsc --pretty --project tsconfig.strict.json",
    "clean": "dev-tool run vendored rimraf --glob dist dist-esm temp types *.tgz *.html *.log *.tsbuildinfo test/**/*.{js,js.map,d.ts}",
    "execute:samples": "dev-tool samples run samples-dev",
    "extract-api": "npm run check:src:strict && npm run build:src && dev-tool run extract-api",
    "format": "dev-tool run vendored prettier --write --config ../../../.prettierrc.json --ignore-path ../../../.prettierignore \"src/**/*.ts\" \"samples-dev/**/*.ts\" \"test/**/*.ts\" \"*.{js,json}\"",
    "integration-test": "npm run integration-test:node && npm run integration-test:browser",
    "integration-test:browser": "echo skipped",
    "integration-test:node": "dev-tool run vendored cross-env NODE_OPTIONS='--dns-result-order=ipv4first' mocha -r test/mocha.env.ts -r ts-node/register -r dotenv/config -r ./test/public/common/setup.ts --reporter ../../../common/tools/mocha-multi-reporter.js --reporter-option output=test-results.xml \"./test/internal/**/*.spec.ts\" \"./test/public/**/*.spec.ts\"  --timeout 100000",
    "lint": "eslint package.json api-extractor.json src test",
    "lint:fix": "eslint package.json api-extractor.json src test --fix --fix-type [problem,suggestion]",
    "pack": "npm pack 2>&1",
    "test": "npm run unit-test && npm run integration-test",
    "test-consumer": "dev-tool run vendored rimraf consumer-test/node_modules consumer-test/package-lock.json && node consumer-test.js 2>&1",
    "test:browser": "npm run unit-test:browser && npm run integration-test:browser",
    "test:node": "npm run build:test && npm run unit-test:node && npm run integration-test:node",
    "test:signoff": "npm run integration-test:node -- --fgrep \"nosignoff\" --invert",
    "unit-test": "npm run unit-test:node && npm run unit-test:browser",
    "unit-test:browser": "npm run clean && dev-tool run build-package && dev-tool run build-test && dev-tool run test:vitest --browser",
    "unit-test:node": "dev-tool run vendored cross-env NODE_OPTIONS='--dns-result-order=ipv4first' dev-tool run test:vitest",
    "update-snippets": "echo skipped"
  },
  "repository": "github:Azure/azure-sdk-for-js",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/Azure/azure-sdk-for-js/issues"
  },
  "tsdoc": {
    "tsdocFlavor": "AEDoc"
  },
  "dependencies": {
    "@azure/abort-controller": "^2.0.0",
    "@azure/core-auth": "^1.7.1",
    "@azure/core-rest-pipeline": "^1.18.0",
    "@azure/core-tracing": "^1.2.0",
    "@azure/core-util": "^1.11.0",
    "fast-json-stable-stringify": "^2.1.0",
    "priorityqueuejs": "^2.0.0",
    "semaphore": "^1.1.0",
    "tslib": "^2.8.1"
  },
  "devDependencies": {
    "@azure-tools/test-utils-vitest": "^1.0.0",
    "@azure/dev-tool": "^1.0.0",
    "@azure/eslint-plugin-azure-sdk": "^3.0.0",
    "@azure/identity": "^4.5.0",
    "@azure/logger": "^1.0.0",
    "@types/debug": "^4.1.4",
    "@types/node": "^18.0.0",
    "@types/priorityqueuejs": "^1.0.4",
    "@types/semaphore": "^1.1.4",
    "@vitest/browser": "^2.1.8",
    "@vitest/coverage-istanbul": "^2.1.8",
    "dotenv": "^16.0.0",
    "eslint": "^9.9.0",
    "nock": "^13.5.6",
    "playwright": "^1.49.0",
    "typescript": "~5.6.2",
    "vitest": "^2.1.8"
  },
  "//sampleConfiguration": {
    "skip": [
      "EntraAuth.ts",
      "AlterQueryThroughput.ts",
      "Bulk.ts",
      "BulkUpdateWithSproc.ts",
      "ChangeFeed.ts",
      "ContainerManagement.ts",
      "ItemManagement.ts",
      "IndexManagement.ts",
      "DatabaseManagement.ts",
      "QueryThroughput.ts",
      "SasTokenAuth.ts",
      "ServerSideScripts.ts",
      "handleError.ts",
      "ChangeFeedHierarchicalPartitionKey.ts",
      "ChangeFeedIteratorLatestVersion.ts",
      "ChangeFeedIteratorAllVersionsAndDeletes.ts",
      "Diagnostics.ts",
      "HierarchicalPartitioning.ts",
      "FullTextSearch.ts"
    ],
    "productName": "Azure Cosmos DB",
    "productSlugs": [
      "azure-cosmos-db"
    ],
    "requiredResources": {
      "Azure Cosmos DB account": "https://docs.microsoft.com/azure/cosmos-db/how-to-manage-database-account#create-an-account"
    },
    "extraFiles": {
      "./samples-dev/Data/Families.json": [
        "typescript/src/Data/Families.json",
        "javascript/Data/Families.json"
      ]
    }
  },
  "type": "module",
  "tshy": {
    "exports": {
      "./package.json": "./package.json",
      ".": "./src/index.ts"
    },
    "dialects": [
      "esm",
      "commonjs"
    ],
    "esmDialects": [
      "browser",
      "react-native"
    ],
    "selfLink": false
  },
  "exports": {
    "./package.json": "./package.json",
    ".": {
      "browser": {
        "types": "./dist/browser/index.d.ts",
        "default": "./dist/browser/index.js"
      },
      "react-native": {
        "types": "./dist/react-native/index.d.ts",
        "default": "./dist/react-native/index.js"
      },
      "import": {
        "types": "./dist/esm/index.d.ts",
        "default": "./dist/esm/index.js"
      },
      "require": {
        "types": "./dist/commonjs/index.d.ts",
        "default": "./dist/commonjs/index.js"
      }
    }
  }
}
