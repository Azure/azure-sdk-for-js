/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import {
  ChaosFaultResource,
  CosmosDBManagementClient,
} from "@azure/arm-cosmosdb";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";

dotenv.config();

/**
 * This sample demonstrates how to Enable, disable Chaos Fault in a CosmosDB account.
 *
 * @summary Enable, disable Chaos Fault in a CosmosDB account.
 * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/preview/2024-09-01-preview/examples/ChaosFaultEnableDisable.json
 */
async function chaosFaultEnableDisable() {
  const subscriptionId =
    process.env["COSMOSDB_SUBSCRIPTION_ID"] ||
    "00000000-0000-0000-0000-000000000000";
  const resourceGroupName =
    process.env["COSMOSDB_RESOURCE_GROUP"] || "myResourceGroupName";
  const accountName = "myAccountName";
  const chaosFault = "ServiceUnavailability";
  const chaosFaultRequest: ChaosFaultResource = {
    action: "Enable",
    containerName: "testCollection",
    databaseName: "testDatabase",
    region: "EastUS",
  };
  const credential = new DefaultAzureCredential();
  const client = new CosmosDBManagementClient(credential, subscriptionId);
  const result = await client.chaosFault.beginEnableDisableAndWait(
    resourceGroupName,
    accountName,
    chaosFault,
    chaosFaultRequest,
  );
  console.log(result);
}

async function main() {
  chaosFaultEnableDisable();
}

main().catch(console.error);
