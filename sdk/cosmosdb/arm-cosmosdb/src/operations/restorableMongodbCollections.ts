/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/restorableMongodbCollectionsMappers";
import * as Parameters from "../models/parameters";
import { CosmosDBManagementClientContext } from "../cosmosDBManagementClientContext";

/** Class representing a RestorableMongodbCollections. */
export class RestorableMongodbCollections {
  private readonly client: CosmosDBManagementClientContext;

  /**
   * Create a RestorableMongodbCollections.
   * @param {CosmosDBManagementClientContext} client Reference to the service client.
   */
  constructor(client: CosmosDBManagementClientContext) {
    this.client = client;
  }

  /**
   * Show the event feed of all mutations done on all the Azure Cosmos DB MongoDB collections under a
   * specific database.  This helps in scenario where container was accidentally deleted.  This API
   * requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission
   * @param location Cosmos DB region, with spaces between words and each word capitalized.
   * @param instanceId The instanceId GUID of a restorable database account.
   * @param [options] The optional parameters
   * @returns Promise<Models.RestorableMongodbCollectionsListResponse>
   */
  list(
    location: string,
    instanceId: string,
    options?: Models.RestorableMongodbCollectionsListOptionalParams
  ): Promise<Models.RestorableMongodbCollectionsListResponse>;
  /**
   * @param location Cosmos DB region, with spaces between words and each word capitalized.
   * @param instanceId The instanceId GUID of a restorable database account.
   * @param callback The callback
   */
  list(
    location: string,
    instanceId: string,
    callback: msRest.ServiceCallback<Models.RestorableMongodbCollectionsListResult>
  ): void;
  /**
   * @param location Cosmos DB region, with spaces between words and each word capitalized.
   * @param instanceId The instanceId GUID of a restorable database account.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(
    location: string,
    instanceId: string,
    options: Models.RestorableMongodbCollectionsListOptionalParams,
    callback: msRest.ServiceCallback<Models.RestorableMongodbCollectionsListResult>
  ): void;
  list(
    location: string,
    instanceId: string,
    options?:
      | Models.RestorableMongodbCollectionsListOptionalParams
      | msRest.ServiceCallback<Models.RestorableMongodbCollectionsListResult>,
    callback?: msRest.ServiceCallback<Models.RestorableMongodbCollectionsListResult>
  ): Promise<Models.RestorableMongodbCollectionsListResponse> {
    return this.client.sendOperationRequest(
      {
        location,
        instanceId,
        options
      },
      listOperationSpec,
      callback
    ) as Promise<Models.RestorableMongodbCollectionsListResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path:
    "subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableMongodbCollections",
  urlParameters: [Parameters.subscriptionId, Parameters.location, Parameters.instanceId],
  queryParameters: [Parameters.apiVersion, Parameters.restorableMongodbDatabaseRid],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.RestorableMongodbCollectionsListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
