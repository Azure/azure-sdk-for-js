/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  TableGetResults,
  TableResourcesListTablesOptionalParams,
  TableRoleDefinitionResource,
  TableResourcesListTableRoleDefinitionsOptionalParams,
  TableRoleAssignmentResource,
  TableResourcesListTableRoleAssignmentsOptionalParams,
  TableResourcesGetTableOptionalParams,
  TableResourcesGetTableResponse,
  TableCreateUpdateParameters,
  TableResourcesCreateUpdateTableOptionalParams,
  TableResourcesCreateUpdateTableResponse,
  TableResourcesDeleteTableOptionalParams,
  TableResourcesDeleteTableResponse,
  TableResourcesGetTableThroughputOptionalParams,
  TableResourcesGetTableThroughputResponse,
  ThroughputSettingsUpdateParameters,
  TableResourcesUpdateTableThroughputOptionalParams,
  TableResourcesUpdateTableThroughputResponse,
  TableResourcesMigrateTableToAutoscaleOptionalParams,
  TableResourcesMigrateTableToAutoscaleResponse,
  TableResourcesMigrateTableToManualThroughputOptionalParams,
  TableResourcesMigrateTableToManualThroughputResponse,
  ContinuousBackupRestoreLocation,
  TableResourcesRetrieveContinuousBackupInformationOptionalParams,
  TableResourcesRetrieveContinuousBackupInformationResponse,
  TableResourcesGetTableRoleDefinitionOptionalParams,
  TableResourcesGetTableRoleDefinitionResponse,
  TableResourcesCreateUpdateTableRoleDefinitionOptionalParams,
  TableResourcesCreateUpdateTableRoleDefinitionResponse,
  TableResourcesDeleteTableRoleDefinitionOptionalParams,
  TableResourcesGetTableRoleAssignmentOptionalParams,
  TableResourcesGetTableRoleAssignmentResponse,
  TableResourcesCreateUpdateTableRoleAssignmentOptionalParams,
  TableResourcesCreateUpdateTableRoleAssignmentResponse,
  TableResourcesDeleteTableRoleAssignmentOptionalParams,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a TableResources. */
export interface TableResources {
  /**
   * Lists the Tables under an existing Azure Cosmos DB database account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param options The options parameters.
   */
  listTables(
    resourceGroupName: string,
    accountName: string,
    options?: TableResourcesListTablesOptionalParams,
  ): PagedAsyncIterableIterator<TableGetResults>;
  /**
   * Retrieves the list of all Azure Cosmos DB Table Role Definitions.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param options The options parameters.
   */
  listTableRoleDefinitions(
    resourceGroupName: string,
    accountName: string,
    options?: TableResourcesListTableRoleDefinitionsOptionalParams,
  ): PagedAsyncIterableIterator<TableRoleDefinitionResource>;
  /**
   * Retrieves the list of all Azure Cosmos DB Table Role Assignments.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param options The options parameters.
   */
  listTableRoleAssignments(
    resourceGroupName: string,
    accountName: string,
    options?: TableResourcesListTableRoleAssignmentsOptionalParams,
  ): PagedAsyncIterableIterator<TableRoleAssignmentResource>;
  /**
   * Gets the Tables under an existing Azure Cosmos DB database account with the provided name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param tableName Cosmos DB table name.
   * @param options The options parameters.
   */
  getTable(
    resourceGroupName: string,
    accountName: string,
    tableName: string,
    options?: TableResourcesGetTableOptionalParams,
  ): Promise<TableResourcesGetTableResponse>;
  /**
   * Create or update an Azure Cosmos DB Table
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param tableName Cosmos DB table name.
   * @param createUpdateTableParameters The parameters to provide for the current Table.
   * @param options The options parameters.
   */
  beginCreateUpdateTable(
    resourceGroupName: string,
    accountName: string,
    tableName: string,
    createUpdateTableParameters: TableCreateUpdateParameters,
    options?: TableResourcesCreateUpdateTableOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<TableResourcesCreateUpdateTableResponse>,
      TableResourcesCreateUpdateTableResponse
    >
  >;
  /**
   * Create or update an Azure Cosmos DB Table
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param tableName Cosmos DB table name.
   * @param createUpdateTableParameters The parameters to provide for the current Table.
   * @param options The options parameters.
   */
  beginCreateUpdateTableAndWait(
    resourceGroupName: string,
    accountName: string,
    tableName: string,
    createUpdateTableParameters: TableCreateUpdateParameters,
    options?: TableResourcesCreateUpdateTableOptionalParams,
  ): Promise<TableResourcesCreateUpdateTableResponse>;
  /**
   * Deletes an existing Azure Cosmos DB Table.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param tableName Cosmos DB table name.
   * @param options The options parameters.
   */
  beginDeleteTable(
    resourceGroupName: string,
    accountName: string,
    tableName: string,
    options?: TableResourcesDeleteTableOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<TableResourcesDeleteTableResponse>,
      TableResourcesDeleteTableResponse
    >
  >;
  /**
   * Deletes an existing Azure Cosmos DB Table.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param tableName Cosmos DB table name.
   * @param options The options parameters.
   */
  beginDeleteTableAndWait(
    resourceGroupName: string,
    accountName: string,
    tableName: string,
    options?: TableResourcesDeleteTableOptionalParams,
  ): Promise<TableResourcesDeleteTableResponse>;
  /**
   * Gets the RUs per second of the Table under an existing Azure Cosmos DB database account with the
   * provided name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param tableName Cosmos DB table name.
   * @param options The options parameters.
   */
  getTableThroughput(
    resourceGroupName: string,
    accountName: string,
    tableName: string,
    options?: TableResourcesGetTableThroughputOptionalParams,
  ): Promise<TableResourcesGetTableThroughputResponse>;
  /**
   * Update RUs per second of an Azure Cosmos DB Table
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param tableName Cosmos DB table name.
   * @param updateThroughputParameters The parameters to provide for the RUs per second of the current
   *                                   Table.
   * @param options The options parameters.
   */
  beginUpdateTableThroughput(
    resourceGroupName: string,
    accountName: string,
    tableName: string,
    updateThroughputParameters: ThroughputSettingsUpdateParameters,
    options?: TableResourcesUpdateTableThroughputOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<TableResourcesUpdateTableThroughputResponse>,
      TableResourcesUpdateTableThroughputResponse
    >
  >;
  /**
   * Update RUs per second of an Azure Cosmos DB Table
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param tableName Cosmos DB table name.
   * @param updateThroughputParameters The parameters to provide for the RUs per second of the current
   *                                   Table.
   * @param options The options parameters.
   */
  beginUpdateTableThroughputAndWait(
    resourceGroupName: string,
    accountName: string,
    tableName: string,
    updateThroughputParameters: ThroughputSettingsUpdateParameters,
    options?: TableResourcesUpdateTableThroughputOptionalParams,
  ): Promise<TableResourcesUpdateTableThroughputResponse>;
  /**
   * Migrate an Azure Cosmos DB Table from manual throughput to autoscale
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param tableName Cosmos DB table name.
   * @param options The options parameters.
   */
  beginMigrateTableToAutoscale(
    resourceGroupName: string,
    accountName: string,
    tableName: string,
    options?: TableResourcesMigrateTableToAutoscaleOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<TableResourcesMigrateTableToAutoscaleResponse>,
      TableResourcesMigrateTableToAutoscaleResponse
    >
  >;
  /**
   * Migrate an Azure Cosmos DB Table from manual throughput to autoscale
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param tableName Cosmos DB table name.
   * @param options The options parameters.
   */
  beginMigrateTableToAutoscaleAndWait(
    resourceGroupName: string,
    accountName: string,
    tableName: string,
    options?: TableResourcesMigrateTableToAutoscaleOptionalParams,
  ): Promise<TableResourcesMigrateTableToAutoscaleResponse>;
  /**
   * Migrate an Azure Cosmos DB Table from autoscale to manual throughput
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param tableName Cosmos DB table name.
   * @param options The options parameters.
   */
  beginMigrateTableToManualThroughput(
    resourceGroupName: string,
    accountName: string,
    tableName: string,
    options?: TableResourcesMigrateTableToManualThroughputOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<TableResourcesMigrateTableToManualThroughputResponse>,
      TableResourcesMigrateTableToManualThroughputResponse
    >
  >;
  /**
   * Migrate an Azure Cosmos DB Table from autoscale to manual throughput
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param tableName Cosmos DB table name.
   * @param options The options parameters.
   */
  beginMigrateTableToManualThroughputAndWait(
    resourceGroupName: string,
    accountName: string,
    tableName: string,
    options?: TableResourcesMigrateTableToManualThroughputOptionalParams,
  ): Promise<TableResourcesMigrateTableToManualThroughputResponse>;
  /**
   * Retrieves continuous backup information for a table.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param tableName Cosmos DB table name.
   * @param location The name of the continuous backup restore location.
   * @param options The options parameters.
   */
  beginRetrieveContinuousBackupInformation(
    resourceGroupName: string,
    accountName: string,
    tableName: string,
    location: ContinuousBackupRestoreLocation,
    options?: TableResourcesRetrieveContinuousBackupInformationOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<TableResourcesRetrieveContinuousBackupInformationResponse>,
      TableResourcesRetrieveContinuousBackupInformationResponse
    >
  >;
  /**
   * Retrieves continuous backup information for a table.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param tableName Cosmos DB table name.
   * @param location The name of the continuous backup restore location.
   * @param options The options parameters.
   */
  beginRetrieveContinuousBackupInformationAndWait(
    resourceGroupName: string,
    accountName: string,
    tableName: string,
    location: ContinuousBackupRestoreLocation,
    options?: TableResourcesRetrieveContinuousBackupInformationOptionalParams,
  ): Promise<TableResourcesRetrieveContinuousBackupInformationResponse>;
  /**
   * Retrieves the properties of an existing Azure Cosmos DB Table Role Definition with the given Id.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param roleDefinitionId The GUID for the Role Definition.
   * @param options The options parameters.
   */
  getTableRoleDefinition(
    resourceGroupName: string,
    accountName: string,
    roleDefinitionId: string,
    options?: TableResourcesGetTableRoleDefinitionOptionalParams,
  ): Promise<TableResourcesGetTableRoleDefinitionResponse>;
  /**
   * Creates or updates an Azure Cosmos DB Table Role Definition.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param roleDefinitionId The GUID for the Role Definition.
   * @param createUpdateTableRoleDefinitionParameters The properties required to create or update a Role
   *                                                  Definition.
   * @param options The options parameters.
   */
  beginCreateUpdateTableRoleDefinition(
    resourceGroupName: string,
    accountName: string,
    roleDefinitionId: string,
    createUpdateTableRoleDefinitionParameters: TableRoleDefinitionResource,
    options?: TableResourcesCreateUpdateTableRoleDefinitionOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<TableResourcesCreateUpdateTableRoleDefinitionResponse>,
      TableResourcesCreateUpdateTableRoleDefinitionResponse
    >
  >;
  /**
   * Creates or updates an Azure Cosmos DB Table Role Definition.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param roleDefinitionId The GUID for the Role Definition.
   * @param createUpdateTableRoleDefinitionParameters The properties required to create or update a Role
   *                                                  Definition.
   * @param options The options parameters.
   */
  beginCreateUpdateTableRoleDefinitionAndWait(
    resourceGroupName: string,
    accountName: string,
    roleDefinitionId: string,
    createUpdateTableRoleDefinitionParameters: TableRoleDefinitionResource,
    options?: TableResourcesCreateUpdateTableRoleDefinitionOptionalParams,
  ): Promise<TableResourcesCreateUpdateTableRoleDefinitionResponse>;
  /**
   * Deletes an existing Azure Cosmos DB Table Role Definition.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param roleDefinitionId The GUID for the Role Definition.
   * @param options The options parameters.
   */
  beginDeleteTableRoleDefinition(
    resourceGroupName: string,
    accountName: string,
    roleDefinitionId: string,
    options?: TableResourcesDeleteTableRoleDefinitionOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Deletes an existing Azure Cosmos DB Table Role Definition.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param roleDefinitionId The GUID for the Role Definition.
   * @param options The options parameters.
   */
  beginDeleteTableRoleDefinitionAndWait(
    resourceGroupName: string,
    accountName: string,
    roleDefinitionId: string,
    options?: TableResourcesDeleteTableRoleDefinitionOptionalParams,
  ): Promise<void>;
  /**
   * Retrieves the properties of an existing Azure Cosmos DB Table Role Assignment with the given Id.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param roleAssignmentId The GUID for the Role Assignment.
   * @param options The options parameters.
   */
  getTableRoleAssignment(
    resourceGroupName: string,
    accountName: string,
    roleAssignmentId: string,
    options?: TableResourcesGetTableRoleAssignmentOptionalParams,
  ): Promise<TableResourcesGetTableRoleAssignmentResponse>;
  /**
   * Creates or updates an Azure Cosmos DB Table Role Assignment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param roleAssignmentId The GUID for the Role Assignment.
   * @param createUpdateTableRoleAssignmentParameters The properties required to create or update a Role
   *                                                  Assignment.
   * @param options The options parameters.
   */
  beginCreateUpdateTableRoleAssignment(
    resourceGroupName: string,
    accountName: string,
    roleAssignmentId: string,
    createUpdateTableRoleAssignmentParameters: TableRoleAssignmentResource,
    options?: TableResourcesCreateUpdateTableRoleAssignmentOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<TableResourcesCreateUpdateTableRoleAssignmentResponse>,
      TableResourcesCreateUpdateTableRoleAssignmentResponse
    >
  >;
  /**
   * Creates or updates an Azure Cosmos DB Table Role Assignment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param roleAssignmentId The GUID for the Role Assignment.
   * @param createUpdateTableRoleAssignmentParameters The properties required to create or update a Role
   *                                                  Assignment.
   * @param options The options parameters.
   */
  beginCreateUpdateTableRoleAssignmentAndWait(
    resourceGroupName: string,
    accountName: string,
    roleAssignmentId: string,
    createUpdateTableRoleAssignmentParameters: TableRoleAssignmentResource,
    options?: TableResourcesCreateUpdateTableRoleAssignmentOptionalParams,
  ): Promise<TableResourcesCreateUpdateTableRoleAssignmentResponse>;
  /**
   * Deletes an existing Azure Cosmos DB Table Role Assignment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param roleAssignmentId The GUID for the Role Assignment.
   * @param options The options parameters.
   */
  beginDeleteTableRoleAssignment(
    resourceGroupName: string,
    accountName: string,
    roleAssignmentId: string,
    options?: TableResourcesDeleteTableRoleAssignmentOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Deletes an existing Azure Cosmos DB Table Role Assignment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param roleAssignmentId The GUID for the Role Assignment.
   * @param options The options parameters.
   */
  beginDeleteTableRoleAssignmentAndWait(
    resourceGroupName: string,
    accountName: string,
    roleAssignmentId: string,
    options?: TableResourcesDeleteTableRoleAssignmentOptionalParams,
  ): Promise<void>;
}
