/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  MongoCluster,
  MongoClustersListOptionalParams,
  MongoClustersListByResourceGroupOptionalParams,
  FirewallRule,
  MongoClustersListFirewallRulesOptionalParams,
  MongoClustersCreateOrUpdateOptionalParams,
  MongoClustersCreateOrUpdateResponse,
  MongoClustersGetOptionalParams,
  MongoClustersGetResponse,
  MongoClustersDeleteOptionalParams,
  MongoClustersDeleteResponse,
  MongoClusterUpdate,
  MongoClustersUpdateOptionalParams,
  MongoClustersUpdateResponse,
  MongoClustersCreateOrUpdateFirewallRuleOptionalParams,
  MongoClustersCreateOrUpdateFirewallRuleResponse,
  MongoClustersDeleteFirewallRuleOptionalParams,
  MongoClustersDeleteFirewallRuleResponse,
  MongoClustersGetFirewallRuleOptionalParams,
  MongoClustersGetFirewallRuleResponse,
  CheckNameAvailabilityRequest,
  MongoClustersCheckNameAvailabilityOptionalParams,
  MongoClustersCheckNameAvailabilityResponse,
  MongoClustersListConnectionStringsOptionalParams,
  MongoClustersListConnectionStringsResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a MongoClusters. */
export interface MongoClusters {
  /**
   * List all the mongo clusters in a given subscription.
   * @param options The options parameters.
   */
  list(
    options?: MongoClustersListOptionalParams
  ): PagedAsyncIterableIterator<MongoCluster>;
  /**
   * List all the mongo clusters in a given resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: MongoClustersListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<MongoCluster>;
  /**
   * List all the firewall rules in a given mongo cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param mongoClusterName The name of the mongo cluster.
   * @param options The options parameters.
   */
  listFirewallRules(
    resourceGroupName: string,
    mongoClusterName: string,
    options?: MongoClustersListFirewallRulesOptionalParams
  ): PagedAsyncIterableIterator<FirewallRule>;
  /**
   * Create or update a mongo cluster. Update overwrites all properties for the resource. To only modify
   * some of the properties, use PATCH.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param mongoClusterName The name of the mongo cluster.
   * @param parameters The required parameters for creating or updating a mongo cluster.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    mongoClusterName: string,
    parameters: MongoCluster,
    options?: MongoClustersCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<MongoClustersCreateOrUpdateResponse>,
      MongoClustersCreateOrUpdateResponse
    >
  >;
  /**
   * Create or update a mongo cluster. Update overwrites all properties for the resource. To only modify
   * some of the properties, use PATCH.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param mongoClusterName The name of the mongo cluster.
   * @param parameters The required parameters for creating or updating a mongo cluster.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    mongoClusterName: string,
    parameters: MongoCluster,
    options?: MongoClustersCreateOrUpdateOptionalParams
  ): Promise<MongoClustersCreateOrUpdateResponse>;
  /**
   * Gets information about a mongo cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param mongoClusterName The name of the mongo cluster.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    mongoClusterName: string,
    options?: MongoClustersGetOptionalParams
  ): Promise<MongoClustersGetResponse>;
  /**
   * Deletes a mongo cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param mongoClusterName The name of the mongo cluster.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    mongoClusterName: string,
    options?: MongoClustersDeleteOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<MongoClustersDeleteResponse>,
      MongoClustersDeleteResponse
    >
  >;
  /**
   * Deletes a mongo cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param mongoClusterName The name of the mongo cluster.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    mongoClusterName: string,
    options?: MongoClustersDeleteOptionalParams
  ): Promise<MongoClustersDeleteResponse>;
  /**
   * Updates an existing mongo cluster. The request body can contain one to many of the properties
   * present in the normal mongo cluster definition.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param mongoClusterName The name of the mongo cluster.
   * @param parameters The parameters for updating a mongo cluster.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    mongoClusterName: string,
    parameters: MongoClusterUpdate,
    options?: MongoClustersUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<MongoClustersUpdateResponse>,
      MongoClustersUpdateResponse
    >
  >;
  /**
   * Updates an existing mongo cluster. The request body can contain one to many of the properties
   * present in the normal mongo cluster definition.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param mongoClusterName The name of the mongo cluster.
   * @param parameters The parameters for updating a mongo cluster.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    mongoClusterName: string,
    parameters: MongoClusterUpdate,
    options?: MongoClustersUpdateOptionalParams
  ): Promise<MongoClustersUpdateResponse>;
  /**
   * Creates a new firewall rule or updates an existing firewall rule on a mongo cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param mongoClusterName The name of the mongo cluster.
   * @param firewallRuleName The name of the mongo cluster firewall rule.
   * @param parameters The required parameters for creating or updating a firewall rule.
   * @param options The options parameters.
   */
  beginCreateOrUpdateFirewallRule(
    resourceGroupName: string,
    mongoClusterName: string,
    firewallRuleName: string,
    parameters: FirewallRule,
    options?: MongoClustersCreateOrUpdateFirewallRuleOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<MongoClustersCreateOrUpdateFirewallRuleResponse>,
      MongoClustersCreateOrUpdateFirewallRuleResponse
    >
  >;
  /**
   * Creates a new firewall rule or updates an existing firewall rule on a mongo cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param mongoClusterName The name of the mongo cluster.
   * @param firewallRuleName The name of the mongo cluster firewall rule.
   * @param parameters The required parameters for creating or updating a firewall rule.
   * @param options The options parameters.
   */
  beginCreateOrUpdateFirewallRuleAndWait(
    resourceGroupName: string,
    mongoClusterName: string,
    firewallRuleName: string,
    parameters: FirewallRule,
    options?: MongoClustersCreateOrUpdateFirewallRuleOptionalParams
  ): Promise<MongoClustersCreateOrUpdateFirewallRuleResponse>;
  /**
   * Deletes a mongo cluster firewall rule.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param mongoClusterName The name of the mongo cluster.
   * @param firewallRuleName The name of the mongo cluster firewall rule.
   * @param options The options parameters.
   */
  beginDeleteFirewallRule(
    resourceGroupName: string,
    mongoClusterName: string,
    firewallRuleName: string,
    options?: MongoClustersDeleteFirewallRuleOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<MongoClustersDeleteFirewallRuleResponse>,
      MongoClustersDeleteFirewallRuleResponse
    >
  >;
  /**
   * Deletes a mongo cluster firewall rule.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param mongoClusterName The name of the mongo cluster.
   * @param firewallRuleName The name of the mongo cluster firewall rule.
   * @param options The options parameters.
   */
  beginDeleteFirewallRuleAndWait(
    resourceGroupName: string,
    mongoClusterName: string,
    firewallRuleName: string,
    options?: MongoClustersDeleteFirewallRuleOptionalParams
  ): Promise<MongoClustersDeleteFirewallRuleResponse>;
  /**
   * Gets information about a mongo cluster firewall rule.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param mongoClusterName The name of the mongo cluster.
   * @param firewallRuleName The name of the mongo cluster firewall rule.
   * @param options The options parameters.
   */
  getFirewallRule(
    resourceGroupName: string,
    mongoClusterName: string,
    firewallRuleName: string,
    options?: MongoClustersGetFirewallRuleOptionalParams
  ): Promise<MongoClustersGetFirewallRuleResponse>;
  /**
   * Check the availability of name for resource
   * @param location The name of the Azure region.
   * @param parameters The required parameters for checking if resource name is available.
   * @param options The options parameters.
   */
  checkNameAvailability(
    location: string,
    parameters: CheckNameAvailabilityRequest,
    options?: MongoClustersCheckNameAvailabilityOptionalParams
  ): Promise<MongoClustersCheckNameAvailabilityResponse>;
  /**
   * List mongo cluster connection strings. This includes the default connection string using
   * SCRAM-SHA-256, as well as other connection strings supported by the cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param mongoClusterName The name of the mongo cluster.
   * @param options The options parameters.
   */
  listConnectionStrings(
    resourceGroupName: string,
    mongoClusterName: string,
    options?: MongoClustersListConnectionStringsOptionalParams
  ): Promise<MongoClustersListConnectionStringsResponse>;
}
