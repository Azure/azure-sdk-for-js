/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  ServiceResource,
  ServiceListOptionalParams,
  ServiceResourceCreateUpdateParameters,
  ServiceCreateOptionalParams,
  ServiceCreateResponse,
  ServiceGetOptionalParams,
  ServiceGetResponse,
  ServiceDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Service. */
export interface Service {
  /**
   * Gets the status of service.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    accountName: string,
    options?: ServiceListOptionalParams
  ): PagedAsyncIterableIterator<ServiceResource>;
  /**
   * Creates a service.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param serviceName Cosmos DB service name.
   * @param createUpdateParameters The Service resource parameters.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    accountName: string,
    serviceName: string,
    createUpdateParameters: ServiceResourceCreateUpdateParameters,
    options?: ServiceCreateOptionalParams
  ): Promise<
    PollerLike<PollOperationState<ServiceCreateResponse>, ServiceCreateResponse>
  >;
  /**
   * Creates a service.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param serviceName Cosmos DB service name.
   * @param createUpdateParameters The Service resource parameters.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    accountName: string,
    serviceName: string,
    createUpdateParameters: ServiceResourceCreateUpdateParameters,
    options?: ServiceCreateOptionalParams
  ): Promise<ServiceCreateResponse>;
  /**
   * Gets the status of service.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param serviceName Cosmos DB service name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    serviceName: string,
    options?: ServiceGetOptionalParams
  ): Promise<ServiceGetResponse>;
  /**
   * Deletes service with the given serviceName.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param serviceName Cosmos DB service name.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    accountName: string,
    serviceName: string,
    options?: ServiceDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes service with the given serviceName.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Cosmos DB database account name.
   * @param serviceName Cosmos DB service name.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    accountName: string,
    serviceName: string,
    options?: ServiceDeleteOptionalParams
  ): Promise<void>;
}
