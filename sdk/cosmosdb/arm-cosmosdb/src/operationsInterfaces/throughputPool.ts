/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  ThroughputPoolGetOptionalParams,
  ThroughputPoolGetResponse,
  ThroughputPoolResource,
  ThroughputPoolCreateOrUpdateOptionalParams,
  ThroughputPoolCreateOrUpdateResponse,
  ThroughputPoolUpdateOptionalParams,
  ThroughputPoolUpdateResponse,
  ThroughputPoolDeleteOptionalParams,
  ThroughputPoolDeleteResponse,
} from "../models";

/** Interface representing a ThroughputPool. */
export interface ThroughputPool {
  /**
   * Retrieves the properties of an existing Azure Cosmos DB Throughput Pool
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param throughputPoolName Cosmos DB Throughput Pool name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    throughputPoolName: string,
    options?: ThroughputPoolGetOptionalParams,
  ): Promise<ThroughputPoolGetResponse>;
  /**
   * Creates or updates an Azure Cosmos DB ThroughputPool account. The "Update" method is preferred when
   * performing updates on an account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param throughputPoolName Cosmos DB Throughput Pool name.
   * @param body The parameters to provide for the current ThroughputPool.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    throughputPoolName: string,
    body: ThroughputPoolResource,
    options?: ThroughputPoolCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ThroughputPoolCreateOrUpdateResponse>,
      ThroughputPoolCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates an Azure Cosmos DB ThroughputPool account. The "Update" method is preferred when
   * performing updates on an account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param throughputPoolName Cosmos DB Throughput Pool name.
   * @param body The parameters to provide for the current ThroughputPool.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    throughputPoolName: string,
    body: ThroughputPoolResource,
    options?: ThroughputPoolCreateOrUpdateOptionalParams,
  ): Promise<ThroughputPoolCreateOrUpdateResponse>;
  /**
   * Updates the properties of an existing Azure Cosmos DB Throughput Pool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param throughputPoolName Cosmos DB Throughput Pool name.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    throughputPoolName: string,
    options?: ThroughputPoolUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ThroughputPoolUpdateResponse>,
      ThroughputPoolUpdateResponse
    >
  >;
  /**
   * Updates the properties of an existing Azure Cosmos DB Throughput Pool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param throughputPoolName Cosmos DB Throughput Pool name.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    throughputPoolName: string,
    options?: ThroughputPoolUpdateOptionalParams,
  ): Promise<ThroughputPoolUpdateResponse>;
  /**
   * Deletes an existing Azure Cosmos DB Throughput Pool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param throughputPoolName Cosmos DB Throughput Pool name.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    throughputPoolName: string,
    options?: ThroughputPoolDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ThroughputPoolDeleteResponse>,
      ThroughputPoolDeleteResponse
    >
  >;
  /**
   * Deletes an existing Azure Cosmos DB Throughput Pool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param throughputPoolName Cosmos DB Throughput Pool name.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    throughputPoolName: string,
    options?: ThroughputPoolDeleteOptionalParams,
  ): Promise<ThroughputPoolDeleteResponse>;
}
